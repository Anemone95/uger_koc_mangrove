[23079]
1 :: ENTR :: entry :: null :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.AbstractLazyTest.before()::CD,5:CD,10:CD,14:CD,19:CD,24:CD,28:CD,36:CD,50:CD,54:CD,58:CD,62:JM,17998:CD,71
5 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
10 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getConfiguration()::CL,17826:CL,17820:CL,17832
14 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v3.append(v7)::
19 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#(.xml))::
24 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
28 :: CALL :: call :: Ljava/io/Reader :: v16 = getResourceAsReader(v14)::CL,17838
36 :: CALL :: call :: Lorg/apache/ibatis/session/SqlSessionFactory :: v20 = v17.build(v16)::CL,17886
50 :: CALL :: call :: Lorg/apache/ibatis/session/SqlSession :: v24 = v22.openSession()::CL,17903
54 :: CALL :: call :: Ljava/sql/Connection :: v26 = v24.getConnection()::CL,17926
58 :: CALL :: call :: Ljava/io/Reader :: v29 = getResourceAsReader(#(org/apache/ibatis/sub...))::JM,19763:CL,17838
62 :: NORM :: declaration :: Lorg/apache/ibatis/jdbc/ScriptRunner :: v30 = new org.apache.ibatis.jdbc.ScriptRunner::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295
71 :: CALL :: call :: V :: v30.runScript(v29)::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295:CL,18026
424 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.<clinit>()::JM,18137
436 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.<clinit>()::CD,439:CD,444
439 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator), #())::JM,439:JM,444
444 :: EXPR :: modify :: Ljava/lang/String :: org.apache.ibatis.jdbc.ScriptRunner.LINE_SEPARATOR = v5::
459 :: ENTR :: entry :: null :: org.apache.ibatis.executor.ErrorContext.<clinit>()::CD,469
469 :: NORM :: declaration :: Ljava/lang/ThreadLocal :: v6 = new java.lang.ThreadLocal::
481 :: ENTR :: entry :: null :: org.apache.ibatis.session.LocalCacheScope.<clinit>()::CD,484:CD,490:CD,492:CD,498:CD,500:CD,501:CD,507
484 :: NORM :: declaration :: Lorg/apache/ibatis/session/LocalCacheScope :: v2 = new org.apache.ibatis.session.LocalCacheScope::DD,490
490 :: EXPR :: modify :: Lorg/apache/ibatis/session/LocalCacheScope :: org.apache.ibatis.session.LocalCacheScope.SESSION = v2::
492 :: NORM :: declaration :: Lorg/apache/ibatis/session/LocalCacheScope :: v6 = new org.apache.ibatis.session.LocalCacheScope::DD,498
498 :: EXPR :: modify :: Lorg/apache/ibatis/session/LocalCacheScope :: org.apache.ibatis.session.LocalCacheScope.STATEMENT = v6::
500 :: NORM :: declaration :: [Lorg/apache/ibatis/session/LocalCacheScope :: v11 = new org.apache.ibatis.session.LocalCacheScope[]::
501 :: EXPR :: reference :: Lorg/apache/ibatis/session/LocalCacheScope :: v12 = org.apache.ibatis.session.LocalCacheScope.SESSION::DD,503
503 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
507 :: EXPR :: reference :: Lorg/apache/ibatis/session/LocalCacheScope :: v13 = org.apache.ibatis.session.LocalCacheScope.STATEMENT::DD,509
509 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
532 :: ENTR :: entry :: null :: org.apache.ibatis.type.JdbcType.<clinit>()::CD,535:JM,18221:CD,542:CD,544:CD,551:CD,553:CD,560:CD,562:CD,569:CD,571:CD,578:CD,580:CD,587:CD,589:CD,596:CD,598:CD,605:CD,607:CD,614:CD,616:CD,623:CD,625:CD,632:CD,634:CD,641:CD,643:CD,650:CD,652:CD,659:CD,661:CD,668:CD,670:CD,677:CD,679:CD,686:CD,688:CD,695:CD,697:CD,704:CD,706:CD,713:CD,715:CD,722:CD,724:CD,731:CD,733:CD,740:CD,742:CD,749:CD,751:CD,758:CD,760:CD,767:CD,769:CD,776:CD,778:CD,785:CD,787:CD,794:CD,796:CD,803:CD,805:CD,812:CD,814:CD,821:CD,823:CD,830:CD,832:CD,839:CD,841:CD,848:CD,850:CD,857:CD,859:CD,866:CD,868:CD,875:CD,877:CD,884:CD,886:CD,887:CD,893:CD,899:CD,905:CD,911:CD,917:CD,923:CD,929:CD,935:CD,941:CD,947:CD,953:CD,959:CD,965:CD,971:CD,977:CD,983:CD,989:CD,995:CD,1001:CD,1007:CD,1013:CD,1019:CD,1025:CD,1031:CD,1037:CD,1043:CD,1049:CD,1055:CD,1061:CD,1067:CD,1073:CD,1079:CD,1085:CD,1091:CD,1097:CD,1103:CD,1109:CD,1115:CD,1123:CD,1129:CD,1132:CD,1154:CD,1156
535 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v2 = new org.apache.ibatis.type.JdbcType::DD,542
542 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.ARRAY = v2::
544 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v7 = new org.apache.ibatis.type.JdbcType::DD,551
551 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.BIT = v7::
553 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v12 = new org.apache.ibatis.type.JdbcType::DD,560
560 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.TINYINT = v12::
562 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v17 = new org.apache.ibatis.type.JdbcType::DD,569
569 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.SMALLINT = v17::
571 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v22 = new org.apache.ibatis.type.JdbcType::DD,578
578 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.INTEGER = v22::
580 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v26 = new org.apache.ibatis.type.JdbcType::DD,587
587 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.BIGINT = v26::
589 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v30 = new org.apache.ibatis.type.JdbcType::DD,596
596 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.FLOAT = v30::
598 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v34 = new org.apache.ibatis.type.JdbcType::DD,605
605 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.REAL = v34::
607 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v38 = new org.apache.ibatis.type.JdbcType::DD,614
614 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DOUBLE = v38::
616 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v42 = new org.apache.ibatis.type.JdbcType::DD,623
623 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.NUMERIC = v42::
625 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v46 = new org.apache.ibatis.type.JdbcType::DD,632
632 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DECIMAL = v46::
634 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v50 = new org.apache.ibatis.type.JdbcType::DD,641
641 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.CHAR = v50::
643 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v54 = new org.apache.ibatis.type.JdbcType::DD,650
650 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.VARCHAR = v54::
652 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v58 = new org.apache.ibatis.type.JdbcType::DD,659
659 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.LONGVARCHAR = v58::
661 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v63 = new org.apache.ibatis.type.JdbcType::DD,668
668 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DATE = v63::
670 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v68 = new org.apache.ibatis.type.JdbcType::DD,677
677 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.TIME = v68::
679 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v73 = new org.apache.ibatis.type.JdbcType::DD,686
686 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.TIMESTAMP = v73::
688 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v78 = new org.apache.ibatis.type.JdbcType::DD,695
695 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.BINARY = v78::
697 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v83 = new org.apache.ibatis.type.JdbcType::DD,704
704 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.VARBINARY = v83::
706 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v88 = new org.apache.ibatis.type.JdbcType::DD,713
713 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.LONGVARBINARY = v88::
715 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v93 = new org.apache.ibatis.type.JdbcType::DD,722
722 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.NULL = v93::
724 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v97 = new org.apache.ibatis.type.JdbcType::DD,731
731 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.OTHER = v97::
733 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v102 = new org.apache.ibatis.type.JdbcType::DD,740
740 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.BLOB = v102::
742 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v107 = new org.apache.ibatis.type.JdbcType::DD,749
749 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.CLOB = v107::
751 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v112 = new org.apache.ibatis.type.JdbcType::DD,758
758 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.BOOLEAN = v112::
760 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v116 = new org.apache.ibatis.type.JdbcType::DD,767
767 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.CURSOR = v116::
769 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v121 = new org.apache.ibatis.type.JdbcType::DD,776
776 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.UNDEFINED = v121::
778 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v126 = new org.apache.ibatis.type.JdbcType::DD,785
785 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.NVARCHAR = v126::
787 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v131 = new org.apache.ibatis.type.JdbcType::DD,794
794 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.NCHAR = v131::
796 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v136 = new org.apache.ibatis.type.JdbcType::DD,803
803 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.NCLOB = v136::
805 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v141 = new org.apache.ibatis.type.JdbcType::DD,812
812 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.STRUCT = v141::
814 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v146 = new org.apache.ibatis.type.JdbcType::DD,821
821 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.JAVA_OBJECT = v146::
823 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v151 = new org.apache.ibatis.type.JdbcType::DD,830
830 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DISTINCT = v151::
832 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v156 = new org.apache.ibatis.type.JdbcType::DD,839
839 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.REF = v156::
841 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v161 = new org.apache.ibatis.type.JdbcType::DD,848
848 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DATALINK = v161::
850 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v166 = new org.apache.ibatis.type.JdbcType::DD,857
857 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.ROWID = v166::
859 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v171 = new org.apache.ibatis.type.JdbcType::DD,866
866 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.LONGNVARCHAR = v171::
868 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v176 = new org.apache.ibatis.type.JdbcType::DD,875
875 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.SQLXML = v176::
877 :: NORM :: declaration :: Lorg/apache/ibatis/type/JdbcType :: v181 = new org.apache.ibatis.type.JdbcType::DD,884
884 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.DATETIMEOFFSET = v181::
886 :: NORM :: declaration :: [Lorg/apache/ibatis/type/JdbcType :: v187 = new org.apache.ibatis.type.JdbcType[]::
887 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v188 = org.apache.ibatis.type.JdbcType.ARRAY::DD,889
889 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(0)] = v188::
893 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v189 = org.apache.ibatis.type.JdbcType.BIT::DD,895
895 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(1)] = v189::
899 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v190 = org.apache.ibatis.type.JdbcType.TINYINT::DD,901
901 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(2)] = v190::
905 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v191 = org.apache.ibatis.type.JdbcType.SMALLINT::DD,907
907 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(3)] = v191::
911 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v192 = org.apache.ibatis.type.JdbcType.INTEGER::DD,913
913 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(4)] = v192::
917 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v193 = org.apache.ibatis.type.JdbcType.BIGINT::DD,919
919 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(5)] = v193::
923 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v194 = org.apache.ibatis.type.JdbcType.FLOAT::DD,925
925 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(6)] = v194::
929 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v195 = org.apache.ibatis.type.JdbcType.REAL::DD,931
931 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(7)] = v195::
935 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v196 = org.apache.ibatis.type.JdbcType.DOUBLE::DD,937
937 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(8)] = v196::
941 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v197 = org.apache.ibatis.type.JdbcType.NUMERIC::DD,943
943 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(9)] = v197::
947 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v198 = org.apache.ibatis.type.JdbcType.DECIMAL::DD,949
949 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(10)] = v198::
953 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v199 = org.apache.ibatis.type.JdbcType.CHAR::DD,955
955 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(11)] = v199::
959 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v200 = org.apache.ibatis.type.JdbcType.VARCHAR::DD,961
961 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(12)] = v200::
965 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v201 = org.apache.ibatis.type.JdbcType.LONGVARCHAR::DD,967
967 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(13)] = v201::
971 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v202 = org.apache.ibatis.type.JdbcType.DATE::DD,973
973 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(14)] = v202::
977 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v203 = org.apache.ibatis.type.JdbcType.TIME::DD,979
979 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(15)] = v203::
983 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v204 = org.apache.ibatis.type.JdbcType.TIMESTAMP::DD,985
985 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(16)] = v204::
989 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v205 = org.apache.ibatis.type.JdbcType.BINARY::DD,991
991 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(17)] = v205::
995 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v206 = org.apache.ibatis.type.JdbcType.VARBINARY::DD,997
997 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(18)] = v206::
1001 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v207 = org.apache.ibatis.type.JdbcType.LONGVARBINARY::DD,1003
1003 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(19)] = v207::
1007 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v208 = org.apache.ibatis.type.JdbcType.NULL::DD,1009
1009 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(20)] = v208::
1013 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v209 = org.apache.ibatis.type.JdbcType.OTHER::DD,1015
1015 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(21)] = v209::
1019 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v210 = org.apache.ibatis.type.JdbcType.BLOB::DD,1021
1021 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(22)] = v210::
1025 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v211 = org.apache.ibatis.type.JdbcType.CLOB::DD,1027
1027 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(23)] = v211::
1031 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v212 = org.apache.ibatis.type.JdbcType.BOOLEAN::DD,1033
1033 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(24)] = v212::
1037 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v213 = org.apache.ibatis.type.JdbcType.CURSOR::DD,1039
1039 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(25)] = v213::
1043 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v214 = org.apache.ibatis.type.JdbcType.UNDEFINED::DD,1045
1045 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(26)] = v214::
1049 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v215 = org.apache.ibatis.type.JdbcType.NVARCHAR::DD,1051
1051 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(27)] = v215::
1055 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v216 = org.apache.ibatis.type.JdbcType.NCHAR::DD,1057
1057 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(28)] = v216::
1061 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v217 = org.apache.ibatis.type.JdbcType.NCLOB::DD,1063
1063 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(29)] = v217::
1067 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v218 = org.apache.ibatis.type.JdbcType.STRUCT::DD,1069
1069 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(30)] = v218::
1073 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v219 = org.apache.ibatis.type.JdbcType.JAVA_OBJECT::DD,1075
1075 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(31)] = v219::
1079 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v220 = org.apache.ibatis.type.JdbcType.DISTINCT::DD,1081
1081 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(32)] = v220::
1085 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v221 = org.apache.ibatis.type.JdbcType.REF::DD,1087
1087 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(33)] = v221::
1091 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v222 = org.apache.ibatis.type.JdbcType.DATALINK::DD,1093
1093 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(34)] = v222::
1097 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v223 = org.apache.ibatis.type.JdbcType.ROWID::DD,1099
1099 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(35)] = v223::
1103 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v224 = org.apache.ibatis.type.JdbcType.LONGNVARCHAR::DD,1105
1105 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(36)] = v224::
1109 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v225 = org.apache.ibatis.type.JdbcType.SQLXML::DD,1111
1111 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(37)] = v225::
1115 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v226 = org.apache.ibatis.type.JdbcType.DATETIMEOFFSET::DD,1117
1117 :: EXPR :: modify :: Ljava/lang/Object :: v187[#(38)] = v226::
1123 :: NORM :: declaration :: Ljava/util/HashMap :: v227 = new java.util.HashMap::
1129 :: CALL :: call :: [Lorg/apache/ibatis/type/JdbcType :: v230 = values()::JM,1132:CL,18230
1132 :: EXPR :: assign :: I :: v231 = v230.length::DD,1154
1134 :: EXPR :: reference :: Ljava/lang/Object :: v232 = v230[v240]::
1140 :: EXPR :: reference :: I :: v234 = v232.TYPE_CODE::
1143 :: CALL :: call :: Ljava/lang/Integer :: v236 = valueOf(v234)::
1147 :: CALL :: call :: Ljava/lang/Object :: v238 = v233.put(v236, v232)::
1153 :: EXPR :: assign :: Ljava/lang/Object :: v239 = v240 + #(1)::DD,1156
1154 :: PRED :: IF :: Z :: if (v240 < v231) goto 921::CD,1143:CD,1147:CD,1153:CD,1156
1156 :: EXPR :: assign :: null :: PHI v240 = #(0), v239::DD,1153:DD,1154
1489 :: ENTR :: entry :: null :: org.apache.ibatis.session.ExecutorType.<clinit>()::CD,1492:CD,1498:CD,1500:CD,1506:CD,1508:CD,1514:CD,1516:CD,1517:CD,1523:CD,1529
1492 :: NORM :: declaration :: Lorg/apache/ibatis/session/ExecutorType :: v2 = new org.apache.ibatis.session.ExecutorType::DD,1498
1498 :: EXPR :: modify :: Lorg/apache/ibatis/session/ExecutorType :: org.apache.ibatis.session.ExecutorType.SIMPLE = v2::
1500 :: NORM :: declaration :: Lorg/apache/ibatis/session/ExecutorType :: v6 = new org.apache.ibatis.session.ExecutorType::DD,1506
1506 :: EXPR :: modify :: Lorg/apache/ibatis/session/ExecutorType :: org.apache.ibatis.session.ExecutorType.REUSE = v6::
1508 :: NORM :: declaration :: Lorg/apache/ibatis/session/ExecutorType :: v10 = new org.apache.ibatis.session.ExecutorType::DD,1514
1514 :: EXPR :: modify :: Lorg/apache/ibatis/session/ExecutorType :: org.apache.ibatis.session.ExecutorType.BATCH = v10::
1516 :: NORM :: declaration :: [Lorg/apache/ibatis/session/ExecutorType :: v15 = new org.apache.ibatis.session.ExecutorType[]::
1517 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v16 = org.apache.ibatis.session.ExecutorType.SIMPLE::DD,1519
1519 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1523 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v17 = org.apache.ibatis.session.ExecutorType.REUSE::DD,1525
1525 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1529 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v18 = org.apache.ibatis.session.ExecutorType.BATCH::DD,1531
1531 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1561 :: ENTR :: entry :: null :: org.apache.ibatis.session.AutoMappingBehavior.<clinit>()::CD,1564:CD,1570:CD,1572:CD,1578:CD,1580:CD,1586:CD,1588:CD,1589:CD,1595:CD,1601
1564 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v2 = new org.apache.ibatis.session.AutoMappingBehavior::DD,1570
1570 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingBehavior :: org.apache.ibatis.session.AutoMappingBehavior.NONE = v2::
1572 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v6 = new org.apache.ibatis.session.AutoMappingBehavior::DD,1578
1578 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingBehavior :: org.apache.ibatis.session.AutoMappingBehavior.PARTIAL = v6::
1580 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v10 = new org.apache.ibatis.session.AutoMappingBehavior::DD,1586
1586 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingBehavior :: org.apache.ibatis.session.AutoMappingBehavior.FULL = v10::
1588 :: NORM :: declaration :: [Lorg/apache/ibatis/session/AutoMappingBehavior :: v15 = new org.apache.ibatis.session.AutoMappingBehavior[]::
1589 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v16 = org.apache.ibatis.session.AutoMappingBehavior.NONE::DD,1591
1591 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1595 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v17 = org.apache.ibatis.session.AutoMappingBehavior.PARTIAL::DD,1597
1597 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1601 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v18 = org.apache.ibatis.session.AutoMappingBehavior.FULL::DD,1603
1603 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1633 :: ENTR :: entry :: null :: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.<clinit>()::CD,1636:CD,1642:CD,1644:CD,1650:CD,1652:CD,1658:CD,1660:CD,1661:CD,1667:CD,1673:CD,1682
1636 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior$1 :: v2 = new org.apache.ibatis.session.AutoMappingUnknownColumnBehavior$1::DD,1642
1642 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.NONE = v2::
1644 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior$2 :: v6 = new org.apache.ibatis.session.AutoMappingUnknownColumnBehavior$2::DD,1650
1650 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.WARNING = v6::
1652 :: NORM :: declaration :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior$3 :: v10 = new org.apache.ibatis.session.AutoMappingUnknownColumnBehavior$3::DD,1658
1658 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.FAILING = v10::
1660 :: NORM :: declaration :: [Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v15 = new org.apache.ibatis.session.AutoMappingUnknownColumnBehavior[]::
1661 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v16 = org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.NONE::DD,1663
1663 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1667 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v17 = org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.WARNING::DD,1669
1669 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1673 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v18 = org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.FAILING::DD,1675
1675 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1682 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v21 = getLog(v19)::CL,18461
1713 :: ENTR :: entry :: null :: org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory.<clinit>()::CD,1717
1717 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
1725 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.<clinit>()::CF,1728
1728 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
1749 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.VendorDatabaseIdProvider.<clinit>()::CD,1753
1753 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
1773 :: ENTR :: entry :: null :: org.apache.ibatis.executor.loader.cglib.CglibProxyFactory.<clinit>()::CD,1777
1777 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
1785 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.<clinit>()::CD,1792:CD,1799:CD,1806:CD,1813:CD,1820:CD,1827
1792 :: CALL :: call :: V :: tryImplementation(v2)::CL,18484
1799 :: CALL :: call :: V :: tryImplementation(v5)::CL,18484
1806 :: CALL :: call :: V :: tryImplementation(v8)::CL,18484
1813 :: CALL :: call :: V :: tryImplementation(v11)::CL,18484
1820 :: CALL :: call :: V :: tryImplementation(v14)::CL,18484
1827 :: CALL :: call :: V :: tryImplementation(v17)::CL,18484
1837 :: ENTR :: entry :: null :: org.apache.ibatis.type.UnknownTypeHandler.<clinit>()::JM,24176
1853 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1861 :: NORM :: declaration :: [J :: v9 = new []::
1862 :: EXPR :: modify :: J :: v9[#(2)] = #(1024 l)::
1866 :: EXPR :: modify :: J :: v9[#(3)] = #(1624 l)::
1870 :: EXPR :: modify :: J :: v9[#(4)] = #(2048 l)::
1874 :: EXPR :: modify :: J :: v9[#(5)] = #(2378 l)::
1878 :: EXPR :: modify :: J :: v9[#(6)] = #(2648 l)::
1882 :: EXPR :: modify :: J :: v9[#(7)] = #(2875 l)::
1886 :: EXPR :: modify :: J :: v9[#(8)] = #(3072 l)::
1890 :: EXPR :: modify :: J :: v9[#(9)] = #(3247 l)::
1894 :: EXPR :: modify :: J :: v9[#(10)] = #(3402 l)::
1898 :: EXPR :: modify :: J :: v9[#(11)] = #(3543 l)::
1902 :: EXPR :: modify :: J :: v9[#(12)] = #(3672 l)::
1906 :: EXPR :: modify :: J :: v9[#(13)] = #(3790 l)::
1910 :: EXPR :: modify :: J :: v9[#(14)] = #(3899 l)::
1914 :: EXPR :: modify :: J :: v9[#(15)] = #(4001 l)::
1918 :: EXPR :: modify :: J :: v9[#(16)] = #(4096 l)::
1922 :: EXPR :: modify :: J :: v9[#(17)] = #(4186 l)::
1926 :: EXPR :: modify :: J :: v9[#(18)] = #(4271 l)::
1930 :: EXPR :: modify :: J :: v9[#(19)] = #(4350 l)::
1934 :: EXPR :: modify :: J :: v9[#(20)] = #(4426 l)::
1938 :: EXPR :: modify :: J :: v9[#(21)] = #(4498 l)::
1942 :: EXPR :: modify :: J :: v9[#(22)] = #(4567 l)::
1946 :: EXPR :: modify :: J :: v9[#(23)] = #(4633 l)::
1950 :: EXPR :: modify :: J :: v9[#(24)] = #(4696 l)::
1954 :: EXPR :: modify :: J :: v9[#(25)] = #(4756 l)::
1958 :: EXPR :: modify :: J :: v9[#(26)] = #(4814 l)::
1962 :: EXPR :: modify :: J :: v9[#(27)] = #(4870 l)::
1966 :: EXPR :: modify :: J :: v9[#(28)] = #(4923 l)::
1970 :: EXPR :: modify :: J :: v9[#(29)] = #(4975 l)::
1974 :: EXPR :: modify :: J :: v9[#(30)] = #(5025 l)::
1978 :: EXPR :: modify :: J :: v9[#(31)] = #(5074 l)::
1982 :: EXPR :: modify :: J :: v9[#(32)] = #(5120 l)::
1986 :: EXPR :: modify :: J :: v9[#(33)] = #(5166 l)::
1990 :: EXPR :: modify :: J :: v9[#(34)] = #(5210 l)::
1994 :: EXPR :: modify :: J :: v9[#(35)] = #(5253 l)::
1998 :: EXPR :: modify :: J :: v9[#(36)] = #(5295 l)::
2004 :: CALL :: call :: Ljava/math/BigInteger :: v82 = valueOf(#(152125131763605 l))::
2010 :: NORM :: declaration :: [Ljava/math/BigInteger :: v83 = new java.math.BigInteger[]::CF,2011
2011 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.posConst = v83::
2013 :: NORM :: declaration :: [Ljava/math/BigInteger :: v84 = new java.math.BigInteger[]::CF,2014
2014 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.negConst = v84::
2017 :: NORM :: declaration :: [I :: v85 = new []::
2022 :: EXPR :: reference :: [Ljava/math/BigInteger :: v86 = java.math.BigInteger.posConst::CF,2024
2024 :: NORM :: declaration :: Ljava/math/BigInteger :: v87 = new java.math.BigInteger::DD,2030
2030 :: EXPR :: modify :: Ljava/lang/Object :: v86[v94] = v87::
2034 :: EXPR :: reference :: [Ljava/math/BigInteger :: v89 = java.math.BigInteger.negConst::CF,2036
2036 :: NORM :: declaration :: Ljava/math/BigInteger :: v90 = new java.math.BigInteger::DD,2042
2042 :: EXPR :: modify :: Ljava/lang/Object :: v89[v94] = v90::
2046 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v94 + #(1)::DD,3439
2047 :: PRED :: IF :: Z :: if (v94 <= #(16)) goto 295::CF,2048:CD,2017:CD,2022:CD,2024:CD,2034:CD,2036:CD,2046:CD,3439
2048 :: NORM :: declaration :: Ljava/math/BigInteger :: v95 = new java.math.BigInteger::CF,2049
2049 :: NORM :: declaration :: [I :: v96 = new []::
2057 :: CALL :: call :: Ljava/math/BigInteger :: v100 = valueOf(#(1 l))::
2063 :: CALL :: call :: Ljava/math/BigInteger :: v103 = valueOf(#(2 l))::
2069 :: CALL :: call :: Ljava/math/BigInteger :: v106 = valueOf(#(10 l))::
2075 :: NORM :: declaration :: [I :: v107 = new []::
2076 :: EXPR :: modify :: I :: v107[#(0)] = #(7)::
2080 :: EXPR :: modify :: I :: v107[#(1)] = #(25)::
2084 :: EXPR :: modify :: I :: v107[#(2)] = #(81)::
2088 :: EXPR :: modify :: I :: v107[#(3)] = #(241)::
2092 :: EXPR :: modify :: I :: v107[#(4)] = #(673)::
2096 :: EXPR :: modify :: I :: v107[#(5)] = #(1793)::
2100 :: EXPR :: modify :: I :: v107[#(6)] = #(2147483647)::
2106 :: NORM :: declaration :: [B :: v114 = new []::
2107 :: EXPR :: modify :: B :: v114[#(0)] = #(-25)::
2111 :: EXPR :: modify :: B :: v114[#(2)] = #(1)::
2115 :: EXPR :: modify :: B :: v114[#(4)] = #(2)::
2119 :: EXPR :: modify :: B :: v114[#(6)] = #(1)::
2123 :: EXPR :: modify :: B :: v114[#(8)] = #(3)::
2127 :: EXPR :: modify :: B :: v114[#(10)] = #(1)::
2131 :: EXPR :: modify :: B :: v114[#(12)] = #(2)::
2135 :: EXPR :: modify :: B :: v114[#(14)] = #(1)::
2139 :: EXPR :: modify :: B :: v114[#(16)] = #(4)::
2143 :: EXPR :: modify :: B :: v114[#(18)] = #(1)::
2147 :: EXPR :: modify :: B :: v114[#(20)] = #(2)::
2151 :: EXPR :: modify :: B :: v114[#(22)] = #(1)::
2155 :: EXPR :: modify :: B :: v114[#(24)] = #(3)::
2159 :: EXPR :: modify :: B :: v114[#(26)] = #(1)::
2163 :: EXPR :: modify :: B :: v114[#(28)] = #(2)::
2167 :: EXPR :: modify :: B :: v114[#(30)] = #(1)::
2171 :: EXPR :: modify :: B :: v114[#(32)] = #(5)::
2175 :: EXPR :: modify :: B :: v114[#(34)] = #(1)::
2179 :: EXPR :: modify :: B :: v114[#(36)] = #(2)::
2183 :: EXPR :: modify :: B :: v114[#(38)] = #(1)::
2187 :: EXPR :: modify :: B :: v114[#(40)] = #(3)::
2191 :: EXPR :: modify :: B :: v114[#(42)] = #(1)::
2195 :: EXPR :: modify :: B :: v114[#(44)] = #(2)::
2199 :: EXPR :: modify :: B :: v114[#(46)] = #(1)::
2203 :: EXPR :: modify :: B :: v114[#(48)] = #(4)::
2207 :: EXPR :: modify :: B :: v114[#(50)] = #(1)::
2211 :: EXPR :: modify :: B :: v114[#(52)] = #(2)::
2215 :: EXPR :: modify :: B :: v114[#(54)] = #(1)::
2219 :: EXPR :: modify :: B :: v114[#(56)] = #(3)::
2223 :: EXPR :: modify :: B :: v114[#(58)] = #(1)::
2227 :: EXPR :: modify :: B :: v114[#(60)] = #(2)::
2231 :: EXPR :: modify :: B :: v114[#(62)] = #(1)::
2235 :: EXPR :: modify :: B :: v114[#(64)] = #(6)::
2239 :: EXPR :: modify :: B :: v114[#(66)] = #(1)::
2243 :: EXPR :: modify :: B :: v114[#(68)] = #(2)::
2247 :: EXPR :: modify :: B :: v114[#(70)] = #(1)::
2251 :: EXPR :: modify :: B :: v114[#(72)] = #(3)::
2255 :: EXPR :: modify :: B :: v114[#(74)] = #(1)::
2259 :: EXPR :: modify :: B :: v114[#(76)] = #(2)::
2263 :: EXPR :: modify :: B :: v114[#(78)] = #(1)::
2267 :: EXPR :: modify :: B :: v114[#(80)] = #(4)::
2271 :: EXPR :: modify :: B :: v114[#(82)] = #(1)::
2275 :: EXPR :: modify :: B :: v114[#(84)] = #(2)::
2279 :: EXPR :: modify :: B :: v114[#(86)] = #(1)::
2283 :: EXPR :: modify :: B :: v114[#(88)] = #(3)::
2287 :: EXPR :: modify :: B :: v114[#(90)] = #(1)::
2291 :: EXPR :: modify :: B :: v114[#(92)] = #(2)::
2295 :: EXPR :: modify :: B :: v114[#(94)] = #(1)::
2299 :: EXPR :: modify :: B :: v114[#(96)] = #(5)::
2303 :: EXPR :: modify :: B :: v114[#(98)] = #(1)::
2307 :: EXPR :: modify :: B :: v114[#(100)] = #(2)::
2311 :: EXPR :: modify :: B :: v114[#(102)] = #(1)::
2315 :: EXPR :: modify :: B :: v114[#(104)] = #(3)::
2319 :: EXPR :: modify :: B :: v114[#(106)] = #(1)::
2323 :: EXPR :: modify :: B :: v114[#(108)] = #(2)::
2327 :: EXPR :: modify :: B :: v114[#(110)] = #(1)::
2331 :: EXPR :: modify :: B :: v114[#(112)] = #(4)::
2335 :: EXPR :: modify :: B :: v114[#(114)] = #(1)::
2339 :: EXPR :: modify :: B :: v114[#(116)] = #(2)::
2343 :: EXPR :: modify :: B :: v114[#(118)] = #(1)::
2347 :: EXPR :: modify :: B :: v114[#(120)] = #(3)::
2351 :: EXPR :: modify :: B :: v114[#(122)] = #(1)::
2355 :: EXPR :: modify :: B :: v114[#(124)] = #(2)::
2359 :: EXPR :: modify :: B :: v114[#(126)] = #(1)::
2363 :: EXPR :: modify :: B :: v114[#(128)] = #(7)::
2367 :: EXPR :: modify :: B :: v114[#(130)] = #(1)::
2371 :: EXPR :: modify :: B :: v114[#(132)] = #(2)::
2375 :: EXPR :: modify :: B :: v114[#(134)] = #(1)::
2379 :: EXPR :: modify :: B :: v114[#(136)] = #(3)::
2383 :: EXPR :: modify :: B :: v114[#(138)] = #(1)::
2387 :: EXPR :: modify :: B :: v114[#(140)] = #(2)::
2391 :: EXPR :: modify :: B :: v114[#(142)] = #(1)::
2395 :: EXPR :: modify :: B :: v114[#(144)] = #(4)::
2399 :: EXPR :: modify :: B :: v114[#(146)] = #(1)::
2403 :: EXPR :: modify :: B :: v114[#(148)] = #(2)::
2407 :: EXPR :: modify :: B :: v114[#(150)] = #(1)::
2411 :: EXPR :: modify :: B :: v114[#(152)] = #(3)::
2415 :: EXPR :: modify :: B :: v114[#(154)] = #(1)::
2419 :: EXPR :: modify :: B :: v114[#(156)] = #(2)::
2423 :: EXPR :: modify :: B :: v114[#(158)] = #(1)::
2427 :: EXPR :: modify :: B :: v114[#(160)] = #(5)::
2431 :: EXPR :: modify :: B :: v114[#(162)] = #(1)::
2435 :: EXPR :: modify :: B :: v114[#(164)] = #(2)::
2439 :: EXPR :: modify :: B :: v114[#(166)] = #(1)::
2443 :: EXPR :: modify :: B :: v114[#(168)] = #(3)::
2447 :: EXPR :: modify :: B :: v114[#(170)] = #(1)::
2451 :: EXPR :: modify :: B :: v114[#(172)] = #(2)::
2455 :: EXPR :: modify :: B :: v114[#(174)] = #(1)::
2459 :: EXPR :: modify :: B :: v114[#(176)] = #(4)::
2463 :: EXPR :: modify :: B :: v114[#(178)] = #(1)::
2467 :: EXPR :: modify :: B :: v114[#(180)] = #(2)::
2471 :: EXPR :: modify :: B :: v114[#(182)] = #(1)::
2475 :: EXPR :: modify :: B :: v114[#(184)] = #(3)::
2479 :: EXPR :: modify :: B :: v114[#(186)] = #(1)::
2483 :: EXPR :: modify :: B :: v114[#(188)] = #(2)::
2487 :: EXPR :: modify :: B :: v114[#(190)] = #(1)::
2491 :: EXPR :: modify :: B :: v114[#(192)] = #(6)::
2495 :: EXPR :: modify :: B :: v114[#(194)] = #(1)::
2499 :: EXPR :: modify :: B :: v114[#(196)] = #(2)::
2503 :: EXPR :: modify :: B :: v114[#(198)] = #(1)::
2507 :: EXPR :: modify :: B :: v114[#(200)] = #(3)::
2511 :: EXPR :: modify :: B :: v114[#(202)] = #(1)::
2515 :: EXPR :: modify :: B :: v114[#(204)] = #(2)::
2519 :: EXPR :: modify :: B :: v114[#(206)] = #(1)::
2523 :: EXPR :: modify :: B :: v114[#(208)] = #(4)::
2527 :: EXPR :: modify :: B :: v114[#(210)] = #(1)::
2531 :: EXPR :: modify :: B :: v114[#(212)] = #(2)::
2535 :: EXPR :: modify :: B :: v114[#(214)] = #(1)::
2539 :: EXPR :: modify :: B :: v114[#(216)] = #(3)::
2543 :: EXPR :: modify :: B :: v114[#(218)] = #(1)::
2547 :: EXPR :: modify :: B :: v114[#(220)] = #(2)::
2551 :: EXPR :: modify :: B :: v114[#(222)] = #(1)::
2555 :: EXPR :: modify :: B :: v114[#(224)] = #(5)::
2559 :: EXPR :: modify :: B :: v114[#(226)] = #(1)::
2563 :: EXPR :: modify :: B :: v114[#(228)] = #(2)::
2567 :: EXPR :: modify :: B :: v114[#(230)] = #(1)::
2571 :: EXPR :: modify :: B :: v114[#(232)] = #(3)::
2575 :: EXPR :: modify :: B :: v114[#(234)] = #(1)::
2579 :: EXPR :: modify :: B :: v114[#(236)] = #(2)::
2583 :: EXPR :: modify :: B :: v114[#(238)] = #(1)::
2587 :: EXPR :: modify :: B :: v114[#(240)] = #(4)::
2591 :: EXPR :: modify :: B :: v114[#(242)] = #(1)::
2595 :: EXPR :: modify :: B :: v114[#(244)] = #(2)::
2599 :: EXPR :: modify :: B :: v114[#(246)] = #(1)::
2603 :: EXPR :: modify :: B :: v114[#(248)] = #(3)::
2607 :: EXPR :: modify :: B :: v114[#(250)] = #(1)::
2611 :: EXPR :: modify :: B :: v114[#(252)] = #(2)::
2615 :: EXPR :: modify :: B :: v114[#(254)] = #(1)::
2621 :: NORM :: declaration :: [Ljava/lang/String :: v225 = new java.lang.String[]::CF,2622
2622 :: EXPR :: modify :: [Ljava/lang/String :: java.math.BigInteger.zeros = v225::
2624 :: EXPR :: reference :: [Ljava/lang/String :: v226 = java.math.BigInteger.zeros::
2626 :: EXPR :: modify :: Ljava/lang/Object :: v226[#(63)] = #(000000000000000000000...)::
2631 :: EXPR :: reference :: [Ljava/lang/String :: v229 = java.math.BigInteger.zeros::
2633 :: EXPR :: reference :: [Ljava/lang/String :: v230 = java.math.BigInteger.zeros::
2635 :: EXPR :: reference :: Ljava/lang/Object :: v231 = v230[#(63)]::JM,2645
2639 :: CALL :: call :: Ljava/lang/String :: v233 = v231.substring(#(0), v235)::JM,2645
2645 :: EXPR :: modify :: Ljava/lang/Object :: v229[v235] = v233::
2649 :: EXPR :: assign :: Ljava/lang/Object :: v234 = v235 + #(1)::DD,3440
2650 :: PRED :: IF :: Z :: if (v235 < #(63)) goto 1158::CD,2631:CD,2633:CD,2639:CD,2649:CD,3440:CF,2651
2651 :: NORM :: declaration :: [I :: v236 = new []::
2652 :: EXPR :: modify :: I :: v236[#(2)] = #(62)::
2656 :: EXPR :: modify :: I :: v236[#(3)] = #(39)::
2660 :: EXPR :: modify :: I :: v236[#(4)] = #(31)::
2664 :: EXPR :: modify :: I :: v236[#(5)] = #(27)::
2668 :: EXPR :: modify :: I :: v236[#(6)] = #(24)::
2672 :: EXPR :: modify :: I :: v236[#(7)] = #(22)::
2676 :: EXPR :: modify :: I :: v236[#(8)] = #(20)::
2680 :: EXPR :: modify :: I :: v236[#(9)] = #(19)::
2684 :: EXPR :: modify :: I :: v236[#(10)] = #(18)::
2688 :: EXPR :: modify :: I :: v236[#(11)] = #(18)::
2692 :: EXPR :: modify :: I :: v236[#(12)] = #(17)::
2696 :: EXPR :: modify :: I :: v236[#(13)] = #(17)::
2700 :: EXPR :: modify :: I :: v236[#(14)] = #(16)::
2704 :: EXPR :: modify :: I :: v236[#(15)] = #(16)::
2708 :: EXPR :: modify :: I :: v236[#(16)] = #(15)::
2712 :: EXPR :: modify :: I :: v236[#(17)] = #(15)::
2716 :: EXPR :: modify :: I :: v236[#(18)] = #(15)::
2720 :: EXPR :: modify :: I :: v236[#(19)] = #(14)::
2724 :: EXPR :: modify :: I :: v236[#(20)] = #(14)::
2728 :: EXPR :: modify :: I :: v236[#(21)] = #(14)::
2732 :: EXPR :: modify :: I :: v236[#(22)] = #(14)::
2736 :: EXPR :: modify :: I :: v236[#(23)] = #(13)::
2740 :: EXPR :: modify :: I :: v236[#(24)] = #(13)::
2744 :: EXPR :: modify :: I :: v236[#(25)] = #(13)::
2748 :: EXPR :: modify :: I :: v236[#(26)] = #(13)::
2752 :: EXPR :: modify :: I :: v236[#(27)] = #(13)::
2756 :: EXPR :: modify :: I :: v236[#(28)] = #(13)::
2760 :: EXPR :: modify :: I :: v236[#(29)] = #(12)::
2764 :: EXPR :: modify :: I :: v236[#(30)] = #(12)::
2768 :: EXPR :: modify :: I :: v236[#(31)] = #(12)::
2772 :: EXPR :: modify :: I :: v236[#(32)] = #(12)::
2776 :: EXPR :: modify :: I :: v236[#(33)] = #(12)::
2780 :: EXPR :: modify :: I :: v236[#(34)] = #(12)::
2784 :: EXPR :: modify :: I :: v236[#(35)] = #(12)::
2788 :: EXPR :: modify :: I :: v236[#(36)] = #(12)::
2794 :: NORM :: declaration :: [Ljava/math/BigInteger :: v238 = new java.math.BigInteger[]::JM,2799
2795 :: CALL :: call :: Ljava/math/BigInteger :: v241 = valueOf(#(4611686018427387904 l))::JM,2799
2799 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(2)] = v241::
2803 :: CALL :: call :: Ljava/math/BigInteger :: v244 = valueOf(#(4052555153018976267 l))::JM,2807
2807 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(3)] = v244::
2811 :: CALL :: call :: Ljava/math/BigInteger :: v246 = valueOf(#(4611686018427387904 l))::JM,2815
2815 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(4)] = v246::
2819 :: CALL :: call :: Ljava/math/BigInteger :: v249 = valueOf(#(7450580596923828125 l))::JM,2823
2823 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(5)] = v249::
2827 :: CALL :: call :: Ljava/math/BigInteger :: v252 = valueOf(#(4738381338321616896 l))::JM,2831
2831 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(6)] = v252::
2835 :: CALL :: call :: Ljava/math/BigInteger :: v255 = valueOf(#(3909821048582988049 l))::JM,2839
2839 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(7)] = v255::
2843 :: CALL :: call :: Ljava/math/BigInteger :: v258 = valueOf(#(1152921504606846976 l))::JM,2847
2847 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(8)] = v258::
2851 :: CALL :: call :: Ljava/math/BigInteger :: v261 = valueOf(#(1350851717672992089 l))::JM,2855
2855 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(9)] = v261::
2859 :: CALL :: call :: Ljava/math/BigInteger :: v264 = valueOf(#(1000000000000000000 l))::JM,2863
2863 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(10)] = v264::
2867 :: CALL :: call :: Ljava/math/BigInteger :: v267 = valueOf(#(5559917313492231481 l))::JM,2871
2871 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(11)] = v267::
2875 :: CALL :: call :: Ljava/math/BigInteger :: v270 = valueOf(#(2218611106740436992 l))::JM,2879
2879 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(12)] = v270::
2883 :: CALL :: call :: Ljava/math/BigInteger :: v273 = valueOf(#(8650415919381337933 l))::JM,2887
2887 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(13)] = v273::
2891 :: CALL :: call :: Ljava/math/BigInteger :: v276 = valueOf(#(2177953337809371136 l))::JM,2895
2895 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(14)] = v276::
2899 :: CALL :: call :: Ljava/math/BigInteger :: v279 = valueOf(#(6568408355712890625 l))::JM,2903
2903 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(15)] = v279::
2907 :: CALL :: call :: Ljava/math/BigInteger :: v281 = valueOf(#(1152921504606846976 l))::JM,2911
2911 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(16)] = v281::
2915 :: CALL :: call :: Ljava/math/BigInteger :: v284 = valueOf(#(2862423051509815793 l))::JM,2919
2919 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(17)] = v284::
2923 :: CALL :: call :: Ljava/math/BigInteger :: v287 = valueOf(#(6746640616477458432 l))::JM,2927
2927 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(18)] = v287::
2931 :: CALL :: call :: Ljava/math/BigInteger :: v290 = valueOf(#(799006685782884121 l))::JM,2935
2935 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(19)] = v290::
2939 :: CALL :: call :: Ljava/math/BigInteger :: v293 = valueOf(#(1638400000000000000 l))::JM,2943
2943 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(20)] = v293::
2947 :: CALL :: call :: Ljava/math/BigInteger :: v296 = valueOf(#(3243919932521508681 l))::JM,2951
2951 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(21)] = v296::
2955 :: CALL :: call :: Ljava/math/BigInteger :: v299 = valueOf(#(6221821273427820544 l))::JM,2959
2959 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(22)] = v299::
2963 :: CALL :: call :: Ljava/math/BigInteger :: v302 = valueOf(#(504036361936467383 l))::JM,2967
2967 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(23)] = v302::
2971 :: CALL :: call :: Ljava/math/BigInteger :: v305 = valueOf(#(876488338465357824 l))::JM,2975
2975 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(24)] = v305::
2979 :: CALL :: call :: Ljava/math/BigInteger :: v308 = valueOf(#(1490116119384765625 l))::JM,2983
2983 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(25)] = v308::
2987 :: CALL :: call :: Ljava/math/BigInteger :: v311 = valueOf(#(2481152873203736576 l))::JM,2991
2991 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(26)] = v311::
2995 :: CALL :: call :: Ljava/math/BigInteger :: v313 = valueOf(#(4052555153018976267 l))::JM,2999
2999 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(27)] = v313::
3003 :: CALL :: call :: Ljava/math/BigInteger :: v316 = valueOf(#(6502111422497947648 l))::JM,3007
3007 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(28)] = v316::
3011 :: CALL :: call :: Ljava/math/BigInteger :: v319 = valueOf(#(353814783205469041 l))::JM,3015
3015 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(29)] = v319::
3019 :: CALL :: call :: Ljava/math/BigInteger :: v322 = valueOf(#(531441000000000000 l))::JM,3023
3023 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(30)] = v322::
3027 :: CALL :: call :: Ljava/math/BigInteger :: v325 = valueOf(#(787662783788549761 l))::JM,3031
3031 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(31)] = v325::
3035 :: CALL :: call :: Ljava/math/BigInteger :: v327 = valueOf(#(1152921504606846976 l))::JM,3039
3039 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(32)] = v327::
3043 :: CALL :: call :: Ljava/math/BigInteger :: v330 = valueOf(#(1667889514952984961 l))::JM,3047
3047 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(33)] = v330::
3051 :: CALL :: call :: Ljava/math/BigInteger :: v333 = valueOf(#(2386420683693101056 l))::JM,3055
3055 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(34)] = v333::
3059 :: CALL :: call :: Ljava/math/BigInteger :: v336 = valueOf(#(3379220508056640625 l))::JM,3063
3063 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(35)] = v336::
3067 :: CALL :: call :: Ljava/math/BigInteger :: v338 = valueOf(#(4738381338321616896 l))::JM,3071
3071 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(36)] = v338::
3077 :: NORM :: declaration :: [I :: v339 = new []::
3078 :: EXPR :: modify :: I :: v339[#(2)] = #(30)::
3082 :: EXPR :: modify :: I :: v339[#(3)] = #(19)::
3086 :: EXPR :: modify :: I :: v339[#(4)] = #(15)::
3090 :: EXPR :: modify :: I :: v339[#(5)] = #(13)::
3094 :: EXPR :: modify :: I :: v339[#(6)] = #(11)::
3098 :: EXPR :: modify :: I :: v339[#(7)] = #(11)::
3102 :: EXPR :: modify :: I :: v339[#(8)] = #(10)::
3106 :: EXPR :: modify :: I :: v339[#(9)] = #(9)::
3110 :: EXPR :: modify :: I :: v339[#(10)] = #(9)::
3114 :: EXPR :: modify :: I :: v339[#(11)] = #(8)::
3118 :: EXPR :: modify :: I :: v339[#(12)] = #(8)::
3122 :: EXPR :: modify :: I :: v339[#(13)] = #(8)::
3126 :: EXPR :: modify :: I :: v339[#(14)] = #(8)::
3130 :: EXPR :: modify :: I :: v339[#(15)] = #(7)::
3134 :: EXPR :: modify :: I :: v339[#(16)] = #(7)::
3138 :: EXPR :: modify :: I :: v339[#(17)] = #(7)::
3142 :: EXPR :: modify :: I :: v339[#(18)] = #(7)::
3146 :: EXPR :: modify :: I :: v339[#(19)] = #(7)::
3150 :: EXPR :: modify :: I :: v339[#(20)] = #(7)::
3154 :: EXPR :: modify :: I :: v339[#(21)] = #(7)::
3158 :: EXPR :: modify :: I :: v339[#(22)] = #(6)::
3162 :: EXPR :: modify :: I :: v339[#(23)] = #(6)::
3166 :: EXPR :: modify :: I :: v339[#(24)] = #(6)::
3170 :: EXPR :: modify :: I :: v339[#(25)] = #(6)::
3174 :: EXPR :: modify :: I :: v339[#(26)] = #(6)::
3178 :: EXPR :: modify :: I :: v339[#(27)] = #(6)::
3182 :: EXPR :: modify :: I :: v339[#(28)] = #(6)::
3186 :: EXPR :: modify :: I :: v339[#(29)] = #(6)::
3190 :: EXPR :: modify :: I :: v339[#(30)] = #(6)::
3194 :: EXPR :: modify :: I :: v339[#(31)] = #(6)::
3198 :: EXPR :: modify :: I :: v339[#(32)] = #(6)::
3202 :: EXPR :: modify :: I :: v339[#(33)] = #(6)::
3206 :: EXPR :: modify :: I :: v339[#(34)] = #(6)::
3210 :: EXPR :: modify :: I :: v339[#(35)] = #(6)::
3214 :: EXPR :: modify :: I :: v339[#(36)] = #(5)::
3220 :: NORM :: declaration :: [I :: v340 = new []::
3221 :: EXPR :: modify :: I :: v340[#(2)] = #(1073741824)::
3225 :: EXPR :: modify :: I :: v340[#(3)] = #(1162261467)::
3229 :: EXPR :: modify :: I :: v340[#(4)] = #(1073741824)::
3233 :: EXPR :: modify :: I :: v340[#(5)] = #(1220703125)::
3237 :: EXPR :: modify :: I :: v340[#(6)] = #(362797056)::
3241 :: EXPR :: modify :: I :: v340[#(7)] = #(1977326743)::
3245 :: EXPR :: modify :: I :: v340[#(8)] = #(1073741824)::
3249 :: EXPR :: modify :: I :: v340[#(9)] = #(387420489)::
3253 :: EXPR :: modify :: I :: v340[#(10)] = #(1000000000)::
3257 :: EXPR :: modify :: I :: v340[#(11)] = #(214358881)::
3261 :: EXPR :: modify :: I :: v340[#(12)] = #(429981696)::
3265 :: EXPR :: modify :: I :: v340[#(13)] = #(815730721)::
3269 :: EXPR :: modify :: I :: v340[#(14)] = #(1475789056)::
3273 :: EXPR :: modify :: I :: v340[#(15)] = #(170859375)::
3277 :: EXPR :: modify :: I :: v340[#(16)] = #(268435456)::
3281 :: EXPR :: modify :: I :: v340[#(17)] = #(410338673)::
3285 :: EXPR :: modify :: I :: v340[#(18)] = #(612220032)::
3289 :: EXPR :: modify :: I :: v340[#(19)] = #(893871739)::
3293 :: EXPR :: modify :: I :: v340[#(20)] = #(1280000000)::
3297 :: EXPR :: modify :: I :: v340[#(21)] = #(1801088541)::
3301 :: EXPR :: modify :: I :: v340[#(22)] = #(113379904)::
3305 :: EXPR :: modify :: I :: v340[#(23)] = #(148035889)::
3309 :: EXPR :: modify :: I :: v340[#(24)] = #(191102976)::
3313 :: EXPR :: modify :: I :: v340[#(25)] = #(244140625)::
3317 :: EXPR :: modify :: I :: v340[#(26)] = #(308915776)::
3321 :: EXPR :: modify :: I :: v340[#(27)] = #(387420489)::
3325 :: EXPR :: modify :: I :: v340[#(28)] = #(481890304)::
3329 :: EXPR :: modify :: I :: v340[#(29)] = #(594823321)::
3333 :: EXPR :: modify :: I :: v340[#(30)] = #(729000000)::
3337 :: EXPR :: modify :: I :: v340[#(31)] = #(887503681)::
3341 :: EXPR :: modify :: I :: v340[#(32)] = #(1073741824)::
3345 :: EXPR :: modify :: I :: v340[#(33)] = #(1291467969)::
3349 :: EXPR :: modify :: I :: v340[#(34)] = #(1544804416)::
3353 :: EXPR :: modify :: I :: v340[#(35)] = #(1838265625)::
3357 :: EXPR :: modify :: I :: v340[#(36)] = #(60466176)::
3363 :: NORM :: declaration :: [Ljava/io/ObjectStreamField :: v372 = new java.io.ObjectStreamField[]::CF,3364
3364 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v373 = new java.io.ObjectStreamField::DD,3372
3365 :: EXPR :: reference :: Ljava/lang/Class :: v375 = java.lang.Integer.TYPE::
3372 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(0)] = v373::
3376 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v377 = new java.io.ObjectStreamField::DD,3383:CF,3377
3377 :: EXPR :: assign :: Ljava/lang/Class :: v379 = metadata <Primordial,[B>-><Primordial,Ljava/lang/Class>::
3383 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(1)] = v377::
3387 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v381 = new java.io.ObjectStreamField::DD,3395
3388 :: EXPR :: reference :: Ljava/lang/Class :: v383 = java.lang.Integer.TYPE::
3395 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(2)] = v381::
3399 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v385 = new java.io.ObjectStreamField::DD,3407
3400 :: EXPR :: reference :: Ljava/lang/Class :: v387 = java.lang.Integer.TYPE::
3407 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(3)] = v385::
3411 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v389 = new java.io.ObjectStreamField::DD,3419
3412 :: EXPR :: reference :: Ljava/lang/Class :: v391 = java.lang.Integer.TYPE::
3419 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(4)] = v389::
3423 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v393 = new java.io.ObjectStreamField::DD,3431
3424 :: EXPR :: reference :: Ljava/lang/Class :: v395 = java.lang.Integer.TYPE::
3431 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(5)] = v393::
3439 :: EXPR :: assign :: null :: PHI v94 = #(1), v93::DD,2046:DD,2047
3440 :: EXPR :: assign :: null :: PHI v235 = #(0), v234::JM,2645:DD,2649:DD,2650
4472 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
4480 :: NORM :: declaration :: [Ljava/math/BigDecimal :: v9 = new java.math.BigDecimal[]::CF,4481
4481 :: NORM :: declaration :: Ljava/math/BigDecimal :: v10 = new java.math.BigDecimal::DD,4490
4482 :: EXPR :: reference :: Ljava/math/BigInteger :: v11 = java.math.BigInteger.ZERO::
4490 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(0)] = v10::
4494 :: NORM :: declaration :: Ljava/math/BigDecimal :: v14 = new java.math.BigDecimal::DD,4503
4495 :: EXPR :: reference :: Ljava/math/BigInteger :: v15 = java.math.BigInteger.ONE::
4503 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(1)] = v14::
4507 :: NORM :: declaration :: Ljava/math/BigDecimal :: v19 = new java.math.BigDecimal::DD,4518
4508 :: CALL :: call :: Ljava/math/BigInteger :: v22 = valueOf(#(2 l))::
4518 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(2)] = v19::
4522 :: NORM :: declaration :: Ljava/math/BigDecimal :: v25 = new java.math.BigDecimal::DD,4533
4523 :: CALL :: call :: Ljava/math/BigInteger :: v28 = valueOf(#(3 l))::
4533 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(3)] = v25::
4537 :: NORM :: declaration :: Ljava/math/BigDecimal :: v31 = new java.math.BigDecimal::DD,4548
4538 :: CALL :: call :: Ljava/math/BigInteger :: v34 = valueOf(#(4 l))::
4548 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(4)] = v31::
4552 :: NORM :: declaration :: Ljava/math/BigDecimal :: v37 = new java.math.BigDecimal::DD,4563
4553 :: CALL :: call :: Ljava/math/BigInteger :: v40 = valueOf(#(5 l))::
4563 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(5)] = v37::
4567 :: NORM :: declaration :: Ljava/math/BigDecimal :: v43 = new java.math.BigDecimal::DD,4578
4568 :: CALL :: call :: Ljava/math/BigInteger :: v46 = valueOf(#(6 l))::
4578 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(6)] = v43::
4582 :: NORM :: declaration :: Ljava/math/BigDecimal :: v49 = new java.math.BigDecimal::DD,4593
4583 :: CALL :: call :: Ljava/math/BigInteger :: v52 = valueOf(#(7 l))::
4593 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(7)] = v49::
4597 :: NORM :: declaration :: Ljava/math/BigDecimal :: v55 = new java.math.BigDecimal::DD,4608
4598 :: CALL :: call :: Ljava/math/BigInteger :: v58 = valueOf(#(8 l))::
4608 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(8)] = v55::
4612 :: NORM :: declaration :: Ljava/math/BigDecimal :: v61 = new java.math.BigDecimal::DD,4623
4613 :: CALL :: call :: Ljava/math/BigInteger :: v64 = valueOf(#(9 l))::
4623 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(9)] = v61::
4627 :: NORM :: declaration :: Ljava/math/BigDecimal :: v67 = new java.math.BigDecimal::DD,4636
4628 :: EXPR :: reference :: Ljava/math/BigInteger :: v68 = java.math.BigInteger.TEN::
4636 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(10)] = v67::
4670 :: NORM :: declaration :: [Ljava/math/BigInteger :: v78 = new java.math.BigInteger[]::
4671 :: EXPR :: reference :: Ljava/math/BigInteger :: v79 = java.math.BigInteger.ONE::DD,4673
4673 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(0)] = v79::
4677 :: CALL :: call :: Ljava/math/BigInteger :: v81 = valueOf(#(10 l))::JM,4681
4681 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(1)] = v81::
4685 :: CALL :: call :: Ljava/math/BigInteger :: v84 = valueOf(#(100 l))::JM,4689
4689 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(2)] = v84::
4693 :: CALL :: call :: Ljava/math/BigInteger :: v87 = valueOf(#(1000 l))::JM,4697
4697 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(3)] = v87::
4701 :: CALL :: call :: Ljava/math/BigInteger :: v90 = valueOf(#(10000 l))::JM,4705
4705 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(4)] = v90::
4709 :: CALL :: call :: Ljava/math/BigInteger :: v93 = valueOf(#(100000 l))::JM,4713
4713 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(5)] = v93::
4717 :: CALL :: call :: Ljava/math/BigInteger :: v96 = valueOf(#(1000000 l))::JM,4721
4721 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(6)] = v96::
4725 :: CALL :: call :: Ljava/math/BigInteger :: v99 = valueOf(#(10000000 l))::JM,4729
4729 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(7)] = v99::
4733 :: CALL :: call :: Ljava/math/BigInteger :: v102 = valueOf(#(100000000 l))::JM,4737
4737 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(8)] = v102::
4741 :: CALL :: call :: Ljava/math/BigInteger :: v105 = valueOf(#(1000000000 l))::JM,4745
4745 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(9)] = v105::
4751 :: NORM :: declaration :: [[J :: v107 = new [][]::CF,4752
4752 :: NORM :: declaration :: [J :: v108 = new []::DD,4761
4753 :: EXPR :: modify :: J :: v108[#(0)] = #(9223372036854775807 l)::
4757 :: EXPR :: modify :: J :: v108[#(1)] = #(1 l)::
4761 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(0)] = v108::
4765 :: NORM :: declaration :: [J :: v110 = new []::DD,4774
4766 :: EXPR :: modify :: J :: v110[#(0)] = #(922337203685477580 l)::
4770 :: EXPR :: modify :: J :: v110[#(1)] = #(10 l)::
4774 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(1)] = v110::
4778 :: NORM :: declaration :: [J :: v112 = new []::DD,4787
4779 :: EXPR :: modify :: J :: v112[#(0)] = #(92233720368547758 l)::
4783 :: EXPR :: modify :: J :: v112[#(1)] = #(100 l)::
4787 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(2)] = v112::
4791 :: NORM :: declaration :: [J :: v114 = new []::DD,4800
4792 :: EXPR :: modify :: J :: v114[#(0)] = #(9223372036854775 l)::
4796 :: EXPR :: modify :: J :: v114[#(1)] = #(1000 l)::
4800 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(3)] = v114::
4804 :: NORM :: declaration :: [J :: v116 = new []::DD,4813
4805 :: EXPR :: modify :: J :: v116[#(0)] = #(922337203685477 l)::
4809 :: EXPR :: modify :: J :: v116[#(1)] = #(10000 l)::
4813 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(4)] = v116::
4817 :: NORM :: declaration :: [J :: v118 = new []::DD,4826
4818 :: EXPR :: modify :: J :: v118[#(0)] = #(92233720368547 l)::
4822 :: EXPR :: modify :: J :: v118[#(1)] = #(100000 l)::
4826 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(5)] = v118::
4830 :: NORM :: declaration :: [J :: v120 = new []::DD,4839
4831 :: EXPR :: modify :: J :: v120[#(0)] = #(9223372036854 l)::
4835 :: EXPR :: modify :: J :: v120[#(1)] = #(1000000 l)::
4839 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(6)] = v120::
4843 :: NORM :: declaration :: [J :: v122 = new []::DD,4852
4844 :: EXPR :: modify :: J :: v122[#(0)] = #(922337203685 l)::
4848 :: EXPR :: modify :: J :: v122[#(1)] = #(10000000 l)::
4852 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(7)] = v122::
4856 :: NORM :: declaration :: [J :: v124 = new []::DD,4865
4857 :: EXPR :: modify :: J :: v124[#(0)] = #(92233720368 l)::
4861 :: EXPR :: modify :: J :: v124[#(1)] = #(100000000 l)::
4865 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(8)] = v124::
4869 :: NORM :: declaration :: [J :: v126 = new []::DD,4878
4870 :: EXPR :: modify :: J :: v126[#(0)] = #(9223372036 l)::
4874 :: EXPR :: modify :: J :: v126[#(1)] = #(1000000000 l)::
4878 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(9)] = v126::
4882 :: NORM :: declaration :: [J :: v128 = new []::DD,4891
4883 :: EXPR :: modify :: J :: v128[#(0)] = #(922337203 l)::
4887 :: EXPR :: modify :: J :: v128[#(1)] = #(10000000000 l)::
4891 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(10)] = v128::
4895 :: NORM :: declaration :: [J :: v131 = new []::DD,4904
4896 :: EXPR :: modify :: J :: v131[#(0)] = #(92233720 l)::
4900 :: EXPR :: modify :: J :: v131[#(1)] = #(100000000000 l)::
4904 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(11)] = v131::
4908 :: NORM :: declaration :: [J :: v135 = new []::DD,4917
4909 :: EXPR :: modify :: J :: v135[#(0)] = #(9223372 l)::
4913 :: EXPR :: modify :: J :: v135[#(1)] = #(1000000000000 l)::
4917 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(12)] = v135::
4921 :: NORM :: declaration :: [J :: v139 = new []::DD,4930
4922 :: EXPR :: modify :: J :: v139[#(0)] = #(92233 l)::
4926 :: EXPR :: modify :: J :: v139[#(1)] = #(10000000000000 l)::
4930 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(13)] = v139::
4936 :: NORM :: declaration :: [I :: v142 = new []::
4937 :: EXPR :: modify :: I :: v142[#(1)] = #(9)::
4941 :: EXPR :: modify :: I :: v142[#(2)] = #(99)::
4945 :: EXPR :: modify :: I :: v142[#(3)] = #(999)::
4949 :: EXPR :: modify :: I :: v142[#(4)] = #(9999)::
4953 :: EXPR :: modify :: I :: v142[#(5)] = #(99999)::
4957 :: EXPR :: modify :: I :: v142[#(6)] = #(999999)::
4961 :: EXPR :: modify :: I :: v142[#(7)] = #(9999999)::
4965 :: EXPR :: modify :: I :: v142[#(8)] = #(99999999)::
4969 :: EXPR :: modify :: I :: v142[#(9)] = #(999999999)::
4973 :: EXPR :: modify :: I :: v142[#(10)] = #(2147483647)::
5255 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Jdk.<clinit>()::CD,5258:CD,5265
5258 :: CALL :: call :: Ljava/lang/Class :: v5 = classForName(#(java.lang.reflect.Par...))::CL,18606
5265 :: CALL :: call :: Ljava/lang/Class :: v12 = classForName(#(java.time.Clock))::CL,18606
5294 :: ENTR :: entry :: null :: org.apache.ibatis.io.VFS.<clinit>()::CD,5298:CD,5304:CD,5305:CD,5310:CD,5317
5298 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
5304 :: NORM :: declaration :: [Ljava/lang/Class :: v6 = new java.lang.Class[]::CF,5305
5305 :: EXPR :: assign :: Ljava/lang/Class :: v8 = metadata <Application,Lorg/apache/ibatis/io/JBoss6VFS>-><Primordial,Ljava/lang/Class>::DD,5306
5306 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
5310 :: EXPR :: assign :: Ljava/lang/Class :: v10 = metadata <Application,Lorg/apache/ibatis/io/DefaultVFS>-><Primordial,Ljava/lang/Class>::DD,5311
5311 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v10::
5317 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
5333 :: ENTR :: entry :: null :: org.apache.ibatis.io.JBoss6VFS.<clinit>()::CD,5337:CD,5343
5337 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
5343 :: CALL :: call :: V :: initialize()::CL,18620
5347 :: ENTR :: entry :: null :: org.apache.ibatis.io.DefaultVFS.<clinit>()::CD,5351:CD,5357
5351 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
5357 :: NORM :: declaration :: [B :: v6 = new []::
5358 :: EXPR :: modify :: B :: v6[#(0)] = #(80)::
5362 :: EXPR :: modify :: B :: v6[#(1)] = #(75)::
5366 :: EXPR :: modify :: B :: v6[#(2)] = #(3)::
5370 :: EXPR :: modify :: B :: v6[#(3)] = #(4)::
5426 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.<clinit>()::CD,5430
5430 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
5542 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMode.<clinit>()::CD,5545:CD,5551:CD,5553:CD,5559:CD,5561:CD,5567:CD,5569:CD,5570:CD,5576:CD,5582
5545 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ParameterMode :: v2 = new org.apache.ibatis.mapping.ParameterMode::DD,5551
5551 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ParameterMode :: org.apache.ibatis.mapping.ParameterMode.IN = v2::
5553 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ParameterMode :: v6 = new org.apache.ibatis.mapping.ParameterMode::DD,5559
5559 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ParameterMode :: org.apache.ibatis.mapping.ParameterMode.OUT = v6::
5561 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ParameterMode :: v10 = new org.apache.ibatis.mapping.ParameterMode::DD,5567
5567 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ParameterMode :: org.apache.ibatis.mapping.ParameterMode.INOUT = v10::
5569 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/ParameterMode :: v15 = new org.apache.ibatis.mapping.ParameterMode[]::
5570 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ParameterMode :: v16 = org.apache.ibatis.mapping.ParameterMode.IN::DD,5572
5572 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
5576 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ParameterMode :: v17 = org.apache.ibatis.mapping.ParameterMode.OUT::DD,5578
5578 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
5582 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ParameterMode :: v18 = org.apache.ibatis.mapping.ParameterMode.INOUT::DD,5584
5584 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
5614 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.StatementType.<clinit>()::CD,5617:CD,5623:CD,5625:CD,5631:CD,5633:CD,5639:CD,5641:CD,5642:CD,5648:CD,5654
5617 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/StatementType :: v2 = new org.apache.ibatis.mapping.StatementType::DD,5623
5623 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/StatementType :: org.apache.ibatis.mapping.StatementType.STATEMENT = v2::
5625 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/StatementType :: v6 = new org.apache.ibatis.mapping.StatementType::DD,5631
5631 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/StatementType :: org.apache.ibatis.mapping.StatementType.PREPARED = v6::
5633 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/StatementType :: v10 = new org.apache.ibatis.mapping.StatementType::DD,5639
5639 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/StatementType :: org.apache.ibatis.mapping.StatementType.CALLABLE = v10::
5641 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/StatementType :: v15 = new org.apache.ibatis.mapping.StatementType[]::
5642 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/StatementType :: v16 = org.apache.ibatis.mapping.StatementType.STATEMENT::DD,5644
5644 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
5648 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/StatementType :: v17 = org.apache.ibatis.mapping.StatementType.PREPARED::DD,5650
5650 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
5654 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/StatementType :: v18 = org.apache.ibatis.mapping.StatementType.CALLABLE::DD,5656
5656 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
5686 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultSetType.<clinit>()::CD,5689:JM,18856:CD,5696:CD,5698:CD,5705:CD,5707:CD,5714:CD,5716:CD,5717:CD,5723:CD,5729
5689 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ResultSetType :: v2 = new org.apache.ibatis.mapping.ResultSetType::DD,5696
5696 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultSetType :: org.apache.ibatis.mapping.ResultSetType.FORWARD_ONLY = v2::
5698 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ResultSetType :: v7 = new org.apache.ibatis.mapping.ResultSetType::DD,5705
5705 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultSetType :: org.apache.ibatis.mapping.ResultSetType.SCROLL_INSENSITIVE = v7::
5707 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ResultSetType :: v12 = new org.apache.ibatis.mapping.ResultSetType::DD,5714
5714 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultSetType :: org.apache.ibatis.mapping.ResultSetType.SCROLL_SENSITIVE = v12::
5716 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/ResultSetType :: v18 = new org.apache.ibatis.mapping.ResultSetType[]::
5717 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultSetType :: v19 = org.apache.ibatis.mapping.ResultSetType.FORWARD_ONLY::DD,5719
5719 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
5723 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultSetType :: v20 = org.apache.ibatis.mapping.ResultSetType.SCROLL_INSENSITIVE::DD,5725
5725 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
5729 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultSetType :: v21 = org.apache.ibatis.mapping.ResultSetType.SCROLL_SENSITIVE::DD,5731
5731 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
5764 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.SqlCommandType.<clinit>()::CD,5767:CD,5773:CD,5775:CD,5781:CD,5783:CD,5789:CD,5791:CD,5797:CD,5799:CD,5805:CD,5807:CD,5813:CD,5815:CD,5816:CD,5822:CD,5828:CD,5834:CD,5840:CD,5846
5767 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v2 = new org.apache.ibatis.mapping.SqlCommandType::DD,5773
5773 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.UNKNOWN = v2::
5775 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v6 = new org.apache.ibatis.mapping.SqlCommandType::DD,5781
5781 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.INSERT = v6::
5783 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v10 = new org.apache.ibatis.mapping.SqlCommandType::DD,5789
5789 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.UPDATE = v10::
5791 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v14 = new org.apache.ibatis.mapping.SqlCommandType::DD,5797
5797 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.DELETE = v14::
5799 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v18 = new org.apache.ibatis.mapping.SqlCommandType::DD,5805
5805 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.SELECT = v18::
5807 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/SqlCommandType :: v22 = new org.apache.ibatis.mapping.SqlCommandType::DD,5813
5813 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.FLUSH = v22::
5815 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/SqlCommandType :: v27 = new org.apache.ibatis.mapping.SqlCommandType[]::
5816 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v28 = org.apache.ibatis.mapping.SqlCommandType.UNKNOWN::DD,5818
5818 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(0)] = v28::
5822 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v29 = org.apache.ibatis.mapping.SqlCommandType.INSERT::DD,5824
5824 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(1)] = v29::
5828 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v30 = org.apache.ibatis.mapping.SqlCommandType.UPDATE::DD,5830
5830 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(2)] = v30::
5834 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v31 = org.apache.ibatis.mapping.SqlCommandType.DELETE::DD,5836
5836 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(3)] = v31::
5840 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v32 = org.apache.ibatis.mapping.SqlCommandType.SELECT::DD,5842
5842 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(4)] = v32::
5846 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v33 = org.apache.ibatis.mapping.SqlCommandType.FLUSH::DD,5848
5848 :: EXPR :: modify :: Ljava/lang/Object :: v27[#(5)] = v33::
5923 :: ENTR :: entry :: null :: org.apache.ibatis.annotations.Options.FlushCachePolicy.<clinit>()::CD,5926:CD,5932:CD,5934:CD,5940:CD,5942:CD,5948:CD,5950:CD,5951:CD,5957:CD,5963
5926 :: NORM :: declaration :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v2 = new org.apache.ibatis.annotations.Options$FlushCachePolicy::DD,5932
5932 :: EXPR :: modify :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: org.apache.ibatis.annotations.Options$FlushCachePolicy.DEFAULT = v2::
5934 :: NORM :: declaration :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v6 = new org.apache.ibatis.annotations.Options$FlushCachePolicy::DD,5940
5940 :: EXPR :: modify :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: org.apache.ibatis.annotations.Options$FlushCachePolicy.TRUE = v6::
5942 :: NORM :: declaration :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v10 = new org.apache.ibatis.annotations.Options$FlushCachePolicy::DD,5948
5948 :: EXPR :: modify :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: org.apache.ibatis.annotations.Options$FlushCachePolicy.FALSE = v10::
5950 :: NORM :: declaration :: [Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v15 = new org.apache.ibatis.annotations.Options$FlushCachePolicy[]::
5951 :: EXPR :: reference :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v16 = org.apache.ibatis.annotations.Options$FlushCachePolicy.DEFAULT::DD,5953
5953 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
5957 :: EXPR :: reference :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v17 = org.apache.ibatis.annotations.Options$FlushCachePolicy.TRUE::DD,5959
5959 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
5963 :: EXPR :: reference :: Lorg/apache/ibatis/annotations/Options$FlushCachePolicy :: v18 = org.apache.ibatis.annotations.Options$FlushCachePolicy.FALSE::DD,5965
5965 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
11293 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultFlag.<clinit>()::CD,11296:CD,11302:CD,11304:CD,11310:CD,11312:CD,11313:CD,11319
11296 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ResultFlag :: v2 = new org.apache.ibatis.mapping.ResultFlag::DD,11302
11302 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultFlag :: org.apache.ibatis.mapping.ResultFlag.ID = v2::
11304 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/ResultFlag :: v6 = new org.apache.ibatis.mapping.ResultFlag::DD,11310
11310 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultFlag :: org.apache.ibatis.mapping.ResultFlag.CONSTRUCTOR = v6::
11312 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/ResultFlag :: v11 = new org.apache.ibatis.mapping.ResultFlag[]::
11313 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v12 = org.apache.ibatis.mapping.ResultFlag.ID::DD,11315
11315 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
11319 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v13 = org.apache.ibatis.mapping.ResultFlag.CONSTRUCTOR::DD,11321
11321 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
11344 :: ENTR :: entry :: null :: org.apache.ibatis.session.RowBounds.<clinit>()::
11356 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.<clinit>()::CD,11360
11360 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
11468 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.<clinit>()::CD,11472
11472 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
11541 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Discriminator.Builder.<clinit>()::CD,11545
11545 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
11559 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.FetchType.<clinit>()::CD,11562:CD,11568:CD,11570:CD,11576:CD,11578:CD,11584:CD,11586:CD,11587:CD,11593:CD,11599
11562 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/FetchType :: v2 = new org.apache.ibatis.mapping.FetchType::DD,11568
11568 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/FetchType :: org.apache.ibatis.mapping.FetchType.LAZY = v2::
11570 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/FetchType :: v6 = new org.apache.ibatis.mapping.FetchType::DD,11576
11576 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/FetchType :: org.apache.ibatis.mapping.FetchType.EAGER = v6::
11578 :: NORM :: declaration :: Lorg/apache/ibatis/mapping/FetchType :: v10 = new org.apache.ibatis.mapping.FetchType::DD,11584
11584 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/FetchType :: org.apache.ibatis.mapping.FetchType.DEFAULT = v10::
11586 :: NORM :: declaration :: [Lorg/apache/ibatis/mapping/FetchType :: v15 = new org.apache.ibatis.mapping.FetchType[]::
11587 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/FetchType :: v16 = org.apache.ibatis.mapping.FetchType.LAZY::DD,11589
11589 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
11593 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/FetchType :: v17 = org.apache.ibatis.mapping.FetchType.EAGER::DD,11595
11595 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
11599 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/FetchType :: v18 = org.apache.ibatis.mapping.FetchType.DEFAULT::DD,11601
11601 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
17621 :: ENTR :: entry :: null :: org.apache.ibatis.executor.BaseExecutor.<clinit>()::CD,17625
17625 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
17633 :: ENTR :: entry :: null :: org.apache.ibatis.transaction.managed.ManagedTransaction.<clinit>()::CD,17637
17637 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v4 = getLog(v2)::CL,18461
17760 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.SystemMetaObject.<clinit>()::JM,19190:CD,17784
17784 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v12 = forObject(v6, v7, v8, v9)::CL,19203
17820 :: ENTR :: entry :: null :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.DefaultLazyTest.getConfiguration()::CF,17821:CD,17824
17821 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.DefaultLazyTest.getConfiguration()::
17824 :: NORM :: compound :: Ljava/lang/String :: return #(default)::CF,17821
17826 :: ENTR :: entry :: null :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.CglibLazyTest.getConfiguration()::CF,17827:CD,17830
17827 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.CglibLazyTest.getConfiguration()::
17830 :: NORM :: compound :: Ljava/lang/String :: return #(cglib)::CF,17827
17832 :: ENTR :: entry :: null :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.JavassistLazyTest.getConfiguration()::CF,17833:CD,17836
17833 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.submitted.lazyload_proxyfactory_comparison.JavassistLazyTest.getConfiguration()::
17836 :: NORM :: compound :: Ljava/lang/String :: return #(javassist)::CF,17833
17838 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getResourceAsReader(java.lang.String)::CE,17839:CD,17842:CD,17844:CD,17867:CD,17868
17839 :: EXIT :: exit :: Ljava/io/Reader :: org.apache.ibatis.io.Resources.getResourceAsReader(java.lang.String)::JM,19763
17842 :: EXPR :: reference :: Ljava/nio/charset/Charset :: v3 = org.apache.ibatis.io.Resources.charset::DD,17844
17844 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 21::CF,17855:CF,17845:CD,17846:CD,17856:CD,17860:CD,17868
17845 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::DD,17868
17846 :: CALL :: call :: Ljava/io/InputStream :: v12 = getResourceAsStream(p1 $resource )::CL,19231
17855 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v5 = new java.io.InputStreamReader::DD,17868
17856 :: CALL :: call :: Ljava/io/InputStream :: v7 = getResourceAsStream(p1 $resource )::CL,19231
17860 :: EXPR :: reference :: Ljava/nio/charset/Charset :: v8 = org.apache.ibatis.io.Resources.charset::
17867 :: NORM :: compound :: Ljava/io/Reader :: return v14::DD,17839
17868 :: EXPR :: assign :: null :: PHI v14 = v10, v5::CF,17867
17886 :: ENTR :: entry :: null :: org.apache.ibatis.session.SqlSessionFactoryBuilder.build(java.io.Reader)::CD,17891
17891 :: CALL :: call :: Lorg/apache/ibatis/session/SqlSessionFactory :: v6 = p0 $this .build(p1 $reader , #(null), #(null))::CL,19276
17903 :: ENTR :: entry :: null :: org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSession()::CD,17914
17914 :: CALL :: call :: Lorg/apache/ibatis/session/SqlSession :: v9 = p0 $this .openSessionFromDataSource(v5, #(null), #(0))::CL,19353
17926 :: ENTR :: entry :: null :: org.apache.ibatis.session.defaults.DefaultSqlSession.getConnection()::CD,17933:CD,17942:CD,17947:CD,17952:CD,17956
17933 :: CALL :: call :: Lorg/apache/ibatis/transaction/Transaction :: v5 = v3.getTransaction()::CL,19481:CL,19468
17942 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
17947 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v8)::
17952 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
17956 :: CALL :: call :: Ljava/lang/RuntimeException :: v17 = wrapException(v15, v8)::CL,19538
17995 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .delimiter = #(;)::
17998 :: EXPR :: modify :: Ljava/sql/Connection :: p0 $this .connection = p1 $connection ::
18026 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.runScript(java.io.Reader)::CD,18031:CD,18037:JM,19763:JM,23140:JM,23367:JM,23354:JM,23295
18031 :: CALL :: call :: V :: p0 $this .setAutoCommit()::CL,19585
18034 :: EXPR :: reference :: Z :: v5 = p0 $this .sendFullScript::DD,18037
18037 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 21::CD,18038:CD,18043:JM,19763:JM,23140:JM,23367:JM,23354:JM,23295
18038 :: CALL :: call :: V :: p0 $this .executeFullScript(p1 $reader )::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295:CL,19651
18043 :: CALL :: call :: V :: p0 $this .executeLineByLine(p1 $reader )::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295:CL,19758
18137 :: CALL :: call :: Ljava/lang/ClassLoader :: v5 = getSystemClassLoader()::JM,18140
18140 :: EXPR :: modify :: Ljava/lang/ClassLoader :: p0 $this .systemClassLoader = v5::
18221 :: EXPR :: modify :: I :: p0 $this .TYPE_CODE = p3 $code ::
18230 :: ENTR :: entry :: null :: org.apache.ibatis.type.JdbcType.values()::CF,18231:CD,18233:CD,18235:CD,18236:CD,18244
18231 :: EXIT :: exit :: [Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.values()::JM,1132
18233 :: EXPR :: reference :: [Lorg/apache/ibatis/type/JdbcType :: v2 = org.apache.ibatis.type.JdbcType.ENUM$VALUES::DD,18235
18235 :: EXPR :: assign :: I :: v4 = v2.length::DD,18236
18236 :: NORM :: declaration :: [Lorg/apache/ibatis/type/JdbcType :: v5 = new org.apache.ibatis.type.JdbcType[]::DD,18244
18244 :: NORM :: compound :: [Lorg/apache/ibatis/type/JdbcType :: return v5::CF,18231
18461 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.getLog(java.lang.Class)::CD,18469
18469 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v6 = getLog(v4)::CL,21080
18484 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.tryImplementation(java.lang.Runnable)::CD,18488:CD,18490
18488 :: EXPR :: reference :: Ljava/lang/reflect/Constructor :: v3 = org.apache.ibatis.logging.LogFactory.logConstructor::DD,18490
18490 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CD,18491
18491 :: CALL :: call :: V :: p1 $runnable .run()::CL,21156:CL,21149:CL,21135:CL,21142:CL,21163:CL,21170
18606 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.classForName(java.lang.String)::CE,18607:CD,18612:CD,18617
18607 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.io.Resources.classForName(java.lang.String)::JM,38184:JM,40870
18612 :: CALL :: call :: Ljava/lang/Class :: v5 = v3.classForName(p1 $className )::JM,18617:CL,21235
18617 :: NORM :: compound :: Ljava/lang/Class :: return v5::DD,18607
18620 :: ENTR :: entry :: null :: org.apache.ibatis.io.JBoss6VFS.initialize()::CD,18623:CD,18625
18623 :: EXPR :: reference :: Ljava/lang/Boolean :: v2 = org.apache.ibatis.io.JBoss6VFS.valid::DD,18625
18625 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 139::CD,18630:CD,18641:CD,18660:CD,18676:CD,18698:CD,18715:CD,18722:CD,18729
18630 :: CALL :: call :: Ljava/lang/Class :: v7 = getClass(#(org.jboss.vfs.VFS))::CL,21256
18641 :: CALL :: call :: Ljava/lang/Class :: v13 = getClass(#(org.jboss.vfs.VirtualFile))::CL,21256
18660 :: CALL :: call :: Ljava/lang/reflect/Method :: v24 = getMethod(v17, #(getChild), v20)::CL,21315
18676 :: CALL :: call :: Ljava/lang/reflect/Method :: v32 = getMethod(v28, #(getChildrenRecursively), v30)::CL,21315
18698 :: CALL :: call :: Ljava/lang/reflect/Method :: v41 = getMethod(v36, #(getPathNameRelativeTo), v38)::CL,21315
18715 :: CALL :: call :: V :: checkReturnType(v45, v46)::CL,21439
18722 :: CALL :: call :: V :: checkReturnType(v48, v49)::CL,21439
18729 :: CALL :: call :: V :: checkReturnType(v51, v52)::CL,21439
18856 :: EXPR :: modify :: I :: p0 $this .value = p3 $value ::
18946 :: EXPR :: modify :: I :: p0 $this .offset = #(0)::
18949 :: EXPR :: modify :: I :: p0 $this .limit = #(2147483647)::
19187 :: EXPR :: modify :: Z :: p0 $this .classCacheEnabled = #(1)::
19190 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v5 = new java.util.concurrent.ConcurrentHashMap::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,19194
19194 :: EXPR :: modify :: Ljava/util/concurrent/ConcurrentMap :: p0 $this .reflectorMap = v5::
19203 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.forObject(java.lang.Object,org.apache.ibatis.reflection.factory.ObjectFactory,org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory,org.apache.ibatis.reflection.ReflectorFactory)::CE,19204:CD,19210
19204 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/MetaObject :: org.apache.ibatis.reflection.MetaObject.forObject(java.lang.Object,org.apache.ibatis.reflection.factory.ObjectFactory,org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory,org.apache.ibatis.reflection.ReflectorFactory)::JM,63950
19210 :: PRED :: IF :: Z :: if (p1 $object  != #(null)) goto 8::CF,19214:CD,19211:CD,19213:JM,22176:JM,22179:JM,22180:JM,22181:JM,22167:JM,22215:JM,22202:JM,22170:JM,22173:CD,19222
19211 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v9 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,19213
19213 :: NORM :: compound :: Lorg/apache/ibatis/reflection/MetaObject :: return v9::DD,19204
19214 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/MetaObject :: v7 = new org.apache.ibatis.reflection.MetaObject::DD,19222
19222 :: NORM :: compound :: Lorg/apache/ibatis/reflection/MetaObject :: return v7::DD,19204
19231 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getResourceAsStream(java.lang.String)::CE,19232:CD,19235:CD,19240
19232 :: EXIT :: exit :: Ljava/io/InputStream :: org.apache.ibatis.io.Resources.getResourceAsStream(java.lang.String)::
19235 :: CALL :: call :: Ljava/io/InputStream :: v5 = getResourceAsStream(#(null), p1 $resource )::JM,19240:CL,22274
19240 :: NORM :: compound :: Ljava/io/InputStream :: return v5::DD,19232
19276 :: ENTR :: entry :: null :: org.apache.ibatis.session.SqlSessionFactoryBuilder.build(java.io.Reader,java.lang.String,java.util.Properties)::JM,32002:JM,33029:JM,27398:JM,32263:JM,32519:JM,33035:JM,27405:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,27412:JM,32023:JM,33047:JM,25114:JM,32285:JM,32541:JM,33053:JM,27423:JM,32034:JM,33059:JM,33315:JM,25125:JM,32551:JM,27432:JM,32296:JM,33065:JM,32045:JM,33071:JM,27441:JM,32307:JM,32563:JM,33077:JM,32055:JM,27450:JM,33083:JM,32318:JM,32576:JM,27201:JM,33089:JM,31810:JM,32066:JM,27459:JM,27206:JM,33095:JM,32330:JM,27211:JM,27212:JM,27468:JM,32076:JM,32588:JM,33101:JM,33107:JM,27477:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,27229:JM,27486:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,27495:JM,32871:JM,27240:JM,32363:JM,33131:JM,32108:JM,32620:JM,27245:JM,32877:JM,27504:JM,24176:JM,33137:JM,27250:JM,31858:JM,32883:JM,32373:JM,32630:JM,27255:JM,32119:JM,33143:JM,27513:JM,32889:JM,33149:JM,27262:JM,32895:JM,32384:JM,32640:JM,27522:JM,32130:JM,33155:JM,31876:JM,27269:JM,32645:JM,32901:JM,32647:JM,33161:JM,27531:JM,32395:JM,32907:JM,27276:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,27540:JM,31892:JM,33173:JM,27286:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,27293:JM,27549:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,27301:JM,27558:JM,32937:JM,32426:JM,27308:JM,31916:JM,27567:JM,32175:JM,32943:JM,27315:JM,32949:JM,32438:JM,31927:JM,27576:JM,27322:JM,32955:JM,32188:JM,27329:JM,27585:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,27337:JM,32201:JM,27594:JM,31949:JM,32462:JM,32974:JM,27345:JM,27603:JM,32981:JM,32214:JM,31959:JM,27353:JM,32474:JM,27612:JM,32988:JM,27361:JM,31970:JM,32227:JM,32995:JM,27621:JM,32487:JM,27369:JM,33002:JM,27629:JM,31981:JM,27376:JM,32240:JM,33009:JM,25074:JM,32499:JM,19190:JM,31991:JM,27384:JM,33016:JM,32252:JM,32510:JM,27391:JM,33023:CD,19290:CD,19299:CD,19302:CD,19311:CD,19317:CD,19320
19290 :: CALL :: call :: Lorg/apache/ibatis/session/Configuration :: v9 = v6.parse()::CL,22350
19299 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v24 = instance()::CL,20134
19302 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v26 = v24.reset()::CL,20164
19311 :: CALL :: call :: Ljava/lang/RuntimeException :: v15 = wrapException(#(Error building SqlSes...), v12)::CL,19538
19317 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v18 = instance()::CL,20134
19320 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v20 = v18.reset()::CL,20164
19353 :: ENTR :: entry :: null :: org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSessionFromDataSource(org.apache.ibatis.session.ExecutorType,org.apache.ibatis.session.TransactionIsolationLevel,boolean)::CD,19367:CD,19376:CD,19386:CD,19402:CD,19405:CD,19410:CD,19414:CD,19419:CD,19424:CD,19428:CD,19434:CD,19437
19367 :: CALL :: call :: Lorg/apache/ibatis/transaction/TransactionFactory :: v11 = p0 $this .getTransactionFactoryFromEnvironment(v9)::CL,22413
19376 :: CALL :: call :: Lorg/apache/ibatis/transaction/Transaction :: v15 = v11.newTransaction(v13, p2 $level , p3 $autoCommit )::CL,22449
19386 :: CALL :: call :: Lorg/apache/ibatis/executor/Executor :: v18 = v16.newExecutor(v15, p1 $execType )::CL,22471
19402 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v41 = instance()::CL,20134
19405 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v43 = v41.reset()::CL,20164
19410 :: CALL :: call :: V :: p0 $this .closeTransaction(v23)::CL,22598
19414 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
19419 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v22)::
19424 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
19428 :: CALL :: call :: Ljava/lang/RuntimeException :: v33 = wrapException(v31, v22)::CL,19538
19434 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v37 = instance()::CL,20134
19437 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v39 = v37.reset()::CL,20164
19468 :: ENTR :: entry :: null :: org.apache.ibatis.executor.CachingExecutor.getTransaction()::CD,19475
19475 :: CALL :: call :: Lorg/apache/ibatis/transaction/Transaction :: v5 = v3.getTransaction()::CL,19481
19481 :: ENTR :: entry :: null :: org.apache.ibatis.executor.BaseExecutor.getTransaction()::
19538 :: ENTR :: entry :: null :: org.apache.ibatis.exceptions.ExceptionFactory.wrapException(java.lang.String,java.lang.Exception)::CD,19544:CD,19557
19544 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v6 = instance()::CL,20134
19557 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::CL,22708
19585 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.setAutoCommit()::CD,19612:CD,19620:CD,19625:CD,19630:CD,19635
19612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
19617 :: EXPR :: reference :: Z :: v15 = p0 $this .autoCommit::
19620 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
19625 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#(. Cause: ))::
19630 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(v10)::
19635 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
19651 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.executeFullScript(java.io.Reader)::CD,19656:CD,19660:JM,23140:JM,23367:JM,23354:JM,23295:CD,19678:CD,19682:CD,19683:CD,19691:JM,19763
19656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,23140
19660 :: NORM :: declaration :: Ljava/io/BufferedReader :: v6 = new java.io.BufferedReader::JM,23140:JM,23367:JM,23354:JM,23295:JM,19682
19666 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(v9)::JM,19682
19671 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.apache.ibatis.jdbc.ScriptRunner.LINE_SEPARATOR::
19673 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v4.append(v13)::
19678 :: CALL :: call :: Ljava/lang/String :: v9 = v6.readLine()::JM,19682
19682 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 23::CD,19666:CD,19671:CD,19673:CD,19678:JM,23140
19683 :: CALL :: call :: Ljava/lang/String :: v17 = v4.toString()::JM,23140
19691 :: CALL :: call :: V :: p0 $this .executeStatement(v17)::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295:CL,23046
19758 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.executeLineByLine(java.io.Reader)::CD,19763:CD,19767:JM,23140:JM,23367:JM,23354:JM,23295:CD,19779:CD,19783:CD,19829
19763 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::DD,19829
19767 :: NORM :: declaration :: Ljava/io/BufferedReader :: v6 = new java.io.BufferedReader::JM,23140:JM,23367:JM,23354:JM,23295:JM,19783
19773 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = p0 $this .handleLine(v13, v9)::JM,19763:JM,23140:JM,23367:JM,23354:JM,23295:JM,19783:JM,19829:CL,23245
19779 :: CALL :: call :: Ljava/lang/String :: v9 = v6.readLine()::JM,19783:JM,23354
19783 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 24::CD,19773:CD,19779:CD,19829:JM,19763:JM,23140:JM,23367:JM,23354:JM,23295
19829 :: EXPR :: assign :: null :: PHI v13 = v4, v12::JM,19783:JM,23354:JM,23140:JM,23367:JM,23295
20134 :: ENTR :: entry :: null :: org.apache.ibatis.executor.ErrorContext.instance()::CD,20137:CD,20139:CD,20143:CD,20144
20137 :: EXPR :: reference :: Ljava/lang/ThreadLocal :: v2 = org.apache.ibatis.executor.ErrorContext.LOCAL::JM,20143
20139 :: CALL :: call :: Ljava/lang/Object :: v4 = v2.get()::JM,20143
20143 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::DD,20144
20144 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 30::CF,20145:CD,20149:CD,20151
20145 :: NORM :: declaration :: Lorg/apache/ibatis/executor/ErrorContext :: v7 = new org.apache.ibatis.executor.ErrorContext::
20149 :: EXPR :: reference :: Ljava/lang/ThreadLocal :: v9 = org.apache.ibatis.executor.ErrorContext.LOCAL::
20151 :: CALL :: call :: V :: v9.set(v7)::
20164 :: ENTR :: entry :: null :: org.apache.ibatis.executor.ErrorContext.reset()::CD,20186:CD,20188
20186 :: EXPR :: reference :: Ljava/lang/ThreadLocal :: v4 = org.apache.ibatis.executor.ErrorContext.LOCAL::
20188 :: CALL :: call :: V :: v4.remove()::
20440 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.LoggingCache.hashCode()::CE,20441:CD,20447:CD,20451
20441 :: EXIT :: exit :: I :: org.apache.ibatis.cache.decorators.LoggingCache.hashCode()::JM,20637
20447 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,20451:CL,23872:CL,23859
20451 :: NORM :: compound :: I :: return v5::CF,20441
20453 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.hashCode()::CE,20454:CD,20460
20454 :: EXIT :: exit :: I :: org.apache.ibatis.mapping.ResultMapping.hashCode()::
20457 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .property::DD,20460
20460 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 16::CD,20464:CD,20468:CD,20472
20461 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .property::JM,20468
20464 :: CALL :: call :: I :: v12 = v10.hashCode()::JM,20468
20468 :: NORM :: compound :: I :: return v12::CF,20454
20469 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .column::DD,20472
20472 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 31::CD,20476:CD,20480:CD,20481
20473 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .column::JM,20480
20476 :: CALL :: call :: I :: v9 = v7.hashCode()::JM,20480
20480 :: NORM :: compound :: I :: return v9::CF,20454
20481 :: NORM :: compound :: I :: return #(0)::CF,20454
20626 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.SynchronizedCache.hashCode()::CE,20627:CD,20633:CD,20637
20627 :: EXIT :: exit :: I :: org.apache.ibatis.cache.decorators.SynchronizedCache.hashCode()::
20633 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,20637:CL,20440
20637 :: NORM :: compound :: I :: return v5::CF,20627
20711 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.SynchronizedCache.equals(java.lang.Object)::CE,20712:CD,20719:CD,20724
20712 :: EXIT :: exit :: Z :: org.apache.ibatis.cache.decorators.SynchronizedCache.equals(java.lang.Object)::
20719 :: CALL :: call :: Z :: v6 = v4.equals(p1 $obj )::JM,20724:CL,20785
20724 :: NORM :: compound :: Z :: return v6::CF,20712
20785 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.LoggingCache.equals(java.lang.Object)::CE,20786:CD,20793:CD,20798
20786 :: EXIT :: exit :: Z :: org.apache.ibatis.cache.decorators.LoggingCache.equals(java.lang.Object)::JM,20724
20793 :: CALL :: call :: Z :: v6 = v4.equals(p1 $obj )::JM,20798:CL,23914:CL,23898
20798 :: NORM :: compound :: Z :: return v6::CF,20786
20917 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.equals(java.lang.Object)::CE,20918:CD,20922:JM,20929:JM,20933:JM,20935:JM,20924:JM,20925
20918 :: EXIT :: exit :: Z :: org.apache.ibatis.mapping.ResultMapping.equals(java.lang.Object)::
20922 :: PRED :: IF :: Z :: if (p0 $this  != p1 $o ) goto 8::CD,20923:CD,20924
20923 :: NORM :: compound :: Z :: return #(1)::CF,20918
20924 :: PRED :: IF :: Z :: if (p1 $o  == #(null)) goto 23::CD,20925:CD,20929:CD,20933:CD,20934:JM,20935:JM,20922:JM,20924
20925 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,20929:JM,20933:JM,20935:JM,20922:JM,20924:JM,20925
20929 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $o .getClass()::JM,20929:JM,20933:JM,20935:JM,20922:JM,20925
20933 :: PRED :: IF :: Z :: if (v6 == v8) goto 25::CD,20934:CD,20935:CD,20939
20934 :: NORM :: compound :: Z :: return #(0)::CF,20918
20935 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $o ::
20936 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .property::DD,20939
20939 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 51::CD,20946:CD,20951:CD,20952
20940 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .property::JM,20951
20943 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.property::JM,20951
20946 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,20951
20951 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 53::CD,20952:CD,20953
20952 :: NORM :: compound :: Z :: return #(0)::CF,20918
20953 :: NORM :: compound :: Z :: return #(1)::CF,20918
21080 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.getLog(java.lang.String)::CE,21081:CD,21084:CD,21086:CD,21091:CD,21096:CD,21097:CD,21099:CD,21104:CD,21109:CD,21114:CD,21119
21081 :: EXIT :: exit :: Lorg/apache/ibatis/logging/Log :: org.apache.ibatis.logging.LogFactory.getLog(java.lang.String)::JM,56211
21084 :: EXPR :: reference :: Ljava/lang/reflect/Constructor :: v3 = org.apache.ibatis.logging.LogFactory.logConstructor::JM,21091:JM,21096:CF,21086
21086 :: NORM :: declaration :: [Ljava/lang/Object :: v5 = new java.lang.Object[]::JM,21091:JM,21096
21091 :: CALL :: call :: Ljava/lang/Object :: v8 = v3.newInstance(v5)::JM,21091:JM,21096
21096 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::CF,21097
21097 :: NORM :: compound :: Lorg/apache/ibatis/logging/Log :: return v9::DD,21081
21099 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
21104 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(p1 $logger )::
21109 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(.  Cause: ))::
21114 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v10)::
21119 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
21135 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.6.run()::CD,21139
21139 :: CALL :: call :: V :: useNoLogging()::CL,24117
21142 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.1.run()::CD,21146
21146 :: CALL :: call :: V :: useSlf4jLogging()::CL,24125
21149 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.3.run()::CD,21153
21153 :: CALL :: call :: V :: useLog4J2Logging()::CL,24133
21156 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.2.run()::CD,21160
21160 :: CALL :: call :: V :: useCommonsLogging()::CL,24141
21163 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.5.run()::CD,21167
21167 :: CALL :: call :: V :: useJdkLogging()::CL,24149
21170 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.4.run()::CD,21174
21174 :: CALL :: call :: V :: useLog4JLogging()::CL,24157
21235 :: ENTR :: entry :: null :: org.apache.ibatis.io.ClassLoaderWrapper.classForName(java.lang.String)::CE,21236:CD,21240:CD,21245:CD,21251
21236 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.io.ClassLoaderWrapper.classForName(java.lang.String)::JM,18617
21240 :: CALL :: call :: [Ljava/lang/ClassLoader :: v6 = p0 $this .getClassLoaders(#(null))::CL,24189
21245 :: CALL :: call :: Ljava/lang/Class :: v8 = p0 $this .classForName(p1 $name , v6)::JM,21251:CL,24252
21251 :: NORM :: compound :: Ljava/lang/Class :: return v8::DD,21236
21256 :: ENTR :: entry :: null :: org.apache.ibatis.io.VFS.getClass(java.lang.String)::CD,21263:CD,21282:CD,21287:CD,21292
21263 :: CALL :: call :: Ljava/lang/ClassLoader :: v6 = v4.getContextClassLoader()::
21282 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
21287 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $className )::
21292 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
21315 :: ENTR :: entry :: null :: org.apache.ibatis.io.VFS.getMethod(java.lang.Class,java.lang.String,java.lang.Class[])::CD,21332:CD,21337:CD,21341:CD,21346:CD,21351:CD,21356:CD,21361:CD,21366:CD,21377:CD,21382:CD,21386:CD,21391:CD,21396:CD,21401:CD,21406:CD,21411:CD,21416:CD,21421
21332 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
21337 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $clazz .getName()::
21341 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
21346 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#(.))::
21351 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(p2 $methodName )::
21356 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(.  Cause: ))::
21361 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(v34)::
21366 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
21377 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
21382 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $clazz .getName()::
21386 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
21391 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(.))::
21396 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(p2 $methodName )::
21401 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(#(.))::
21406 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v23.append(p2 $methodName )::
21411 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(.  Cause: ))::
21416 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(v8)::
21421 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
21439 :: ENTR :: entry :: null :: org.apache.ibatis.io.JBoss6VFS.checkReturnType(java.lang.reflect.Method,java.lang.Class)::CD,21444:JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21444 :: PRED :: IF :: Z :: if (p1 $method  == #(null)) goto 92::CD,21445:CD,21449:CD,21454:JM,21508:JM,21462:JM,21494:JM,21480:JM,21512:JM,21466
21445 :: CALL :: call :: Ljava/lang/Class :: v6 = p1 $method .getReturnType()::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21449 :: CALL :: call :: Z :: v8 = p2 $expected .isAssignableFrom(v6)::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21454 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 92::CD,21457:CD,21462:CD,21466:CD,21470:CD,21475:CD,21480:CD,21484:CD,21489:CD,21494:CD,21498:CD,21503:CD,21508:CD,21512:CD,21516:CD,21521:CD,21526
21457 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
21462 :: CALL :: call :: Ljava/lang/Class :: v15 = p1 $method .getClass()::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21466 :: CALL :: call :: Ljava/lang/String :: v17 = v15.getName()::JM,21512:JM,21466:JM,21454
21470 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v11.append(v17)::
21475 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(.))::
21480 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $method .getName()::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21484 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v22.append(v24)::JM,21512:JM,21466:JM,21454
21489 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#((..) should return ))::
21494 :: CALL :: call :: Ljava/lang/String :: v31 = p2 $expected .getName()::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21498 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(v31)::JM,21512:JM,21466
21503 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v33.append(#( but returns ))::
21508 :: CALL :: call :: Ljava/lang/Class :: v38 = p1 $method .getReturnType()::JM,21508:JM,21445:JM,21462:JM,21494:JM,21480:JM,21512:JM,21449:JM,21466:JM,21454
21512 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getName()::JM,21512:JM,21466:JM,21454
21516 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
21521 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#( instead.))::
21526 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
22167 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .originalObject = p1 $object ::
22170 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/factory/ObjectFactory :: p0 $this .objectFactory = p2 $objectFactory ::
22173 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapperFactory :: p0 $this .objectWrapperFactory = p3 $objectWrapperFactory ::
22176 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/ReflectorFactory :: p0 $this .reflectorFactory = p4 $reflectorFactory ::
22179 :: EXPR :: assign :: Z :: v8=p1 $object  INSTANCEOF org.apache.ibatis.reflection.wrapper.ObjectWrapper::DD,22180
22180 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 45::CD,22181:CD,22186:CD,22191
22181 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST p1 $object ::DD,22182
22182 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: p0 $this .objectWrapper = v24::
22186 :: CALL :: call :: Z :: v11 = p3 $objectWrapperFactory .hasWrapperFor(p1 $object )::JM,22191:CL,24931
22191 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 69::CD,22192:CD,22202:CD,22203
22192 :: CALL :: call :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: v23 = p3 $objectWrapperFactory .getWrapperFor(p0 $this , p1 $object )::JM,22198:CL,24938
22198 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: p0 $this .objectWrapper = v23::
22202 :: EXPR :: assign :: Z :: v12=p1 $object  INSTANCEOF java.util.Map::DD,22203
22203 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 95::CD,22204:JM,24960:JM,26934:CD,22215:CD,22216
22204 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/wrapper/MapWrapper :: v19 = new org.apache.ibatis.reflection.wrapper.MapWrapper::DD,22211
22211 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: p0 $this .objectWrapper = v19::
22215 :: EXPR :: assign :: Z :: v13=p1 $object  INSTANCEOF java.util.Collection::DD,22216
22216 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 121::CD,22217:JM,24977:CD,22228:JM,24994:JM,26934:JM,25005
22217 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/wrapper/CollectionWrapper :: v16 = new org.apache.ibatis.reflection.wrapper.CollectionWrapper::DD,22224
22224 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: p0 $this .objectWrapper = v16::
22228 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/wrapper/BeanWrapper :: v14 = new org.apache.ibatis.reflection.wrapper.BeanWrapper::DD,22234
22234 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: p0 $this .objectWrapper = v14::
22274 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getResourceAsStream(java.lang.ClassLoader,java.lang.String)::CE,22275:CD,22281:CD,22288:CD,22289:CD,22294:CD,22299:CD,22308
22275 :: EXIT :: exit :: Ljava/io/InputStream :: org.apache.ibatis.io.Resources.getResourceAsStream(java.lang.ClassLoader,java.lang.String)::JM,19240:JM,47018
22281 :: CALL :: call :: Ljava/io/InputStream :: v6 = v4.getResourceAsStream(p2 $resource , p1 $loader )::JM,22308:CL,25021
22288 :: NORM :: declaration :: Ljava/io/IOException :: v8 = new java.io.IOException::
22289 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
22294 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p2 $resource )::
22299 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
22308 :: NORM :: compound :: Ljava/io/InputStream :: return v6::DD,22275
22350 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.parse()::CD,22370:CD,22375
22370 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v9 = v6.evalNode(#(/configuration))::CL,25165
22375 :: CALL :: call :: V :: p0 $this .parseConfiguration(v9)::CL,25183
22413 :: ENTR :: entry :: null :: org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.getTransactionFactoryFromEnvironment(org.apache.ibatis.mapping.Environment)::CD,22418
22418 :: PRED :: IF :: Z :: if (p1 $environment  == #(null)) goto 11::CD,22419:CD,22423
22419 :: CALL :: call :: Lorg/apache/ibatis/transaction/TransactionFactory :: v6 = p1 $environment .getTransactionFactory()::JM,22423:CL,25373
22423 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 20::
22449 :: ENTR :: entry :: null :: org.apache.ibatis.transaction.managed.ManagedTransactionFactory.newTransaction(javax.sql.DataSource,org.apache.ibatis.session.TransactionIsolationLevel,boolean)::
22471 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.newExecutor(org.apache.ibatis.transaction.Transaction,org.apache.ibatis.session.ExecutorType)::CD,22477:CD,22482:CD,22486:CD,22488:CD,22515:CD,22524:CD,22531:CD,22532
22477 :: PRED :: IF :: Z :: if (p2 $executorType  != #(null)) goto 14::CD,22531
22478 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v6 = p0 $this .defaultExecutorType::DD,22531
22482 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 25::CD,22483:CD,22532
22483 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v8 = org.apache.ibatis.session.ExecutorType.SIMPLE::DD,22532
22486 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v10 = org.apache.ibatis.session.ExecutorType.BATCH::DD,22488
22488 :: PRED :: IF :: Z :: if (v10 != v9) goto 45::JM,25441:JM,35378:JM,25434:CD,22496:CD,22498
22496 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v11 = org.apache.ibatis.session.ExecutorType.REUSE::DD,22498
22498 :: PRED :: IF :: Z :: if (v11 != v9) goto 65::JM,35378:JM,25467
22512 :: EXPR :: reference :: Z :: v19 = p0 $this .cacheEnabled::DD,22515
22515 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 92::JM,29883
22524 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.pluginAll(v23)::CL,25525
22531 :: EXPR :: assign :: null :: PHI v7 = v6, p2 $executorType ::DD,22482:DD,22532
22532 :: EXPR :: assign :: null :: PHI v9 = v8, v7::DD,22488:DD,22498
22598 :: ENTR :: entry :: null :: org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.closeTransaction(org.apache.ibatis.transaction.Transaction)::CD,22603
22603 :: PRED :: IF :: Z :: if (p1 $tx  == #(null)) goto 14::CD,22604
22604 :: CALL :: call :: V :: p1 $tx .close()::CL,23515
22708 :: ENTR :: entry :: null :: org.apache.ibatis.executor.ErrorContext.toString()::CD,22712:CD,22719:CD,22743:CD,22767:CD,22791:CD,22815:CD,22861:CD,22886
22712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
22716 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .message::DD,22719
22719 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 40::CD,22720:CD,22722:CD,22727:CD,22735
22720 :: EXPR :: reference :: Ljava/lang/String :: v7 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22722 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v3.append(v7)::
22727 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(#(### ))::
22732 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .message::
22735 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v3.append(v13)::
22740 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .resource::DD,22743
22743 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 71::CD,22744:CD,22746:CD,22751:CD,22759
22744 :: EXPR :: reference :: Ljava/lang/String :: v17 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22746 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v3.append(v17)::
22751 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v3.append(#(### The error may exi...))::
22756 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .resource::
22759 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v3.append(v23)::
22764 :: EXPR :: reference :: Ljava/lang/String :: v26 = p0 $this .object::DD,22767
22767 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 102::CD,22768:CD,22770:CD,22775:CD,22783
22768 :: EXPR :: reference :: Ljava/lang/String :: v27 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22770 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v3.append(v27)::
22775 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(#(### The error may inv...))::
22780 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .object::
22783 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v3.append(v33)::
22788 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .activity::DD,22791
22791 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 133::CD,22792:CD,22794:CD,22799:CD,22807
22792 :: EXPR :: reference :: Ljava/lang/String :: v37 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22794 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v3.append(v37)::
22799 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v3.append(#(### The error occurre...))::
22804 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .activity::
22807 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v3.append(v43)::
22812 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .sql::DD,22815
22815 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 188::CD,22816:CD,22818:CD,22823:CD,22831:CD,22837:CD,22843:CD,22849:CD,22853
22816 :: EXPR :: reference :: Ljava/lang/String :: v47 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22818 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v3.append(v47)::
22823 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v3.append(#(### SQL: ))::
22828 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .sql::JM,22849:JM,22837:JM,22843:JM,22831
22831 :: CALL :: call :: Ljava/lang/String :: v57 = v53.replace(#(10), #(32))::JM,22849:JM,22837:JM,22843:JM,22831
22837 :: CALL :: call :: Ljava/lang/String :: v60 = v57.replace(#(13), #(32))::JM,22849:JM,22837:JM,22843
22843 :: CALL :: call :: Ljava/lang/String :: v63 = v60.replace(#(9), #(32))::JM,22849:JM,22843
22849 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,22849
22853 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v3.append(v65)::
22858 :: EXPR :: reference :: Ljava/lang/Throwable :: v68 = p0 $this .cause::DD,22861
22861 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 222::CD,22862:CD,22864:CD,22869:CD,22877:CD,22881
22862 :: EXPR :: reference :: Ljava/lang/String :: v69 = org.apache.ibatis.executor.ErrorContext.LINE_SEPARATOR::
22864 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v3.append(v69)::
22869 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v3.append(#(### Cause: ))::
22877 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
22881 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v3.append(v77)::
22886 :: CALL :: call :: Ljava/lang/String :: v81 = v3.toString()::
23018 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.println(java.lang.Object)::CD,23026
23023 :: EXPR :: reference :: Ljava/io/PrintWriter :: v4 = p0 $this .logWriter::DD,23026
23026 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,23030:CD,23037
23030 :: CALL :: call :: V :: v6.println(p1 $o )::
23034 :: EXPR :: reference :: Ljava/io/PrintWriter :: v8 = p0 $this .logWriter::
23037 :: CALL :: call :: V :: v8.flush()::
23046 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.executeStatement(java.lang.String)::CD,23054:CD,23068:CD,23078:CD,23100:CD,23105:CD,23110:CD,23115:CD,23120:CD,23124:CD,23128:CD,23140:JM,23367:JM,23354:JM,23295
23051 :: EXPR :: reference :: Ljava/sql/Connection :: v5 = p0 $this .connection::JM,23079:JM,23054
23054 :: CALL :: call :: Ljava/sql/Statement :: v7 = v5.createStatement()::JM,23079:JM,23054
23065 :: EXPR :: reference :: Z :: v10 = p0 $this .removeCRs::DD,23068
23068 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CF,23140:CD,23069
23069 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $command .replaceAll(#( ), #())::JM,23140
23075 :: EXPR :: reference :: Z :: v16 = p0 $this .stopOnError::DD,23078
23078 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 86::CD,23079
23079 :: CALL :: call :: Z :: v34 = v7.execute(v15)::JM,23079
23100 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
23105 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $command )::JM,23140:JM,23367:JM,23354:JM,23295
23110 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(.  Cause: ))::JM,23354
23115 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v19)::
23120 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
23124 :: CALL :: call :: V :: p0 $this .printlnError(v31)::CL,23217
23128 :: CALL :: call :: V :: p0 $this .printResults(v7, v40)::CL,25770
23140 :: EXPR :: assign :: null :: PHI v15 = p1 $command , v14::JM,23079
23217 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.printlnError(java.lang.Object)::CD,23225
23222 :: EXPR :: reference :: Ljava/io/PrintWriter :: v4 = p0 $this .errorLogWriter::DD,23225
23225 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,23229:CD,23236
23229 :: CALL :: call :: V :: v6.println(p1 $o )::
23233 :: EXPR :: reference :: Ljava/io/PrintWriter :: v8 = p0 $this .errorLogWriter::
23236 :: CALL :: call :: V :: v8.flush()::
23245 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.handleLine(java.lang.StringBuilder,java.lang.String)::CE,23246:CD,23251:CD,23255:CD,23260:JM,23140:JM,23367:JM,23354:JM,23295
23246 :: EXIT :: exit :: Ljava/lang/StringBuilder :: org.apache.ibatis.jdbc.ScriptRunner.handleLine(java.lang.StringBuilder,java.lang.String)::JM,19829
23251 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $line .trim()::JM,23354
23255 :: CALL :: call :: Z :: v8 = p0 $this .lineIsComment(v6)::JM,23260:CL,25937
23260 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 68::CD,23261:CD,23266:CD,23270:CD,23276:CD,23280:CD,23285:CD,23301:CD,23306:CD,23367:JM,23354
23261 :: CALL :: call :: Ljava/lang/String :: v36 = v6.substring(#(2))::JM,23354
23266 :: CALL :: call :: Ljava/lang/String :: v38 = v36.trim()::JM,23354
23270 :: CALL :: call :: Ljava/lang/String :: v42 = v38.replaceFirst(#(//), #())::JM,23292
23276 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toUpperCase()::JM,23285
23280 :: CALL :: call :: Z :: v47 = v44.startsWith(#(@DELIMITER))::JM,23285
23285 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 60::CD,23286:CD,23295:CD,23296:CD,23367:JM,23292
23286 :: CALL :: call :: Ljava/lang/String :: v52 = v42.substring(#(11), #(12))::JM,23292
23292 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .delimiter = v52::
23295 :: NORM :: compound :: Ljava/lang/StringBuilder :: return p1 $command ::DD,23246
23296 :: CALL :: call :: V :: p0 $this .println(v6)::CL,23018
23301 :: CALL :: call :: Z :: v11 = p0 $this .commandReadyToExecute(v6)::JM,23306:CL,25974
23306 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 122::CD,23310:CD,23315:CD,23321:CD,23326:CD,23328:CD,23333:CD,23337:CD,23341:CD,23345:CD,23350:CD,23354
23307 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .delimiter::JM,23354
23310 :: CALL :: call :: I :: v21 = p2 $line .lastIndexOf(v19)::JM,23354
23315 :: CALL :: call :: Ljava/lang/String :: v23 = p2 $line .substring(#(0), v21)::JM,23354
23321 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = p1 $command .append(v23)::JM,23367:JM,23354
23326 :: EXPR :: reference :: Ljava/lang/String :: v26 = org.apache.ibatis.jdbc.ScriptRunner.LINE_SEPARATOR::JM,23367:JM,23354
23328 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = p1 $command .append(v26)::JM,23367:JM,23354
23333 :: CALL :: call :: V :: p0 $this .println(p1 $command )::CL,23018
23337 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $command .toString()::JM,23367:JM,23354
23341 :: CALL :: call :: V :: p0 $this .executeStatement(v31)::JM,23140:JM,23367:JM,23354:JM,23295:CL,23046
23345 :: CALL :: call :: V :: p1 $command .setLength(#(0))::JM,23367:JM,23354
23350 :: CALL :: call :: I :: v13 = v6.length()::JM,23354
23354 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 143::CD,23355:CD,23360:CD,23362:JM,23354:CF,23367
23355 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = p1 $command .append(p2 $line )::JM,23367:JM,23354
23360 :: EXPR :: reference :: Ljava/lang/String :: v16 = org.apache.ibatis.jdbc.ScriptRunner.LINE_SEPARATOR::JM,23367:JM,23354
23362 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = p1 $command .append(v16)::JM,23367:JM,23354
23367 :: NORM :: compound :: Ljava/lang/StringBuilder :: return p1 $command ::DD,23246
23515 :: ENTR :: entry :: null :: org.apache.ibatis.transaction.managed.ManagedTransaction.close()::CD,23522
23519 :: EXPR :: reference :: Z :: v3 = p0 $this .closeConnection::DD,23522
23522 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 66::CD,23526
23523 :: EXPR :: reference :: Ljava/sql/Connection :: v5 = p0 $this .connection::DD,23526
23526 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 66::CD,23527:CD,23529:CD,23533
23527 :: EXPR :: reference :: Lorg/apache/ibatis/logging/Log :: v7 = org.apache.ibatis.transaction.managed.ManagedTransaction.log::JM,23529:JM,23533
23529 :: CALL :: call :: Z :: v9 = v7.isDebugEnabled()::JM,23529:JM,23533
23533 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 58::CD,23536:CD,23544:CD,23549:CD,23554
23536 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
23544 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
23549 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(]))::
23554 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
23859 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.ScheduledCache.hashCode()::CE,23860:CD,23866:CD,23870
23860 :: EXIT :: exit :: I :: org.apache.ibatis.cache.decorators.ScheduledCache.hashCode()::JM,20451:JM,23883
23863 :: EXPR :: reference :: Lorg/apache/ibatis/cache/Cache :: v3 = p0 $this .delegate::JM,23866:JM,23870
23866 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,23866:JM,23870
23870 :: NORM :: compound :: I :: return v5::CF,23860
23872 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.SerializedCache.hashCode()::CE,23873:CD,23879:CD,23883
23873 :: EXIT :: exit :: I :: org.apache.ibatis.cache.decorators.SerializedCache.hashCode()::JM,20451
23879 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,23883:CL,23859
23883 :: NORM :: compound :: I :: return v5::CF,23873
23898 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.ScheduledCache.equals(java.lang.Object)::CE,23899:CD,23906:CD,23911
23899 :: EXIT :: exit :: Z :: org.apache.ibatis.cache.decorators.ScheduledCache.equals(java.lang.Object)::JM,20798:JM,23927
23903 :: EXPR :: reference :: Lorg/apache/ibatis/cache/Cache :: v4 = p0 $this .delegate::JM,23906:JM,23911
23906 :: CALL :: call :: Z :: v6 = v4.equals(p1 $obj )::JM,23906:JM,23911
23911 :: NORM :: compound :: Z :: return v6::CF,23899
23914 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.SerializedCache.equals(java.lang.Object)::CE,23915:CD,23922:CD,23927
23915 :: EXIT :: exit :: Z :: org.apache.ibatis.cache.decorators.SerializedCache.equals(java.lang.Object)::JM,20798
23922 :: CALL :: call :: Z :: v6 = v4.equals(p1 $obj )::JM,23927:CL,23898
23927 :: NORM :: compound :: Z :: return v6::CF,23915
24117 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useNoLogging()::CD,24121
24121 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24125 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useSlf4jLogging()::CD,24129
24129 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24133 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useLog4J2Logging()::CD,24137
24137 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24141 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useCommonsLogging()::CD,24145
24145 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24149 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useJdkLogging()::CD,24153
24153 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24157 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useLog4JLogging()::CD,24161
24161 :: CALL :: call :: V :: setImplementation(v2)::CL,26280
24176 :: CALL :: call :: Ljava/lang/reflect/Type :: v7 = p0 $this .getSuperclassTypeParameter(v5)::JM,24181:CL,26384
24181 :: EXPR :: modify :: Ljava/lang/reflect/Type :: p0 $this .rawType = v7::
24189 :: ENTR :: entry :: null :: org.apache.ibatis.io.ClassLoaderWrapper.getClassLoaders(java.lang.ClassLoader)::CD,24209:CD,24221
24209 :: CALL :: call :: Ljava/lang/ClassLoader :: v13 = v11.getContextClassLoader()::
24221 :: CALL :: call :: Ljava/lang/ClassLoader :: v18 = v16.getClassLoader()::
24252 :: ENTR :: entry :: null :: org.apache.ibatis.io.ClassLoaderWrapper.classForName(java.lang.String,java.lang.ClassLoader[])::CE,24253:CD,24265:CD,24271:CD,24272:CD,24276:CD,24281:CD,24286
24253 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.io.ClassLoaderWrapper.classForName(java.lang.String,java.lang.ClassLoader[])::JM,21251
24265 :: CALL :: call :: Ljava/lang/Class :: v11 = forName(p1 $name , #(1), v7)::JM,24272:JM,24271
24271 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 41::CD,24265:CF,24272
24272 :: NORM :: compound :: Ljava/lang/Class :: return v11::DD,24253
24276 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
24281 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $name )::
24286 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
24931 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.hasWrapperFor(java.lang.Object)::CF,24932:CD,24936
24932 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.hasWrapperFor(java.lang.Object)::JM,22191
24936 :: NORM :: compound :: Z :: return #(0)::CF,24932
24938 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.getWrapperFor(org.apache.ibatis.reflection.MetaObject,java.lang.Object)::CE,24939
24939 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapper :: org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.getWrapperFor(org.apache.ibatis.reflection.MetaObject,java.lang.Object)::JM,22198
24960 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .map = p2 $map ::
24977 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .object = p2 $object ::
24994 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .object = p2 $object ::
25005 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v11 = forClass(v7, v9)::JM,25010:CL,26950
25010 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/MetaClass :: p0 $this .metaClass = v11::
25021 :: ENTR :: entry :: null :: org.apache.ibatis.io.ClassLoaderWrapper.getResourceAsStream(java.lang.String,java.lang.ClassLoader)::CE,25022:CD,25027:CD,25032:CD,25038
25022 :: EXIT :: exit :: Ljava/io/InputStream :: org.apache.ibatis.io.ClassLoaderWrapper.getResourceAsStream(java.lang.String,java.lang.ClassLoader)::JM,22308
25027 :: CALL :: call :: [Ljava/lang/ClassLoader :: v6 = p0 $this .getClassLoaders(p2 $classLoader )::CL,24189
25032 :: CALL :: call :: Ljava/io/InputStream :: v8 = p0 $this .getResourceAsStream(p1 $resource , v6)::JM,25038:CL,26965
25038 :: NORM :: compound :: Ljava/io/InputStream :: return v8::DD,25022
25074 :: CALL :: call :: Lorg/w3c/dom/Document :: v12 = p0 $this .createDocument(v9)::CL,27074
25114 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v12 = instance()::CL,20134
25125 :: CALL :: call :: V :: v16.setVariables(p3 $props )::CL,27820
25165 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XPathParser.evalNode(java.lang.String)::CD,25173
25173 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v6 = p0 $this .evalNode(v4, p1 $expression )::CL,27831
25183 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(org.apache.ibatis.parsing.XNode)::CD,25188:CD,25193:CD,25197:CD,25202:CD,25207:CD,25211:CD,25216:CD,25220:CD,25225:CD,25229:CD,25234:CD,25238:CD,25243:CD,25247:CD,25252:CD,25256:CD,25260:CD,25265:CD,25269:CD,25274:CD,25278:CD,25283:CD,25287:CD,25292:CD,25298:CD,25303:CD,25308
25188 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v6 = p1 $root .evalNode(#(properties))::CL,27870
25193 :: CALL :: call :: V :: p0 $this .propertiesElement(v6)::CL,27891
25197 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v10 = p1 $root .evalNode(#(settings))::CL,27870
25202 :: CALL :: call :: Ljava/util/Properties :: v12 = p0 $this .settingsAsProperties(v10)::CL,27997
25207 :: CALL :: call :: V :: p0 $this .loadCustomVfs(v12)::CL,28092
25211 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v16 = p1 $root .evalNode(#(typeAliases))::CL,27870
25216 :: CALL :: call :: V :: p0 $this .typeAliasesElement(v16)::CL,28161
25220 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v20 = p1 $root .evalNode(#(plugins))::CL,27870
25225 :: CALL :: call :: V :: p0 $this .pluginElement(v20)::CL,28309
25229 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v24 = p1 $root .evalNode(#(objectFactory))::CL,27870
25234 :: CALL :: call :: V :: p0 $this .objectFactoryElement(v24)::CL,28385
25238 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v28 = p1 $root .evalNode(#(objectWrapperFactory))::CL,27870
25243 :: CALL :: call :: V :: p0 $this .objectWrapperFactoryElement(v28)::CL,28436
25247 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v32 = p1 $root .evalNode(#(reflectorFactory))::CL,27870
25252 :: CALL :: call :: V :: p0 $this .reflectorFactoryElement(v32)::CL,28475
25256 :: CALL :: call :: V :: p0 $this .settingsElement(v12)::CL,28514
25260 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v37 = p1 $root .evalNode(#(environments))::CL,27870
25265 :: CALL :: call :: V :: p0 $this .environmentsElement(v37)::CL,29191
25269 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v41 = p1 $root .evalNode(#(databaseIdProvider))::CL,27870
25274 :: CALL :: call :: V :: p0 $this .databaseIdProviderElement(v41)::CL,29326
25278 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v45 = p1 $root .evalNode(#(typeHandlers))::CL,27870
25283 :: CALL :: call :: V :: p0 $this .typeHandlerElement(v45)::CL,29417
25287 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v49 = p1 $root .evalNode(#(mappers))::CL,27870
25292 :: CALL :: call :: V :: p0 $this .mapperElement(v49)::CL,29571
25298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
25303 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v53.append(v51)::
25308 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
25373 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Environment.getTransactionFactory()::CE,25374:CD,25380
25374 :: EXIT :: exit :: Lorg/apache/ibatis/transaction/TransactionFactory :: org.apache.ibatis.mapping.Environment.getTransactionFactory()::JM,22423
25377 :: EXPR :: reference :: Lorg/apache/ibatis/transaction/TransactionFactory :: v3 = p0 $this .transactionFactory::DD,25380
25380 :: NORM :: compound :: Lorg/apache/ibatis/transaction/TransactionFactory :: return v3::CF,25374
25434 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,35378
25441 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::JM,35378
25467 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::JM,35378
25525 :: ENTR :: entry :: null :: org.apache.ibatis.plugin.InterceptorChain.pluginAll(java.lang.Object)::CD,25533:CD,25548:CD,25552
25530 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .interceptors::JM,25552
25533 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,25552
25538 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,25552
25548 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,25552
25552 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,25538:CD,25548:JM,25552
25770 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.printResults(java.sql.Statement,boolean)::CD,25776:CD,25867:CD,25872:CD,25876:CD,25881:CD,25885:CD,25890:JM,25856:JM,25777:JM,25781:JM,25861:JM,25782:JM,25865:JM,25786:JM,25820
25776 :: PRED :: IF :: Z :: if (p2 $hasResults  == #(0)) goto 191::CD,25777:CD,25781:JM,25776:JM,25856:JM,25861:JM,25782:JM,25865:JM,25786:JM,25820
25777 :: CALL :: call :: Ljava/sql/ResultSet :: v7 = p1 $statement .getResultSet()::JM,25776:JM,25856:JM,25777:JM,25781:JM,25861:JM,25782:JM,25865:JM,25786:JM,25820
25781 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 191::CD,25782:CD,25786:CD,25820:CD,25821:CD,25861:CD,25865:CD,25891:JM,25856
25782 :: CALL :: call :: Ljava/sql/ResultSetMetaData :: v10 = v7.getMetaData()::JM,25856:JM,25861:JM,25782:JM,25865:JM,25786:JM,25820
25786 :: CALL :: call :: I :: v12 = v10.getColumnCount()::JM,25856:JM,25865:JM,25786:JM,25820
25797 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
25798 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v16)::
25806 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(#(	))::
25811 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
25815 :: CALL :: call :: V :: p0 $this .print(v25)::CL,29942
25819 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v28 + #(1)::DD,25891
25820 :: PRED :: IF :: Z :: if (v28 < v12) goto 43::CD,25797:CD,25798:CD,25806:CD,25811:CD,25815:CD,25819:CD,25891
25821 :: CALL :: call :: V :: p0 $this .println(#())::CL,23018
25833 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
25834 :: CALL :: call :: Ljava/lang/String :: v38 = valueOf(v35)::
25842 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(#(	))::
25847 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
25851 :: CALL :: call :: V :: p0 $this .print(v43)::CL,29942
25855 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v46 + #(1)::DD,25892
25856 :: PRED :: IF :: Z :: if (v46 < v12) goto 105::CD,25833:CD,25834:CD,25842:CD,25847:CD,25851:CD,25855:CD,25892
25857 :: CALL :: call :: V :: p0 $this .println(#())::CL,23018
25861 :: CALL :: call :: Z :: v32 = v7.next()::JM,25856:JM,25861:JM,25782:JM,25865:JM,25786:JM,25820
25865 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 98::CD,25856:CD,25857:CD,25861:CD,25892
25867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
25872 :: CALL :: call :: Ljava/lang/String :: v54 = v49.getMessage()::
25876 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(v54)::
25881 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
25885 :: CALL :: call :: V :: p0 $this .printlnError(v58)::CL,23217
25890 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
25891 :: EXPR :: assign :: null :: PHI v28 = #(0), v27::DD,25819:DD,25820
25892 :: EXPR :: assign :: null :: PHI v46 = #(0), v45::DD,25855:DD,25856
25937 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.lineIsComment(java.lang.String)::CE,25938:CD,25942:CD,25947:JM,25953
25938 :: EXIT :: exit :: Z :: org.apache.ibatis.jdbc.ScriptRunner.lineIsComment(java.lang.String)::JM,23260
25942 :: CALL :: call :: Z :: v6 = p1 $trimmedLine .startsWith(#(//))::JM,25953:JM,25947
25947 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 22::CD,25948:CD,25953:CD,25955:JM,25947
25948 :: CALL :: call :: Z :: v10 = p1 $trimmedLine .startsWith(#(--))::JM,25953:JM,25947
25953 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,25954:CD,25955
25954 :: NORM :: compound :: Z :: return #(0)::CF,25938
25955 :: NORM :: compound :: Z :: return #(1)::CF,25938
25974 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.commandReadyToExecute(java.lang.String)::CE,25975:CD,25982:JM,26004:JM,25991
25975 :: EXIT :: exit :: Z :: org.apache.ibatis.jdbc.ScriptRunner.commandReadyToExecute(java.lang.String)::JM,23306
25979 :: EXPR :: reference :: Z :: v4 = p0 $this .fullLineDelimiter::DD,25982
25982 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 19::CD,25986:CD,25991:CD,25995
25983 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .delimiter::JM,26004:JM,25991
25986 :: CALL :: call :: Z :: v8 = p1 $trimmedLine .contains(v6)::JM,26004:JM,25991
25991 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 39::CD,25995:CD,26006
25992 :: EXPR :: reference :: Z :: v9 = p0 $this .fullLineDelimiter::DD,25995
25995 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 37::CD,25999:CD,26004:CD,26005
25996 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .delimiter::JM,26004:JM,25991
25999 :: CALL :: call :: Z :: v12 = p1 $trimmedLine .equals(v10)::JM,26004:JM,25991
26004 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 39::CD,26005:CD,26006
26005 :: NORM :: compound :: Z :: return #(0)::CF,25975
26006 :: NORM :: compound :: Z :: return #(1)::CF,25975
26280 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.setImplementation(java.lang.Class)::CD,26290:CD,26295:CD,26305:CD,26310:CD,26311:CD,26315:CD,26343:CD,26348:CD,26353
26290 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v8 = p1 $implClass .getConstructor(v4)::JM,26305:JM,26310
26295 :: NORM :: declaration :: [Ljava/lang/Object :: v9 = new java.lang.Object[]::JM,26305:JM,26310
26305 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.newInstance(v9)::JM,26305:JM,26310
26310 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,26311:JM,26315
26311 :: CALL :: call :: Z :: v17 = v15.isDebugEnabled()::JM,26311:JM,26315
26315 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,26316:CD,26321:CD,26326:CD,26331
26316 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
26321 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $implClass )::
26326 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(' adapter.))::
26331 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
26343 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
26348 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v29)::
26353 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
26384 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeReference.getSuperclassTypeParameter(java.lang.Class)::CE,26385:CD,26389:CD,26393:CD,26394:CD,26408:CD,26417:CD,26422:CD,26427:CD,26432:JM,26441
26385 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.type.TypeReference.getSuperclassTypeParameter(java.lang.Class)::JM,24181:JM,26406
26389 :: CALL :: call :: Ljava/lang/reflect/Type :: v5 = p1 $clazz .getGenericSuperclass()::JM,26393:JM,26441
26393 :: EXPR :: assign :: Z :: v6=v5 INSTANCEOF java.lang.Class::DD,26394
26394 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 65::CD,26401:CD,26406:CD,26441:CD,26442:CD,26450:CD,26451:CD,26457:CD,26458
26401 :: CALL :: call :: Ljava/lang/reflect/Type :: v38 = p0 $this .getSuperclassTypeParameter(v36)::JM,26406:CL,26384
26406 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v38::DD,26385
26408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
26417 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
26422 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(' extends TypeReferen...))::
26427 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#(Remove the extension ...))::
26432 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
26441 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v5::JM,26442
26442 :: CALL :: call :: [Ljava/lang/reflect/Type :: v10 = v8.getActualTypeArguments()::JM,26442
26446 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[#(0)]::DD,26450:DD,26452:DD,26458
26450 :: EXPR :: assign :: Z :: v12=v11 INSTANCEOF java.lang.reflect.ParameterizedType::DD,26451
26451 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CF,26458:CD,26452:CD,26453
26452 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v11::JM,26453:JM,26458
26453 :: CALL :: call :: Ljava/lang/reflect/Type :: v15 = v13.getRawType()::JM,26453:JM,26458
26457 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v16::DD,26385
26458 :: EXPR :: assign :: null :: PHI v16 = v11, v15::CF,26457
26934 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/MetaObject :: p0 $this .metaObject = p1 $metaObject ::
26950 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.forClass(java.lang.Class,org.apache.ibatis.reflection.ReflectorFactory)::CE,26951:CD,26955:JM,31728:JM,31725:CD,26961
26951 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/MetaClass :: org.apache.ibatis.reflection.MetaClass.forClass(java.lang.Class,org.apache.ibatis.reflection.ReflectorFactory)::JM,25010
26955 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/MetaClass :: v4 = new org.apache.ibatis.reflection.MetaClass::DD,26961
26961 :: NORM :: compound :: Lorg/apache/ibatis/reflection/MetaClass :: return v4::DD,26951
26965 :: ENTR :: entry :: null :: org.apache.ibatis.io.ClassLoaderWrapper.getResourceAsStream(java.lang.String,java.lang.ClassLoader[])::CE,26966:CD,26971:CD,27006:CD,27009:JM,27008:JM,26983
26966 :: EXIT :: exit :: Ljava/io/InputStream :: org.apache.ibatis.io.ClassLoaderWrapper.getResourceAsStream(java.lang.String,java.lang.ClassLoader[])::JM,25038
26971 :: EXPR :: assign :: I :: v5 = p2 $classLoader .length::DD,27006
26973 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p2 $classLoader [v23]::DD,26977:JM,27008:JM,26983
26977 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 65::CD,26978:CD,26983:CD,27003:CD,27005:CD,27006:CD,27008:CD,27009
26978 :: CALL :: call :: Ljava/io/InputStream :: v10 = v7.getResourceAsStream(p1 $resource )::JM,27008:JM,26983:JM,26971
26983 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 59::CF,27008:CD,26984:CD,26989:CD,26994:CD,26998
26984 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::JM,27008
26989 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $resource )::JM,27008:JM,26983:JM,26971
26994 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,27008
26998 :: CALL :: call :: Ljava/io/InputStream :: v19 = v7.getResourceAsStream(v17)::JM,27008
27003 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 65::CD,27004:CD,27005:CD,27006:CD,27009
27004 :: NORM :: compound :: Ljava/io/InputStream :: return v20::DD,26966
27005 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,27009
27006 :: PRED :: IF :: Z :: if (v23 < v5) goto 17::CD,26977:CD,27007
27007 :: NORM :: compound :: Ljava/io/InputStream :: return #(null)::DD,26966
27008 :: EXPR :: assign :: null :: PHI v20 = v10, v19::DD,27003:DD,27004
27009 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,27005:DD,27006
27074 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XPathParser.createDocument(org.xml.sax.InputSource)::CD,27136:CD,27141:CD,27146
27136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
27141 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::
27146 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
27186 :: EXPR :: modify :: Z :: p0 $this .safeResultHandlerEnabled = #(1)::
27189 :: EXPR :: modify :: Z :: p0 $this .multipleResultSetsEnabled = #(1)::
27192 :: EXPR :: modify :: Z :: p0 $this .useColumnLabel = #(1)::
27195 :: EXPR :: modify :: Z :: p0 $this .cacheEnabled = #(1)::
27198 :: EXPR :: modify :: Z :: p0 $this .useActualParamName = #(1)::
27201 :: EXPR :: reference :: Lorg/apache/ibatis/session/LocalCacheScope :: v5 = org.apache.ibatis.session.LocalCacheScope.SESSION::DD,27203
27203 :: EXPR :: modify :: Lorg/apache/ibatis/session/LocalCacheScope :: p0 $this .localCacheScope = v5::
27206 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v6 = org.apache.ibatis.type.JdbcType.OTHER::DD,27208
27208 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: p0 $this .jdbcTypeForNull = v6::
27211 :: NORM :: declaration :: Ljava/util/HashSet :: v7 = new java.util.HashSet::DD,27237:CF,27212
27212 :: NORM :: declaration :: [Ljava/lang/String :: v9 = new java.lang.String[]::JM,27229
27213 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(0)] = #(equals)::
27217 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(1)] = #(clone)::
27221 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(2)] = #(hashCode)::
27225 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(3)] = #(toString)::
27229 :: CALL :: call :: Ljava/util/List :: v18 = asList(v9)::JM,27229
27237 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .lazyLoadTriggerMethods = v7::
27240 :: EXPR :: reference :: Lorg/apache/ibatis/session/ExecutorType :: v20 = org.apache.ibatis.session.ExecutorType.SIMPLE::DD,27242
27242 :: EXPR :: modify :: Lorg/apache/ibatis/session/ExecutorType :: p0 $this .defaultExecutorType = v20::
27245 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v21 = org.apache.ibatis.session.AutoMappingBehavior.PARTIAL::DD,27247
27247 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingBehavior :: p0 $this .autoMappingBehavior = v21::
27250 :: EXPR :: reference :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v22 = org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.NONE::DD,27252
27252 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: p0 $this .autoMappingUnknownColumnBehavior = v22::
27255 :: NORM :: declaration :: Ljava/util/Properties :: v23 = new java.util.Properties::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27259
27259 :: EXPR :: modify :: Ljava/util/Properties :: p0 $this .variables = v23::
27262 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/DefaultReflectorFactory :: v25 = new org.apache.ibatis.reflection.DefaultReflectorFactory::DD,27266
27266 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/ReflectorFactory :: p0 $this .reflectorFactory = v25::
27269 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/factory/DefaultObjectFactory :: v27 = new org.apache.ibatis.reflection.factory.DefaultObjectFactory::DD,27273
27273 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/factory/ObjectFactory :: p0 $this .objectFactory = v27::
27276 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/wrapper/DefaultObjectWrapperFactory :: v29 = new org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory::DD,27280
27280 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapperFactory :: p0 $this .objectWrapperFactory = v29::
27283 :: EXPR :: modify :: Z :: p0 $this .lazyLoadingEnabled = #(0)::
27286 :: NORM :: declaration :: Lorg/apache/ibatis/executor/loader/javassist/JavassistProxyFactory :: v31 = new org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory::DD,27290
27290 :: EXPR :: modify :: Lorg/apache/ibatis/executor/loader/ProxyFactory :: p0 $this .proxyFactory = v31::
27293 :: NORM :: declaration :: Lorg/apache/ibatis/binding/MapperRegistry :: v33 = new org.apache.ibatis.binding.MapperRegistry::DD,27298
27298 :: EXPR :: modify :: Lorg/apache/ibatis/binding/MapperRegistry :: p0 $this .mapperRegistry = v33::
27301 :: NORM :: declaration :: Lorg/apache/ibatis/plugin/InterceptorChain :: v35 = new org.apache.ibatis.plugin.InterceptorChain::DD,27305
27305 :: EXPR :: modify :: Lorg/apache/ibatis/plugin/InterceptorChain :: p0 $this .interceptorChain = v35::
27308 :: NORM :: declaration :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: v37 = new org.apache.ibatis.type.TypeHandlerRegistry::DD,27312
27312 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: p0 $this .typeHandlerRegistry = v37::
27315 :: NORM :: declaration :: Lorg/apache/ibatis/type/TypeAliasRegistry :: v39 = new org.apache.ibatis.type.TypeAliasRegistry::DD,27319
27319 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeAliasRegistry :: p0 $this .typeAliasRegistry = v39::
27322 :: NORM :: declaration :: Lorg/apache/ibatis/scripting/LanguageDriverRegistry :: v41 = new org.apache.ibatis.scripting.LanguageDriverRegistry::DD,27326
27326 :: EXPR :: modify :: Lorg/apache/ibatis/scripting/LanguageDriverRegistry :: p0 $this .languageRegistry = v41::
27329 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v43 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27334
27334 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .mappedStatements = v43::
27337 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v46 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27342
27342 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .caches = v46::
27345 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v49 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27350
27350 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .resultMaps = v49::
27353 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v52 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27358
27358 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .parameterMaps = v52::
27361 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v55 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27366
27366 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .keyGenerators = v55::
27369 :: NORM :: declaration :: Ljava/util/HashSet :: v58 = new java.util.HashSet::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27373
27373 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .loadedResources = v58::
27376 :: NORM :: declaration :: Lorg/apache/ibatis/session/Configuration$StrictMap :: v60 = new org.apache.ibatis.session.Configuration$StrictMap::DD,27381
27381 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .sqlFragments = v60::
27384 :: NORM :: declaration :: Ljava/util/LinkedList :: v63 = new java.util.LinkedList::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27388
27388 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .incompleteStatements = v63::
27391 :: NORM :: declaration :: Ljava/util/LinkedList :: v65 = new java.util.LinkedList::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27395
27395 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .incompleteCacheRefs = v65::
27398 :: NORM :: declaration :: Ljava/util/LinkedList :: v67 = new java.util.LinkedList::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27402
27402 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .incompleteResultMaps = v67::
27405 :: NORM :: declaration :: Ljava/util/LinkedList :: v69 = new java.util.LinkedList::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27409
27409 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .incompleteMethods = v69::
27412 :: NORM :: declaration :: Ljava/util/HashMap :: v71 = new java.util.HashMap::JM,32002:JM,33029:JM,32263:JM,32519:JM,33035:JM,32013:JM,33296:JM,33041:JM,32274:JM,32530:JM,32023:JM,33047:JM,32285:JM,32541:JM,33053:JM,32034:JM,33059:JM,33315:JM,32551:JM,32296:JM,33065:JM,32045:JM,33071:JM,32307:JM,32563:JM,33077:JM,32055:JM,33083:JM,32318:JM,32576:JM,33089:JM,31810:JM,32066:JM,33095:JM,32330:JM,32076:JM,32588:JM,33101:JM,33107:JM,32342:JM,32087:JM,32599:JM,33113:JM,31835:JM,32863:JM,33119:JM,32352:JM,32098:JM,32610:JM,31842:JM,33125:JM,32871:JM,32363:JM,33131:JM,32108:JM,32620:JM,32877:JM,24176:JM,33137:JM,31858:JM,32883:JM,32373:JM,32630:JM,32119:JM,33143:JM,32889:JM,33149:JM,32895:JM,32384:JM,32640:JM,32130:JM,33155:JM,31876:JM,32645:JM,32901:JM,32647:JM,33161:JM,32395:JM,32907:JM,32140:JM,31885:JM,33167:JM,32656:JM,32913:JM,31892:JM,33173:JM,32150:JM,32406:JM,32919:JM,32667:JM,31900:JM,32925:JM,32416:JM,32162:JM,31907:JM,32931:JM,32937:JM,32426:JM,31916:JM,32175:JM,32943:JM,32949:JM,32438:JM,31927:JM,32955:JM,32188:JM,32961:JM,31938:JM,32451:JM,36292:JM,32967:JM,32201:JM,31949:JM,32462:JM,32974:JM,32981:JM,32214:JM,31959:JM,32474:JM,32988:JM,31970:JM,32227:JM,32995:JM,32487:JM,33002:JM,31981:JM,32240:JM,33009:JM,32499:JM,31991:JM,33016:JM,32252:JM,32510:JM,33023:DD,27416
27416 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cacheRefMap = v71::
27423 :: CALL :: call :: V :: v73.registerAlias(#(JDBC), v75)::CL,33322
27432 :: CALL :: call :: V :: v77.registerAlias(#(MANAGED), v79)::CL,33322
27441 :: CALL :: call :: V :: v81.registerAlias(#(JNDI), v83)::CL,33322
27450 :: CALL :: call :: V :: v85.registerAlias(#(POOLED), v87)::CL,33322
27459 :: CALL :: call :: V :: v89.registerAlias(#(UNPOOLED), v91)::CL,33322
27468 :: CALL :: call :: V :: v93.registerAlias(#(PERPETUAL), v95)::CL,33322
27477 :: CALL :: call :: V :: v97.registerAlias(#(FIFO), v99)::CL,33322
27486 :: CALL :: call :: V :: v101.registerAlias(#(LRU), v103)::CL,33322
27495 :: CALL :: call :: V :: v105.registerAlias(#(SOFT), v107)::CL,33322
27504 :: CALL :: call :: V :: v109.registerAlias(#(WEAK), v111)::CL,33322
27513 :: CALL :: call :: V :: v113.registerAlias(#(DB_VENDOR), v115)::CL,33322
27522 :: CALL :: call :: V :: v117.registerAlias(#(XML), v119)::CL,33322
27531 :: CALL :: call :: V :: v121.registerAlias(#(RAW), v123)::CL,33322
27540 :: CALL :: call :: V :: v125.registerAlias(#(SLF4J), v127)::CL,33322
27549 :: CALL :: call :: V :: v129.registerAlias(#(COMMONS_LOGGING), v131)::CL,33322
27558 :: CALL :: call :: V :: v133.registerAlias(#(LOG4J), v135)::CL,33322
27567 :: CALL :: call :: V :: v137.registerAlias(#(LOG4J2), v139)::CL,33322
27576 :: CALL :: call :: V :: v141.registerAlias(#(JDK_LOGGING), v143)::CL,33322
27585 :: CALL :: call :: V :: v145.registerAlias(#(STDOUT_LOGGING), v147)::CL,33322
27594 :: CALL :: call :: V :: v149.registerAlias(#(NO_LOGGING), v151)::CL,33322
27603 :: CALL :: call :: V :: v153.registerAlias(#(CGLIB), v155)::CL,33322
27612 :: CALL :: call :: V :: v157.registerAlias(#(JAVASSIST), v159)::CL,33322
27621 :: CALL :: call :: V :: v161.setDefaultDriverClass(v162)::CL,33452
27629 :: CALL :: call :: V :: v164.register(v165)::CL,33469
27777 :: EXPR :: modify :: Lorg/apache/ibatis/session/Configuration :: p0 $this .configuration = p1 $configuration ::
27783 :: CALL :: call :: Lorg/apache/ibatis/type/TypeAliasRegistry :: v7 = v5.getTypeAliasRegistry()::JM,27787:CL,33541
27787 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeAliasRegistry :: p0 $this .typeAliasRegistry = v7::
27793 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: v10 = v8.getTypeHandlerRegistry()::JM,27797:CL,33550
27797 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: p0 $this .typeHandlerRegistry = v10::
27820 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setVariables(java.util.Properties)::JM,27825
27825 :: EXPR :: modify :: Ljava/util/Properties :: p0 $this .variables = p1 $variables ::
27831 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XPathParser.evalNode(java.lang.Object,java.lang.String)::CD,27838:CD,27845:CD,27846
27838 :: CALL :: call :: Ljava/lang/Object :: v7 = p0 $this .evaluate(p2 $expression , p1 $root , v5)::JM,27845:CL,33559
27845 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,27846
27846 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 19::JM,33637:JM,33629
27870 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.evalNode(java.lang.String)::CD,27881
27881 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v7 = v4.evalNode(v5, p1 $expression )::CL,27831
27891 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.propertiesElement(org.apache.ibatis.parsing.XNode)::CD,27896
27896 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 111::CD,27897:CD,27901:CD,27906:CD,27919:CD,27941:CD,27945
27897 :: CALL :: call :: Ljava/util/Properties :: v6 = p1 $context .getChildrenAsProperties()::CL,33661
27901 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $context .getStringAttribute(#(resource))::JM,27919:CL,33730
27906 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $context .getStringAttribute(#(url))::JM,27929:CL,33730
27919 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 63::CD,27920:CD,27924:CD,27929
27920 :: CALL :: call :: Ljava/util/Properties :: v17 = getResourceAsProperties(v9)::CL,33745
27924 :: CALL :: call :: V :: v6.putAll(v17)::
27929 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 76::CD,27930:CD,27934
27930 :: CALL :: call :: Ljava/util/Properties :: v14 = getUrlAsProperties(v12)::CL,33822
27934 :: CALL :: call :: V :: v6.putAll(v14)::
27941 :: CALL :: call :: Ljava/util/Properties :: v21 = v19.getVariables()::JM,27945:CL,33850
27945 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 96::CD,27946
27946 :: CALL :: call :: V :: v6.putAll(v21)::
27997 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsAsProperties(org.apache.ibatis.parsing.XNode)::CD,28002:CD,28045:CD,28050:CD,28055:CD,28060
28002 :: PRED :: IF :: Z :: if (p1 $context  != #(null)) goto 13::CF,28003:CD,28008:CD,28016:CD,28021:CD,28025:CD,28069:CD,28073
28003 :: NORM :: declaration :: Ljava/util/Properties :: v36 = new java.util.Properties::
28008 :: CALL :: call :: Ljava/util/Properties :: v6 = p1 $context .getChildrenAsProperties()::JM,28073:CL,33661
28016 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v10 = forClass(v7, v8)::CL,26950
28021 :: CALL :: call :: Ljava/util/Set :: v12 = v6.keySet()::JM,28073
28025 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,28073
28030 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,28073
28034 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
28038 :: CALL :: call :: Z :: v23 = v10.hasSetter(v21)::CL,33870
28045 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
28050 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v19)::
28055 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#( is not known.  Make ...))::
28060 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
28069 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,28073
28073 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 43::CD,28030:CD,28034:CD,28038:CD,28069:JM,28073
28092 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.loadCustomVfs(java.util.Properties)::CD,28097:CD,28102
28097 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $props .getProperty(#(vfsImpl))::JM,28102
28102 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 73::CD,28103:CD,28108:CD,28131:CD,28133
28103 :: CALL :: call :: [Ljava/lang/String :: v10 = v6.split(#(,))::JM,28108
28108 :: EXPR :: assign :: I :: v11 = v10.length::DD,28131
28110 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v10[v22]::JM,28114:JM,28118
28114 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,28114:JM,28118
28118 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 63::CD,28119:CD,28126:CF,28130
28119 :: CALL :: call :: Ljava/lang/Class :: v17 = classForName(v13)::CL,18606
28126 :: CALL :: call :: V :: v18.setVfsImpl(v17)::CL,33952
28130 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,28133
28131 :: PRED :: IF :: Z :: if (v22 < v11) goto 36::CD,28114:CD,28118:CD,28130:CD,28133
28133 :: EXPR :: assign :: null :: PHI v22 = #(0), v21::DD,28130:DD,28131
28161 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.typeAliasesElement(org.apache.ibatis.parsing.XNode)::CD,28166:CD,28241:CD,28246:CD,28251:CD,28256:CD,28261
28166 :: PRED :: IF :: Z :: if (p1 $parent  == #(null)) goto 170::CD,28167:CD,28171:CD,28271:CD,28275
28167 :: CALL :: call :: Ljava/util/List :: v6 = p1 $parent .getChildren()::JM,28275:CL,33973
28171 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,28275
28176 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,28275
28181 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getName()::JM,28190:CL,34052
28185 :: CALL :: call :: Z :: v19 = #(package).equals(v17)::JM,28190
28190 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,28191:CD,28203:CD,28208:CD,28213:CD,28218:CD,28222
28191 :: CALL :: call :: Ljava/lang/String :: v22 = v14.getStringAttribute(#(name))::CL,33730
28203 :: CALL :: call :: V :: v25.registerAliases(v22)::CL,34061
28208 :: CALL :: call :: Ljava/lang/String :: v29 = v14.getStringAttribute(#(alias))::JM,28222:CL,33730
28213 :: CALL :: call :: Ljava/lang/String :: v32 = v14.getStringAttribute(#(type))::CL,33730
28218 :: CALL :: call :: Ljava/lang/Class :: v34 = classForName(v32)::CL,18606
28222 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 107::CD,28226:CD,28234
28226 :: CALL :: call :: V :: v35.registerAlias(v34)::CL,34075
28234 :: CALL :: call :: V :: v37.registerAlias(v29, v34)::CL,33322
28241 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
28246 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v29)::
28251 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(#('. Cause: ))::
28256 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(v39)::
28261 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
28271 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,28275
28275 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 18::CD,28176:CD,28181:CD,28185:CD,28190:CD,28271:JM,28275
28309 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.pluginElement(org.apache.ibatis.parsing.XNode)::CD,28314
28314 :: PRED :: IF :: Z :: if (p1 $parent  == #(null)) goto 83::CD,28315:CD,28319:CD,28359:CD,28363
28315 :: CALL :: call :: Ljava/util/List :: v6 = p1 $parent .getChildren()::JM,28363:CL,33973
28319 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,28363
28324 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,28363
28329 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getStringAttribute(#(interceptor))::CL,33730
28334 :: CALL :: call :: Ljava/util/Properties :: v19 = v14.getChildrenAsProperties()::CL,33661
28338 :: CALL :: call :: Ljava/lang/Class :: v21 = p0 $this .resolveClass(v17)::CL,34113
28355 :: CALL :: call :: V :: v26.addInterceptor(v24)::CL,34153
28359 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,28363
28363 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 18::CD,28324:CD,28329:CD,28334:CD,28338:CD,28355:CD,28359:JM,28363
28385 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.objectFactoryElement(org.apache.ibatis.parsing.XNode)::CD,28390
28390 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 47::CD,28391:CD,28396:CD,28400
28391 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $context .getStringAttribute(#(type))::CL,33730
28396 :: CALL :: call :: Ljava/util/Properties :: v9 = p1 $context .getChildrenAsProperties()::CL,33661
28400 :: CALL :: call :: Ljava/lang/Class :: v11 = p0 $this .resolveClass(v7)::CL,34113
28436 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.objectWrapperFactoryElement(org.apache.ibatis.parsing.XNode)::CD,28441
28441 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 32::CD,28442:CD,28447
28442 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $context .getStringAttribute(#(type))::CL,33730
28447 :: CALL :: call :: Ljava/lang/Class :: v9 = p0 $this .resolveClass(v7)::CL,34113
28475 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.reflectorFactoryElement(org.apache.ibatis.parsing.XNode)::CD,28480
28480 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 32::CD,28481:CD,28486
28481 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $context .getStringAttribute(#(type))::CL,33730
28486 :: CALL :: call :: Ljava/lang/Class :: v9 = p0 $this .resolveClass(v7)::CL,34113
28514 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsElement(java.util.Properties)::CD,28522:CD,28528:CD,28532:CD,28539:CD,28545:CD,28549:CD,28556:CD,28575:CD,28582:CD,28587:CD,28593:CD,28600:CD,28619:CD,28626:CD,28645:CD,28652:CD,28671:CD,28678:CD,28697:CD,28704:CD,28723:CD,28730:CD,28736:CD,28740:CD,28747:CD,28752:CD,28758:CD,28765:CD,28770:CD,28776:CD,28783:CD,28802:CD,28809:CD,28828:CD,28835:CD,28841:CD,28845:CD,28852:CD,28858:CD,28862:CD,28869:CD,28874:CD,28880:CD,28887:CD,28906:CD,28913:CD,28918:CD,28923:CD,28927:CD,28932:CD,28940:CD,28947:CD,28966:CD,28973:CD,28992:CD,28999:CD,29018:CD,29025:CD,29030:CD,29034:CD,29039:CD,29047:CD,29054:CD,29059:CD,29064
28522 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $props .getProperty(#(autoMappingBehavior), #(PARTIAL))::
28528 :: CALL :: call :: Lorg/apache/ibatis/session/AutoMappingBehavior :: v10 = valueOf(v8)::CL,34223
28532 :: CALL :: call :: V :: v4.setAutoMappingBehavior(v10)::CL,34236
28539 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $props .getProperty(#(autoMappingUnknownCol...), #(NONE))::
28545 :: CALL :: call :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: v18 = valueOf(v16)::CL,34247
28549 :: CALL :: call :: V :: v12.setAutoMappingUnknownColumnBehavior(v18)::CL,34260
28556 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $props .getProperty(#(cacheEnabled))::
28575 :: CALL :: call :: V :: v20.setCacheEnabled(v30)::CL,34289
28582 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $props .getProperty(#(proxyFactory))::
28587 :: CALL :: call :: Ljava/lang/Object :: v37 = p0 $this .createInstance(v35)::CL,34300
28593 :: CALL :: call :: V :: v32.setProxyFactory(v38)::CL,34352
28600 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $props .getProperty(#(lazyLoadingEnabled))::
28619 :: CALL :: call :: V :: v40.setLazyLoadingEnabled(v50)::CL,34372
28626 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $props .getProperty(#(aggressiveLazyLoading))::
28645 :: CALL :: call :: V :: v52.setAggressiveLazyLoading(v61)::CL,34383
28652 :: CALL :: call :: Ljava/lang/String :: v66 = p1 $props .getProperty(#(multipleResultSetsEnabled))::
28671 :: CALL :: call :: V :: v63.setMultipleResultSetsEnabled(v72)::CL,34394
28678 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $props .getProperty(#(useColumnLabel))::
28697 :: CALL :: call :: V :: v74.setUseColumnLabel(v83)::CL,34405
28704 :: CALL :: call :: Ljava/lang/String :: v88 = p1 $props .getProperty(#(useGeneratedKeys))::
28723 :: CALL :: call :: V :: v85.setUseGeneratedKeys(v94)::CL,34416
28730 :: CALL :: call :: Ljava/lang/String :: v100 = p1 $props .getProperty(#(defaultExecutorType), #(SIMPLE))::
28736 :: CALL :: call :: Lorg/apache/ibatis/session/ExecutorType :: v102 = valueOf(v100)::CL,34427
28740 :: CALL :: call :: V :: v96.setDefaultExecutorType(v102)::CL,34440
28747 :: CALL :: call :: Ljava/lang/String :: v107 = p1 $props .getProperty(#(defaultStatementTimeout))::
28752 :: CALL :: call :: Ljava/lang/Integer :: v110 = p0 $this .integerValueOf(v107, #(null))::CL,34451
28758 :: CALL :: call :: V :: v104.setDefaultStatementTimeout(v110)::CL,34469
28765 :: CALL :: call :: Ljava/lang/String :: v115 = p1 $props .getProperty(#(defaultFetchSize))::
28770 :: CALL :: call :: Ljava/lang/Integer :: v117 = p0 $this .integerValueOf(v115, #(null))::CL,34451
28776 :: CALL :: call :: V :: v112.setDefaultFetchSize(v117)::CL,34480
28783 :: CALL :: call :: Ljava/lang/String :: v122 = p1 $props .getProperty(#(mapUnderscoreToCamelCase))::
28802 :: CALL :: call :: V :: v119.setMapUnderscoreToCamelCase(v128)::CL,34491
28809 :: CALL :: call :: Ljava/lang/String :: v133 = p1 $props .getProperty(#(safeRowBoundsEnabled))::
28828 :: CALL :: call :: V :: v130.setSafeRowBoundsEnabled(v139)::CL,34502
28835 :: CALL :: call :: Ljava/lang/String :: v145 = p1 $props .getProperty(#(localCacheScope), #(SESSION))::
28841 :: CALL :: call :: Lorg/apache/ibatis/session/LocalCacheScope :: v147 = valueOf(v145)::CL,34513
28845 :: CALL :: call :: V :: v141.setLocalCacheScope(v147)::CL,34526
28852 :: CALL :: call :: Ljava/lang/String :: v153 = p1 $props .getProperty(#(jdbcTypeForNull), #(OTHER))::
28858 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v155 = valueOf(v153)::CL,34537
28862 :: CALL :: call :: V :: v149.setJdbcTypeForNull(v155)::CL,34550
28869 :: CALL :: call :: Ljava/lang/String :: v160 = p1 $props .getProperty(#(lazyLoadTriggerMethods))::
28874 :: CALL :: call :: Ljava/util/Set :: v163 = p0 $this .stringSetValueOf(v160, #(equals,clone,hashCode...))::CL,34561
28880 :: CALL :: call :: V :: v157.setLazyLoadTriggerMethods(v163)::CL,34592
28887 :: CALL :: call :: Ljava/lang/String :: v168 = p1 $props .getProperty(#(safeResultHandlerEnabled))::
28906 :: CALL :: call :: V :: v165.setSafeResultHandlerEnabled(v174)::CL,34603
28913 :: CALL :: call :: Ljava/lang/String :: v179 = p1 $props .getProperty(#(defaultScriptingLanguage))::
28918 :: CALL :: call :: Ljava/lang/Class :: v181 = p0 $this .resolveClass(v179)::CL,34113
28923 :: CALL :: call :: V :: v176.setDefaultScriptingLanguage(v181)::CL,34614
28927 :: CALL :: call :: Ljava/lang/String :: v185 = p1 $props .getProperty(#(defaultEnumTypeHandler))::
28932 :: CALL :: call :: Ljava/lang/Class :: v187 = p0 $this .resolveClass(v185)::CL,34113
28940 :: CALL :: call :: V :: v188.setDefaultEnumTypeHandler(v187)::CL,34635
28947 :: CALL :: call :: Ljava/lang/String :: v193 = p1 $props .getProperty(#(callSettersOnNulls))::
28966 :: CALL :: call :: V :: v190.setCallSettersOnNulls(v199)::CL,34654
28973 :: CALL :: call :: Ljava/lang/String :: v204 = p1 $props .getProperty(#(useActualParamName))::
28992 :: CALL :: call :: V :: v201.setUseActualParamName(v210)::CL,34665
28999 :: CALL :: call :: Ljava/lang/String :: v215 = p1 $props .getProperty(#(returnInstanceForEmptyRow))::
29018 :: CALL :: call :: V :: v212.setReturnInstanceForEmptyRow(v221)::CL,34676
29025 :: CALL :: call :: Ljava/lang/String :: v226 = p1 $props .getProperty(#(logPrefix))::
29030 :: CALL :: call :: V :: v223.setLogPrefix(v226)::CL,34687
29034 :: CALL :: call :: Ljava/lang/String :: v230 = p1 $props .getProperty(#(logImpl))::
29039 :: CALL :: call :: Ljava/lang/Class :: v232 = p0 $this .resolveClass(v230)::CL,34113
29047 :: CALL :: call :: V :: v233.setLogImpl(v232)::CL,34698
29054 :: CALL :: call :: Ljava/lang/String :: v238 = p1 $props .getProperty(#(configurationFactory))::
29059 :: CALL :: call :: Ljava/lang/Class :: v240 = p0 $this .resolveClass(v238)::CL,34113
29064 :: CALL :: call :: V :: v235.setConfigurationFactory(v240)::CL,34719
29191 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.environmentsElement(org.apache.ibatis.parsing.XNode)::CD,29196
29196 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 140::CD,29200:CD,29209:CD,29213:CD,29284:CD,29288
29197 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .environment::DD,29200
29200 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CD,29201
29201 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $context .getStringAttribute(#(default))::CL,33730
29209 :: CALL :: call :: Ljava/util/List :: v10 = p1 $context .getChildren()::JM,29288:CL,33973
29213 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,29288
29218 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,29288
29223 :: CALL :: call :: Ljava/lang/String :: v21 = v18.getStringAttribute(#(id))::CL,33730
29228 :: CALL :: call :: Z :: v23 = p0 $this .isSpecifiedEnvironment(v21)::JM,29233:CL,34730
29233 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 132::CD,29234:CD,29239:CD,29244:CD,29249:CD,29276:JM,29288
29234 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v26 = v18.evalNode(#(transactionManager))::CL,27870
29239 :: CALL :: call :: Lorg/apache/ibatis/transaction/TransactionFactory :: v28 = p0 $this .transactionManagerElement(v26)::CL,34772
29244 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v31 = v18.evalNode(#(dataSource))::CL,27870
29249 :: CALL :: call :: Lorg/apache/ibatis/datasource/DataSourceFactory :: v33 = p0 $this .dataSourceElement(v31)::CL,34821
29276 :: CALL :: call :: Lorg/apache/ibatis/mapping/Environment :: v44 = v41.build()::CL,34909
29284 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,29288
29288 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,29218:CD,29223:CD,29228:CD,29233:CD,29284:JM,29288
29326 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.databaseIdProviderElement(org.apache.ibatis.parsing.XNode)::CD,29331
29331 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 55::CD,29332:CD,29343:CD,29347
29332 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $context .getStringAttribute(#(type))::CL,33730
29343 :: CALL :: call :: Ljava/util/Properties :: v15 = p1 $context .getChildrenAsProperties()::CL,33661
29347 :: CALL :: call :: Ljava/lang/Class :: v17 = p0 $this .resolveClass(v13)::CL,34113
29417 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.typeHandlerElement(org.apache.ibatis.parsing.XNode)::CD,29422
29422 :: PRED :: IF :: Z :: if (p1 $parent  == #(null)) goto 170::CD,29423:CD,29427:CD,29518:CD,29522
29423 :: CALL :: call :: Ljava/util/List :: v6 = p1 $parent .getChildren()::JM,29522:CL,33973
29427 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,29522
29432 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,29522
29437 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getName()::JM,29446:CL,34052
29441 :: CALL :: call :: Z :: v19 = #(package).equals(v17)::JM,29446
29446 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 65::CD,29447:CD,29455:CD,29460:CD,29465:CD,29470:CD,29475:CD,29480:CD,29485:CD,29490
29447 :: CALL :: call :: Ljava/lang/String :: v22 = v14.getStringAttribute(#(name))::CL,33730
29455 :: CALL :: call :: V :: v23.register(v22)::CL,34956
29460 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getStringAttribute(#(javaType))::CL,33730
29465 :: CALL :: call :: Ljava/lang/String :: v30 = v14.getStringAttribute(#(jdbcType))::CL,33730
29470 :: CALL :: call :: Ljava/lang/String :: v33 = v14.getStringAttribute(#(handler))::CL,33730
29475 :: CALL :: call :: Ljava/lang/Class :: v35 = p0 $this .resolveClass(v27)::JM,29490:CL,34113
29480 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v37 = p0 $this .resolveJdbcType(v30)::JM,29491:CL,35042
29485 :: CALL :: call :: Ljava/lang/Class :: v39 = p0 $this .resolveClass(v33)::CL,34113
29490 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 153::CD,29491:CD,29514
29491 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 137::CD,29495:CD,29504
29495 :: CALL :: call :: V :: v40.register(v35, v39)::CL,35080
29504 :: CALL :: call :: V :: v42.register(v35, v37, v39)::CL,35103
29514 :: CALL :: call :: V :: v44.register(v39)::CL,35129
29518 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,29522
29522 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 18::CD,29432:CD,29437:CD,29441:CD,29446:CD,29518:JM,29522
29571 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(org.apache.ibatis.parsing.XNode)::CD,29576
29576 :: PRED :: IF :: Z :: if (p1 $parent  == #(null)) goto 268::CD,29577:CD,29581:CD,29724:CD,29728
29577 :: CALL :: call :: Ljava/util/List :: v6 = p1 $parent .getChildren()::JM,29728:CL,33973
29581 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,29728
29586 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,29728
29591 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getName()::JM,29600:CL,34052
29595 :: CALL :: call :: Z :: v19 = #(package).equals(v17)::JM,29600
29600 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 65::CD,29601:CD,29609:CD,29614:CD,29619:CD,29624:CD,29629
29601 :: CALL :: call :: Ljava/lang/String :: v22 = v14.getStringAttribute(#(name))::CL,33730
29609 :: CALL :: call :: V :: v23.addMappers(v22)::CL,35203
29614 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getStringAttribute(#(resource))::JM,29666:JM,29629:CL,33730
29619 :: CALL :: call :: Ljava/lang/String :: v30 = v14.getStringAttribute(#(url))::JM,29667:JM,29630:CL,33730
29624 :: CALL :: call :: Ljava/lang/String :: v33 = v14.getStringAttribute(#(class))::JM,29668:JM,29631:CL,33730
29629 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 153::CD,29630:CD,29666
29630 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 153::CD,29631:CD,29666
29631 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 153::CD,29632:CD,29640:JM,27793:JM,27777:JM,41494:JM,27783:JM,37897:CD,29662:CD,29666
29632 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v35 = instance()::CL,20134
29640 :: CALL :: call :: Ljava/io/InputStream :: v39 = getResourceAsStream(v27)::CL,19231
29662 :: CALL :: call :: V :: v40.parse()::CL,35268
29666 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 216::CD,29667:CD,29706:CD,29713
29667 :: PRED :: IF :: Z :: if (v30 == #(null)) goto 216::CD,29668:CD,29706:CD,29713
29668 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 216::CD,29669:CD,29677:JM,27793:JM,27777:JM,41494:JM,27783:JM,37897:CD,29699:CD,29706:CD,29713
29669 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v48 = instance()::CL,20134
29677 :: CALL :: call :: Ljava/io/InputStream :: v52 = getUrlAsStream(v30)::CL,35331
29699 :: CALL :: call :: V :: v53.parse()::CL,35268
29706 :: CALL :: call :: Ljava/lang/Class :: v61 = classForName(v33)::CL,18606
29713 :: CALL :: call :: V :: v62.addMapper(v61)::CL,35355
29724 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,29728
29728 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 18::CD,29586:CD,29591:CD,29595:CD,29600:CD,29724:JM,29728
29883 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::
29942 :: ENTR :: entry :: null :: org.apache.ibatis.jdbc.ScriptRunner.print(java.lang.Object)::CD,29950
29947 :: EXPR :: reference :: Ljava/io/PrintWriter :: v4 = p0 $this .logWriter::DD,29950
29950 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,29954:CD,29961
29954 :: CALL :: call :: V :: v6.print(p1 $o )::
29958 :: EXPR :: reference :: Ljava/io/PrintWriter :: v8 = p0 $this .logWriter::
29961 :: CALL :: call :: V :: v8.flush()::
31725 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/ReflectorFactory :: p0 $this .reflectorFactory = p2 $reflectorFactory ::
31728 :: CALL :: call :: Lorg/apache/ibatis/reflection/Reflector :: v7 = p2 $reflectorFactory .findForClass(p1 $type )::JM,31733:CL,36144
31733 :: EXPR :: modify :: Lorg/apache/ibatis/reflection/Reflector :: p0 $this .reflector = v7::
31810 :: CALL :: call :: Ljava/lang/Class :: v6 = classForName(#(javassist.util.proxy....))::CL,18606
31835 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,24176:JM,31842:JM,33315:JM,36292:DD,31839
31839 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .knownMappers = v5::
31842 :: EXPR :: modify :: Lorg/apache/ibatis/session/Configuration :: p0 $this .config = p1 $config ::
31858 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,24176:JM,33315:JM,36292:DD,31862
31862 :: EXPR :: modify :: Ljava/util/List :: p0 $this .interceptors = v4::
31876 :: NORM :: declaration :: Ljava/util/EnumMap :: v4 = new java.util.EnumMap::DD,31882
31882 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .JDBC_TYPE_HANDLER_MAP = v4::
31885 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v7 = new java.util.concurrent.ConcurrentHashMap::JM,24176:JM,33315:JM,36292:DD,31889
31889 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .TYPE_HANDLER_MAP = v7::
31892 :: NORM :: declaration :: Lorg/apache/ibatis/type/UnknownTypeHandler :: v9 = new org.apache.ibatis.type.UnknownTypeHandler::DD,31897
31897 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandler :: p0 $this .UNKNOWN_TYPE_HANDLER = v9::
31900 :: NORM :: declaration :: Ljava/util/HashMap :: v11 = new java.util.HashMap::JM,24176:JM,33315:JM,36292:DD,31904
31904 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .ALL_TYPE_HANDLERS_MAP = v11::
31907 :: EXPR :: assign :: Ljava/lang/Class :: v13 = metadata <Application,Lorg/apache/ibatis/type/EnumTypeHandler>-><Primordial,Ljava/lang/Class>::DD,31908
31908 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .defaultEnumTypeHandler = v13::
31916 :: CALL :: call :: V :: p0 $this .register(v14, v15)::CL,36308
31927 :: CALL :: call :: V :: p0 $this .register(v18, v19)::CL,36308
31938 :: CALL :: call :: V :: p0 $this .register(v22, v23)::CL,36323
31949 :: CALL :: call :: V :: p0 $this .register(v26, v27)::CL,36323
31959 :: CALL :: call :: V :: p0 $this .register(v30, v31)::CL,36308
31970 :: CALL :: call :: V :: p0 $this .register(v34, v35)::CL,36308
31981 :: CALL :: call :: V :: p0 $this .register(v38, v39)::CL,36323
31991 :: CALL :: call :: V :: p0 $this .register(v42, v43)::CL,36308
32002 :: CALL :: call :: V :: p0 $this .register(v46, v47)::CL,36308
32013 :: CALL :: call :: V :: p0 $this .register(v50, v51)::CL,36323
32023 :: CALL :: call :: V :: p0 $this .register(v54, v55)::CL,36308
32034 :: CALL :: call :: V :: p0 $this .register(v58, v59)::CL,36308
32045 :: CALL :: call :: V :: p0 $this .register(v62, v63)::CL,36323
32055 :: CALL :: call :: V :: p0 $this .register(v66, v67)::CL,36308
32066 :: CALL :: call :: V :: p0 $this .register(v70, v71)::CL,36308
32076 :: CALL :: call :: V :: p0 $this .register(v74, v75)::CL,36308
32087 :: CALL :: call :: V :: p0 $this .register(v78, v79)::CL,36308
32098 :: CALL :: call :: V :: p0 $this .register(v82, v83)::CL,36323
32108 :: CALL :: call :: V :: p0 $this .register(v86, v87)::CL,36308
32119 :: CALL :: call :: V :: p0 $this .register(v90, v91)::CL,36308
32130 :: CALL :: call :: V :: p0 $this .register(v94, v95)::CL,36323
32140 :: CALL :: call :: V :: p0 $this .register(v98, v99)::CL,36308
32150 :: CALL :: call :: V :: p0 $this .register(v102, v103)::CL,36308
32162 :: CALL :: call :: V :: p0 $this .register(v106, v107, v108)::CL,36415
32175 :: CALL :: call :: V :: p0 $this .register(v111, v112, v113)::CL,36415
32188 :: CALL :: call :: V :: p0 $this .register(v116, v117, v118)::CL,36415
32201 :: CALL :: call :: V :: p0 $this .register(v121, v122, v123)::CL,36415
32214 :: CALL :: call :: V :: p0 $this .register(v126, v127, v128)::CL,36415
32227 :: CALL :: call :: V :: p0 $this .register(v131, v132, v133)::CL,36415
32240 :: CALL :: call :: V :: p0 $this .register(v136, v137, v138)::CL,36415
32252 :: CALL :: call :: V :: p0 $this .register(v141, v142)::CL,36323
32263 :: CALL :: call :: V :: p0 $this .register(v145, v146)::CL,36323
32274 :: CALL :: call :: V :: p0 $this .register(v149, v150)::CL,36323
32285 :: CALL :: call :: V :: p0 $this .register(v153, v154)::CL,36323
32296 :: CALL :: call :: V :: p0 $this .register(v157, v158)::CL,36323
32307 :: CALL :: call :: V :: p0 $this .register(v161, v162)::CL,36323
32318 :: CALL :: call :: V :: p0 $this .register(v165, v166)::CL,36323
32330 :: CALL :: call :: V :: p0 $this .register(v169, v170, v171)::CL,36415
32342 :: CALL :: call :: V :: p0 $this .register(v174, v175)::CL,36323
32352 :: CALL :: call :: V :: p0 $this .register(v178, v179)::CL,36308
32363 :: CALL :: call :: V :: p0 $this .register(v182, v183)::CL,36323
32373 :: CALL :: call :: V :: p0 $this .register(v186, v187)::CL,36308
32384 :: CALL :: call :: V :: p0 $this .register(v190, v191)::CL,36323
32395 :: CALL :: call :: V :: p0 $this .register(v194, v195)::CL,36323
32406 :: CALL :: call :: V :: p0 $this .register(v198, v199)::CL,36323
32416 :: CALL :: call :: V :: p0 $this .register(v202, v203)::CL,36308
32426 :: CALL :: call :: V :: p0 $this .register(v206, v207)::CL,36308
32438 :: CALL :: call :: V :: p0 $this .register(v210, v211, v212)::CL,36415
32451 :: CALL :: call :: V :: p0 $this .register(v215, v216, v217)::CL,36415
32462 :: CALL :: call :: V :: p0 $this .register(v220, v221)::CL,36308
32474 :: CALL :: call :: V :: p0 $this .register(v224, v225, v226)::CL,36415
32487 :: CALL :: call :: V :: p0 $this .register(v229, v230, v231)::CL,36415
32499 :: CALL :: call :: V :: p0 $this .register(v234, v235)::CL,36323
32510 :: CALL :: call :: V :: p0 $this .register(v238, v239)::CL,36323
32519 :: CALL :: call :: V :: p0 $this .register(v242, v243)::CL,36308
32530 :: CALL :: call :: V :: p0 $this .register(v245, v246, v247)::CL,36415
32541 :: CALL :: call :: V :: p0 $this .register(v249, v250)::CL,36323
32551 :: CALL :: call :: V :: p0 $this .register(v252, v253)::CL,36308
32563 :: CALL :: call :: V :: p0 $this .register(v256, v257, v258)::CL,36415
32576 :: CALL :: call :: V :: p0 $this .register(v261, v262, v263)::CL,36415
32588 :: CALL :: call :: V :: p0 $this .register(v266, v267)::CL,36323
32599 :: CALL :: call :: V :: p0 $this .register(v270, v271)::CL,36323
32610 :: CALL :: call :: V :: p0 $this .register(v274, v275)::CL,36323
32620 :: CALL :: call :: V :: p0 $this .register(v278, v279)::CL,36308
32630 :: CALL :: call :: V :: p0 $this .register(v282, v283)::CL,36308
32640 :: CALL :: call :: V :: p0 $this .register(v286, v287)::CL,36308
32645 :: EXPR :: reference :: Z :: v290 = org.apache.ibatis.reflection.Jdk.dateAndTimeApiExists::DD,32647
32647 :: PRED :: IF :: Z :: if (v290 == #(0)) goto 996::CD,32648
32648 :: CALL :: call :: V :: registerDateAndTimeHandlers(p0 $this )::CL,36586
32656 :: CALL :: call :: V :: p0 $this .register(v293, v294)::CL,36308
32667 :: CALL :: call :: V :: p0 $this .register(v297, v298)::CL,36308
32863 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::JM,24176:JM,33315:JM,36292:DD,32867
32867 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .TYPE_ALIASES = v4::
32871 :: CALL :: call :: V :: p0 $this .registerAlias(#(string), v7)::CL,33322
32877 :: CALL :: call :: V :: p0 $this .registerAlias(#(byte), v10)::CL,33322
32883 :: CALL :: call :: V :: p0 $this .registerAlias(#(long), v13)::CL,33322
32889 :: CALL :: call :: V :: p0 $this .registerAlias(#(short), v16)::CL,33322
32895 :: CALL :: call :: V :: p0 $this .registerAlias(#(int), v19)::CL,33322
32901 :: CALL :: call :: V :: p0 $this .registerAlias(#(integer), v22)::CL,33322
32907 :: CALL :: call :: V :: p0 $this .registerAlias(#(double), v25)::CL,33322
32913 :: CALL :: call :: V :: p0 $this .registerAlias(#(float), v28)::CL,33322
32919 :: CALL :: call :: V :: p0 $this .registerAlias(#(boolean), v31)::CL,33322
32925 :: CALL :: call :: V :: p0 $this .registerAlias(#(byte[]), v34)::CL,33322
32931 :: CALL :: call :: V :: p0 $this .registerAlias(#(long[]), v37)::CL,33322
32937 :: CALL :: call :: V :: p0 $this .registerAlias(#(short[]), v40)::CL,33322
32943 :: CALL :: call :: V :: p0 $this .registerAlias(#(int[]), v43)::CL,33322
32949 :: CALL :: call :: V :: p0 $this .registerAlias(#(integer[]), v46)::CL,33322
32955 :: CALL :: call :: V :: p0 $this .registerAlias(#(double[]), v49)::CL,33322
32961 :: CALL :: call :: V :: p0 $this .registerAlias(#(float[]), v52)::CL,33322
32967 :: CALL :: call :: V :: p0 $this .registerAlias(#(boolean[]), v55)::CL,33322
32974 :: CALL :: call :: V :: p0 $this .registerAlias(#(_byte), v58)::CL,33322
32981 :: CALL :: call :: V :: p0 $this .registerAlias(#(_long), v61)::CL,33322
32988 :: CALL :: call :: V :: p0 $this .registerAlias(#(_short), v64)::CL,33322
32995 :: CALL :: call :: V :: p0 $this .registerAlias(#(_int), v67)::CL,33322
33002 :: CALL :: call :: V :: p0 $this .registerAlias(#(_integer), v70)::CL,33322
33009 :: CALL :: call :: V :: p0 $this .registerAlias(#(_double), v73)::CL,33322
33016 :: CALL :: call :: V :: p0 $this .registerAlias(#(_float), v76)::CL,33322
33023 :: CALL :: call :: V :: p0 $this .registerAlias(#(_boolean), v79)::CL,33322
33029 :: CALL :: call :: V :: p0 $this .registerAlias(#(_byte[]), v82)::CL,33322
33035 :: CALL :: call :: V :: p0 $this .registerAlias(#(_long[]), v85)::CL,33322
33041 :: CALL :: call :: V :: p0 $this .registerAlias(#(_short[]), v88)::CL,33322
33047 :: CALL :: call :: V :: p0 $this .registerAlias(#(_int[]), v91)::CL,33322
33053 :: CALL :: call :: V :: p0 $this .registerAlias(#(_integer[]), v94)::CL,33322
33059 :: CALL :: call :: V :: p0 $this .registerAlias(#(_double[]), v97)::CL,33322
33065 :: CALL :: call :: V :: p0 $this .registerAlias(#(_float[]), v100)::CL,33322
33071 :: CALL :: call :: V :: p0 $this .registerAlias(#(_boolean[]), v103)::CL,33322
33077 :: CALL :: call :: V :: p0 $this .registerAlias(#(date), v106)::CL,33322
33083 :: CALL :: call :: V :: p0 $this .registerAlias(#(decimal), v109)::CL,33322
33089 :: CALL :: call :: V :: p0 $this .registerAlias(#(bigdecimal), v112)::CL,33322
33095 :: CALL :: call :: V :: p0 $this .registerAlias(#(biginteger), v115)::CL,33322
33101 :: CALL :: call :: V :: p0 $this .registerAlias(#(object), v118)::CL,33322
33107 :: CALL :: call :: V :: p0 $this .registerAlias(#(date[]), v121)::CL,33322
33113 :: CALL :: call :: V :: p0 $this .registerAlias(#(decimal[]), v124)::CL,33322
33119 :: CALL :: call :: V :: p0 $this .registerAlias(#(bigdecimal[]), v127)::CL,33322
33125 :: CALL :: call :: V :: p0 $this .registerAlias(#(biginteger[]), v130)::CL,33322
33131 :: CALL :: call :: V :: p0 $this .registerAlias(#(object[]), v133)::CL,33322
33137 :: CALL :: call :: V :: p0 $this .registerAlias(#(map), v136)::CL,33322
33143 :: CALL :: call :: V :: p0 $this .registerAlias(#(hashmap), v139)::CL,33322
33149 :: CALL :: call :: V :: p0 $this .registerAlias(#(list), v142)::CL,33322
33155 :: CALL :: call :: V :: p0 $this .registerAlias(#(arraylist), v145)::CL,33322
33161 :: CALL :: call :: V :: p0 $this .registerAlias(#(collection), v148)::CL,33322
33167 :: CALL :: call :: V :: p0 $this .registerAlias(#(iterator), v151)::CL,33322
33173 :: CALL :: call :: V :: p0 $this .registerAlias(#(ResultSet), v154)::CL,33322
33296 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::JM,24176:JM,33315:JM,36292:DD,33300
33300 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .LANGUAGE_DRIVER_MAP = v4::
33315 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
33322 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeAliasRegistry.registerAlias(java.lang.String,java.lang.Class)::CD,33335:CD,33337:CD,33345:CD,33350:CD,33376:CD,33381:CD,33386:CD,33394:CD,33399:CD,33400:CD,33404:CD,33409:CD,33414:CD,33426
33335 :: EXPR :: reference :: Ljava/util/Locale :: v6 = java.util.Locale.ENGLISH::
33337 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $alias .toLowerCase(v6)::
33345 :: CALL :: call :: Z :: v11 = v9.containsKey(v8)::JM,33350
33350 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 126::CD,33354:CD,33359
33354 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.get(v8)::JM,33359
33359 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 126::CD,33363
33363 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get(v8)::
33376 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
33381 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $alias )::
33386 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(' is already mapped t...))::
33394 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.get(v8)::JM,33399
33399 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::
33400 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getName()::
33404 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v33.append(v39)::
33409 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#('.))::
33414 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
33426 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.put(v8, p2 $value )::
33452 :: ENTR :: entry :: null :: org.apache.ibatis.scripting.LanguageDriverRegistry.setDefaultDriverClass(java.lang.Class)::CD,33457:JM,33461
33457 :: CALL :: call :: V :: p0 $this .register(p1 $defaultDriverClass )::CL,33469
33461 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .defaultDriverClass = p1 $defaultDriverClass ::
33469 :: ENTR :: entry :: null :: org.apache.ibatis.scripting.LanguageDriverRegistry.register(java.lang.Class)::CD,33475:CD,33484:CD,33489:CD,33506:CD,33511:CD,33515:CD,33520
33475 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v27 = new java.lang.IllegalArgumentException::
33484 :: CALL :: call :: Z :: v7 = v5.containsKey(p1 $cls )::JM,33489
33489 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 77::CD,33498
33498 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.put(p1 $cls , v12)::
33506 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
33511 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $cls .getName()::
33515 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
33520 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
33541 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getTypeAliasRegistry()::CE,33542:CD,33548
33542 :: EXIT :: exit :: Lorg/apache/ibatis/type/TypeAliasRegistry :: org.apache.ibatis.session.Configuration.getTypeAliasRegistry()::JM,27787
33545 :: EXPR :: reference :: Lorg/apache/ibatis/type/TypeAliasRegistry :: v3 = p0 $this .typeAliasRegistry::DD,33548
33548 :: NORM :: compound :: Lorg/apache/ibatis/type/TypeAliasRegistry :: return v3::CF,33542
33550 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getTypeHandlerRegistry()::CE,33551:CD,33557
33551 :: EXIT :: exit :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: org.apache.ibatis.session.Configuration.getTypeHandlerRegistry()::JM,27797
33554 :: EXPR :: reference :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: v3 = p0 $this .typeHandlerRegistry::DD,33557
33557 :: NORM :: compound :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: return v3::CF,33551
33559 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XPathParser.evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)::CE,33560:CD,33569:CD,33576:CD,33578:CD,33583:CD,33588
33560 :: EXIT :: exit :: Ljava/lang/Object :: org.apache.ibatis.parsing.XPathParser.evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)::JM,27845:JM,45383
33566 :: EXPR :: reference :: Ljavax/xml/xpath/XPath :: v6 = p0 $this .xpath::JM,33569:JM,33576
33569 :: CALL :: call :: Ljava/lang/Object :: v8 = v6.evaluate(p1 $expression , p2 $root , p3 $returnType )::JM,33569:JM,33576
33576 :: NORM :: compound :: Ljava/lang/Object :: return v8::DD,33560
33578 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
33583 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::
33588 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
33629 :: CALL :: call :: Ljava/util/Properties :: v10 = p0 $this .parseAttributes(p2 $node )::CL,36703
33637 :: CALL :: call :: Ljava/lang/String :: v12 = p0 $this .parseBody(p2 $node )::CL,36776
33661 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getChildrenAsProperties()::CE,33662:CD,33665:CD,33669:CD,33673:CD,33701:CD,33705:CD,33706
33662 :: EXIT :: exit :: Ljava/util/Properties :: org.apache.ibatis.parsing.XNode.getChildrenAsProperties()::JM,28073
33665 :: NORM :: declaration :: Ljava/util/Properties :: v3 = new java.util.Properties::DD,33706
33669 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChildren()::JM,33705:CL,33973
33673 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,33705
33678 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,33705
33683 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getStringAttribute(#(name))::JM,33693:CL,33730
33688 :: CALL :: call :: Ljava/lang/String :: v20 = v14.getStringAttribute(#(value))::JM,33694:CL,33730
33693 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,33694:JM,33705
33694 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 68::CD,33695:JM,33705
33695 :: CALL :: call :: Ljava/lang/Object :: v23 = v3.setProperty(v17, v20)::
33701 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,33705
33705 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,33678:CD,33683:CD,33688:CD,33693:CD,33701:JM,33705:CF,33706
33706 :: NORM :: compound :: Ljava/util/Properties :: return v3::DD,33662
33730 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getStringAttribute(java.lang.String)::CE,33731:CD,33735:CD,33741
33731 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.XNode.getStringAttribute(java.lang.String)::JM,27919:JM,27929:JM,28222:JM,29666:JM,29629:JM,29667:JM,29630:JM,29668:JM,29631:JM,33693:JM,33694:JM,50466:JM,61204
33735 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getStringAttribute(p1 $name , #(null))::JM,33741:CL,36851
33741 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,33731
33745 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getResourceAsProperties(java.lang.String)::CD,33749:CD,33753:CD,33757
33749 :: NORM :: declaration :: Ljava/util/Properties :: v3 = new java.util.Properties::
33753 :: CALL :: call :: Ljava/io/InputStream :: v6 = getResourceAsStream(p1 $resource )::CL,19231
33757 :: CALL :: call :: V :: v3.load(v6)::
33822 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getUrlAsProperties(java.lang.String)::CD,33826:CD,33830:CD,33834
33826 :: NORM :: declaration :: Ljava/util/Properties :: v3 = new java.util.Properties::
33830 :: CALL :: call :: Ljava/io/InputStream :: v6 = getUrlAsStream(p1 $urlString )::CL,35331
33834 :: CALL :: call :: V :: v3.load(v6)::
33850 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getVariables()::CE,33851:CD,33857
33851 :: EXIT :: exit :: Ljava/util/Properties :: org.apache.ibatis.session.Configuration.getVariables()::JM,27945:JM,46328
33854 :: EXPR :: reference :: Ljava/util/Properties :: v3 = p0 $this .variables::DD,33857
33857 :: NORM :: compound :: Ljava/util/Properties :: return v3::CF,33851
33870 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.hasSetter(java.lang.String)::CE,33871:JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,33880:CD,33884
33871 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.MetaClass.hasSetter(java.lang.String)::JM,33916:JM,63683:JM,63707:JM,63727
33880 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,33884:CL,36998
33884 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 51::CD,33892:CD,33897:CD,33925:CD,33930
33892 :: CALL :: call :: Z :: v18 = v14.hasSetter(v16)::JM,33897:CL,37021
33897 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 49::CD,33902:CD,33911:CD,33916:CD,33917
33902 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v22 = p0 $this .metaClassForProperty(v20)::CL,37041
33911 :: CALL :: call :: Z :: v26 = v22.hasSetter(v24)::JM,33916:CL,33870
33916 :: NORM :: compound :: Z :: return v26::DD,33871
33917 :: NORM :: compound :: Z :: return #(0)::DD,33871
33925 :: CALL :: call :: Z :: v13 = v9.hasSetter(v11)::JM,33930:CL,37021
33930 :: NORM :: compound :: Z :: return v13::DD,33871
33952 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setVfsImpl(java.lang.Class)::CD,33957
33957 :: PRED :: IF :: Z :: if (p1 $vfsImpl  == #(null)) goto 16::CD,33964
33964 :: CALL :: call :: V :: addImplClass(v5)::CL,37077
33973 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getChildren()::CE,33974:CD,33977:CD,33984:CD,33988:CD,34024
33974 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.parsing.XNode.getChildren()::JM,28275:JM,28363:JM,29288:JM,29522:JM,29728:JM,33705:JM,50317:JM,56931:JM,57045
33977 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,34024
33981 :: EXPR :: reference :: Lorg/w3c/dom/Node :: v5 = p0 $this .node::JM,33984:JM,34003:JM,33988:JM,33989:JM,34023:JM,33994:JM,33999
33984 :: CALL :: call :: Lorg/w3c/dom/NodeList :: v7 = v5.getChildNodes()::JM,33984:JM,34003:JM,33988:JM,33989:JM,34023:JM,33994:JM,33999
33988 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 89::CD,33989:CD,34023:CD,34025:JM,34003:JM,33994:JM,33999:CF,34024
33989 :: CALL :: call :: I :: v11 = v7.getLength()::JM,34003:JM,33989:JM,34023:JM,33994:JM,33999
33994 :: CALL :: call :: Lorg/w3c/dom/Node :: v13 = v7.item(v24)::JM,34003:JM,33989:JM,34023:JM,33994:JM,33999
33999 :: CALL :: call :: S :: v15 = v13.getNodeType()::JM,34003:JM,33999
34003 :: PRED :: IF :: Z :: if (v15 != #(1)) goto 79::CD,34004:JM,33637:JM,33629:CD,34017:CF,34022
34004 :: NORM :: declaration :: Lorg/apache/ibatis/parsing/XNode :: v17 = new org.apache.ibatis.parsing.XNode::
34017 :: CALL :: call :: Z :: v22 = v3.add(v17)::
34022 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,34025
34023 :: PRED :: IF :: Z :: if (v24 < v11) goto 37::CD,33994:CD,33999:CD,34003:CD,34022:CD,34025:JM,33989:JM,34023:CF,34024
34024 :: NORM :: compound :: Ljava/util/List :: return v3::DD,33974
34025 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::JM,34003:JM,33994:JM,33999:DD,34022:DD,34023
34052 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getName()::CE,34053:CD,34059
34053 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.XNode.getName()::JM,28190:JM,29446:JM,29600:JM,50254:JM,50271:JM,50293:JM,56907:JM,61178:JM,61188:JM,61198
34056 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,34059
34059 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,34053
34061 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeAliasRegistry.registerAliases(java.lang.String)::CD,34067
34067 :: CALL :: call :: V :: p0 $this .registerAliases(p1 $packageName , v4)::CL,37095
34075 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeAliasRegistry.registerAlias(java.lang.Class)::CD,34080:CD,34085:CD,34096
34080 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $type .getSimpleName()::
34085 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v8 = p1 $type .getAnnotation(v6)::
34096 :: CALL :: call :: V :: p0 $this .registerAlias(v13, p1 $type )::CL,33322
34113 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveClass(java.lang.String)::CE,34114:CD,34118:CD,34127:CD,34132:CD,34137
34114 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.builder.BaseBuilder.resolveClass(java.lang.String)::JM,29490:JM,34310
34118 :: PRED :: IF :: Z :: if (p1 $alias  != #(null)) goto 8::CD,34119:CD,34120:CD,34125
34119 :: NORM :: compound :: Ljava/lang/Class :: return #(null)::DD,34114
34120 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .resolveAlias(p1 $alias )::JM,34125:CL,37334
34125 :: NORM :: compound :: Ljava/lang/Class :: return v6::DD,34114
34127 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
34132 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v7)::
34137 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
34153 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addInterceptor(org.apache.ibatis.plugin.Interceptor)::CD,34161
34161 :: CALL :: call :: V :: v4.addInterceptor(p1 $interceptor )::CL,37350
34223 :: ENTR :: entry :: null :: org.apache.ibatis.session.AutoMappingBehavior.valueOf(java.lang.String)::CD,34228
34228 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
34236 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setAutoMappingBehavior(org.apache.ibatis.session.AutoMappingBehavior)::JM,34241
34241 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingBehavior :: p0 $this .autoMappingBehavior = p1 $autoMappingBehavior ::
34247 :: ENTR :: entry :: null :: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior.valueOf(java.lang.String)::CD,34252
34252 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
34260 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setAutoMappingUnknownColumnBehavior(org.apache.ibatis.session.AutoMappingUnknownColumnBehavior)::JM,34265
34265 :: EXPR :: modify :: Lorg/apache/ibatis/session/AutoMappingUnknownColumnBehavior :: p0 $this .autoMappingUnknownColumnBehavior = p1 $autoMappingUnknownColumnBehavior ::
34289 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setCacheEnabled(boolean)::JM,34294
34294 :: EXPR :: modify :: Z :: p0 $this .cacheEnabled = p1 $cacheEnabled ::
34300 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.createInstance(java.lang.String)::CD,34305:CD,34310:CD,34323:CD,34328:CD,34333
34305 :: CALL :: call :: Ljava/lang/Class :: v5 = p0 $this .resolveClass(p1 $alias )::JM,34310:CL,34113
34310 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 14::CD,34312
34312 :: CALL :: call :: Ljava/lang/Class :: v8 = p0 $this .resolveClass(p1 $alias )::CL,34113
34323 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
34328 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v11)::
34333 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
34352 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setProxyFactory(org.apache.ibatis.executor.loader.ProxyFactory)::CD,34357:CD,34366
34357 :: PRED :: IF :: Z :: if (p1 $proxyFactory  != #(null)) goto 14::CF,34366:CF,34358:JM,31810
34358 :: NORM :: declaration :: Lorg/apache/ibatis/executor/loader/javassist/JavassistProxyFactory :: v5 = new org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory::DD,34366
34362 :: EXPR :: modify :: Lorg/apache/ibatis/executor/loader/ProxyFactory :: p0 $this .proxyFactory = v7::
34366 :: EXPR :: assign :: null :: PHI v7 = p1 $proxyFactory , v5::DD,34362
34372 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setLazyLoadingEnabled(boolean)::JM,34377
34377 :: EXPR :: modify :: Z :: p0 $this .lazyLoadingEnabled = p1 $lazyLoadingEnabled ::
34383 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setAggressiveLazyLoading(boolean)::JM,34388
34388 :: EXPR :: modify :: Z :: p0 $this .aggressiveLazyLoading = p1 $aggressiveLazyLoading ::
34394 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setMultipleResultSetsEnabled(boolean)::JM,34399
34399 :: EXPR :: modify :: Z :: p0 $this .multipleResultSetsEnabled = p1 $multipleResultSetsEnabled ::
34405 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setUseColumnLabel(boolean)::JM,34410
34410 :: EXPR :: modify :: Z :: p0 $this .useColumnLabel = p1 $useColumnLabel ::
34416 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setUseGeneratedKeys(boolean)::JM,34421
34421 :: EXPR :: modify :: Z :: p0 $this .useGeneratedKeys = p1 $useGeneratedKeys ::
34427 :: ENTR :: entry :: null :: org.apache.ibatis.session.ExecutorType.valueOf(java.lang.String)::CD,34432
34432 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
34440 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setDefaultExecutorType(org.apache.ibatis.session.ExecutorType)::JM,34445
34445 :: EXPR :: modify :: Lorg/apache/ibatis/session/ExecutorType :: p0 $this .defaultExecutorType = p1 $defaultExecutorType ::
34451 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.integerValueOf(java.lang.String,java.lang.Integer)::CD,34457
34457 :: PRED :: IF :: Z :: if (p1 $value  != #(null)) goto 9::CD,34459
34459 :: CALL :: call :: Ljava/lang/Integer :: v7 = valueOf(p1 $value )::
34469 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setDefaultStatementTimeout(java.lang.Integer)::JM,34474
34474 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .defaultStatementTimeout = p1 $defaultStatementTimeout ::
34480 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setDefaultFetchSize(java.lang.Integer)::JM,34485
34485 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .defaultFetchSize = p1 $defaultFetchSize ::
34491 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setMapUnderscoreToCamelCase(boolean)::JM,34496
34496 :: EXPR :: modify :: Z :: p0 $this .mapUnderscoreToCamelCase = p1 $mapUnderscoreToCamelCase ::
34502 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setSafeRowBoundsEnabled(boolean)::JM,34507
34507 :: EXPR :: modify :: Z :: p0 $this .safeRowBoundsEnabled = p1 $safeRowBoundsEnabled ::
34513 :: ENTR :: entry :: null :: org.apache.ibatis.session.LocalCacheScope.valueOf(java.lang.String)::CD,34518
34518 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
34526 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setLocalCacheScope(org.apache.ibatis.session.LocalCacheScope)::JM,34531
34531 :: EXPR :: modify :: Lorg/apache/ibatis/session/LocalCacheScope :: p0 $this .localCacheScope = p1 $localCacheScope ::
34537 :: ENTR :: entry :: null :: org.apache.ibatis.type.JdbcType.valueOf(java.lang.String)::CE,34538:CD,34542:CD,34547:CD,34548
34538 :: EXIT :: exit :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.type.JdbcType.valueOf(java.lang.String)::JM,35053
34542 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,34547
34547 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,34548
34548 :: NORM :: compound :: Lorg/apache/ibatis/type/JdbcType :: return v6::DD,34538
34550 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setJdbcTypeForNull(org.apache.ibatis.type.JdbcType)::JM,34555
34555 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: p0 $this .jdbcTypeForNull = p1 $jdbcTypeForNull ::
34561 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.stringSetValueOf(java.lang.String,java.lang.String)::CD,34570:CD,34575
34570 :: CALL :: call :: [Ljava/lang/String :: v10 = v6.split(#(,))::JM,34575
34575 :: CALL :: call :: Ljava/util/List :: v12 = asList(v10)::JM,34575
34592 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setLazyLoadTriggerMethods(java.util.Set)::JM,34597
34597 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .lazyLoadTriggerMethods = p1 $lazyLoadTriggerMethods ::
34603 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setSafeResultHandlerEnabled(boolean)::JM,34608
34608 :: EXPR :: modify :: Z :: p0 $this .safeResultHandlerEnabled = p1 $safeResultHandlerEnabled ::
34614 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setDefaultScriptingLanguage(java.lang.Class)::CD,34625
34625 :: CALL :: call :: V :: v8.setDefaultDriverClass(v6)::CL,33452
34635 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setDefaultEnumTypeHandler(java.lang.Class)::CD,34640
34640 :: PRED :: IF :: Z :: if (p1 $typeHandler  == #(null)) goto 12::CD,34645
34645 :: CALL :: call :: V :: v6.setDefaultEnumTypeHandler(p1 $typeHandler )::CL,37436
34654 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setCallSettersOnNulls(boolean)::JM,34659
34659 :: EXPR :: modify :: Z :: p0 $this .callSettersOnNulls = p1 $callSettersOnNulls ::
34665 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setUseActualParamName(boolean)::JM,34670
34670 :: EXPR :: modify :: Z :: p0 $this .useActualParamName = p1 $useActualParamName ::
34676 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setReturnInstanceForEmptyRow(boolean)::JM,34681
34681 :: EXPR :: modify :: Z :: p0 $this .returnInstanceForEmptyRow = p1 $returnEmptyInstance ::
34687 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setLogPrefix(java.lang.String)::JM,34692
34692 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .logPrefix = p1 $logPrefix ::
34698 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setLogImpl(java.lang.Class)::CD,34703:JM,34704
34703 :: PRED :: IF :: Z :: if (p1 $logImpl  == #(null)) goto 16::CD,34710
34704 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .logImpl = p1 $logImpl ::
34710 :: CALL :: call :: V :: useCustomLogging(v5)::CL,37447
34719 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.setConfigurationFactory(java.lang.Class)::JM,34724
34724 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .configurationFactory = p1 $configurationFactory ::
34730 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.isSpecifiedEnvironment(java.lang.String)::CE,34731:CD,34755:CD,34760
34731 :: EXIT :: exit :: Z :: org.apache.ibatis.builder.xml.XMLConfigBuilder.isSpecifiedEnvironment(java.lang.String)::JM,29233
34752 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .environment::JM,34760
34755 :: CALL :: call :: Z :: v8 = v6.equals(p1 $id )::JM,34760
34760 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 47::CD,34761:CD,34762
34761 :: NORM :: compound :: Z :: return #(1)::DD,34731
34762 :: NORM :: compound :: Z :: return #(0)::DD,34731
34772 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.transactionManagerElement(org.apache.ibatis.parsing.XNode)::CD,34778:CD,34783:CD,34787
34778 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $context .getStringAttribute(#(type))::CL,33730
34783 :: CALL :: call :: Ljava/util/Properties :: v12 = p1 $context .getChildrenAsProperties()::CL,33661
34787 :: CALL :: call :: Ljava/lang/Class :: v14 = p0 $this .resolveClass(v10)::CL,34113
34821 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLConfigBuilder.dataSourceElement(org.apache.ibatis.parsing.XNode)::CD,34827:CD,34832:CD,34836
34827 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $context .getStringAttribute(#(type))::CL,33730
34832 :: CALL :: call :: Ljava/util/Properties :: v12 = p1 $context .getChildrenAsProperties()::CL,33661
34836 :: CALL :: call :: Ljava/lang/Class :: v14 = p0 $this .resolveClass(v10)::CL,34113
34909 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Environment.Builder.build()::JM,37474:JM,37467:JM,37484
34956 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.String)::JM,37517:CD,34971:CD,34977:CD,34981:CD,35014:CD,35018
34971 :: CALL :: call :: Lorg/apache/ibatis/io/ResolverUtil :: v10 = v4.find(v6, p1 $packageName )::CL,37543
34977 :: CALL :: call :: Ljava/util/Set :: v12 = v4.getClasses()::JM,35018:JM,34990:CL,37631
34981 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,35018:JM,34990
34986 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,35018:JM,34990
34990 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,34996:JM,35000:JM,35009:JM,35001:JM,35005
34991 :: CALL :: call :: Z :: v22 = v20.isAnonymousClass()::JM,34995
34995 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 87::CD,34996:CD,35000:JM,35018:JM,34990
34996 :: CALL :: call :: Z :: v24 = v20.isInterface()::JM,34996:JM,35000
35000 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 87::CD,35001:CD,35005:CD,35009:JM,35018:JM,34990
35001 :: CALL :: call :: I :: v26 = v20.getModifiers()::JM,35009:JM,35001:JM,35005
35005 :: CALL :: call :: Z :: v28 = isAbstract(v26)::JM,35009:JM,35005
35009 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 87::CD,35010:JM,35018:JM,34990
35010 :: CALL :: call :: V :: p0 $this .register(v20)::CL,35129
35014 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,35018:JM,34990
35018 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,34986:CD,34990:CD,34991:CD,34995:CD,35014:JM,35018
35042 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveJdbcType(java.lang.String)::CE,35043:CD,35047:CD,35055:CD,35060:CD,35065
35043 :: EXIT :: exit :: Lorg/apache/ibatis/type/JdbcType :: org.apache.ibatis.builder.BaseBuilder.resolveJdbcType(java.lang.String)::JM,29491
35047 :: PRED :: IF :: Z :: if (p1 $alias  != #(null)) goto 7::CD,35048:CD,35049:CD,35053
35048 :: NORM :: compound :: Lorg/apache/ibatis/type/JdbcType :: return #(null)::DD,35043
35049 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v6 = valueOf(p1 $alias )::JM,35053:CL,34537
35053 :: NORM :: compound :: Lorg/apache/ibatis/type/JdbcType :: return v6::DD,35043
35055 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
35060 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v7)::
35065 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
35080 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.Class,java.lang.Class)::CD,35086:CD,35092
35086 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v6 = p0 $this .getInstance(p1 $javaTypeClass , p2 $typeHandlerClass )::CL,37656
35092 :: CALL :: call :: V :: p0 $this .register(p1 $javaTypeClass , v6)::CL,36308
35103 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.Class)::CD,35110:CD,35116
35110 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v7 = p0 $this .getInstance(p1 $javaTypeClass , p3 $typeHandlerClass )::CL,37656
35116 :: CALL :: call :: V :: p0 $this .register(p1 $javaTypeClass , p2 $jdbcType , v7)::CL,36415
35129 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.Class)::CD,35135:CD,35140:CD,35141:CD,35159:CD,35173
35135 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v7 = p1 $typeHandlerClass .getAnnotation(v5)::JM,35140
35140 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,35141:JM,35142:JM,35146
35141 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 62::CF,35173:CD,35142:CD,35146:CD,35158:CD,35171:CD,35172
35142 :: CALL :: call :: [Ljava/lang/Class :: v11 = v8.value()::JM,35142:JM,35146
35146 :: EXPR :: assign :: I :: v12 = v11.length::DD,35158
35152 :: CALL :: call :: V :: p0 $this .register(v13, p1 $typeHandlerClass )::CL,35080
35157 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,35172:CF,35171
35158 :: PRED :: IF :: Z :: if (v18 < v12) goto 39::CF,35173:CD,35152:CD,35157:CD,35171:CD,35172
35159 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 75::CD,35160:CD,35166
35160 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v21 = p0 $this .getInstance(#(null), p1 $typeHandlerClass )::CL,37656
35166 :: CALL :: call :: V :: p0 $this .register(v21)::CL,37763
35171 :: EXPR :: assign :: null :: PHI v17 = #(0), #(1)::CF,35172:DD,35173
35172 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::DD,35157:DD,35158
35173 :: EXPR :: assign :: null :: PHI v19 = #(0), v17::DD,35159
35203 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addMappers(java.lang.String)::CD,35211
35211 :: CALL :: call :: V :: v4.addMappers(p1 $packageName )::CL,37861
35268 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.parse()::CD,35278:CD,35283:CD,35309:CD,35312:CD,35315
35278 :: CALL :: call :: Z :: v6 = v3.isResourceLoaded(v4)::JM,35283:CL,37958
35283 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 43::CD,35287:CD,35292:CD,35302:CD,35306
35287 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v11 = v8.evalNode(#(/mapper))::CL,25165
35292 :: CALL :: call :: V :: p0 $this .configurationElement(v11)::CL,37974
35302 :: CALL :: call :: V :: v13.addLoadedResource(v14)::CL,38110
35306 :: CALL :: call :: V :: p0 $this .bindMapperForNamespace()::CL,38127
35309 :: CALL :: call :: V :: p0 $this .parsePendingResultMaps()::CL,38203
35312 :: CALL :: call :: V :: p0 $this .parsePendingCacheRefs()::CL,38258
35315 :: CALL :: call :: V :: p0 $this .parsePendingStatements()::CL,38313
35331 :: ENTR :: entry :: null :: org.apache.ibatis.io.Resources.getUrlAsStream(java.lang.String)::
35355 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addMapper(java.lang.Class)::CD,35363
35363 :: CALL :: call :: V :: v4.addMapper(p1 $type )::CL,38366
35378 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
36144 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.DefaultReflectorFactory.findForClass(java.lang.Class)::CE,36145:CD,36152
36145 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/Reflector :: org.apache.ibatis.reflection.DefaultReflectorFactory.findForClass(java.lang.Class)::JM,31733
36149 :: EXPR :: reference :: Z :: v4 = p0 $this .classCacheEnabled::DD,36152
36152 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 48::CF,36178:CD,36156:CD,36161:CD,36162:CD,36177:JM,40003:JM,40070:JM,40007:JM,40014:JM,39957:JM,40021:JM,40025:JM,39964:JM,40029:JM,40093:JM,40030:JM,40097:JM,39971:JM,40035:JM,39978:JM,40042:JM,39985:JM,40049:JM,40053:JM,40120:JM,39992:JM,40057:JM,40058:JM,40122:JM,39995:JM,40123:JM,39999:JM,40063:CD,36183:CD,36184
36156 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $type )::JM,36161
36161 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,36162:DD,36184
36162 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 47::CF,36184:CF,36163:JM,40003:JM,40070:JM,40007:JM,40014:JM,39957:JM,40021:JM,40025:JM,39964:JM,40029:JM,40093:JM,40030:JM,40097:JM,39971:JM,40035:JM,39978:JM,40042:JM,39985:JM,40049:JM,40053:JM,40120:JM,39992:JM,40057:JM,40058:JM,40122:JM,39995:JM,40123:JM,39999:JM,40063:CD,36171
36163 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/Reflector :: v13 = new org.apache.ibatis.reflection.Reflector::DD,36184
36171 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.put(p1 $type , v13)::
36177 :: NORM :: compound :: Lorg/apache/ibatis/reflection/Reflector :: return v18::DD,36145
36178 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/Reflector :: v6 = new org.apache.ibatis.reflection.Reflector::DD,36183
36183 :: NORM :: compound :: Lorg/apache/ibatis/reflection/Reflector :: return v6::DD,36145
36184 :: EXPR :: assign :: null :: PHI v18 = v11, v13::CF,36177
36292 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandlerRegistry :: p0 $this .typeHandlerRegistry = p1 $typeHandlerRegistry ::
36308 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.Class,org.apache.ibatis.type.TypeHandler)::CD,36314
36314 :: CALL :: call :: V :: p0 $this .register(p1 $javaType , p2 $typeHandler )::CL,40327
36323 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(org.apache.ibatis.type.JdbcType,org.apache.ibatis.type.TypeHandler)::CD,36332
36332 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $jdbcType , p2 $handler )::
36415 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.Class,org.apache.ibatis.type.JdbcType,org.apache.ibatis.type.TypeHandler)::CD,36422
36422 :: CALL :: call :: V :: p0 $this .register(p1 $type , p2 $jdbcType , p3 $handler )::CL,40432
36586 :: ENTR :: entry :: null :: org.apache.ibatis.type.Java8TypeHandlersRegistrar.registerDateAndTimeHandlers(org.apache.ibatis.type.TypeHandlerRegistry)::CD,36592:CD,36599:CD,36606:CD,36613:CD,36620:CD,36627:CD,36634:CD,36641:CD,36648:CD,36655:CD,36662
36592 :: CALL :: call :: V :: p1 $registry .register(v3, v4)::CL,35080
36599 :: CALL :: call :: V :: p1 $registry .register(v6, v7)::CL,35080
36606 :: CALL :: call :: V :: p1 $registry .register(v9, v10)::CL,35080
36613 :: CALL :: call :: V :: p1 $registry .register(v12, v13)::CL,35080
36620 :: CALL :: call :: V :: p1 $registry .register(v15, v16)::CL,35080
36627 :: CALL :: call :: V :: p1 $registry .register(v18, v19)::CL,35080
36634 :: CALL :: call :: V :: p1 $registry .register(v21, v22)::CL,35080
36641 :: CALL :: call :: V :: p1 $registry .register(v24, v25)::CL,35080
36648 :: CALL :: call :: V :: p1 $registry .register(v27, v28)::CL,35080
36655 :: CALL :: call :: V :: p1 $registry .register(v30, v31)::CL,35080
36662 :: CALL :: call :: V :: p1 $registry .register(v33, v34)::CL,35080
36703 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.parseAttributes(org.w3c.dom.Node)::CD,36708:CD,36712:CD,36716:JM,36746:JM,36750
36708 :: NORM :: declaration :: Ljava/util/Properties :: v4 = new java.util.Properties::
36712 :: CALL :: call :: Lorg/w3c/dom/NamedNodeMap :: v7 = p1 $n .getAttributes()::JM,36712:JM,36746:JM,36716:JM,36750
36716 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 80::CD,36746:CD,36750:CD,36752
36730 :: CALL :: call :: Ljava/lang/String :: v18 = parse(v15, v16)::CL,40504
36739 :: CALL :: call :: Ljava/lang/Object :: v22 = v4.put(v20, v18)::
36745 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,36752
36746 :: CALL :: call :: I :: v11 = v7.getLength()::JM,36746:JM,36750
36750 :: PRED :: IF :: Z :: if (v25 < v11) goto 28::CD,36730:CD,36739:CD,36745:CD,36746:CD,36752
36752 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,36745:DD,36750:JM,36746
36776 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.parseBody(org.w3c.dom.Node)::CD,36781:CD,36786:JM,36787:JM,36805:JM,36809
36781 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getBodyData(p1 $node )::JM,36786:CL,40539
36786 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 62::CD,36787:CD,36805:CD,36809:CD,36812
36787 :: CALL :: call :: Lorg/w3c/dom/NodeList :: v8 = p1 $node .getChildNodes()::JM,36787:JM,36805:JM,36809
36797 :: CALL :: call :: Ljava/lang/String :: v15 = p0 $this .getBodyData(v13)::JM,36802:CL,40539
36802 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 47::CD,36804:CD,36805:CD,36809:CD,36812
36804 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,36812
36805 :: CALL :: call :: I :: v11 = v8.getLength()::JM,36805:JM,36809
36809 :: PRED :: IF :: Z :: if (v19 < v11) goto 26::CD,36797:CD,36802
36812 :: EXPR :: assign :: null :: PHI v19 = #(0), v17::DD,36804:DD,36809:JM,36805
36851 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getStringAttribute(java.lang.String,java.lang.String)::CE,36852:CD,36860:CD,36865:JM,36866
36852 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.XNode.getStringAttribute(java.lang.String,java.lang.String)::JM,33741:JM,56749
36860 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getProperty(p1 $name )::JM,36865:JM,36867
36865 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 16::CD,36866:CD,36867
36866 :: NORM :: compound :: Ljava/lang/String :: return p2 $def ::DD,36852
36867 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,36852
36883 :: CALL :: call :: I :: v7 = p1 $fullname .indexOf(#(46))::JM,36898:JM,36888:JM,36908:JM,36895
36888 :: PRED :: IF :: Z :: if (v7 <= #(-1)) goto 42::CD,36889:CD,36898:CD,36899:JM,36888:JM,36908:JM,36895
36889 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $fullname .substring(#(0), v7)::JM,36898:JM,36888:JM,36908:JM,36895
36895 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = v12::
36898 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v7 + #(1)::JM,36898:JM,36888:JM,36908:JM,36895
36899 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $fullname .substring(v14)::JM,36898:JM,36888:JM,36908:JM,36895
36908 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $fullname ::
36920 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .name::JM,36928:JM,36932
36923 :: CALL :: call :: I :: v21 = v18.indexOf(#(91))::JM,36928:JM,36932
36928 :: PRED :: IF :: Z :: if (v21 <= #(-1)) goto 109::CD,36932:CD,36936:CD,36940:CD,36941:CD,36953
36929 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .name::
36932 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + #(1)::
36933 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .name::JM,36940
36936 :: CALL :: call :: I :: v26 = v24.length()::JM,36940
36940 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 - #(1)::
36941 :: CALL :: call :: Ljava/lang/String :: v29 = v22.substring(v23, v27)::
36950 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .name::
36953 :: CALL :: call :: Ljava/lang/String :: v32 = v30.substring(#(0), v21)::
36998 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.property.PropertyTokenizer.hasNext()::CE,36999:CD,37005
36999 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.property.PropertyTokenizer.hasNext()::JM,33884:JM,56286:JM,60686:JM,63670:JM,63762:JM,63855:JM,65909:JM,65968
37002 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .children::DD,37005
37005 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 10::CD,37006:CD,37007
37006 :: NORM :: compound :: Z :: return #(1)::CF,36999
37007 :: NORM :: compound :: Z :: return #(0)::CF,36999
37012 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.property.PropertyTokenizer.getName()::CE,37013:CD,37019
37013 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.reflection.property.PropertyTokenizer.getName()::JM,66081
37016 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,37019
37019 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37013
37021 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.hasSetter(java.lang.String)::CE,37022:CD,37029:CD,37033:CD,37038
37022 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.Reflector.hasSetter(java.lang.String)::JM,33897:JM,33930
37026 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .setMethods::
37029 :: CALL :: call :: Ljava/util/Set :: v6 = v4.keySet()::
37033 :: CALL :: call :: Z :: v8 = v6.contains(p1 $propertyName )::JM,37038
37038 :: NORM :: compound :: Z :: return v8::DD,37022
37041 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.metaClassForProperty(java.lang.String)::CD,37049:CD,37057
37049 :: CALL :: call :: Ljava/lang/Class :: v6 = v4.getGetterType(p1 $name )::CL,40596
37057 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v9 = forClass(v6, v7)::CL,26950
37068 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.property.PropertyTokenizer.getChildren()::CE,37069:CD,37075
37069 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.reflection.property.PropertyTokenizer.getChildren()::JM,60704
37072 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .children::DD,37075
37075 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37069
37077 :: ENTR :: entry :: null :: org.apache.ibatis.io.VFS.addImplClass(java.lang.Class)::CD,37081
37081 :: PRED :: IF :: Z :: if (p1 $clazz  == #(null)) goto 14::CD,37082:CD,37084
37082 :: EXPR :: reference :: Ljava/util/List :: v4 = org.apache.ibatis.io.VFS.USER_IMPLEMENTATIONS::
37084 :: CALL :: call :: Z :: v6 = v4.add(p1 $clazz )::
37095 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeAliasRegistry.registerAliases(java.lang.String,java.lang.Class)::JM,37517:CD,37110:CD,37116:CD,37120:CD,37149:CD,37153
37110 :: CALL :: call :: Lorg/apache/ibatis/io/ResolverUtil :: v10 = v5.find(v7, p1 $packageName )::CL,37543
37116 :: CALL :: call :: Ljava/util/Set :: v12 = v5.getClasses()::JM,37153:JM,37129:CL,37631
37120 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,37153:JM,37129
37125 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,37153:JM,37129
37129 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,37139:JM,37135:JM,37144
37130 :: CALL :: call :: Z :: v22 = v20.isAnonymousClass()::JM,37134
37134 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 84::CD,37135:CD,37139:JM,37153:JM,37129
37135 :: CALL :: call :: Z :: v24 = v20.isInterface()::JM,37139:JM,37135
37139 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 84::CD,37140:CD,37144:JM,37153:JM,37129
37140 :: CALL :: call :: Z :: v26 = v20.isMemberClass()::JM,37144
37144 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 84::CD,37145:JM,37153:JM,37129
37145 :: CALL :: call :: V :: p0 $this .registerAlias(v20)::CL,34075
37149 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,37153:JM,37129
37153 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,37125:CD,37129:CD,37130:CD,37134:CD,37149:JM,37153
37334 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveAlias(java.lang.String)::CE,37335:CD,37342:CD,37347
37335 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.builder.BaseBuilder.resolveAlias(java.lang.String)::JM,34125
37342 :: CALL :: call :: Ljava/lang/Class :: v6 = v4.resolveAlias(p1 $alias )::JM,37347:CL,40800
37347 :: NORM :: compound :: Ljava/lang/Class :: return v6::DD,37335
37350 :: ENTR :: entry :: null :: org.apache.ibatis.plugin.InterceptorChain.addInterceptor(org.apache.ibatis.plugin.Interceptor)::CD,37358
37355 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .interceptors::
37358 :: CALL :: call :: Z :: v6 = v4.add(p1 $interceptor )::
37436 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.setDefaultEnumTypeHandler(java.lang.Class)::JM,37441
37441 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .defaultEnumTypeHandler = p1 $typeHandler ::
37447 :: ENTR :: entry :: null :: org.apache.ibatis.logging.LogFactory.useCustomLogging(java.lang.Class)::CD,37451
37451 :: CALL :: call :: V :: setImplementation(p1 $clazz )::CL,26280
37467 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::JM,37474:JM,37467:JM,37484
37474 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v11 = new java.lang.IllegalArgumentException::JM,37474:JM,37467:JM,37484
37484 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::JM,37474:JM,37467:JM,37484
37517 :: NORM :: declaration :: Ljava/util/HashSet :: v4 = new java.util.HashSet::
37543 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.find(org.apache.ibatis.io.ResolverUtil.Test,java.lang.String)::CD,37549:CD,37554:CD,37557:CD,37562:CD,37583:CD,37587:CD,37591:CD,37596:CD,37601
37549 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getPackagePath(p2 $packageName )::JM,37571:JM,37587:JM,37557:JM,37562:JM,37567:JM,37583:CL,40990
37554 :: CALL :: call :: Lorg/apache/ibatis/io/VFS :: v8 = getInstance()::JM,37571:JM,37587:JM,37557:JM,37562:JM,37567:JM,37583:CL,41011
37557 :: CALL :: call :: Ljava/util/List :: v10 = v8.list(v6)::JM,37571:JM,37587:JM,37557:JM,37562:JM,37567:JM,37583
37562 :: CALL :: call :: Ljava/util/Iterator :: v22 = v10.iterator()::JM,37571:JM,37587:JM,37562:JM,37567:JM,37583
37567 :: CALL :: call :: Ljava/lang/Object :: v27 = v22.next()::JM,37571:JM,37587:JM,37567:JM,37583
37571 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,37572:JM,37577
37572 :: CALL :: call :: Z :: v31 = v28.endsWith(#(.class))::JM,37572:JM,37577
37577 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 58::CD,37578:JM,37571:JM,37587:JM,37567:JM,37583
37578 :: CALL :: call :: V :: p0 $this .addIfMatching(p1 $test , v28)::CL,41233
37583 :: CALL :: call :: Z :: v24 = v22.hasNext()::JM,37571:JM,37587:JM,37567:JM,37583
37587 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 29::CD,37567:CD,37571:CD,37572:CD,37577:CD,37583:JM,37587
37591 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
37596 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p2 $packageName )::
37601 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
37631 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.getClasses()::CE,37632:CD,37638
37632 :: EXIT :: exit :: Ljava/util/Set :: org.apache.ibatis.io.ResolverUtil.getClasses()::JM,35018:JM,34990:JM,37153:JM,37129:JM,41465
37635 :: EXPR :: reference :: Ljava/util/Set :: v3 = p0 $this .matches::DD,37638
37638 :: NORM :: compound :: Ljava/util/Set :: return v3::CF,37632
37656 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getInstance(java.lang.Class,java.lang.Class)::CD,37662:CD,37688:CD,37693:CD,37698:CD,37723:CD,37728:CD,37733
37662 :: PRED :: IF :: Z :: if (p1 $javaTypeClass  == #(null)) goto 68::CD,37669:CD,37709
37669 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v11 = p2 $typeHandlerClass .getConstructor(v7)::
37688 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
37693 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p2 $typeHandlerClass )::
37698 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
37709 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v16 = p2 $typeHandlerClass .getConstructor(v14)::
37723 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
37728 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p2 $typeHandlerClass )::
37733 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
37763 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(org.apache.ibatis.type.TypeHandler)::CD,37768:CD,37772:CD,37773:CD,37778:CD,37779:CD,37797:CD,37811:CD,37821:CD,37822:JM,37798
37768 :: CALL :: call :: Ljava/lang/Class :: v6 = p1 $typeHandler .getClass()::JM,37778:JM,37798:JM,37768:JM,37773
37772 :: EXPR :: assign :: Ljava/lang/Class :: v7 = metadata <Application,Lorg/apache/ibatis/type/MappedTypes>-><Primordial,Ljava/lang/Class>::JM,37778:JM,37773
37773 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v9 = v6.getAnnotation(v7)::JM,37778:JM,37773
37778 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,37779:JM,37780:JM,37784
37779 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 65::CF,37821:CD,37780:CD,37784:CD,37796:CD,37819:CD,37820
37780 :: CALL :: call :: [Ljava/lang/Class :: v13 = v10.value()::JM,37780:JM,37784
37784 :: EXPR :: assign :: I :: v14 = v13.length::DD,37796
37790 :: CALL :: call :: V :: p0 $this .register(v15, p1 $typeHandler )::CL,40327
37795 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v20 + #(1)::DD,37820:CF,37819
37796 :: PRED :: IF :: Z :: if (v20 < v14) goto 42::CF,37821:CD,37790:CD,37795:CD,37819:CD,37820
37797 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,37822:CD,37798:CD,37799
37798 :: EXPR :: assign :: Z :: v22=p1 $typeHandler  INSTANCEOF org.apache.ibatis.type.TypeReference::DD,37799
37799 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 99::CF,37822:CD,37805
37805 :: CALL :: call :: V :: p0 $this .register(v25, p1 $typeHandler )::CL,40327
37811 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 108::CD,37812
37812 :: CALL :: call :: V :: p0 $this .register(#(null), p1 $typeHandler )::CL,36308
37819 :: EXPR :: assign :: null :: PHI v19 = #(0), #(1)::CF,37820:DD,37821
37820 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::DD,37795:DD,37796
37821 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,37797:DD,37822
37822 :: EXPR :: assign :: null :: PHI v29 = v21, v21, #(1), v21::DD,37811
37861 :: ENTR :: entry :: null :: org.apache.ibatis.binding.MapperRegistry.addMappers(java.lang.String)::CD,37867
37867 :: CALL :: call :: V :: p0 $this .addMappers(p1 $packageName , v4)::CL,41422
37897 :: CALL :: call :: Lorg/w3c/dom/Document :: v12 = p0 $this .createDocument(v9)::CL,27074
37958 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.isResourceLoaded(java.lang.String)::CE,37959:CD,37966:CD,37971
37959 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.isResourceLoaded(java.lang.String)::JM,35283:JM,43056:JM,46937
37966 :: CALL :: call :: Z :: v6 = v4.contains(p1 $resource )::JM,37971
37971 :: NORM :: compound :: Z :: return v6::DD,37959
37974 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(org.apache.ibatis.parsing.XNode)::CD,37979:CD,38000:CD,38004:CD,38009:CD,38013:CD,38018:CD,38022:CD,38027:CD,38031:CD,38036:CD,38040:CD,38045:CD,38049:CD,38054:CD,38060:CD,38065:CD,38070
37979 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $context .getStringAttribute(#(namespace))::CL,33730
38000 :: CALL :: call :: V :: v12.setCurrentNamespace(v6)::CL,41528
38004 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v16 = p1 $context .evalNode(#(cache-ref))::CL,27870
38009 :: CALL :: call :: V :: p0 $this .cacheRefElement(v16)::CL,41604
38013 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v20 = p1 $context .evalNode(#(cache))::CL,27870
38018 :: CALL :: call :: V :: p0 $this .cacheElement(v20)::CL,41671
38022 :: CALL :: call :: Ljava/util/List :: v24 = p1 $context .evalNodes(#(/mapper/parameterMap))::CL,41808
38027 :: CALL :: call :: V :: p0 $this .parameterMapElement(v24)::CL,41829
38031 :: CALL :: call :: Ljava/util/List :: v28 = p1 $context .evalNodes(#(/mapper/resultMap))::CL,41808
38036 :: CALL :: call :: V :: p0 $this .resultMapElements(v28)::CL,42051
38040 :: CALL :: call :: Ljava/util/List :: v32 = p1 $context .evalNodes(#(/mapper/sql))::CL,41808
38045 :: CALL :: call :: V :: p0 $this .sqlElement(v32)::CL,42088
38049 :: CALL :: call :: Ljava/util/List :: v36 = p1 $context .evalNodes(#(select|insert|update|...))::CL,41808
38054 :: CALL :: call :: V :: p0 $this .buildStatementFromContext(v36)::CL,42127
38060 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v43 = new java.lang.StringBuilder::
38065 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v43.append(v41)::
38070 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::
38110 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addLoadedResource(java.lang.String)::CD,38118
38118 :: CALL :: call :: Z :: v6 = v4.add(p1 $resource )::
38127 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace()::CD,38134:CD,38138
38134 :: CALL :: call :: Ljava/lang/String :: v5 = v3.getCurrentNamespace()::JM,38138:CL,42166
38138 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 70::CD,38139:CD,38144:CD,38184
38139 :: CALL :: call :: Ljava/lang/Class :: v8 = classForName(v5)::JM,38184:CL,18606
38144 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 70::CD,38148:CD,38153
38148 :: CALL :: call :: Z :: v14 = v12.hasMapper(v11)::JM,38153:CL,42175
38153 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 70::CD,38157:CD,38162:CD,38167:CD,38171:CD,38178
38157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
38162 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
38167 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
38171 :: CALL :: call :: V :: v16.addLoadedResource(v23)::CL,38110
38178 :: CALL :: call :: V :: v25.addMapper(v11)::CL,35355
38184 :: EXPR :: assign :: null :: PHI v11 = v8, #(null)::DD,38144
38203 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.parsePendingResultMaps()::CD,38210:CD,38215:CD,38233:CD,38237
38210 :: CALL :: call :: Ljava/util/Collection :: v5 = v3.getIncompleteResultMaps()::JM,38237:CL,42191
38215 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,38237
38220 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,38237
38225 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v15 = v13.resolve()::CL,42200
38229 :: CALL :: call :: V :: v7.remove()::JM,38237
38233 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,38237
38237 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 23::CD,38220:CD,38225:CD,38229:CD,38233:JM,38237
38258 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.parsePendingCacheRefs()::CD,38265:CD,38270:CD,38288:CD,38292
38265 :: CALL :: call :: Ljava/util/Collection :: v5 = v3.getIncompleteCacheRefs()::JM,38292:CL,42243
38270 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,38292
38275 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,38292
38280 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v15 = v13.resolveCacheRef()::CL,42252
38284 :: CALL :: call :: V :: v7.remove()::JM,38292
38288 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,38292
38292 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 23::CD,38275:CD,38280:CD,38284:CD,38288:JM,38292
38313 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.parsePendingStatements()::CD,38320:CD,38325:CD,38342:CD,38346
38320 :: CALL :: call :: Ljava/util/Collection :: v5 = v3.getIncompleteStatements()::JM,38346:CL,42270
38325 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,38346
38330 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,38346
38335 :: CALL :: call :: V :: v13.parseStatementNode()::CL,42279
38338 :: CALL :: call :: V :: v7.remove()::JM,38346
38342 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,38346
38346 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 23::CD,38330:CD,38335:CD,38338:CD,38342:JM,38346
38366 :: ENTR :: entry :: null :: org.apache.ibatis.binding.MapperRegistry.addMapper(java.lang.Class)::CD,38371:CD,38375:CD,38383:CD,38388:CD,38393:CD,38398:CD,38438
38371 :: CALL :: call :: Z :: v5 = p1 $type .isInterface()::JM,38371:JM,38375
38375 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 122::CD,38376:JM,42847:CD,38415:JM,27777:JM,42978:JM,42886:JM,42887:JM,42951:JM,27783:JM,42891:JM,42987:JM,42960:JM,42897:JM,27793:JM,42996:JM,42933:JM,41494:JM,42872:JM,42905:JM,42969:JM,42910:JM,42942:JM,42879:CD,38430:CD,38444
38376 :: CALL :: call :: Z :: v8 = p0 $this .hasMapper(p1 $type )::CL,42823
38383 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
38388 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(p1 $type )::
38393 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#( is already known to ...))::
38398 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
38415 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.put(p1 $type , v10)::
38430 :: CALL :: call :: V :: v14.parse()::CL,43037
38438 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.remove(p1 $type )::
38444 :: PRED :: IF :: Z :: if (#(1) != #(0)) goto 122::CD,38448
38448 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.remove(p1 $type )::
39485 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,39486:CD,39489:JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39486 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,39489
39489 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,39490:JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39490 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
39494 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39499 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,39758
39500 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,39759:CD,39501:CD,39502:CD,39507
39501 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39502 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39507 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,39499:CD,39500:CD,39758:CD,39759
39509 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,39759
39510 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,39511:CD,39516:JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39708:JM,39485:JM,39582
39511 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39516 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,39509:CD,39510:CD,39759:JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39517 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39526 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,39760:CD,39527
39527 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,39760
39528 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39532 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,39761:CD,39533:CD,39538:JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39533 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39538 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,39761
39540 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,39541:CD,39547:CD,39551:CD,39556:CD,39559:CD,39560:CD,39762:CD,39763:CD,39764:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39541 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39547 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,39764:JM,39556
39551 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39571:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582:JM,39764
39556 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,39763:CD,39557:CD,39764
39557 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,39763
39559 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,39762
39560 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,39763:CD,39561:CD,39764
39561 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,39763:CD,39562:CD,39567:CD,39764:JM,39556:JM,39526:JM,39532:JM,39758:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39562 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39567 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,39763:CD,39540
39571 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,39767:CD,39572
39572 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,39576:CD,39581:CD,39582:CD,39589:CD,39599:CD,39765:CD,39766:CD,39767
39573 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,39581
39576 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,39581
39581 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,39767:CD,39582:CD,39589:CD,39599:CD,39765:CD,39766
39582 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,39765
39583 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,39765
39586 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,39589
39589 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,39766:CD,39593:CD,39598
39590 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,39593:JM,39598
39593 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,39593:JM,39598
39598 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,39766
39599 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,39767
39646 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
39647 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
39652 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39657 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,39707:JM,39708
39666 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,39670
39670 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
39675 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
39676 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
39681 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
39684 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
39689 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
39701 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39707 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,39708:CD,39709
39708 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,39538:JM,39507:JM,39556:JM,39540:JM,39526:JM,39707:JM,39516:JM,39532:JM,39708:JM,39758:JM,39567:JM,39765:JM,39767:JM,39485:JM,39582
39709 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,39556:JM,39526:JM,39532:JM,39758:JM,39567:JM,39538:JM,39507:JM,39540:JM,39765:JM,39767:JM,39707:JM,39516:JM,39708:JM,39485:JM,39582
39745 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
39746 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
39757 :: EXPR :: assign :: Ljava/lang/Exception :: v108 = catch <exc>::
39758 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,39499:DD,39500:DD,39501:DD,39510:DD,39561:JM,39538:JM,39507:JM,39540:JM,39526:JM,39707:JM,39516:JM,39532:JM,39708:JM,39758:JM,39567
39759 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,39509:DD,39510:JM,39538:JM,39507:JM,39556:JM,39540:JM,39526:JM,39707:JM,39516:JM,39532:JM,39708:JM,39758:JM,39567:DD,39527:DD,39760
39760 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,39532:JM,39538:JM,39507:JM,39556:JM,39540:JM,39526:JM,39707:JM,39516:JM,39708:JM,39758:JM,39567:DD,39762:DD,39763:JM,39765:JM,39767:JM,39485:JM,39582
39761 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,39560
39762 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,39538:JM,39507:JM,39540:JM,39526:JM,39707:JM,39516:JM,39532:JM,39708:JM,39758:JM,39567:DD,39557:DD,39559:DD,39561:JM,39556:CF,39560
39763 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,39764:JM,39538:JM,39507:JM,39540:JM,39526:JM,39707:JM,39516:JM,39532:JM,39708:JM,39758:JM,39567
39764 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,39572:JM,39581:DD,39766
39765 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,39767
39766 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,39599
39767 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,39666
39957 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,39992:DD,39961
39961 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .setMethods = v5::
39964 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::JM,39992:DD,39968
39968 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .getMethods = v7::
39971 :: NORM :: declaration :: Ljava/util/HashMap :: v9 = new java.util.HashMap::JM,39992:DD,39975
39975 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .setTypes = v9::
39978 :: NORM :: declaration :: Ljava/util/HashMap :: v11 = new java.util.HashMap::JM,39992:DD,39982
39982 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .getTypes = v11::
39985 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::JM,39992:DD,39989
39989 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .caseInsensitivePropertyMap = v13::
39992 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .type = p1 $clazz ::
39995 :: CALL :: call :: V :: p0 $this .addDefaultConstructor(p1 $clazz )::CL,43912
39999 :: CALL :: call :: V :: p0 $this .addGetMethods(p1 $clazz )::CL,43979
40003 :: CALL :: call :: V :: p0 $this .addSetMethods(p1 $clazz )::CL,44090
40007 :: CALL :: call :: V :: p0 $this .addFields(p1 $clazz )::CL,44184
40011 :: EXPR :: reference :: Ljava/util/Map :: v19 = p0 $this .getMethods::JM,40035
40014 :: CALL :: call :: Ljava/util/Set :: v21 = v19.keySet()::JM,40035
40018 :: EXPR :: reference :: Ljava/util/Map :: v22 = p0 $this .getMethods::JM,40029
40021 :: CALL :: call :: Ljava/util/Set :: v24 = v22.keySet()::JM,40029
40025 :: CALL :: call :: I :: v26 = v24.size()::JM,40029
40029 :: NORM :: declaration :: [Ljava/lang/String :: v27 = new java.lang.String[]::JM,40035
40030 :: CALL :: call :: [Ljava/lang/Object :: v29 = v21.toArray(v27)::JM,40035
40035 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,40036
40036 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .readablePropertyNames = v30::
40039 :: EXPR :: reference :: Ljava/util/Map :: v31 = p0 $this .setMethods::JM,40063
40042 :: CALL :: call :: Ljava/util/Set :: v33 = v31.keySet()::JM,40063
40046 :: EXPR :: reference :: Ljava/util/Map :: v34 = p0 $this .setMethods::JM,40057
40049 :: CALL :: call :: Ljava/util/Set :: v36 = v34.keySet()::JM,40057
40053 :: CALL :: call :: I :: v38 = v36.size()::JM,40057
40057 :: NORM :: declaration :: [Ljava/lang/String :: v39 = new java.lang.String[]::JM,40063
40058 :: CALL :: call :: [Ljava/lang/Object :: v41 = v33.toArray(v39)::JM,40063
40063 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::DD,40064
40064 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .writeablePropertyNames = v42::
40067 :: EXPR :: reference :: [Ljava/lang/String :: v43 = p0 $this .readablePropertyNames::DD,40070
40070 :: EXPR :: assign :: I :: v44 = v43.length::DD,40093
40072 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v43[v55]::
40079 :: EXPR :: reference :: Ljava/util/Locale :: v48 = java.util.Locale.ENGLISH::
40081 :: CALL :: call :: Ljava/lang/String :: v50 = v46.toUpperCase(v48)::
40086 :: CALL :: call :: Ljava/lang/Object :: v52 = v47.put(v50, v46)::
40092 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v55 + #(1)::DD,40122
40093 :: PRED :: IF :: Z :: if (v55 < v44) goto 178::CD,40079:CD,40081:CD,40086:CD,40092:CD,40122
40094 :: EXPR :: reference :: [Ljava/lang/String :: v56 = p0 $this .writeablePropertyNames::DD,40097
40097 :: EXPR :: assign :: I :: v57 = v56.length::DD,40120
40099 :: EXPR :: reference :: Ljava/lang/Object :: v58 = v56[v67]::
40106 :: EXPR :: reference :: Ljava/util/Locale :: v60 = java.util.Locale.ENGLISH::
40108 :: CALL :: call :: Ljava/lang/String :: v62 = v58.toUpperCase(v60)::
40113 :: CALL :: call :: Ljava/lang/Object :: v64 = v59.put(v62, v58)::
40119 :: EXPR :: assign :: Ljava/lang/Object :: v65 = v67 + #(1)::DD,40123
40120 :: PRED :: IF :: Z :: if (v67 < v57) goto 225::CD,40106:CD,40108:CD,40113:CD,40119:CD,40123
40122 :: EXPR :: assign :: null :: PHI v55 = #(0), v54::DD,40092:DD,40093
40123 :: EXPR :: assign :: null :: PHI v67 = #(0), v65::DD,40119:DD,40120
40327 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.reflect.Type,org.apache.ibatis.type.TypeHandler)::CD,40338:CD,40343:CD,40344
40338 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v9 = v6.getAnnotation(v7)::JM,40343
40343 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,40344:JM,40345:JM,40349:JM,40363:JM,40367
40344 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 84::CD,40345:CD,40349:CD,40362:CD,40363:CD,40367:CD,40375:CD,40382
40345 :: CALL :: call :: [Lorg/apache/ibatis/type/JdbcType :: v14 = v10.value()::JM,40345:JM,40349
40349 :: EXPR :: assign :: I :: v15 = v14.length::DD,40362
40355 :: CALL :: call :: V :: p0 $this .register(p1 $javaType , v17, p2 $typeHandler )::CL,40432
40361 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,40382
40362 :: PRED :: IF :: Z :: if (v21 < v15) goto 40::CD,40355:CD,40361:CD,40382:JM,40363:JM,40367
40363 :: CALL :: call :: Z :: v23 = v10.includeNullJdbcType()::JM,40363:JM,40367
40367 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 87::CD,40368
40368 :: CALL :: call :: V :: p0 $this .register(p1 $javaType , #(null), p2 $typeHandler )::CL,40432
40375 :: CALL :: call :: V :: p0 $this .register(p1 $javaType , #(null), p2 $typeHandler )::CL,40432
40382 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,40361:DD,40362
40432 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.reflect.Type,org.apache.ibatis.type.JdbcType,org.apache.ibatis.type.TypeHandler)::CD,40439:CD,40476
40439 :: PRED :: IF :: Z :: if (p1 $javaType  == #(null)) goto 57::CD,40443:CD,40448:CD,40449:CD,40463
40443 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(p1 $javaType )::JM,40448
40448 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,40449
40449 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 50::CF,40450:CD,40457
40450 :: NORM :: declaration :: Ljava/util/HashMap :: v11 = new java.util.HashMap::
40457 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.put(p1 $javaType , v11)::
40463 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.put(p2 $jdbcType , p3 $handler )::
40476 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.put(v21, p3 $handler )::
40504 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.PropertyParser.parse(java.lang.String,java.util.Properties)::CE,40505:JM,49281:JM,49268:CD,40522:CD,40527
40505 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.PropertyParser.parse(java.lang.String,java.util.Properties)::JM,40567
40522 :: CALL :: call :: Ljava/lang/String :: v12 = v7.parse(p1 $string )::JM,40527:CL,44642
40527 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,40505
40539 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getBodyData(org.w3c.dom.Node)::CE,40540:CD,40544:CD,40548:JM,40549:JM,40553
40540 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.XNode.getBodyData(org.w3c.dom.Node)::JM,36786:JM,36802
40544 :: CALL :: call :: S :: v5 = p1 $child .getNodeType()::JM,40544:JM,40548:JM,40549:JM,40553
40548 :: PRED :: IF :: Z :: if (v5 == #(4)) goto 21::CD,40549:CD,40553:CD,40562:CD,40567:JM,40544:JM,40548
40549 :: CALL :: call :: S :: v8 = p1 $child .getNodeType()::JM,40544:JM,40548:JM,40549:JM,40553
40553 :: PRED :: IF :: Z :: if (v8 != #(3)) goto 42::CD,40562:CD,40567:CD,40568
40562 :: CALL :: call :: Ljava/lang/String :: v16 = parse(v13, v14)::JM,40567:CL,40504
40567 :: NORM :: compound :: Ljava/lang/String :: return v16::DD,40540
40568 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,40540
40596 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getGetterType(java.lang.String)::CE,40597:CD,40604:CD,40609:CD,40612:CD,40617:CD,40622:CD,40630:CD,40635:CD,40640:CD,40649
40597 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.Reflector.getGetterType(java.lang.String)::JM,60998:JM,61003
40604 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $propertyName )::JM,40609
40609 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,40649
40612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
40617 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $propertyName )::
40622 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#(' in '))::
40630 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
40635 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#('))::
40640 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
40649 :: NORM :: compound :: Ljava/lang/Class :: return v7::DD,40597
40800 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(java.lang.String)::CE,40801:CD,40805:CD,40839:CD,40844:CD,40849:CD,40854:CD,40859
40801 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(java.lang.String)::JM,37347
40805 :: PRED :: IF :: Z :: if (p1 $string  != #(null)) goto 7::CD,40806:CD,40807:CD,40809:CD,40817:CD,40822:CD,40837:CD,40870
40806 :: NORM :: compound :: Ljava/lang/Class :: return #(null)::DD,40801
40807 :: EXPR :: reference :: Ljava/util/Locale :: v5 = java.util.Locale.ENGLISH::
40809 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $string .toLowerCase(v5)::
40817 :: CALL :: call :: Z :: v10 = v8.containsKey(v7)::JM,40822
40822 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,40826:CD,40831:CD,40833:CD,40870
40826 :: CALL :: call :: Ljava/lang/Object :: v31 = v29.get(v7)::JM,40831
40831 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::DD,40870
40833 :: CALL :: call :: Ljava/lang/Class :: v13 = classForName(p1 $string )::JM,40870:CL,18606
40837 :: NORM :: compound :: Ljava/lang/Class :: return v33::DD,40801
40839 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
40844 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v16.append(p1 $string )::
40849 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#('.  Cause: ))::
40854 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v23.append(v14)::
40859 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
40870 :: EXPR :: assign :: null :: PHI v33 = v32, v13::CF,40837
40990 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.getPackagePath(java.lang.String)::CE,40991:CD,40995:CD,41003:CD,41004
40991 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.io.ResolverUtil.getPackagePath(java.lang.String)::JM,37571:JM,37587:JM,37557:JM,37562:JM,37567:JM,37583
40995 :: PRED :: IF :: Z :: if (p1 $packageName  != #(null)) goto 13::CD,40997:CD,41004:JM,40995
40997 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $packageName .replace(#(46), #(47))::JM,40995:JM,41004
41003 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,40991
41004 :: EXPR :: assign :: null :: PHI v9 = #(null), v8::CF,41003
41011 :: ENTR :: entry :: null :: org.apache.ibatis.io.VFS.getInstance()::CE,41012:CD,41014:CD,41016:CD,41099:CD,41104:CD,41109:CD,41118:CD,41121:CD,41126:CD,41131:CD,41140
41012 :: EXIT :: exit :: Lorg/apache/ibatis/io/VFS :: org.apache.ibatis.io.VFS.getInstance()::JM,37571:JM,37587:JM,37557:JM,37562:JM,37567:JM,37583
41014 :: EXPR :: reference :: Lorg/apache/ibatis/io/VFS :: v2 = org.apache.ibatis.io.VFS.instance::DD,41016
41016 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 10::CF,41020:CD,41017:CD,41019:CD,41024:CD,41026:CD,41031:CD,41033:CD,41037:CD,41142:CD,41143:CD,41147:CD,41148:CD,41150:CD,41154:CD,41183:CD,41185:CD,41187:CD,41190:CD,41191
41017 :: EXPR :: reference :: Lorg/apache/ibatis/io/VFS :: v82 = org.apache.ibatis.io.VFS.instance::CF,41019
41019 :: NORM :: compound :: Lorg/apache/ibatis/io/VFS :: return v82::DD,41012
41020 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,41048
41024 :: EXPR :: reference :: Ljava/util/List :: v6 = org.apache.ibatis.io.VFS.USER_IMPLEMENTATIONS::
41026 :: CALL :: call :: Z :: v8 = v4.addAll(v6)::
41031 :: EXPR :: reference :: [Ljava/lang/Class :: v9 = org.apache.ibatis.io.VFS.IMPLEMENTATIONS::JM,41033
41033 :: CALL :: call :: Ljava/util/List :: v11 = asList(v9)::JM,41033
41037 :: CALL :: call :: Z :: v13 = v4.addAll(v11)::
41043 :: CALL :: call :: Ljava/lang/Object :: v18 = v4.get(v45)::JM,41048
41048 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::JM,41049:JM,41053:JM,41074
41049 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.newInstance()::JM,41049:JM,41053
41053 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,41054:JM,41059:JM,41055:DD,41190
41054 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 78::CD,41055:CD,41059:CD,41060:CD,41062:CD,41066
41055 :: CALL :: call :: Z :: v24 = v22.isValid()::JM,41059:JM,41055
41059 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 184::CD,41060:CD,41062:CD,41066:CF,41141
41060 :: EXPR :: reference :: Lorg/apache/ibatis/logging/Log :: v25 = org.apache.ibatis.io.VFS.log::JM,41062:JM,41066
41062 :: CALL :: call :: Z :: v27 = v25.isDebugEnabled()::JM,41062:JM,41066
41066 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 184::CD,41069:CD,41074:CD,41078:CD,41083:CD,41088:CF,41141
41069 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
41074 :: CALL :: call :: Ljava/lang/String :: v33 = v19.getName()::JM,41074
41078 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(v33)::
41083 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( is not valid in this...))::
41088 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
41099 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
41104 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(v19)::
41109 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
41118 :: NORM :: compound :: Lorg/apache/ibatis/io/VFS :: return #(null)::DD,41012
41121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
41126 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(v19)::
41131 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
41140 :: NORM :: compound :: Lorg/apache/ibatis/io/VFS :: return #(null)::DD,41012
41141 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v45 + #(1)::DD,41191:CF,41190
41142 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 50::CD,41043:CD,41048:CD,41049:CD,41053:CD,41054:CD,41141:CD,41190:CD,41191:JM,41143:JM,41147
41143 :: CALL :: call :: Z :: v16 = v44.isValid()::JM,41143:JM,41147
41147 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 50::CD,41043:CD,41048:CD,41049:CD,41053:CD,41054:CD,41141:CD,41142:CD,41143:CD,41190:CD,41191
41148 :: EXPR :: reference :: Lorg/apache/ibatis/logging/Log :: v46 = org.apache.ibatis.io.VFS.log::JM,41154:JM,41150
41150 :: CALL :: call :: Z :: v48 = v46.isDebugEnabled()::JM,41154:JM,41150
41154 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 240::CD,41157:CD,41162:CD,41166:CD,41170:CD,41175:CF,41183
41157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
41162 :: CALL :: call :: Ljava/lang/Class :: v54 = v44.getClass()::JM,41162:JM,41166
41166 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getName()::JM,41166
41170 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v50.append(v56)::
41175 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
41183 :: EXPR :: modify :: Lorg/apache/ibatis/io/VFS :: org.apache.ibatis.io.VFS.instance = v44::
41185 :: EXPR :: reference :: Lorg/apache/ibatis/io/VFS :: v62 = org.apache.ibatis.io.VFS.instance::CF,41187
41187 :: NORM :: compound :: Lorg/apache/ibatis/io/VFS :: return v62::DD,41012
41190 :: EXPR :: assign :: null :: PHI v44 = #(null), v22::CF,41191:DD,41142:JM,41143:JM,41147:JM,41162:JM,41166:DD,41183
41191 :: EXPR :: assign :: null :: PHI v45 = #(0), v43::JM,41048:DD,41141:CF,41142
41233 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.addIfMatching(org.apache.ibatis.io.ResolverUtil.Test,java.lang.String)::CD,41239:CD,41244:CD,41250:CD,41256:CD,41260:CD,41262:CD,41266:CD,41307:CD,41312:CD,41324:CD,41329:CD,41334:CD,41339:CD,41344:CD,41348:CD,41352:CD,41357:CD,41362:CD,41366:CD,41371:CD,41380
41239 :: CALL :: call :: I :: v8 = p2 $fqn .indexOf(#(46))::JM,41250:JM,41239:JM,41244
41244 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $fqn .substring(#(0), v8)::JM,41250:JM,41239:JM,41244
41250 :: CALL :: call :: Ljava/lang/String :: v13 = v10.replace(#(47), #(46))::JM,41250
41256 :: CALL :: call :: Ljava/lang/ClassLoader :: v15 = p0 $this .getClassLoader()::CL,45099
41260 :: EXPR :: reference :: Lorg/apache/ibatis/logging/Log :: v16 = org.apache.ibatis.io.ResolverUtil.log::JM,41266:JM,41262
41262 :: CALL :: call :: Z :: v18 = v16.isDebugEnabled()::JM,41266:JM,41262
41266 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 77::CD,41269:CD,41274:CD,41279:CD,41284:CD,41289:CD,41294
41269 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
41274 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(v13)::
41279 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#( matches criteria [))::
41284 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(p1 $test )::
41289 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#(]))::
41294 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
41307 :: CALL :: call :: Z :: v39 = p1 $test .matches(v37)::JM,41312:CL,45123
41312 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 165::CD,41316
41316 :: CALL :: call :: Z :: v42 = v40.add(v37)::
41324 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
41329 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v45.append(p2 $fqn )::JM,41250:JM,41239:JM,41244
41334 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#('))::JM,41250
41339 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( due to a ))::
41344 :: CALL :: call :: Ljava/lang/Class :: v57 = v43.getClass()::
41348 :: CALL :: call :: Ljava/lang/String :: v59 = v57.getName()::
41352 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v55.append(v59)::
41357 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v61.append(#( with message: ))::
41362 :: CALL :: call :: Ljava/lang/String :: v66 = v43.getMessage()::
41366 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v64.append(v66)::
41371 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
41380 :: EXPR :: assign :: Ljava/lang/Exception :: v43 = catch <exc>::
41422 :: ENTR :: entry :: null :: org.apache.ibatis.binding.MapperRegistry.addMappers(java.lang.String,java.lang.Class)::JM,37517:CD,41437:CD,41443:CD,41447:CD,41461:CD,41465
41437 :: CALL :: call :: Lorg/apache/ibatis/io/ResolverUtil :: v10 = v5.find(v7, p1 $packageName )::CL,37543
41443 :: CALL :: call :: Ljava/util/Set :: v12 = v5.getClasses()::JM,41465:CL,37631
41447 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,41465
41452 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,41465
41457 :: CALL :: call :: V :: p0 $this .addMapper(v20)::CL,38366
41461 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,41465
41465 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,41452:CD,41457:CD,41461:JM,41465
41494 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v7 = instance()::CL,20134
41528 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.setCurrentNamespace(java.lang.String)::CD,41554:CD,41562:CD,41567:CD,41572:CD,41577:CD,41582
41554 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
41559 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .currentNamespace::
41562 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
41567 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(' but found '))::
41572 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(p1 $currentNamespace )::
41577 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#('.))::
41582 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
41604 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.cacheRefElement(org.apache.ibatis.parsing.XNode)::CD,41609:CD,41652
41609 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 59::CD,41620:CD,41625:CD,41634:CD,41644
41620 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $context .getStringAttribute(#(namespace))::CL,33730
41625 :: CALL :: call :: V :: v5.addCacheRef(v8, v11)::CL,45147
41634 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $context .getStringAttribute(#(namespace))::CL,33730
41644 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v19 = v13.resolveCacheRef()::CL,42252
41652 :: CALL :: call :: V :: v21.addIncompleteCacheRef(v13)::CL,45188
41671 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.cacheElement(org.apache.ibatis.parsing.XNode)::CD,41676
41676 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 132::CD,41677:CD,41686:CD,41691:CD,41700:CD,41705:CD,41710:CD,41719:CD,41735:CD,41745:CD,41752
41677 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $context .getStringAttribute(#(type), #(PERPETUAL))::CL,36851
41686 :: CALL :: call :: Ljava/lang/Class :: v11 = v9.resolveAlias(v8)::CL,40800
41691 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $context .getStringAttribute(#(eviction), #(LRU))::CL,36851
41700 :: CALL :: call :: Ljava/lang/Class :: v18 = v16.resolveAlias(v15)::CL,40800
41705 :: CALL :: call :: Ljava/lang/Long :: v21 = p1 $context .getLongAttribute(#(flushInterval))::CL,45205
41710 :: CALL :: call :: Ljava/lang/Integer :: v24 = p1 $context .getIntAttribute(#(size))::CL,45220
41719 :: CALL :: call :: Ljava/lang/Boolean :: v30 = p1 $context .getBooleanAttribute(#(readOnly), v28)::CL,45235
41735 :: CALL :: call :: Ljava/lang/Boolean :: v39 = p1 $context .getBooleanAttribute(#(blocking), v37)::CL,45235
41745 :: CALL :: call :: Ljava/util/Properties :: v43 = p1 $context .getChildrenAsProperties()::CL,33661
41752 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v46 = v44.useNewCache(v11, v18, v21, v24, v34, v41, v43)::CL,45263
41808 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.evalNodes(java.lang.String)::CE,41809:CD,41819:CD,41825
41809 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.parsing.XNode.evalNodes(java.lang.String)::JM,41957
41819 :: CALL :: call :: Ljava/util/List :: v7 = v4.evalNodes(v5, p1 $expression )::JM,41825:CL,45365
41825 :: NORM :: compound :: Ljava/util/List :: return v7::DD,41809
41829 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.parameterMapElement(java.util.List)::CD,41834:CD,41968:CD,41972
41834 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $list .iterator()::JM,41972
41839 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,41972
41844 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getStringAttribute(#(id))::CL,33730
41849 :: CALL :: call :: Ljava/lang/String :: v17 = v11.getStringAttribute(#(type))::CL,33730
41854 :: CALL :: call :: Ljava/lang/Class :: v19 = p0 $this .resolveClass(v17)::CL,34113
41859 :: CALL :: call :: Ljava/util/List :: v22 = v11.evalNodes(#(parameter))::JM,41957:CL,41808
41864 :: NORM :: declaration :: Ljava/util/ArrayList :: v23 = new java.util.ArrayList::
41868 :: CALL :: call :: Ljava/util/Iterator :: v26 = v22.iterator()::JM,41957
41873 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,41957
41878 :: CALL :: call :: Ljava/lang/String :: v34 = v31.getStringAttribute(#(property))::CL,33730
41883 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getStringAttribute(#(javaType))::CL,33730
41888 :: CALL :: call :: Ljava/lang/String :: v40 = v31.getStringAttribute(#(jdbcType))::CL,33730
41893 :: CALL :: call :: Ljava/lang/String :: v43 = v31.getStringAttribute(#(resultMap))::CL,33730
41898 :: CALL :: call :: Ljava/lang/String :: v46 = v31.getStringAttribute(#(mode))::CL,33730
41903 :: CALL :: call :: Ljava/lang/String :: v49 = v31.getStringAttribute(#(typeHandler))::CL,33730
41908 :: CALL :: call :: Ljava/lang/Integer :: v52 = v31.getIntAttribute(#(numericScale))::CL,45220
41913 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMode :: v54 = p0 $this .resolveParameterMode(v46)::CL,45433
41918 :: CALL :: call :: Ljava/lang/Class :: v56 = p0 $this .resolveClass(v37)::CL,34113
41923 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v58 = p0 $this .resolveJdbcType(v40)::CL,35042
41928 :: CALL :: call :: Ljava/lang/Class :: v60 = p0 $this .resolveClass(v49)::CL,34113
41936 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMapping :: v63 = v61.buildParameterMapping(v19, v34, v56, v58, v43, v54, v60, v52)::CL,45471
41948 :: CALL :: call :: Z :: v65 = v23.add(v63)::
41953 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,41957
41957 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 78::CD,41873:CD,41878:CD,41883:CD,41888:CD,41893:CD,41898:CD,41903:CD,41908:CD,41913:CD,41918:CD,41923:CD,41928:CD,41936:CD,41948:CD,41953:JM,41957
41961 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMap :: v68 = v66.addParameterMap(v14, v19, v23)::CL,45566
41968 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,41972
41972 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,41839:CD,41844:CD,41849:CD,41854:CD,41859:CD,41864:CD,41868:CD,41953:CD,41957:CD,41961:CD,41968:JM,41972
42051 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(java.util.List)::CD,42056:CD,42072:CD,42076
42056 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $list .iterator()::JM,42076
42061 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,42076
42066 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v13 = p0 $this .resultMapElement(v11)::CL,45615
42072 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,42076
42076 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,42061:CD,42066:CD,42072:JM,42076
42088 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.sqlElement(java.util.List)::CD,42096:CD,42100:CD,42113
42096 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getDatabaseId()::JM,42100:CL,45632
42100 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,42108
42108 :: CALL :: call :: V :: p0 $this .sqlElement(p1 $list , v10)::CL,45641
42113 :: CALL :: call :: V :: p0 $this .sqlElement(p1 $list , #(null))::CL,45641
42127 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(java.util.List)::CD,42135:CD,42139:CD,42152
42135 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getDatabaseId()::JM,42139:CL,45632
42139 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,42147
42147 :: CALL :: call :: V :: p0 $this .buildStatementFromContext(p1 $list , v10)::CL,45724
42152 :: CALL :: call :: V :: p0 $this .buildStatementFromContext(p1 $list , #(null))::CL,45724
42166 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.getCurrentNamespace()::CE,42167:CD,42173
42167 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.builder.MapperBuilderAssistant.getCurrentNamespace()::JM,38138
42170 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .currentNamespace::DD,42173
42173 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,42167
42175 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.hasMapper(java.lang.Class)::CE,42176:CD,42183:CD,42188
42176 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.hasMapper(java.lang.Class)::JM,38153
42183 :: CALL :: call :: Z :: v6 = v4.hasMapper(p1 $type )::JM,42188:CL,42823
42188 :: NORM :: compound :: Z :: return v6::DD,42176
42191 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getIncompleteResultMaps()::CE,42192:CD,42198
42192 :: EXIT :: exit :: Ljava/util/Collection :: org.apache.ibatis.session.Configuration.getIncompleteResultMaps()::JM,38237
42195 :: EXPR :: reference :: Ljava/util/Collection :: v3 = p0 $this .incompleteResultMaps::DD,42198
42198 :: NORM :: compound :: Ljava/util/Collection :: return v3::CF,42192
42200 :: ENTR :: entry :: null :: org.apache.ibatis.builder.ResultMapResolver.resolve()::CD,42225
42225 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v11 = v3.addResultMap(v4, v5, v6, v7, v8, v9)::CL,45785
42243 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getIncompleteCacheRefs()::CE,42244:CD,42250
42244 :: EXIT :: exit :: Ljava/util/Collection :: org.apache.ibatis.session.Configuration.getIncompleteCacheRefs()::JM,38292
42247 :: EXPR :: reference :: Ljava/util/Collection :: v3 = p0 $this .incompleteCacheRefs::DD,42250
42250 :: NORM :: compound :: Ljava/util/Collection :: return v3::CF,42244
42252 :: ENTR :: entry :: null :: org.apache.ibatis.builder.CacheRefResolver.resolveCacheRef()::CD,42262
42262 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v6 = v3.useCacheRef(v4)::CL,46015
42270 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getIncompleteStatements()::CE,42271:CD,42277
42271 :: EXIT :: exit :: Ljava/util/Collection :: org.apache.ibatis.session.Configuration.getIncompleteStatements()::JM,38346
42274 :: EXPR :: reference :: Ljava/util/Collection :: v3 = p0 $this .incompleteStatements::DD,42277
42277 :: NORM :: compound :: Ljava/util/Collection :: return v3::CF,42271
42279 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode()::CD,42286:CD,42294:CD,42302:CD,42309
42286 :: CALL :: call :: Ljava/lang/String :: v6 = v3.getStringAttribute(#(id))::CL,33730
42294 :: CALL :: call :: Ljava/lang/String :: v10 = v7.getStringAttribute(#(databaseId))::CL,33730
42302 :: CALL :: call :: Z :: v13 = p0 $this .databaseIdMatchesCurrent(v6, v10, v11)::JM,42309:CL,46112
42309 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 35::CD,42314:CD,42322:CD,42330:CD,42338:CD,42343:CD,42351:CD,42359:CD,42367:CD,42372:CD,42377:CD,42385:CD,42399:CD,42405:CD,42409:CD,42432:CD,42449:CD,42466:CD,42483:CD,42512:CD,42516:CD,42538:CD,42546:CD,42554:CD,42559:CD,42560:CD,42568:CD,42573:CD,42580:CD,42589:CD,42594:CD,42647
42314 :: CALL :: call :: Ljava/lang/Integer :: v18 = v15.getIntAttribute(#(fetchSize))::CL,45220
42322 :: CALL :: call :: Ljava/lang/Integer :: v22 = v19.getIntAttribute(#(timeout))::CL,45220
42330 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getStringAttribute(#(parameterMap))::CL,33730
42338 :: CALL :: call :: Ljava/lang/String :: v30 = v27.getStringAttribute(#(parameterType))::CL,33730
42343 :: CALL :: call :: Ljava/lang/Class :: v32 = p0 $this .resolveClass(v30)::CL,34113
42351 :: CALL :: call :: Ljava/lang/String :: v36 = v33.getStringAttribute(#(resultMap))::CL,33730
42359 :: CALL :: call :: Ljava/lang/String :: v40 = v37.getStringAttribute(#(resultType))::CL,33730
42367 :: CALL :: call :: Ljava/lang/String :: v44 = v41.getStringAttribute(#(lang))::CL,33730
42372 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v46 = p0 $this .getLanguageDriver(v44)::CL,46189
42377 :: CALL :: call :: Ljava/lang/Class :: v48 = p0 $this .resolveClass(v40)::CL,34113
42385 :: CALL :: call :: Ljava/lang/String :: v52 = v49.getStringAttribute(#(resultSetType))::CL,33730
42399 :: CALL :: call :: Ljava/lang/String :: v59 = v53.getStringAttribute(#(statementType), v57)::CL,36851
42405 :: CALL :: call :: Lorg/apache/ibatis/mapping/StatementType :: v61 = valueOf(v59)::CL,46218
42409 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultSetType :: v63 = p0 $this .resolveResultSetType(v52)::CL,46231
42432 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlCommandType :: v73 = valueOf(v71)::CL,46278
42449 :: CALL :: call :: Ljava/lang/Boolean :: v83 = v77.getBooleanAttribute(#(flushCache), v81)::CL,45235
42466 :: CALL :: call :: Ljava/lang/Boolean :: v91 = v86.getBooleanAttribute(#(useCache), v89)::CL,45235
42483 :: CALL :: call :: Ljava/lang/Boolean :: v99 = v94.getBooleanAttribute(#(resultOrdered), v97)::CL,45235
42512 :: CALL :: call :: V :: v102.applyIncludes(v108)::CL,46312
42516 :: CALL :: call :: V :: p0 $this .processSelectKeyNodes(v6, v32, v46)::CL,46352
42538 :: CALL :: call :: Ljava/lang/String :: v118 = v115.getStringAttribute(#(resultSets))::CL,33730
42546 :: CALL :: call :: Ljava/lang/String :: v122 = v119.getStringAttribute(#(keyProperty))::CL,33730
42554 :: CALL :: call :: Ljava/lang/String :: v126 = v123.getStringAttribute(#(keyColumn))::CL,33730
42559 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
42560 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v6)::
42568 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v127.append(#(!selectKey))::
42573 :: CALL :: call :: Ljava/lang/String :: v135 = v133.toString()::
42580 :: CALL :: call :: Ljava/lang/String :: v138 = v136.applyCurrentNamespace(v135, #(1))::CL,46422
42589 :: CALL :: call :: Z :: v141 = v139.hasKeyGenerator(v138)::JM,42594:CL,46541
42594 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 429::CD,42598:CD,42628
42598 :: CALL :: call :: Lorg/apache/ibatis/executor/keygen/KeyGenerator :: v162 = v160.getKeyGenerator(v138)::CL,46557
42628 :: CALL :: call :: Ljava/lang/Boolean :: v154 = v142.getBooleanAttribute(#(useGeneratedKeys), v152)::CL,45235
42647 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v166 = v164.addMappedStatement(v6, v114, v61, v73, v18, v22, v26, v32, v36, v48, v63, v85, v93, v101, v163, v122, v126, v10, v46, v118)::CL,46583
42823 :: ENTR :: entry :: null :: org.apache.ibatis.binding.MapperRegistry.hasMapper(java.lang.Class)::CE,42824:CD,42831:CD,42836
42824 :: EXIT :: exit :: Z :: org.apache.ibatis.binding.MapperRegistry.hasMapper(java.lang.Class)::JM,42188
42831 :: CALL :: call :: Z :: v6 = v4.containsKey(p1 $type )::JM,42836
42836 :: NORM :: compound :: Z :: return v6::DD,42824
42847 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v5 = new java.util.concurrent.ConcurrentHashMap::
42872 :: NORM :: declaration :: Ljava/util/HashSet :: v6 = new java.util.HashSet::JM,27793:JM,27777:JM,41494:JM,42887:JM,27783
42879 :: NORM :: declaration :: Ljava/util/HashSet :: v8 = new java.util.HashSet::JM,27793:JM,27777:JM,41494:JM,42887:JM,27783
42886 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::JM,27793:JM,27777:JM,41494:JM,42887:JM,27783
42887 :: CALL :: call :: Ljava/lang/String :: v12 = p2 $type .getName()::JM,27793:JM,27777:JM,41494:JM,42887:JM,27783
42891 :: CALL :: call :: Ljava/lang/String :: v16 = v12.replace(#(46), #(47))::JM,27777
42897 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
42905 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v10.append(#(.java (best guess)))::
42910 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
42933 :: CALL :: call :: Z :: v30 = v27.add(v28)::
42942 :: CALL :: call :: Z :: v34 = v31.add(v32)::
42951 :: CALL :: call :: Z :: v38 = v35.add(v36)::
42960 :: CALL :: call :: Z :: v42 = v39.add(v40)::
42969 :: CALL :: call :: Z :: v46 = v43.add(v44)::
42978 :: CALL :: call :: Z :: v50 = v47.add(v48)::
42987 :: CALL :: call :: Z :: v54 = v51.add(v52)::
42996 :: CALL :: call :: Z :: v58 = v55.add(v56)::
43037 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse()::CD,43044:CD,43051:CD,43056:CD,43119:CD,43125
43044 :: CALL :: call :: Ljava/lang/String :: v5 = v3.toString()::
43051 :: CALL :: call :: Z :: v8 = v6.isResourceLoaded(v5)::JM,43056:CL,37958
43056 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 124::CD,43057:CD,43063:CD,43077:CD,43081:CD,43084:CD,43090:CD,43094:CD,43124:CD,43130
43057 :: CALL :: call :: V :: p0 $this .loadXmlResource()::CL,46904
43063 :: CALL :: call :: V :: v11.addLoadedResource(v5)::CL,38110
43077 :: CALL :: call :: V :: v13.setCurrentNamespace(v16)::CL,41528
43081 :: CALL :: call :: V :: p0 $this .parseCache()::CL,47044
43084 :: CALL :: call :: V :: p0 $this .parseCacheRef()::CL,47155
43090 :: CALL :: call :: [Ljava/lang/reflect/Method :: v22 = v20.getMethods()::JM,43094
43094 :: EXPR :: assign :: I :: v23 = v22.length::DD,43124
43096 :: EXPR :: reference :: Ljava/lang/Object :: v24 = v22[v37]::JM,43104:JM,43100
43100 :: CALL :: call :: Z :: v26 = v24.isBridge()::JM,43104:JM,43100
43104 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 113::CD,43105:CF,43123
43105 :: CALL :: call :: V :: p0 $this .parseStatement(v24)::CL,47269
43119 :: CALL :: call :: V :: v29.addIncompleteMethod(v30)::CL,47797
43123 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v37 + #(1)::DD,43130
43124 :: PRED :: IF :: Z :: if (v37 < v23) goto 78::CD,43100:CD,43104:CD,43123:CD,43130
43125 :: CALL :: call :: V :: p0 $this .parsePendingMethods()::CL,47814
43130 :: EXPR :: assign :: null :: PHI v37 = #(0), v35::DD,43123:DD,43124
43565 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
43581 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,43586
43586 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,43587:DD,43760
43587 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,43588:CD,43590:CD,43598:CD,43722:CD,43727:CD,43728:CD,43760:CD,43761:CD,43765
43588 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,43590
43590 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,43760:CD,43591:CD,43593:CD,43761
43591 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,43760:JM,43593
43593 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,43760:JM,43593:JM,43763:JM,43766:JM,43737:JM,43690
43598 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,43765:CD,43605:CD,43609:CD,43610:CD,43629:CD,43630:CD,43638:CD,43643:CD,43647:CD,43711:CD,43764
43605 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,43609
43609 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,43610
43610 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,43611:CD,43612:CD,43620:CD,43625
43611 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
43612 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
43620 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
43625 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
43629 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
43630 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
43638 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
43643 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
43647 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,43716
43654 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
43658 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
43662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,43763:JM,43690
43663 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
43671 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,43763:JM,43690
43676 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,43763:JM,43690:JM,43760:JM,43766:JM,43593:JM,43737
43681 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,43763:JM,43766:JM,43690
43686 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,43763:JM,43690
43690 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,43763:JM,43690
43695 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,43763
43699 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,43763:JM,43690
43704 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,43764:CD,43705:CD,43709
43705 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,43705:JM,43709
43709 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,43764
43711 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,43765:CD,43712:CD,43716
43712 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,43716
43716 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,43765:CD,43654:CD,43658:CD,43662:CD,43663:CD,43671:CD,43676:CD,43681:CD,43686:CD,43690:CD,43704:CD,43711:CD,43763:CD,43764
43722 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,43727
43727 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,43728:DD,43766
43728 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,43731:CD,43742:CD,43743:CD,43766:CD,43767
43731 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,43766:CD,43732:CD,43734
43732 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,43734
43734 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,43766:CD,43735:CD,43737
43735 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,43766:JM,43737
43737 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,43766:JM,43737:JM,43760:JM,43763:JM,43593:JM,43690
43742 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,43767
43743 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,43746
43746 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::
43760 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,43761:DD,43598:DD,43764:DD,43765
43761 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,43731:CF,43598
43763 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,43704:JM,43705:JM,43709
43764 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,43711:DD,43764:DD,43765
43765 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,43767
43766 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,43742:DD,43767
43767 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,43743
43912 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addDefaultConstructor(java.lang.Class)::CD,43917:CD,43921:CD,43951:CD,43954
43917 :: CALL :: call :: [Ljava/lang/reflect/Constructor :: v5 = p1 $clazz .getDeclaredConstructors()::JM,43921
43921 :: EXPR :: assign :: I :: v6 = v5.length::DD,43951
43923 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v5[v23]::JM,43927:JM,43931:JM,43942:JM,43946:DD,43947
43927 :: CALL :: call :: [Ljava/lang/Class :: v10 = v8.getParameterTypes()::JM,43927:JM,43931
43931 :: EXPR :: assign :: I :: v11 = v10.length::DD,43932
43932 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 60::CD,43933:CD,43942:CD,43946:CF,43950
43933 :: CALL :: call :: Z :: v13 = canAccessPrivateMethods()::CL,48235
43942 :: CALL :: call :: Z :: v19 = v8.isAccessible()::JM,43942:JM,43946
43946 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 60::CF,43950
43947 :: EXPR :: modify :: Ljava/lang/reflect/Constructor :: p0 $this .defaultConstructor = v8::
43950 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v23 + #(1)::DD,43954
43951 :: PRED :: IF :: Z :: if (v23 < v6) goto 22::CD,43927:CD,43931:CD,43932:CD,43950:CD,43954
43954 :: EXPR :: assign :: null :: PHI v23 = #(0), v21::DD,43950:DD,43951
43979 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addGetMethods(java.lang.Class)::CD,43984:CD,43988:CD,43993:CD,44043:CD,44044:CD,44049
43984 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::
43988 :: CALL :: call :: [Ljava/lang/reflect/Method :: v7 = p0 $this .getClassMethods(p1 $cls )::JM,43993:CL,48262
43993 :: EXPR :: assign :: I :: v8 = v7.length::DD,44043
43995 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v7[v33]::JM,44003:JM,44020:JM,44026:JM,44015:JM,44031
43999 :: CALL :: call :: [Ljava/lang/Class :: v12 = v10.getParameterTypes()::JM,44003
44003 :: EXPR :: assign :: I :: v13 = v12.length::DD,44004
44004 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 48::CD,44006:CD,44010:CD,44015:JM,44020:JM,44026:JM,44031
44006 :: CALL :: call :: Ljava/lang/String :: v15 = v10.getName()::JM,44020:JM,44026:JM,44015:JM,44031
44010 :: CALL :: call :: Z :: v18 = v15.startsWith(#(get))::JM,44020:JM,44026:JM,44015:JM,44031
44015 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 76::CD,44016:CD,44020:CD,44021:CD,44026:JM,44015:JM,44031
44016 :: CALL :: call :: I :: v20 = v15.length()::JM,44020:JM,44026:JM,44015:JM,44031
44020 :: PRED :: IF :: Z :: if (v20 > #(3)) goto 93::CD,44021:CD,44026:CD,44032:CD,44036:JM,44020:JM,44015:JM,44031
44021 :: CALL :: call :: Z :: v24 = v15.startsWith(#(is))::JM,44020:JM,44026:JM,44015:JM,44031
44026 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 107::CD,44027:CD,44031:JM,44020:JM,44026:JM,44015:CF,44042
44027 :: CALL :: call :: I :: v26 = v15.length()::JM,44020:JM,44026:JM,44015:JM,44031
44031 :: PRED :: IF :: Z :: if (v26 <= #(2)) goto 107::CD,44032:CD,44036:CF,44042
44032 :: CALL :: call :: Ljava/lang/String :: v29 = methodToProperty(v15)::CL,48358
44036 :: CALL :: call :: V :: p0 $this .addMethodConflict(v4, v29, v10)::CL,48505
44042 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,44049
44043 :: PRED :: IF :: Z :: if (v33 < v8) goto 31::CD,43999:CD,44003:CD,44004:CD,44042:CD,44049
44044 :: CALL :: call :: V :: p0 $this .resolveGetterConflicts(v4)::CL,48549
44049 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,44042:DD,44043
44090 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addSetMethods(java.lang.Class)::CD,44095:CD,44099:CD,44104:CD,44142:CD,44143:CD,44148
44095 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::
44099 :: CALL :: call :: [Ljava/lang/reflect/Method :: v7 = p0 $this .getClassMethods(p1 $cls )::JM,44104:CL,48262
44104 :: EXPR :: assign :: I :: v8 = v7.length::DD,44142
44106 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v7[v28]::JM,44119:JM,44124:JM,44129
44110 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getName()::JM,44119:JM,44124
44114 :: CALL :: call :: Z :: v15 = v12.startsWith(#(set))::JM,44119:JM,44124
44119 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 87::CD,44120:CD,44124:JM,44119:CF,44141
44120 :: CALL :: call :: I :: v17 = v12.length()::JM,44119:JM,44124
44124 :: PRED :: IF :: Z :: if (v17 <= #(3)) goto 87::CD,44125:CD,44129:CD,44130:CF,44141
44125 :: CALL :: call :: [Ljava/lang/Class :: v20 = v10.getParameterTypes()::JM,44129
44129 :: EXPR :: assign :: I :: v21 = v20.length::DD,44130
44130 :: PRED :: IF :: Z :: if (v21 != #(1)) goto 87::CD,44131:CD,44135:CF,44141
44131 :: CALL :: call :: Ljava/lang/String :: v24 = methodToProperty(v12)::CL,48358
44135 :: CALL :: call :: V :: p0 $this .addMethodConflict(v4, v24, v10)::CL,48505
44141 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v28 + #(1)::DD,44148
44142 :: PRED :: IF :: Z :: if (v28 < v8) goto 31::CD,44110:CD,44114:CD,44119:CD,44141:CD,44148
44143 :: CALL :: call :: V :: p0 $this .resolveSetterConflicts(v4)::CL,48776
44148 :: EXPR :: assign :: null :: PHI v28 = #(0), v27::DD,44141:DD,44142
44184 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addFields(java.lang.Class)::CD,44189:CD,44193:CD,44262:CD,44263:CD,44267:CD,44278
44189 :: CALL :: call :: [Ljava/lang/reflect/Field :: v5 = p1 $clazz .getDeclaredFields()::JM,44193
44193 :: EXPR :: assign :: I :: v6 = v5.length::DD,44262
44195 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v5[v37]::JM,44208:JM,44212:JM,44226:JM,44230:JM,44234:JM,44235:JM,44239
44199 :: CALL :: call :: Z :: v10 = canAccessPrivateMethods()::CL,48235
44208 :: CALL :: call :: Z :: v16 = v8.isAccessible()::JM,44208:JM,44212
44212 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 111::CD,44220:CD,44225:CD,44251:CD,44256:CF,44261
44220 :: CALL :: call :: Z :: v21 = v17.containsKey(v19)::JM,44225
44225 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 91::CD,44226:CD,44230:CD,44234:JM,44235:JM,44239
44226 :: CALL :: call :: I :: v23 = v8.getModifiers()::JM,44226:JM,44230:JM,44234:JM,44235:JM,44239
44230 :: CALL :: call :: Z :: v25 = isFinal(v23)::JM,44230:JM,44234:JM,44235:JM,44239
44234 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 87::CD,44235:CD,44239:CD,44240:JM,44230:JM,44234
44235 :: CALL :: call :: Z :: v27 = isStatic(v23)::JM,44230:JM,44234:JM,44235:JM,44239
44239 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 91::CD,44240
44240 :: CALL :: call :: V :: p0 $this .addSetField(v8)::CL,48932
44251 :: CALL :: call :: Z :: v33 = v29.containsKey(v31)::JM,44256
44256 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 111::CD,44257:CF,44261
44257 :: CALL :: call :: V :: p0 $this .addGetField(v8)::CL,49008
44261 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v37 + #(1)::DD,44278
44262 :: PRED :: IF :: Z :: if (v37 < v6) goto 22::CD,44199:CD,44208:CD,44212:CD,44261:CD,44278:JM,44263:JM,44267
44263 :: CALL :: call :: Ljava/lang/Class :: v39 = p1 $clazz .getSuperclass()::JM,44263:JM,44267
44267 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 136::CD,44272
44272 :: CALL :: call :: V :: p0 $this .addFields(v42)::CL,44184
44278 :: EXPR :: assign :: null :: PHI v37 = #(0), v35::DD,44261:DD,44262
44642 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.GenericTokenParser.parse(java.lang.String)::CE,44643:CD,44647:JM,44736:JM,44804:JM,44869:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44664:JM,44665
44643 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.GenericTokenParser.parse(java.lang.String)::JM,40527
44647 :: PRED :: IF :: Z :: if (p1 $text  == #(null)) goto 13::CD,44648:CD,44652:CD,44653:JM,44736:JM,44804:JM,44869:JM,44647:JM,44872:JM,44778:JM,44843:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44664:JM,44665
44648 :: CALL :: call :: Z :: v6 = p1 $text .isEmpty()::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44664:JM,44665
44652 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,44653:CD,44657:CD,44663
44653 :: NORM :: compound :: Ljava/lang/String :: return #()::DD,44643
44654 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .openToken::JM,44736:JM,44804:JM,44869:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44665
44657 :: CALL :: call :: I :: v10 = p1 $text .indexOf(v8, #(0))::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44664:JM,44665
44663 :: PRED :: IF :: Z :: if (v10 != #(-1)) goto 32::CD,44664:CD,44665:CD,44669:CD,44849:CD,44850:CD,44851:CD,44861:CD,44865:CD,44872:CD,44873:CD,44874:JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44852:JM,44663
44664 :: NORM :: compound :: Ljava/lang/String :: return p1 $text ::DD,44643
44665 :: CALL :: call :: [C :: v13 = p1 $text .toCharArray()::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44665
44669 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,44865
44674 :: PRED :: IF :: Z :: if (v92 <= #(0)) goto 106::CD,44675:CD,44680:CD,44707:CD,44717:CD,44718:CD,44728:CD,44732:CD,44736:CD,44802:CD,44803:CD,44866:CD,44867:CD,44868:CD,44869
44675 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v92 - #(1)::
44676 :: EXPR :: reference :: C :: v18 = v13[v17]::DD,44680
44680 :: PRED :: IF :: Z :: if (v18 != #(92)) goto 106::CD,44681:CD,44682:CD,44683:CD,44693:CD,44701:CD,44705:CD,44707:CD,44717:CD,44718:CD,44728:CD,44732:CD,44736:CD,44802:CD,44803:CD,44866:CD,44867:CD,44868:CD,44869:CD,44870:CD,44871
44681 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v92 - v93::DD,44682
44682 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 - #(1)::
44683 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v14.append(v13, v93, v21)::JM,44736:JM,44850:JM,44804:JM,44852:JM,44869:JM,44872:JM,44778:JM,44843:JM,44813
44690 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .openToken::
44693 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(v24)::
44698 :: EXPR :: reference :: Ljava/lang/String :: v27 = p0 $this .openToken::JM,44705
44701 :: CALL :: call :: I :: v29 = v27.length()::JM,44705
44705 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v92 + v29::DD,44870
44707 :: PRED :: IF :: Z :: if (v94 != #(null)) goto 124::CF,44708:CD,44713:CD,44866
44708 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,44866
44713 :: CALL :: call :: V :: v94.setLength(#(0))::
44717 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v92 - v93::
44718 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v14.append(v13, v93, v35)::JM,44736:JM,44850:JM,44804:JM,44852:JM,44869:JM,44872:JM,44778:JM,44843:JM,44813
44725 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .openToken::JM,44732
44728 :: CALL :: call :: I :: v40 = v38.length()::JM,44732
44732 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v92 + v40::JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:DD,44868
44733 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .closeToken::JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813
44736 :: CALL :: call :: I :: v44 = p1 $text .indexOf(v42, v41)::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44665
44743 :: PRED :: IF :: Z :: if (v62 <= v61) goto 243::CD,44744:CD,44749:CD,44785:CD,44786
44744 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v62 - #(1)::
44745 :: EXPR :: reference :: C :: v46 = v13[v45]::DD,44749
44749 :: PRED :: IF :: Z :: if (v46 != #(92)) goto 243::CD,44750:CD,44751:CD,44752:CD,44762:CD,44770:CD,44774:CD,44778:CD,44785:CD,44786:CD,44802:CD,44867:CD,44868:CD,44869
44750 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v62 - v61::DD,44751
44751 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v47 - #(1)::
44752 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v34.append(v13, v61, v48)::JM,44736:JM,44850:JM,44804:JM,44852:JM,44869:JM,44872:JM,44778:JM,44843:JM,44813
44759 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .closeToken::
44762 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(v51)::
44767 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .closeToken::JM,44774
44770 :: CALL :: call :: I :: v56 = v54.length()::JM,44774
44774 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v62 + v56::JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:DD,44868
44775 :: EXPR :: reference :: Ljava/lang/String :: v58 = p0 $this .closeToken::JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813
44778 :: CALL :: call :: I :: v60 = p1 $text .indexOf(v58, v57)::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44665
44785 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v62 - v61::
44786 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v34.append(v13, v61, v63)::JM,44736:JM,44850:JM,44804:JM,44852:JM,44869:JM,44872:JM,44778:JM,44843:JM,44813
44802 :: PRED :: IF :: Z :: if (v62 > #(-1)) goto 170::CD,44743:CF,44803
44803 :: PRED :: IF :: Z :: if (v62 != #(-1)) goto 297::CD,44804:CD,44805:CD,44806:CD,44813:CD,44818:CD,44822:CD,44827:CD,44835:CD,44839:CD,44870:CD,44871
44804 :: EXPR :: assign :: I :: v71 = v13.length::DD,44805
44805 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v71 - v95::
44806 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v14.append(v13, v95, v72)::JM,44736:JM,44850:JM,44852:JM,44869:JM,44872:JM,44778:JM,44843:JM,44813
44813 :: EXPR :: assign :: I :: v75 = v13.length::DD,44870
44818 :: CALL :: call :: Ljava/lang/String :: v78 = v34.toString()::
44822 :: CALL :: call :: Ljava/lang/String :: v80 = v76.handleToken(v78)::CL,49302
44827 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v14.append(v80)::
44832 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .closeToken::JM,44839
44835 :: CALL :: call :: I :: v85 = v83.length()::JM,44839
44839 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v62 + v85::DD,44870
44840 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .openToken::JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813
44843 :: CALL :: call :: I :: v91 = p1 $text .indexOf(v89, v87)::JM,44736:JM,44804:JM,44869:JM,44647:JM,44648:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:JM,44657:JM,44850:JM,44852:JM,44663:JM,44665
44849 :: PRED :: IF :: Z :: if (v92 > #(-1)) goto 55::CD,44674:CD,44843:CD,44870:CD,44871:CD,44872:CD,44873:CD,44874:CF,44850
44850 :: EXPR :: assign :: I :: v97 = v13.length::CF,44851
44851 :: PRED :: IF :: Z :: if (v93 >= v97) goto 365::CD,44852:CD,44853:CD,44854:JM,44865
44852 :: EXPR :: assign :: I :: v98 = v13.length::DD,44853
44853 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v98 - v93::
44854 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v14.append(v13, v93, v99)::JM,44736:JM,44869:JM,44872:JM,44778:JM,44843
44861 :: CALL :: call :: Ljava/lang/String :: v103 = v14.toString()::JM,44865
44865 :: NORM :: compound :: Ljava/lang/String :: return v103::DD,44643
44866 :: EXPR :: assign :: null :: PHI v34 = v31, v94::DD,44871:CF,44717
44867 :: EXPR :: assign :: null :: PHI v95 = v92, v95::CF,44868:DD,44805:DD,44867
44868 :: EXPR :: assign :: null :: PHI v61 = v41, v57::CF,44869:DD,44743:DD,44750:DD,44785
44869 :: EXPR :: assign :: null :: PHI v62 = v44, v60::DD,44743:DD,44744:DD,44750:DD,44774:DD,44785:DD,44802:DD,44803:DD,44839
44870 :: EXPR :: assign :: null :: PHI v87 = v30, v75, v86::CF,44871:JM,44736:JM,44657:JM,44850:JM,44804:JM,44852:JM,44869:JM,44663:JM,44872:JM,44778:JM,44843:JM,44652:JM,44813:DD,44873
44871 :: EXPR :: assign :: null :: PHI v88 = v94, v34, v34::DD,44874
44872 :: EXPR :: assign :: null :: PHI v92 = v10, v91::CF,44873:DD,44674:DD,44675:DD,44681:DD,44705:DD,44717:DD,44732:DD,44849:DD,44867
44873 :: EXPR :: assign :: null :: PHI v93 = #(0), v87::CF,44874:DD,44681:DD,44717:DD,44851:DD,44853
44874 :: EXPR :: assign :: null :: PHI v94 = #(null), v88::DD,44707:DD,44866:DD,44871:CF,44849
45099 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.getClassLoader()::CD,45106
45103 :: EXPR :: reference :: Ljava/lang/ClassLoader :: v3 = p0 $this .classloader::DD,45106
45106 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 17::CD,45110
45110 :: CALL :: call :: Ljava/lang/ClassLoader :: v9 = v7.getContextClassLoader()::
45123 :: ENTR :: entry :: null :: org.apache.ibatis.io.ResolverUtil.IsA.matches(java.lang.Class)::CE,45124:CD,45128:JM,45137:JM,45132
45124 :: EXIT :: exit :: Z :: org.apache.ibatis.io.ResolverUtil.IsA.matches(java.lang.Class)::JM,41312
45128 :: PRED :: IF :: Z :: if (p1 $type  == #(null)) goto 18::CD,45132:CD,45137:CD,45139
45129 :: EXPR :: reference :: Ljava/lang/Class :: v5 = p0 $this .parent::JM,45137:JM,45132
45132 :: CALL :: call :: Z :: v7 = v5.isAssignableFrom(p1 $type )::JM,45137:JM,45132:JM,45128
45137 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 18::CD,45138:CD,45139
45138 :: NORM :: compound :: Z :: return #(1)::CF,45124
45139 :: NORM :: compound :: Z :: return #(0)::CF,45124
45147 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addCacheRef(java.lang.String,java.lang.String)::CD,45156
45156 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $namespace , p2 $referencedNamespace )::
45188 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addIncompleteCacheRef(org.apache.ibatis.builder.CacheRefResolver)::CD,45196
45193 :: EXPR :: reference :: Ljava/util/Collection :: v4 = p0 $this .incompleteCacheRefs::
45196 :: CALL :: call :: Z :: v6 = v4.add(p1 $incompleteCacheRef )::
45205 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getLongAttribute(java.lang.String)::CD,45210
45210 :: CALL :: call :: Ljava/lang/Long :: v6 = p0 $this .getLongAttribute(p1 $name , #(null))::CL,49428
45220 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getIntAttribute(java.lang.String)::CD,45225
45225 :: CALL :: call :: Ljava/lang/Integer :: v6 = p0 $this .getIntAttribute(p1 $name , #(null))::CL,49460
45235 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getBooleanAttribute(java.lang.String,java.lang.Boolean)::CD,45244
45244 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getProperty(p1 $name )::
45263 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.useNewCache(java.lang.Class,java.lang.Class,java.lang.Long,java.lang.Integer,boolean,boolean,java.util.Properties)::JM,49503:CD,45303:CD,45333:CD,45340
45303 :: CALL :: call :: Lorg/apache/ibatis/mapping/CacheBuilder :: v24 = v18.addDecorator(v22)::CL,49542
45333 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v36 = v34.build()::JM,45344:CL,49623
45340 :: CALL :: call :: V :: v37.addCache(v36)::CL,49738
45344 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .currentCache = v36::
45365 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XPathParser.evalNodes(java.lang.Object,java.lang.String)::CE,45366:CD,45371:CD,45376:CD,45383:CD,45406:CD,45410:CD,45411:CD,45412
45366 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.parsing.XPathParser.evalNodes(java.lang.Object,java.lang.String)::JM,41825
45371 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,45411
45376 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .evaluate(p2 $expression , p1 $root , v7)::JM,45383:CL,33559
45383 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::JM,45410:JM,45406
45385 :: NORM :: declaration :: Lorg/apache/ibatis/parsing/XNode :: v14 = new org.apache.ibatis.parsing.XNode::
45400 :: CALL :: call :: Z :: v20 = v5.add(v14)::
45405 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,45412
45406 :: CALL :: call :: I :: v13 = v10.getLength()::JM,45410:JM,45406
45410 :: PRED :: IF :: Z :: if (v23 < v13) goto 29::CD,45385:JM,33637:JM,33629:CD,45400:CD,45405:CD,45406:CD,45412:CF,45411
45411 :: NORM :: compound :: Ljava/util/List :: return v5::DD,45366
45412 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,45405:DD,45410:JM,45406
45433 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveParameterMode(java.lang.String)::CD,45438:CD,45446:CD,45451:CD,45456
45438 :: PRED :: IF :: Z :: if (p1 $alias  != #(null)) goto 7::CD,45440
45440 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMode :: v6 = valueOf(p1 $alias )::CL,49761
45446 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
45451 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v7)::
45456 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
45471 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.buildParameterMapping(java.lang.Class,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.String,org.apache.ibatis.mapping.ParameterMode,java.lang.Class,java.lang.Integer)::CE,45472:CD,45483:CD,45489:CD,45497:CD,45538:CD,45542
45472 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ParameterMapping :: org.apache.ibatis.builder.MapperBuilderAssistant.buildParameterMapping(java.lang.Class,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.String,org.apache.ibatis.mapping.ParameterMode,java.lang.Class,java.lang.Integer)::
45483 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .applyCurrentNamespace(p5 $resultMap , #(1))::CL,46422
45489 :: CALL :: call :: Ljava/lang/Class :: v15 = p0 $this .resolveParameterJavaType(p1 $parameterType , p2 $property , p3 $javaType , p4 $jdbcType )::CL,49774
45497 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v17 = p0 $this .resolveTypeHandler(v15, p7 $typeHandler )::CL,49841
45538 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMapping :: v32 = v30.build()::JM,45542:CL,50022
45542 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ParameterMapping :: return v32::DD,45472
45566 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.addParameterMap(java.lang.String,java.lang.Class,java.util.List)::CD,45573:CD,45597
45573 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .applyCurrentNamespace(p1 $id , #(0))::CL,46422
45597 :: CALL :: call :: V :: v14.addParameterMap(v13)::CL,50119
45615 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(org.apache.ibatis.parsing.XNode)::CD,45623
45623 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v7 = p0 $this .resultMapElement(p1 $resultMapNode , v5)::CL,50142
45632 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getDatabaseId()::CE,45633:CD,45639
45633 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.session.Configuration.getDatabaseId()::JM,42100:JM,42139:JM,46374
45636 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .databaseId::DD,45639
45639 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,45633
45641 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.sqlElement(java.util.List,java.lang.String)::CD,45647:CD,45693:CD,45697
45647 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $list .iterator()::JM,45697
45652 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,45697
45657 :: CALL :: call :: Ljava/lang/String :: v15 = v12.getStringAttribute(#(databaseId))::CL,33730
45662 :: CALL :: call :: Ljava/lang/String :: v18 = v12.getStringAttribute(#(id))::CL,33730
45670 :: CALL :: call :: Ljava/lang/String :: v21 = v19.applyCurrentNamespace(v18, #(0))::CL,46422
45676 :: CALL :: call :: Z :: v23 = p0 $this .databaseIdMatchesCurrent(v21, v15, p2 $requiredDatabaseId )::JM,45683:CL,50426
45683 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 79::CD,45687:JM,45697
45687 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.put(v21, v12)::CL,50489
45693 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,45697
45697 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,45652:CD,45657:CD,45662:CD,45670:CD,45676:CD,45683:CD,45693:JM,45697
45724 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(java.util.List,java.lang.String)::CD,45730:CD,45761:CD,45765:CD,45769
45730 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $list .iterator()::JM,45769
45735 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,45769
45754 :: CALL :: call :: V :: v13.parseStatementNode()::CL,42279
45761 :: CALL :: call :: V :: v19.addIncompleteStatement(v13)::CL,50537
45765 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,45769
45769 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,45735:JM,27793:JM,27777:JM,27783:CD,45754:CD,45765:JM,45769
45785 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.addResultMap(java.lang.String,java.lang.Class,java.lang.String,org.apache.ibatis.mapping.Discriminator,java.util.List,java.lang.Boolean)::CD,45795:CD,45801:CD,45807:CD,45818:CD,45823:CD,45828:CD,45833:CD,45945:CD,45952:JM,45891
45795 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .applyCurrentNamespace(p1 $id , #(0))::CL,46422
45801 :: CALL :: call :: Ljava/lang/String :: v14 = p0 $this .applyCurrentNamespace(p3 $extend , #(1))::JM,45807:CL,46422
45807 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 221::CD,45811:CD,45845:CD,45850:CD,45851:CD,45859:CD,45864:CD,45887:CD,45891:CD,45892:CD,45923:CD,45957
45811 :: CALL :: call :: Z :: v18 = v16.hasResultMap(v14)::CL,50554
45818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
45823 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v67.append(v14)::
45828 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#('))::
45833 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
45845 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v21 = v19.getResultMap(v14)::CL,50582
45850 :: NORM :: declaration :: Ljava/util/ArrayList :: v22 = new java.util.ArrayList::JM,45922:JM,45891
45851 :: CALL :: call :: Ljava/util/List :: v24 = v21.getResultMappings()::CL,50599
45859 :: CALL :: call :: Z :: v27 = v22.removeAll(p5 $resultMappings )::
45864 :: CALL :: call :: Ljava/util/Iterator :: v29 = p5 $resultMappings .iterator()::JM,45891
45869 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.next()::JM,45891
45880 :: CALL :: call :: Z :: v39 = v36.contains(v37)::JM,45885
45885 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 145::CD,45887:CD,45891:CD,45957
45887 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,45891
45891 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 111::CF,45957:CD,45869:CD,45880:CD,45885:JM,45891
45892 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 215::CD,45893:CD,45918:CD,45922:JM,45891
45893 :: CALL :: call :: Ljava/util/Iterator :: v42 = v22.iterator()::JM,45922
45898 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,45922
45909 :: CALL :: call :: Z :: v52 = v49.contains(v50)::JM,45914
45914 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 203::CD,45915:JM,45922
45915 :: CALL :: call :: V :: v42.remove()::JM,45922
45918 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,45922
45922 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 172::CD,45898:CD,45909:CD,45914:CD,45918:JM,45922:JM,45891
45923 :: CALL :: call :: Z :: v56 = p5 $resultMappings .addAll(v22)::JM,45891
45945 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v63 = v61.build()::CL,50761
45952 :: CALL :: call :: V :: v64.addResultMap(v63)::CL,51403
45957 :: EXPR :: assign :: null :: PHI v40 = #(1), #(0)::DD,45892
46015 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.useCacheRef(java.lang.String)::CD,46033:CD,46040:CD,46045:CD,46050:CD,46055:CD,46072:CD,46077:CD,46082:CD,46087
46027 :: EXPR :: modify :: Z :: p0 $this .unresolvedCacheRef = #(1)::
46033 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v8 = v6.getCache(p1 $namespace )::JM,46064:CL,51438
46040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
46045 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $namespace )::
46050 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(' could be found.))::
46055 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
46064 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .currentCache = v8::
46067 :: EXPR :: modify :: Z :: p0 $this .unresolvedCacheRef = #(0)::
46072 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
46077 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(p1 $namespace )::
46082 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(#(' could be found.))::
46087 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
46112 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.databaseIdMatchesCurrent(java.lang.String,java.lang.String,java.lang.String)::CE,46113:CD,46119:JM,46120:JM,46125:JM,46127
46113 :: EXIT :: exit :: Z :: org.apache.ibatis.builder.xml.XMLStatementBuilder.databaseIdMatchesCurrent(java.lang.String,java.lang.String,java.lang.String)::JM,42309:JM,51854
46119 :: PRED :: IF :: Z :: if (p3 $requiredDatabaseId  == #(null)) goto 15::CD,46120:CD,46125:CD,46127:JM,46119
46120 :: CALL :: call :: Z :: v20 = p3 $requiredDatabaseId .equals(p2 $databaseId )::JM,46119:JM,46120:JM,46125:JM,46127
46125 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,46126:CD,46163
46126 :: NORM :: compound :: Z :: return #(0)::DD,46113
46127 :: PRED :: IF :: Z :: if (p2 $databaseId  == #(null)) goto 21::CD,46128:CD,46132:CD,46141:CD,46147
46128 :: NORM :: compound :: Z :: return #(0)::DD,46113
46132 :: CALL :: call :: Ljava/lang/String :: v10 = v7.applyCurrentNamespace(p1 $id , #(0))::CL,46422
46141 :: CALL :: call :: Z :: v13 = v11.hasStatement(v10, #(0))::JM,46147:CL,51470
46147 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 64::CD,46151:CD,46157:CD,46161:CD,46163
46151 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v16 = v14.getMappedStatement(v10, #(0))::CL,51494
46157 :: CALL :: call :: Ljava/lang/String :: v18 = v16.getDatabaseId()::JM,46161:CL,51519
46161 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 64::CD,46162:CD,46163
46162 :: NORM :: compound :: Z :: return #(0)::DD,46113
46163 :: NORM :: compound :: Z :: return #(1)::DD,46113
46189 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.getLanguageDriver(java.lang.String)::CD,46194:CD,46203
46194 :: PRED :: IF :: Z :: if (p1 $lang  == #(null)) goto 13::CD,46195
46195 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .resolveClass(p1 $lang )::CL,34113
46203 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v10 = v8.getLanguageDriver(v7)::CL,51528
46218 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.StatementType.valueOf(java.lang.String)::CD,46223
46223 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
46231 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveResultSetType(java.lang.String)::CD,46236:CD,46244:CD,46249:CD,46254
46236 :: PRED :: IF :: Z :: if (p1 $alias  != #(null)) goto 7::CD,46238
46238 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultSetType :: v6 = valueOf(p1 $alias )::CL,51578
46244 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
46249 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v7)::
46254 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
46278 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.SqlCommandType.valueOf(java.lang.String)::CE,46279:CD,46283:CD,46288:CD,46289
46279 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.mapping.SqlCommandType.valueOf(java.lang.String)::JM,53676
46283 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,46288
46288 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,46289
46289 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlCommandType :: return v6::DD,46279
46312 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(org.w3c.dom.Node)::CD,46317:CD,46324:CD,46328:CD,46333
46317 :: NORM :: declaration :: Ljava/util/Properties :: v4 = new java.util.Properties::
46324 :: CALL :: call :: Ljava/util/Properties :: v8 = v6.getVariables()::JM,46328:CL,33850
46328 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 29::CD,46329
46329 :: CALL :: call :: V :: v4.putAll(v8)::
46333 :: CALL :: call :: V :: p0 $this .applyIncludes(p1 $source , v4, #(0))::CL,51591
46352 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.processSelectKeyNodes(java.lang.String,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::CD,46362:CD,46370:CD,46374:CD,46390:CD,46398
46362 :: CALL :: call :: Ljava/util/List :: v9 = v6.evalNodes(#(selectKey))::CL,41808
46370 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getDatabaseId()::JM,46374:CL,45632
46374 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 45::CD,46382
46382 :: CALL :: call :: V :: p0 $this .parseSelectKeyNodes(p1 $id , v9, p2 $parameterTypeClass , p3 $langDriver , v16)::CL,51805
46390 :: CALL :: call :: V :: p0 $this .parseSelectKeyNodes(p1 $id , v9, p2 $parameterTypeClass , p3 $langDriver , #(null))::CL,51805
46398 :: CALL :: call :: V :: p0 $this .removeSelectKeyNodes(v9)::CL,51893
46422 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.applyCurrentNamespace(java.lang.String,boolean)::CE,46423:CD,46428:CD,46473:CD,46478:CD,46483:JM,46464:JM,46465:JM,46436:JM,46437:JM,46518:JM,46430
46423 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.builder.MapperBuilderAssistant.applyCurrentNamespace(java.lang.String,boolean)::JM,45807:JM,52447:JM,52734
46428 :: PRED :: IF :: Z :: if (p1 $base  != #(null)) goto 7::CD,46429:CD,46430
46429 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,46423
46430 :: PRED :: IF :: Z :: if (p2 $isReference  == #(0)) goto 22::CD,46431:CD,46436:CD,46438:CD,46442:CD,46450:CD,46455:CD,46459:CD,46464:JM,46465:JM,46437:JM,46518:JM,46428:JM,46430
46431 :: CALL :: call :: Z :: v31 = p1 $base .contains(#(.))::JM,46464:JM,46465:JM,46436:JM,46437:JM,46518:JM,46428:JM,46430
46436 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 85::CF,46492:CD,46437:CD,46496:CD,46504:CD,46509:CD,46514:CD,46518
46437 :: NORM :: compound :: Ljava/lang/String :: return p1 $base ::DD,46423
46438 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,46464
46442 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
46450 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::JM,46464
46455 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,46464
46459 :: CALL :: call :: Z :: v18 = p1 $base .startsWith(v16)::JM,46464:JM,46465:JM,46436:JM,46518:JM,46428:JM,46430
46464 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 55::CD,46465:CD,46492:CD,46496:CD,46504:CD,46509:CD,46514:CD,46518
46465 :: NORM :: compound :: Ljava/lang/String :: return p1 $base ::DD,46423
46473 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v22 = new java.lang.StringBuilder::
46478 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v22.append(p1 $base )::JM,46464:JM,46436:JM,46518:JM,46428:JM,46430
46483 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::JM,46518
46492 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,46518
46496 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v33)::
46504 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(#(.))::JM,46518
46509 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v38.append(p1 $base )::JM,46518:JM,46464:JM,46436:JM,46428:JM,46430
46514 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::JM,46518
46518 :: NORM :: compound :: Ljava/lang/String :: return v42::DD,46423
46541 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.hasKeyGenerator(java.lang.String)::CE,46542:CD,46549:CD,46554
46542 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.hasKeyGenerator(java.lang.String)::JM,42594
46549 :: CALL :: call :: Z :: v6 = v4.containsKey(p1 $id )::JM,46554
46554 :: NORM :: compound :: Z :: return v6::DD,46542
46557 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getKeyGenerator(java.lang.String)::CD,46565
46565 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::CL,51940
46583 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(java.lang.String,org.apache.ibatis.mapping.SqlSource,org.apache.ibatis.mapping.StatementType,org.apache.ibatis.mapping.SqlCommandType,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,org.apache.ibatis.mapping.ResultSetType,boolean,boolean,boolean,org.apache.ibatis.executor.keygen.KeyGenerator,java.lang.String,java.lang.String,java.lang.String,org.apache.ibatis.scripting.LanguageDriver,java.lang.String)::CD,46617:JM,52064:JM,52099:JM,52195:JM,52071:JM,52103:JM,50061:JM,52110:JM,52080:JM,52114:JM,52146:JM,52180:JM,50068:JM,52150:JM,52088:JM,52184:JM,52057:JM,52121:JM,52154:JM,50075:JM,52191:CD,46641:CD,46646:CD,46651:CD,46656:CD,46661:CD,46666:CD,46671:CD,46676:CD,46681:CD,46686:CD,46691:CD,46696:CD,46703:CD,46708:CD,46734:CD,46758:CD,46766:CD,46771:CD,46778:CD,46784:CD,46791
46617 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .applyCurrentNamespace(p1 $id , #(0))::CL,46422
46641 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v35 = v30.resource(v33)::CL,52242
46646 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v37 = v35.fetchSize(p5 $fetchSize )::CL,52258
46651 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v39 = v37.timeout(p6 $timeout )::CL,52274
46656 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v41 = v39.statementType(p3 $statementType )::CL,52290
46661 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v43 = v41.keyGenerator(p15 $keyGenerator )::CL,52306
46666 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v45 = v43.keyProperty(p16 $keyProperty )::CL,52322
46671 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v47 = v45.keyColumn(p17 $keyColumn )::CL,52342
46676 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v49 = v47.databaseId(p18 $databaseId )::CL,52362
46681 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v51 = v49.lang(p19 $lang )::CL,52378
46686 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v53 = v51.resultOrdered(p14 $resultOrdered )::CL,52394
46691 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v55 = v53.resultSets(p20 $resultSets )::CL,52410
46696 :: CALL :: call :: Ljava/util/List :: v57 = p0 $this .getStatementResultMaps(p9 $resultMap , p10 $resultType , v26)::CL,52430
46703 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v59 = v55.resultMaps(v57)::CL,52591
46708 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v61 = v59.resultSetType(p11 $resultSetType )::CL,52657
46734 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v73 = v61.flushCacheRequired(v71)::CL,52673
46758 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v84 = v73.useCache(v82)::CL,52689
46766 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v87 = v84.cache(v85)::CL,52705
46771 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMap :: v89 = p0 $this .getStatementParameterMap(p7 $parameterMap , p8 $parameterType , v26)::JM,46778:CL,52721
46778 :: PRED :: IF :: Z :: if (v89 == #(null)) goto 217::CD,46779
46779 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement$Builder :: v92 = v87.parameterMap(v89)::CL,52829
46784 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v94 = v87.build()::CL,52845
46791 :: CALL :: call :: V :: v95.addMappedStatement(v94)::CL,52951
46904 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource()::CD,46911:CD,46919:CD,46923:CD,46928:CD,46932:CD,46937
46911 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
46916 :: EXPR :: reference :: Ljava/lang/Class :: v7 = p0 $this .type::JM,46919
46919 :: CALL :: call :: Ljava/lang/String :: v9 = v7.getName()::JM,46919
46923 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v4.append(v9)::
46928 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
46932 :: CALL :: call :: Z :: v15 = v3.isResourceLoaded(v13)::JM,46937:CL,37958
46937 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 122::CF,46938:CD,46942:CD,46946:CD,46952:CD,46960:CD,46965:CD,46972:CD,46976:CD,46982:CD,47018
46938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
46939 :: EXPR :: reference :: Ljava/lang/Class :: v18 = p0 $this .type::JM,46942
46942 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getName()::JM,46942
46946 :: CALL :: call :: Ljava/lang/String :: v24 = v20.replace(#(46), #(47))::
46952 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v24)::
46960 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v17.append(#(.xml))::
46965 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
46972 :: CALL :: call :: Ljava/lang/ClassLoader :: v36 = v34.getClassLoader()::
46976 :: CALL :: call :: Ljava/io/InputStream :: v38 = getResourceAsStream(v36, v32)::JM,47018:CL,22274
46982 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 122::JM,27793:JM,27777:JM,41494:JM,27783:JM,37897:JM,53002:CD,47013
47013 :: CALL :: call :: V :: v42.parse()::CL,35268
47018 :: EXPR :: assign :: null :: PHI v41 = v38, #(null)::DD,46982
47044 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseCache()::CD,47052:CD,47057:CD,47058
47052 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v6 = v3.getAnnotation(v4)::JM,47057
47057 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,47058:JM,47059:JM,47063:JM,47065:JM,47073:JM,47077:JM,47080
47058 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 113::CD,47059:CD,47063:CD,47073:CD,47077:CD,47078:CD,47092:CD,47116
47059 :: CALL :: call :: I :: v10 = v7.size()::JM,47059:JM,47063
47063 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 31::CD,47065:CD,47069
47065 :: CALL :: call :: I :: v13 = v7.size()::JM,47065
47069 :: CALL :: call :: Ljava/lang/Integer :: v15 = valueOf(v13)::
47073 :: CALL :: call :: J :: v18 = v7.flushInterval()::JM,47073:JM,47077
47077 :: EXPR :: assign :: Z :: v20 = v18 == #(0 l)::DD,47078
47078 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 56::CD,47080:CD,47084
47080 :: CALL :: call :: J :: v22 = v7.flushInterval()::JM,47080
47084 :: CALL :: call :: Ljava/lang/Long :: v24 = valueOf(v22)::
47092 :: CALL :: call :: Ljava/util/Properties :: v29 = p0 $this .convertToProperties(v27)::CL,53014
47116 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v40 = v30.useNewCache(v32, v34, v25, v16, v36, v38, v29)::CL,45263
47155 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseCacheRef()::CD,47163:CD,47168:CD,47169
47163 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v6 = v3.getAnnotation(v4)::JM,47168
47168 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,47169
47169 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 109::CD,47217
47217 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v26 = v24.useCacheRef(v23)::CL,46015
47269 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(java.lang.reflect.Method)::CD,47279:CD,47284:CD,47291:JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47279 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v7 = p0 $this .getLanguageDriver(p1 $method )::CL,53433
47284 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlSource :: v9 = p0 $this .getSqlSourceFromAnnotations(p1 $method , v5, v7)::JM,47291:CL,53469
47291 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 598::CD,47292:CD,47293:CD,47298:CD,47299:CD,47307:CD,47315:CD,47320:CD,47324:CD,47329:CD,47337:CD,47342:CD,47344:CD,47348:CD,47350:CD,47355:CD,47426:CD,47497:CD,47498:CD,47503:CD,47504:CD,47550:CD,47566:CD,47591
47292 :: EXPR :: assign :: Ljava/lang/Class :: v11 = metadata <Application,Lorg/apache/ibatis/annotations/Options>-><Primordial,Ljava/lang/Class>::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47293 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v13 = p1 $method .getAnnotation(v11)::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47298 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,47426:JM,47456:JM,47460:JM,47461:JM,47465:JM,47466:JM,47475:JM,47479:JM,47480:CF,47299
47299 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
47307 :: CALL :: call :: Ljava/lang/String :: v20 = valueOf(v18)::
47315 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v15.append(#(.))::
47320 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $method .getName()::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47324 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v26)::JM,47370:JM,47503
47329 :: CALL :: call :: Ljava/lang/String :: v30 = v28.toString()::
47337 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlCommandType :: v34 = p0 $this .getSqlCommandType(p1 $method )::JM,47344:JM,47363:JM,47350:JM,47355:JM,47358:CL,53626
47342 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v35 = org.apache.ibatis.mapping.SqlCommandType.SELECT::CF,47344
47344 :: PRED :: IF :: Z :: if (v34 != v35) goto 113::CD,47591
47348 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v41 = org.apache.ibatis.mapping.SqlCommandType.INSERT::JM,47350:JM,47355
47350 :: CALL :: call :: Z :: v43 = v41.equals(v34)::JM,47350:JM,47355:JM,47363:JM,47358
47355 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 158::CD,47356:CD,47358:CD,47363:CD,47364:CD,47365:CD,47370:CD,47371
47356 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v44 = org.apache.ibatis.mapping.SqlCommandType.UPDATE::JM,47363:JM,47358
47358 :: CALL :: call :: Z :: v46 = v44.equals(v34)::JM,47363:JM,47358:JM,47350:JM,47355
47363 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 273::CD,47364:CD,47365:CD,47370:CD,47371
47364 :: EXPR :: assign :: Ljava/lang/Class :: v48 = metadata <Application,Lorg/apache/ibatis/annotations/SelectKey>-><Primordial,Ljava/lang/Class>::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47365 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v50 = p1 $method .getAnnotation(v48)::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47370 :: EXPR :: assign :: Ljava/lang/Object :: v51 = CHECKCAST v50::DD,47371
47371 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 204::CD,47377
47377 :: CALL :: call :: Lorg/apache/ibatis/executor/keygen/KeyGenerator :: v70 = p0 $this .handleSelectKeyAnnotation(v51, v30, v68, v7)::CL,53698
47426 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 422::CD,47456:CD,47460:CD,47475:CD,47479
47456 :: CALL :: call :: I :: v90 = v14.fetchSize()::JM,47456:JM,47460
47460 :: PRED :: IF :: Z :: if (v90 > #(-1)) goto 359::CD,47461:CD,47465:CD,47466:CD,47470
47461 :: CALL :: call :: I :: v93 = v14.fetchSize()::JM,47461:JM,47465
47465 :: PRED :: IF :: Z :: if (v93 != #(-2147483648)) goto 375::CD,47466:CD,47470
47466 :: CALL :: call :: I :: v96 = v14.fetchSize()::JM,47466
47470 :: CALL :: call :: Ljava/lang/Integer :: v98 = valueOf(v96)::
47475 :: CALL :: call :: I :: v101 = v14.timeout()::JM,47475:JM,47479
47479 :: PRED :: IF :: Z :: if (v101 <= #(-1)) goto 402::CD,47480:CD,47484
47480 :: CALL :: call :: I :: v103 = v14.timeout()::JM,47480
47484 :: CALL :: call :: Ljava/lang/Integer :: v105 = valueOf(v103)::
47497 :: EXPR :: assign :: Ljava/lang/Class :: v117 = metadata <Application,Lorg/apache/ibatis/annotations/ResultMap>-><Primordial,Ljava/lang/Class>::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47498 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v119 = p1 $method .getAnnotation(v117)::JM,47298:JM,47365:JM,47320:JM,47498:JM,47370:JM,47293:JM,47503
47503 :: EXPR :: assign :: Ljava/lang/Object :: v120 = CHECKCAST v119::DD,47504:JM,47505:JM,47513
47504 :: PRED :: IF :: Z :: if (v120 == #(null)) goto 524::CD,47505:CD,47509:CD,47513:CD,47535:CD,47536:CD,47541:CD,47607
47505 :: CALL :: call :: [Ljava/lang/String :: v124 = v120.value()::JM,47505:JM,47513
47509 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::JM,47523
47513 :: EXPR :: assign :: I :: v127 = v124.length::DD,47535
47515 :: EXPR :: reference :: Ljava/lang/Object :: v128 = v124[v137]::
47519 :: CALL :: call :: I :: v130 = v125.length()::JM,47523
47523 :: PRED :: IF :: Z :: if (v130 <= #(0)) goto 498::CD,47524
47524 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v125.append(#(,))::
47529 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v125.append(v128)::
47534 :: EXPR :: assign :: Ljava/lang/Object :: v136 = v137 + #(1)::DD,47607
47535 :: PRED :: IF :: Z :: if (v137 < v127) goto 474::CD,47519:CD,47523:CD,47529:CD,47534:CD,47607
47536 :: CALL :: call :: Ljava/lang/String :: v139 = v125.toString()::
47541 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 535::CD,47542
47542 :: CALL :: call :: Ljava/lang/String :: v122 = p0 $this .parseResultMap(p1 $method )::CL,53894
47550 :: CALL :: call :: Ljava/lang/Class :: v143 = p0 $this .getReturnType(p1 $method )::CL,53970
47566 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v150 = v141.addMappedStatement(v30, v9, v113, v34, v111, v112, #(null), v5, v140, v143, v114, v115, v116, #(0), v73, v74, v75, #(null), v7, v148)::CL,46583
47591 :: EXPR :: assign :: null :: PHI v38 = #(1), #(0)::DD,47541
47607 :: EXPR :: assign :: null :: PHI v137 = #(0), v136::DD,47534:DD,47535
47797 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addIncompleteMethod(org.apache.ibatis.builder.annotation.MethodResolver)::CD,47805
47802 :: EXPR :: reference :: Ljava/util/Collection :: v4 = p0 $this .incompleteMethods::
47805 :: CALL :: call :: Z :: v6 = v4.add(p1 $builder )::
47814 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parsePendingMethods()::CD,47821:CD,47826:CD,47843:CD,47847
47821 :: CALL :: call :: Ljava/util/Collection :: v5 = v3.getIncompleteMethods()::JM,47847:CL,54225
47826 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,47847
47831 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,47847
47836 :: CALL :: call :: V :: v13.resolve()::CL,54234
47839 :: CALL :: call :: V :: v7.remove()::JM,47847
47843 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,47847
47847 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 23::CD,47831:CD,47836:CD,47839:CD,47843:JM,47847
48235 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.canAccessPrivateMethods()::CD,48238:CD,48241
48238 :: CALL :: call :: Ljava/lang/SecurityManager :: v3 = getSecurityManager()::JM,48241
48241 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 29::CD,48242:CD,48247
48242 :: NORM :: declaration :: Ljava/lang/reflect/ReflectPermission :: v5 = new java.lang.reflect.ReflectPermission::
48247 :: CALL :: call :: V :: v3.checkPermission(v5)::
48262 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getClassMethods(java.lang.Class)::CE,48263:CD,48267:CD,48306:CD,48307:CD,48311:CD,48315:CD,48316:CD,48321:CD,48322:CD,48325
48263 :: EXIT :: exit :: [Ljava/lang/reflect/Method :: org.apache.ibatis.reflection.Reflector.getClassMethods(java.lang.Class)::JM,43993:JM,44104
48267 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::JM,48321:JM,48315
48272 :: CALL :: call :: [Ljava/lang/reflect/Method :: v8 = v23.getDeclaredMethods()::
48276 :: CALL :: call :: V :: p0 $this .addUniqueMethods(v4, v8)::CL,54690
48281 :: CALL :: call :: [Ljava/lang/Class :: v11 = v23.getInterfaces()::JM,48281:JM,48285
48285 :: EXPR :: assign :: I :: v12 = v11.length::DD,48301
48291 :: CALL :: call :: [Ljava/lang/reflect/Method :: v16 = v14.getMethods()::
48295 :: CALL :: call :: V :: p0 $this .addUniqueMethods(v4, v16)::CL,54690
48300 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,48324:CF,48323
48301 :: PRED :: IF :: Z :: if (v20 < v12) goto 46::CD,48291:CD,48295:CD,48300:CD,48323:CD,48324:JM,48325:JM,48302
48302 :: CALL :: call :: Ljava/lang/Class :: v22 = v24.getSuperclass()::JM,48325:JM,48302
48306 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 16::CD,48272:CD,48276:CD,48281:CD,48285:CD,48301:CD,48302:CD,48323:CD,48324:CD,48325:JM,48321:JM,48315
48307 :: CALL :: call :: Ljava/util/Collection :: v26 = v4.values()::JM,48321:JM,48315
48311 :: CALL :: call :: I :: v28 = v26.size()::JM,48321:JM,48315
48315 :: NORM :: declaration :: [Ljava/lang/reflect/Method :: v29 = new java.lang.reflect.Method[]::JM,48321:JM,48315
48316 :: CALL :: call :: [Ljava/lang/Object :: v31 = v26.toArray(v29)::JM,48321:JM,48315
48321 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::CF,48322
48322 :: NORM :: compound :: [Ljava/lang/reflect/Method :: return v32::DD,48263
48323 :: EXPR :: assign :: null :: PHI v24 = v23, v24::CF,48324:JM,48325:JM,48302:DD,48323
48324 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,48300:DD,48301
48325 :: EXPR :: assign :: null :: PHI v23 = p1 $cls , v22::JM,48281:JM,48285:DD,48306:DD,48323
48358 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.property.PropertyNamer.methodToProperty(java.lang.String)::CD,48362:CD,48367:CD,48393:CD,48398:CD,48403:CD,48408:CD,48417:CD,48421:CD,48474
48362 :: CALL :: call :: Z :: v5 = p1 $name .startsWith(#(is))::JM,48474:JM,48367
48367 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 21::CD,48368:CD,48386:CD,48474:JM,48367
48368 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $name .substring(#(2))::JM,48474:JM,48367
48386 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $name .substring(#(3))::JM,48474:JM,48367
48393 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
48398 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(p1 $name )::JM,48474:JM,48367
48403 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#('.  Didn't start with...))::
48408 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
48417 :: CALL :: call :: I :: v33 = v31.length()::JM,48421
48421 :: PRED :: IF :: Z :: if (v33 == #(1)) goto 101::CF,48437:CD,48422:CD,48426:CD,48438:CD,48444:CD,48446:CD,48451:CD,48459:CD,48464:CD,48469
48422 :: CALL :: call :: I :: v36 = v31.length()::JM,48426
48426 :: PRED :: IF :: Z :: if (v36 <= #(1)) goto 136::CD,48427:CD,48432:CD,48436
48427 :: CALL :: call :: C :: v38 = v31.charAt(#(1))::JM,48436
48432 :: CALL :: call :: Z :: v40 = isUpperCase(v38)::JM,48436
48436 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 136::CF,48437:CD,48438:CD,48444:CD,48446:CD,48451:CD,48459:CD,48464:CD,48469
48437 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
48438 :: CALL :: call :: Ljava/lang/String :: v43 = v31.substring(#(0), #(1))::
48444 :: EXPR :: reference :: Ljava/util/Locale :: v44 = java.util.Locale.ENGLISH::
48446 :: CALL :: call :: Ljava/lang/String :: v46 = v43.toLowerCase(v44)::
48451 :: CALL :: call :: Ljava/lang/String :: v48 = valueOf(v46)::
48459 :: CALL :: call :: Ljava/lang/String :: v51 = v31.substring(#(1))::
48464 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v41.append(v51)::
48469 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
48474 :: EXPR :: assign :: null :: PHI v31 = v30, v27::JM,48421:JM,48426:JM,48436
48505 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addMethodConflict(java.util.Map,java.lang.String,java.lang.reflect.Method)::CD,48512:CD,48517:CD,48518:CD,48529:CD,48535
48512 :: CALL :: call :: Ljava/lang/Object :: v7 = p1 $conflictingMethods .get(p2 $name )::JM,48517
48517 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,48518:DD,48535
48518 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 39::CF,48535:CF,48519:CD,48523
48519 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,48535
48523 :: CALL :: call :: Ljava/lang/Object :: v13 = p1 $conflictingMethods .put(p2 $name , v10)::
48529 :: CALL :: call :: Z :: v16 = v14.add(p3 $method )::
48535 :: EXPR :: assign :: null :: PHI v14 = v8, v10::
48549 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.resolveGetterConflicts(java.util.Map)::CD,48554:CD,48558:CD,48613:CD,48618:CD,48623:CD,48632:CD,48637:CD,48642:CD,48676:CD,48681:CD,48686:CD,48695:CD,48700:CD,48705:CD,48724:CD,48728:JM,48567
48554 :: CALL :: call :: Ljava/util/Set :: v5 = p1 $conflictingGetters .entrySet()::JM,48567:JM,48728
48558 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,48567:JM,48728
48563 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,48567:JM,48728
48567 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,48572:JM,48577
48568 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.getKey()::JM,48572
48572 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,48577
48573 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.getValue()::JM,48577
48577 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,48718
48578 :: CALL :: call :: Ljava/util/Iterator :: v22 = v20.iterator()::JM,48718
48583 :: CALL :: call :: Ljava/lang/Object :: v26 = v22.next()::JM,48718
48613 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v68 = new java.lang.StringBuilder::
48618 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v68.append(v17)::
48623 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v71.append(#( in class ))::
48632 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v75)::
48637 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(#(. This breaks the Jav...))::
48642 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
48676 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
48681 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v17)::
48686 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( in class ))::
48695 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v58)::
48700 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(. This breaks the Jav...))::
48705 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::
48714 :: CALL :: call :: Z :: v24 = v22.hasNext()::JM,48718
48718 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 60::CD,48583:CD,48714:JM,48718
48719 :: CALL :: call :: V :: p0 $this .addGetMethod(v17, v46)::CL,54766
48724 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,48567:JM,48728
48728 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 16::CD,48563:CD,48567:CD,48568:CD,48572:CD,48573:CD,48577:CD,48578:CD,48714:CD,48718:CD,48719:CD,48724:JM,48728
48776 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.resolveSetterConflicts(java.util.Map)::CD,48781:CD,48785:CD,48856:CD,48860:CD,48862
48781 :: CALL :: call :: Ljava/util/Set :: v5 = p1 $conflictingSetters .keySet()::JM,48860
48785 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,48860
48790 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,48860
48795 :: CALL :: call :: Ljava/lang/Object :: v15 = p1 $conflictingSetters .get(v13)::JM,48800
48800 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,48848:JM,48819
48804 :: CALL :: call :: Ljava/lang/Object :: v19 = v17.get(v13)::JM,48809
48809 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,48833:JM,48828:JM,48848:JM,48819
48810 :: CALL :: call :: Ljava/util/Iterator :: v23 = v16.iterator()::JM,48848:JM,48819
48815 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,48848:JM,48819
48819 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::
48820 :: CALL :: call :: [Ljava/lang/Class :: v30 = v28.getParameterTypes()::
48824 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v30[#(0)]::JM,48833:JM,48828
48828 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,48833:JM,48828
48833 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 110::CD,48835:CD,48844:CD,48848:CD,48864
48835 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 138::CD,48836:CD,48864
48836 :: CALL :: call :: Ljava/lang/reflect/Method :: v35 = p0 $this .pickBetterSetter(v38, v28, v13)::CL,54831
48844 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,48848:JM,48819
48848 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 72::CD,48815:CD,48819:CD,48820:CD,48828:CD,48833:JM,48848
48851 :: CALL :: call :: V :: p0 $this .addSetMethod(v13, v40)::CL,54954
48856 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,48860
48860 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 16::CD,48790:CD,48795:CD,48800:CD,48804:CD,48809:CD,48810:CD,48844:CD,48848:CD,48851:CD,48856:CD,48864:JM,48860
48862 :: EXPR :: assign :: Ljava/lang/Exception :: v36 = catch <exc>::DD,48864
48864 :: EXPR :: assign :: null :: PHI v39 = #(null), v39, v39, v36::JM,48848:JM,48819:DD,48835:DD,48864
48932 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addSetField(java.lang.reflect.Field)::CD,48941:CD,48946
48941 :: CALL :: call :: Z :: v7 = p0 $this .isValidPropertyName(v5)::JM,48946:CL,55067
48946 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 61::JM,55112:CD,48959:CD,48968:CD,48980:CD,48985
48959 :: CALL :: call :: Ljava/lang/Object :: v15 = v9.put(v11, v12)::
48968 :: CALL :: call :: Ljava/lang/reflect/Type :: v18 = resolveFieldType(p1 $field , v16)::CL,55119
48980 :: CALL :: call :: Ljava/lang/Class :: v23 = p0 $this .typeToClass(v18)::CL,55146
48985 :: CALL :: call :: Ljava/lang/Object :: v25 = v19.put(v21, v23)::
49008 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addGetField(java.lang.reflect.Field)::CD,49017:CD,49022
49017 :: CALL :: call :: Z :: v7 = p0 $this .isValidPropertyName(v5)::JM,49022:CL,55067
49022 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 61::JM,55238:CD,49035:CD,49044:CD,49056:CD,49061
49035 :: CALL :: call :: Ljava/lang/Object :: v15 = v9.put(v11, v12)::
49044 :: CALL :: call :: Ljava/lang/reflect/Type :: v18 = resolveFieldType(p1 $field , v16)::CL,55119
49056 :: CALL :: call :: Ljava/lang/Class :: v23 = p0 $this .typeToClass(v18)::CL,55146
49061 :: CALL :: call :: Ljava/lang/Object :: v25 = v19.put(v21, v23)::
49268 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getPropertyValue(#(org.apache.ibatis.par...), #(false))::CL,55466
49281 :: CALL :: call :: Ljava/lang/String :: v14 = p0 $this .getPropertyValue(#(org.apache.ibatis.par...), #(:))::CL,55466
49302 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.PropertyParser.VariableTokenHandler.handleToken(java.lang.String)::CE,49303:CD,49310:JM,49393:JM,49337:JM,49323:JM,49391
49303 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.PropertyParser.VariableTokenHandler.handleToken(java.lang.String)::
49307 :: EXPR :: reference :: Ljava/util/Properties :: v4 = p0 $this .variables::DD,49310
49310 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 90::CF,49372:CD,49314:CD,49377:CD,49382:CD,49387:CD,49391
49311 :: EXPR :: reference :: Z :: v6 = p0 $this .enableDefaultValue::DD,49314
49314 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 71::CD,49318:CD,49323:CD,49343:CD,49357:CD,49362:CD,49393
49315 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .defaultValueSeparator::JM,49393:JM,49337:JM,49323:JM,49391
49318 :: CALL :: call :: I :: v10 = p1 $content .indexOf(v8)::JM,49393:JM,49337:JM,49323:JM,49391
49323 :: PRED :: IF :: Z :: if (v10 < #(0)) goto 56::CD,49324:CD,49333:CD,49337:CD,49338:CD,49393:JM,49323:JM,49391
49324 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $content .substring(#(0), v10)::JM,49393:JM,49337:JM,49323:JM,49391
49330 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .defaultValueSeparator::JM,49337
49333 :: CALL :: call :: I :: v15 = v13.length()::JM,49337
49337 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v10 + v15::JM,49393:JM,49337:JM,49323:JM,49391
49338 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $content .substring(v16)::JM,49393:JM,49337:JM,49323:JM,49391
49343 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 71::CD,49347:CD,49353:CD,49357:CD,49362
49347 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getProperty(v19, v20)::JM,49353
49353 :: NORM :: compound :: Ljava/lang/String :: return v40::DD,49303
49357 :: CALL :: call :: Z :: v24 = v22.containsKey(v21)::JM,49362
49362 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CF,49372:CD,49366:CD,49371:CD,49377:CD,49382:CD,49387:CD,49391
49366 :: CALL :: call :: Ljava/lang/String :: v37 = v35.getProperty(v21)::JM,49371
49371 :: NORM :: compound :: Ljava/lang/String :: return v37::DD,49303
49372 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::JM,49391
49377 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $content )::JM,49391:JM,49393:JM,49337:JM,49323
49382 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#(}))::JM,49391
49387 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,49391
49391 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,49303
49393 :: EXPR :: assign :: null :: PHI v20 = #(null), v18::DD,49343
49428 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getLongAttribute(java.lang.String,java.lang.Long)::CD,49437:CD,49442
49437 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getProperty(p1 $name )::JM,49442
49442 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 16::CD,49444:CD,49448
49444 :: CALL :: call :: J :: v10 = parseLong(v7)::
49448 :: CALL :: call :: Ljava/lang/Long :: v12 = valueOf(v10)::
49460 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getIntAttribute(java.lang.String,java.lang.Integer)::CD,49469:CD,49474
49469 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getProperty(p1 $name )::JM,49474
49474 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 16::CD,49476:CD,49480
49476 :: CALL :: call :: I :: v10 = parseInt(v7)::
49480 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
49503 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
49542 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.addDecorator(java.lang.Class)::CD,49547
49547 :: PRED :: IF :: Z :: if (p1 $decorator  == #(null)) goto 16::CD,49551
49548 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .decorators::
49551 :: CALL :: call :: Z :: v7 = v5.add(p1 $decorator )::JM,49547
49623 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.build()::CE,49624:CD,49627:CD,49636:CD,49642:CD,49646:CD,49647:CD,49651:CD,49656:CD,49707:CD,49709
49624 :: EXIT :: exit :: Lorg/apache/ibatis/cache/Cache :: org.apache.ibatis.mapping.CacheBuilder.build()::JM,45344
49627 :: CALL :: call :: V :: p0 $this .setDefaultImplementations()::CL,55555
49636 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v7 = p0 $this .newBaseCacheInstance(v4, v5)::JM,49696:JM,49651:JM,49701:JM,49656:JM,49692:JM,49709:JM,49647:CL,55592
49642 :: CALL :: call :: V :: p0 $this .setCacheProperties(v7)::CL,55655
49646 :: EXPR :: assign :: Ljava/lang/Class :: v9 = metadata <Application,Lorg/apache/ibatis/cache/impl/PerpetualCache>-><Primordial,Ljava/lang/Class>::JM,49651:JM,49656:JM,49696:JM,49701:JM,49692:JM,49709:JM,49647
49647 :: CALL :: call :: Ljava/lang/Class :: v11 = v7.getClass()::JM,49696:JM,49651:JM,49701:JM,49656:JM,49692:JM,49709:JM,49647
49651 :: CALL :: call :: Z :: v13 = v9.equals(v11)::JM,49651:JM,49656:JM,49696:JM,49701
49656 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 87::CF,49691:CD,49660:CD,49680:CD,49684:CD,49685:CD,49692:CD,49696:CD,49701:CD,49709
49657 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .decorators::JM,49684
49660 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,49684
49665 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,49684
49670 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v31 = p0 $this .newCacheDecoratorInstance(v29, v33)::CL,55989
49676 :: CALL :: call :: V :: p0 $this .setCacheProperties(v31)::CL,55655
49680 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,49684
49684 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 48::CD,49665:CD,49670:CD,49676:CD,49680:JM,49684
49685 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v35 = p0 $this .setStandardDecorators(v33)::JM,49709:CL,56052
49691 :: EXPR :: assign :: Ljava/lang/Class :: v15 = metadata <Application,Lorg/apache/ibatis/cache/decorators/LoggingCache>-><Primordial,Ljava/lang/Class>::JM,49696:JM,49701:JM,49651:JM,49656:JM,49692:JM,49709:JM,49647
49692 :: CALL :: call :: Ljava/lang/Class :: v17 = v7.getClass()::JM,49696:JM,49651:JM,49701:JM,49656:JM,49692:JM,49709:JM,49647
49696 :: CALL :: call :: Z :: v19 = v15.isAssignableFrom(v17)::JM,49696:JM,49701:JM,49651:JM,49656
49701 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 109::CF,49709:CF,49702:JM,56200:JM,56207
49702 :: NORM :: declaration :: Lorg/apache/ibatis/cache/decorators/LoggingCache :: v20 = new org.apache.ibatis.cache.decorators.LoggingCache::DD,49709
49707 :: NORM :: compound :: Lorg/apache/ibatis/cache/Cache :: return v36::DD,49624
49709 :: EXPR :: assign :: null :: PHI v36 = v35, v7, v20::CF,49707
49738 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addCache(org.apache.ibatis.cache.Cache)::CD,49750
49750 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $cache )::CL,50489
49761 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMode.valueOf(java.lang.String)::CD,49766
49766 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
49774 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.resolveParameterJavaType(java.lang.Class,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType)::CD,49782:JM,49794:JM,49799:JM,49785:JM,49790
49782 :: PRED :: IF :: Z :: if (p3 $javaType  != #(null)) goto 60::CD,49783:CD,49785:CD,49790
49783 :: EXPR :: reference :: Lorg/apache/ibatis/type/JdbcType :: v8 = org.apache.ibatis.type.JdbcType.CURSOR::JM,49785:JM,49790
49785 :: CALL :: call :: Z :: v10 = v8.equals(p4 $jdbcType )::JM,49785:JM,49790
49790 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 22::CF,49793:CD,49794:CD,49799
49793 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Ljava/util/Map>-><Primordial,Ljava/lang/Class>::JM,49794:JM,49799
49794 :: CALL :: call :: Z :: v14 = v12.isAssignableFrom(p1 $resultType )::JM,49794:JM,49799
49799 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 41::CD,49809:CD,49814
49809 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v19 = forClass(p1 $resultType , v17)::CL,26950
49814 :: CALL :: call :: Ljava/lang/Class :: v21 = v19.getGetterType(p2 $property )::CL,56272
49841 :: ENTR :: entry :: null :: org.apache.ibatis.builder.BaseBuilder.resolveTypeHandler(java.lang.Class,java.lang.Class)::CD,49847
49847 :: PRED :: IF :: Z :: if (p2 $typeHandlerType  != #(null)) goto 7::CD,49852:CD,49857
49852 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v8 = v6.getMappingTypeHandler(p2 $typeHandlerType )::JM,49857:CL,56320
49857 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 30::CD,49861
49861 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v11 = v9.getInstance(p1 $javaType , p2 $typeHandlerType )::CL,37656
50022 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.Builder.build()::CE,50023:CD,50026:CD,50029:CD,50035
50023 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ParameterMapping :: org.apache.ibatis.mapping.ParameterMapping.Builder.build()::JM,45542
50026 :: CALL :: call :: V :: p0 $this .resolveTypeHandler()::CL,56435
50029 :: CALL :: call :: V :: p0 $this .validate()::CL,56506
50032 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ParameterMapping :: v5 = p0 $this .parameterMapping::DD,50035
50035 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ParameterMapping :: return v5::DD,50023
50061 :: CALL :: call :: V :: access$1(v11, p2 $id )::CL,56664
50068 :: CALL :: call :: V :: access$2(v13, p3 $type )::CL,56675
50075 :: CALL :: call :: V :: access$3(v15, p4 $parameterMappings )::CL,56686
50090 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMap.Builder.build()::CE,50091:CD,50100:CD,50104:CD,50108:CD,50115
50091 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ParameterMap :: org.apache.ibatis.mapping.ParameterMap.Builder.build()::JM,52805
50100 :: CALL :: call :: Ljava/util/List :: v6 = access$5(v4)::JM,50104:CL,56697
50104 :: CALL :: call :: Ljava/util/List :: v8 = unmodifiableList(v6)::JM,50104
50108 :: CALL :: call :: V :: access$3(v3, v8)::CL,56686
50112 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ParameterMap :: v10 = p0 $this .parameterMap::DD,50115
50115 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ParameterMap :: return v10::DD,50091
50119 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addParameterMap(org.apache.ibatis.mapping.ParameterMap)::CD,50131
50131 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $pm )::CL,50489
50142 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(org.apache.ibatis.parsing.XNode,java.util.List)::CD,50148:CD,50151:CD,50156:CD,50160:CD,50165:CD,50174:CD,50178:CD,50184:CD,50189:CD,50195:CD,50201:CD,50207:CD,50212:CD,50217:CD,50222:CD,50226:CD,50231:CD,50235:CD,50313:CD,50317:CD,50332:CD,50340
50148 :: CALL :: call :: Lorg/apache/ibatis/executor/ErrorContext :: v6 = instance()::CL,20134
50151 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
50156 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $resultMapNode .getValueBasedIdentifier()::CL,56715
50160 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::
50165 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
50174 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $resultMapNode .getValueBasedIdentifier()::CL,56715
50178 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $resultMapNode .getStringAttribute(#(id), v20)::CL,36851
50184 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $resultMapNode .getStringAttribute(#(javaType))::CL,33730
50189 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $resultMapNode .getStringAttribute(#(resultType), v28)::CL,36851
50195 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $resultMapNode .getStringAttribute(#(ofType), v30)::CL,36851
50201 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $resultMapNode .getStringAttribute(#(type), v32)::CL,36851
50207 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $resultMapNode .getStringAttribute(#(extends))::CL,33730
50212 :: CALL :: call :: Ljava/lang/Boolean :: v40 = p1 $resultMapNode .getBooleanAttribute(#(autoMapping))::CL,56851
50217 :: CALL :: call :: Ljava/lang/Class :: v42 = p0 $this .resolveClass(v34)::CL,34113
50222 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::
50226 :: CALL :: call :: Z :: v47 = v44.addAll(p2 $additionalResultMappings )::
50231 :: CALL :: call :: Ljava/util/List :: v49 = p1 $resultMapNode .getChildren()::JM,50317:CL,33973
50235 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,50317
50240 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,50317
50245 :: CALL :: call :: Ljava/lang/String :: v60 = v57.getName()::JM,50254:CL,34052
50249 :: CALL :: call :: Z :: v62 = #(constructor).equals(v60)::JM,50254
50254 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 178::CD,50255:CD,50262:CD,50266:CD,50271
50255 :: CALL :: call :: V :: p0 $this .processConstructorElement(v57, v42, v44)::CL,56866
50262 :: CALL :: call :: Ljava/lang/String :: v66 = v57.getName()::JM,50271:CL,34052
50266 :: CALL :: call :: Z :: v68 = #(discriminator).equals(v66)::JM,50271
50271 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 202::CF,50280:CD,50272:CD,50284:CD,50288:CD,50293:CD,50301:CD,50308
50272 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v70 = p0 $this .processDiscriminatorElement(v57, v42, v44)::CL,56958
50280 :: NORM :: declaration :: Ljava/util/ArrayList :: v72 = new java.util.ArrayList::
50284 :: CALL :: call :: Ljava/lang/String :: v75 = v57.getName()::JM,50293:CL,34052
50288 :: CALL :: call :: Z :: v77 = #(id).equals(v75)::JM,50293
50293 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 245::CD,50294:CD,50296
50294 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v78 = org.apache.ibatis.mapping.ResultFlag.ID::
50296 :: CALL :: call :: Z :: v80 = v72.add(v78)::
50301 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v82 = p0 $this .buildResultMappingFromContext(v57, v42, v72)::CL,57109
50308 :: CALL :: call :: Z :: v84 = v44.add(v82)::
50313 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,50317
50317 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,50240:CD,50245:CD,50249:CD,50254:CD,50313:JM,50317
50332 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v89 = v85.resolve()::CL,42200
50340 :: CALL :: call :: V :: v91.addIncompleteResultMap(v85)::CL,57377
50426 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.databaseIdMatchesCurrent(java.lang.String,java.lang.String,java.lang.String)::CE,50427:CD,50433:JM,50434:JM,50439:JM,50441
50427 :: EXIT :: exit :: Z :: org.apache.ibatis.builder.xml.XMLMapperBuilder.databaseIdMatchesCurrent(java.lang.String,java.lang.String,java.lang.String)::JM,45683
50433 :: PRED :: IF :: Z :: if (p3 $requiredDatabaseId  == #(null)) goto 15::CD,50434:CD,50439:CD,50441:JM,50433
50434 :: CALL :: call :: Z :: v19 = p3 $requiredDatabaseId .equals(p2 $databaseId )::JM,50433:JM,50434:JM,50439:JM,50441
50439 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 62::CD,50440:CD,50468
50440 :: NORM :: compound :: Z :: return #(0)::DD,50427
50441 :: PRED :: IF :: Z :: if (p2 $databaseId  == #(null)) goto 21::CD,50442:CD,50446:CD,50451
50442 :: NORM :: compound :: Z :: return #(0)::DD,50427
50446 :: CALL :: call :: Z :: v9 = v7.containsKey(p1 $id )::JM,50451
50451 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 62::CD,50455:CD,50461:CD,50466:CD,50468
50455 :: CALL :: call :: Ljava/lang/Object :: v13 = v11.get(p1 $id )::CL,51940
50461 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getStringAttribute(#(databaseId))::JM,50466:CL,33730
50466 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 62::CD,50467:CD,50468
50467 :: NORM :: compound :: Z :: return #(0)::DD,50427
50468 :: NORM :: compound :: Z :: return #(1)::DD,50427
50489 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.StrictMap.put(java.lang.Object,java.lang.Object)::CD,50497
50497 :: CALL :: call :: Ljava/lang/Object :: v8 = p0 $null .put(v5, v6)::CL,57394
50537 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addIncompleteStatement(org.apache.ibatis.builder.xml.XMLStatementBuilder)::CD,50545
50542 :: EXPR :: reference :: Ljava/util/Collection :: v4 = p0 $this .incompleteStatements::
50545 :: CALL :: call :: Z :: v6 = v4.add(p1 $incompleteStatement )::
50554 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.hasResultMap(java.lang.String)::CE,50555:CD,50562:CD,50567
50555 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.hasResultMap(java.lang.String)::JM,58132
50562 :: CALL :: call :: Z :: v6 = v4.containsKey(p1 $id )::JM,50567
50567 :: NORM :: compound :: Z :: return v6::DD,50555
50582 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getResultMap(java.lang.String)::CE,50583:CD,50590:CD,50595:CD,50596
50583 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ResultMap :: org.apache.ibatis.session.Configuration.getResultMap(java.lang.String)::
50590 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,50595:CL,51940
50595 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,50596
50596 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ResultMap :: return v7::DD,50583
50599 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.getResultMappings()::CE,50600:CD,50606
50600 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMap.getResultMappings()::
50603 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .resultMappings::DD,50606
50606 :: NORM :: compound :: Ljava/util/List :: return v3::CF,50600
50761 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.build()::CE,50762:CD,50773:CD,50782:CD,50793:CD,50804:CD,50815:CD,50826:CD,50834:CD,50841:CD,50845:CD,51067:CD,51071:CD,51075:CD,51079:CD,51083:CD,51103:CD,51107:CD,51115:CD,51123:CD,51127:CD,51132:CD,51140:CD,51144:CD,51148:CD,51153:CD,51158:CD,51163:CD,51168:CD,51200:CD,51204:CD,51218:CD,51222:CD,51236:CD,51240:CD,51254:CD,51258:CD,51287
50762 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ResultMap :: org.apache.ibatis.mapping.ResultMap.Builder.build()::
50773 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v218 = new java.lang.IllegalArgumentException::
50782 :: NORM :: declaration :: Ljava/util/HashSet :: v8 = new java.util.HashSet::
50793 :: NORM :: declaration :: Ljava/util/HashSet :: v12 = new java.util.HashSet::
50804 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
50815 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
50826 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::
50834 :: NORM :: declaration :: Ljava/util/ArrayList :: v27 = new java.util.ArrayList::JM,51107
50841 :: CALL :: call :: Ljava/util/List :: v31 = access$14(v29)::JM,50854:JM,51071:CL,57734
50845 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,50854:JM,51071
50850 :: CALL :: call :: Ljava/lang/Object :: v38 = v33.next()::JM,50854:JM,51071
50854 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::
50902 :: CALL :: call :: Ljava/lang/String :: v60 = v39.getColumn()::JM,50906:CL,57810
50906 :: PRED :: IF :: Z :: if (v60 == #(null)) goto 225::CD,50914:CD,50916:CD,50921:CD,50927:CD,50931
50914 :: EXPR :: reference :: Ljava/util/Locale :: v85 = java.util.Locale.ENGLISH::
50916 :: CALL :: call :: Ljava/lang/String :: v87 = v60.toUpperCase(v85)::
50921 :: CALL :: call :: Z :: v89 = v84.add(v87)::
50927 :: CALL :: call :: Z :: v62 = v39.isCompositeResult()::JM,50931:CL,57828
50931 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 301::CD,50932:CD,50936:CD,50970:CD,50974
50932 :: CALL :: call :: Ljava/util/List :: v64 = v39.getComposites()::JM,50974:CL,57852
50936 :: CALL :: call :: Ljava/util/Iterator :: v66 = v64.iterator()::JM,50974
50941 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.next()::JM,50974
50946 :: CALL :: call :: Ljava/lang/String :: v73 = v71.getColumn()::JM,50950:CL,57810
50950 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 292::CD,50958:CD,50960:CD,50965:JM,50974
50958 :: EXPR :: reference :: Ljava/util/Locale :: v77 = java.util.Locale.ENGLISH::
50960 :: CALL :: call :: Ljava/lang/String :: v79 = v73.toUpperCase(v77)::
50965 :: CALL :: call :: Z :: v81 = v76.add(v79)::
50970 :: CALL :: call :: Z :: v68 = v66.hasNext()::JM,50974
50974 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 247::CD,50941:CD,50946:CD,50950:CD,50970:JM,50974
50975 :: CALL :: call :: Ljava/lang/String :: v91 = v39.getProperty()::JM,50979:CL,57861
50979 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 327::CD,50987
50987 :: CALL :: call :: Z :: v96 = v94.add(v91)::
50998 :: CALL :: call :: Z :: v101 = v98.contains(v99)::JM,51003
51003 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 377::CD,51007:CD,51011:CD,51016:CD,51020:CD,51034:CD,51038
51007 :: CALL :: call :: Ljava/util/List :: v104 = access$21(v102)::CL,57879
51011 :: CALL :: call :: Z :: v106 = v104.add(v39)::
51016 :: CALL :: call :: Ljava/lang/String :: v108 = v39.getProperty()::JM,51020:CL,57861
51020 :: PRED :: IF :: Z :: if (v108 == #(null)) goto 391::CD,51021:CD,51025
51021 :: CALL :: call :: Ljava/lang/String :: v110 = v39.getProperty()::CL,57861
51025 :: CALL :: call :: Z :: v112 = v27.add(v110)::
51034 :: CALL :: call :: Ljava/util/List :: v115 = access$22(v113)::CL,57888
51038 :: CALL :: call :: Z :: v117 = v115.add(v39)::
51049 :: CALL :: call :: Z :: v122 = v119.contains(v120)::JM,51054
51054 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 420::CD,51058:CD,51062:JM,50854:JM,51071
51058 :: CALL :: call :: Ljava/util/List :: v125 = access$23(v123)::CL,57897
51062 :: CALL :: call :: Z :: v127 = v125.add(v39)::
51067 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,50854:JM,51071
51071 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 115::CD,50850:CD,50854:CD,50902:CD,50906:CD,50975:CD,50979:CD,50998:CD,51003:CD,51049:CD,51054:CD,51067:JM,51071
51075 :: CALL :: call :: Ljava/util/List :: v130 = access$23(v128)::JM,51083:CL,57897
51079 :: CALL :: call :: Z :: v132 = v130.isEmpty()::JM,51083
51083 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 464::CD,51087:CD,51094:CD,51098:JM,51107
51087 :: CALL :: call :: Ljava/util/List :: v135 = access$23(v133)::CL,57897
51094 :: CALL :: call :: Ljava/util/List :: v138 = access$14(v136)::CL,57734
51098 :: CALL :: call :: Z :: v140 = v135.addAll(v138)::
51103 :: CALL :: call :: Z :: v142 = v27.isEmpty()::JM,51107
51107 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 566::CD,51108:CD,51190
51108 :: CALL :: call :: Ljava/util/List :: v144 = p0 $this .argNamesOfMatchingConstructor(v27)::CL,57906
51115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v189 = new java.lang.StringBuilder::
51123 :: CALL :: call :: Ljava/lang/String :: v194 = access$8(v192)::CL,57670
51127 :: CALL :: call :: Ljava/lang/StringBuilder :: v196 = v189.append(v194)::
51132 :: CALL :: call :: Ljava/lang/StringBuilder :: v199 = v196.append(#('. Failed to find a c...))::
51140 :: CALL :: call :: Ljava/lang/Class :: v202 = v200.getType()::CL,57994
51144 :: CALL :: call :: Ljava/lang/String :: v204 = v202.getName()::
51148 :: CALL :: call :: Ljava/lang/StringBuilder :: v206 = v199.append(v204)::
51153 :: CALL :: call :: Ljava/lang/StringBuilder :: v209 = v206.append(#(' by arg names ))::
51158 :: CALL :: call :: Ljava/lang/StringBuilder :: v211 = v209.append(v27)::
51163 :: CALL :: call :: Ljava/lang/StringBuilder :: v214 = v211.append(#(. There might be more...))::
51168 :: CALL :: call :: Ljava/lang/String :: v216 = v214.toString()::
51190 :: CALL :: call :: V :: sort(v147, v148)::
51200 :: CALL :: call :: Ljava/util/List :: v155 = access$14(v153)::JM,51204:CL,57734
51204 :: CALL :: call :: Ljava/util/List :: v157 = unmodifiableList(v155)::JM,51204
51218 :: CALL :: call :: Ljava/util/List :: v162 = access$23(v160)::JM,51222:CL,57897
51222 :: CALL :: call :: Ljava/util/List :: v164 = unmodifiableList(v162)::JM,51222
51236 :: CALL :: call :: Ljava/util/List :: v169 = access$21(v167)::JM,51240:CL,57879
51240 :: CALL :: call :: Ljava/util/List :: v171 = unmodifiableList(v169)::JM,51240
51254 :: CALL :: call :: Ljava/util/List :: v176 = access$22(v174)::JM,51258:CL,57888
51258 :: CALL :: call :: Ljava/util/List :: v178 = unmodifiableList(v176)::JM,51258
51284 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultMap :: v187 = p0 $this .resultMap::DD,51287
51287 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ResultMap :: return v187::DD,50762
51403 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addResultMap(org.apache.ibatis.mapping.ResultMap)::CD,51415:CD,51421:CD,51425
51415 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $rm )::CL,50489
51421 :: CALL :: call :: V :: p0 $this .checkLocallyForDiscriminatedNestedResultMaps(p1 $rm )::CL,58085
51425 :: CALL :: call :: V :: p0 $this .checkGloballyForDiscriminatedNestedResultMaps(p1 $rm )::CL,58178
51438 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getCache(java.lang.String)::CE,51439:CD,51446:CD,51451:CD,51452
51439 :: EXIT :: exit :: Lorg/apache/ibatis/cache/Cache :: org.apache.ibatis.session.Configuration.getCache(java.lang.String)::JM,46064
51446 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,51451:CL,51940
51451 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,51452
51452 :: NORM :: compound :: Lorg/apache/ibatis/cache/Cache :: return v7::DD,51439
51470 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.hasStatement(java.lang.String,boolean)::CE,51471:CD,51476:CD,51483:CD,51488
51471 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.hasStatement(java.lang.String,boolean)::JM,46147
51476 :: PRED :: IF :: Z :: if (p2 $validateIncompleteStatements  == #(0)) goto 9::CD,51477
51477 :: CALL :: call :: V :: p0 $this .buildAllStatements()::CL,58277
51483 :: CALL :: call :: Z :: v9 = v7.containsKey(p1 $statementName )::JM,51488
51488 :: NORM :: compound :: Z :: return v9::DD,51471
51494 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getMappedStatement(java.lang.String,boolean)::CD,51500:CD,51507
51500 :: PRED :: IF :: Z :: if (p2 $validateIncompleteStatements  == #(0)) goto 9::CD,51501
51501 :: CALL :: call :: V :: p0 $this .buildAllStatements()::CL,58277
51507 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(p1 $id )::CL,51940
51519 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.getDatabaseId()::CE,51520:CD,51526
51520 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.MappedStatement.getDatabaseId()::JM,46161
51523 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .databaseId::DD,51526
51526 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,51520
51528 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.getLanguageDriver(java.lang.Class)::CD,51533:CD,51564
51533 :: PRED :: IF :: Z :: if (p1 $langClass  == #(null)) goto 19::CD,51541
51541 :: CALL :: call :: V :: v12.register(p1 $langClass )::CL,33469
51564 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v19 = v17.getDriver(v14)::CL,58451
51578 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultSetType.valueOf(java.lang.String)::CD,51583
51583 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::
51591 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(org.w3c.dom.Node,java.util.Properties,boolean)::CD,51598:CD,51602:CD,51607:JM,51696:JM,51729:JM,51713:JM,51717:JM,51719:JM,51720:JM,51691:JM,51724:JM,51695
51598 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $source .getNodeName()::JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51602 :: CALL :: call :: Z :: v10 = v7.equals(#(include))::JM,51729:JM,51713:JM,51602:JM,51717:JM,51607:JM,51724:JM,51695
51607 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 146::CD,51614:CD,51620:CD,51626:CD,51691:CD,51695:JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51724:JM,51598
51614 :: CALL :: call :: Lorg/w3c/dom/Node :: v38 = p0 $this .findSqlFragment(v36, p2 $variablesContext )::CL,58490
51620 :: CALL :: call :: Ljava/util/Properties :: v40 = p0 $this .getVariablesContext(p1 $source , p2 $variablesContext )::CL,58572
51626 :: CALL :: call :: V :: p0 $this .applyIncludes(v38, v40, #(1))::CL,51591
51691 :: CALL :: call :: S :: v13 = p1 $source .getNodeType()::JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51695 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 203::CD,51696:CD,51713:CD,51717:CD,51719:CD,51745:JM,51729:JM,51602:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51696 :: CALL :: call :: Lorg/w3c/dom/NodeList :: v26 = p1 $source .getChildNodes()::JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51706 :: CALL :: call :: V :: p0 $this .applyIncludes(v30, p2 $variablesContext , p3 $included )::CL,51591
51712 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,51745
51713 :: CALL :: call :: I :: v28 = v26.getLength()::JM,51729:JM,51713:JM,51602:JM,51717:JM,51607:JM,51724
51717 :: PRED :: IF :: Z :: if (v33 < v28) goto 174::CD,51706:CD,51712:CD,51713:CD,51745
51719 :: PRED :: IF :: Z :: if (p3 $included  == #(0)) goto 239::CD,51720:CD,51724:JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51691:JM,51598:JM,51695
51720 :: CALL :: call :: S :: v16 = p1 $source .getNodeType()::JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51724 :: PRED :: IF :: Z :: if (v16 != #(3)) goto 239::CD,51725:CD,51729:JM,51696:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51725 :: CALL :: call :: Z :: v19 = p2 $variablesContext .isEmpty()::JM,51696:JM,51729:JM,51713:JM,51602:JM,51717:JM,51719:JM,51607:JM,51720:JM,51691:JM,51724:JM,51598:JM,51695
51729 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 239::CD,51734
51734 :: CALL :: call :: Ljava/lang/String :: v23 = parse(v21, p2 $variablesContext )::CL,40504
51745 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,51712:DD,51717:JM,51729:JM,51713:JM,51602:JM,51607:JM,51724
51805 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.parseSelectKeyNodes(java.lang.String,java.util.List,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver,java.lang.String)::CD,51814:CD,51863:CD,51867
51814 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $list .iterator()::JM,51867
51819 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,51867
51824 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
51825 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $parentId )::
51833 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v16.append(#(!selectKey))::
51838 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
51842 :: CALL :: call :: Ljava/lang/String :: v27 = v15.getStringAttribute(#(databaseId))::CL,33730
51847 :: CALL :: call :: Z :: v29 = p0 $this .databaseIdMatchesCurrent(v24, v27, p5 $skRequiredDatabaseId )::JM,51854:CL,46112
51854 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 81::CD,51855:JM,51867
51855 :: CALL :: call :: V :: p0 $this .parseSelectKeyNode(v24, v15, p3 $parameterTypeClass , p4 $langDriver , v27)::CL,58712
51863 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,51867
51867 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 13::CD,51819:CD,51824:CD,51825:CD,51833:CD,51838:CD,51842:CD,51847:CD,51854:CD,51863:JM,51867
51893 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.removeSelectKeyNodes(java.util.List)::CD,51898:CD,51925:CD,51929
51898 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $selectKeyNodes .iterator()::JM,51929
51903 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,51929
51908 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v13 = v11.getParent()::CL,58923
51925 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,51929
51929 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,51903:CD,51908:CD,51925:JM,51929
51940 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.StrictMap.get(java.lang.Object)::CE,51941:CD,51945:CD,51951:CD,51952:CD,51956:CD,51964:CD,51969:CD,51974:CD,51985:CD,51986:CD,51992:CD,52000:CD,52008:CD,52013:CD,52018:CD,52027
51941 :: EXIT :: exit :: Ljava/lang/Object :: org.apache.ibatis.session.Configuration.StrictMap.get(java.lang.Object)::JM,50595:JM,51451:JM,59297
51945 :: CALL :: call :: Ljava/lang/Object :: v5 = p0 $this .get(p1 $key )::JM,52027
51951 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v29 = new java.lang.IllegalArgumentException::
51952 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
51956 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v31)::
51964 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v30.append(#( does not contain val...))::
51969 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(p1 $key )::
51974 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
51985 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
51986 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
51992 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v13)::
52000 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v10.append(#( is ambiguous in ))::
52005 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name::
52008 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
52013 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#( (try using the full ...))::
52018 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
52027 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,51941
52057 :: CALL :: call :: V :: access$0(v10, p1 $configuration )::CL,58981
52064 :: CALL :: call :: V :: access$1(v12, p2 $id )::CL,58992
52071 :: CALL :: call :: V :: access$2(v14, p3 $sqlSource )::CL,59003
52080 :: CALL :: call :: V :: access$3(v16, v17)::CL,59014
52088 :: NORM :: declaration :: Ljava/util/ArrayList :: v23 = new java.util.ArrayList::JM,50068:JM,50075:JM,50061
52099 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMap :: v27 = v20.build()::CL,50090
52103 :: CALL :: call :: V :: access$4(v19, v27)::CL,59025
52110 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::JM,50068:JM,50075:JM,50061
52114 :: CALL :: call :: V :: access$5(v29, v30)::CL,59036
52121 :: CALL :: call :: V :: access$6(v33, p4 $sqlCommandType )::CL,59047
52146 :: CALL :: call :: V :: access$7(v35, v44)::CL,59058
52150 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $configuration .getLogPrefix()::JM,52154:CL,59069
52154 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 168::CF,52155:CD,52160:CD,52168:CD,52173
52155 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
52160 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v50)::
52168 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v48.append(p2 $id )::JM,50068:JM,50075:JM,50061
52173 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
52180 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v61 = getLog(v58)::CL,21080
52184 :: CALL :: call :: V :: access$8(v59, v61)::CL,59078
52191 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v65 = p1 $configuration .getDefaultScriptingLanguageInstance()::CL,59089
52195 :: CALL :: call :: V :: access$9(v63, v65)::CL,59102
52242 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.resource(java.lang.String)::CD,52250
52250 :: CALL :: call :: V :: access$10(v4, p1 $resource )::CL,59113
52258 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.fetchSize(java.lang.Integer)::CD,52266
52266 :: CALL :: call :: V :: access$14(v4, p1 $fetchSize )::CL,59124
52274 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.timeout(java.lang.Integer)::CD,52282
52282 :: CALL :: call :: V :: access$15(v4, p1 $timeout )::CL,59135
52290 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.statementType(org.apache.ibatis.mapping.StatementType)::CD,52298
52298 :: CALL :: call :: V :: access$3(v4, p1 $statementType )::CL,59014
52306 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.keyGenerator(org.apache.ibatis.executor.keygen.KeyGenerator)::CD,52314
52314 :: CALL :: call :: V :: access$7(v4, p1 $keyGenerator )::CL,59058
52322 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.keyProperty(java.lang.String)::CD,52330:CD,52334
52330 :: CALL :: call :: [Ljava/lang/String :: v6 = access$21(p1 $keyProperty )::CL,59146
52334 :: CALL :: call :: V :: access$22(v4, v6)::CL,59156
52342 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.keyColumn(java.lang.String)::CD,52350:CD,52354
52350 :: CALL :: call :: [Ljava/lang/String :: v6 = access$21(p1 $keyColumn )::CL,59146
52354 :: CALL :: call :: V :: access$23(v4, v6)::CL,59167
52362 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.databaseId(java.lang.String)::CD,52370
52370 :: CALL :: call :: V :: access$24(v4, p1 $databaseId )::CL,59178
52378 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.lang(org.apache.ibatis.scripting.LanguageDriver)::CD,52386
52386 :: CALL :: call :: V :: access$9(v4, p1 $driver )::CL,59102
52394 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.resultOrdered(boolean)::CD,52402
52402 :: CALL :: call :: V :: access$20(v4, p1 $resultOrdered )::CL,59189
52410 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.resultSets(java.lang.String)::CD,52418:CD,52422
52418 :: CALL :: call :: [Ljava/lang/String :: v6 = access$21(p1 $resultSet )::CL,59146
52422 :: CALL :: call :: V :: access$25(v4, v6)::CL,59200
52430 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(java.lang.String,java.lang.Class,java.lang.String)::CD,52437:CD,52443:CD,52447:CD,52478:CD,52483:CD,52488:JM,52501
52437 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .applyCurrentNamespace(p1 $resultMap , #(1))::JM,52447:CL,46422
52443 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
52447 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,52448:CD,52453:CD,52499:CD,52501:CD,52547
52448 :: CALL :: call :: [Ljava/lang/String :: v32 = v8.split(#(,))::JM,52453
52453 :: EXPR :: assign :: I :: v33 = v32.length::DD,52499
52455 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v32[v44]::
52462 :: CALL :: call :: Ljava/lang/String :: v38 = v35.trim()::
52466 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v40 = v36.getResultMap(v38)::CL,50582
52471 :: CALL :: call :: Z :: v42 = v9.add(v40)::
52478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
52483 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v35)::
52488 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
52498 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v44 + #(1)::DD,52547
52499 :: PRED :: IF :: Z :: if (v44 < v33) goto 47::CD,52462:CD,52466:CD,52471:CD,52498:CD,52547
52501 :: PRED :: IF :: Z :: if (p2 $resultType  == #(null)) goto 177::CD,52506:CD,52507:CD,52515:CD,52520:CD,52524:CD,52536:CD,52540
52506 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
52507 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(p3 $statementId )::
52515 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v14.append(#(-Inline))::
52520 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
52524 :: NORM :: declaration :: Ljava/util/ArrayList :: v23 = new java.util.ArrayList::
52536 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v27 = v12.build()::CL,50761
52540 :: CALL :: call :: Z :: v29 = v9.add(v27)::
52547 :: EXPR :: assign :: null :: PHI v44 = #(0), v43::DD,52498:DD,52499
52591 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.resultMaps(java.util.List)::CD,52599:CD,52603:CD,52634:CD,52638
52599 :: CALL :: call :: V :: access$5(v4, p1 $resultMaps )::CL,59036
52603 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $resultMaps .iterator()::JM,52638
52608 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,52638
52630 :: CALL :: call :: V :: access$13(v14, v21)::CL,59229
52634 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,52638
52638 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,52608:CD,52630:CD,52634:JM,52638
52657 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.resultSetType(org.apache.ibatis.mapping.ResultSetType)::CD,52665
52665 :: CALL :: call :: V :: access$16(v4, p1 $resultSetType )::CL,59240
52673 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.flushCacheRequired(boolean)::CD,52681
52681 :: CALL :: call :: V :: access$18(v4, p1 $flushCacheRequired )::CL,59251
52689 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.useCache(boolean)::CD,52697
52697 :: CALL :: call :: V :: access$19(v4, p1 $useCache )::CL,59262
52705 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.cache(org.apache.ibatis.cache.Cache)::CD,52713
52713 :: CALL :: call :: V :: access$17(v4, p1 $cache )::CL,59273
52721 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.getStatementParameterMap(java.lang.String,java.lang.Class,java.lang.String)::CE,52722:CD,52728:CD,52734:CD,52745:CD,52750:CD,52755:CD,52803:CD,52805:JM,52765
52722 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ParameterMap :: org.apache.ibatis.builder.MapperBuilderAssistant.getStatementParameterMap(java.lang.String,java.lang.Class,java.lang.String)::JM,46778
52728 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .applyCurrentNamespace(p1 $parameterMapName , #(1))::JM,52734:CL,46422
52734 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 57::CD,52738:CD,52765:CD,52805
52738 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMap :: v28 = v26.getParameterMap(v8)::JM,52805:CL,59284
52745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
52750 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v8)::
52755 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
52765 :: PRED :: IF :: Z :: if (p2 $parameterTypeClass  == #(null)) goto 110::CF,52805:CF,52766:CD,52774:CD,52775:CD,52783:CD,52788:JM,50068:JM,50075:JM,50061:CD,52799
52766 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::
52774 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
52775 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(p3 $statementId )::
52783 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v14.append(#(-Inline))::
52788 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
52799 :: CALL :: call :: Lorg/apache/ibatis/mapping/ParameterMap :: v25 = v12.build()::JM,52805:CL,50090
52803 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ParameterMap :: return v39::DD,52722
52805 :: EXPR :: assign :: null :: PHI v39 = v28, #(null), v25::CF,52803
52829 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.parameterMap(org.apache.ibatis.mapping.ParameterMap)::CD,52837
52837 :: CALL :: call :: V :: access$4(v4, p1 $parameterMap )::CL,59025
52845 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.Builder.build()::CD,52860:CD,52876:CD,52892:CD,52908:CD,52919:CD,52923:CD,52927
52860 :: NORM :: declaration :: Ljava/lang/AssertionError :: v35 = new java.lang.AssertionError::
52876 :: NORM :: declaration :: Ljava/lang/AssertionError :: v33 = new java.lang.AssertionError::
52892 :: NORM :: declaration :: Ljava/lang/AssertionError :: v31 = new java.lang.AssertionError::
52908 :: NORM :: declaration :: Ljava/lang/AssertionError :: v29 = new java.lang.AssertionError::
52919 :: CALL :: call :: Ljava/util/List :: v24 = access$29(v22)::JM,52923:CL,59337
52923 :: CALL :: call :: Ljava/util/List :: v26 = unmodifiableList(v24)::JM,52923
52927 :: CALL :: call :: V :: access$5(v21, v26)::CL,59036
52951 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addMappedStatement(org.apache.ibatis.mapping.MappedStatement)::CD,52963
52963 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $ms )::CL,50489
53002 :: CALL :: call :: V :: v9.setCurrentNamespace(p5 $namespace )::CL,41528
53014 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.convertToProperties(org.apache.ibatis.annotations.Property[])::CD,53019:CD,53020:JM,53026
53019 :: EXPR :: assign :: I :: v4 = p1 $properties .length::DD,53020
53020 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 7::CF,53022:CD,53026:CD,53059:CD,53061
53022 :: NORM :: declaration :: Ljava/util/Properties :: v6 = new java.util.Properties::
53026 :: EXPR :: assign :: I :: v8 = p1 $properties .length::DD,53059
53047 :: CALL :: call :: Ljava/lang/String :: v18 = parse(v13, v16)::CL,40504
53052 :: CALL :: call :: Ljava/lang/Object :: v20 = v6.setProperty(v11, v18)::
53058 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,53061
53059 :: PRED :: IF :: Z :: if (v23 < v8) goto 32::CD,53047:CD,53052:CD,53058:CD,53061
53061 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,53058:DD,53059
53433 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getLanguageDriver(java.lang.reflect.Method)::CD,53453
53453 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v14 = v12.getLanguageDriver(v11)::CL,51528
53469 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(java.lang.reflect.Method,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::CE,53470:CD,53476:CD,53481:CD,53486:CD,53489:CD,53494:CD,53498:CD,53503:CD,53571:CD,53576:CD,53581
53470 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/SqlSource :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(java.lang.reflect.Method,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::JM,47291
53476 :: CALL :: call :: Ljava/lang/Class :: v7 = p0 $this .getSqlAnnotationType(p1 $method )::JM,53486:CL,59355
53481 :: CALL :: call :: Ljava/lang/Class :: v9 = p0 $this .getSqlProviderAnnotationType(p1 $method )::JM,53544:CL,59373
53486 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 100::CD,53536:CD,53543:CD,53544
53489 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
53494 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $method .getName()::
53498 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v35.append(v39)::
53503 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
53536 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlSource :: v33 = p0 $this .buildSqlSourceFromStrings(v31, p2 $parameterType , p3 $languageDriver )::JM,53543:CL,59391
53543 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlSource :: return v33::DD,53470
53544 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 134::CD,53550:JM,59520:JM,59521:JM,27777:JM,59780:JM,59781:JM,59527:JM,27783:JM,59656:JM,59785:JM,59786:JM,59531:JM,59661:JM,59535:JM,27793:JM,59666:JM,59674:JM,59678:JM,59683:JM,59688:JM,59562:JM,59567:JM,59572:JM,59580:JM,59584:JM,59712:JM,59589:JM,59720:JM,59594:JM,59724:JM,59729:JM,59476:JM,59479:JM,59737:JM,59741:JM,59487:JM,59746:JM,59491:JM,59492:JM,59751:JM,59498:JM,59499:JM,59627:JM,59631:JM,59505:JM,59636:JM,59509:JM,59513:JM,59641:JM,59514:CD,53568:CD,53569
53550 :: NORM :: declaration :: Lorg/apache/ibatis/builder/annotation/ProviderSqlSource :: v13 = new org.apache.ibatis.builder.annotation.ProviderSqlSource::DD,53568
53568 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlSource :: return v13::DD,53470
53569 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlSource :: return #(null)::DD,53470
53571 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
53576 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(v45)::
53581 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
53626 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlCommandType(java.lang.reflect.Method)::CE,53627:CD,53631:CD,53636
53627 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/SqlCommandType :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlCommandType(java.lang.reflect.Method)::JM,47344:JM,47363:JM,47350:JM,47355:JM,47358
53631 :: CALL :: call :: Ljava/lang/Class :: v5 = p0 $this .getSqlAnnotationType(p1 $method )::JM,53636:CL,59355
53636 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 70::CD,53637:CD,53642:CD,53661:CD,53665:CD,53667:CD,53672:CD,53676
53637 :: CALL :: call :: Ljava/lang/Class :: v8 = p0 $this .getSqlProviderAnnotationType(p1 $method )::JM,53642:CL,59373
53642 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 25::CD,53643:CD,53645:CD,53661:CD,53665:CD,53667:CD,53672:CD,53676
53643 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/SqlCommandType :: v25 = org.apache.ibatis.mapping.SqlCommandType.UNKNOWN::CF,53645
53645 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlCommandType :: return v25::DD,53627
53661 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getSimpleName()::
53665 :: EXPR :: reference :: Ljava/util/Locale :: v20 = java.util.Locale.ENGLISH::
53667 :: CALL :: call :: Ljava/lang/String :: v22 = v19.toUpperCase(v20)::
53672 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlCommandType :: v24 = valueOf(v22)::JM,53676:CL,46278
53676 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlCommandType :: return v24::DD,53627
53698 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.handleSelectKeyAnnotation(org.apache.ibatis.annotations.SelectKey,java.lang.String,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::CD,53706:CD,53707:CD,53715:CD,53720:CD,53750:CD,53762:CD,53789:CD,53798:JM,59861:JM,59864:CD,53813
53706 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
53707 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(p2 $baseStatementId )::
53715 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(!selectKey))::
53720 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
53750 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlSource :: v32 = p0 $this .buildSqlSourceFromStrings(v30, p3 $parameterTypeClass , p4 $languageDriver )::CL,59391
53762 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v36 = v34.addMappedStatement(v15, v32, v19, v33, #(null), #(null), #(null), p3 $parameterTypeClass , #(null), v17, #(null), #(0), #(0), #(0), v27, v21, v23, #(null), p4 $languageDriver , #(null))::CL,46583
53789 :: CALL :: call :: Ljava/lang/String :: v39 = v37.applyCurrentNamespace(v15, #(0))::CL,46422
53798 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v42 = v40.getMappedStatement(v39, #(0))::CL,51494
53813 :: CALL :: call :: V :: v45.addKeyGenerator(v39, v43)::CL,59873
53894 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseResultMap(java.lang.reflect.Method)::CD,53899:CD,53925:CD,53940
53899 :: CALL :: call :: Ljava/lang/Class :: v5 = p0 $this .getReturnType(p1 $method )::CL,53970
53925 :: CALL :: call :: Ljava/lang/String :: v19 = p0 $this .generateResultMapName(p1 $method )::CL,59893
53940 :: CALL :: call :: V :: p0 $this .applyResultMap(v19, v5, v21, v23, v17)::CL,60108
53970 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getReturnType(java.lang.reflect.Method)::CD,53982:CD,53987:CD,53988
53982 :: CALL :: call :: Ljava/lang/reflect/Type :: v8 = resolveReturnType(p1 $method , v6)::JM,53987:JM,54020:JM,54022:CL,60187
53987 :: EXPR :: assign :: Z :: v9=v8 INSTANCEOF java.lang.Class::DD,53988
53988 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 77::CD,54020:CD,54021
54020 :: EXPR :: assign :: Z :: v11=v8 INSTANCEOF java.lang.reflect.ParameterizedType::DD,54021
54021 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 315::CD,54022:CD,54023:CD,54027:CD,54028:CD,54029:CD,54034
54022 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v8::JM,54023:JM,54027:JM,54042:JM,54046:JM,54047
54023 :: CALL :: call :: Ljava/lang/reflect/Type :: v14 = v12.getRawType()::JM,54023:JM,54027
54027 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,54034:JM,54029:JM,54036:JM,54041:CF,54028
54028 :: EXPR :: assign :: Ljava/lang/Class :: v16 = metadata <Application,Ljava/util/Collection>-><Primordial,Ljava/lang/Class>::JM,54034:JM,54029
54029 :: CALL :: call :: Z :: v18 = v16.isAssignableFrom(v15)::JM,54034:JM,54029
54034 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 124::CF,54035:CD,54036:CD,54041:CD,54042:CD,54046:JM,54047
54035 :: EXPR :: assign :: Ljava/lang/Class :: v19 = metadata <Application,Lorg/apache/ibatis/cursor/Cursor>-><Primordial,Ljava/lang/Class>::JM,54036:JM,54041
54036 :: CALL :: call :: Z :: v21 = v19.isAssignableFrom(v15)::JM,54036:JM,54041
54041 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 228::CD,54042:CD,54046:JM,54047
54042 :: CALL :: call :: [Ljava/lang/reflect/Type :: v43 = v12.getActualTypeArguments()::JM,54042:JM,54046:JM,54047
54046 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 315::CD,54047:CD,54048
54047 :: EXPR :: assign :: I :: v44 = v43.length::DD,54048
54048 :: PRED :: IF :: Z :: if (v44 != #(1)) goto 315::CD,54053:CD,54054
54049 :: EXPR :: reference :: Ljava/lang/Object :: v45 = v43[#(0)]::DD,54053:DD,54057:DD,54066:DD,54068
54053 :: EXPR :: assign :: Z :: v46=v45 INSTANCEOF java.lang.Class::DD,54054
54054 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 168::CD,54057:CD,54058
54057 :: EXPR :: assign :: Z :: v47=v45 INSTANCEOF java.lang.reflect.ParameterizedType::DD,54058
54058 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 193::CD,54066:CD,54067
54066 :: EXPR :: assign :: Z :: v48=v45 INSTANCEOF java.lang.reflect.GenericArrayType::DD,54067
54067 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 315::CD,54068:CD,54069:CD,54073:CD,54074
54068 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v45::JM,54069:JM,54073
54069 :: CALL :: call :: Ljava/lang/reflect/Type :: v51 = v49.getGenericComponentType()::JM,54069:JM,54073
54073 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::JM,54074
54074 :: CALL :: call :: Ljava/lang/Object :: v54 = newInstance(v52, #(0))::JM,54074
54225 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getIncompleteMethods()::CE,54226:CD,54232
54226 :: EXIT :: exit :: Ljava/util/Collection :: org.apache.ibatis.session.Configuration.getIncompleteMethods()::JM,47847
54229 :: EXPR :: reference :: Ljava/util/Collection :: v3 = p0 $this .incompleteMethods::DD,54232
54232 :: NORM :: compound :: Ljava/util/Collection :: return v3::CF,54226
54234 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MethodResolver.resolve()::CD,54244
54244 :: CALL :: call :: V :: v3.parseStatement(v4)::CL,47269
54690 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addUniqueMethods(java.util.Map,java.lang.reflect.Method[])::CD,54696:CD,54734:CD,54737
54696 :: EXPR :: assign :: I :: v5 = p2 $methods .length::DD,54734
54698 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p2 $methods [v25]::JM,54706:JM,54702
54702 :: CALL :: call :: Z :: v9 = v7.isBridge()::JM,54706:JM,54702
54706 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 70::CD,54707:CD,54712:CD,54717:CF,54733
54707 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getSignature(v7)::CL,60233
54712 :: CALL :: call :: Z :: v13 = p1 $uniqueMethods .containsKey(v11)::JM,54717
54717 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 70::CD,54718:CD,54727:CF,54733
54718 :: CALL :: call :: Z :: v15 = canAccessPrivateMethods()::CL,48235
54727 :: CALL :: call :: Ljava/lang/Object :: v21 = p1 $uniqueMethods .put(v11, v7)::
54733 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,54737
54734 :: PRED :: IF :: Z :: if (v25 < v5) goto 17::CD,54702:CD,54706:CD,54733:CD,54737
54737 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,54733:DD,54734
54766 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addGetMethod(java.lang.String,java.lang.reflect.Method)::CD,54772:CD,54777
54772 :: CALL :: call :: Z :: v6 = p0 $this .isValidPropertyName(p1 $name )::JM,54777:CL,55067
54777 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 52::JM,60354:JM,60358:JM,60359:JM,60376:JM,60351:CD,54786:CD,54795:CD,54803:CD,54808
54786 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.put(p1 $name , v9)::
54795 :: CALL :: call :: Ljava/lang/reflect/Type :: v15 = resolveReturnType(p2 $method , v13)::CL,60187
54803 :: CALL :: call :: Ljava/lang/Class :: v18 = p0 $this .typeToClass(v15)::CL,55146
54808 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(p1 $name , v18)::
54831 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.pickBetterSetter(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.String)::CD,54838:CD,54871:CD,54876:CD,54881:CD,54890:CD,54895:CD,54900:CD,54904:CD,54909:CD,54914:CD,54918:CD,54923:CD,54928
54838 :: PRED :: IF :: Z :: if (p1 $setter1  != #(null)) goto 7::CD,54840:CD,54848:JM,54838
54840 :: CALL :: call :: [Ljava/lang/Class :: v8 = p1 $setter1 .getParameterTypes()::JM,54838
54844 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v8[#(0)]::
54848 :: CALL :: call :: [Ljava/lang/Class :: v12 = p2 $setter2 .getParameterTypes()::JM,54838
54852 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v12[#(0)]::
54871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
54876 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(p3 $property )::JM,54838
54881 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#(' in class '))::
54890 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v28)::
54895 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(' with types '))::
54900 :: CALL :: call :: Ljava/lang/String :: v35 = v10.getName()::
54904 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v33.append(v35)::
54909 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#(' and '))::
54914 :: CALL :: call :: Ljava/lang/String :: v42 = v13.getName()::
54918 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v40.append(v42)::
54923 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#('.))::
54928 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::
54954 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.addSetMethod(java.lang.String,java.lang.reflect.Method)::CD,54960:CD,54965
54960 :: CALL :: call :: Z :: v6 = p0 $this .isValidPropertyName(p1 $name )::JM,54965:CL,55067
54965 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 54::JM,60354:JM,60358:JM,60359:JM,60376:JM,60351:CD,54974:CD,54983:CD,54995:CD,55000
54974 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.put(p1 $name , v9)::
54983 :: CALL :: call :: [Ljava/lang/reflect/Type :: v15 = resolveParamTypes(p2 $method , v13)::CL,60390
54995 :: CALL :: call :: Ljava/lang/Class :: v19 = p0 $this .typeToClass(v17)::CL,55146
55000 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.put(p1 $name , v19)::
55067 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.isValidPropertyName(java.lang.String)::CE,55068:CD,55072:CD,55077:CD,55091:CD,55092:JM,55089:JM,55083
55068 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.Reflector.isValidPropertyName(java.lang.String)::JM,48946:JM,49022:JM,54777:JM,54965
55072 :: CALL :: call :: Z :: v6 = p1 $name .startsWith(#($))::JM,55089:JM,55077:JM,55083
55077 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 31::CD,55078:CD,55083:CD,55092
55078 :: CALL :: call :: Z :: v10 = #(serialVersionUID).equals(p1 $name )::JM,55083:JM,55089:JM,55077
55083 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 31::CD,55084:CD,55089:CD,55092
55084 :: CALL :: call :: Z :: v13 = #(class).equals(p1 $name )::JM,55089:JM,55077:JM,55083
55089 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 35::CD,55092
55091 :: NORM :: compound :: Z :: return v15::CF,55068
55092 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::CF,55091
55112 :: EXPR :: modify :: Ljava/lang/reflect/Field :: p0 $this .field = p1 $field ::
55119 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveFieldType(java.lang.reflect.Field,java.lang.reflect.Type)::CD,55132
55132 :: CALL :: call :: Ljava/lang/reflect/Type :: v9 = resolveType(v5, p2 $srcType , v7)::CL,60444
55146 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.typeToClass(java.lang.reflect.Type)::CE,55147:CD,55151:CD,55152:CD,55198:CD,55200:CD,55201:CD,55202:JM,55153:JM,55155:JM,55157:JM,55164
55147 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.Reflector.typeToClass(java.lang.reflect.Type)::JM,55201:JM,55189:JM,55194
55151 :: EXPR :: assign :: Z :: v5=p1 $src  INSTANCEOF java.lang.Class::DD,55152
55152 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 18::CD,55153:CD,55155:CD,55156:CD,55201
55153 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST p1 $src ::DD,55201
55155 :: EXPR :: assign :: Z :: v7=p1 $src  INSTANCEOF java.lang.reflect.ParameterizedType::DD,55156
55156 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 41::CD,55157:CD,55158:CD,55162:CD,55164:CD,55165:CD,55201
55157 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST p1 $src ::JM,55158:JM,55162
55158 :: CALL :: call :: Ljava/lang/reflect/Type :: v26 = v24.getRawType()::JM,55158:JM,55162
55162 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::DD,55201
55164 :: EXPR :: assign :: Z :: v8=p1 $src  INSTANCEOF java.lang.reflect.GenericArrayType::DD,55165
55165 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 97::CF,55201:CD,55167:CD,55171:CD,55172
55167 :: CALL :: call :: Ljava/lang/reflect/Type :: v11 = v9.getGenericComponentType()::JM,55171:JM,55173:CL,60497
55171 :: EXPR :: assign :: Z :: v12=v11 INSTANCEOF java.lang.Class::DD,55172
55172 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 81::CD,55173:CD,55174:CD,55179:CD,55184:CD,55189:CD,55194:CD,55201
55173 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v11::JM,55201:JM,55174:JM,55179
55174 :: CALL :: call :: Ljava/lang/Object :: v21 = newInstance(v19, #(0))::JM,55201:JM,55174:JM,55179
55179 :: CALL :: call :: Ljava/lang/Class :: v23 = v21.getClass()::JM,55201:JM,55179
55184 :: CALL :: call :: Ljava/lang/Class :: v14 = p0 $this .typeToClass(v11)::JM,55201:JM,55189:JM,55194:CL,55146
55189 :: CALL :: call :: Ljava/lang/Object :: v16 = newInstance(v14, #(0))::JM,55201:JM,55189:JM,55194
55194 :: CALL :: call :: Ljava/lang/Class :: v18 = v16.getClass()::JM,55201:JM,55194
55198 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 104::CF,55202:CF,55199
55199 :: EXPR :: assign :: Ljava/lang/Class :: v30 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::DD,55202
55200 :: NORM :: compound :: Ljava/lang/Class :: return v31::DD,55147
55201 :: EXPR :: assign :: null :: PHI v29 = v28, v27, #(null), v23, v18::DD,55198:DD,55202
55202 :: EXPR :: assign :: null :: PHI v31 = v29, v30::CF,55200
55238 :: EXPR :: modify :: Ljava/lang/reflect/Field :: p0 $this .field = p1 $field ::
55466 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.PropertyParser.VariableTokenHandler.getPropertyValue(java.lang.String,java.lang.String)::CD,55475
55472 :: EXPR :: reference :: Ljava/util/Properties :: v5 = p0 $this .variables::DD,55475
55475 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,55480
55480 :: CALL :: call :: Ljava/lang/String :: v9 = v7.getProperty(p1 $key , p2 $defaultValue )::
55555 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.setDefaultImplementations()::CD,55562
55559 :: EXPR :: reference :: Ljava/lang/Class :: v3 = p0 $this .implementation::DD,55562
55562 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 37::CD,55570:CD,55574
55567 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .decorators::JM,55574
55570 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,55574
55574 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 37::CD,55578:CD,55579
55575 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .decorators::
55578 :: EXPR :: assign :: Ljava/lang/Class :: v11 = metadata <Application,Lorg/apache/ibatis/cache/decorators/LruCache>-><Primordial,Ljava/lang/Class>::
55579 :: CALL :: call :: Z :: v13 = v10.add(v11)::
55592 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.newBaseCacheInstance(java.lang.Class,java.lang.String)::CE,55593:CD,55598:CD,55603:CD,55608:CD,55613:CD,55614:CD,55621:CD,55631
55593 :: EXIT :: exit :: Lorg/apache/ibatis/cache/Cache :: org.apache.ibatis.mapping.CacheBuilder.newBaseCacheInstance(java.lang.Class,java.lang.String)::JM,49696:JM,49651:JM,49701:JM,49656:JM,49692:JM,49709:JM,49647
55598 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v6 = p0 $this .getBaseCacheConstructor(p1 $cacheClass )::JM,55608:JM,55613:CL,60542
55603 :: NORM :: declaration :: [Ljava/lang/Object :: v8 = new java.lang.Object[]::JM,55608:JM,55613
55608 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.newInstance(v8)::JM,55608:JM,55613
55613 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::CF,55614
55614 :: NORM :: compound :: Lorg/apache/ibatis/cache/Cache :: return v12::DD,55593
55621 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $cacheClass )::
55631 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v22.append(v13)::
55655 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.setCacheProperties(org.apache.ibatis.cache.Cache)::CD,55663:CD,55820:CD,55825:CD,55830:CD,55835:CD,55840:CD,55871:CD,55876:CD,55880:CD,55885:CD,55890:CD,55894:CD,55898:CD,55903:CD,55908
55660 :: EXPR :: reference :: Ljava/util/Properties :: v4 = p0 $this .properties::DD,55663
55663 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 348::CD,55664:CD,55671:CD,55675:CD,55849:CD,55853
55664 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v7 = forObject(p1 $cache )::CL,60615
55668 :: EXPR :: reference :: Ljava/util/Properties :: v8 = p0 $this .properties::JM,55684:JM,55853
55671 :: CALL :: call :: Ljava/util/Set :: v10 = v8.entrySet()::JM,55684:JM,55853
55675 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,55684:JM,55853
55680 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,55684:JM,55853
55684 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,55689:JM,55694
55685 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.getKey()::JM,55689
55689 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::JM,55694
55690 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.getValue()::JM,55694
55694 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::JM,55779:JM,55809
55695 :: CALL :: call :: Z :: v26 = v7.hasSetter(v21)::JM,55700:CL,60639
55700 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 340::CD,55701:CD,55706:CD,55707:JM,55684:JM,55853
55701 :: CALL :: call :: Ljava/lang/Class :: v28 = v7.getSetterType(v21)::JM,55776:JM,55746:JM,55778:JM,55716:JM,55748:JM,55718:JM,55791:JM,55761:JM,55793:JM,55731:JM,55763:JM,55733:JM,55707:CL,60655
55706 :: EXPR :: assign :: Ljava/lang/Class :: v29 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::DD,55707
55707 :: PRED :: IF :: Z :: if (v29 != v28) goto 97::CD,55708:CD,55714:CD,55716
55708 :: CALL :: call :: V :: v7.setValue(v21, v24)::CL,60671
55714 :: EXPR :: reference :: Ljava/lang/Class :: v31 = java.lang.Integer.TYPE::DD,55716
55716 :: PRED :: IF :: Z :: if (v31 == v28) goto 117::CF,55717:CD,55718:CD,55719:CD,55723
55717 :: EXPR :: assign :: Ljava/lang/Class :: v32 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::DD,55718
55718 :: PRED :: IF :: Z :: if (v32 != v28) goto 126::CD,55719:CD,55723:CD,55729:CD,55731
55719 :: CALL :: call :: Ljava/lang/Integer :: v34 = valueOf(v24)::
55723 :: CALL :: call :: V :: v7.setValue(v21, v34)::CL,60671
55729 :: EXPR :: reference :: Ljava/lang/Class :: v36 = java.lang.Long.TYPE::DD,55731
55731 :: PRED :: IF :: Z :: if (v36 == v28) goto 146::CF,55732:CD,55733:CD,55734:CD,55738
55732 :: EXPR :: assign :: Ljava/lang/Class :: v37 = metadata <Application,Ljava/lang/Long>-><Primordial,Ljava/lang/Class>::DD,55733
55733 :: PRED :: IF :: Z :: if (v37 != v28) goto 155::CD,55734:CD,55738:CD,55744:CD,55746
55734 :: CALL :: call :: Ljava/lang/Long :: v39 = valueOf(v24)::
55738 :: CALL :: call :: V :: v7.setValue(v21, v39)::CL,60671
55744 :: EXPR :: reference :: Ljava/lang/Class :: v41 = java.lang.Short.TYPE::DD,55746
55746 :: PRED :: IF :: Z :: if (v41 == v28) goto 175::CF,55747:CD,55748:CD,55749:CD,55753
55747 :: EXPR :: assign :: Ljava/lang/Class :: v42 = metadata <Application,Ljava/lang/Short>-><Primordial,Ljava/lang/Class>::DD,55748
55748 :: PRED :: IF :: Z :: if (v42 != v28) goto 184::CD,55749:CD,55753:CD,55759:CD,55761
55749 :: CALL :: call :: Ljava/lang/Short :: v44 = valueOf(v24)::
55753 :: CALL :: call :: V :: v7.setValue(v21, v44)::CL,60671
55759 :: EXPR :: reference :: Ljava/lang/Class :: v46 = java.lang.Byte.TYPE::DD,55761
55761 :: PRED :: IF :: Z :: if (v46 == v28) goto 204::CF,55762:CD,55763:CD,55764:CD,55768
55762 :: EXPR :: assign :: Ljava/lang/Class :: v47 = metadata <Application,Ljava/lang/Byte>-><Primordial,Ljava/lang/Class>::DD,55763
55763 :: PRED :: IF :: Z :: if (v47 != v28) goto 213::CD,55764:CD,55768:CD,55774:CD,55776
55764 :: CALL :: call :: Ljava/lang/Byte :: v49 = valueOf(v24)::
55768 :: CALL :: call :: V :: v7.setValue(v21, v49)::CL,60671
55774 :: EXPR :: reference :: Ljava/lang/Class :: v51 = java.lang.Float.TYPE::DD,55776
55776 :: PRED :: IF :: Z :: if (v51 == v28) goto 233::CF,55777:CD,55778:CD,55779:CD,55783
55777 :: EXPR :: assign :: Ljava/lang/Class :: v52 = metadata <Application,Ljava/lang/Float>-><Primordial,Ljava/lang/Class>::DD,55778
55778 :: PRED :: IF :: Z :: if (v52 != v28) goto 242::CD,55779:CD,55783:CD,55789:CD,55791
55779 :: CALL :: call :: Ljava/lang/Float :: v54 = valueOf(v24)::JM,55779
55783 :: CALL :: call :: V :: v7.setValue(v21, v54)::CL,60671
55789 :: EXPR :: reference :: Ljava/lang/Class :: v56 = java.lang.Boolean.TYPE::DD,55791
55791 :: PRED :: IF :: Z :: if (v56 == v28) goto 262::CF,55792:CD,55793:CD,55798
55792 :: EXPR :: assign :: Ljava/lang/Class :: v57 = metadata <Application,Ljava/lang/Boolean>-><Primordial,Ljava/lang/Class>::DD,55793
55793 :: PRED :: IF :: Z :: if (v57 != v28) goto 271::CD,55798:CD,55809:CD,55813
55798 :: CALL :: call :: V :: v7.setValue(v21, v59)::CL,60671
55809 :: CALL :: call :: Ljava/lang/Double :: v64 = valueOf(v24)::JM,55809
55813 :: CALL :: call :: V :: v7.setValue(v21, v64)::CL,60671
55820 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
55825 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v98.append(v21)::
55830 :: CALL :: call :: Ljava/lang/StringBuilder :: v105 = v102.append(#(' of type ))::
55835 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v105.append(v28)::
55840 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
55849 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,55684:JM,55853
55853 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 31::CD,55680:CD,55684:CD,55685:CD,55689:CD,55690:CD,55694:CD,55695:CD,55700:CD,55849:JM,55853
55871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
55876 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $cache .getId()::
55880 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v75.append(v79)::
55885 :: CALL :: call :: Ljava/lang/StringBuilder :: v84 = v81.append(#(' on '))::
55890 :: CALL :: call :: Ljava/lang/Class :: v86 = p1 $cache .getClass()::
55894 :: CALL :: call :: Ljava/lang/String :: v88 = v86.getName()::
55898 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(v88)::
55903 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#('))::
55908 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
55989 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.newCacheDecoratorInstance(java.lang.Class,org.apache.ibatis.cache.Cache)::CD,55995:CD,56018:CD,56028
55995 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v6 = p0 $this .getCacheDecoratorConstructor(p1 $cacheClass )::CL,60775
56018 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $cacheClass )::
56028 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v22.append(v13)::
56052 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.setStandardDecorators(org.apache.ibatis.cache.Cache)::CE,56053:CD,56057:CD,56064:CD,56082:CD,56103:JM,56200:JM,56207:CD,56114:JM,60894:CD,56122:CD,56128:CD,56130:CD,56135:CD,56140:CD,56153
56053 :: EXIT :: exit :: Lorg/apache/ibatis/cache/Cache :: org.apache.ibatis.mapping.CacheBuilder.setStandardDecorators(org.apache.ibatis.cache.Cache)::JM,49709
56057 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v5 = forObject(p1 $cache )::CL,60615
56061 :: EXPR :: reference :: Ljava/lang/Integer :: v6 = p0 $this .size::DD,56064
56064 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,56065:CD,56070
56065 :: CALL :: call :: Z :: v10 = v5.hasSetter(#(size))::JM,56070:CL,60639
56070 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 32::CD,56074
56074 :: CALL :: call :: V :: v5.setValue(#(size), v12)::CL,60671
56079 :: EXPR :: reference :: Ljava/lang/Long :: v14 = p0 $this .clearInterval::DD,56082
56082 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 62::JM,60841:JM,60847:CD,56096
56096 :: CALL :: call :: V :: v17.setClearInterval(v20)::CL,60860
56100 :: EXPR :: reference :: Z :: v23 = p0 $this .readWrite::DD,56103
56103 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 77::JM,60879
56114 :: NORM :: declaration :: Lorg/apache/ibatis/cache/decorators/SynchronizedCache :: v29 = new org.apache.ibatis.cache.decorators.SynchronizedCache::DD,56153
56119 :: EXPR :: reference :: Z :: v31 = p0 $this .blocking::DD,56122
56122 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 112::CF,56153:CF,56123:JM,60912:JM,60909
56123 :: NORM :: declaration :: Lorg/apache/ibatis/cache/decorators/BlockingCache :: v32 = new org.apache.ibatis.cache.decorators.BlockingCache::DD,56153
56128 :: NORM :: compound :: Lorg/apache/ibatis/cache/Cache :: return v45::DD,56053
56130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
56135 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(v34)::
56140 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
56153 :: EXPR :: assign :: null :: PHI v45 = v29, v32::CF,56128
56194 :: EXPR :: modify :: I :: p0 $this .requests = #(0)::
56197 :: EXPR :: modify :: I :: p0 $this .hits = #(0)::
56200 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .delegate = p1 $delegate ::
56207 :: CALL :: call :: Lorg/apache/ibatis/logging/Log :: v9 = getLog(v7)::JM,56211:CL,21080
56211 :: EXPR :: modify :: Lorg/apache/ibatis/logging/Log :: p0 $this .log = v9::
56272 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getGetterType(java.lang.String)::JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,56282:CD,56286
56282 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,56286:CL,36998
56286 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 33::CD,56287:CD,56296:CD,56302
56287 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v12 = p0 $this .metaClassForProperty(v4)::CL,60951
56296 :: CALL :: call :: Ljava/lang/Class :: v16 = v12.getGetterType(v14)::CL,56272
56302 :: CALL :: call :: Ljava/lang/Class :: v10 = p0 $this .getGetterType(v4)::CL,60975
56320 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getMappingTypeHandler(java.lang.Class)::CE,56321:CD,56328:CD,56333:CD,56334
56321 :: EXIT :: exit :: Lorg/apache/ibatis/type/TypeHandler :: org.apache.ibatis.type.TypeHandlerRegistry.getMappingTypeHandler(java.lang.Class)::JM,49857
56328 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $handlerType )::JM,56333
56333 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,56334
56334 :: NORM :: compound :: Lorg/apache/ibatis/type/TypeHandler :: return v7::DD,56321
56424 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.access$3(org.apache.ibatis.mapping.ParameterMapping,org.apache.ibatis.type.TypeHandler)::JM,56429
56429 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandler :: p1 $null .typeHandler = p2 $null ::
56435 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.Builder.resolveTypeHandler()::CD,56442:CD,56446
56442 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v5 = access$14(v3)::JM,56446:CL,61084
56446 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 58::CD,56450:CD,56454
56450 :: CALL :: call :: Ljava/lang/Class :: v9 = access$11(v7)::JM,56454:CL,61093
56454 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 58::CD,56483:CD,56489
56483 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v23 = v14.getTypeHandler(v18, v21)::CL,61120
56489 :: CALL :: call :: V :: access$3(v15, v23)::CL,56424
56506 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.Builder.validate()::CD,56532:CD,56533:CD,56541:CD,56545:CD,56550:CD,56555:CD,56560:CD,56577:CD,56578:CD,56586:CD,56590:CD,56595:CD,56603:CD,56607:CD,56611:CD,56616:CD,56628:CD,56633:CD,56638
56532 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v50 = new java.lang.IllegalStateException::
56533 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
56541 :: CALL :: call :: Ljava/lang/String :: v56 = access$13(v54)::CL,61145
56545 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v51.append(v56)::
56550 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('.  ))::
56555 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v61.append(#(Parameters of type ja...))::
56560 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
56577 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v14 = new java.lang.IllegalStateException::
56578 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
56586 :: CALL :: call :: Ljava/lang/String :: v20 = access$13(v18)::CL,61145
56590 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v15.append(v20)::
56595 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#('. It was either not ...))::
56603 :: CALL :: call :: Ljava/lang/Class :: v28 = access$11(v26)::CL,61093
56607 :: CALL :: call :: Ljava/lang/String :: v30 = v28.getName()::
56611 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v25.append(v30)::
56616 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#() : jdbcType ())::
56628 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
56633 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#() combination.))::
56638 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
56664 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMap.access$1(org.apache.ibatis.mapping.ParameterMap,java.lang.String)::JM,56669
56669 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .id = p2 $null ::
56675 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMap.access$2(org.apache.ibatis.mapping.ParameterMap,java.lang.Class)::JM,56680
56680 :: EXPR :: modify :: Ljava/lang/Class :: p1 $null .type = p2 $null ::
56686 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMap.access$3(org.apache.ibatis.mapping.ParameterMap,java.util.List)::JM,56691
56691 :: EXPR :: modify :: Ljava/util/List :: p1 $null .parameterMappings = p2 $null ::
56697 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMap.access$5(org.apache.ibatis.mapping.ParameterMap)::CE,56698:CD,56704
56698 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ParameterMap.access$5(org.apache.ibatis.mapping.ParameterMap)::JM,50104
56701 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .parameterMappings::DD,56704
56704 :: NORM :: compound :: Ljava/util/List :: return v3::CF,56698
56715 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getValueBasedIdentifier()::CE,56716:CD,56719:CD,56788:CD,56789:CD,56793:CD,56794:JM,56724
56716 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.parsing.XNode.getValueBasedIdentifier()::
56719 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,56793
56724 :: PRED :: IF :: Z :: if (v38 == p0 $this ) goto 36::CD,56725
56725 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v3.insert(#(0), #(_))::
56731 :: CALL :: call :: Ljava/lang/String :: v14 = v38.getStringAttribute(#(property), #(null))::CL,36851
56737 :: CALL :: call :: Ljava/lang/String :: v16 = v38.getStringAttribute(#(value), v14)::CL,36851
56743 :: CALL :: call :: Ljava/lang/String :: v18 = v38.getStringAttribute(#(id), v16)::JM,56749:CL,36851
56749 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 85::CD,56750:CD,56756:CD,56762:CD,56768
56750 :: CALL :: call :: Ljava/lang/String :: v22 = v18.replace(#(46), #(95))::
56756 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v3.insert(#(0), #(]))::
56762 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v3.insert(#(0), v22)::
56768 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v3.insert(#(0), #([))::
56774 :: CALL :: call :: Ljava/lang/String :: v33 = v38.getName()::CL,34052
56778 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v3.insert(#(0), v33)::
56784 :: CALL :: call :: Lorg/apache/ibatis/parsing/XNode :: v37 = v38.getParent()::JM,56794:CL,58923
56788 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 15::CD,56724:CD,56731:CD,56737:CD,56743:CD,56749:CD,56774:CD,56778:CD,56784:CD,56794:JM,56793
56789 :: CALL :: call :: Ljava/lang/String :: v40 = v3.toString()::JM,56793
56793 :: NORM :: compound :: Ljava/lang/String :: return v40::DD,56716
56794 :: EXPR :: assign :: null :: PHI v38 = p0 $this , v37::DD,56724:DD,56788
56851 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getBooleanAttribute(java.lang.String)::CD,56856
56856 :: CALL :: call :: Ljava/lang/Boolean :: v6 = p0 $this .getBooleanAttribute(p1 $name , #(null))::CL,45235
56866 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.processConstructorElement(org.apache.ibatis.parsing.XNode,java.lang.Class,java.util.List)::CD,56873:CD,56877:CD,56927:CD,56931
56873 :: CALL :: call :: Ljava/util/List :: v7 = p1 $resultChild .getChildren()::JM,56931:CL,33973
56877 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,56931
56882 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,56931
56887 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
56891 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v18 = org.apache.ibatis.mapping.ResultFlag.CONSTRUCTOR::
56893 :: CALL :: call :: Z :: v20 = v16.add(v18)::
56898 :: CALL :: call :: Ljava/lang/String :: v23 = v15.getName()::JM,56907:CL,34052
56902 :: CALL :: call :: Z :: v25 = #(idArg).equals(v23)::JM,56907
56907 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 82::CD,56908:CD,56910
56908 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v26 = org.apache.ibatis.mapping.ResultFlag.ID::
56910 :: CALL :: call :: Z :: v28 = v16.add(v26)::
56915 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v30 = p0 $this .buildResultMappingFromContext(v15, p2 $resultType , v16)::CL,57109
56922 :: CALL :: call :: Z :: v32 = p3 $resultMappings .add(v30)::
56927 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,56931
56931 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,56882:CD,56887:CD,56891:CD,56893:CD,56898:CD,56902:CD,56907:CD,56915:CD,56922:CD,56927:JM,56931
56958 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.processDiscriminatorElement(org.apache.ibatis.parsing.XNode,java.lang.Class,java.util.List)::CD,56965:CD,56970:CD,56975:CD,56980:CD,56985:CD,56990:CD,56995:CD,57000:CD,57004:CD,57008:CD,57041:CD,57045:CD,57049
56965 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $context .getStringAttribute(#(column))::CL,33730
56970 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $context .getStringAttribute(#(javaType))::CL,33730
56975 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $context .getStringAttribute(#(jdbcType))::CL,33730
56980 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $context .getStringAttribute(#(typeHandler))::CL,33730
56985 :: CALL :: call :: Ljava/lang/Class :: v19 = p0 $this .resolveClass(v11)::CL,34113
56990 :: CALL :: call :: Ljava/lang/Class :: v21 = p0 $this .resolveClass(v17)::CL,34113
56995 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v23 = p0 $this .resolveJdbcType(v14)::CL,35042
57000 :: NORM :: declaration :: Ljava/util/HashMap :: v24 = new java.util.HashMap::
57004 :: CALL :: call :: Ljava/util/List :: v27 = p1 $context .getChildren()::JM,57045:CL,33973
57008 :: CALL :: call :: Ljava/util/Iterator :: v29 = v27.iterator()::JM,57045
57013 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,57045
57018 :: CALL :: call :: Ljava/lang/String :: v38 = v35.getStringAttribute(#(value))::CL,33730
57023 :: CALL :: call :: Ljava/lang/String :: v41 = p0 $this .processNestedResultMappings(v35, p3 $resultMappings )::CL,61163
57029 :: CALL :: call :: Ljava/lang/String :: v43 = v35.getStringAttribute(#(resultMap), v41)::CL,36851
57035 :: CALL :: call :: Ljava/lang/Object :: v45 = v24.put(v38, v43)::
57041 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,57045
57045 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 85::CD,57013:CD,57018:CD,57023:CD,57029:CD,57035:CD,57041:JM,57045
57049 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v48 = v46.buildDiscriminator(p2 $resultType , v8, v19, v23, v21, v24)::CL,61235
57109 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(org.apache.ibatis.parsing.XNode,java.lang.Class,java.util.List)::CE,57110:CD,57118:CD,57123:CD,57135:CD,57140:CD,57145:CD,57150:CD,57158:CD,57164:CD,57170:CD,57175:CD,57180:CD,57185:CD,57190:CD,57204:CD,57215:CD,57220:CD,57225:CD,57233:CD,57251
57110 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ResultMapping :: org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(org.apache.ibatis.parsing.XNode,java.lang.Class,java.util.List)::
57118 :: CALL :: call :: Z :: v8 = p3 $flags .contains(v6)::JM,57123
57123 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 28::CD,57124:CD,57130
57124 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $context .getStringAttribute(#(name))::CL,33730
57130 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $context .getStringAttribute(#(property))::CL,33730
57135 :: CALL :: call :: Ljava/lang/String :: v19 = p1 $context .getStringAttribute(#(column))::CL,33730
57140 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $context .getStringAttribute(#(javaType))::CL,33730
57145 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $context .getStringAttribute(#(jdbcType))::CL,33730
57150 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $context .getStringAttribute(#(select))::CL,33730
57158 :: CALL :: call :: Ljava/lang/String :: v33 = p0 $this .processNestedResultMappings(p1 $context , v31)::CL,61163
57164 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $context .getStringAttribute(#(resultMap), v33)::CL,36851
57170 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $context .getStringAttribute(#(notNullColumn))::CL,33730
57175 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $context .getStringAttribute(#(columnPrefix))::CL,33730
57180 :: CALL :: call :: Ljava/lang/String :: v44 = p1 $context .getStringAttribute(#(typeHandler))::CL,33730
57185 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $context .getStringAttribute(#(resultSet))::CL,33730
57190 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $context .getStringAttribute(#(foreignColumn))::CL,33730
57204 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $context .getStringAttribute(#(fetchType), v57)::CL,36851
57215 :: CALL :: call :: Ljava/lang/Class :: v63 = p0 $this .resolveClass(v22)::CL,34113
57220 :: CALL :: call :: Ljava/lang/Class :: v65 = p0 $this .resolveClass(v44)::CL,34113
57225 :: CALL :: call :: Lorg/apache/ibatis/type/JdbcType :: v67 = p0 $this .resolveJdbcType(v25)::CL,35042
57233 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v70 = v68.buildResultMapping(p2 $resultType , v16, v19, v63, v67, v28, v35, v38, v41, v65, p3 $flags , v47, v50, v61)::JM,57251:CL,61374
57251 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ResultMapping :: return v70::DD,57110
57377 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addIncompleteResultMap(org.apache.ibatis.builder.ResultMapResolver)::CD,57385
57382 :: EXPR :: reference :: Ljava/util/Collection :: v4 = p0 $this .incompleteResultMaps::
57385 :: CALL :: call :: Z :: v6 = v4.add(p1 $resultMapResolver )::
57394 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.StrictMap.put(java.lang.String,java.lang.Object)::CD,57400:CD,57411:CD,57438:CD,57443:CD,57473
57400 :: CALL :: call :: Z :: v6 = p0 $this .containsKey(p1 $key )::
57411 :: CALL :: call :: Ljava/lang/String :: v28 = valueOf(v26)::
57438 :: CALL :: call :: Z :: v10 = p1 $key .contains(#(.))::JM,57443
57443 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 92::CD,57444:CD,57449:CD,57454
57444 :: CALL :: call :: Ljava/lang/String :: v12 = p0 $this .getShortName(p1 $key )::CL,61541
57449 :: CALL :: call :: Ljava/lang/Object :: v14 = p0 $this .get(v12)::JM,57454
57454 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 77::CD,57455:JM,61572:CD,57467
57455 :: CALL :: call :: Ljava/lang/Object :: v21 = p0 $this .put(v12, p2 $value )::
57467 :: CALL :: call :: Ljava/lang/Object :: v19 = p0 $this .put(v12, v16)::
57473 :: CALL :: call :: Ljava/lang/Object :: v23 = p0 $this .put(p1 $key , p2 $value )::
57670 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.access$8(org.apache.ibatis.mapping.ResultMap)::CE,57671:CD,57677
57671 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMap.access$8(org.apache.ibatis.mapping.ResultMap)::
57674 :: EXPR :: reference :: Ljava/lang/String :: v3 = p1 $null .id::DD,57677
57677 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57671
57734 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.access$14(org.apache.ibatis.mapping.ResultMap)::CE,57735:CD,57741
57735 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMap.access$14(org.apache.ibatis.mapping.ResultMap)::JM,50854:JM,51071:JM,51204
57738 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .resultMappings::DD,57741
57741 :: NORM :: compound :: Ljava/util/List :: return v3::CF,57735
57790 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.getResultSet()::CE,57791:CD,57797
57791 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMapping.getResultSet()::JM,67277
57794 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .resultSet::DD,57797
57797 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57791
57810 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.getColumn()::CE,57811:CD,57817
57811 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMapping.getColumn()::JM,50906:JM,50950
57814 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .column::DD,57817
57817 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57811
57828 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.isCompositeResult()::CE,57829:CD,57835
57829 :: EXIT :: exit :: Z :: org.apache.ibatis.mapping.ResultMapping.isCompositeResult()::JM,50931
57832 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .composites::DD,57835
57835 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 22::CD,57839:CD,57843:CD,57845
57836 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .composites::JM,57843
57839 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,57843
57843 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 22::CD,57844:CD,57845
57844 :: NORM :: compound :: Z :: return #(1)::CF,57829
57845 :: NORM :: compound :: Z :: return #(0)::CF,57829
57852 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.getComposites()::CE,57853:CD,57859
57853 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMapping.getComposites()::JM,50974
57856 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .composites::DD,57859
57859 :: NORM :: compound :: Ljava/util/List :: return v3::CF,57853
57861 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.getProperty()::CE,57862:CD,57868
57862 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMapping.getProperty()::JM,50979:JM,51020
57865 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .property::DD,57868
57868 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57862
57879 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.access$21(org.apache.ibatis.mapping.ResultMap)::CE,57880:CD,57886
57880 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMap.access$21(org.apache.ibatis.mapping.ResultMap)::JM,51240
57883 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .constructorResultMappings::DD,57886
57886 :: NORM :: compound :: Ljava/util/List :: return v3::CF,57880
57888 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.access$22(org.apache.ibatis.mapping.ResultMap)::CE,57889:CD,57895
57889 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMap.access$22(org.apache.ibatis.mapping.ResultMap)::JM,51258
57892 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .propertyResultMappings::DD,57895
57895 :: NORM :: compound :: Ljava/util/List :: return v3::CF,57889
57897 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.access$23(org.apache.ibatis.mapping.ResultMap)::CE,57898:CD,57904
57898 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMap.access$23(org.apache.ibatis.mapping.ResultMap)::JM,51083:JM,51222
57901 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .idResultMappings::DD,57904
57904 :: NORM :: compound :: Ljava/util/List :: return v3::CF,57898
57906 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.argNamesOfMatchingConstructor(java.util.List)::CD,57918:CD,57922:CD,57959:CD,57961:JM,57937
57918 :: CALL :: call :: [Ljava/lang/reflect/Constructor :: v8 = v6.getDeclaredConstructors()::JM,57922
57922 :: EXPR :: assign :: I :: v9 = v8.length::DD,57959
57924 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v8[v25]::JM,57936:JM,57928
57928 :: CALL :: call :: [Ljava/lang/Class :: v13 = v11.getParameterTypes()::JM,57936:JM,57928
57932 :: CALL :: call :: I :: v15 = p1 $constructorArgNames .size()::JM,57937
57936 :: EXPR :: assign :: I :: v16 = v13.length::CF,57937
57937 :: PRED :: IF :: Z :: if (v15 != v16) goto 81::CD,57938:CD,57943:CD,57948:CD,57958:CD,57959:CD,57961
57938 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getArgNames(v11)::CL,61732
57943 :: CALL :: call :: Z :: v20 = p1 $constructorArgNames .containsAll(v18)::JM,57948
57948 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 81::CD,57949:CD,57956:CD,57958:CD,57959:CD,57961
57949 :: CALL :: call :: Z :: v22 = p0 $this .argTypesMatch(p1 $constructorArgNames , v13, v18)::JM,57956:CL,61897
57956 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 81::CD,57958:CD,57959:CD,57961
57958 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,57961
57959 :: PRED :: IF :: Z :: if (v25 < v9) goto 28::CD,57928:CD,57932:CD,57936:CD,57937
57961 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,57958:DD,57959
57994 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.getType()::CE,57995:CD,58001
57995 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.mapping.ResultMap.getType()::
57998 :: EXPR :: reference :: Ljava/lang/Class :: v3 = p0 $this .type::DD,58001
58001 :: NORM :: compound :: Ljava/lang/Class :: return v3::CF,57995
58085 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.checkLocallyForDiscriminatedNestedResultMaps(org.apache.ibatis.mapping.ResultMap)::CD,58090:CD,58094
58090 :: CALL :: call :: Z :: v5 = p1 $rm .hasNestedResultMaps()::JM,58094:CL,59220
58094 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 105::CD,58095:CD,58099
58095 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v8 = p1 $rm .getDiscriminator()::JM,58099:CL,62123
58099 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 105::CD,58104:CD,58108:CD,58112:CD,58151:CD,58155
58104 :: CALL :: call :: Ljava/util/Map :: v13 = v11.getDiscriminatorMap()::JM,58155:CL,62132
58108 :: CALL :: call :: Ljava/util/Set :: v15 = v13.entrySet()::JM,58155
58112 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,58155
58117 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,58155
58127 :: CALL :: call :: Z :: v27 = p0 $this .hasResultMap(v25)::JM,58132:CL,50554
58132 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 97::CD,58136:CD,58142:CD,58146:CD,58151:CD,58155
58136 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v25)::CL,51940
58142 :: CALL :: call :: Z :: v33 = v31.hasNestedResultMaps()::JM,58146:CL,59220
58146 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 97::CD,58151:CD,58155
58151 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,58155
58155 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 36::CD,58117:CD,58127:CD,58132:JM,58155
58178 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.checkGloballyForDiscriminatedNestedResultMaps(org.apache.ibatis.mapping.ResultMap)::CD,58183:CD,58187
58183 :: CALL :: call :: Z :: v5 = p1 $rm .hasNestedResultMaps()::JM,58187:CL,59220
58187 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 117::CD,58191:CD,58195:CD,58247:CD,58251
58188 :: EXPR :: reference :: Ljava/util/Map :: v7 = p0 $this .resultMaps::JM,58251:JM,58204
58191 :: CALL :: call :: Ljava/util/Set :: v9 = v7.entrySet()::JM,58251:JM,58204
58195 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,58251:JM,58204
58200 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,58251:JM,58204
58204 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,58209
58205 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.getValue()::JM,58209
58209 :: EXPR :: assign :: Z :: v19=v18 INSTANCEOF org.apache.ibatis.mapping.ResultMap::DD,58210
58210 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 109::CD,58212:CD,58216:JM,58251:JM,58204
58212 :: CALL :: call :: Z :: v22 = v20.hasNestedResultMaps()::JM,58216:CL,59220
58216 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 109::CD,58217:CD,58221:JM,58251:JM,58204
58217 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v24 = v20.getDiscriminator()::JM,58221:CL,62123
58221 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 109::CD,58226:CD,58230:CD,58238:JM,58251:JM,58204
58226 :: CALL :: call :: Ljava/util/Map :: v29 = v27.getDiscriminatorMap()::CL,62132
58230 :: CALL :: call :: Ljava/util/Collection :: v31 = v29.values()::
58238 :: CALL :: call :: Z :: v35 = v31.contains(v33)::
58247 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,58251:JM,58204
58251 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 26::CD,58200:CD,58204:CD,58205:CD,58209:CD,58210:CD,58247:JM,58251
58277 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.buildAllStatements()::CD,58284:CD,58288:CD,58316:CD,58320:CD,58348:CD,58352:CD,58379:CD,58383
58281 :: EXPR :: reference :: Ljava/util/Collection :: v3 = p0 $this .incompleteResultMaps::JM,58288
58284 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,58288
58288 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 49::CD,58296:CD,58300:CD,58305
58293 :: EXPR :: reference :: Ljava/util/Collection :: v8 = p0 $this .incompleteResultMaps::
58296 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::
58300 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.next()::
58305 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v15 = v13.resolve()::CL,42200
58313 :: EXPR :: reference :: Ljava/util/Collection :: v17 = p0 $this .incompleteCacheRefs::JM,58320
58316 :: CALL :: call :: Z :: v19 = v17.isEmpty()::JM,58320
58320 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 97::CD,58328:CD,58332:CD,58337
58325 :: EXPR :: reference :: Ljava/util/Collection :: v21 = p0 $this .incompleteCacheRefs::
58328 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::
58332 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.next()::
58337 :: CALL :: call :: Lorg/apache/ibatis/cache/Cache :: v28 = v26.resolveCacheRef()::CL,42252
58345 :: EXPR :: reference :: Ljava/util/Collection :: v30 = p0 $this .incompleteStatements::JM,58352
58348 :: CALL :: call :: Z :: v32 = v30.isEmpty()::JM,58352
58352 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 144::CD,58360:CD,58364:CD,58369
58357 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .incompleteStatements::
58360 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::
58364 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.next()::
58369 :: CALL :: call :: V :: v39.parseStatementNode()::CL,42279
58376 :: EXPR :: reference :: Ljava/util/Collection :: v42 = p0 $this .incompleteMethods::JM,58383
58379 :: CALL :: call :: Z :: v44 = v42.isEmpty()::JM,58383
58383 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 190::CD,58391:CD,58395:CD,58400
58388 :: EXPR :: reference :: Ljava/util/Collection :: v46 = p0 $this .incompleteMethods::
58391 :: CALL :: call :: Ljava/util/Iterator :: v48 = v46.iterator()::
58395 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.next()::
58400 :: CALL :: call :: V :: v51.resolve()::CL,54234
58451 :: ENTR :: entry :: null :: org.apache.ibatis.scripting.LanguageDriverRegistry.getDriver(java.lang.Class)::CD,58459
58459 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $cls )::
58468 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.getStringAttribute(org.w3c.dom.Node,java.lang.String)::CF,58469:CD,58474:CD,58478:CD,58483:CD,58487
58469 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.getStringAttribute(org.w3c.dom.Node,java.lang.String)::
58474 :: CALL :: call :: Lorg/w3c/dom/NamedNodeMap :: v6 = p1 $node .getAttributes()::JM,58483:JM,58487:JM,58474:JM,58478
58478 :: CALL :: call :: Lorg/w3c/dom/Node :: v8 = v6.getNamedItem(p2 $name )::JM,58483:JM,58487:JM,58474:JM,58478
58483 :: CALL :: call :: Ljava/lang/String :: v10 = v8.getNodeValue()::JM,58483:JM,58487
58487 :: NORM :: compound :: Ljava/lang/String :: return v10::CF,58469
58490 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.findSqlFragment(java.lang.String,java.util.Properties)::CD,58496:CD,58504:CD,58517:CD,58534:CD,58539:CD,58544:CD,58549
58496 :: CALL :: call :: Ljava/lang/String :: v6 = parse(p1 $refid , p2 $variables )::CL,40504
58504 :: CALL :: call :: Ljava/lang/String :: v10 = v7.applyCurrentNamespace(v6, #(1))::CL,46422
58517 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.get(v10)::CL,51940
58534 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
58539 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v10)::
58544 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#('))::
58549 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
58572 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLIncludeTransformer.getVariablesContext(org.w3c.dom.Node,java.util.Properties)::CD,58578:CD,58623:CD,58628:CD,58633:CD,58638:CD,58648:CD,58652:CD,58653:CD,58670:CD,58671:JM,58592:JM,58583:JM,58588
58578 :: CALL :: call :: Lorg/w3c/dom/NodeList :: v7 = p1 $node .getChildNodes()::JM,58592:JM,58578:JM,58583:JM,58648:JM,58652:JM,58588
58583 :: CALL :: call :: Lorg/w3c/dom/Node :: v12 = v7.item(v32)::JM,58592:JM,58583:JM,58648:JM,58652:JM,58588
58588 :: CALL :: call :: S :: v14 = v12.getNodeType()::JM,58592:JM,58652:JM,58588
58592 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 117::CF,58669:CD,58593:CD,58605:CD,58610:CD,58615:CD,58668
58593 :: CALL :: call :: Ljava/lang/String :: v18 = p0 $this .getStringAttribute(v12, #(name))::CL,58468
58605 :: CALL :: call :: Ljava/lang/String :: v23 = parse(v21, p2 $inheritedVariablesContext )::CL,40504
58610 :: PRED :: IF :: Z :: if (v31 != #(null)) goto 79::CF,58668:CF,58611
58611 :: NORM :: declaration :: Ljava/util/HashMap :: v24 = new java.util.HashMap::DD,58668
58615 :: CALL :: call :: Ljava/lang/Object :: v28 = v26.put(v18, v23)::
58623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
58628 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(v18)::
58633 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#( defined twice in the...))::
58638 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
58647 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v32 + #(1)::DD,58671:CF,58670
58648 :: CALL :: call :: I :: v10 = v7.getLength()::JM,58592:JM,58583:JM,58648:JM,58652:JM,58588
58652 :: PRED :: IF :: Z :: if (v32 < v10) goto 20::CD,58583:CD,58588:CD,58592:CD,58647:CD,58648:CD,58669:CD,58670:CD,58671:JM,58652:CF,58653
58653 :: PRED :: IF :: Z :: if (v31 != #(null)) goto 138::CF,58655:CD,58659:CD,58663
58655 :: NORM :: declaration :: Ljava/util/Properties :: v33 = new java.util.Properties::
58659 :: CALL :: call :: V :: v33.putAll(p2 $inheritedVariablesContext )::
58663 :: CALL :: call :: V :: v33.putAll(v31)::
58668 :: EXPR :: assign :: null :: PHI v26 = v31, v24::DD,58669
58669 :: EXPR :: assign :: null :: PHI v29 = v31, v26::DD,58670:CF,58647
58670 :: EXPR :: assign :: null :: PHI v31 = #(null), v29::CF,58671:DD,58610:DD,58653:DD,58668:DD,58669
58671 :: EXPR :: assign :: null :: PHI v32 = #(0), v30::JM,58592:JM,58583:JM,58648:JM,58588:DD,58647:DD,58652
58712 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLStatementBuilder.parseSelectKeyNode(java.lang.String,org.apache.ibatis.parsing.XNode,java.lang.Class,org.apache.ibatis.scripting.LanguageDriver,java.lang.String)::CD,58721:CD,58726:CD,58737:CD,58743:CD,58747:CD,58752:CD,58757:CD,58785:CD,58812:CD,58821:JM,59861:JM,59864:CD,58836
58721 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $nodeToHandle .getStringAttribute(#(resultType))::CL,33730
58726 :: CALL :: call :: Ljava/lang/Class :: v12 = p0 $this .resolveClass(v10)::CL,34113
58737 :: CALL :: call :: Ljava/lang/String :: v18 = p2 $nodeToHandle .getStringAttribute(#(statementType), v16)::CL,36851
58743 :: CALL :: call :: Lorg/apache/ibatis/mapping/StatementType :: v20 = valueOf(v18)::CL,46218
58747 :: CALL :: call :: Ljava/lang/String :: v23 = p2 $nodeToHandle .getStringAttribute(#(keyProperty))::CL,33730
58752 :: CALL :: call :: Ljava/lang/String :: v26 = p2 $nodeToHandle .getStringAttribute(#(keyColumn))::CL,33730
58757 :: CALL :: call :: Ljava/lang/String :: v31 = p2 $nodeToHandle .getStringAttribute(#(order), #(AFTER))::CL,36851
58785 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v43 = v41.addMappedStatement(p1 $id , v39, v20, v40, #(null), #(null), #(null), p3 $parameterTypeClass , #(null), v12, #(null), #(0), #(0), #(0), v35, v23, v26, p5 $databaseId , p4 $langDriver , #(null))::CL,46583
58812 :: CALL :: call :: Ljava/lang/String :: v46 = v44.applyCurrentNamespace(p1 $id , #(0))::CL,46422
58821 :: CALL :: call :: Lorg/apache/ibatis/mapping/MappedStatement :: v49 = v47.getMappedStatement(v46, #(0))::CL,51494
58836 :: CALL :: call :: V :: v50.addKeyGenerator(v46, v51)::CL,59873
58923 :: ENTR :: entry :: null :: org.apache.ibatis.parsing.XNode.getParent()::CE,58924:CD,58930:CD,58934
58924 :: EXIT :: exit :: Lorg/apache/ibatis/parsing/XNode :: org.apache.ibatis.parsing.XNode.getParent()::JM,56794
58927 :: EXPR :: reference :: Lorg/w3c/dom/Node :: v3 = p0 $this .node::JM,58930:JM,58934:JM,58935
58930 :: CALL :: call :: Lorg/w3c/dom/Node :: v5 = v3.getParentNode()::JM,58930:JM,58934:JM,58935
58934 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 22::CD,58935:CD,58936:CD,58937
58935 :: EXPR :: assign :: Z :: v7=v5 INSTANCEOF org.w3c.dom.Element::DD,58936
58936 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 23::CF,58938:CD,58937:JM,33637:JM,33629:CD,58951
58937 :: NORM :: compound :: Lorg/apache/ibatis/parsing/XNode :: return #(null)::DD,58924
58938 :: NORM :: declaration :: Lorg/apache/ibatis/parsing/XNode :: v9 = new org.apache.ibatis.parsing.XNode::DD,58951
58951 :: NORM :: compound :: Lorg/apache/ibatis/parsing/XNode :: return v9::DD,58924
58981 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$0(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.session.Configuration)::JM,58986
58986 :: EXPR :: modify :: Lorg/apache/ibatis/session/Configuration :: p1 $null .configuration = p2 $null ::
58992 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$1(org.apache.ibatis.mapping.MappedStatement,java.lang.String)::JM,58997
58997 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .id = p2 $null ::
59003 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$2(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.mapping.SqlSource)::JM,59008
59008 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlSource :: p1 $null .sqlSource = p2 $null ::
59014 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$3(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.mapping.StatementType)::JM,59019
59019 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/StatementType :: p1 $null .statementType = p2 $null ::
59025 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$4(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.mapping.ParameterMap)::JM,59030
59030 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ParameterMap :: p1 $null .parameterMap = p2 $null ::
59036 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$5(org.apache.ibatis.mapping.MappedStatement,java.util.List)::JM,59041
59041 :: EXPR :: modify :: Ljava/util/List :: p1 $null .resultMaps = p2 $null ::
59047 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$6(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.mapping.SqlCommandType)::JM,59052
59052 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/SqlCommandType :: p1 $null .sqlCommandType = p2 $null ::
59058 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$7(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.executor.keygen.KeyGenerator)::JM,59063
59063 :: EXPR :: modify :: Lorg/apache/ibatis/executor/keygen/KeyGenerator :: p1 $null .keyGenerator = p2 $null ::
59069 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getLogPrefix()::CE,59070:CD,59076
59070 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.session.Configuration.getLogPrefix()::JM,52154
59073 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .logPrefix::DD,59076
59076 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,59070
59078 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$8(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.logging.Log)::JM,59083
59083 :: EXPR :: modify :: Lorg/apache/ibatis/logging/Log :: p1 $null .statementLog = p2 $null ::
59089 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getDefaultScriptingLanguageInstance()::CD,59096
59096 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v5 = v3.getDefaultDriver()::CL,62151
59102 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$9(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.scripting.LanguageDriver)::JM,59107
59107 :: EXPR :: modify :: Lorg/apache/ibatis/scripting/LanguageDriver :: p1 $null .lang = p2 $null ::
59113 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$10(org.apache.ibatis.mapping.MappedStatement,java.lang.String)::JM,59118
59118 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .resource = p2 $null ::
59124 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$14(org.apache.ibatis.mapping.MappedStatement,java.lang.Integer)::JM,59129
59129 :: EXPR :: modify :: Ljava/lang/Integer :: p1 $null .fetchSize = p2 $null ::
59135 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$15(org.apache.ibatis.mapping.MappedStatement,java.lang.Integer)::JM,59140
59140 :: EXPR :: modify :: Ljava/lang/Integer :: p1 $null .timeout = p2 $null ::
59146 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$21(java.lang.String)::CD,59150
59150 :: CALL :: call :: [Ljava/lang/String :: v4 = delimitedStringToArray(p1 $null )::CL,62167
59156 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$22(org.apache.ibatis.mapping.MappedStatement,java.lang.String[])::JM,59161
59161 :: EXPR :: modify :: [Ljava/lang/String :: p1 $null .keyProperties = p2 $null ::
59167 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$23(org.apache.ibatis.mapping.MappedStatement,java.lang.String[])::JM,59172
59172 :: EXPR :: modify :: [Ljava/lang/String :: p1 $null .keyColumns = p2 $null ::
59178 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$24(org.apache.ibatis.mapping.MappedStatement,java.lang.String)::JM,59183
59183 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .databaseId = p2 $null ::
59189 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$20(org.apache.ibatis.mapping.MappedStatement,boolean)::JM,59194
59194 :: EXPR :: modify :: Z :: p1 $null .resultOrdered = p2 $null ::
59200 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$25(org.apache.ibatis.mapping.MappedStatement,java.lang.String[])::JM,59205
59205 :: EXPR :: modify :: [Ljava/lang/String :: p1 $null .resultSets = p2 $null ::
59220 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.hasNestedResultMaps()::CE,59221:CD,59227
59221 :: EXIT :: exit :: Z :: org.apache.ibatis.mapping.ResultMap.hasNestedResultMaps()::JM,58094:JM,58146:JM,58187:JM,58216
59224 :: EXPR :: reference :: Z :: v3 = p0 $this .hasNestedResultMaps::DD,59227
59227 :: NORM :: compound :: Z :: return v3::CF,59221
59229 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$13(org.apache.ibatis.mapping.MappedStatement,boolean)::JM,59234
59234 :: EXPR :: modify :: Z :: p1 $null .hasNestedResultMaps = p2 $null ::
59240 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$16(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.mapping.ResultSetType)::JM,59245
59245 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/ResultSetType :: p1 $null .resultSetType = p2 $null ::
59251 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$18(org.apache.ibatis.mapping.MappedStatement,boolean)::JM,59256
59256 :: EXPR :: modify :: Z :: p1 $null .flushCacheRequired = p2 $null ::
59262 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$19(org.apache.ibatis.mapping.MappedStatement,boolean)::JM,59267
59267 :: EXPR :: modify :: Z :: p1 $null .useCache = p2 $null ::
59273 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$17(org.apache.ibatis.mapping.MappedStatement,org.apache.ibatis.cache.Cache)::JM,59278
59278 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p1 $null .cache = p2 $null ::
59284 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.getParameterMap(java.lang.String)::CE,59285:CD,59292:CD,59297:CD,59298
59285 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ParameterMap :: org.apache.ibatis.session.Configuration.getParameterMap(java.lang.String)::JM,52805
59292 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,59297:CL,51940
59297 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,59298
59298 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ParameterMap :: return v7::DD,59285
59337 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.access$29(org.apache.ibatis.mapping.MappedStatement)::CE,59338:CD,59344
59338 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.MappedStatement.access$29(org.apache.ibatis.mapping.MappedStatement)::JM,52923
59341 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .resultMaps::DD,59344
59344 :: NORM :: compound :: Ljava/util/List :: return v3::CF,59338
59355 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlAnnotationType(java.lang.reflect.Method)::CE,59356:CD,59363:CD,59369
59356 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlAnnotationType(java.lang.reflect.Method)::JM,53486:JM,53636
59363 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .chooseAnnotationType(p1 $method , v4)::JM,59369:CL,62195
59369 :: NORM :: compound :: Ljava/lang/Class :: return v6::DD,59356
59373 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlProviderAnnotationType(java.lang.reflect.Method)::CE,59374:CD,59381:CD,59387
59374 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlProviderAnnotationType(java.lang.reflect.Method)::JM,53544:JM,53642
59381 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .chooseAnnotationType(p1 $method , v4)::JM,59387:CL,62195
59387 :: NORM :: compound :: Ljava/lang/Class :: return v6::DD,59374
59391 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(java.lang.String[],java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::CE,59392:CD,59398:CD,59402:CD,59419:CD,59423:CD,59427:CD,59431:CD,59438:CD,59439
59392 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/SqlSource :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(java.lang.String[],java.lang.Class,org.apache.ibatis.scripting.LanguageDriver)::JM,53543
59398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::JM,59431:JM,59438
59402 :: EXPR :: assign :: I :: v8 = p1 $strings .length::DD,59419
59404 :: EXPR :: reference :: Ljava/lang/Object :: v10 = p1 $strings [v18]::
59408 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v6.append(v10)::
59413 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v6.append(#( ))::
59418 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,59439
59419 :: PRED :: IF :: Z :: if (v18 < v8) goto 26::CD,59408:CD,59413:CD,59418:CD,59439
59420 :: EXPR :: reference :: Lorg/apache/ibatis/session/Configuration :: v19 = p0 $this .configuration::JM,59438
59423 :: CALL :: call :: Ljava/lang/String :: v21 = v6.toString()::JM,59431:JM,59438
59427 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,59431:JM,59438
59431 :: CALL :: call :: Lorg/apache/ibatis/mapping/SqlSource :: v25 = p3 $languageDriver .createSqlSource(v19, v23, p2 $parameterTypeClass )::JM,59431:JM,59438:JM,59398
59438 :: NORM :: compound :: Lorg/apache/ibatis/mapping/SqlSource :: return v25::DD,59392
59439 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,59418:DD,59419
59476 :: EXPR :: modify :: Lorg/apache/ibatis/session/Configuration :: p0 $this .configuration = p1 $configuration ::
59479 :: NORM :: declaration :: Lorg/apache/ibatis/builder/SqlSourceBuilder :: v8 = new org.apache.ibatis.builder.SqlSourceBuilder::DD,59484
59484 :: EXPR :: modify :: Lorg/apache/ibatis/builder/SqlSourceBuilder :: p0 $this .sqlSourceParser = v8::
59487 :: CALL :: call :: Ljava/lang/Class :: v11 = p2 $provider .getClass()::JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59491 :: NORM :: declaration :: [Ljava/lang/Class :: v14 = new java.lang.Class[]::JM,59505:JM,27777:JM,59492:JM,59527:JM,59514
59492 :: CALL :: call :: Ljava/lang/reflect/Method :: v16 = v11.getMethod(#(type), v14)::JM,59505:JM,27777:JM,59492:JM,59527:JM,59514
59498 :: NORM :: declaration :: [Ljava/lang/Object :: v17 = new java.lang.Object[]::JM,59514:JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,59509:JM,27783:JM,59527:JM,59499
59499 :: CALL :: call :: Ljava/lang/Object :: v19 = v16.invoke(p2 $provider , v17)::JM,59514:JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,59509:JM,27783:JM,59527:JM,59499:JM,59487
59505 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,59506
59506 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .providerType = v20::
59509 :: CALL :: call :: Ljava/lang/Class :: v22 = p2 $provider .getClass()::JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59513 :: NORM :: declaration :: [Ljava/lang/Class :: v24 = new java.lang.Class[]::JM,27777:JM,59492:JM,59527:JM,59514
59514 :: CALL :: call :: Ljava/lang/reflect/Method :: v26 = v22.getMethod(#(method), v24)::JM,27777:JM,59492:JM,59527:JM,59514
59520 :: NORM :: declaration :: [Ljava/lang/Object :: v27 = new java.lang.Object[]::JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,27783:JM,59527:JM,59514:JM,59499
59521 :: CALL :: call :: Ljava/lang/Object :: v29 = v26.invoke(p2 $provider , v27)::JM,59521:JM,27793:JM,59505:JM,27777:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59527 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::JM,59545:JM,59550
59528 :: EXPR :: reference :: Ljava/lang/Class :: v31 = p0 $this .providerType::JM,59531:JM,59535
59531 :: CALL :: call :: [Ljava/lang/reflect/Method :: v33 = v31.getMethods()::JM,59531:JM,59535
59535 :: EXPR :: assign :: I :: v34 = v33.length::DD,59627
59537 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v33[v53]::JM,59541:JM,59545:JM,59550:JM,59556:JM,59551:DD,59603:JM,59619:JM,59623
59541 :: CALL :: call :: Ljava/lang/String :: v37 = v35.getName()::JM,59541:JM,59545:JM,59550
59545 :: CALL :: call :: Z :: v39 = v30.equals(v37)::JM,59545:JM,59550
59550 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 208::CD,59551:CD,59555:CD,59556:CF,59626
59551 :: CALL :: call :: Ljava/lang/Class :: v41 = v35.getReturnType()::JM,59556:JM,59551
59555 :: EXPR :: assign :: Ljava/lang/Class :: v42 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::CF,59556
59556 :: PRED :: IF :: Z :: if (v41 != v42) goto 208::JM,62352:JM,62337:JM,62338:JM,62262:JM,62266:JM,62270:CD,59612:CD,59619:CF,59626
59562 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::JM,59521:JM,27793:JM,59505:JM,27777:JM,59476:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59567 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v30)::
59572 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(' is found multiple i...))::
59577 :: EXPR :: reference :: Ljava/lang/Class :: v119 = p0 $this .providerType::
59580 :: CALL :: call :: Ljava/lang/String :: v121 = v119.getName()::
59584 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v118.append(v121)::
59589 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#('. Sql provider metho...))::
59594 :: CALL :: call :: Ljava/lang/String :: v128 = v126.toString()::
59603 :: EXPR :: modify :: Ljava/lang/reflect/Method :: p0 $this .providerMethod = v35::
59612 :: CALL :: call :: [Ljava/lang/String :: v48 = v45.getNames()::JM,59616:CL,62407
59616 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .providerMethodArgumentNames = v48::
59619 :: CALL :: call :: [Ljava/lang/Class :: v50 = v35.getParameterTypes()::JM,59619:JM,59623
59623 :: EXPR :: modify :: [Ljava/lang/Class :: p0 $this .providerMethodParameterTypes = v50::
59626 :: EXPR :: assign :: Ljava/lang/Object :: v52 = v53 + #(1)::DD,59785
59627 :: PRED :: IF :: Z :: if (v53 < v34) goto 98::CD,59541:CD,59545:CD,59550:CD,59626:CD,59785
59631 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v132 = new java.lang.StringBuilder::JM,59521:JM,27793:JM,59505:JM,27777:JM,59476:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59636 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v132.append(v130)::
59641 :: CALL :: call :: Ljava/lang/String :: v138 = v136.toString()::
59656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::JM,59521:JM,27793:JM,59505:JM,27777:JM,59476:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59661 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v30)::
59666 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(' not found in SqlPro...))::
59671 :: EXPR :: reference :: Ljava/lang/Class :: v100 = p0 $this .providerType::
59674 :: CALL :: call :: Ljava/lang/String :: v102 = v100.getName()::
59678 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v99.append(v102)::
59683 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#('.))::
59688 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
59698 :: EXPR :: reference :: [Ljava/lang/Class :: v57 = p0 $this .providerMethodParameterTypes::
59701 :: EXPR :: reference :: Ljava/lang/Object :: v58 = v57[v66]::DD,59706
59705 :: EXPR :: assign :: Ljava/lang/Class :: v59 = metadata <Application,Lorg/apache/ibatis/builder/annotation/ProviderContext>-><Primordial,Ljava/lang/Class>::CF,59706
59706 :: PRED :: IF :: Z :: if (v58 != v59) goto 409::CD,59760:JM,62437:JM,62440:CD,59769:CF,59776
59712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::JM,59521:JM,27793:JM,59505:JM,27777:JM,59476:JM,59492:JM,59509:JM,27783:JM,59527:JM,59514:JM,59499:JM,59487
59717 :: EXPR :: reference :: Ljava/lang/Class :: v72 = p0 $this .providerType::
59720 :: CALL :: call :: Ljava/lang/String :: v74 = v72.getName()::
59724 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
59729 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#(.))::
59734 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v80 = p0 $this .providerMethod::
59737 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getName()::
59741 :: CALL :: call :: Ljava/lang/StringBuilder :: v84 = v79.append(v82)::
59746 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v84.append(#(). ProviderContext ca...))::
59751 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
59760 :: NORM :: declaration :: Lorg/apache/ibatis/builder/annotation/ProviderContext :: v61 = new org.apache.ibatis.builder.annotation.ProviderContext::DD,59766
59766 :: EXPR :: modify :: Lorg/apache/ibatis/builder/annotation/ProviderContext :: p0 $this .providerContext = v61::
59769 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v66)::JM,59773
59773 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .providerContextIndex = v64::
59776 :: EXPR :: assign :: Ljava/lang/Object :: v65 = v66 + #(1)::DD,59786
59777 :: EXPR :: reference :: [Ljava/lang/Class :: v55 = p0 $this .providerMethodParameterTypes::DD,59780
59780 :: EXPR :: assign :: I :: v56 = v55.length::CF,59781
59781 :: PRED :: IF :: Z :: if (v66 < v56) goto 314::CD,59705:CD,59706:CD,59776:CD,59780:CD,59786
59785 :: EXPR :: assign :: null :: PHI v53 = #(0), v52::DD,59626:DD,59627
59786 :: EXPR :: assign :: null :: PHI v66 = #(0), v65::JM,59773:DD,59776:DD,59781
59861 :: EXPR :: modify :: Z :: p0 $this .executeBefore = p2 $executeBefore ::
59864 :: EXPR :: modify :: Lorg/apache/ibatis/mapping/MappedStatement :: p0 $this .keyStatement = p1 $keyStatement ::
59873 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.addKeyGenerator(java.lang.String,org.apache.ibatis.executor.keygen.KeyGenerator)::CD,59882
59882 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $id , p2 $keyGenerator )::CL,50489
59893 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.generateResultMapName(java.lang.reflect.Method)::CD,59898:CD,59899:CD,59904:CD,59905:JM,59954:JM,59958:JM,60011
59898 :: EXPR :: assign :: Ljava/lang/Class :: v4 = metadata <Application,Lorg/apache/ibatis/annotations/Results>-><Primordial,Ljava/lang/Class>::JM,59904:JM,59954:JM,59958:JM,59898:JM,60011:JM,59899
59899 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v6 = p1 $method .getAnnotation(v4)::JM,59904:JM,59954:JM,59958:JM,59898:JM,60011:JM,59899
59904 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,59905:JM,59906:JM,59910:JM,59914:JM,59936
59905 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 63::CF,59950:CD,59906:CD,59910:CD,59914:CD,59954:CD,59958:CD,59979:CD,59980:CD,59984:CD,59990:CD,59998:CD,60006:CD,60011:CD,60015:CD,60020:CD,60025:CD,60030
59906 :: CALL :: call :: Ljava/lang/String :: v10 = v7.id()::JM,59906:JM,59910:JM,59914
59910 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,59910:JM,59914
59914 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 63::CF,59950:CF,59915:CD,59923:CD,59931:CD,59936:CD,59940:CD,59945:CD,59954:CD,59958:CD,59979:CD,59980:CD,59984:CD,59990:CD,59998:CD,60006:CD,60011:CD,60015:CD,60020:CD,60025:CD,60030
59915 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
59923 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v56)::
59931 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v53.append(#(.))::
59936 :: CALL :: call :: Ljava/lang/String :: v63 = v7.id()::JM,59936
59940 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v63)::
59945 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
59950 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,59984
59954 :: CALL :: call :: [Ljava/lang/Class :: v17 = p1 $method .getParameterTypes()::JM,59904:JM,59954:JM,59958:JM,59898:JM,60011:JM,59899
59958 :: EXPR :: assign :: I :: v18 = v17.length::DD,59979
59960 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v17[v29]::JM,59969
59964 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v14.append(#(-))::
59969 :: CALL :: call :: Ljava/lang/String :: v24 = v19.getSimpleName()::JM,59969
59973 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v14.append(v24)::
59978 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,60030
59979 :: PRED :: IF :: Z :: if (v29 < v18) goto 91::CD,59964:CD,59969:CD,59973:CD,59978:CD,60030:JM,59984
59980 :: CALL :: call :: I :: v31 = v14.length()::JM,59984
59984 :: PRED :: IF :: Z :: if (v31 >= #(1)) goto 138::CF,59990:CD,59985
59985 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v14.append(#(-void))::
59990 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
59998 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v38)::
60006 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v35.append(#(.))::
60011 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $method .getName()::JM,59904:JM,59954:JM,59958:JM,59898:JM,60011:JM,59899
60015 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
60020 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(v14)::
60025 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
60030 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,59978:DD,59979
60108 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResultMap(java.lang.String,java.lang.Class,org.apache.ibatis.annotations.Arg[],org.apache.ibatis.annotations.Result[],org.apache.ibatis.annotations.TypeDiscriminator)::CD,60117:CD,60121:CD,60127:CD,60133:CD,60143:CD,60153
60117 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::
60121 :: CALL :: call :: V :: p0 $this .applyConstructorArgs(p3 $args , p2 $returnType , v8)::CL,62449
60127 :: CALL :: call :: V :: p0 $this .applyResults(p4 $results , p2 $returnType , v8)::CL,62642
60133 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v13 = p0 $this .applyDiscriminator(p1 $resultMapId , p2 $returnType , p5 $discriminator )::CL,62828
60143 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v17 = v14.addResultMap(p1 $resultMapId , p2 $returnType , #(null), v13, v8, #(null))::CL,45785
60153 :: CALL :: call :: V :: p0 $this .createDiscriminatorResultMaps(p1 $resultMapId , p2 $returnType , p5 $discriminator )::CL,62994
60187 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveReturnType(java.lang.reflect.Method,java.lang.reflect.Type)::CE,60188:CD,60192:CD,60200:CD,60206
60188 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.resolveReturnType(java.lang.reflect.Method,java.lang.reflect.Type)::JM,53987:JM,54020:JM,54022
60192 :: CALL :: call :: Ljava/lang/reflect/Type :: v5 = p1 $method .getGenericReturnType()::
60200 :: CALL :: call :: Ljava/lang/reflect/Type :: v9 = resolveType(v5, p2 $srcType , v7)::JM,60206:CL,60444
60206 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v9::DD,60188
60233 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getSignature(java.lang.reflect.Method)::CD,60238:CD,60242:CD,60246:CD,60261:CD,60265:CD,60270:CD,60301:CD,60302:CD,60303:CD,60308:JM,60247
60238 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
60242 :: CALL :: call :: Ljava/lang/Class :: v7 = p1 $method .getReturnType()::JM,60242:JM,60261:JM,60246:JM,60247:JM,60301:JM,60270
60246 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 33::CD,60247:CD,60251:CD,60256:JM,60301:JM,60242:JM,60261:JM,60246:JM,60270
60247 :: CALL :: call :: Ljava/lang/String :: v10 = v7.getName()::JM,60247:JM,60301
60251 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(v10)::
60256 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#(35))::
60261 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $method .getName()::JM,60242:JM,60261:JM,60246:JM,60247:JM,60301:JM,60270
60265 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v4.append(v17)::JM,60247:JM,60301
60270 :: CALL :: call :: [Ljava/lang/Class :: v21 = p1 $method .getParameterTypes()::JM,60242:JM,60261:JM,60246:JM,60247:JM,60301:JM,60270
60275 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 70::CD,60276:CD,60282
60276 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v4.append(#(58))::
60282 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v4.append(#(44))::
60287 :: EXPR :: reference :: Ljava/lang/Object :: v30 = v21[v37]::JM,60291
60291 :: CALL :: call :: Ljava/lang/String :: v32 = v30.getName()::JM,60291
60295 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v4.append(v32)::
60300 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v37 + #(1)::DD,60308
60301 :: EXPR :: assign :: I :: v23 = v21.length::CF,60302
60302 :: PRED :: IF :: Z :: if (v37 < v23) goto 54::CD,60275:CD,60291:CD,60295:CD,60300:CD,60301:CD,60308
60303 :: CALL :: call :: Ljava/lang/String :: v39 = v4.toString()::
60308 :: EXPR :: assign :: null :: PHI v37 = #(0), v36::DD,60275:DD,60300:DD,60302:CF,60301
60351 :: EXPR :: modify :: Ljava/lang/reflect/Method :: p0 $this .method = p1 $method ::
60354 :: CALL :: call :: [Ljava/lang/Class :: v6 = p1 $method .getParameterTypes()::JM,60358:JM,60376
60358 :: EXPR :: assign :: I :: v7 = v6.length::DD,60359
60359 :: PRED :: IF :: Z :: if (v7 != #(1)) goto 33::CD,60360:CD,60372:JM,60358:JM,60376
60360 :: CALL :: call :: [Ljava/lang/Class :: v12 = p1 $method .getParameterTypes()::JM,60358:JM,60376
60364 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v12[#(0)]::DD,60368
60368 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .type = v14::
60372 :: CALL :: call :: Ljava/lang/Class :: v10 = p1 $method .getReturnType()::JM,60358:JM,60376
60376 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .type = v10::
60390 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveParamTypes(java.lang.reflect.Method,java.lang.reflect.Type)::CD,60395:CD,60421:CD,60422:CD,60424
60395 :: CALL :: call :: [Ljava/lang/reflect/Type :: v5 = p1 $method .getGenericParameterTypes()::JM,60421
60410 :: CALL :: call :: Ljava/lang/reflect/Type :: v14 = resolveType(v12, p2 $srcType , v7)::CL,60444
60420 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,60424
60421 :: EXPR :: assign :: I :: v11 = v5.length::CF,60422
60422 :: PRED :: IF :: Z :: if (v17 < v11) goto 30::CD,60410:CD,60420:CD,60421:CD,60424
60424 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,60420:DD,60422:CF,60421
60444 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveType(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class)::CE,60445:CD,60450:CD,60451:JM,60480:JM,60470:JM,60460
60445 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.resolveType(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class)::JM,60206
60450 :: EXPR :: assign :: Z :: v5=p1 $type  INSTANCEOF java.lang.reflect.TypeVariable::DD,60451
60451 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 18::CD,60453:CD,60459:CD,60460:CD,60461
60453 :: CALL :: call :: Ljava/lang/reflect/Type :: v17 = resolveTypeVar(v15, p2 $srcType , p3 $declaringClass )::JM,60459:CL,63237
60459 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v17::DD,60445
60460 :: EXPR :: assign :: Z :: v7=p1 $type  INSTANCEOF java.lang.reflect.ParameterizedType::DD,60461
60461 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 35::CD,60463:CD,60469:CD,60470:CD,60471
60463 :: CALL :: call :: Ljava/lang/reflect/ParameterizedType :: v14 = resolveParameterizedType(v12, p2 $srcType , p3 $declaringClass )::JM,60469:CL,63390
60469 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v14::DD,60445
60470 :: EXPR :: assign :: Z :: v8=p1 $type  INSTANCEOF java.lang.reflect.GenericArrayType::DD,60471
60471 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 52::CD,60473:CD,60479:CD,60480
60473 :: CALL :: call :: Ljava/lang/reflect/Type :: v11 = resolveGenericArrayType(v9, p2 $srcType , p3 $declaringClass )::JM,60479:CL,63541
60479 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v11::DD,60445
60480 :: NORM :: compound :: Ljava/lang/reflect/Type :: return p1 $type ::DD,60445
60497 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.GenericArrayTypeImpl.getGenericComponentType()::CE,60498:CD,60504
60498 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.GenericArrayTypeImpl.getGenericComponentType()::JM,55171:JM,55173
60501 :: EXPR :: reference :: Ljava/lang/reflect/Type :: v3 = p0 $this .genericComponentType::DD,60504
60504 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v3::CF,60498
60542 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.getBaseCacheConstructor(java.lang.Class)::CE,60543:CD,60553:CD,60558:CD,60565:CD,60580
60543 :: EXIT :: exit :: Ljava/lang/reflect/Constructor :: org.apache.ibatis.mapping.CacheBuilder.getBaseCacheConstructor(java.lang.Class)::JM,55608:JM,55613
60553 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v9 = p1 $cacheClass .getConstructor(v5)::JM,60558
60558 :: NORM :: compound :: Ljava/lang/reflect/Constructor :: return v9::DD,60543
60565 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(p1 $cacheClass )::
60580 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v22.append(v10)::
60615 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.SystemMetaObject.forObject(java.lang.Object)::JM,19190:CD,60627
60627 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v8 = forObject(p1 $object , v3, v4, v5)::CL,19203
60639 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.hasSetter(java.lang.String)::CE,60640:CD,60647:CD,60652
60640 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.MetaObject.hasSetter(java.lang.String)::JM,55700:JM,56070:JM,63717
60647 :: CALL :: call :: Z :: v6 = v4.hasSetter(p1 $name )::JM,60652:CL,63656:CL,63646:CL,63639
60652 :: NORM :: compound :: Z :: return v6::DD,60640
60655 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.getSetterType(java.lang.String)::CE,60656:CD,60663:CD,60668
60656 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.MetaObject.getSetterType(java.lang.String)::JM,55776:JM,55746:JM,55778:JM,55716:JM,55748:JM,55718:JM,55791:JM,55761:JM,55793:JM,55731:JM,55763:JM,55733:JM,55707:JM,63789:JM,63889
60663 :: CALL :: call :: Ljava/lang/Class :: v6 = v4.getSetterType(p1 $name )::JM,60668:CL,63841:CL,63748:CL,63831
60668 :: NORM :: compound :: Ljava/lang/Class :: return v6::DD,60656
60671 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.setValue(java.lang.String,java.lang.Object)::JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,60682:CD,60686:JM,60699
60682 :: CALL :: call :: Z :: v8 = v5.hasNext()::JM,60686:CL,36998
60686 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 77::CD,60691:CD,60696:CD,60698:CD,60732
60691 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v15 = p0 $this .metaObjectForProperty(v13)::JM,60698:CL,63924
60696 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v16 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,60698
60698 :: PRED :: IF :: Z :: if (v15 != v16) goto 66::CD,60699:CD,60723
60699 :: PRED :: IF :: Z :: if (p2 $value  != #(null)) goto 47::CD,60700:CD,60704:CD,60712:CD,60723
60700 :: CALL :: call :: Ljava/lang/String :: v19 = v5.getChildren()::JM,60704:CL,37068
60704 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 47::CD,60712:CD,60723
60712 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v23 = v20.instantiatePropertyValue(p1 $name , v5, v21)::CL,63958:CL,64089
60723 :: CALL :: call :: V :: v24.setValue(v26, p2 $value )::CL,60671
60732 :: CALL :: call :: V :: v10.set(v5, p2 $value )::CL,64221:CL,64155
60775 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.CacheBuilder.getCacheDecoratorConstructor(java.lang.Class)::CD,60786:CD,60798:CD,60813
60786 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v9 = p1 $cacheClass .getConstructor(v5)::
60798 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(p1 $cacheClass )::
60813 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v22.append(v10)::
60841 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .delegate = p1 $delegate ::
60844 :: EXPR :: modify :: J :: p0 $this .clearInterval = #(3600000 l)::
60847 :: CALL :: call :: J :: v7 = currentTimeMillis()::JM,60850
60850 :: EXPR :: modify :: J :: p0 $this .lastClear = v7::
60860 :: ENTR :: entry :: null :: org.apache.ibatis.cache.decorators.ScheduledCache.setClearInterval(long)::JM,60865
60865 :: EXPR :: modify :: J :: p0 $this .clearInterval = p1 $clearInterval ::
60879 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .delegate = p1 $delegate ::
60894 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .delegate = p1 $delegate ::
60909 :: EXPR :: modify :: Lorg/apache/ibatis/cache/Cache :: p0 $this .delegate = p1 $delegate ::
60912 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v5 = new java.util.concurrent.ConcurrentHashMap::JM,60909:DD,60916
60916 :: EXPR :: modify :: Ljava/util/concurrent/ConcurrentHashMap :: p0 $this .locks = v5::
60951 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.metaClassForProperty(org.apache.ibatis.reflection.property.PropertyTokenizer)::CD,60956:CD,60964
60956 :: CALL :: call :: Ljava/lang/Class :: v5 = p0 $this .getGetterType(p1 $prop )::CL,60975
60964 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v8 = forClass(v5, v6)::CL,26950
60975 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getGetterType(org.apache.ibatis.reflection.property.PropertyTokenizer)::CD,60987:CD,60992:CD,60996
60987 :: CALL :: call :: Ljava/lang/Class :: v8 = v4.getGetterType(v6)::JM,60998:JM,61003:CL,40596
60992 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $prop .getIndex()::JM,60996:CL,64272
60996 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 108::CF,60997:CD,60998:CD,61003
60997 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Ljava/util/Collection>-><Primordial,Ljava/lang/Class>::JM,60998:JM,61003
60998 :: CALL :: call :: Z :: v14 = v12.isAssignableFrom(v8)::JM,60998:JM,61003
61003 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 108::CD,61008
61008 :: CALL :: call :: Ljava/lang/reflect/Type :: v19 = p0 $this .getGenericGetterType(v17)::CL,64281
61084 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.access$14(org.apache.ibatis.mapping.ParameterMapping)::CE,61085:CD,61091
61085 :: EXIT :: exit :: Lorg/apache/ibatis/type/TypeHandler :: org.apache.ibatis.mapping.ParameterMapping.access$14(org.apache.ibatis.mapping.ParameterMapping)::JM,56446
61088 :: EXPR :: reference :: Lorg/apache/ibatis/type/TypeHandler :: v3 = p1 $null .typeHandler::DD,61091
61091 :: NORM :: compound :: Lorg/apache/ibatis/type/TypeHandler :: return v3::CF,61085
61093 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.access$11(org.apache.ibatis.mapping.ParameterMapping)::CE,61094:CD,61100
61094 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.mapping.ParameterMapping.access$11(org.apache.ibatis.mapping.ParameterMapping)::JM,56454
61097 :: EXPR :: reference :: Ljava/lang/Class :: v3 = p1 $null .javaType::DD,61100
61100 :: NORM :: compound :: Ljava/lang/Class :: return v3::CF,61094
61120 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getTypeHandler(java.lang.Class,org.apache.ibatis.type.JdbcType)::CD,61126
61126 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v6 = p0 $this .getTypeHandler(p1 $type , p2 $jdbcType )::CL,64386
61145 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ParameterMapping.access$13(org.apache.ibatis.mapping.ParameterMapping)::CE,61146:CD,61152
61146 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ParameterMapping.access$13(org.apache.ibatis.mapping.ParameterMapping)::
61149 :: EXPR :: reference :: Ljava/lang/String :: v3 = p1 $null .property::DD,61152
61152 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,61146
61163 :: ENTR :: entry :: null :: org.apache.ibatis.builder.xml.XMLMapperBuilder.processNestedResultMappings(org.apache.ibatis.parsing.XNode,java.util.List)::CD,61169:CD,61173:CD,61178
61169 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $context .getName()::JM,61178:CL,34052
61173 :: CALL :: call :: Z :: v9 = #(association).equals(v7)::JM,61178
61178 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 43::CD,61179:CD,61183:CD,61188:CD,61199:CD,61204
61179 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $context .getName()::JM,61188:CL,34052
61183 :: CALL :: call :: Z :: v15 = #(collection).equals(v13)::JM,61188
61188 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 43::CD,61189:CD,61193:CD,61198:CD,61199:CD,61204
61189 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $context .getName()::JM,61198:CL,34052
61193 :: CALL :: call :: Z :: v20 = #(case).equals(v18)::JM,61198
61198 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 62::CD,61199:CD,61204
61199 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $context .getStringAttribute(#(select))::JM,61204:CL,33730
61204 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 62::CD,61205
61205 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v26 = p0 $this .resultMapElement(p1 $context , p2 $resultMappings )::CL,50142
61235 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.buildDiscriminator(java.lang.Class,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.Class,java.util.Map)::CD,61245:CD,61249:CD,61267:CD,61271:CD,61275:CD,61307:CD,61311:CD,61322
61245 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::
61249 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v14 = p0 $this .buildResultMapping(p1 $resultType , #(null), p2 $column , p3 $javaType , p4 $jdbcType , #(null), #(null), #(null), #(null), p5 $typeHandler , v10, #(null), #(null), #(0))::CL,61374
61267 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::
61271 :: CALL :: call :: Ljava/util/Set :: v18 = p6 $discriminatorMap .entrySet()::JM,61245:JM,61311
61275 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,61311
61280 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,61311
61290 :: CALL :: call :: Ljava/lang/String :: v31 = p0 $this .applyCurrentNamespace(v28, #(1))::CL,46422
61301 :: CALL :: call :: Ljava/lang/Object :: v36 = v15.put(v34, v31)::
61307 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,61311
61311 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 56::CD,61280:CD,61290:CD,61301:CD,61307:JM,61311
61322 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v41 = v37.build()::CL,64478
61374 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.buildResultMapping(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.util.List,java.lang.String,java.lang.String,boolean)::CE,61375:CD,61392:CD,61399:CD,61405:JM,64736:JM,66867:JM,66834:JM,66852:JM,64743:JM,66841:JM,66856:JM,66827:JM,66845:CD,61421:CD,61426:CD,61432:CD,61437:CD,61443:CD,61448:CD,61453:CD,61458:CD,61464:CD,61469:CD,61474:CD,61479:CD,61484:CD,61489:CD,61494:CD,61499:CD,61503
61375 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ResultMapping :: org.apache.ibatis.builder.MapperBuilderAssistant.buildResultMapping(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,org.apache.ibatis.type.JdbcType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.util.List,java.lang.String,java.lang.String,boolean)::JM,57251
61392 :: CALL :: call :: Ljava/lang/Class :: v18 = p0 $this .resolveResultJavaType(p1 $resultType , p2 $property , p4 $javaType )::CL,64569
61399 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v20 = p0 $this .resolveTypeHandler(v18, p10 $typeHandler )::CL,49841
61405 :: CALL :: call :: Ljava/util/List :: v22 = p0 $this .parseCompositeColumnName(p3 $column )::CL,64614
61421 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v27 = v23.jdbcType(p5 $jdbcType )::CL,64755
61426 :: CALL :: call :: Ljava/lang/String :: v30 = p0 $this .applyCurrentNamespace(p6 $nestedSelect , #(1))::CL,46422
61432 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v32 = v27.nestedQueryId(v30)::CL,64771
61437 :: CALL :: call :: Ljava/lang/String :: v34 = p0 $this .applyCurrentNamespace(p7 $nestedResultMap , #(1))::CL,46422
61443 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v36 = v32.nestedResultMapId(v34)::CL,64787
61448 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v38 = v36.resultSet(p12 $resultSet )::CL,64803
61453 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v40 = v38.typeHandler(v20)::CL,64819
61458 :: PRED :: IF :: Z :: if (p11 $flags  != #(null)) goto 94::CF,61459
61459 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::
61464 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v46 = v40.flags(v44)::CL,64835
61469 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v48 = v46.composites(v22)::CL,64851
61474 :: CALL :: call :: Ljava/util/Set :: v50 = p0 $this .parseMultipleColumnNames(p8 $notNullColumn )::CL,64867
61479 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v52 = v48.notNullColumns(v50)::CL,64935
61484 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v54 = v52.columnPrefix(p9 $columnPrefix )::CL,64951
61489 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v56 = v54.foreignColumn(p13 $foreignColumn )::CL,64967
61494 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping$Builder :: v58 = v56.lazy(p14 $lazy )::CL,64983
61499 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v60 = v58.build()::JM,61503:CL,64999
61503 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ResultMapping :: return v60::DD,61375
61541 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.StrictMap.getShortName(java.lang.String)::CD,61546
61546 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $key .split(#(\.))::
61572 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .subject = p1 $subject ::
61732 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.getArgNames(java.lang.reflect.Constructor)::CD,61744:CD,61748:JM,61761:JM,61765
61744 :: CALL :: call :: Z :: v8 = v6.isUseActualParamName()::JM,61748:CL,65065
61748 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CF,61757:CD,61749:CD,61751:CD,61761:CD,61765:CD,61809:CD,61815
61749 :: EXPR :: reference :: Z :: v10 = org.apache.ibatis.reflection.Jdk.parameterExists::DD,61751
61751 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CF,61757:CD,61752:CD,61761:CD,61765:CD,61809:CD,61815
61752 :: CALL :: call :: Ljava/util/List :: v42 = getParamNames(p1 $constructor )::CL,65074
61757 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
61761 :: CALL :: call :: [[Ljava/lang/annotation/Annotation :: v14 = p1 $constructor .getParameterAnnotations()::JM,61761:JM,61765
61765 :: EXPR :: assign :: I :: v15 = v14.length::DD,61809
61767 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v14[v39]::DD,61771
61771 :: EXPR :: assign :: I :: v18 = v17.length::DD,61786
61773 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v17[v23]::DD,61777:DD,61779
61777 :: EXPR :: assign :: Z :: v20=v19 INSTANCEOF org.apache.ibatis.annotations.Param::DD,61778
61778 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 96::CD,61779:CD,61780:CD,61785:CD,61786:CD,61811:CD,61812:CD,61813
61779 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v19::JM,61780:JM,61813
61780 :: CALL :: call :: Ljava/lang/String :: v26 = v24.value()::JM,61780:JM,61813
61785 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,61812:CF,61811
61786 :: PRED :: IF :: Z :: if (v23 < v18) goto 70::CF,61813:CD,61777:CD,61778
61787 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 117::CF,61789:CD,61794:CD,61799:CD,61814
61789 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::JM,61814
61794 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v40)::JM,61814
61799 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,61814
61803 :: CALL :: call :: Z :: v37 = v11.add(v35)::
61808 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v40 + #(1)::DD,61815
61809 :: PRED :: IF :: Z :: if (v39 < v15) goto 53::CD,61771:CD,61786:CD,61787:CD,61803:CD,61808:CD,61811:CD,61812:CD,61813:CD,61814:CD,61815
61811 :: EXPR :: assign :: null :: PHI v40 = v39, v40::CF,61812:JM,61814:DD,61808:DD,61811
61812 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,61785:DD,61786
61813 :: EXPR :: assign :: null :: PHI v27 = v26, #(null)::DD,61787:DD,61814
61814 :: EXPR :: assign :: null :: PHI v35 = v27, v34::
61815 :: EXPR :: assign :: null :: PHI v39 = #(0), v38::DD,61809:DD,61811
61897 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.argTypesMatch(java.util.List,java.lang.Class[],java.util.List)::CE,61898:CD,62037:CD,62041:CD,62043:JM,61988
61898 :: EXIT :: exit :: Z :: org.apache.ibatis.mapping.ResultMap.Builder.argTypesMatch(java.util.List,java.lang.Class[],java.util.List)::JM,57956
61905 :: CALL :: call :: Ljava/lang/Object :: v10 = p1 $constructorArgNames .get(v26)::JM,61988:JM,62041
61910 :: CALL :: call :: I :: v12 = p3 $paramNames .indexOf(v10)::
61915 :: EXPR :: reference :: Ljava/lang/Object :: v13 = p2 $paramTypes [v12]::JM,61936:JM,61941:JM,62013
61922 :: CALL :: call :: Ljava/util/List :: v16 = access$21(v14)::CL,57879
61926 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get(v26)::
61932 :: CALL :: call :: Ljava/lang/Class :: v21 = v19.getJavaType()::JM,61936:JM,61941:JM,61999:CL,65084
61936 :: CALL :: call :: Z :: v23 = v13.equals(v21)::JM,61936:JM,61941:JM,61999
61941 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 164::CD,61942:CD,61944:CD,61948:CD,62035:CD,62036:CD,62037:CD,62041:CD,62043
61942 :: EXPR :: reference :: Lorg/apache/ibatis/logging/Log :: v27 = org.apache.ibatis.mapping.ResultMap$Builder.log::JM,61944:JM,61948
61944 :: CALL :: call :: Z :: v29 = v27.isDebugEnabled()::JM,61944:JM,61948
61948 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 163::CD,61951:CD,61959:CD,61963:CD,61968:CD,61973:CD,61978:CD,61983:CD,61988:CD,61989:CD,61994:CD,61999:CD,62003:CD,62008:CD,62013:CD,62017:CD,62022:CD,62027:CF,62035
61951 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
61959 :: CALL :: call :: Ljava/lang/String :: v36 = access$8(v34)::CL,57670
61963 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v31.append(v36)::
61968 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(', found a constructo...))::
61973 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v41.append(p1 $constructorArgNames )::
61978 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#(, but the type of '))::
61983 :: CALL :: call :: Ljava/lang/Object :: v48 = p1 $constructorArgNames .get(v26)::JM,61988:JM,62041
61988 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::
61989 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::
61994 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v51.append(#(' did not match. Spec...))::
61999 :: CALL :: call :: Ljava/lang/String :: v56 = v21.getName()::JM,61936:JM,61941:JM,61999
62003 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(v56)::
62008 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(] Declared: [))::
62013 :: CALL :: call :: Ljava/lang/String :: v63 = v13.getName()::JM,62013
62017 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v63)::
62022 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#(]))::
62027 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
62035 :: NORM :: compound :: Z :: return #(0)::DD,61898
62036 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,62043
62037 :: CALL :: call :: I :: v8 = p1 $constructorArgNames .size()::JM,61988:JM,62041
62041 :: PRED :: IF :: Z :: if (v26 < v8) goto 11::CD,61905:CD,61910:CD,61922:CD,61926:CD,61932:CD,61936:CD,61941:CD,62042:JM,61988:JM,62041
62042 :: NORM :: compound :: Z :: return #(1)::DD,61898
62043 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::JM,61988:DD,62036:DD,62041
62123 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.getDiscriminator()::CE,62124:CD,62130
62124 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/Discriminator :: org.apache.ibatis.mapping.ResultMap.getDiscriminator()::JM,58099:JM,58221
62127 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/Discriminator :: v3 = p0 $this .discriminator::DD,62130
62130 :: NORM :: compound :: Lorg/apache/ibatis/mapping/Discriminator :: return v3::CF,62124
62132 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Discriminator.getDiscriminatorMap()::CE,62133:CD,62139
62133 :: EXIT :: exit :: Ljava/util/Map :: org.apache.ibatis.mapping.Discriminator.getDiscriminatorMap()::JM,58155
62136 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .discriminatorMap::DD,62139
62139 :: NORM :: compound :: Ljava/util/Map :: return v3::CF,62133
62151 :: ENTR :: entry :: null :: org.apache.ibatis.scripting.LanguageDriverRegistry.getDefaultDriver()::CD,62159
62159 :: CALL :: call :: Lorg/apache/ibatis/scripting/LanguageDriver :: v6 = p0 $this .getDriver(v4)::CL,58451
62167 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.MappedStatement.delimitedStringToArray(java.lang.String)::CD,62171:JM,62180
62171 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 15::CD,62172:CD,62176:CD,62180:JM,62171
62172 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $in .trim()::JM,62180:JM,62171
62176 :: CALL :: call :: I :: v7 = v5.length()::JM,62180
62180 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 19::CD,62182
62182 :: CALL :: call :: [Ljava/lang/String :: v11 = p1 $in .split(#(,))::
62195 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.chooseAnnotationType(java.lang.reflect.Method,java.util.Set)::CE,62196:CD,62201:CD,62218:CD,62222:JM,62210:JM,62211:JM,62216
62196 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.chooseAnnotationType(java.lang.reflect.Method,java.util.Set)::JM,59369:JM,59387
62201 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $types .iterator()::JM,62210:JM,62211:JM,62216:JM,62222
62206 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,62210:JM,62222
62210 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,62210:JM,62211:JM,62216:JM,62222:DD,62217
62211 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = p1 $method .getAnnotation(v12)::JM,62210:JM,62211:JM,62216:JM,62222
62216 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 38::CD,62217:CD,62218:CD,62222:JM,62210
62217 :: NORM :: compound :: Ljava/lang/Class :: return v12::DD,62196
62218 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,62210:JM,62222
62222 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,62206:CD,62210:CD,62211:CD,62216:CD,62223:JM,62222
62223 :: NORM :: compound :: Ljava/lang/Class :: return #(null)::DD,62196
62262 :: CALL :: call :: [[Ljava/lang/annotation/Annotation :: v9 = p2 $method .getParameterAnnotations()::JM,62262:JM,62270
62266 :: NORM :: declaration :: Ljava/util/TreeMap :: v10 = new java.util.TreeMap::JM,62262:JM,62270:JM,62350:JM,62338
62270 :: EXPR :: assign :: I :: v12 = v9.length::DD,62337
62276 :: CALL :: call :: Z :: v16 = isSpecialParameter(v14)::JM,62280:CL,65326
62280 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 55::CD,62286:CD,62304:CD,62305:CD,62326:CD,62330:CD,62346:CD,62347:CD,62348:CD,62350:CD,62351
62282 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v9[v44]::DD,62286
62286 :: EXPR :: assign :: I :: v19 = v18.length::DD,62304
62288 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v24]::DD,62292:DD,62297
62292 :: EXPR :: assign :: Z :: v21=v20 INSTANCEOF org.apache.ibatis.annotations.Param::DD,62293
62293 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 103::CD,62297:CD,62298:CD,62303:CD,62304:CD,62346:CD,62347:CD,62348
62297 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v20::JM,62298:JM,62348
62298 :: CALL :: call :: Ljava/lang/String :: v27 = v25.value()::JM,62298:JM,62348
62303 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,62347:CF,62346
62304 :: PRED :: IF :: Z :: if (v24 < v19) goto 72::CF,62348:CD,62292:CD,62293
62305 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 155::CF,62350:CD,62306:CD,62310:CD,62317:CD,62349
62306 :: CALL :: call :: Z :: v30 = p1 $config .isUseActualParamName()::JM,62310:CL,65065
62310 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 136::CF,62349:CD,62311
62311 :: CALL :: call :: Ljava/lang/String :: v32 = p0 $this .getActualParamName(p2 $method , v45)::JM,62349:CL,65352
62317 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 155::CF,62350:CD,62318:CD,62322
62318 :: CALL :: call :: I :: v35 = v10.size()::JM,62350
62322 :: CALL :: call :: Ljava/lang/String :: v37 = valueOf(v35)::JM,62350
62326 :: CALL :: call :: Ljava/lang/Integer :: v40 = valueOf(v45)::
62330 :: CALL :: call :: Ljava/lang/Object :: v42 = v10.put(v40, v38)::
62336 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v46 + #(1)::DD,62352
62337 :: PRED :: IF :: Z :: if (v44 < v12) goto 38::CD,62276:CD,62280:CD,62336:CD,62351:CD,62352:JM,62338
62338 :: CALL :: call :: Ljava/util/SortedMap :: v48 = unmodifiableSortedMap(v10)::JM,62338
62346 :: EXPR :: assign :: null :: PHI v45 = v44, v45::CF,62347:DD,62346:DD,62351
62347 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,62303:DD,62304
62348 :: EXPR :: assign :: null :: PHI v28 = v27, #(null)::DD,62305:DD,62349:DD,62350
62349 :: EXPR :: assign :: null :: PHI v33 = v28, v32::DD,62317:DD,62350
62350 :: EXPR :: assign :: null :: PHI v38 = v28, v33, v37::
62351 :: EXPR :: assign :: null :: PHI v46 = v44, v45::DD,62336
62352 :: EXPR :: assign :: null :: PHI v44 = #(0), v43::DD,62337:DD,62346:DD,62351
62407 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameResolver.getNames()::CE,62408:CD,62414:CD,62418:CD,62419:CD,62424:CD,62425
62408 :: EXIT :: exit :: [Ljava/lang/String :: org.apache.ibatis.reflection.ParamNameResolver.getNames()::JM,59616
62411 :: EXPR :: reference :: Ljava/util/SortedMap :: v3 = p0 $this .names::JM,62424
62414 :: CALL :: call :: Ljava/util/Collection :: v5 = v3.values()::JM,62424
62418 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::JM,62424
62419 :: CALL :: call :: [Ljava/lang/Object :: v9 = v5.toArray(v7)::JM,62424
62424 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::CF,62425
62425 :: NORM :: compound :: [Ljava/lang/String :: return v10::DD,62408
62437 :: EXPR :: modify :: Ljava/lang/Class :: p0 $this .mapperType = p1 $mapperType ::
62440 :: EXPR :: modify :: Ljava/lang/reflect/Method :: p0 $this .mapperMethod = p2 $mapperMethod ::
62449 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyConstructorArgs(org.apache.ibatis.annotations.Arg[],java.lang.Class,java.util.List)::CD,62456:CD,62583:CD,62588
62456 :: EXPR :: assign :: I :: v6 = p1 $args .length::DD,62583
62458 :: EXPR :: reference :: Ljava/lang/Object :: v8 = p1 $args [v61]::JM,62473:JM,62477
62462 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
62466 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v11 = org.apache.ibatis.mapping.ResultFlag.CONSTRUCTOR::
62468 :: CALL :: call :: Z :: v13 = v9.add(v11)::
62473 :: CALL :: call :: Z :: v15 = v8.id()::JM,62473:JM,62477
62477 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 63::CD,62478:CD,62480
62478 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v16 = org.apache.ibatis.mapping.ResultFlag.ID::
62480 :: CALL :: call :: Z :: v18 = v9.add(v16)::
62559 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v56 = v26.buildResultMapping(p2 $resultType , v30, v34, v40, v46, v50, v54, #(null), #(null), v25, v9, #(null), #(null), #(0))::CL,61374
62577 :: CALL :: call :: Z :: v58 = p3 $resultMappings .add(v56)::
62582 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v61 + #(1)::DD,62588
62583 :: PRED :: IF :: Z :: if (v61 < v6) goto 17::CD,62462:CD,62466:CD,62468:CD,62473:CD,62477:CD,62559:CD,62577:CD,62582:CD,62588
62588 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::DD,62582:DD,62583
62642 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResults(org.apache.ibatis.annotations.Result[],java.lang.Class,java.util.List)::CD,62649:CD,62768:CD,62774
62649 :: EXPR :: assign :: I :: v6 = p1 $results .length::DD,62768
62651 :: EXPR :: reference :: Ljava/lang/Object :: v8 = p1 $results [v57]::JM,62659:JM,62663
62655 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
62659 :: CALL :: call :: Z :: v12 = v8.id()::JM,62659:JM,62663
62663 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 52::CD,62664:CD,62666
62664 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultFlag :: v13 = org.apache.ibatis.mapping.ResultFlag.ID::
62666 :: CALL :: call :: Z :: v15 = v9.add(v13)::
62727 :: CALL :: call :: Z :: v45 = p0 $this .hasNestedSelect(v8)::JM,62732:CL,65378
62732 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 182::CD,62733
62733 :: CALL :: call :: Ljava/lang/String :: v47 = p0 $this .nestedSelectId(v8)::CL,65453
62744 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v52 = v23.buildResultMapping(p2 $resultType , v27, v31, v37, v43, v48, #(null), #(null), #(null), v22, v9, #(null), #(null), v50)::CL,61374
62762 :: CALL :: call :: Z :: v54 = p3 $resultMappings .add(v52)::
62767 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v57 + #(1)::DD,62774
62768 :: PRED :: IF :: Z :: if (v57 < v6) goto 17::CD,62655:CD,62659:CD,62663:CD,62727:CD,62732:CD,62744:CD,62762:CD,62767:CD,62774
62774 :: EXPR :: assign :: null :: PHI v57 = #(0), v56::DD,62767:DD,62768
62828 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyDiscriminator(java.lang.String,java.lang.Class,org.apache.ibatis.annotations.TypeDiscriminator)::CD,62835:JM,62884:JM,62876
62835 :: PRED :: IF :: Z :: if (p3 $discriminator  == #(null)) goto 201::CD,62876:CD,62880:CD,62884:CD,62924:CD,62928:CD,62943
62876 :: CALL :: call :: [Lorg/apache/ibatis/annotations/Case :: v29 = p3 $discriminator .cases()::JM,62884:JM,62876
62880 :: NORM :: declaration :: Ljava/util/HashMap :: v30 = new java.util.HashMap::
62884 :: EXPR :: assign :: I :: v32 = v29.length::DD,62924
62886 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v29[v52]::JM,62890
62890 :: CALL :: call :: Ljava/lang/String :: v36 = v34.value()::JM,62890
62894 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
62895 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(p1 $resultMapId )::
62903 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(-))::
62908 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v43.append(v36)::
62913 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
62917 :: CALL :: call :: Ljava/lang/Object :: v49 = v30.put(v36, v47)::
62923 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v52 + #(1)::DD,62943
62924 :: PRED :: IF :: Z :: if (v52 < v32) goto 120::CD,62890:CD,62894:CD,62895:CD,62903:CD,62908:CD,62913:CD,62917:CD,62923:CD,62943
62928 :: CALL :: call :: Lorg/apache/ibatis/mapping/Discriminator :: v55 = v53.buildDiscriminator(p2 $resultType , v8, v15, v21, v27, v30)::CL,61235
62943 :: EXPR :: assign :: null :: PHI v52 = #(0), v51::DD,62923:DD,62924
62994 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.createDiscriminatorResultMaps(java.lang.String,java.lang.Class,org.apache.ibatis.annotations.TypeDiscriminator)::CD,63001:JM,63002:JM,63006
63001 :: PRED :: IF :: Z :: if (p3 $discriminator  == #(null)) goto 130::CD,63002:CD,63006:CD,63081:CD,63083:JM,63001
63002 :: CALL :: call :: [Lorg/apache/ibatis/annotations/Case :: v8 = p3 $discriminator .cases()::JM,63001:JM,63002:JM,63006
63006 :: EXPR :: assign :: I :: v9 = v8.length::DD,63081
63008 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v8[v40]::JM,63026
63012 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
63013 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(p1 $resultMapId )::
63021 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v12.append(#(-))::
63026 :: CALL :: call :: Ljava/lang/String :: v20 = v11.value()::JM,63026
63030 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
63035 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
63039 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::
63047 :: CALL :: call :: V :: p0 $this .applyConstructorArgs(v28, p2 $resultType , v25)::CL,62449
63057 :: CALL :: call :: V :: p0 $this .applyResults(v31, p2 $resultType , v25)::CL,62642
63070 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMap :: v37 = v33.addResultMap(v24, v35, p1 $resultMapId , #(null), v25, #(null))::CL,45785
63080 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v40 + #(1)::DD,63083
63081 :: PRED :: IF :: Z :: if (v40 < v9) goto 26::CD,63012:CD,63013:CD,63021:CD,63026:CD,63030:CD,63035:CD,63039:CD,63047:CD,63057:CD,63070:CD,63080:CD,63083
63083 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::DD,63080:DD,63081
63237 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveTypeVar(java.lang.reflect.TypeVariable,java.lang.reflect.Type,java.lang.Class)::CE,63238:CD,63243:CD,63244:CD,63256:CD,63257:CD,63266:CD,63271:CD,63280:CD,63332:JM,63249:JM,63281:JM,63285:JM,63245
63238 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.resolveTypeVar(java.lang.reflect.TypeVariable,java.lang.reflect.Type,java.lang.Class)::JM,60459:JM,63600:JM,65747
63243 :: EXPR :: assign :: Z :: v6=p2 $srcType  INSTANCEOF java.lang.Class::DD,63244
63244 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 22::CD,63245:CD,63249:CD,63250:CD,63254:CD,63332
63245 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST p2 $srcType ::DD,63332
63249 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST p2 $srcType ::JM,63250:JM,63254
63250 :: CALL :: call :: Ljava/lang/reflect/Type :: v22 = v20.getRawType()::JM,63250:JM,63254
63254 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,63332
63256 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
63257 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
63266 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
63271 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
63280 :: PRED :: IF :: Z :: if (v25 != p3 $declaringClass ) goto 106::CD,63281:CD,63285:CD,63286:CD,63294:CD,63298:CD,63306:JM,63280:JM,63249:JM,63243:JM,63245
63281 :: CALL :: call :: [Ljava/lang/reflect/Type :: v42 = p1 $typeVar .getBounds()::JM,63280:JM,63249:JM,63281:JM,63285:JM,63243:JM,63245
63285 :: EXPR :: assign :: I :: v43 = v42.length::DD,63286
63286 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 101::CF,63292:CD,63291:CD,63293
63287 :: EXPR :: reference :: Ljava/lang/Object :: v45 = v42[#(0)]::DD,63291
63291 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v45::DD,63238
63292 :: EXPR :: assign :: Ljava/lang/Class :: v44 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::CF,63293
63293 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v44::DD,63238
63294 :: CALL :: call :: Ljava/lang/reflect/Type :: v27 = v25.getGenericSuperclass()::
63298 :: CALL :: call :: Ljava/lang/reflect/Type :: v29 = scanSuperTypes(p1 $typeVar , p2 $srcType , p3 $declaringClass , v25, v27)::JM,63306:JM,63307:CL,65636
63306 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 130::CD,63307:CD,63308:CD,63312:CD,63329:CD,63333
63307 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v29::DD,63238
63308 :: CALL :: call :: [Ljava/lang/reflect/Type :: v31 = v25.getGenericInterfaces()::JM,63312
63312 :: EXPR :: assign :: I :: v32 = v31.length::DD,63329
63318 :: CALL :: call :: Ljava/lang/reflect/Type :: v35 = scanSuperTypes(p1 $typeVar , p2 $srcType , p3 $declaringClass , v25, v33)::JM,63326:JM,63327:CL,65636
63326 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,63327:CD,63328:CD,63329:CD,63333
63327 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v35::DD,63238
63328 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v39 + #(1)::DD,63333
63329 :: PRED :: IF :: Z :: if (v39 < v32) goto 153::CF,63330:CD,63318:CD,63326:CD,63331
63330 :: EXPR :: assign :: Ljava/lang/Class :: v40 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::CF,63331
63331 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v40::DD,63238
63332 :: EXPR :: assign :: null :: PHI v25 = v24, v23::DD,63280:JM,63312
63333 :: EXPR :: assign :: null :: PHI v39 = #(0), v37::DD,63328:DD,63329
63390 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveParameterizedType(java.lang.reflect.ParameterizedType,java.lang.reflect.Type,java.lang.Class)::CE,63391:CD,63401:CD,63483:CD,63484:CD,63485:CD,63492:CD,63493
63391 :: EXIT :: exit :: Ljava/lang/reflect/ParameterizedType :: org.apache.ibatis.reflection.TypeParameterResolver.resolveParameterizedType(java.lang.reflect.ParameterizedType,java.lang.reflect.Type,java.lang.Class)::JM,60469:JM,63600
63401 :: CALL :: call :: [Ljava/lang/reflect/Type :: v9 = p1 $parameterizedType .getActualTypeArguments()::JM,63401:JM,63483
63408 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v9[v35]::DD,63412
63412 :: EXPR :: assign :: Z :: v15=v14 INSTANCEOF java.lang.reflect.TypeVariable::DD,63413
63413 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 68::CD,63419:CD,63434:CD,63435
63419 :: CALL :: call :: Ljava/lang/reflect/Type :: v19 = resolveTypeVar(v17, p2 $srcType , p3 $declaringClass )::CL,63237
63430 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v9[v35]::DD,63434
63434 :: EXPR :: assign :: Z :: v21=v20 INSTANCEOF java.lang.reflect.ParameterizedType::DD,63435
63435 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 100::CD,63441:CD,63456:CD,63457
63441 :: CALL :: call :: Ljava/lang/reflect/ParameterizedType :: v25 = resolveParameterizedType(v23, p2 $srcType , p3 $declaringClass )::CL,63390
63452 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v9[v35]::DD,63456
63456 :: EXPR :: assign :: Z :: v27=v26 INSTANCEOF java.lang.reflect.WildcardType::DD,63457
63457 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 136::CD,63463
63463 :: CALL :: call :: Ljava/lang/reflect/Type :: v31 = resolveWildcardType(v29, p2 $srcType , p3 $declaringClass )::CL,65809
63482 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,63493
63483 :: EXPR :: assign :: I :: v13 = v9.length::CF,63484
63484 :: PRED :: IF :: Z :: if (v35 < v13) goto 36::CF,63485:CD,63412:CD,63413:CD,63482:CD,63483:CD,63493
63485 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/TypeParameterResolver$ParameterizedTypeImpl :: v36 = new org.apache.ibatis.reflection.TypeParameterResolver$ParameterizedTypeImpl::DD,63492
63492 :: NORM :: compound :: Ljava/lang/reflect/ParameterizedType :: return v36::DD,63391
63493 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,63482:DD,63484:CF,63483
63541 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveGenericArrayType(java.lang.reflect.GenericArrayType,java.lang.reflect.Type,java.lang.Class)::CE,63542:CD,63547:CD,63551:CD,63552:CD,63580:CD,63581:CD,63600:JM,63571:JM,63561
63542 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.resolveGenericArrayType(java.lang.reflect.GenericArrayType,java.lang.reflect.Type,java.lang.Class)::JM,60479:JM,63600
63547 :: CALL :: call :: Ljava/lang/reflect/Type :: v6 = p1 $genericArrayType .getGenericComponentType()::JM,63571:JM,63561:JM,63547:JM,63551
63551 :: EXPR :: assign :: Z :: v8=v6 INSTANCEOF java.lang.reflect.TypeVariable::DD,63552
63552 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 32::CD,63554:CD,63561:CD,63562:CD,63600
63554 :: CALL :: call :: Ljava/lang/reflect/Type :: v20 = resolveTypeVar(v18, p2 $srcType , p3 $declaringClass )::JM,63600:CL,63237
63561 :: EXPR :: assign :: Z :: v10=v6 INSTANCEOF java.lang.reflect.GenericArrayType::DD,63562
63562 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 53::CD,63564:CD,63571:CD,63572:CD,63600
63564 :: CALL :: call :: Ljava/lang/reflect/Type :: v17 = resolveGenericArrayType(v15, p2 $srcType , p3 $declaringClass )::JM,63600:CL,63541
63571 :: EXPR :: assign :: Z :: v11=v6 INSTANCEOF java.lang.reflect.ParameterizedType::DD,63572
63572 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 72::CF,63600:CD,63574
63574 :: CALL :: call :: Ljava/lang/reflect/ParameterizedType :: v14 = resolveParameterizedType(v12, p2 $srcType , p3 $declaringClass )::JM,63600:CL,63390
63580 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF java.lang.Class::DD,63581
63581 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 91::CF,63593:CD,63582:CD,63583:CD,63588:CD,63592:CD,63599
63582 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v21::JM,63588:JM,63592:JM,63583
63583 :: CALL :: call :: Ljava/lang/Object :: v27 = newInstance(v25, #(0))::JM,63588:JM,63592:JM,63583
63588 :: CALL :: call :: Ljava/lang/Class :: v29 = v27.getClass()::JM,63588:JM,63592
63592 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v29::DD,63542
63593 :: NORM :: declaration :: Lorg/apache/ibatis/reflection/TypeParameterResolver$GenericArrayTypeImpl :: v23 = new org.apache.ibatis.reflection.TypeParameterResolver$GenericArrayTypeImpl::DD,63599
63599 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v23::DD,63542
63600 :: EXPR :: assign :: null :: PHI v21 = v20, v17, #(null), v14::CF,63580:DD,63582
63639 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.MapWrapper.hasSetter(java.lang.String)::CF,63640:CD,63644
63640 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.wrapper.MapWrapper.hasSetter(java.lang.String)::JM,60652
63644 :: NORM :: compound :: Z :: return #(1)::CF,63640
63646 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.CollectionWrapper.hasSetter(java.lang.String)::CE,63647
63647 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.wrapper.CollectionWrapper.hasSetter(java.lang.String)::JM,60652
63656 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.hasSetter(java.lang.String)::CE,63657:JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,63666:CD,63670
63657 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.wrapper.BeanWrapper.hasSetter(java.lang.String)::JM,60652
63666 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,63670:CL,36998
63670 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 70::CD,63678:CD,63683:CD,63722:CD,63727
63678 :: CALL :: call :: Z :: v16 = v12.hasSetter(v14)::JM,63683:CL,33870
63683 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 68::CD,63691:CD,63696:CD,63698:CD,63718
63691 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v21 = v17.metaObjectForProperty(v19)::JM,63698:CL,63924
63696 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v22 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,63698
63698 :: PRED :: IF :: Z :: if (v21 != v22) goto 60::CD,63702:CD,63707:CD,63712:CD,63717
63702 :: CALL :: call :: Z :: v29 = v27.hasSetter(p1 $name )::JM,63707:CL,33870
63707 :: NORM :: compound :: Z :: return v29::DD,63657
63712 :: CALL :: call :: Z :: v26 = v21.hasSetter(v24)::JM,63717:CL,60639
63717 :: NORM :: compound :: Z :: return v26::DD,63657
63718 :: NORM :: compound :: Z :: return #(0)::DD,63657
63722 :: CALL :: call :: Z :: v11 = v9.hasSetter(p1 $name )::JM,63727:CL,33870
63727 :: NORM :: compound :: Z :: return v11::DD,63657
63748 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.MapWrapper.getSetterType(java.lang.String)::CE,63749:JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,63758:CD,63762
63749 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.wrapper.MapWrapper.getSetterType(java.lang.String)::JM,60668
63758 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,63762:CL,36998
63762 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 48::CD,63770:CD,63775:CD,63777:CD,63793:CD,63798
63770 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v23 = v19.metaObjectForProperty(v21)::JM,63777:CL,63924
63775 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v24 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,63777
63777 :: PRED :: IF :: Z :: if (v23 != v24) goto 40::CF,63778:CD,63779:CD,63784:CD,63789
63778 :: EXPR :: assign :: Ljava/lang/Class :: v29 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::CF,63779
63779 :: NORM :: compound :: Ljava/lang/Class :: return v29::DD,63749
63784 :: CALL :: call :: Ljava/lang/Class :: v28 = v23.getSetterType(v26)::JM,63789:CL,60655
63789 :: NORM :: compound :: Ljava/lang/Class :: return v28::DD,63749
63793 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.get(p1 $name )::JM,63798
63798 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 74::CF,63812:CD,63802:CD,63807:CD,63811:CD,63813
63802 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(p1 $name )::JM,63811:JM,63807
63807 :: CALL :: call :: Ljava/lang/Class :: v18 = v16.getClass()::JM,63811:JM,63807
63811 :: NORM :: compound :: Ljava/lang/Class :: return v18::DD,63749
63812 :: EXPR :: assign :: Ljava/lang/Class :: v13 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::CF,63813
63813 :: NORM :: compound :: Ljava/lang/Class :: return v13::DD,63749
63831 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.CollectionWrapper.getSetterType(java.lang.String)::CE,63832
63832 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.wrapper.CollectionWrapper.getSetterType(java.lang.String)::JM,60668
63841 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.getSetterType(java.lang.String)::CE,63842:JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,63851:CD,63855
63842 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.wrapper.BeanWrapper.getSetterType(java.lang.String)::JM,60668
63851 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,63855:CL,36998
63855 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 54::CD,63863:CD,63868:CD,63870:CD,63893:CD,63898
63863 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v16 = v12.metaObjectForProperty(v14)::JM,63870:CL,63924
63868 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v17 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,63870
63870 :: PRED :: IF :: Z :: if (v16 != v17) goto 46::CD,63874:CD,63879:CD,63884:CD,63889
63874 :: CALL :: call :: Ljava/lang/Class :: v24 = v22.getSetterType(p1 $name )::JM,63879:CL,65895
63879 :: NORM :: compound :: Ljava/lang/Class :: return v24::DD,63842
63884 :: CALL :: call :: Ljava/lang/Class :: v21 = v16.getSetterType(v19)::JM,63889:CL,60655
63889 :: NORM :: compound :: Ljava/lang/Class :: return v21::DD,63842
63893 :: CALL :: call :: Ljava/lang/Class :: v11 = v9.getSetterType(p1 $name )::JM,63898:CL,65895
63898 :: NORM :: compound :: Ljava/lang/Class :: return v11::DD,63842
63924 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.metaObjectForProperty(java.lang.String)::CE,63925:CD,63929:CD,63943:CD,63950
63925 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/MetaObject :: org.apache.ibatis.reflection.MetaObject.metaObjectForProperty(java.lang.String)::JM,60698:JM,63698:JM,63777:JM,63870:JM,65980
63929 :: CALL :: call :: Ljava/lang/Object :: v5 = p0 $this .getValue(p1 $name )::CL,65954
63943 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v10 = forObject(v5, v6, v7, v8)::JM,63950:CL,19203
63950 :: NORM :: compound :: Lorg/apache/ibatis/reflection/MetaObject :: return v10::DD,63925
63958 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.instantiatePropertyValue(java.lang.String,org.apache.ibatis.reflection.property.PropertyTokenizer,org.apache.ibatis.reflection.factory.ObjectFactory)::CD,63969:CD,63974:CD,63989:CD,64000:CD,64007:CD,64014:CD,64019:CD,64024:CD,64029:CD,64034:CD,64039:CD,64043:CD,64048:CD,64053:CD,64057:CD,64062
63969 :: CALL :: call :: Ljava/lang/Class :: v9 = p0 $this .getSetterType(v7)::CL,63841
63974 :: CALL :: call :: Ljava/lang/Object :: v11 = p3 $objectFactory .create(v9)::CL,66016
63989 :: CALL :: call :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapperFactory :: v17 = v15.getObjectWrapperFactory()::CL,66042
64000 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v22 = forObject(v11, v14, v17, v20)::CL,19203
64007 :: CALL :: call :: V :: p0 $this .set(p2 $prop , v11)::CL,64221
64014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
64019 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $name )::
64024 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(' because '))::
64029 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v33.append(p1 $name )::
64034 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#(' is null and cannot ...))::
64039 :: CALL :: call :: Ljava/lang/String :: v40 = v9.getName()::
64043 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(v40)::
64048 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(. Cause:))::
64053 :: CALL :: call :: Ljava/lang/String :: v47 = v24.toString()::
64057 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v45.append(v47)::
64062 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::
64089 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.MapWrapper.instantiatePropertyValue(java.lang.String,org.apache.ibatis.reflection.property.PropertyTokenizer,org.apache.ibatis.reflection.factory.ObjectFactory)::CD,64096:CD,64100:CD,64115:CD,64126
64096 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::
64100 :: CALL :: call :: V :: p0 $this .set(p2 $prop , v6)::CL,64155
64115 :: CALL :: call :: Lorg/apache/ibatis/reflection/wrapper/ObjectWrapperFactory :: v14 = v12.getObjectWrapperFactory()::CL,66042
64126 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v19 = forObject(v6, v11, v14, v17)::CL,19203
64155 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.MapWrapper.set(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object)::CD,64161:CD,64165
64161 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $prop .getIndex()::JM,64165:CL,64272
64165 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 28::CD,64169:CD,64175:CD,64189
64169 :: CALL :: call :: Ljava/lang/Object :: v15 = p0 $this .resolveCollection(p1 $prop , v13)::CL,66066
64175 :: CALL :: call :: V :: p0 $this .setCollectionValue(p1 $prop , v15, p2 $value )::CL,66102
64189 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.put(v10, p2 $value )::
64221 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.set(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object)::CD,64227:CD,64231
64227 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $prop .getIndex()::JM,64231:CL,64272
64231 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,64235:CD,64241:CD,64251
64235 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .resolveCollection(p1 $prop , v10)::CL,66066
64241 :: CALL :: call :: V :: p0 $this .setCollectionValue(p1 $prop , v12, p2 $value )::CL,66102
64251 :: CALL :: call :: V :: p0 $this .setBeanProperty(p1 $prop , v8, p2 $value )::CL,66352
64272 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.property.PropertyTokenizer.getIndex()::CE,64273:CD,64279
64273 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.reflection.property.PropertyTokenizer.getIndex()::JM,60996:JM,64165:JM,64231:JM,67701:JM,67749
64276 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .index::DD,64279
64279 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,64273
64281 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getGenericGetterType(java.lang.String)::CD,64289:CD,64294:CD,64295
64289 :: CALL :: call :: Lorg/apache/ibatis/reflection/invoker/Invoker :: v6 = v4.getGetInvoker(p1 $propertyName )::JM,64325:JM,64294:CL,66466
64294 :: EXPR :: assign :: Z :: v7=v6 INSTANCEOF org.apache.ibatis.reflection.invoker.MethodInvoker::DD,64295
64295 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 53::CD,64297:CD,64319:CD,64325:CD,64326
64297 :: CALL :: call :: Ljava/lang/reflect/Field :: v27 = v24.getDeclaredField(#(method))::
64319 :: CALL :: call :: Ljava/lang/reflect/Type :: v42 = resolveReturnType(v37, v40)::CL,60187
64325 :: EXPR :: assign :: Z :: v9=v6 INSTANCEOF org.apache.ibatis.reflection.invoker.GetFieldInvoker::DD,64326
64326 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 101::CD,64328:CD,64350
64328 :: CALL :: call :: Ljava/lang/reflect/Field :: v13 = v10.getDeclaredField(#(field))::
64350 :: CALL :: call :: Ljava/lang/reflect/Type :: v23 = resolveFieldType(v18, v21)::CL,55119
64386 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getTypeHandler(java.lang.reflect.Type,org.apache.ibatis.type.JdbcType)::CD,64392:CD,64397
64392 :: CALL :: call :: Ljava/util/Map :: v6 = p0 $this .getJdbcHandlerMap(p1 $type )::JM,64397:CL,66535
64397 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 56::CD,64398:CD,64403:CD,64404:CD,64411:CD,64418
64398 :: CALL :: call :: Ljava/lang/Object :: v9 = v6.get(p2 $jdbcType )::JM,64403
64403 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,64404:DD,64418
64404 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 44::CF,64418:CD,64405:CD,64410
64405 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.get(#(null))::JM,64410
64410 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,64418
64411 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CD,64412
64412 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v16 = p0 $this .pickSoleHandler(v6)::CL,66656
64418 :: EXPR :: assign :: null :: PHI v14 = v10, v13::DD,64411
64478 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Discriminator.Builder.build()::CD,64493:CD,64509:CD,64529:CD,64540:CD,64544
64493 :: NORM :: declaration :: Ljava/lang/AssertionError :: v31 = new java.lang.AssertionError::
64509 :: NORM :: declaration :: Ljava/lang/AssertionError :: v29 = new java.lang.AssertionError::
64529 :: NORM :: declaration :: Ljava/lang/AssertionError :: v27 = new java.lang.AssertionError::
64540 :: CALL :: call :: Ljava/util/Map :: v22 = access$3(v20)::JM,64544:CL,66755
64544 :: CALL :: call :: Ljava/util/Map :: v24 = unmodifiableMap(v22)::JM,64544
64569 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.resolveResultJavaType(java.lang.Class,java.lang.String,java.lang.Class)::CD,64576:JM,64577
64576 :: PRED :: IF :: Z :: if (p3 $javaType  != #(null)) goto 34::CD,64577
64577 :: PRED :: IF :: Z :: if (p2 $property  == #(null)) goto 34::CD,64585:CD,64590
64585 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v11 = forClass(p1 $resultType , v9)::CL,26950
64590 :: CALL :: call :: Ljava/lang/Class :: v13 = v11.getSetterType(p2 $property )::CL,65895
64614 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.parseCompositeColumnName(java.lang.String)::CD,64619:CD,64623:JM,64629:JM,64635
64619 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
64623 :: PRED :: IF :: Z :: if (p1 $columnName  == #(null)) goto 107::CD,64624:CD,64629:JM,64635
64624 :: CALL :: call :: I :: v9 = p1 $columnName .indexOf(#(61))::JM,64629:JM,64635
64629 :: PRED :: IF :: Z :: if (v9 > #(-1)) goto 32::CF,64636:CD,64630:CD,64635:CD,64683:CD,64687:JM,64629
64630 :: CALL :: call :: I :: v13 = p1 $columnName .indexOf(#(44))::JM,64629:JM,64635
64635 :: PRED :: IF :: Z :: if (v13 <= #(-1)) goto 107::CF,64636:CD,64683:CD,64687
64636 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v14 = new java.util.StringTokenizer::JM,64687
64644 :: CALL :: call :: Ljava/lang/String :: v21 = v14.nextToken()::
64648 :: CALL :: call :: Ljava/lang/String :: v23 = v14.nextToken()::
64674 :: CALL :: call :: Lorg/apache/ibatis/mapping/ResultMapping :: v33 = v24.build()::CL,64999
64678 :: CALL :: call :: Z :: v35 = v4.add(v33)::
64683 :: CALL :: call :: Z :: v19 = v14.hasMoreTokens()::JM,64687
64687 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 49::CD,64644:CD,64648:JM,66867:JM,66834:JM,66789:JM,66852:JM,66841:JM,66856:JM,66827:JM,66845:JM,66796:CD,64674:CD,64678:CD,64683
64736 :: CALL :: call :: V :: access$0(v8, p3 $column )::CL,66885
64743 :: CALL :: call :: V :: access$2(v10, p4 $javaType )::CL,66896
64755 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.jdbcType(org.apache.ibatis.type.JdbcType)::CD,64763
64763 :: CALL :: call :: V :: access$8(v4, p1 $jdbcType )::CL,66907
64771 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.nestedQueryId(java.lang.String)::CD,64779
64779 :: CALL :: call :: V :: access$10(v4, p1 $nestedQueryId )::CL,66918
64787 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.nestedResultMapId(java.lang.String)::CD,64795
64795 :: CALL :: call :: V :: access$9(v4, p1 $nestedResultMapId )::CL,66929
64803 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.resultSet(java.lang.String)::CD,64811
64811 :: CALL :: call :: V :: access$11(v4, p1 $resultSet )::CL,66940
64819 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.typeHandler(org.apache.ibatis.type.TypeHandler)::CD,64827
64827 :: CALL :: call :: V :: access$1(v4, p1 $typeHandler )::CL,66951
64835 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.flags(java.util.List)::CD,64843
64843 :: CALL :: call :: V :: access$5(v4, p1 $flags )::CL,66962
64851 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.composites(java.util.List)::CD,64859
64859 :: CALL :: call :: V :: access$6(v4, p1 $composites )::CL,66973
64867 :: ENTR :: entry :: null :: org.apache.ibatis.builder.MapperBuilderAssistant.parseMultipleColumnNames(java.lang.String)::CD,64872:CD,64876:JM,64882
64872 :: NORM :: declaration :: Ljava/util/HashSet :: v4 = new java.util.HashSet::
64876 :: PRED :: IF :: Z :: if (p1 $columnName  == #(null)) goto 72::CD,64877:CD,64882
64877 :: CALL :: call :: I :: v9 = p1 $columnName .indexOf(#(44))::JM,64882
64882 :: PRED :: IF :: Z :: if (v9 <= #(-1)) goto 65::CF,64883:CD,64900:CD,64904:CD,64906
64883 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v13 = new java.util.StringTokenizer::JM,64904
64891 :: CALL :: call :: Ljava/lang/String :: v20 = v13.nextToken()::
64895 :: CALL :: call :: Z :: v22 = v4.add(v20)::
64900 :: CALL :: call :: Z :: v18 = v13.hasMoreTokens()::JM,64904
64904 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 39::CD,64891:CD,64895:CD,64900
64906 :: CALL :: call :: Z :: v12 = v4.add(p1 $columnName )::
64935 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.notNullColumns(java.util.Set)::CD,64943
64943 :: CALL :: call :: V :: access$13(v4, p1 $notNullColumns )::CL,66984
64951 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.columnPrefix(java.lang.String)::CD,64959
64959 :: CALL :: call :: V :: access$14(v4, p1 $columnPrefix )::CL,66995
64967 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.foreignColumn(java.lang.String)::CD,64975
64975 :: CALL :: call :: V :: access$12(v4, p1 $foreignColumn )::CL,67006
64983 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.lazy(boolean)::CD,64991
64991 :: CALL :: call :: V :: access$7(v4, p1 $lazy )::CL,67017
64999 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.build()::CE,65000:CD,65009:CD,65013:CD,65017:CD,65027:CD,65031:CD,65035:CD,65039:CD,65042:CD,65048
65000 :: EXIT :: exit :: Lorg/apache/ibatis/mapping/ResultMapping :: org.apache.ibatis.mapping.ResultMapping.Builder.build()::JM,61503
65009 :: CALL :: call :: Ljava/util/List :: v6 = access$15(v4)::JM,65013:CL,67028
65013 :: CALL :: call :: Ljava/util/List :: v8 = unmodifiableList(v6)::JM,65013
65017 :: CALL :: call :: V :: access$5(v3, v8)::CL,66962
65027 :: CALL :: call :: Ljava/util/List :: v13 = access$16(v11)::JM,65031:CL,67037
65031 :: CALL :: call :: Ljava/util/List :: v15 = unmodifiableList(v13)::JM,65031
65035 :: CALL :: call :: V :: access$6(v10, v15)::CL,66973
65039 :: CALL :: call :: V :: p0 $this .resolveTypeHandler()::CL,67046
65042 :: CALL :: call :: V :: p0 $this .validate()::CL,67117
65045 :: EXPR :: reference :: Lorg/apache/ibatis/mapping/ResultMapping :: v19 = p0 $this .resultMapping::DD,65048
65048 :: NORM :: compound :: Lorg/apache/ibatis/mapping/ResultMapping :: return v19::DD,65000
65065 :: ENTR :: entry :: null :: org.apache.ibatis.session.Configuration.isUseActualParamName()::CE,65066:CD,65072
65066 :: EXIT :: exit :: Z :: org.apache.ibatis.session.Configuration.isUseActualParamName()::JM,61748:JM,62310
65069 :: EXPR :: reference :: Z :: v3 = p0 $this .useActualParamName::DD,65072
65072 :: NORM :: compound :: Z :: return v3::CF,65066
65074 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameUtil.getParamNames(java.lang.reflect.Constructor)::CD,65078
65078 :: CALL :: call :: Ljava/util/List :: v4 = getParameterNames(p1 $constructor )::CL,67383
65084 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.getJavaType()::CE,65085:CD,65091
65085 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.mapping.ResultMapping.getJavaType()::JM,61936:JM,61941:JM,61999
65088 :: EXPR :: reference :: Ljava/lang/Class :: v3 = p0 $this .javaType::DD,65091
65091 :: NORM :: compound :: Ljava/lang/Class :: return v3::CF,65085
65326 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameResolver.isSpecialParameter(java.lang.Class)::JM,65338:JM,65343:CF,65327:CD,65330:CD,65331:CD,65336
65327 :: EXIT :: exit :: Z :: org.apache.ibatis.reflection.ParamNameResolver.isSpecialParameter(java.lang.Class)::JM,62280
65330 :: EXPR :: assign :: Ljava/lang/Class :: v3 = metadata <Application,Lorg/apache/ibatis/session/RowBounds>-><Primordial,Ljava/lang/Class>::JM,65331:JM,65336
65331 :: CALL :: call :: Z :: v5 = v3.isAssignableFrom(p1 $clazz )::JM,65331:JM,65336:JM,65338:JM,65343
65336 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 21::CF,65337:CD,65338:CD,65343:CD,65345
65337 :: EXPR :: assign :: Ljava/lang/Class :: v7 = metadata <Application,Lorg/apache/ibatis/session/ResultHandler>-><Primordial,Ljava/lang/Class>::JM,65338:JM,65343
65338 :: CALL :: call :: Z :: v9 = v7.isAssignableFrom(p1 $clazz )::JM,65338:JM,65343:JM,65331:JM,65336
65343 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,65344:CD,65345
65344 :: NORM :: compound :: Z :: return #(0)::CF,65327
65345 :: NORM :: compound :: Z :: return #(1)::CF,65327
65352 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameResolver.getActualParamName(java.lang.reflect.Method,int)::CE,65353:CD,65358:CD,65360:JM,65370
65353 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.reflection.ParamNameResolver.getActualParamName(java.lang.reflect.Method,int)::JM,62349
65358 :: EXPR :: reference :: Z :: v5 = org.apache.ibatis.reflection.Jdk.parameterExists::DD,65360
65360 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 21::CD,65361:CD,65365:CD,65370:CD,65371:CD,65372
65361 :: CALL :: call :: Ljava/util/List :: v9 = getParamNames(p1 $method )::JM,65370:CL,67453
65365 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.get(p2 $paramIndex )::JM,65370
65370 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::CF,65371
65371 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,65353
65372 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,65353
65378 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.hasNestedSelect(org.apache.ibatis.annotations.Result)::CE,65379:CD,65415:CD,65419:CD,65423:CD,65427:JM,65440:JM,65428:JM,65432:JM,65436
65379 :: EXIT :: exit :: Z :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.hasNestedSelect(org.apache.ibatis.annotations.Result)::JM,62732
65415 :: CALL :: call :: Lorg/apache/ibatis/annotations/One :: v18 = p1 $result .one()::JM,65440:JM,65427:JM,65428:JM,65415:JM,65432:JM,65419:JM,65436:JM,65423
65419 :: CALL :: call :: Ljava/lang/String :: v20 = v18.select()::JM,65440:JM,65427:JM,65432:JM,65419:JM,65436:JM,65423
65423 :: CALL :: call :: I :: v22 = v20.length()::JM,65440:JM,65427:JM,65436:JM,65423
65427 :: PRED :: IF :: Z :: if (v22 > #(0)) goto 82::CD,65428:CD,65432:CD,65436:CD,65440:CD,65442:JM,65427:JM,65415:JM,65419:JM,65423
65428 :: CALL :: call :: Lorg/apache/ibatis/annotations/Many :: v24 = p1 $result .many()::JM,65440:JM,65427:JM,65428:JM,65415:JM,65432:JM,65419:JM,65436:JM,65423
65432 :: CALL :: call :: Ljava/lang/String :: v26 = v24.select()::JM,65440:JM,65427:JM,65432:JM,65419:JM,65436:JM,65423
65436 :: CALL :: call :: I :: v28 = v26.length()::JM,65440:JM,65427:JM,65436:JM,65423
65440 :: PRED :: IF :: Z :: if (v28 > #(0)) goto 82::CD,65441:CD,65442
65441 :: NORM :: compound :: Z :: return #(0)::DD,65379
65442 :: NORM :: compound :: Z :: return #(1)::DD,65379
65453 :: ENTR :: entry :: null :: org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.nestedSelectId(org.apache.ibatis.annotations.Result)::CD,65458:CD,65462:CD,65466:CD,65470:CD,65479:CD,65484:CD,65516:JM,65475:JM,65471
65458 :: CALL :: call :: Lorg/apache/ibatis/annotations/One :: v5 = p1 $result .one()::JM,65458:JM,65475:JM,65462:JM,65466:JM,65516:JM,65470:JM,65471
65462 :: CALL :: call :: Ljava/lang/String :: v7 = v5.select()::JM,65475:JM,65462:JM,65466:JM,65516:JM,65470
65466 :: CALL :: call :: I :: v9 = v7.length()::JM,65466:JM,65516:JM,65470
65470 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 36::CF,65516:CD,65471:CD,65475:JM,65458:JM,65462:JM,65466:JM,65470
65471 :: CALL :: call :: Lorg/apache/ibatis/annotations/Many :: v12 = p1 $result .many()::JM,65458:JM,65475:JM,65462:JM,65466:JM,65516:JM,65470:JM,65471
65475 :: CALL :: call :: Ljava/lang/String :: v14 = v12.select()::JM,65475:JM,65462:JM,65466:JM,65516:JM,65470
65479 :: CALL :: call :: Z :: v18 = v15.contains(#(.))::JM,65479:JM,65484
65484 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 74::CF,65485:CD,65493:CD,65501:CD,65506:CD,65511
65485 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
65493 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v23)::
65501 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v20.append(#(.))::
65506 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(v15)::
65511 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
65516 :: EXPR :: assign :: null :: PHI v15 = v7, v14::JM,65479:JM,65484
65637 :: EXIT :: exit :: Ljava/lang/reflect/Type :: org.apache.ibatis.reflection.TypeParameterResolver.scanSuperTypes(java.lang.reflect.TypeVariable,java.lang.reflect.Type,java.lang.Class,java.lang.Class,java.lang.reflect.Type)::JM,63306:JM,63307:JM,63326:JM,63327
65636 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.scanSuperTypes(java.lang.reflect.TypeVariable,java.lang.reflect.Type,java.lang.Class,java.lang.Class,java.lang.reflect.Type)::CE,65637:CD,65644:CD,65645:CD,65739:CD,65747:JM,65666:JM,65732:JM,65700:JM,65708:JM,65711:JM,65646:JM,65652:JM,65716:JM,65687:JM,65689:JM,65657:JM,65724:JM,65727:JM,65726
65645 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 184::CD,65646:CD,65647:CD,65651:CD,65652:CD,65724:CD,65725:CD,65747
65644 :: EXPR :: assign :: Z :: v8=p5 $superclass  INSTANCEOF java.lang.reflect.ParameterizedType::DD,65645
65647 :: CALL :: call :: Ljava/lang/reflect/Type :: v18 = v16.getRawType()::JM,65651:JM,65647
65646 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST p5 $superclass ::JM,65651:JM,65647:JM,65653
65651 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,65652:JM,65716:JM,65732:JM,65700:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65653 :: CALL :: call :: [Ljava/lang/reflect/Type :: v25 = v16.getActualTypeArguments()::JM,65653
65652 :: PRED :: IF :: Z :: if (p3 $declaringClass  != v19) goto 164::CD,65653:CD,65657:CD,65708:CD,65709:CD,65711:CD,65716:CD,65745:CD,65746:CD,65747:JM,65732:JM,65700:JM,65644:JM,65724:JM,65727:JM,65646:JM,65726
65657 :: CALL :: call :: [Ljava/lang/reflect/TypeVariable :: v27 = p3 $declaringClass .getTypeParameters()::JM,65716:JM,65732:JM,65700:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65662 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v27[v49]::DD,65666
65667 :: EXPR :: reference :: Ljava/lang/Object :: v30 = v25[v49]::DD,65671
65666 :: PRED :: IF :: Z :: if (v29 != p1 $typeVar ) goto 147::CF,65743:CD,65671:CD,65672
65671 :: EXPR :: assign :: Z :: v31=v30 INSTANCEOF java.lang.reflect.TypeVariable::DD,65672
65673 :: CALL :: call :: [Ljava/lang/reflect/TypeVariable :: v33 = p4 $clazz .getTypeParameters()::JM,65716:JM,65732:JM,65700:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65672 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 144::CD,65673:CD,65700:CD,65701:CD,65740:CD,65741:CD,65742:CD,65743:CD,65744:JM,65716:JM,65732:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65678 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v33[v39]::DD,65686
65682 :: EXPR :: reference :: Ljava/lang/Object :: v36 = v25[v51]::DD,65686
65687 :: EXPR :: assign :: Z :: v40=p2 $srcType  INSTANCEOF java.lang.reflect.ParameterizedType::DD,65688
65686 :: PRED :: IF :: Z :: if (v35 != v36) goto 126::CD,65687:CD,65688:CD,65699:CD,65700:CD,65701:CD,65740:CD,65741:CD,65742:CD,65743:CD,65744
65689 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST p2 $srcType ::JM,65690
65688 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 147::CF,65743:CD,65689:CD,65690:CD,65744
65690 :: CALL :: call :: [Ljava/lang/reflect/Type :: v43 = v41.getActualTypeArguments()::JM,65690
65694 :: EXPR :: reference :: Ljava/lang/Object :: v44 = v43[v39]::DD,65743
65699 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v39 + #(1)::DD,65742:CF,65740
65701 :: PRED :: IF :: Z :: if (v39 < v34) goto 93::CD,65686:CD,65743:CD,65744
65700 :: EXPR :: assign :: I :: v34 = v33.length::CF,65701
65703 :: EXPR :: reference :: Ljava/lang/Object :: v45 = v25[v49]::DD,65743
65707 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v52 + #(1)::DD,65746:CF,65745
65709 :: PRED :: IF :: Z :: if (v49 < v28) goto 61::CD,65666:CD,65707:CD,65708:CD,65743:CD,65744:CD,65745:CD,65746
65708 :: EXPR :: assign :: I :: v28 = v27.length::CF,65709
65711 :: CALL :: call :: Z :: v21 = p3 $declaringClass .isAssignableFrom(v19)::JM,65716:JM,65732:JM,65700:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65717 :: CALL :: call :: Ljava/lang/reflect/Type :: v23 = resolveTypeVar(p1 $typeVar , v16, p3 $declaringClass )::JM,65747:CL,63237
65716 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 213::CF,65747:CD,65717
65725 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 213::CF,65747:CD,65726:CD,65727:CD,65732
65724 :: EXPR :: assign :: Z :: v10=p5 $superclass  INSTANCEOF java.lang.Class::DD,65725
65727 :: CALL :: call :: Z :: v13 = p3 $declaringClass .isAssignableFrom(v11)::JM,65716:JM,65732:JM,65700:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65726 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST p5 $superclass ::JM,65716:JM,65732:JM,65700:JM,65657:JM,65644:JM,65724:JM,65708:JM,65711:JM,65727:JM,65646:JM,65726
65733 :: CALL :: call :: Ljava/lang/reflect/Type :: v15 = resolveTypeVar(p1 $typeVar , p5 $superclass , p3 $declaringClass )::JM,65747:CL,63237
65732 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 213::CF,65747:CD,65733
65739 :: NORM :: compound :: Ljava/lang/reflect/Type :: return v53::DD,65637
65741 :: EXPR :: assign :: null :: PHI v51 = v49, v51::CF,65742:DD,65741:DD,65744
65740 :: EXPR :: assign :: null :: PHI v50 = v48, v50::CF,65741:DD,65740:DD,65743
65743 :: EXPR :: assign :: null :: PHI v46 = v48, v50, v44, v50, v45::CF,65744:DD,65745
65742 :: EXPR :: assign :: null :: PHI v39 = #(0), v38::DD,65699:DD,65701:CF,65700
65745 :: EXPR :: assign :: null :: PHI v48 = #(null), v46::CF,65746:DD,65740:DD,65743:DD,65747
65744 :: EXPR :: assign :: null :: PHI v52 = v49, v51, v51, v51, v49::DD,65707
65747 :: EXPR :: assign :: null :: PHI v53 = v48, #(null), v23, #(null), #(null), v15::CF,65739
65746 :: EXPR :: assign :: null :: PHI v49 = #(0), v47::DD,65709:DD,65741:DD,65744:CF,65708
65809 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveWildcardType(java.lang.reflect.WildcardType,java.lang.reflect.Type,java.lang.Class)::CD,65819:CD,65829
65819 :: CALL :: call :: [Ljava/lang/reflect/Type :: v8 = resolveWildcardTypeBounds(v6, p2 $srcType , p3 $declaringClass )::CL,67463
65829 :: CALL :: call :: [Ljava/lang/reflect/Type :: v12 = resolveWildcardTypeBounds(v10, p2 $srcType , p3 $declaringClass )::CL,67463
65895 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getSetterType(java.lang.String)::CE,65896:JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,65905:CD,65909
65896 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.MetaClass.getSetterType(java.lang.String)::JM,63879:JM,63898:JM,65928
65905 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,65909:CL,36998
65909 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 35::CD,65914:CD,65923:CD,65928:CD,65936:CD,65941
65914 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaClass :: v17 = p0 $this .metaClassForProperty(v15)::CL,37041
65923 :: CALL :: call :: Ljava/lang/Class :: v21 = v17.getSetterType(v19)::JM,65928:CL,65895
65928 :: NORM :: compound :: Ljava/lang/Class :: return v21::DD,65896
65936 :: CALL :: call :: Ljava/lang/Class :: v13 = v9.getSetterType(v11)::JM,65941:CL,67622
65941 :: NORM :: compound :: Ljava/lang/Class :: return v13::DD,65896
65954 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.getValue(java.lang.String)::JM,36928:JM,36898:JM,36883:JM,36888:JM,36923:JM,36908:JM,36895:CD,65964:CD,65968
65964 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,65968:CL,36998
65968 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 44::CD,65973:CD,65978:CD,65980:CD,65995
65973 :: CALL :: call :: Lorg/apache/ibatis/reflection/MetaObject :: v15 = p0 $this .metaObjectForProperty(v13)::JM,65980:CL,63924
65978 :: EXPR :: reference :: Lorg/apache/ibatis/reflection/MetaObject :: v16 = org.apache.ibatis.reflection.SystemMetaObject.NULL_META_OBJECT::CF,65980
65980 :: PRED :: IF :: Z :: if (v15 != v16) goto 36::CD,65986
65986 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.getValue(v18)::CL,65954
65995 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.get(v4)::CL,67740:CL,67692
66016 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(java.lang.Class)::CD,66021
66021 :: CALL :: call :: Ljava/lang/Object :: v6 = p0 $this .create(p1 $type , #(null), #(null))::CL,67790
66042 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaObject.getObjectWrapperFactory()::
66066 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BaseWrapper.resolveCollection(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object)::CD,66072:CD,66076:CD,66081
66072 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $prop .getName()::JM,66081:CL,37012
66076 :: CALL :: call :: Z :: v9 = #().equals(v7)::JM,66081
66081 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 15::CD,66090
66090 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.getValue(v13)::CL,65954
66102 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BaseWrapper.setCollectionValue(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object,java.lang.Object)::CD,66109:CD,66110:CD,66254:CD,66259:CD,66263:CD,66268:CD,66273:CD,66278:CD,66283:JM,66131:JM,66133
66109 :: EXPR :: assign :: Z :: v6=p2 $collection  INSTANCEOF java.util.Map::DD,66110
66110 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 26::CD,66116:CD,66123:CD,66127:CD,66131:CD,66132
66116 :: CALL :: call :: Ljava/lang/Object :: v81 = v77.put(v79, p3 $value )::
66123 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $prop .getIndex()::CL,64272
66127 :: CALL :: call :: I :: v11 = parseInt(v9)::
66131 :: EXPR :: assign :: Z :: v12=p2 $collection  INSTANCEOF java.util.List::DD,66132
66133 :: EXPR :: assign :: Ljava/lang/Object :: v74 = CHECKCAST p2 $collection ::
66132 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,66133:CD,66134
66134 :: CALL :: call :: Ljava/lang/Object :: v76 = v74.set(v11, p3 $value )::JM,66109
66254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
66259 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $prop .getName()::CL,37012
66263 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
66268 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#(' property of ))::
66273 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(p2 $collection )::
66278 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(#( is not a List or Array.))::
66283 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
66352 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object,java.lang.Object)::CD,66366:CD,66376:CD,66389:CD,66394:CD,66398:CD,66403:CD,66412:CD,66417:CD,66422:CD,66427:CD,66432:CD,66436:CD,66441
66366 :: CALL :: call :: Lorg/apache/ibatis/reflection/invoker/Invoker :: v10 = v6.getSetInvoker(v8)::CL,67817
66376 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.invoke(p2 $object , v12)::CL,67850
66389 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
66394 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $prop .getName()::CL,37012
66398 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v21.append(v25)::
66403 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' of '))::
66412 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v30.append(v32)::
66417 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(#(' with value '))::
66422 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(p3 $value )::
66427 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#(' Cause: ))::
66432 :: CALL :: call :: Ljava/lang/String :: v44 = v19.toString()::
66436 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
66441 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
66467 :: EXIT :: exit :: Lorg/apache/ibatis/reflection/invoker/Invoker :: org.apache.ibatis.reflection.Reflector.getGetInvoker(java.lang.String)::JM,64325:JM,64294
66466 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getGetInvoker(java.lang.String)::CE,66467:CD,66474:CD,66479:CD,66482:CD,66487:CD,66492:CD,66500:CD,66505:CD,66510:CD,66519
66474 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $propertyName )::JM,66479
66479 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,66519
66482 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
66487 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $propertyName )::
66492 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#(' in '))::
66500 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
66505 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#('))::
66510 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
66519 :: NORM :: compound :: Lorg/apache/ibatis/reflection/invoker/Invoker :: return v7::DD,66467
66535 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMap(java.lang.reflect.Type)::CE,66536:CD,66543:CD,66548:CD,66551:CD,66556:JM,66561:JM,66559
66536 :: EXIT :: exit :: Ljava/util/Map :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMap(java.lang.reflect.Type)::JM,64397
66543 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $type )::JM,66548
66548 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,66558:DD,66617
66551 :: CALL :: call :: Z :: v10 = v8.equals(v7)::JM,66556
66557 :: NORM :: compound :: Ljava/util/Map :: return #(null)::DD,66536
66556 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 29::CD,66557:CD,66558:CD,66617
66559 :: EXPR :: assign :: Z :: v13=p1 $type  INSTANCEOF java.lang.Class::DD,66560
66558 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 97::CF,66617:CD,66559:CD,66560:CD,66610:CD,66616
66561 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST p1 $type ::JM,66562:JM,66566
66560 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 97::CF,66617:CD,66561:CD,66562:CD,66566:CD,66610:CD,66616
66562 :: CALL :: call :: Z :: v16 = v14.isEnum()::JM,66562:JM,66566
66567 :: CALL :: call :: Ljava/util/Map :: v20 = p0 $this .getJdbcHandlerMapForEnumInterfaces(v14, v14)::JM,66617:JM,66573:CL,67925
66566 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 92::CD,66567:CD,66573:CD,66598:CD,66610:CD,66616:CD,66617
66573 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 97::CF,66617:CD,66577:CD,66583:CD,66591:CD,66596:CD,66597:CD,66610:CD,66616
66577 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v29 = p0 $this .getInstance(v14, v27)::CL,37656
66583 :: CALL :: call :: V :: p0 $this .register(v14, v29)::CL,36308
66591 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get(v14)::JM,66596
66597 :: NORM :: compound :: Ljava/util/Map :: return v34::DD,66536
66596 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,66597
66598 :: CALL :: call :: Ljava/util/Map :: v18 = p0 $this .getJdbcHandlerMapForSuperclass(v14)::JM,66617:CL,68052
66610 :: CALL :: call :: Ljava/lang/Object :: v26 = v22.put(p1 $type , v24)::
66617 :: EXPR :: assign :: null :: PHI v21 = v7, v7, v20, v18::DD,66616
66616 :: NORM :: compound :: Ljava/util/Map :: return v21::DD,66536
66656 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.pickSoleHandler(java.util.Map)::CD,66661:CD,66665:CD,66692:CD,66696:CD,66698:JM,66674
66661 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $jdbcHandlerMap .values()::JM,66674:JM,66696
66665 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,66674:JM,66696
66670 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,66674:JM,66696
66675 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 39::CD,66677:CD,66681:CD,66685:CD,66690:CD,66692:CD,66696:CD,66698
66674 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,66690:JM,66677:JM,66685:DD,66698:CF,66675
66677 :: CALL :: call :: Ljava/lang/Class :: v16 = v14.getClass()::JM,66690:JM,66677:JM,66685
66681 :: CALL :: call :: Ljava/lang/Class :: v18 = v21.getClass()::JM,66690:JM,66681:JM,66685
66685 :: CALL :: call :: Z :: v20 = v16.equals(v18)::JM,66690:JM,66685
66690 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 56::CF,66698:CD,66692:CD,66696
66692 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,66674:JM,66696
66696 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 20::CD,66670:CD,66674:CD,66675:JM,66696
66698 :: EXPR :: assign :: null :: PHI v21 = #(null), v14, v21::JM,66674:JM,66696:DD,66675:JM,66690:JM,66681:JM,66685:DD,66698
66755 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.Discriminator.access$3(org.apache.ibatis.mapping.Discriminator)::CE,66756:CD,66762
66756 :: EXIT :: exit :: Ljava/util/Map :: org.apache.ibatis.mapping.Discriminator.access$3(org.apache.ibatis.mapping.Discriminator)::JM,64544
66759 :: EXPR :: reference :: Ljava/util/Map :: v3 = p1 $null .discriminatorMap::DD,66762
66762 :: NORM :: compound :: Ljava/util/Map :: return v3::CF,66756
66789 :: CALL :: call :: V :: access$0(v8, p3 $column )::CL,66885
66796 :: CALL :: call :: V :: access$1(v10, p4 $typeHandler )::CL,66951
66827 :: CALL :: call :: V :: access$3(v8, p1 $configuration )::CL,68111
66834 :: CALL :: call :: V :: access$4(v10, p2 $property )::CL,68122
66841 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
66845 :: CALL :: call :: V :: access$5(v12, v13)::CL,66962
66852 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::
66856 :: CALL :: call :: V :: access$6(v16, v17)::CL,66973
66867 :: CALL :: call :: V :: access$7(v20, v22)::CL,67017
66885 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$0(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,66890
66890 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .column = p2 $null ::
66896 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$2(org.apache.ibatis.mapping.ResultMapping,java.lang.Class)::JM,66901
66901 :: EXPR :: modify :: Ljava/lang/Class :: p1 $null .javaType = p2 $null ::
66907 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$8(org.apache.ibatis.mapping.ResultMapping,org.apache.ibatis.type.JdbcType)::JM,66912
66912 :: EXPR :: modify :: Lorg/apache/ibatis/type/JdbcType :: p1 $null .jdbcType = p2 $null ::
66918 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$10(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,66923
66923 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .nestedQueryId = p2 $null ::
66929 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$9(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,66934
66934 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .nestedResultMapId = p2 $null ::
66940 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$11(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,66945
66945 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .resultSet = p2 $null ::
66951 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$1(org.apache.ibatis.mapping.ResultMapping,org.apache.ibatis.type.TypeHandler)::JM,66956
66956 :: EXPR :: modify :: Lorg/apache/ibatis/type/TypeHandler :: p1 $null .typeHandler = p2 $null ::
66962 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$5(org.apache.ibatis.mapping.ResultMapping,java.util.List)::JM,66967
66967 :: EXPR :: modify :: Ljava/util/List :: p1 $null .flags = p2 $null ::
66973 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$6(org.apache.ibatis.mapping.ResultMapping,java.util.List)::JM,66978
66978 :: EXPR :: modify :: Ljava/util/List :: p1 $null .composites = p2 $null ::
66984 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$13(org.apache.ibatis.mapping.ResultMapping,java.util.Set)::JM,66989
66989 :: EXPR :: modify :: Ljava/util/Set :: p1 $null .notNullColumns = p2 $null ::
66995 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$14(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,67000
67000 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .columnPrefix = p2 $null ::
67006 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$12(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,67011
67011 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .foreignColumn = p2 $null ::
67017 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$7(org.apache.ibatis.mapping.ResultMapping,boolean)::JM,67022
67022 :: EXPR :: modify :: Z :: p1 $null .lazy = p2 $null ::
67029 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMapping.access$15(org.apache.ibatis.mapping.ResultMapping)::JM,65013
67028 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$15(org.apache.ibatis.mapping.ResultMapping)::CE,67029:CD,67035
67032 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .flags::DD,67035
67035 :: NORM :: compound :: Ljava/util/List :: return v3::CF,67029
67037 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$16(org.apache.ibatis.mapping.ResultMapping)::CE,67038:CD,67044
67038 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.mapping.ResultMapping.access$16(org.apache.ibatis.mapping.ResultMapping)::JM,65031
67041 :: EXPR :: reference :: Ljava/util/List :: v3 = p1 $null .composites::DD,67044
67044 :: NORM :: compound :: Ljava/util/List :: return v3::CF,67038
67046 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.resolveTypeHandler()::CD,67053:CD,67057
67053 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v5 = access$20(v3)::JM,67057:CL,68133
67057 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 58::CD,67061:CD,67065
67061 :: CALL :: call :: Ljava/lang/Class :: v9 = access$23(v7)::JM,67065:CL,68142
67065 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 58::CD,67094:CD,67100
67094 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v23 = v14.getTypeHandler(v18, v21)::CL,61120
67100 :: CALL :: call :: V :: access$1(v15, v23)::CL,66951
67117 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.Builder.validate()::CD,67273:CD,67277
67273 :: CALL :: call :: Ljava/lang/String :: v33 = v31.getResultSet()::JM,67277:CL,57790
67277 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 272::CD,67281:CD,67285:CD,67302:CD,67306
67281 :: CALL :: call :: Ljava/lang/String :: v36 = access$21(v34)::JM,67285:CL,68196
67285 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 214::CD,67293
67293 :: CALL :: call :: [Ljava/lang/String :: v42 = v39.split(#(,))::
67302 :: CALL :: call :: Ljava/lang/String :: v47 = access$22(v45)::JM,67306:CL,68205
67306 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 239::CD,67314
67314 :: CALL :: call :: [Ljava/lang/String :: v52 = v50.split(#(,))::
67383 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameUtil.getParameterNames(java.lang.reflect.Executable)::CE,67384:CD,67387:CD,67391:CD,67395:CD,67411:CD,67412:CD,67413
67384 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.reflection.ParamNameUtil.getParameterNames(java.lang.reflect.Executable)::JM,67461
67387 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,67412
67391 :: CALL :: call :: [Ljava/lang/reflect/Parameter :: v6 = p1 $executable .getParameters()::JM,67395:JM,67391
67395 :: EXPR :: assign :: I :: v7 = v6.length::DD,67411
67397 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v16]::JM,67401
67401 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getName()::JM,67401
67405 :: CALL :: call :: Z :: v13 = v3.add(v11)::
67411 :: PRED :: IF :: Z :: if (v16 < v7) goto 30::CD,67401:CD,67405:CD,67410:CD,67413:CF,67412
67410 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,67413
67413 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,67410:DD,67411
67412 :: NORM :: compound :: Ljava/util/List :: return v3::DD,67384
67435 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.1.compare(java.lang.Object,java.lang.Object)::CE,67436:CD,67443:CD,67449
67436 :: EXIT :: exit :: I :: org.apache.ibatis.mapping.ResultMap.Builder.1.compare(java.lang.Object,java.lang.Object)::
67443 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,67449:CL,68214
67449 :: NORM :: compound :: I :: return v8::DD,67436
67453 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.ParamNameUtil.getParamNames(java.lang.reflect.Method)::CE,67454:CD,67457:CD,67461
67454 :: EXIT :: exit :: Ljava/util/List :: org.apache.ibatis.reflection.ParamNameUtil.getParamNames(java.lang.reflect.Method)::JM,65370
67457 :: CALL :: call :: Ljava/util/List :: v4 = getParameterNames(p1 $method )::JM,67461:CL,67383
67461 :: NORM :: compound :: Ljava/util/List :: return v4::DD,67454
67463 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.TypeParameterResolver.resolveWildcardTypeBounds(java.lang.reflect.Type[],java.lang.reflect.Type,java.lang.Class)::CD,67547:CD,67548:CD,67550
67472 :: EXPR :: reference :: Ljava/lang/Object :: v9 = p1 $bounds [v30]::DD,67476
67477 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 44::CD,67483:CD,67498:CD,67499
67476 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.lang.reflect.TypeVariable::DD,67477
67483 :: CALL :: call :: Ljava/lang/reflect/Type :: v14 = resolveTypeVar(v12, p2 $srcType , p3 $declaringClass )::CL,63237
67494 :: EXPR :: reference :: Ljava/lang/Object :: v15 = p1 $bounds [v30]::DD,67498
67499 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 73::CD,67505:CD,67520:CD,67521
67498 :: EXPR :: assign :: Z :: v16=v15 INSTANCEOF java.lang.reflect.ParameterizedType::DD,67499
67505 :: CALL :: call :: Ljava/lang/reflect/ParameterizedType :: v20 = resolveParameterizedType(v18, p2 $srcType , p3 $declaringClass )::CL,63390
67516 :: EXPR :: reference :: Ljava/lang/Object :: v21 = p1 $bounds [v30]::DD,67520
67521 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 105::CD,67527
67520 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF java.lang.reflect.WildcardType::DD,67521
67527 :: CALL :: call :: Ljava/lang/reflect/Type :: v26 = resolveWildcardType(v24, p2 $srcType , p3 $declaringClass )::CL,65809
67547 :: EXPR :: assign :: I :: v8 = p1 $bounds .length::CF,67548
67546 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,67550
67548 :: PRED :: IF :: Z :: if (v30 < v8) goto 15::CD,67476:CD,67477:CD,67546:CD,67547:CD,67550
67550 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,67546:DD,67548:CF,67547
67623 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.reflection.Reflector.getSetterType(java.lang.String)::JM,65941
67622 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getSetterType(java.lang.String)::CE,67623:CD,67630:CD,67635:CD,67638:CD,67643:CD,67648:CD,67656:CD,67661:CD,67666:CD,67675
67630 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $propertyName )::JM,67635
67635 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,67675
67638 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
67643 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $propertyName )::
67648 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#(' in '))::
67656 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
67661 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#('))::
67666 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
67675 :: NORM :: compound :: Ljava/lang/Class :: return v7::DD,67623
67692 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.get(org.apache.ibatis.reflection.property.PropertyTokenizer)::CD,67697:CD,67701
67697 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $prop .getIndex()::JM,67701:CL,64272
67701 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 27::CD,67705:CD,67711:CD,67721
67705 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .resolveCollection(p1 $prop , v10)::CL,66066
67711 :: CALL :: call :: Ljava/lang/Object :: v14 = p0 $this .getCollectionValue(p1 $prop , v12)::CL,68275
67721 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .getBeanProperty(p1 $prop , v7)::CL,68500
67740 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.MapWrapper.get(org.apache.ibatis.reflection.property.PropertyTokenizer)::CD,67745:CD,67749
67745 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $prop .getIndex()::JM,67749:CL,64272
67749 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 25::CD,67753:CD,67759:CD,67773
67753 :: CALL :: call :: Ljava/lang/Object :: v14 = p0 $this .resolveCollection(p1 $prop , v12)::CL,66066
67759 :: CALL :: call :: Ljava/lang/Object :: v16 = p0 $this .getCollectionValue(p1 $prop , v14)::CL,68275
67773 :: CALL :: call :: Ljava/lang/Object :: v11 = v7.get(v9)::
67790 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(java.lang.Class,java.util.List,java.util.List)::CD,67802
67802 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .instantiateClass(v7, p2 $constructorArgTypes , p3 $constructorArgs )::CL,68634
67817 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getSetInvoker(java.lang.String)::CD,67825
67825 :: CALL :: call :: Lorg/apache/ibatis/reflection/invoker/Invoker :: v6 = v4.getSetInvoker(p1 $name )::CL,68879
67850 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.invoker.MethodInvoker.invoke(java.lang.Object,java.lang.Object[])::CD,67859
67856 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v5 = p0 $this .method::
67859 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.invoke(p1 $target , p2 $args )::
67925 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForEnumInterfaces(java.lang.Class,java.lang.Class)::CE,67926:CD,67931:CD,67935:CD,68009:CD,68012
67926 :: EXIT :: exit :: Ljava/util/Map :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForEnumInterfaces(java.lang.Class,java.lang.Class)::JM,66617:JM,66573:JM,68011
67931 :: CALL :: call :: [Ljava/lang/Class :: v6 = p1 $clazz .getInterfaces()::JM,67931:JM,67935
67935 :: EXPR :: assign :: I :: v7 = v6.length::DD,68009
67944 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(v9)::JM,67949
67949 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,67950:DD,68011
67951 :: CALL :: call :: Ljava/util/Map :: v16 = p0 $this .getJdbcHandlerMapForEnumInterfaces(v9, p2 $enumClazz )::JM,68011:CL,67925
67950 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 52::CF,68011:CD,67951
67957 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 140::CF,67958:CD,67962:CD,67966:CD,68002:CD,68006:CD,68007:CD,68008:CD,68009:CD,68012
67958 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::DD,68007
67962 :: CALL :: call :: Ljava/util/Set :: v24 = v17.entrySet()::JM,68006
67966 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,68006
67971 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,68006
67990 :: CALL :: call :: Lorg/apache/ibatis/type/TypeHandler :: v41 = p0 $this .getInstance(p2 $enumClazz , v39)::CL,37656
67996 :: CALL :: call :: Ljava/lang/Object :: v43 = v21.put(v34, v41)::
68002 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,68006
68007 :: NORM :: compound :: Ljava/util/Map :: return v21::DD,67926
68006 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 83::CD,67971:CD,67990:CD,67996:CD,68002:JM,68006:CF,68007
68009 :: PRED :: IF :: Z :: if (v20 < v7) goto 20::CD,67944:CD,67949:CD,67950:CD,67957:CD,68010:CD,68011
68008 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,68012
68011 :: EXPR :: assign :: null :: PHI v17 = v13, v16::DD,67957:JM,68006
68010 :: NORM :: compound :: Ljava/util/Map :: return #(null)::DD,67926
68012 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,68008:DD,68009
68053 :: EXIT :: exit :: Ljava/util/Map :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForSuperclass(java.lang.Class)::JM,66617:JM,68086
68052 :: ENTR :: entry :: null :: org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForSuperclass(java.lang.Class)::CE,68053:CD,68057:CD,68061:JM,68068:JM,68063
68057 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $clazz .getSuperclass()::JM,68068:JM,68057:JM,68061:JM,68063
68061 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 19::CF,68062:CD,68063:CD,68068:CD,68069
68063 :: CALL :: call :: Z :: v9 = v7.equals(v5)::JM,68068:JM,68063
68062 :: EXPR :: assign :: Ljava/lang/Class :: v7 = metadata <Application,Ljava/lang/Object>-><Primordial,Ljava/lang/Class>::JM,68068:JM,68063
68069 :: NORM :: compound :: Ljava/util/Map :: return #(null)::DD,68053
68068 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 21::CD,68069:CD,68073:CD,68078:CD,68079
68073 :: CALL :: call :: Ljava/lang/Object :: v13 = v11.get(v5)::JM,68078
68079 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 42::CD,68080:CD,68081:CD,68086
68078 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,68079:DD,68080
68081 :: CALL :: call :: Ljava/util/Map :: v16 = p0 $this .getJdbcHandlerMapForSuperclass(v5)::JM,68086:CL,68052
68080 :: NORM :: compound :: Ljava/util/Map :: return v14::DD,68053
68086 :: NORM :: compound :: Ljava/util/Map :: return v16::DD,68053
68111 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$3(org.apache.ibatis.mapping.ResultMapping,org.apache.ibatis.session.Configuration)::JM,68116
68116 :: EXPR :: modify :: Lorg/apache/ibatis/session/Configuration :: p1 $null .configuration = p2 $null ::
68122 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$4(org.apache.ibatis.mapping.ResultMapping,java.lang.String)::JM,68127
68127 :: EXPR :: modify :: Ljava/lang/String :: p1 $null .property = p2 $null ::
68133 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$20(org.apache.ibatis.mapping.ResultMapping)::CE,68134:CD,68140
68134 :: EXIT :: exit :: Lorg/apache/ibatis/type/TypeHandler :: org.apache.ibatis.mapping.ResultMapping.access$20(org.apache.ibatis.mapping.ResultMapping)::JM,67057
68137 :: EXPR :: reference :: Lorg/apache/ibatis/type/TypeHandler :: v3 = p1 $null .typeHandler::DD,68140
68140 :: NORM :: compound :: Lorg/apache/ibatis/type/TypeHandler :: return v3::CF,68134
68143 :: EXIT :: exit :: Ljava/lang/Class :: org.apache.ibatis.mapping.ResultMapping.access$23(org.apache.ibatis.mapping.ResultMapping)::JM,67065
68142 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$23(org.apache.ibatis.mapping.ResultMapping)::CE,68143:CD,68149
68146 :: EXPR :: reference :: Ljava/lang/Class :: v3 = p1 $null .javaType::DD,68149
68149 :: NORM :: compound :: Ljava/lang/Class :: return v3::CF,68143
68197 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMapping.access$21(org.apache.ibatis.mapping.ResultMapping)::JM,67285
68196 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$21(org.apache.ibatis.mapping.ResultMapping)::CE,68197:CD,68203
68200 :: EXPR :: reference :: Ljava/lang/String :: v3 = p1 $null .column::DD,68203
68203 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,68197
68205 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMapping.access$22(org.apache.ibatis.mapping.ResultMapping)::CE,68206:CD,68212
68206 :: EXIT :: exit :: Ljava/lang/String :: org.apache.ibatis.mapping.ResultMapping.access$22(org.apache.ibatis.mapping.ResultMapping)::JM,67306
68209 :: EXPR :: reference :: Ljava/lang/String :: v3 = p1 $null .foreignColumn::DD,68212
68212 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,68206
68215 :: EXIT :: exit :: I :: org.apache.ibatis.mapping.ResultMap.Builder.1.compare(org.apache.ibatis.mapping.ResultMapping,org.apache.ibatis.mapping.ResultMapping)::JM,67449
68214 :: ENTR :: entry :: null :: org.apache.ibatis.mapping.ResultMap.Builder.1.compare(org.apache.ibatis.mapping.ResultMapping,org.apache.ibatis.mapping.ResultMapping)::CE,68215:CD,68227:CD,68239:CD,68244:CD,68245
68227 :: CALL :: call :: I :: v9 = v5.indexOf(v7)::JM,68244
68239 :: CALL :: call :: I :: v14 = v10.indexOf(v12)::JM,68244
68245 :: NORM :: compound :: I :: return v15::DD,68215
68244 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v9 - v14::CF,68245
68275 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BaseWrapper.getCollectionValue(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object)::CD,68281:CD,68282:CD,68416:CD,68421:CD,68425:CD,68430:CD,68435:CD,68440:CD,68445:JM,68321:JM,68355:JM,68357:JM,68391:JM,68393:JM,68331:JM,68367:JM,68302:JM,68369:JM,68304:JM,68405:JM,68311:JM,68343:JM,68379:JM,68381:JM,68319
68281 :: EXPR :: assign :: Z :: v5=p2 $collection  INSTANCEOF java.util.Map::DD,68282
68282 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 22::CD,68288:CD,68294:CD,68298:CD,68302:CD,68303
68288 :: CALL :: call :: Ljava/lang/Object :: v81 = v77.get(v79)::
68294 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $prop .getIndex()::CL,64272
68298 :: CALL :: call :: I :: v10 = parseInt(v8)::
68303 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 48::CD,68304:CD,68305:CD,68311:CD,68312
68302 :: EXPR :: assign :: Z :: v11=p2 $collection  INSTANCEOF java.util.List::DD,68303
68305 :: CALL :: call :: Ljava/lang/Object :: v76 = v74.get(v10)::
68304 :: EXPR :: assign :: Ljava/lang/Object :: v74 = CHECKCAST p2 $collection ::
68311 :: EXPR :: assign :: Z :: v12=p2 $collection  INSTANCEOF java.lang.Object[]::DD,68312
68312 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 62::CD,68319:CD,68320
68319 :: EXPR :: assign :: Z :: v13=p2 $collection  INSTANCEOF []::DD,68320
68321 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST p2 $collection ::
68320 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 79::CD,68321:CD,68326:CD,68331:CD,68332
68322 :: EXPR :: reference :: C :: v69 = v68[v10]::
68326 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(v69)::
68331 :: EXPR :: assign :: Z :: v14=p2 $collection  INSTANCEOF []::DD,68332
68332 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 96::CD,68343:CD,68344
68343 :: EXPR :: assign :: Z :: v15=p2 $collection  INSTANCEOF []::DD,68344
68344 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 113::CD,68355:CD,68356
68355 :: EXPR :: assign :: Z :: v16=p2 $collection  INSTANCEOF []::DD,68356
68357 :: EXPR :: assign :: Ljava/lang/Object :: v56 = CHECKCAST p2 $collection ::
68356 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 130::CD,68357:CD,68362:CD,68367:CD,68368
68358 :: EXPR :: reference :: D :: v57 = v56[v10]::JM,68362
68362 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(v57)::JM,68362
68367 :: EXPR :: assign :: Z :: v17=p2 $collection  INSTANCEOF []::DD,68368
68369 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST p2 $collection ::
68368 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 147::CD,68369:CD,68374:CD,68379:CD,68380
68370 :: EXPR :: reference :: F :: v53 = v52[v10]::JM,68374
68374 :: CALL :: call :: Ljava/lang/Float :: v55 = valueOf(v53)::JM,68374
68379 :: EXPR :: assign :: Z :: v18=p2 $collection  INSTANCEOF []::DD,68380
68381 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST p2 $collection ::
68380 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 164::CD,68381:CD,68386:CD,68391:CD,68392
68382 :: EXPR :: reference :: I :: v49 = v48[v10]::
68386 :: CALL :: call :: Ljava/lang/Integer :: v51 = valueOf(v49)::
68391 :: EXPR :: assign :: Z :: v19=p2 $collection  INSTANCEOF []::DD,68392
68393 :: EXPR :: assign :: Ljava/lang/Object :: v44 = CHECKCAST p2 $collection ::
68392 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 181::CD,68393:CD,68398:CD,68405:CD,68410
68394 :: EXPR :: reference :: J :: v45 = v44[v10]::
68398 :: CALL :: call :: Ljava/lang/Long :: v47 = valueOf(v45)::
68405 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST p2 $collection ::
68406 :: EXPR :: reference :: S :: v41 = v40[v10]::
68410 :: CALL :: call :: Ljava/lang/Short :: v43 = valueOf(v41)::
68416 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v22 = new java.lang.StringBuilder::
68421 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $prop .getName()::CL,37012
68425 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v22.append(v26)::
68430 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#(' property of ))::
68435 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v31.append(p2 $collection )::
68440 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v33.append(#( is not a List or Array.))::
68445 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::
68500 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(org.apache.ibatis.reflection.property.PropertyTokenizer,java.lang.Object)::CD,68513:CD,68520:CD,68534:CD,68539:CD,68543:CD,68548:CD,68557:CD,68562:CD,68567:CD,68571:CD,68576
68513 :: CALL :: call :: Lorg/apache/ibatis/reflection/invoker/Invoker :: v9 = v5.getGetInvoker(v7)::CL,68939
68520 :: CALL :: call :: Ljava/lang/Object :: v12 = v9.invoke(p2 $object , v10)::CL,67850
68534 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
68539 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $prop .getName()::CL,37012
68543 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v18.append(v22)::
68548 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' from ))::
68557 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v29)::
68562 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#(.  Cause: ))::
68567 :: CALL :: call :: Ljava/lang/String :: v36 = v16.toString()::
68571 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v36)::
68576 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
68634 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.factory.DefaultObjectFactory.instantiateClass(java.lang.Class,java.util.List,java.util.List)::CD,68641:CD,68706:CD,68716:CD,68721:CD,68725:CD,68726:CD,68730:CD,68735:CD,68745:CD,68749:CD,68750:CD,68755:CD,68774:CD,68778:CD,68783:CD,68793:CD,68797:CD,68798:CD,68804:CD,68809:CD,68814:CD,68819:CD,68824:CD,68829:CD,68834:CD,68839:CD,68844:JM,68642
68641 :: PRED :: IF :: Z :: if (p2 $constructorArgTypes  == #(null)) goto 10::CD,68642:CD,68644:CD,68649:CD,68653
68642 :: PRED :: IF :: Z :: if (p3 $constructorArgs  != #(null)) goto 45::CD,68644:CD,68649:CD,68653:CD,68676:CD,68681:CD,68685
68644 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v29 = p1 $type .getDeclaredConstructor(v27)::JM,68653
68649 :: CALL :: call :: Z :: v31 = v29.isAccessible()::JM,68653
68653 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 35::CD,68654
68654 :: CALL :: call :: V :: v29.setAccessible(#(1))::
68676 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v14 = p1 $type .getDeclaredConstructor(v12)::JM,68685
68681 :: CALL :: call :: Z :: v16 = v14.isAccessible()::JM,68685
68685 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 84::CD,68686
68686 :: CALL :: call :: V :: v14.setAccessible(#(1))::
68706 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,68749
68716 :: CALL :: call :: Ljava/util/Iterator :: v42 = p2 $constructorArgTypes .iterator()::JM,68641:JM,68642:JM,68725
68721 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,68725
68725 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::
68726 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getSimpleName()::
68730 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v37.append(v49)::
68735 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v37.append(#(,))::
68745 :: CALL :: call :: I :: v56 = v37.length()::JM,68749
68749 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v56 - #(1)::
68750 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v37.deleteCharAt(v57)::
68755 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v60 = new java.lang.StringBuilder::JM,68797
68774 :: CALL :: call :: Ljava/lang/String :: v71 = valueOf(v69)::
68778 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v60.append(v71)::
68783 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v60.append(#(,))::
68793 :: CALL :: call :: I :: v77 = v60.length()::JM,68797
68797 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v77 - #(1)::
68798 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v60.deleteCharAt(v78)::
68804 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v82 = new java.lang.StringBuilder::
68809 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v82.append(p1 $type )::
68814 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v86.append(#( with invalid types ())::
68819 :: CALL :: call :: Ljava/lang/StringBuilder :: v91 = v89.append(v37)::
68824 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v91.append(#() or values ())::
68829 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v60)::
68834 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(). Cause: ))::
68839 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v36)::
68844 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
68879 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.Reflector.getSetInvoker(java.lang.String)::CD,68887:CD,68895:CD,68900:CD,68905:CD,68913:CD,68918:CD,68923
68887 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $propertyName )::
68895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
68900 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $propertyName )::
68905 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#(' in '))::
68913 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
68918 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#('))::
68923 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
68939 :: ENTR :: entry :: null :: org.apache.ibatis.reflection.MetaClass.getGetInvoker(java.lang.String)::CD,68947
68947 :: CALL :: call :: Lorg/apache/ibatis/reflection/invoker/Invoker :: v6 = v4.getGetInvoker(p1 $name )::CL,66466
