[542, 545, 549, 554, 559, 564, 569, 574, 578]
512 :: CALL :: call :: V :: v3.println(#(Insecure Systems Inc....))::
1 :: ENTR :: entry :: null :: org.h2.samples.SQLInjection.main(java.lang.String[])::CD,5:CD,9
5 :: NORM :: declaration :: Lorg/h2/samples/SQLInjection :: v3 = new org.h2.samples.SQLInjection::
9 :: CALL :: call :: V :: v3.run(#(org.h2.Driver), #(jdbc:h2:test), #(sa), #(sa))::JM,80:JM,74:JM,142:CL,62
532 :: CALL :: call :: Ljava/lang/String :: v16 = p0 $null .input(#(Name?))::JM,578:CL,1854
537 :: CALL :: call :: Ljava/lang/String :: v19 = p0 $null .input(#(Password?))::JM,578:CL,1854
542 :: EXPR :: reference :: Ljava/sql/Statement :: v20 = p0 $null .stat::JM,578
545 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,578
549 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(CALL GET_USER('))::JM,578
554 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(v16)::JM,578
559 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(', '))::JM,578
564 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(v19)::JM,578
569 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#(')))::JM,578
574 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,578
62 :: ENTR :: entry :: null :: org.h2.samples.SQLInjection.run(java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CD,74:CD,86:CD,134:CD,137:CD,142:JM,80
578 :: CALL :: call :: Ljava/sql/ResultSet :: v39 = v20.executeQuery(v37)::JM,578
74 :: CALL :: call :: Ljava/sql/Connection :: v10 = getConnection(p2 $null , p3 $null , p4 $null )::JM,80:JM,74:JM,142
80 :: EXPR :: modify :: Ljava/sql/Connection :: p0 $null .conn = v10::
83 :: EXPR :: reference :: Ljava/sql/Connection :: v11 = p0 $null .conn::JM,86:JM,90
86 :: CALL :: call :: Ljava/sql/Statement :: v13 = v11.createStatement()::JM,86:JM,90
90 :: EXPR :: modify :: Ljava/sql/Statement :: p0 $null .stat = v13::
134 :: CALL :: call :: V :: p0 $null .loginByNameInsecure()::CL,406
137 :: CALL :: call :: Z :: v39 = p2 $null .startsWith(#(jdbc:h2:))::JM,80:JM,74:JM,142
142 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 116::CD,143
143 :: CALL :: call :: V :: p0 $null .loginStoredProcedureInsecure()::CL,506
1854 :: ENTR :: entry :: null :: org.h2.samples.SQLInjection.input(java.lang.String)::CE,1855:CD,1859:CD,1861:CD,1865:CD,1866:CD,1867:CD,1877:CD,1881
1855 :: EXIT :: exit :: Ljava/lang/String :: org.h2.samples.SQLInjection.input(java.lang.String)::JM,467:JM,471:JM,462:JM,578
1859 :: EXPR :: reference :: Ljava/io/PrintStream :: v4 = java.lang.System.out::
1861 :: CALL :: call :: V :: v4.print(p1 $null )::
1865 :: NORM :: declaration :: Ljava/io/BufferedReader :: v6 = new java.io.BufferedReader::JM,1881:CF,1866
1866 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v7 = new java.io.InputStreamReader::
1867 :: EXPR :: reference :: Ljava/io/InputStream :: v8 = java.lang.System.in::
1877 :: CALL :: call :: Ljava/lang/String :: v12 = v6.readLine()::JM,1881
1881 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,1855
406 :: ENTR :: entry :: null :: org.h2.samples.SQLInjection.loginByNameInsecure()::CD,410:CD,412:CD,416:CD,421:CD,429:CD,433:CD,438:CD,443:CD,448:CD,453:CD,458:CD,462:CD,467:CD,471
410 :: EXPR :: reference :: Ljava/io/PrintStream :: v3 = java.lang.System.out::
412 :: CALL :: call :: V :: v3.println(#(Insecure Systems Inc....))::
416 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .input(#(Name?))::JM,467:JM,471:JM,462:CL,1854
421 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $null .input(#(Password?))::JM,467:JM,471:JM,462:CL,1854
426 :: EXPR :: reference :: Ljava/sql/Statement :: v12 = p0 $null .stat::JM,467:JM,471:JM,462
429 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::JM,467:JM,471:JM,462
433 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(#(SELECT * FROM USERS W...))::JM,467:JM,471:JM,462
438 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v17.append(v8)::JM,467:JM,471:JM,462
443 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(' AND PASSWORD='))::JM,467:JM,471:JM,462
448 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v22.append(v11)::JM,467:JM,471:JM,462
453 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::JM,467:JM,471:JM,462
458 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,467:JM,471:JM,462
462 :: CALL :: call :: Ljava/sql/ResultSet :: v31 = v12.executeQuery(v29)::JM,467:JM,471:JM,462
467 :: CALL :: call :: Z :: v33 = v31.next()::JM,467:JM,471
471 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 85::CD,472:CD,474:CD,479:CD,481
472 :: EXPR :: reference :: Ljava/io/PrintStream :: v38 = java.lang.System.out::
474 :: CALL :: call :: V :: v38.println(#(Welcome!))::
479 :: EXPR :: reference :: Ljava/io/PrintStream :: v35 = java.lang.System.out::
481 :: CALL :: call :: V :: v35.println(#(Access denied!))::
506 :: ENTR :: entry :: null :: org.h2.samples.SQLInjection.loginStoredProcedureInsecure()::CD,510:CD,512:CD,532:CD,537:CD,545:CD,549:CD,554:CD,559:CD,564:CD,569:CD,574:CD,578
510 :: EXPR :: reference :: Ljava/io/PrintStream :: v3 = java.lang.System.out::
