[8241, 8246]

1 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.PreprocessorAntTask.execute()::CD,5:CD,9
5 :: CALL :: call :: Z :: v4 = p0 $this .isActive()::JM,9:CL,6126
9 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 9::CD,11:CD,18:CD,25:CD,30:CD,42:CD,51:CD,55:CD,60:CD,61:CD,66:CD,71:CD,75:CD,97
11 :: CALL :: call :: V :: p0 $this .checkTargetDir()::CL,6178
18 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
25 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(v11)::
30 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
42 :: NORM :: declaration :: Lorg/hsqldb/util/preprocessor/AntResolver :: v18 = new org.hsqldb.util.preprocessor.AntResolver::JM,8240:JM,8262:JM,8263:JM,8267:JM,8271
51 :: CALL :: call :: [Ljava/lang/String :: v23 = p0 $this .getFiles()::JM,6324:JM,60:CL,6227
55 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
60 :: EXPR :: assign :: I :: v27 = v23.length::
61 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(v27)::
66 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#( file(s)))::
71 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
75 :: CALL :: call :: V :: p0 $this .log(v34)::
97 :: CALL :: call :: V :: preprocessBatch(v36, v37, v23, v38, v39, v40, v41, v18)::JM,6324:JM,8240:JM,8262:JM,8263:JM,8267:JM,8271:CL,6260
332 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.<clinit>()::CD,335:CD,336:CD,345:CD,354:CD,363
335 :: NORM :: declaration :: [Ljava/lang/Integer :: v3 = new java.lang.Integer[]::CF,336
336 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,336:DD,341
341 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = v5::
345 :: NORM :: declaration :: Ljava/lang/Integer :: v8 = new java.lang.Integer::JM,345:DD,350
350 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = v8::
354 :: NORM :: declaration :: Ljava/lang/Integer :: v11 = new java.lang.Integer::JM,354:DD,359
359 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = v11::
363 :: NORM :: declaration :: Ljava/lang/Integer :: v14 = new java.lang.Integer::JM,363:DD,368
368 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = v14::
6126 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.PreprocessorAntTask.isActive()::CE,6127:CD,6133:JM,6146:JM,6163:JM,6141:JM,6158
6127 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.PreprocessorAntTask.isActive()::JM,9
6130 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .ifExpr::DD,6133
6133 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 45::CD,6134:CD,6141:CD,6146:CD,6165:JM,6163:JM,6158
6134 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v6 = p0 $this .getProject()::JM,6146:JM,6163:JM,6141:JM,6158
6138 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .ifExpr::JM,6146:JM,6163:JM,6141:JM,6158
6141 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getProperty(v7)::JM,6146:JM,6163:JM,6141:JM,6158
6146 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,6150:CD,6165
6147 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .unlessExpr::DD,6150
6150 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 45::CD,6151:CD,6158:CD,6163:CD,6165:JM,6146:JM,6141
6151 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v12 = p0 $this .getProject()::JM,6146:JM,6163:JM,6141:JM,6158
6155 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .unlessExpr::JM,6146:JM,6163:JM,6141:JM,6158
6158 :: CALL :: call :: Ljava/lang/String :: v15 = v12.getProperty(v13)::JM,6146:JM,6163:JM,6141:JM,6158
6163 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 45::CD,6164:CD,6165
6164 :: NORM :: compound :: Z :: return #(0)::CF,6127
6165 :: NORM :: compound :: Z :: return #(1)::CF,6127
6178 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.PreprocessorAntTask.checkTargetDir()::CD,6186
6186 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v5 = new org.apache.tools.ant.BuildException::
6227 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.PreprocessorAntTask.getFiles()::CE,6228:CD,6234:CD,6239:CD,6243
6228 :: EXIT :: exit :: [Ljava/lang/String :: org.hsqldb.util.preprocessor.PreprocessorAntTask.getFiles()::JM,6324:JM,60
6234 :: CALL :: call :: Lorg/apache/tools/ant/DirectoryScanner :: v5 = p0 $this .getDirectoryScanner(v3)::JM,6243
6239 :: CALL :: call :: [Ljava/lang/String :: v7 = v5.getIncludedFiles()::JM,6243
6243 :: NORM :: compound :: [Ljava/lang/String :: return v7::DD,6228
6251 :: CALL :: call :: V :: p0 $this .log(p1 $msg , #(2))::
6260 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.preprocessBatch(java.io.File,java.io.File,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.String,org.hsqldb.util.preprocessor.IResolver)::CD,6324:CD,6325:CD,6328:JM,8240:JM,8262:JM,8263:JM,8267:JM,8271
6276 :: CALL :: call :: V :: preprocessFile(p1 $sourceDir , p2 $targetDir , v12, p4 $altExt , p5 $encoding , p6 $options , p7 $defines , p8 $resolver )::JM,8240:JM,8262:JM,8263:JM,8267:JM,8271:CL,6703
6323 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,6328
6324 :: EXPR :: assign :: I :: v11 = p3 $fileNames .length::CF,6325
6325 :: PRED :: IF :: Z :: if (v16 < v11) goto 9::CD,6276:CD,6323:CD,6324:CD,6328
6328 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,6323:DD,6325:CF,6324
6638 :: EXIT :: exit :: Lorg/apache/tools/ant/DirectoryScanner :: org.apache.tools.ant.taskdefs.MatchingTask.getDirectoryScanner(java.io.File)::JM,6243
6645 :: CALL :: call :: V :: v4.setDir(p1 $baseDir )::
6656 :: CALL :: call :: Lorg/apache/tools/ant/DirectoryScanner :: v10 = v6.getDirectoryScanner(v8)::JM,6661
6661 :: NORM :: compound :: Lorg/apache/tools/ant/DirectoryScanner :: return v10::DD,6638
6672 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v6 = p0 $this .getProject()::JM,6676
6676 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 23::CD,6688
6688 :: CALL :: call :: V :: p0 $this .log(p1 $msg , p2 $msgLevel )::
6703 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.preprocessFile(java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.hsqldb.util.preprocessor.IResolver)::CD,6714:CD,6720:CD,6726:CD,6731:CD,6732:CD,6733:CD,6741:CD,6746:CD,6754:CD,6759:CD,6761:CD,6765:CD,6769:CD,6773:JM,8240:JM,8262:JM,8263:JM,8312:JM,10504:JM,8267:JM,8271:CD,6782:CD,6805:CD,6808:CD,6812:CD,6816:CD,6874:CD,6879:CD,6884:CD,6889:CD,6894:CD,6919:CD,6924:CD,6929:CD,6934:CD,6939:CD,6944:CD,6987:CD,6988:JM,6813
6714 :: CALL :: call :: Ljava/lang/String :: v12 = translatePath(p1 $sourceDir , p3 $fileName , #(null))::CL,8160
6720 :: CALL :: call :: Ljava/lang/String :: v14 = translatePath(p2 $targetDir , p3 $fileName , p4 $altExt )::CL,8160
6726 :: NORM :: declaration :: Ljava/io/File :: v15 = new java.io.File::
6731 :: NORM :: declaration :: Ljava/io/File :: v17 = new java.io.File::CF,6732
6732 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
6733 :: CALL :: call :: Ljava/lang/String :: v20 = valueOf(v14)::
6741 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v18.append(#(~))::
6746 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
6754 :: CALL :: call :: Z :: v29 = p1 $sourceDir .equals(p2 $targetDir )::JM,6754:JM,6813
6759 :: PRED :: IF :: Z :: if (p4 $altExt  != #(null)) goto 76::CD,6987
6761 :: CALL :: call :: Z :: v34 = isVerbose(p6 $options )::JM,6817:JM,6840:JM,6953:JM,6782:CL,7077
6765 :: CALL :: call :: Z :: v36 = isTestOnly(p6 $options )::JM,6862:CL,8202
6769 :: CALL :: call :: Z :: v38 = isBackup(p6 $options )::JM,6980:CL,8215
6773 :: NORM :: declaration :: Lorg/hsqldb/util/preprocessor/Preprocessor :: v39 = new org.hsqldb.util.preprocessor.Preprocessor::JM,8240:JM,8262:JM,8263:JM,8312:JM,10504:JM,8267:JM,8271
6782 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 146::CF,6783:CD,6788:CD,6793:CD,6798:CD,6802
6783 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
6788 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v12)::
6793 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(#('))::
6798 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
6802 :: CALL :: call :: V :: log(v50)::CL,7090
6805 :: CALL :: call :: V :: v39.loadDocument()::CL,8358
6808 :: CALL :: call :: Z :: v54 = v39.preprocess()::JM,6812:CL,8459
6812 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 180::CD,6813:CD,6988
6813 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 180::CD,6814:CD,6988
6814 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 180::CD,6988
6816 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 213::CD,6817:CD,6840:CD,6862
6817 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 210::CF,6818:CD,6819:CD,6827:CD,6832:CD,6836
6818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
6819 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(p3 $fileName )::
6827 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v120.append(#( ... not modified))::
6832 :: CALL :: call :: Ljava/lang/String :: v128 = v126.toString()::
6836 :: CALL :: call :: V :: log(v128)::CL,7090
6840 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CF,6841:CD,6842:CD,6850:CD,6855:CD,6859:CF,6862
6841 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
6842 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(p3 $fileName )::
6850 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#( ... modified))::
6855 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
6859 :: CALL :: call :: V :: log(v64)::CL,7090
6862 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 246::CD,6864:CD,6868:CD,6903:CD,6907:CD,6911:CD,6953:CD,6976:CD,6980
6864 :: CALL :: call :: Ljava/io/File :: v67 = v15.getParentFile()::
6868 :: CALL :: call :: Z :: v69 = v67.mkdirs()::
6874 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::
6879 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v15)::
6884 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#(': ))::
6889 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(v70)::
6894 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
6903 :: CALL :: call :: Z :: v86 = v17.delete()::
6907 :: CALL :: call :: Z :: v88 = v15.exists()::JM,6911
6911 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 359::CD,6912:CF,6953
6912 :: CALL :: call :: Z :: v90 = v15.renameTo(v17)::
6919 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v105 = new java.lang.StringBuilder::
6924 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v105.append(v15)::
6929 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#(' => '))::
6934 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v17)::
6939 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(#('))::
6944 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
6953 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 391::CF,6954:CD,6959:CD,6964:CD,6969:CD,6973
6954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
6959 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v14)::
6964 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
6969 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
6973 :: CALL :: call :: V :: log(v99)::CL,7090
6976 :: CALL :: call :: V :: v39.saveDocument(v14)::CL,8796
6980 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 405::CD,6981
6981 :: CALL :: call :: Z :: v103 = v17.delete()::
6987 :: EXPR :: assign :: null :: PHI v32 = #(1), #(0)::DD,6814
6988 :: EXPR :: assign :: null :: PHI v55 = #(0), #(1)::DD,6816
7077 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Option.isVerbose(int)::CF,7078:CD,7081:CD,7082
7078 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Option.isVerbose(int)::JM,6817:JM,6840:JM,6953:JM,6782:JM,10878
7081 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $options  && #(16)::DD,7082
7082 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 10::CD,7083:CD,7084
7083 :: NORM :: compound :: Z :: return #(1)::CF,7078
7084 :: NORM :: compound :: Z :: return #(0)::CF,7078
7090 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.log(java.lang.Object)::CD,7096
7096 :: CALL :: call :: V :: v3.println(p1 $toLog )::
7127 :: PRED :: IF :: Z :: if (p1 $fileName  == #(null)) goto 33::CD,7128:CD,7133
7128 :: CALL :: call :: Z :: v10 = p1 $fileName .startsWith(#(file:))::JM,7128:JM,7133
7133 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 33::CD,7136
7136 :: CALL :: call :: Ljava/lang/String :: v14 = v12.fromURI(p1 $fileName )::
7151 :: EXPR :: modify :: I :: p0 $this .columnNumber = p3 $columnNumber ::
7817 :: CALL :: call :: Lorg/apache/tools/ant/BuildException :: v16 = p0 $this .tooManyAttributes()::JM,7841
7822 :: EXPR :: reference :: Z :: v7 = p0 $this .fileAttributeUsed::DD,7825
7825 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 37::CD,7826
7826 :: CALL :: call :: Ljava/io/File :: v9 = p0 $this .getDir()::
7836 :: CALL :: call :: Lorg/apache/tools/ant/BuildException :: v14 = p0 $this .dirAndFileAreMutuallyExclusive()::JM,7841
7841 :: EXPR :: modify :: Ljava/io/File :: p0 $this .dir = p1 $dir ::
7844 :: EXPR :: modify :: Lorg/apache/tools/ant/DirectoryScanner :: p0 $this .directoryScanner = #(null)::
7860 :: EXIT :: exit :: Lorg/apache/tools/ant/DirectoryScanner :: org.apache.tools.ant.types.AbstractFileSet.getDirectoryScanner(org.apache.tools.ant.Project)::JM,6661
7864 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,7874:JM,7892:JM,7879:JM,8058:JM,7868
7868 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 18::CD,7869:CD,7874:CD,7879:CD,7880:CD,7887:CD,8070:CD,8073:CD,8076:JM,7892:JM,8058:JM,7868
7869 :: CALL :: call :: Lorg/apache/tools/ant/types/AbstractFileSet :: v86 = p0 $this .getRef(p1 $p )::JM,7874:JM,7879
7874 :: CALL :: call :: Lorg/apache/tools/ant/DirectoryScanner :: v88 = v86.getDirectoryScanner(p1 $p )::JM,7874:JM,7879:JM,7892:JM,8058:JM,7868
7879 :: NORM :: compound :: Lorg/apache/tools/ant/DirectoryScanner :: return v88::DD,7860
7880 :: CALL :: call :: V :: p0 $this .dieOnCircularReference()::JM,7874:JM,7892:JM,7879:JM,8058:JM,7868
7884 :: EXPR :: reference :: Lorg/apache/tools/ant/DirectoryScanner :: v9 = p0 $this .directoryScanner::DD,7887
7887 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 51::CD,7888:CD,7892:CD,8024:CD,8028:CD,8036:CD,8043:CD,8050:CD,8054:CD,8058:CD,8075:CD,8076:JM,7874:JM,7879:JM,7868
7888 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v11 = p0 $this .getProject()::JM,7874:JM,7892:JM,7879:JM,8058:JM,7868
7892 :: PRED :: IF :: Z :: if (p1 $p  != v11) goto 51::CD,8024:CD,8028:CD,8036:CD,8043:CD,8050:CD,8054:CD,8058:CD,8075:CD,8076
7893 :: EXPR :: reference :: Lorg/apache/tools/ant/DirectoryScanner :: v80 = p0 $this .directoryScanner::DD,8076
7901 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v64 = new org.apache.tools.ant.BuildException::
7902 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
7906 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(#(No directory specifie...))::
7911 :: CALL :: call :: Ljava/lang/String :: v71 = p0 $this .getDataTypeName()::
7915 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(v71)::
7920 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#(.))::
7925 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
7946 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v50 = new org.apache.tools.ant.BuildException::
7947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
7951 :: EXPR :: reference :: Ljava/io/File :: v53 = p0 $this .dir::
7954 :: CALL :: call :: Ljava/lang/String :: v55 = v53.getAbsolutePath()::
7958 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v51.append(v55)::
7963 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( does not exist.))::
7968 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
7993 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v36 = new org.apache.tools.ant.BuildException::
7994 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
7998 :: EXPR :: reference :: Ljava/io/File :: v39 = p0 $this .dir::
8001 :: CALL :: call :: Ljava/lang/String :: v41 = v39.getAbsolutePath()::
8005 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(v41)::
8010 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( is not a directory.))::
8015 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
8024 :: NORM :: declaration :: Lorg/apache/tools/ant/DirectoryScanner :: v23 = new org.apache.tools.ant.DirectoryScanner::JM,8036:JM,8043:JM,8050:DD,8075:DD,8076
8028 :: CALL :: call :: V :: p0 $this .setupDirectoryScanner(v23, p1 $p )::
8033 :: EXPR :: reference :: Z :: v26 = p0 $this .followSymlinks::JM,8036
8036 :: CALL :: call :: V :: v23.setFollowSymlinks(v26)::JM,8036
8040 :: EXPR :: reference :: Z :: v28 = p0 $this .errorOnMissingDir::JM,8043
8043 :: CALL :: call :: V :: v23.setErrorOnMissingDir(v28)::JM,8043
8047 :: EXPR :: reference :: I :: v30 = p0 $this .maxLevelsOfSymlinks::JM,8050
8050 :: CALL :: call :: V :: v23.setMaxLevelsOfSymlinks(v30)::JM,8050
8054 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v33 = p0 $this .getProject()::JM,7874:JM,7892:JM,7879:JM,8058:JM,7868
8058 :: PRED :: IF :: Z :: if (p1 $p  != v33) goto 247::CD,8075
8060 :: EXPR :: reference :: Lorg/apache/tools/ant/DirectoryScanner :: v34 = p0 $this .directoryScanner::DD,8075
8063 :: EXPR :: modify :: Lorg/apache/tools/ant/DirectoryScanner :: p0 $this .directoryScanner = v35::
8070 :: CALL :: call :: V :: v81.scan()::
8073 :: NORM :: compound :: Lorg/apache/tools/ant/DirectoryScanner :: return v81::DD,7860
8075 :: EXPR :: assign :: null :: PHI v35 = v23, v34::DD,8063
8076 :: EXPR :: assign :: null :: PHI v81 = v80, v23::DD,8073
8128 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v6 = p0 $this .getProject()::JM,8132
8132 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 21::CD,8143
8143 :: PRED :: IF :: Z :: if (p2 $msgLevel  > #(2)) goto 31::CD,8146
8146 :: CALL :: call :: V :: v9.println(p1 $msg )::
8160 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.translatePath(java.io.File,java.lang.String,java.lang.String)::CE,8161:CD,8166:CD,8167:CD,8175:CD,8177:CD,8182:CD,8187:CD,8192:CD,8196
8161 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.util.preprocessor.Preprocessor.translatePath(java.io.File,java.lang.String,java.lang.String)::
8166 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,8196:JM,8167
8167 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $dir .getPath()::JM,8167
8175 :: EXPR :: reference :: C :: v9 = java.io.File.separatorChar::JM,8196
8177 :: CALL :: call :: Ljava/lang/StringBuffer :: v11 = v5.append(v9)::JM,8196
8182 :: CALL :: call :: Ljava/lang/String :: v13 = translateFileExtension(p2 $fileName , p3 $ext )::JM,8196:CL,10343
8187 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = v11.append(v13)::JM,8196
8192 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,8196
8196 :: NORM :: compound :: Ljava/lang/String :: return v17::DD,8161
8202 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Option.isTestOnly(int)::CF,8203:CD,8206:CD,8207
8203 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Option.isTestOnly(int)::JM,6862
8206 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $options  && #(8)::DD,8207
8207 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 10::CD,8208:CD,8209
8208 :: NORM :: compound :: Z :: return #(1)::CF,8203
8209 :: NORM :: compound :: Z :: return #(0)::CF,8203
8215 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Option.isBackup(int)::CF,8216:CD,8219:CD,8220
8216 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Option.isBackup(int)::JM,6980
8219 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $options  && #(1)::DD,8220
8220 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,8221:CD,8222
8221 :: NORM :: compound :: Z :: return #(1)::CF,8216
8222 :: NORM :: compound :: Z :: return #(0)::CF,8216
8240 :: PRED :: IF :: Z :: if (p4 $resolver  != #(null)) goto 41::CF,8241:CD,8246
8241 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
8246 :: CALL :: call :: Ljava/io/File :: v13 = v10.getParentFile()::
8262 :: PRED :: IF :: Z :: if (p5 $predefined  == #(null)) goto 61::CD,8263:CD,8267:CD,8271:JM,10438:JM,10504
8263 :: CALL :: call :: Ljava/lang/String :: v17 = p5 $predefined .trim()::JM,8263:JM,10504:JM,8267:JM,8271
8267 :: CALL :: call :: I :: v19 = v17.length()::JM,8267:JM,8271
8271 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 75::JM,10438:JM,10480:JM,10487
8312 :: NORM :: declaration :: Ljava/util/Stack :: v31 = new java.util.Stack::JM,8262:JM,8263:JM,10504:JM,8267:JM,8271
8358 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.loadDocument()::CD,8371:CD,8379:CD,8387:CD,8392:CD,8400:CD,8405:CD,8410:CD,8420:CD,8428:CD,8433:CD,8438:CD,8443
8371 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v7 = v3.load(v4, v5)::CL,10515
8379 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
8384 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .encoding::
8387 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v26.append(v29)::
8392 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#(' reading file '))::
8397 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .documentPath::
8400 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
8405 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#('))::
8410 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
8420 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
8425 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .documentPath::
8428 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
8433 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(': ))::
8438 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(v8)::
8443 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
8459 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.preprocess()::CE,8460:CD,8475:CD,8480
8460 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Preprocessor.preprocess()::JM,6812
8475 :: CALL :: call :: Z :: v9 = v6.contains(#(//#))::JM,8480:CL,10754
8480 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 26::CD,8481:JM,10808:JM,10815:CD,8490:CD,8506:CD,8510:CD,8552:CD,8557:CD,8559:CD,8561
8481 :: NORM :: compound :: Z :: return #(0)::DD,8460
8490 :: CALL :: call :: V :: p0 $this .preprocessImpl()::CL,10827
8506 :: CALL :: call :: Z :: v17 = isFilter(v15)::JM,8510:CL,11013
8510 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 121::CD,8514:CD,8518:CD,8548:CD,8560
8514 :: CALL :: call :: I :: v20 = v18.size()::JM,8518:CL,11026
8518 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v20 - #(1)::DD,8560
8523 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getSourceLine(v36)::CL,11039
8528 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Line :: v27 = p0 $this .resolveLine(v25)::CL,11056
8533 :: CALL :: call :: Z :: v30 = v27.isType(#(14))::JM,8538:CL,11078
8538 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 113::CD,8542:CF,8547
8542 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v33 = v31.deleteSourceLine(v36)::CL,11093
8547 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(-1)::DD,8560
8548 :: PRED :: IF :: Z :: if (v36 >= #(0)) goto 84::CD,8523:CD,8528:CD,8533:CD,8538:CD,8547:CD,8560
8552 :: CALL :: call :: Z :: v39 = v37.equals(v10)::JM,8557:CL,11109
8557 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 136::CD,8561
8559 :: NORM :: compound :: Z :: return v40::DD,8460
8560 :: EXPR :: assign :: null :: PHI v36 = v22, v35::DD,8547:DD,8548
8561 :: EXPR :: assign :: null :: PHI v40 = #(0), #(1)::CF,8559
8796 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.saveDocument(java.lang.Object)::CD,8804:CD,8808:CD,8823:CD,8831:CD,8836:CD,8841:CD,8846:CD,8851:CD,8861:CD,8866:CD,8871:CD,8876:CD,8881
8804 :: CALL :: call :: I :: v6 = v4.size()::JM,8808:CL,11026
8808 :: PRED :: IF :: Z :: if (v6 <= #(0)) goto 105::CD,8815
8815 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v11 = v8.save(p1 $target , v9)::CL,11283
8823 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
8828 :: EXPR :: reference :: Ljava/lang/String :: v32 = p0 $this .encoding::
8831 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v29.append(v32)::
8836 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(#(' writing '))::
8841 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(p1 $target )::
8846 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#('))::
8851 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
8861 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
8866 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(p1 $target )::
8871 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(': ))::
8876 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(v12)::
8881 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
8961 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .cacheFromUriRequest::JM,8964:JM,8983:JM,8969:JM,9005:JM,8975
8964 :: CALL :: call :: Z :: v7 = p1 $uri .equals(v5)::JM,8994:JM,8964:JM,8983:JM,8969:JM,9005:JM,8975
8969 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,8975:CD,8979:CD,8983:CD,9005:JM,8994:JM,8964:JM,8969
8975 :: CALL :: call :: Ljava/lang/String :: v10 = fromURI(p1 $uri )::JM,8994:JM,8964:JM,8983:JM,8969:JM,9005:JM,8975
8979 :: CALL :: call :: Z :: v12 = isAbsolutePath(v10)::JM,8983:JM,9005
8983 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CD,8984:CD,8989:CD,9005
8984 :: CALL :: call :: Ljava/io/File :: v14 = p0 $this .normalize(v10)::JM,8989:JM,9005
8989 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAbsolutePath()::JM,8989:JM,9005
8994 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheFromUriRequest = p1 $uri ::
8997 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheFromUriResponse = v17::
9005 :: EXPR :: assign :: null :: PHI v17 = v16, v10::DD,8997
9550 :: CALL :: call :: Ljava/io/File :: v6 = p0 $this .getDir(v4)::
9559 :: EXIT :: exit :: Lorg/apache/tools/ant/types/AbstractFileSet :: org.apache.tools.ant.types.AbstractFileSet.getRef(org.apache.tools.ant.Project)::JM,7874:JM,7879:JM,12625:JM,12620
9563 :: CALL :: call :: Ljava/lang/Object :: v5 = p0 $this .getCheckedRef(p1 $p )::JM,9568
9568 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,9569
9569 :: NORM :: compound :: Lorg/apache/tools/ant/types/AbstractFileSet :: return v6::DD,9559
9573 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.types.DataType.getDataTypeName()::
9580 :: CALL :: call :: Ljava/lang/String :: v7 = getElementName(v4, p0 $this , #(1))::JM,9586
9586 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,9573
9596 :: CALL :: call :: Z :: v6 = p0 $this .isReference()::JM,9600:JM,9698:JM,9700:JM,9720:JM,9626
9600 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 20::CD,9601:CD,9612:CD,9626:CD,9630:CD,9635:CD,9639:CD,9643:CD,9648:CD,9656:CD,9661:CD,9666:CD,9671:CD,9680:CD,9685:CD,9689:CD,9694:CD,9698:CD,9699:CD,9713:CD,9720:JM,9600:JM,9700
9601 :: CALL :: call :: Lorg/apache/tools/ant/types/AbstractFileSet :: v54 = p0 $this .getRef(p2 $p )::
9612 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p2 $p )::JM,9600:JM,9698:JM,9700:JM,9720:JM,9626
9617 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v50 = new java.lang.IllegalArgumentException::
9623 :: EXPR :: reference :: Ljava/io/File :: v10 = p0 $this .dir::JM,9600:JM,9720:JM,9626
9626 :: CALL :: call :: V :: p1 $ds .setBasedir(v10)::JM,9600:JM,9698:JM,9700:JM,9720:JM,9626
9630 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet :: v13 = p0 $this .mergePatterns(p2 $p )::
9635 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
9639 :: CALL :: call :: Ljava/lang/String :: v17 = p0 $this .getDataTypeName()::
9643 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
9648 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(: Setup scanner in dir ))::
9656 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::
9661 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#( with ))::
9666 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(v13)::
9671 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
9680 :: CALL :: call :: [Ljava/lang/String :: v36 = v13.getIncludePatterns(p2 $p )::
9685 :: CALL :: call :: V :: p1 $ds .setIncludes(v36)::JM,9600:JM,9698:JM,9700:JM,9720:JM,9626
9689 :: CALL :: call :: [Ljava/lang/String :: v39 = v13.getExcludePatterns(p2 $p )::
9694 :: CALL :: call :: V :: p1 $ds .setExcludes(v39)::JM,9600:JM,9698:JM,9700:JM,9720:JM,9626
9698 :: EXPR :: assign :: Z :: v41=p1 $ds  INSTANCEOF org.apache.tools.ant.types.selectors.SelectorScanner::DD,9699
9699 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 144::CD,9700:CD,9701:CD,9706
9700 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST p1 $ds ::JM,9706
9701 :: CALL :: call :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: v44 = p0 $this .getSelectors(p2 $p )::JM,9706
9706 :: CALL :: call :: V :: v42.setSelectors(v44)::JM,9706
9710 :: EXPR :: reference :: Z :: v46 = p0 $this .useDefaultExcludes::DD,9713
9713 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 158::CD,9714:JM,9600:JM,9720:JM,9626
9714 :: CALL :: call :: V :: p1 $ds .addDefaultExcludes()::JM,9600:JM,9720:JM,9626
9717 :: EXPR :: reference :: Z :: v48 = p0 $this .caseSensitive::JM,9600:JM,9720:JM,9626
9720 :: CALL :: call :: V :: p1 $ds .setCaseSensitive(v48)::JM,9600:JM,9720:JM,9626
9774 :: EXPR :: reference :: Z :: v4 = p0 $this .scanning::DD,9777
9777 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 52::CD,9814:CD,9820:CD,9822:CD,9838:CD,9840:CD,9852:CD,9889:CD,10173:CD,10174:CD,10175:CD,10176
9807 :: EXPR :: reference :: Ljava/io/File :: v7 = p0 $this .basedir::DD,9892:DD,9961:DD,10115:DD,10142
9811 :: EXPR :: modify :: Ljava/lang/IllegalStateException :: p0 $this .illegal = #(null)::
9814 :: CALL :: call :: V :: p0 $this .clearResults()::JM,10057
9817 :: EXPR :: reference :: [Ljava/lang/String :: v10 = p0 $this .includes::DD,9820
9820 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 98::CD,10173
9822 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 114::CD,9823:CD,10174
9823 :: NORM :: declaration :: [Ljava/lang/String :: v13 = new java.lang.String[]::DD,10174
9824 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(0)] = #(**)::
9829 :: EXPR :: reference :: [Ljava/lang/String :: v12 = p0 $this .includes::DD,10174
9832 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .includes = v15::
9835 :: EXPR :: reference :: [Ljava/lang/String :: v16 = p0 $this .excludes::DD,9838
9838 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 137::CD,10175
9840 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 148::CD,9841:CD,10176
9841 :: NORM :: declaration :: [Ljava/lang/String :: v19 = new java.lang.String[]::DD,10176
9843 :: EXPR :: reference :: [Ljava/lang/String :: v18 = p0 $this .excludes::DD,10176
9846 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .excludes = v20::
9849 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .basedir::DD,9852
9852 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 204::CD,9856
9853 :: EXPR :: reference :: Z :: v22 = p0 $this .followSymlinks::DD,9856
9856 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 204::CD,9857:CD,9862:CD,9867
9857 :: EXPR :: reference :: Lorg/apache/tools/ant/util/SymbolicLinkUtils :: v23 = org.apache.tools.ant.DirectoryScanner.SYMLINK_UTILS::JM,9867
9859 :: EXPR :: reference :: Ljava/io/File :: v24 = p0 $this .basedir::JM,9867
9862 :: CALL :: call :: Z :: v26 = v23.isSymbolicLink(v24)::JM,9867
9867 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 204::CD,9874:CD,9878
9868 :: EXPR :: reference :: Ljava/util/Set :: v27 = p0 $this .notFollowedSymlinks::
9871 :: EXPR :: reference :: Ljava/io/File :: v28 = p0 $this .basedir::JM,9874
9874 :: CALL :: call :: Ljava/lang/String :: v30 = v28.getAbsolutePath()::JM,9874
9878 :: CALL :: call :: Z :: v32 = v27.add(v30)::
9883 :: EXPR :: modify :: Ljava/io/File :: p0 $this .basedir = #(null)::
9886 :: EXPR :: reference :: Ljava/io/File :: v33 = p0 $this .basedir::DD,9889
9889 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 257::CD,9890:CD,9916:CD,9920
9890 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 417::CD,10034:CD,10039:CD,10089:CD,10092:CD,10095:CD,10103:CD,10177:CD,10178
9892 :: EXPR :: modify :: Ljava/io/File :: p0 $this .basedir = v7::
9913 :: EXPR :: reference :: Ljava/io/File :: v34 = p0 $this .basedir::JM,9920:JM,9916
9916 :: CALL :: call :: Z :: v36 = v34.exists()::JM,9920:JM,9916
9920 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 357::CD,9924:CD,9985:CD,9989:CD,10034:CD,10039:CD,10089:CD,10092:CD,10095:CD,10103:CD,10177:CD,10178
9921 :: EXPR :: reference :: Z :: v55 = p0 $this .errorOnMissingDir::DD,9924
9924 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 315::CD,9925:CD,9926:CD,9930:CD,9938:CD,9943:CD,9948:CD,10034:CD,10039:CD,10089:CD,10092:CD,10095:CD,10103:CD,10177:CD,10178
9925 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v60 = new java.lang.IllegalStateException::DD,9956:CF,9926
9926 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
9930 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v61.append(#(basedir ))::
9938 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v64.append(v65)::
9943 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#( does not exist.))::
9948 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
9956 :: EXPR :: modify :: Ljava/lang/IllegalStateException :: p0 $this .illegal = v60::
9961 :: EXPR :: modify :: Ljava/io/File :: p0 $this .basedir = v7::
9982 :: EXPR :: reference :: Ljava/io/File :: v37 = p0 $this .basedir::JM,9985:JM,9989
9985 :: CALL :: call :: Z :: v39 = v37.isDirectory()::JM,9985:JM,9989
9989 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 405::CD,9990:CD,9991:CD,9995:CD,10003:CD,10008:CD,10013
9990 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v40 = new java.lang.IllegalStateException::DD,10021:CF,9991
9991 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
9995 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(#(basedir ))::
10003 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(v46)::
10008 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(#( is not a directory.))::
10013 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
10021 :: EXPR :: modify :: Ljava/lang/IllegalStateException :: p0 $this .illegal = v40::
10034 :: CALL :: call :: Z :: v78 = p0 $this .isIncluded(v76)::JM,10039
10039 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 486::CD,10042:CD,10047:CD,10085
10042 :: CALL :: call :: Z :: v84 = p0 $this .isExcluded(v82)::JM,10047
10047 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 474::CD,10051:CD,10057:CD,10077
10048 :: EXPR :: reference :: Ljava/io/File :: v87 = p0 $this .basedir::JM,10057
10051 :: CALL :: call :: Z :: v89 = p0 $this .isSelected(#(), v87)::JM,10057
10057 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 462::CD,10061:CD,10069
10058 :: EXPR :: reference :: Ljava/util/Vector :: v92 = p0 $this .dirsIncluded::
10061 :: CALL :: call :: V :: v92.addElement(#())::
10066 :: EXPR :: reference :: Ljava/util/Vector :: v90 = p0 $this .dirsDeselected::
10069 :: CALL :: call :: V :: v90.addElement(#())::
10074 :: EXPR :: reference :: Ljava/util/Vector :: v85 = p0 $this .dirsExcluded::
10077 :: CALL :: call :: V :: v85.addElement(#())::
10082 :: EXPR :: reference :: Ljava/util/Vector :: v79 = p0 $this .dirsNotIncluded::
10085 :: CALL :: call :: V :: v79.addElement(#())::
10089 :: CALL :: call :: V :: p0 $this .checkIncludePatterns()::
10092 :: CALL :: call :: V :: p0 $this .clearCaches()::JM,10057
10095 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 512::CD,10177
10097 :: EXPR :: reference :: [Ljava/lang/String :: v96 = p0 $this .includes::DD,10177
10100 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .includes = v97::
10103 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 529::CD,10178
10105 :: EXPR :: reference :: [Ljava/lang/String :: v98 = p0 $this .excludes::DD,10178
10108 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .excludes = v99::
10115 :: EXPR :: modify :: Ljava/io/File :: p0 $this .basedir = v7::
10142 :: EXPR :: modify :: Ljava/io/File :: p0 $this .basedir = v7::
10173 :: EXPR :: assign :: null :: PHI v11 = #(1), #(0)::DD,9822:DD,9890:DD,10095
10174 :: EXPR :: assign :: null :: PHI v15 = v13, v12::DD,9832
10175 :: EXPR :: assign :: null :: PHI v17 = #(1), #(0)::DD,9840:DD,10103
10176 :: EXPR :: assign :: null :: PHI v20 = v19, v18::DD,9846
10177 :: EXPR :: assign :: null :: PHI v97 = #(null), v96::DD,10100
10178 :: EXPR :: assign :: null :: PHI v99 = #(null), v98::DD,10108
10343 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.translateFileExtension(java.lang.String,java.lang.String)::CE,10344:CD,10348:CD,10398:CD,10400:JM,10354:JM,10399
10344 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.util.preprocessor.Preprocessor.translateFileExtension(java.lang.String,java.lang.String)::JM,8196
10348 :: PRED :: IF :: Z :: if (p2 $ext  == #(null)) goto 61::CF,10400:CD,10349:CD,10354:CD,10399:JM,10348
10349 :: CALL :: call :: I :: v7 = p1 $fileName .lastIndexOf(#(46))::JM,10400:JM,10354:JM,10348:JM,10399
10354 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 36::CF,10374:CF,10355:CD,10356:CD,10364:CD,10369:CD,10375:CD,10381:CD,10389:CD,10394:CD,10399:CD,10400
10355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::JM,10399
10356 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(p1 $fileName )::
10364 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v19.append(p2 $ext )::JM,10399:JM,10354:JM,10348
10369 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::JM,10399
10374 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::JM,10399:JM,10400:JM,10354:JM,10348
10375 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $fileName .substring(#(0), v7)::JM,10400:JM,10354:JM,10348:JM,10399
10381 :: CALL :: call :: Ljava/lang/String :: v13 = valueOf(v11)::
10389 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v9.append(p2 $ext )::JM,10399:JM,10354:JM,10348
10394 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::JM,10399
10398 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,10344
10399 :: EXPR :: assign :: null :: PHI v27 = v26, v18::CF,10400
10400 :: EXPR :: assign :: null :: PHI v28 = p1 $fileName , v27::CF,10398
10438 :: NORM :: declaration :: Ljava/util/Hashtable :: v4 = new java.util.Hashtable::
10480 :: NORM :: declaration :: Ljava/util/Hashtable :: v5 = new java.util.Hashtable::
10487 :: CALL :: call :: V :: p0 $this .defineCSV(p1 $csvExpressions )::CL,13466
10504 :: NORM :: declaration :: Ljava/util/Vector :: v4 = new java.util.Vector::JM,8267:JM,8271
10515 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.load(java.lang.Object,java.lang.String)::CD,10521:CD,10522:CD,10622:CD,10623:CD,10628:CD,10633:CD,10642:CD,10654:CD,10658:CD,10661:CD,10666:CD,10678:CD,10679:JM,10609:JM,10578:JM,10547:JM,10611:JM,10616:JM,10523
10521 :: EXPR :: assign :: Z :: v7=p1 $source  INSTANCEOF java.io.InputStream::DD,10522
10522 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 63::CD,10523:CD,10524:CD,10528:CD,10541:CD,10547:CD,10548:CD,10675:CD,10678:CD,10679
10523 :: EXPR :: assign :: Ljava/lang/Object :: v50 = CHECKCAST p1 $source ::
10524 :: CALL :: call :: Z :: v52 = isEncoding(p2 $encoding )::JM,10528:CL,13550
10528 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 38::CF,10536:CF,10529:CD,10675
10529 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v55 = new java.io.InputStreamReader::DD,10675
10536 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v53 = new java.io.InputStreamReader::DD,10675
10541 :: NORM :: declaration :: Ljava/io/BufferedReader :: v58 = new java.io.BufferedReader::DD,10678
10547 :: EXPR :: assign :: Z :: v8=p1 $source  INSTANCEOF java.io.File::DD,10548
10548 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 130::CF,10549:CD,10555:CD,10559:CD,10572:CD,10578:CD,10579:CD,10676:CD,10678:CD,10679
10549 :: NORM :: declaration :: Ljava/io/FileInputStream :: v38 = new java.io.FileInputStream::
10555 :: CALL :: call :: Z :: v42 = isEncoding(p2 $encoding )::JM,10559:CL,13550
10559 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 102::CF,10567:CF,10560:CD,10676
10560 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v45 = new java.io.InputStreamReader::DD,10676
10567 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v43 = new java.io.InputStreamReader::DD,10676
10572 :: NORM :: declaration :: Ljava/io/BufferedReader :: v48 = new java.io.BufferedReader::DD,10678
10578 :: EXPR :: assign :: Z :: v9=p1 $source  INSTANCEOF java.lang.String::DD,10579
10579 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 197::CF,10580:CD,10586:CD,10590:CD,10603:CD,10609:CD,10610:CD,10677:CD,10678:CD,10679
10580 :: NORM :: declaration :: Ljava/io/FileInputStream :: v25 = new java.io.FileInputStream::
10586 :: CALL :: call :: Z :: v29 = isEncoding(p2 $encoding )::JM,10590:CL,13550
10590 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 169::CF,10598:CF,10591:CD,10677
10591 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v32 = new java.io.InputStreamReader::DD,10677
10598 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v30 = new java.io.InputStreamReader::DD,10677
10603 :: NORM :: declaration :: Ljava/io/BufferedReader :: v36 = new java.io.BufferedReader::DD,10678
10609 :: EXPR :: assign :: Z :: v10=p1 $source  INSTANCEOF java.io.BufferedReader::DD,10610
10610 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 212::CD,10611:CD,10615:CD,10616:CD,10678:CD,10679
10611 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST p1 $source ::DD,10678
10615 :: NORM :: declaration :: Ljava/io/BufferedReader :: v21 = new java.io.BufferedReader::DD,10678:CF,10616
10616 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST p1 $source ::
10622 :: NORM :: declaration :: Ljava/io/IOException :: v12 = new java.io.IOException::
10623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
10628 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $source )::
10633 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
10642 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v65 = p0 $this .clear()::CL,13691
10646 :: EXPR :: reference :: Ljava/util/Vector :: v66 = p0 $this .lines::
10650 :: CALL :: call :: V :: v66.addElement(v68)::JM,10658
10654 :: CALL :: call :: Ljava/lang/String :: v68 = v60.readLine()::JM,10658
10658 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 275::CD,10650:CD,10654
10661 :: CALL :: call :: V :: v60.close()::
10666 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 325::CD,10667
10667 :: CALL :: call :: V :: v60.close()::
10675 :: EXPR :: assign :: null :: PHI v57 = v55, v53::CF,10541
10676 :: EXPR :: assign :: null :: PHI v47 = v45, v43::CF,10572
10677 :: EXPR :: assign :: null :: PHI v34 = v32, v30::CF,10603
10678 :: EXPR :: assign :: null :: PHI v60 = v58, v48, v36, v24, v21::CF,10679:JM,10658
10679 :: EXPR :: assign :: null :: PHI v61 = #(0), #(1), #(1), #(0), #(0)::DD,10666
10754 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.contains(java.lang.String)::CE,10755:CD,10762:CD,10781:CD,10783:JM,10778
10755 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Document.contains(java.lang.String)::JM,8480
10759 :: EXPR :: reference :: Ljava/util/Vector :: v4 = p0 $this .lines::JM,10781:JM,10772
10762 :: CALL :: call :: I :: v6 = v4.size()::JM,10781
10767 :: CALL :: call :: Ljava/lang/Object :: v9 = v4.elementAt(v15)::JM,10772
10772 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::JM,10778
10773 :: CALL :: call :: I :: v12 = v10.indexOf(p1 $pattern )::JM,10778
10778 :: PRED :: IF :: Z :: if (v12 < #(0)) goto 34::CD,10779:CD,10780:CD,10781:CD,10783
10779 :: NORM :: compound :: Z :: return #(1)::DD,10755
10780 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,10783
10781 :: PRED :: IF :: Z :: if (v15 < v6) goto 19::CD,10767:CD,10772:CD,10773:CD,10778:CD,10782
10782 :: NORM :: compound :: Z :: return #(0)::DD,10755
10783 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::JM,10772:DD,10780:DD,10781
10808 :: NORM :: declaration :: Ljava/util/Vector :: v5 = new java.util.Vector::
10815 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v8 = p0 $this .appendDocument(p1 $source )::CL,13704
10827 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.preprocessImpl()::CD,10915:CD,10920:CD,10928:CD,10933:CD,10934:CD,10939:CD,10947:CD,10952:CD,10957:CD,10969:CD,10973:CD,10977
10835 :: CALL :: call :: Ljava/lang/String :: v9 = v7.getSourceLine(v16)::CL,11039
10840 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Line :: v11 = p0 $this .resolveLine(v9)::CL,11056
10845 :: CALL :: call :: I :: v13 = v11.getType()::JM,10849:CL,13752
10849 :: PRED :: IF :: null :: switch v13::CD,10850:CD,10860:CD,10865:CD,10874:CD,10878:CD,10906:CD,10908:CD,10912:CD,10977
10850 :: CALL :: call :: I :: v15 = p0 $this .processInclude(v16, v11)::JM,10977:CL,13761
10860 :: CALL :: call :: Ljava/lang/String :: v19 = p0 $this .toSourceLine(v11)::CL,13943
10865 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v21 = v17.setSourceLine(v16, v19)::CL,14058
10874 :: CALL :: call :: Z :: v24 = isVerbose(v22)::JM,10878:CL,7077
10878 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 138::CF,10879:CD,10886:CD,10894:CD,10899:CD,10903:CF,10906
10879 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
10886 :: CALL :: call :: Ljava/lang/String :: v32 = valueOf(v30)::
10894 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v25.append(v11)::
10899 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
10903 :: CALL :: call :: V :: log(v37)::CL,7090
10906 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v16 + #(1)::DD,10977
10908 :: CALL :: call :: V :: p0 $this .processDirective(v11)::CL,14099
10912 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v16 + #(1)::DD,10977
10915 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
10920 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v47)::
10928 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v45.append(#( at line ))::
10933 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v16 + #(1)::
10934 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(v54)::
10939 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#( in '))::
10944 :: EXPR :: reference :: Ljava/lang/String :: v60 = p0 $this .documentPath::
10947 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(v60)::
10952 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#('))::
10957 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
10969 :: CALL :: call :: I :: v6 = v4.size()::JM,10973:CL,11026
10973 :: PRED :: IF :: Z :: if (v16 < v6) goto 9::CD,10835:CD,10840:CD,10845:CD,10849:CD,10969:CD,10977
10977 :: EXPR :: assign :: null :: PHI v16 = #(0), v15, v40, v42::DD,10906:DD,10912:DD,10933:DD,10973
11013 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Option.isFilter(int)::CF,11014:CD,11017:CD,11018
11014 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Option.isFilter(int)::JM,8510
11017 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $options  && #(2)::DD,11018
11018 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,11019:CD,11020
11019 :: NORM :: compound :: Z :: return #(1)::CF,11014
11020 :: NORM :: compound :: Z :: return #(0)::CF,11014
11026 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.size()::CE,11027:CD,11033:CD,11037
11027 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Document.size()::JM,8518:JM,8808:JM,10973:JM,13731:JM,13817:JM,13878
11030 :: EXPR :: reference :: Ljava/util/Vector :: v3 = p0 $this .lines::JM,11037
11033 :: CALL :: call :: I :: v5 = v3.size()::JM,11037
11037 :: NORM :: compound :: I :: return v5::CF,11027
11039 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.getSourceLine(int)::CD,11047
11044 :: EXPR :: reference :: Ljava/util/Vector :: v4 = p0 $this .lines::
11047 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.elementAt(p1 $index )::
11056 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.resolveLine(java.lang.String)::JM,14323
11078 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.isType(int)::CE,11079:CD,11086
11079 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Line.isType(int)::JM,8538:JM,13800:JM,13866
11083 :: EXPR :: reference :: I :: v4 = p0 $this .type::DD,11086
11086 :: PRED :: IF :: Z :: if (v4 != p1 $lineType ) goto 11::CD,11087:CD,11088
11087 :: NORM :: compound :: Z :: return #(1)::CF,11079
11088 :: NORM :: compound :: Z :: return #(0)::CF,11079
11093 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.deleteSourceLine(int)::CD,11101
11098 :: EXPR :: reference :: Ljava/util/Vector :: v4 = p0 $this .lines::
11101 :: CALL :: call :: V :: v4.removeElementAt(p1 $index )::
11109 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.equals(java.lang.Object)::CE,11110:CD,11114:JM,11116:JM,11118
11110 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Document.equals(java.lang.Object)::JM,8557
11114 :: PRED :: IF :: Z :: if (p0 $this  != p1 $o ) goto 8::CD,11115:CD,11116:CD,11117
11115 :: NORM :: compound :: Z :: return #(1)::DD,11110
11116 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.hsqldb.util.preprocessor.Document::DD,11117
11117 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 90::CD,11118:CD,11125:CD,11129:CD,11133:CD,11162
11118 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
11119 :: EXPR :: reference :: Ljava/util/Vector :: v7 = p0 $this .lines::JM,11133:JM,11139:JM,11156
11122 :: EXPR :: reference :: Ljava/util/Vector :: v8 = v6.lines::JM,11133:JM,11156
11125 :: CALL :: call :: I :: v10 = v7.size()::JM,11133
11129 :: CALL :: call :: I :: v12 = v8.size()::JM,11133
11133 :: PRED :: IF :: Z :: if (v10 == v12) goto 45::CD,11134:CD,11135:CD,11139:CD,11160:CD,11163
11134 :: NORM :: compound :: Z :: return #(0)::DD,11110
11135 :: CALL :: call :: I :: v14 = v7.size()::JM,11139
11139 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 - #(1)::DD,11163
11141 :: CALL :: call :: Ljava/lang/Object :: v18 = v7.elementAt(v25)::JM,11156
11146 :: CALL :: call :: Ljava/lang/Object :: v20 = v8.elementAt(v25)::JM,11156
11151 :: CALL :: call :: Z :: v22 = v18.equals(v20)::JM,11156
11156 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,11158:CD,11159:CD,11160:CD,11163
11158 :: NORM :: compound :: Z :: return #(0)::DD,11110
11159 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(-1)::DD,11163
11160 :: PRED :: IF :: Z :: if (v25 >= #(0)) goto 58::CD,11141:CD,11146:CD,11151:CD,11156:CD,11161
11161 :: NORM :: compound :: Z :: return #(1)::DD,11110
11162 :: NORM :: compound :: Z :: return #(0)::DD,11110
11163 :: EXPR :: assign :: null :: PHI v25 = v16, v24::JM,11156:DD,11159:DD,11160
11283 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.save(java.lang.Object,java.lang.String)::CD,11289:CD,11290:CD,11389:CD,11390:CD,11395:CD,11400:CD,11412:CD,11431:CD,11432:CD,11437:CD,11442:CD,11454:CD,11455:CD,11456:JM,11377:JM,11346:JM,11315:JM,11379:JM,11291
11289 :: EXPR :: assign :: Z :: v7=p1 $target  INSTANCEOF java.io.OutputStream::DD,11290
11290 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 63::CD,11291:CD,11292:CD,11296:CD,11309:CD,11315:CD,11316:CD,11451:CD,11454:CD,11455
11291 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST p1 $target ::
11292 :: CALL :: call :: Z :: v51 = isEncoding(p2 $encoding )::JM,11296:CL,13550
11296 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 38::CF,11304:CF,11297:CD,11451
11297 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v54 = new java.io.OutputStreamWriter::DD,11451
11304 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v52 = new java.io.OutputStreamWriter::DD,11451
11309 :: NORM :: declaration :: Ljava/io/BufferedWriter :: v57 = new java.io.BufferedWriter::DD,11454
11315 :: EXPR :: assign :: Z :: v8=p1 $target  INSTANCEOF java.io.File::DD,11316
11316 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 130::CF,11317:CD,11323:CD,11327:CD,11340:CD,11346:CD,11347:CD,11452:CD,11454:CD,11455
11317 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v37 = new java.io.FileOutputStream::
11323 :: CALL :: call :: Z :: v41 = isEncoding(p2 $encoding )::JM,11327:CL,13550
11327 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 102::CF,11335:CF,11328:CD,11452
11328 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v44 = new java.io.OutputStreamWriter::DD,11452
11335 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v42 = new java.io.OutputStreamWriter::DD,11452
11340 :: NORM :: declaration :: Ljava/io/BufferedWriter :: v47 = new java.io.BufferedWriter::DD,11454
11346 :: EXPR :: assign :: Z :: v9=p1 $target  INSTANCEOF java.lang.String::DD,11347
11347 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 197::CF,11348:CD,11354:CD,11358:CD,11371:CD,11377:CD,11378:CD,11453:CD,11454:CD,11455
11348 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v24 = new java.io.FileOutputStream::
11354 :: CALL :: call :: Z :: v28 = isEncoding(p2 $encoding )::JM,11358:CL,13550
11358 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 169::CF,11366:CF,11359:CD,11453
11359 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v31 = new java.io.OutputStreamWriter::DD,11453
11366 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v29 = new java.io.OutputStreamWriter::DD,11453
11371 :: NORM :: declaration :: Ljava/io/BufferedWriter :: v35 = new java.io.BufferedWriter::DD,11454
11377 :: EXPR :: assign :: Z :: v10=p1 $target  INSTANCEOF java.io.BufferedWriter::DD,11378
11378 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 212::CD,11379:CD,11383:CD,11454:CD,11455
11379 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST p1 $target ::DD,11454
11383 :: NORM :: declaration :: Ljava/io/BufferedWriter :: v21 = new java.io.BufferedWriter::DD,11454
11389 :: NORM :: declaration :: Ljava/io/IOException :: v12 = new java.io.IOException::
11390 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
11395 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $target )::
11400 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
11409 :: EXPR :: reference :: Ljava/util/Vector :: v63 = p0 $this .lines::JM,11431:JM,11422
11412 :: CALL :: call :: I :: v65 = v63.size()::JM,11431
11417 :: CALL :: call :: Ljava/lang/Object :: v67 = v63.elementAt(v72)::JM,11422
11422 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::
11423 :: CALL :: call :: V :: v59.write(v68)::
11427 :: CALL :: call :: V :: v59.newLine()::
11430 :: EXPR :: assign :: Ljava/lang/Object :: v71 = v72 + #(1)::DD,11456
11431 :: PRED :: IF :: Z :: if (v72 < v65) goto 278::CD,11417:CD,11422:CD,11423:CD,11427:CD,11430:CD,11456
11432 :: CALL :: call :: V :: v59.flush()::
11437 :: CALL :: call :: V :: v59.close()::
11442 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 342::CD,11443
11443 :: CALL :: call :: V :: v59.close()::
11451 :: EXPR :: assign :: null :: PHI v56 = v54, v52::CF,11309
11452 :: EXPR :: assign :: null :: PHI v46 = v44, v42::CF,11340
11453 :: EXPR :: assign :: null :: PHI v33 = v31, v29::CF,11371
11454 :: EXPR :: assign :: null :: PHI v59 = v57, v47, v35, v23, v21::CF,11455
11455 :: EXPR :: assign :: null :: PHI v60 = #(0), #(1), #(1), #(0), #(0)::DD,11442
11456 :: EXPR :: assign :: null :: PHI v72 = #(0), v71::JM,11422:DD,11430:DD,11431
11651 :: EXIT :: exit :: Ljava/io/File :: org.apache.tools.ant.util.FileUtils.normalize(java.lang.String)::JM,8989:JM,9005:JM,16112:JM,16164:JM,16117:JM,16121:JM,16126:JM,16095:JM,16147:JM,16165:JM,16152:JM,16108:JM,16157:JM,16260:JM,16251:JM,23026
11655 :: NORM :: declaration :: Ljava/util/Stack :: v4 = new java.util.Stack::JM,11711:JM,11737
11659 :: CALL :: call :: [Ljava/lang/String :: v7 = p0 $this .dissect(p1 $path )::
11664 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[#(0)]::
11668 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.push(v9)::
11673 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v12 = new java.util.StringTokenizer::JM,11689:JM,11699:JM,11706
11674 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v7[#(1)]::
11678 :: EXPR :: reference :: Ljava/lang/String :: v15 = java.io.File.separator::
11685 :: CALL :: call :: Z :: v18 = v12.hasMoreTokens()::JM,11689
11689 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 110::CF,11729:CD,11690:CD,11694:CD,11699:CD,11733:CD,11737:CD,11758:CD,11759:CD,11767:CD,11768:JM,11706
11690 :: CALL :: call :: Ljava/lang/String :: v20 = v12.nextToken()::JM,11699:JM,11706
11694 :: CALL :: call :: Z :: v23 = #(.).equals(v20)::JM,11699:JM,11706
11699 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 69::CD,11685:CD,11689:CD,11701:CD,11706
11701 :: CALL :: call :: Z :: v26 = #(..).equals(v20)::JM,11706:JM,11699
11706 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 103::CD,11685:CD,11689:CD,11707:CD,11711:CD,11723
11707 :: CALL :: call :: I :: v28 = v4.size()::JM,11711
11711 :: PRED :: IF :: Z :: if (v28 >= #(2)) goto 93::CF,11712:CD,11685:CD,11689:CD,11717:CD,11718
11712 :: NORM :: declaration :: Ljava/io/File :: v51 = new java.io.File::DD,11717
11717 :: NORM :: compound :: Ljava/io/File :: return v51::DD,11651
11718 :: CALL :: call :: Ljava/lang/Object :: v31 = v4.pop()::
11723 :: CALL :: call :: Ljava/lang/Object :: v33 = v4.push(v20)::JM,11699:JM,11706
11729 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v34 = new java.lang.StringBuffer::
11733 :: CALL :: call :: I :: v37 = v4.size()::JM,11737
11737 :: PRED :: IF :: Z :: if (v46 >= v37) goto 168::CF,11758:CD,11738:CD,11746:CD,11751:CD,11756:CD,11768
11738 :: PRED :: IF :: Z :: if (v46 <= #(1)) goto 155::CD,11739:CD,11741
11739 :: EXPR :: reference :: C :: v38 = java.io.File.separatorChar::
11741 :: CALL :: call :: Ljava/lang/StringBuffer :: v40 = v34.append(v38)::
11746 :: CALL :: call :: Ljava/lang/Object :: v42 = v4.elementAt(v46)::
11751 :: CALL :: call :: Ljava/lang/StringBuffer :: v44 = v34.append(v42)::
11756 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v46 + #(1)::DD,11768
11758 :: NORM :: declaration :: Ljava/io/File :: v47 = new java.io.File::DD,11767
11759 :: CALL :: call :: Ljava/lang/String :: v49 = v34.toString()::
11767 :: NORM :: compound :: Ljava/io/File :: return v47::DD,11651
11768 :: EXPR :: assign :: null :: PHI v46 = v45, #(0)::DD,11737:DD,11738:DD,11756
12320 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,12324
12324 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 18::CD,12325:CD,12336:JM,12324
12325 :: CALL :: call :: Lorg/apache/tools/ant/types/AbstractFileSet :: v10 = p0 $this .getRef(p1 $p )::
12336 :: CALL :: call :: V :: p0 $this .dieOnCircularReference()::JM,12324
12351 :: EXIT :: exit :: Ljava/lang/Object :: org.apache.tools.ant.types.DataType.getCheckedRef(org.apache.tools.ant.Project)::JM,9568:JM,15680
12359 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDataTypeName()::
12363 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .getCheckedRef(v5, v7, p1 $p )::JM,12370
12370 :: NORM :: compound :: Ljava/lang/Object :: return v9::DD,12351
12376 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.ComponentHelper.getElementName(org.apache.tools.ant.Project,java.lang.Object,boolean)::JM,9586
12381 :: PRED :: IF :: Z :: if (p1 $p  != #(null)) goto 10::CF,12408:CD,12382
12382 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v7 = getProject(p2 $o )::JM,12408
12386 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 25::CD,12391:CD,12397:CD,12401:CD,12409
12391 :: CALL :: call :: Ljava/lang/String :: v16 = getUnmappedElementName(v14, p3 $brief )::JM,12409
12397 :: CALL :: call :: Lorg/apache/tools/ant/ComponentHelper :: v10 = getComponentHelper(v8)::
12401 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getElementName(p2 $o , p3 $brief )::JM,12409
12407 :: NORM :: compound :: Ljava/lang/String :: return v17::DD,12376
12408 :: EXPR :: assign :: null :: PHI v8 = p1 $p , v7::DD,12386
12409 :: EXPR :: assign :: null :: PHI v17 = v16, v12::CF,12407
12425 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,12429
12429 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 18::CD,12430:CD,12441:CD,12447:CD,12455:CD,12459:CD,12477:JM,12429
12430 :: CALL :: call :: Lorg/apache/tools/ant/types/AbstractFileSet :: v24 = p0 $this .getRef(p1 $p )::
12441 :: CALL :: call :: V :: p0 $this .dieOnCircularReference()::JM,12429
12447 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.clone()::
12452 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .additionalPatterns::JM,12459
12455 :: CALL :: call :: I :: v14 = v12.size()::JM,12459
12459 :: PRED :: IF :: Z :: if (v22 >= v14) goto 77::CD,12463:CD,12469:CD,12474:CD,12477
12460 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .additionalPatterns::
12463 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.get(v22)::
12469 :: CALL :: call :: V :: v11.append(v18, p1 $p )::
12474 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,12477
12477 :: EXPR :: assign :: null :: PHI v22 = v21, #(0)::DD,12459:DD,12474
12500 :: EXIT :: exit :: [Ljava/lang/String :: org.apache.tools.ant.types.PatternSet.getIncludePatterns(org.apache.tools.ant.Project)::JM,15596:JM,15597
12504 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,12514:JM,12519:JM,12508
12508 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 19::CD,12509:CD,12514:CD,12519:CD,12520:CD,12524:CD,12531:CD,12537:JM,12508
12509 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet :: v13 = p0 $this .getRef(p1 $p )::JM,12514:JM,12519
12514 :: CALL :: call :: [Ljava/lang/String :: v15 = v13.getIncludePatterns(p1 $p )::JM,12514:JM,12519:JM,12508
12519 :: NORM :: compound :: [Ljava/lang/String :: return v15::DD,12500
12520 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p1 $p )::JM,12514:JM,12519:JM,12508
12524 :: CALL :: call :: V :: p0 $this .readFiles(p1 $p )::
12531 :: CALL :: call :: [Ljava/lang/String :: v11 = p0 $this .makeArray(v9, p1 $p )::JM,12537
12537 :: NORM :: compound :: [Ljava/lang/String :: return v11::DD,12500
12551 :: EXIT :: exit :: [Ljava/lang/String :: org.apache.tools.ant.types.PatternSet.getExcludePatterns(org.apache.tools.ant.Project)::JM,15618:JM,15619
12555 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,12565:JM,12570:JM,12559
12559 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 19::CD,12560:CD,12565:CD,12570:CD,12571:CD,12575:CD,12582:CD,12588:JM,12559
12560 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet :: v13 = p0 $this .getRef(p1 $p )::JM,12565:JM,12570
12565 :: CALL :: call :: [Ljava/lang/String :: v15 = v13.getExcludePatterns(p1 $p )::JM,12565:JM,12570:JM,12559
12570 :: NORM :: compound :: [Ljava/lang/String :: return v15::DD,12551
12571 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p1 $p )::JM,12565:JM,12570:JM,12559
12575 :: CALL :: call :: V :: p0 $this .readFiles(p1 $p )::
12582 :: CALL :: call :: [Ljava/lang/String :: v11 = p0 $this .makeArray(v9, p1 $p )::JM,12588
12588 :: NORM :: compound :: [Ljava/lang/String :: return v11::DD,12551
12602 :: EXIT :: exit :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: org.apache.tools.ant.types.AbstractFileSet.getSelectors(org.apache.tools.ant.Project)::JM,9706
12606 :: CALL :: call :: Z :: v5 = p0 $this .isReference()::JM,12625:JM,12610:JM,12620
12610 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 22::CD,12615:CD,12620:CD,12625:CD,12626:CD,12636:CD,12640:CD,12641:CD,12646:CD,12647:CD,12648:JM,12610
12615 :: CALL :: call :: Lorg/apache/tools/ant/types/AbstractFileSet :: v20 = p0 $this .getRef(v18)::JM,12625:JM,12620
12620 :: CALL :: call :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: v22 = v20.getSelectors(p1 $p )::JM,12625:JM,12620:JM,12610
12625 :: NORM :: compound :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: return v22::DD,12602
12626 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p1 $p )::JM,12625:JM,12610:JM,12620
12630 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .selectors::JM,12646
12633 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .selectors::JM,12640
12636 :: CALL :: call :: I :: v11 = v9.size()::JM,12640
12640 :: NORM :: declaration :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: v12 = new org.apache.tools.ant.types.selectors.FileSelector[]::JM,12646
12641 :: CALL :: call :: [Ljava/lang/Object :: v14 = v8.toArray(v12)::JM,12646
12646 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::CF,12647
12647 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,12648
12648 :: NORM :: compound :: [Lorg/apache/tools/ant/types/selectors/FileSelector :: return v16::DD,12602
12659 :: EXIT :: exit :: Z :: org.apache.tools.ant.DirectoryScanner.isIncluded(org.apache.tools.ant.types.selectors.TokenizedPath)::JM,10039:JM,13199:JM,16417:JM,19579:JM,19669
12663 :: CALL :: call :: V :: p0 $this .ensureNonPatternSetsReady()::
12666 :: CALL :: call :: Z :: v6 = p0 $this .isCaseSensitive()::JM,12725:JM,12683:JM,12670
12670 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 31::CD,12674:CD,12678:CD,12683:CD,12692:CD,12696:CD,12701
12671 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .includeNonPatterns::JM,12683
12674 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $path .toString()::JM,12725:JM,12683:JM,12670
12678 :: CALL :: call :: Z :: v19 = v15.containsKey(v17)::JM,12683:JM,12725
12683 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 55::CD,12702:CD,12706:CD,12707:CD,12730
12685 :: EXPR :: reference :: Ljava/util/Map :: v8 = p0 $this .includeNonPatterns::JM,12701
12692 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toUpperCase()::JM,12701
12696 :: CALL :: call :: Z :: v14 = v8.containsKey(v12)::JM,12701
12701 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 55::CD,12702:CD,12706:CD,12707:CD,12730
12702 :: NORM :: compound :: Z :: return #(1)::DD,12659
12703 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v20 = p0 $this .includePatterns::DD,12706
12706 :: EXPR :: assign :: I :: v21 = v20.length::CF,12707
12707 :: PRED :: IF :: Z :: if (v30 >= v21) goto 88::CD,12715:CD,12719:CD,12725:CD,12729
12708 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v22 = p0 $this .includePatterns::
12711 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v30]::JM,12725
12715 :: CALL :: call :: Z :: v25 = p0 $this .isCaseSensitive()::JM,12725:JM,12683:JM,12670
12719 :: CALL :: call :: Z :: v27 = v23.matchPath(p1 $path , v25)::JM,12725:JM,12683:JM,12670
12725 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 81::CD,12706:CD,12707:CD,12726:CD,12727:CD,12730
12726 :: NORM :: compound :: Z :: return #(1)::DD,12659
12727 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,12730
12729 :: NORM :: compound :: Z :: return #(0)::DD,12659
12730 :: EXPR :: assign :: null :: PHI v30 = v29, #(0)::DD,12707:DD,12727
12755 :: EXIT :: exit :: Z :: org.apache.tools.ant.DirectoryScanner.isExcluded(org.apache.tools.ant.types.selectors.TokenizedPath)::JM,10047:JM,16411:JM,19234
12759 :: CALL :: call :: V :: p0 $this .ensureNonPatternSetsReady()::
12762 :: CALL :: call :: Z :: v6 = p0 $this .isCaseSensitive()::JM,12821:JM,12779:JM,12766
12766 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 31::CD,12770:CD,12774:CD,12779:CD,12788:CD,12792:CD,12797
12767 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .excludeNonPatterns::JM,12779
12770 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $name .toString()::JM,12821:JM,12779:JM,12766
12774 :: CALL :: call :: Z :: v19 = v15.containsKey(v17)::JM,12779:JM,12821
12779 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 55::CD,12798:CD,12802:CD,12803:CD,12826
12781 :: EXPR :: reference :: Ljava/util/Map :: v8 = p0 $this .excludeNonPatterns::JM,12797
12788 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toUpperCase()::JM,12797
12792 :: CALL :: call :: Z :: v14 = v8.containsKey(v12)::JM,12797
12797 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 55::CD,12798:CD,12802:CD,12803:CD,12826
12798 :: NORM :: compound :: Z :: return #(1)::DD,12755
12799 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v20 = p0 $this .excludePatterns::DD,12802
12802 :: EXPR :: assign :: I :: v21 = v20.length::CF,12803
12803 :: PRED :: IF :: Z :: if (v30 >= v21) goto 88::CD,12811:CD,12815:CD,12821:CD,12825
12804 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v22 = p0 $this .excludePatterns::
12807 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v30]::JM,12821
12811 :: CALL :: call :: Z :: v25 = p0 $this .isCaseSensitive()::JM,12821:JM,12779:JM,12766
12815 :: CALL :: call :: Z :: v27 = v23.matchPath(p1 $name , v25)::JM,12821:JM,12779:JM,12766
12821 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 81::CD,12802:CD,12803:CD,12822:CD,12823:CD,12826
12822 :: NORM :: compound :: Z :: return #(1)::DD,12755
12823 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,12826
12825 :: NORM :: compound :: Z :: return #(0)::DD,12755
12826 :: EXPR :: assign :: null :: PHI v30 = v29, #(0)::DD,12803:DD,12823
12854 :: CALL :: call :: V :: p0 $this .ensureNonPatternSetsReady()::
12857 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::JM,12952:JM,12997:JM,13002
12861 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v7 = p0 $this .includePatterns::DD,12864
12864 :: EXPR :: assign :: I :: v8 = v7.length::CF,12865
12865 :: PRED :: IF :: Z :: if (v23 >= v8) goto 65::CD,12864:CD,12873:CD,12877:CD,12882:CD,12900:CD,13255
12866 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v9 = p0 $this .includePatterns::
12869 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v9[v23]::JM,12882
12873 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::JM,12882
12877 :: CALL :: call :: Z :: v14 = p0 $this .shouldSkipPattern(v12)::JM,13233:JM,12882:JM,13123:JM,12933
12882 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,12890:CD,12894:CF,12900
12883 :: EXPR :: reference :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v15 = p0 $this .includePatterns::
12886 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v15[v23]::
12890 :: CALL :: call :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v18 = v16.rtrimWildcardTokens()::
12894 :: CALL :: call :: Ljava/lang/Object :: v20 = v4.put(v18, v12)::JM,12882
12900 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,13255
12902 :: EXPR :: reference :: Ljava/util/Map :: v24 = p0 $this .includeNonPatterns::JM,12917:JM,12922
12905 :: CALL :: call :: Ljava/util/Set :: v26 = v24.entrySet()::JM,12917:JM,12922
12909 :: CALL :: call :: Ljava/util/Iterator :: v28 = v26.iterator()::JM,12917:JM,12922
12913 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,12917:JM,12922
12917 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 137::CD,12913:CD,12918:CD,12922:CD,12923:CD,12927:CD,12928:CD,12933:JM,12917
12918 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,12917:JM,12922
12922 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::JM,12927
12923 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.getKey()::JM,12927
12927 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,13233:JM,12882:JM,13123:JM,12933
12928 :: CALL :: call :: Z :: v38 = p0 $this .shouldSkipPattern(v36)::JM,13233:JM,12882:JM,13123:JM,12933
12933 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 133::CD,12934:CD,12938
12934 :: CALL :: call :: Ljava/lang/Object :: v40 = v33.getValue()::
12938 :: CALL :: call :: Ljava/lang/Object :: v42 = v4.put(v40, v36)::
12945 :: EXPR :: reference :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v44 = org.apache.tools.ant.types.selectors.TokenizedPath.EMPTY_PATH::JM,12952
12947 :: CALL :: call :: Z :: v46 = v4.containsKey(v44)::JM,12952
12952 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 172::CD,12956:CD,12985:CD,12989:CD,12993:CD,12997
12953 :: EXPR :: reference :: Ljava/io/File :: v47 = p0 $this .basedir::DD,12956
12956 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 172::CD,12960:CD,12985:CD,12989:CD,12993:CD,12997
12960 :: CALL :: call :: V :: p0 $this .scandir(v167, #(), #(1))::
12985 :: CALL :: call :: Ljava/util/Set :: v58 = v4.entrySet()::JM,12997:JM,13002
12989 :: CALL :: call :: Ljava/util/Iterator :: v60 = v58.iterator()::JM,12997:JM,13002
12993 :: CALL :: call :: Z :: v62 = v60.hasNext()::JM,12997:JM,13002
12997 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 656::CD,12993:CD,12998:CD,13002:CD,13003:CD,13007:CD,13008:CD,13015:JM,12997
12998 :: CALL :: call :: Ljava/lang/Object :: v64 = v60.next()::JM,12997:JM,13002
13002 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::JM,13007:JM,13228
13003 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.getKey()::JM,13007
13007 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::JM,13062:JM,13259:JM,13020:JM,13262:JM,13100
13008 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,13062:JM,13259:JM,13020:JM,13262
13012 :: EXPR :: reference :: Ljava/io/File :: v71 = p0 $this .basedir::DD,13015
13015 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 268::CF,13022:CD,13016:CD,13020:CD,13031:CD,13035:CD,13113:CD,13164:CD,13262:CD,13263:CD,13266:CD,13267:JM,13062:JM,13259
13016 :: CALL :: call :: Z :: v73 = isAbsolutePath(v70)::JM,13062:JM,13259:JM,13020:JM,13262
13020 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 268::CF,13022:CD,13031:CD,13035:CD,13113:CD,13164:CD,13262:CD,13263:CD,13266:CD,13267
13022 :: NORM :: declaration :: Ljava/io/File :: v75 = new java.io.File::JM,13040:JM,13257:JM,13047:DD,13260:DD,13263
13023 :: EXPR :: reference :: Ljava/io/File :: v76 = p0 $this .basedir::
13031 :: CALL :: call :: Z :: v79 = v75.exists()::JM,13035
13035 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 415::CD,13039:CD,13057:CD,13062:CD,13257:CD,13259:CD,13260:CD,13262:CD,13263
13036 :: EXPR :: reference :: Ljava/io/File :: v80 = p0 $this .basedir::DD,13039
13039 :: PRED :: IF :: Z :: if (v80 != #(null)) goto 306::CD,13040:CD,13047:CD,13051:CD,13257
13040 :: CALL :: call :: Ljava/lang/String :: v82 = v75.getCanonicalPath()::JM,13040:JM,13257
13047 :: CALL :: call :: Ljava/io/File :: v85 = v75.getCanonicalFile()::JM,13047
13051 :: CALL :: call :: Ljava/lang/String :: v87 = v83.removeLeadingPath(v56, v85)::JM,13257
13057 :: CALL :: call :: Z :: v90 = v88.equals(v70)::JM,13062:JM,13259:JM,13020:JM,13262
13062 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 339::CD,13063:CD,13065:CD,13069:CD,13075:CD,13259:CD,13260
13063 :: EXPR :: reference :: Z :: v91 = org.apache.tools.ant.DirectoryScanner.ON_VMS::DD,13065
13065 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 398::CD,13069:CD,13075:CD,13259:CD,13260
13069 :: CALL :: call :: Ljava/io/File :: v94 = v68.findFile(v92, #(1))::JM,13075:JM,13260
13075 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 398::CD,13079:CD,13259:CD,13260
13076 :: EXPR :: reference :: Ljava/io/File :: v95 = p0 $this .basedir::DD,13079
13079 :: PRED :: IF :: Z :: if (v95 == #(null)) goto 398::CD,13085:CD,13091:CD,13095:CD,13100:CD,13259:CD,13260
13085 :: CALL :: call :: Ljava/lang/String :: v99 = v96.removeLeadingPath(v97, v94)::JM,13259:JM,13100
13091 :: CALL :: call :: Ljava/lang/String :: v101 = v68.toString()::JM,13100
13095 :: CALL :: call :: Z :: v103 = v101.equals(v99)::JM,13100:JM,13259
13100 :: PRED :: IF :: Z :: if (v103 != #(0)) goto 398::CF,13101:CD,13259:CD,13260
13101 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v104 = new org.apache.tools.ant.types.selectors.TokenizedPath::
13113 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 427::CD,13114:CD,13118:CD,13119:CD,13123:CD,13266:CD,13267:JM,13233:JM,12882:JM,12933
13114 :: CALL :: call :: Z :: v113 = v111.exists()::JM,13118
13118 :: PRED :: IF :: Z :: if (v113 != #(0)) goto 504::CD,13119:CD,13123:CD,13266:CD,13267:JM,13233:JM,12882:JM,12933
13119 :: CALL :: call :: Z :: v115 = p0 $this .isCaseSensitive()::JM,13233:JM,12882:JM,13123:JM,12933
13123 :: PRED :: IF :: Z :: if (v115 != #(0)) goto 504::CD,13127:CD,13133:CD,13266:CD,13267
13127 :: CALL :: call :: Ljava/io/File :: v118 = v109.findFile(v116, #(0))::JM,13264:JM,13267:JM,13143:JM,13133
13133 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 504::CD,13134:CD,13138:CD,13266:CD,13267
13134 :: CALL :: call :: Z :: v120 = v118.exists()::JM,13138
13138 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 504::CD,13142:CD,13159:CD,13264:CD,13266:CD,13267
13139 :: EXPR :: reference :: Ljava/io/File :: v121 = p0 $this .basedir::DD,13142
13142 :: PRED :: IF :: Z :: if (v121 != #(null)) goto 473::CD,13143:CD,13153:CD,13264:JM,13267
13143 :: CALL :: call :: Ljava/lang/String :: v123 = v118.getAbsolutePath()::JM,13264:JM,13267:JM,13143
13153 :: CALL :: call :: Ljava/lang/String :: v127 = v124.removeLeadingPath(v125, v118)::JM,13264
13159 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v129 = new org.apache.tools.ant.types.selectors.TokenizedPath::
13164 :: PRED :: IF :: Z :: if (v133 == #(null)) goto 653::CD,13165:CD,13169
13165 :: CALL :: call :: Z :: v135 = v133.exists()::JM,13169
13169 :: PRED :: IF :: Z :: if (v135 == #(0)) goto 653::CD,13173
13170 :: EXPR :: reference :: Z :: v136 = p0 $this .followSymlinks::DD,13173
13173 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 547::CD,13177:CD,13182:CD,13189:CD,13193
13177 :: CALL :: call :: Z :: v139 = v131.isSymlink(v137)::JM,13182
13182 :: PRED :: IF :: Z :: if (v139 == #(0)) goto 547::CD,13183:CD,13189:CD,13193
13183 :: CALL :: call :: V :: p0 $this .accountForNotFollowedSymlink(v131, v133)::
13189 :: CALL :: call :: Z :: v144 = v133.isDirectory()::JM,13193
13193 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 596::CD,13194:CD,13199:CD,13219:CD,13223
13194 :: CALL :: call :: Z :: v158 = p0 $this .isIncluded(v131)::JM,13199
13199 :: PRED :: IF :: Z :: if (v158 == #(0)) goto 588::CD,13200:CD,13204:CD,13212
13200 :: CALL :: call :: I :: v160 = v132.length()::JM,13204
13204 :: PRED :: IF :: Z :: if (v160 <= #(0)) goto 588::CD,13205:CD,13212
13205 :: CALL :: call :: V :: p0 $this .accountForIncludedDir(v131, v133, #(1))::
13212 :: CALL :: call :: V :: p0 $this .scandir(v133, v131, #(1))::
13219 :: CALL :: call :: Z :: v146 = v133.isFile()::JM,13223
13223 :: PRED :: IF :: Z :: if (v146 == #(0)) goto 653::CD,13224:CD,13228:CD,13229:CD,13233:CD,13245:CD,13268
13224 :: CALL :: call :: Ljava/lang/Object :: v148 = v65.getValue()::JM,13228
13228 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,13268:JM,13233:JM,12882:JM,13123:JM,12933
13229 :: CALL :: call :: Z :: v151 = p0 $this .isCaseSensitive()::JM,13233:JM,12882:JM,13123:JM,12933
13233 :: PRED :: IF :: Z :: if (v151 == #(0)) goto 635::CD,13234:CD,13240:CD,13268
13234 :: CALL :: call :: Z :: v153 = v149.equals(v132)::JM,13268
13240 :: CALL :: call :: Z :: v155 = v149.equalsIgnoreCase(v132)::JM,13268
13245 :: PRED :: IF :: Z :: if (v156 == #(0)) goto 653::CD,13246
13246 :: CALL :: call :: V :: p0 $this .accountForIncludedFile(v131, v133)::
13255 :: EXPR :: assign :: null :: PHI v23 = v22, #(0)::DD,12865:DD,12900
13257 :: EXPR :: assign :: null :: PHI v88 = v82, v87::JM,13062
13259 :: EXPR :: assign :: null :: PHI v107 = v70, v70, v70, v99, v99::CF,13260:DD,13262
13260 :: EXPR :: assign :: null :: PHI v108 = v75, v94, v94, v94, v94::DD,13263
13262 :: EXPR :: assign :: null :: PHI v110 = v70, v107::CF,13263:DD,13266
13263 :: EXPR :: assign :: null :: PHI v111 = v75, v108::DD,13113:DD,13267
13264 :: EXPR :: assign :: null :: PHI v128 = v123, v127::DD,13266:CF,13159
13266 :: EXPR :: assign :: null :: PHI v132 = v110, v110, v110, v110, v128::CF,13267:JM,13204:JM,13268
13267 :: EXPR :: assign :: null :: PHI v133 = v111, v111, v111, v111, v118::DD,13164
13268 :: EXPR :: assign :: null :: PHI v156 = v153, v155::DD,13245
13466 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Defines.defineCSV(java.lang.String)::CD,13471
13471 :: PRED :: IF :: Z :: if (p1 $csvExpressions  == #(null)) goto 79::CF,13472:CD,13473:CD,13481:CD,13486:CD,13490:CD,13521:CD,13523
13472 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::JM,13520:JM,13521:JM,13515
13473 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(p1 $csvExpressions )::
13481 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v5.append(#(44))::JM,13520:JM,13521:JM,13515
13486 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::JM,13520:JM,13521:JM,13515
13490 :: CALL :: call :: I :: v16 = v13.length()::JM,13520:JM,13521:JM,13515
13495 :: CALL :: call :: I :: v18 = v13.indexOf(#(44), v28)::JM,13520:JM,13521:JM,13515
13501 :: CALL :: call :: Ljava/lang/String :: v20 = v13.substring(v28, v18)::JM,13520:JM,13521:JM,13515
13507 :: CALL :: call :: Ljava/lang/String :: v22 = v20.trim()::JM,13515
13511 :: CALL :: call :: I :: v24 = v22.length()::JM,13515
13515 :: PRED :: IF :: Z :: if (v24 <= #(0)) goto 72::CD,13516:CF,13520
13516 :: CALL :: call :: V :: p0 $this .defineSingle(v22)::CL,16766
13520 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v18 + #(1)::DD,13523
13521 :: PRED :: IF :: Z :: if (v28 < v16) goto 38::CD,13495:CD,13501:CD,13507:CD,13511:CD,13515:CD,13520:CD,13523:JM,13521
13523 :: EXPR :: assign :: null :: PHI v28 = #(0), v27::JM,13520:JM,13515:DD,13521
13550 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.isEncoding(java.lang.String)::JM,13555:JM,13559:JM,13563:CF,13551:CD,13554
13551 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Document.isEncoding(java.lang.String)::JM,10528:JM,10559:JM,10590:JM,11296:JM,11327:JM,11358
13554 :: PRED :: IF :: Z :: if (p1 $enc  == #(null)) goto 17::CD,13555:CD,13559:CD,13563:CD,13565:JM,13554
13555 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $enc .trim()::JM,13554:JM,13555:JM,13559:JM,13563
13559 :: CALL :: call :: I :: v7 = v5.length()::JM,13559:JM,13563
13563 :: PRED :: IF :: Z :: if (v7 <= #(0)) goto 17::CD,13564:CD,13565
13564 :: NORM :: compound :: Z :: return #(1)::CF,13551
13565 :: NORM :: compound :: Z :: return #(0)::CF,13551
13691 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.clear()::CD,13698
13695 :: EXPR :: reference :: Ljava/util/Vector :: v3 = p0 $this .lines::
13698 :: CALL :: call :: V :: v3.removeAllElements()::
13704 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.appendDocument(org.hsqldb.util.preprocessor.Document)::CD,13709
13709 :: PRED :: IF :: Z :: if (p1 $doc  == #(null)) goto 47::CD,13710:CD,13731:CD,13733
13710 :: CALL :: call :: I :: v6 = p1 $doc .size()::JM,13731:CL,11026
13714 :: EXPR :: reference :: Ljava/util/Vector :: v7 = p1 $doc .lines::
13717 :: EXPR :: reference :: Ljava/util/Vector :: v8 = p0 $this .lines::
13721 :: CALL :: call :: Ljava/lang/Object :: v11 = v7.elementAt(v15)::
13726 :: CALL :: call :: V :: v8.addElement(v11)::
13730 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,13733
13731 :: PRED :: IF :: Z :: if (v15 < v6) goto 31::CD,13721:CD,13726:CD,13730:CD,13733
13733 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,13730:DD,13731
13752 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.getType()::CE,13753:CD,13759
13753 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Line.getType()::JM,10849:JM,14108
13756 :: EXPR :: reference :: I :: v3 = p0 $this .type::DD,13759
13759 :: NORM :: compound :: I :: return v3::CF,13753
13761 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.processInclude(int,org.hsqldb.util.preprocessor.Line)::CE,13762:CD,13767:CD,13771:CD,13776:CD,13780:CD,13813:CD,13817:CD,13830:CD,13879:CD,13880:CD,13886
13762 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Preprocessor.processInclude(int,org.hsqldb.util.preprocessor.Line)::JM,10977
13767 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $line .getArguments()::CL,17093
13771 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .resolvePath(v6)::CL,17146
13776 :: CALL :: call :: Z :: v10 = p0 $this .isHidingLines()::JM,13830:CL,14086
13780 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p1 $lineCount  + #(1)::DD,13817:DD,13884:DD,13886
13785 :: CALL :: call :: Ljava/lang/String :: v18 = v16.getSourceLine(v12)::CL,11039
13790 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Line :: v20 = p0 $this .resolveLine(v18)::CL,11056
13795 :: CALL :: call :: Z :: v23 = v20.isType(#(7))::JM,13800:CL,11078
13800 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 47::CD,13805:CD,13813:CD,13817
13805 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v27 = v25.deleteSourceLine(v12)::CL,11093
13813 :: CALL :: call :: I :: v15 = v13.size()::JM,13817:CL,11026
13817 :: PRED :: IF :: Z :: if (v12 < v15) goto 23::CD,13785:CD,13790:CD,13795:CD,13800
13830 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 176::CF,13886:CD,13831:JM,17314:CD,13842:CD,13846:CD,13878:CD,13884:CD,13885
13831 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v33 = p0 $this .loadInclude(v8)::CL,17194
13842 :: CALL :: call :: Z :: v37 = v34.preprocess()::CL,8459
13846 :: CALL :: call :: I :: v39 = v33.size()::JM,13878:CL,11026
13851 :: CALL :: call :: Ljava/lang/String :: v41 = v33.getSourceLine(v54)::CL,11039
13856 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Line :: v43 = p0 $this .resolveLine(v41)::CL,11056
13861 :: CALL :: call :: Z :: v46 = v43.isType(#(14))::JM,13866:CL,11078
13866 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 166::CF,13883:CD,13870:CD,13871
13870 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v53 + #(1)::DD,13883
13871 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v50 = v47.insertSourceLine(v53, v41)::CL,17366
13877 :: EXPR :: assign :: Ljava/lang/Object :: v52 = v54 + #(1)::DD,13885:CF,13884
13878 :: PRED :: IF :: Z :: if (v54 < v39) goto 133::CF,13886:CD,13851:CD,13856:CD,13861:CD,13866:CD,13877:CD,13883:CD,13884:CD,13885
13879 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 + #(1)::DD,13880
13880 :: NORM :: compound :: I :: return v56::DD,13762
13883 :: EXPR :: assign :: null :: PHI v51 = v53, v48::DD,13884:CF,13877
13884 :: EXPR :: assign :: null :: PHI v53 = v12, v51::CF,13885:DD,13870:DD,13883:DD,13886
13885 :: EXPR :: assign :: null :: PHI v54 = #(0), v52::DD,13877:DD,13878
13886 :: EXPR :: assign :: null :: PHI v55 = v12, v53::DD,13879
13943 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.toSourceLine(org.hsqldb.util.preprocessor.Line)::CD,13948:CD,13952
13948 :: CALL :: call :: Z :: v5 = p0 $this .isHidingLines()::JM,13952:CL,14086
13952 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 80::CF,14017:CD,13956:CD,13960:CD,14021:CD,14032:CD,14037
13956 :: CALL :: call :: Z :: v19 = isIndent(v17)::JM,13960:CL,17394
13960 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 50::CF,13991:CF,13961:CD,13965:CD,13973:CD,13981:CD,13986:CD,13999:CD,14007:CD,14012
13961 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
13965 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(v32)::
13973 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#(//# ))::
13978 :: EXPR :: reference :: Ljava/lang/String :: v38 = p1 $line .text::
13981 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(v38)::
13986 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
13991 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
13996 :: EXPR :: reference :: Ljava/lang/String :: v23 = p1 $line .indent::
13999 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
14004 :: EXPR :: reference :: Ljava/lang/String :: v26 = p1 $line .text::
14007 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(v26)::
14012 :: CALL :: call :: Ljava/lang/String :: v30 = v28.toString()::
14017 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
14021 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
14029 :: EXPR :: reference :: Ljava/lang/String :: v12 = p1 $line .text::
14032 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(v12)::
14037 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
14058 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.setSourceLine(int,java.lang.String)::CD,14065:CD,14074
14065 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
14071 :: EXPR :: reference :: Ljava/util/Vector :: v6 = p0 $this .lines::
14074 :: CALL :: call :: V :: v6.setElementAt(p2 $line , p1 $index )::
14086 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.isHidingLines()::CE,14087:CD,14093
14087 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Preprocessor.isHidingLines()::JM,13830:JM,13952:JM,14113:JM,14130
14090 :: EXPR :: reference :: I :: v3 = p0 $this .state::DD,14093
14093 :: PRED :: IF :: null :: switch v3::CD,14094:CD,14095
14094 :: NORM :: compound :: Z :: return #(1)::CF,14087
14095 :: NORM :: compound :: Z :: return #(0)::CF,14087
14099 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.processDirective(org.hsqldb.util.preprocessor.Line)::CD,14104:CD,14108:CD,14258:CD,14263:CD,14268
14104 :: CALL :: call :: I :: v5 = p1 $line .getType()::JM,14108:CL,13752
14108 :: PRED :: IF :: null :: switch v5::CD,14109:CD,14113:CD,14126:CD,14130:CD,14146:CD,14150:CD,14163:CD,14180:CD,14199:CD,14203:CD,14208:CD,14216:CD,14225:CD,14233:CD,14244:CD,14249:CD,14253
14109 :: CALL :: call :: Z :: v64 = p0 $this .isHidingLines()::JM,14113:CL,14086
14113 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 277::CD,14117:CD,14121
14117 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .getArguments()::CL,17093
14121 :: CALL :: call :: V :: v65.defineSingle(v67)::CL,16766
14126 :: CALL :: call :: Z :: v58 = p0 $this .isHidingLines()::JM,14130:CL,14086
14130 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 277::CD,14134:CD,14138
14134 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .getArguments()::CL,17093
14138 :: CALL :: call :: V :: v59.undefine(v61)::CL,17407
14146 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .getArguments()::CL,17093
14150 :: CALL :: call :: Z :: v55 = v51.evaluate(v53)::CL,17424
14163 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .getArguments()::CL,17093
14180 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $line .getArguments()::CL,17093
14199 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $line .getArguments()::CL,17093
14203 :: CALL :: call :: Z :: v36 = v32.evaluate(v34)::CL,17424
14208 :: CALL :: call :: V :: p0 $this .processElseIf(v36)::CL,17555
14216 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .getArguments()::CL,17093
14225 :: CALL :: call :: V :: p0 $this .processElseIf(v30)::CL,17555
14233 :: CALL :: call :: Ljava/lang/String :: v19 = p1 $line .getArguments()::CL,17093
14244 :: CALL :: call :: V :: p0 $this .processElseIf(v24)::CL,17555
14249 :: CALL :: call :: V :: p0 $this .processElse()::CL,17586
14253 :: CALL :: call :: V :: p0 $this .processEndIf()::CL,17613
14258 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
14263 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $line )::
14268 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
14323 :: CALL :: call :: V :: p0 $this .setSourceText(p1 $line )::CL,17634
15136 :: EXIT :: exit :: Ljava/lang/Object :: org.apache.tools.ant.types.DataType.getCheckedRef(java.lang.Class,java.lang.String,org.apache.tools.ant.Project)::JM,12370
15143 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v54 = new org.apache.tools.ant.BuildException::
15149 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p3 $project )::JM,15156:JM,15254
15153 :: EXPR :: reference :: Lorg/apache/tools/ant/types/Reference :: v8 = p0 $this .ref::JM,15156:JM,15254
15156 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.getReferencedObject(p3 $project )::JM,15156:JM,15254
15171 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
15175 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v16.append(#(Class ))::
15184 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .displayName(v22)::
15189 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
15194 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( is not a subclass of ))::
15199 :: CALL :: call :: Ljava/lang/String :: v31 = p0 $this .displayName(p1 $requiredClass )::
15204 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(v31)::
15209 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
15213 :: CALL :: call :: V :: p0 $this .log(v35, #(3))::
15218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
15222 :: EXPR :: reference :: Lorg/apache/tools/ant/types/Reference :: v40 = p0 $this .ref::
15225 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getRefId()::
15229 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
15234 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( doesn't denote a ))::
15239 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(p2 $dataTypeName )::JM,15156:JM,15254
15244 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,15254
15248 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v52 = new org.apache.tools.ant.BuildException::
15254 :: NORM :: compound :: Ljava/lang/Object :: return v10::DD,15136
15269 :: EXIT :: exit :: Lorg/apache/tools/ant/Project :: org.apache.tools.ant.Project.getProject(java.lang.Object)::JM,12408
15272 :: EXPR :: assign :: Z :: v3=p1 $o  INSTANCEOF org.apache.tools.ant.ProjectComponent::DD,15273
15273 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 16::CD,15274:CD,15275:CD,15279:CD,15285:CD,15291:CD,15292:CD,15296
15274 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST p1 $o ::JM,15279
15275 :: CALL :: call :: Lorg/apache/tools/ant/Project :: v24 = v22.getProject()::JM,15279
15279 :: NORM :: compound :: Lorg/apache/tools/ant/Project :: return v24::DD,15269
15285 :: CALL :: call :: Ljava/lang/reflect/Method :: v11 = v6.getMethod(#(getProject), v9)::JM,15296:JM,15304
15291 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/apache/tools/ant/Project>-><Primordial,Ljava/lang/Class>::DD,15296:JM,15304
15292 :: CALL :: call :: Ljava/lang/Class :: v14 = v11.getReturnType()::JM,15296:JM,15304
15296 :: PRED :: IF :: Z :: if (v12 != v14) goto 52::CD,15297:CD,15298:CD,15304:CD,15305:CD,15307
15297 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST #(null)::JM,15296:JM,15304
15298 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.invoke(p1 $o , v15)::JM,15296:JM,15304:JM,15272
15304 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::CF,15305
15305 :: NORM :: compound :: Lorg/apache/tools/ant/Project :: return v18::DD,15269
15307 :: NORM :: compound :: Lorg/apache/tools/ant/Project :: return #(null)::DD,15269
15322 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.ComponentHelper.getUnmappedElementName(java.lang.Class,boolean)::JM,12409:JM,15460
15326 :: PRED :: IF :: Z :: if (p2 $brief  == #(0)) goto 23::CD,15327:CD,15331:CD,15336:CD,15337:CD,15342:CD,15343:CD,15347:JM,15326
15327 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $c .getName()::JM,15336:JM,15326:JM,15342:JM,15327
15331 :: CALL :: call :: I :: v11 = v8.lastIndexOf(#(46))::JM,15336:JM,15342
15336 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 + #(1)::JM,15336:JM,15342
15337 :: CALL :: call :: Ljava/lang/String :: v15 = v8.substring(v13)::JM,15336:JM,15342
15342 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,15322
15343 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $c .toString()::JM,15347
15347 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,15322
15358 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.ComponentHelper.getElementName(java.lang.Object,boolean)::JM,12409
15363 :: CALL :: call :: Ljava/lang/Class :: v6 = p1 $o .getClass()::JM,15363:JM,15414:JM,15367:JM,15419:JM,15405
15367 :: CALL :: call :: Ljava/lang/String :: v8 = v6.getName()::JM,15414:JM,15367:JM,15405
15375 :: EXPR :: reference :: Ljava/util/Hashtable :: v10 = p0 $this .antTypeTable::JM,15395:JM,15390
15378 :: CALL :: call :: Ljava/util/Collection :: v12 = v10.values()::JM,15395:JM,15390
15382 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,15395:JM,15390
15386 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,15395:JM,15390
15390 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 131::CD,15391:CD,15395:CD,15396:CD,15400:CD,15405:CD,15455:CD,15460:JM,15390
15391 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,15395:JM,15390
15395 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,15396:JM,15405:JM,15409:JM,15414:JM,15462:JM,15415
15396 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getClassName()::JM,15396:JM,15405
15400 :: CALL :: call :: Z :: v24 = v8.equals(v22)::JM,15405
15405 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 126::CD,15386:CD,15390:CD,15409:CD,15414
15406 :: EXPR :: reference :: Lorg/apache/tools/ant/Project :: v25 = p0 $this .project::JM,15409:JM,15414
15409 :: CALL :: call :: Ljava/lang/Class :: v27 = v20.getExposedClass(v25)::JM,15409:JM,15414
15414 :: PRED :: IF :: Z :: if (v6 != v27) goto 126::CD,15386:CD,15390:CD,15415:CD,15419:CD,15445:CD,15462
15415 :: CALL :: call :: Ljava/lang/String :: v33 = v20.getName()::JM,15462:JM,15415
15419 :: PRED :: IF :: Z :: if (p2 $brief  == #(0)) goto 97::CF,15421:CD,15425:CD,15430:CD,15435:CD,15440:CD,15462
15421 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::JM,15462
15425 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(The <))::JM,15462
15430 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v38.append(v33)::JM,15462
15435 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#(> type))::JM,15462
15440 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::JM,15462
15445 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,15358
15455 :: CALL :: call :: Ljava/lang/String :: v31 = getUnmappedElementName(v29, p2 $brief )::JM,15460
15460 :: NORM :: compound :: Ljava/lang/String :: return v31::DD,15358
15462 :: EXPR :: assign :: null :: PHI v46 = v33, v45::DD,15445
15498 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
15503 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
15504 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .includeList::
15514 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
15515 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .excludeList::
15525 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::
15526 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .includesFileList::
15536 :: NORM :: declaration :: Ljava/util/ArrayList :: v18 = new java.util.ArrayList::
15537 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .excludesFileList::
15581 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v29 = new org.apache.tools.ant.BuildException::
15587 :: CALL :: call :: V :: p0 $this .dieOnCircularReference(p2 $p )::
15591 :: CALL :: call :: [Ljava/lang/String :: v10 = p1 $other .getIncludePatterns(p2 $p )::JM,15596:JM,15597
15596 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 61::CD,15597:CD,15598:CD,15636
15597 :: EXPR :: assign :: I :: v12 = v10.length::CF,15598
15598 :: PRED :: IF :: Z :: if (v19 >= v12) goto 61::CD,15597:CD,15599:CD,15611:CD,15636
15599 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet$NameEntry :: v14 = p0 $this .createInclude()::
15611 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,15636
15613 :: CALL :: call :: [Ljava/lang/String :: v21 = p1 $other .getExcludePatterns(p2 $p )::JM,15618:JM,15619
15618 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 100::CD,15619:CD,15620:CD,15637
15619 :: EXPR :: assign :: I :: v22 = v21.length::CF,15620
15620 :: PRED :: IF :: Z :: if (v28 >= v22) goto 100::CD,15619:CD,15621:CD,15633:CD,15637
15621 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet$NameEntry :: v24 = p0 $this .createExclude()::
15633 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v28 + #(1)::DD,15637
15636 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::DD,15598:DD,15611:CF,15597
15637 :: EXPR :: assign :: null :: PHI v28 = v27, #(0)::DD,15620:DD,15633:CF,15619
15671 :: EXIT :: exit :: Lorg/apache/tools/ant/types/PatternSet :: org.apache.tools.ant.types.PatternSet.getRef(org.apache.tools.ant.Project)::JM,12514:JM,12519:JM,12565:JM,12570
15675 :: CALL :: call :: Ljava/lang/Object :: v5 = p0 $this .getCheckedRef(p1 $p )::JM,15680
15680 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,15681
15681 :: NORM :: compound :: Lorg/apache/tools/ant/types/PatternSet :: return v6::DD,15671
15689 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .includesFileList::JM,15696
15692 :: CALL :: call :: I :: v6 = v4.size()::JM,15696
15696 :: PRED :: IF :: Z :: if (v6 <= #(0)) goto 129::CD,15700:CD,15704:CD,15708:CD,15776
15697 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .includesFileList::JM,15708
15700 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,15708
15704 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,15708
15708 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 120::CD,15704:CD,15709:CD,15714:CD,15719:JM,15708
15709 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,15708
15714 :: CALL :: call :: Ljava/lang/String :: v17 = v15.evalName(p1 $p )::JM,15719:JM,15720
15719 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 116::CD,15720:CD,15766:JM,15810
15720 :: CALL :: call :: Ljava/io/File :: v20 = p1 $p .resolveFile(v17)::JM,15810:JM,15720
15730 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v64 = new org.apache.tools.ant.BuildException::
15731 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
15735 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(#(Includesfile ))::
15740 :: CALL :: call :: Ljava/lang/String :: v71 = v20.getAbsolutePath()::
15744 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(v71)::
15749 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#( not found.))::
15754 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
15766 :: CALL :: call :: V :: p0 $this .readPatterns(v20, v23, p1 $p )::
15773 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .includesFileList::
15776 :: CALL :: call :: V :: v25.clear()::
15779 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .excludesFileList::JM,15786
15782 :: CALL :: call :: I :: v29 = v27.size()::JM,15786
15786 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 256::CD,15790:CD,15794:CD,15798:CD,15866
15787 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .excludesFileList::JM,15798
15790 :: CALL :: call :: Ljava/util/Iterator :: v32 = v30.iterator()::JM,15798
15794 :: CALL :: call :: Z :: v34 = v32.hasNext()::JM,15798
15798 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 248::CD,15794:CD,15799:CD,15804:CD,15809:JM,15798
15799 :: CALL :: call :: Ljava/lang/Object :: v36 = v32.next()::JM,15798
15804 :: CALL :: call :: Ljava/lang/String :: v39 = v37.evalName(p1 $p )::JM,15809:JM,15810
15809 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 244::CD,15810:CD,15856:JM,15720
15810 :: CALL :: call :: Ljava/io/File :: v41 = p1 $p .resolveFile(v39)::JM,15810:JM,15720
15820 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v48 = new org.apache.tools.ant.BuildException::
15821 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
15825 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(#(Excludesfile ))::
15830 :: CALL :: call :: Ljava/lang/String :: v55 = v41.getAbsolutePath()::
15834 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v53.append(v55)::
15839 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( not found.))::
15844 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
15856 :: CALL :: call :: V :: p0 $this .readPatterns(v41, v44, p1 $p )::
15863 :: EXPR :: reference :: Ljava/util/List :: v46 = p0 $this .excludesFileList::
15866 :: CALL :: call :: V :: v46.clear()::
15917 :: EXIT :: exit :: [Ljava/lang/String :: org.apache.tools.ant.types.PatternSet.makeArray(java.util.List,org.apache.tools.ant.Project)::JM,12537:JM,12588
15922 :: CALL :: call :: I :: v6 = p1 $list .size()::JM,15940:JM,15926
15926 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 11::CF,15928:CD,15927:CD,15932:CD,15936:CD,15940:CD,15963:CD,15967:CD,15968:CD,15973:CD,15974
15927 :: NORM :: compound :: [Ljava/lang/String :: return #(null)::DD,15917
15928 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::JM,15967:JM,15973
15932 :: CALL :: call :: Ljava/util/Iterator :: v11 = p1 $list .iterator()::JM,15940:JM,15926
15936 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,15940
15940 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 82::CD,15936:CD,15941:CD,15946:CD,15951:JM,15940:JM,15967
15941 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,15940
15946 :: CALL :: call :: Ljava/lang/String :: v18 = v16.evalName(p2 $p )::JM,15956:JM,15951
15951 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 77::CD,15952:CD,15956
15952 :: CALL :: call :: I :: v21 = v18.length()::JM,15956
15956 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 77::CD,15957
15957 :: CALL :: call :: Z :: v23 = v8.add(v18)::JM,15956
15963 :: CALL :: call :: I :: v25 = v8.size()::JM,15967
15967 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::JM,15973
15968 :: CALL :: call :: [Ljava/lang/Object :: v28 = v8.toArray(v26)::JM,15973
15973 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::CF,15974
15974 :: NORM :: compound :: [Ljava/lang/String :: return v29::DD,15917
16002 :: EXPR :: reference :: Z :: v3 = p0 $this .areNonPatternSetsReady::DD,16005
16005 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 44::CD,16012:CD,16027
16012 :: CALL :: call :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v8 = p0 $this .fillNonPatternSet(v5, v6)::JM,16018
16018 :: EXPR :: modify :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: p0 $this .includePatterns = v8::
16027 :: CALL :: call :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v12 = p0 $this .fillNonPatternSet(v9, v10)::JM,16033
16033 :: EXPR :: modify :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: p0 $this .excludePatterns = v12::
16063 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v6 = new org.apache.tools.ant.types.selectors.TokenizedPath::
16068 :: CALL :: call :: V :: p0 $this .scandir(p1 $dir , v6, p3 $fast )::
16081 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.util.FileUtils.removeLeadingPath(java.io.File,java.io.File)::JM,13257:JM,13259:JM,13100:JM,13264:JM,16260
16090 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .normalize(v6)::JM,16112:JM,16164:JM,16117:JM,16121:JM,16126:JM,16095
16095 :: CALL :: call :: Ljava/lang/String :: v10 = v8.getAbsolutePath()::JM,16112:JM,16164:JM,16117:JM,16121:JM,16126:JM,16095
16103 :: CALL :: call :: Ljava/io/File :: v14 = p0 $this .normalize(v12)::JM,16112:JM,16147:JM,16165:JM,16117:JM,16152:JM,16108:JM,16157
16108 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAbsolutePath()::JM,16112:JM,16147:JM,16165:JM,16117:JM,16152:JM,16108:JM,16157
16112 :: CALL :: call :: Z :: v18 = v10.equals(v16)::JM,16112:JM,16164:JM,16117:JM,16121:JM,16126:JM,16147:JM,16165:JM,16152:JM,16157
16117 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 38::CD,16118:CD,16119:CD,16121:CD,16126:CD,16147:CD,16152:CD,16163:CD,16164:CD,16165
16118 :: NORM :: compound :: Ljava/lang/String :: return #()::DD,16081
16119 :: EXPR :: reference :: Ljava/lang/String :: v20 = java.io.File.separator::JM,16112:JM,16164:JM,16117:JM,16121:JM,16126
16121 :: CALL :: call :: Z :: v22 = v10.endsWith(v20)::JM,16112:JM,16164:JM,16117:JM,16121:JM,16126
16126 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 71::CF,16164:CF,16127:CD,16131:CD,16136:CD,16138:CD,16143
16127 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::JM,16164
16131 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(v10)::JM,16164:JM,16112:JM,16117:JM,16121:JM,16126
16136 :: EXPR :: reference :: Ljava/lang/String :: v27 = java.io.File.separator::JM,16164
16138 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(v27)::JM,16164
16143 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::JM,16164
16147 :: CALL :: call :: Z :: v34 = v16.startsWith(v32)::JM,16112:JM,16147:JM,16165:JM,16117:JM,16152:JM,16157
16152 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 91::CD,16153:CD,16157:CD,16165
16153 :: CALL :: call :: I :: v36 = v32.length()::JM,16165:JM,16157
16157 :: CALL :: call :: Ljava/lang/String :: v38 = v16.substring(v36)::JM,16112:JM,16147:JM,16165:JM,16117:JM,16152:JM,16157
16163 :: NORM :: compound :: Ljava/lang/String :: return v39::DD,16081
16164 :: EXPR :: assign :: null :: PHI v32 = v10, v31::JM,16147:JM,16117:JM,16165:JM,16152:JM,16157:JM,16112
16165 :: EXPR :: assign :: null :: PHI v39 = v38, v16::CF,16163
16188 :: EXIT :: exit :: Ljava/io/File :: org.apache.tools.ant.types.selectors.TokenizedPath.findFile(java.io.File,boolean)::JM,13075:JM,13260:JM,13264:JM,13267:JM,13143:JM,13133
16196 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .path::JM,16203
16199 :: CALL :: call :: Z :: v8 = isAbsolutePath(v6)::JM,16203
16203 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 101::CD,16204:CD,16266:CD,16272
16204 :: PRED :: IF :: Z :: if (p1 $base  != #(null)) goto 54::CD,16205:CD,16210:CD,16215:CD,16228:CD,16238:CD,16245:CD,16251:CD,16255:CD,16260:CD,16266:CD,16272
16205 :: EXPR :: reference :: Lorg/apache/tools/ant/util/FileUtils :: v24 = org.apache.tools.ant.types.selectors.TokenizedPath.FILE_UTILS::
16207 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .path::
16210 :: CALL :: call :: [Ljava/lang/String :: v27 = v24.dissect(v25)::
16215 :: NORM :: declaration :: Ljava/io/File :: v28 = new java.io.File::
16216 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v27[#(0)]::
16224 :: EXPR :: reference :: Ljava/lang/Object :: v32 = v27[#(1)]::
16228 :: CALL :: call :: [Ljava/lang/String :: v34 = tokenizePathAsArray(v32)::
16238 :: CALL :: call :: Ljava/io/File :: v14 = v11.normalize(v12)::JM,16260:JM,16251
16245 :: CALL :: call :: Ljava/lang/String :: v17 = v15.removeLeadingPath(p1 $base , v14)::JM,16260
16251 :: CALL :: call :: Ljava/lang/String :: v19 = v14.getAbsolutePath()::JM,16260:JM,16251
16255 :: CALL :: call :: Z :: v21 = v17.equals(v19)::JM,16260
16260 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 94::CD,16261:CD,16262:CD,16266:CD,16272:JM,16260
16261 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,16188
16262 :: CALL :: call :: [Ljava/lang/String :: v23 = tokenizePathAsArray(v17)::JM,16260
16266 :: CALL :: call :: Ljava/io/File :: v38 = findFile(v35, v36, p2 $cs )::JM,16272
16272 :: NORM :: compound :: Ljava/io/File :: return v38::DD,16188
16305 :: EXIT :: exit :: Z :: org.apache.tools.ant.types.selectors.TokenizedPath.isSymlink(java.io.File)::JM,13182
16309 :: EXPR :: reference :: [Ljava/lang/String :: v5 = p0 $this .tokenizedPath::DD,16312
16312 :: EXPR :: assign :: I :: v6 = v5.length::CF,16313
16313 :: PRED :: IF :: Z :: if (v32 >= v6) goto 90::CD,16314:CD,16370
16314 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 32::CD,16315:CD,16324:CD,16330:CD,16331
16315 :: EXPR :: reference :: Lorg/apache/tools/ant/util/SymbolicLinkUtils :: v8 = org.apache.tools.ant.types.selectors.TokenizedPath.SYMLINK_UTILS::JM,16330
16317 :: EXPR :: reference :: [Ljava/lang/String :: v9 = p0 $this .tokenizedPath::
16320 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v9[v32]::JM,16330
16324 :: CALL :: call :: Z :: v12 = v8.isSymbolicLink(v31, v10)::JM,16330
16330 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 51::CD,16331:CD,16347
16331 :: PRED :: IF :: Z :: if (v31 != #(null)) goto 52::CF,16348:CD,16312:CD,16313:CD,16332:CD,16341:CD,16346:CD,16368:CD,16372:CD,16373:CD,16374
16332 :: EXPR :: reference :: Lorg/apache/tools/ant/util/SymbolicLinkUtils :: v13 = org.apache.tools.ant.types.selectors.TokenizedPath.SYMLINK_UTILS::JM,16346
16334 :: EXPR :: reference :: [Ljava/lang/String :: v14 = p0 $this .tokenizedPath::
16337 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v14[v32]::JM,16346
16341 :: CALL :: call :: Z :: v17 = v13.isSymbolicLink(v15)::JM,16346
16346 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 52::CF,16348:CD,16312:CD,16313:CD,16347:CD,16368:CD,16372:CD,16373:CD,16374
16347 :: NORM :: compound :: Z :: return #(1)::DD,16305
16348 :: NORM :: declaration :: Ljava/io/File :: v18 = new java.io.File::DD,16374
16349 :: EXPR :: reference :: [Ljava/lang/String :: v19 = p0 $this .tokenizedPath::
16352 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v19[v32]::
16364 :: CALL :: call :: V :: v24.println(#(IOException caught wh...))::
16368 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v32 + #(1)::DD,16373
16370 :: NORM :: compound :: Z :: return #(0)::DD,16305
16372 :: EXPR :: assign :: null :: PHI v31 = v27, p1 $base ::CF,16373:DD,16314:JM,16330:DD,16331:DD,16374
16373 :: EXPR :: assign :: null :: PHI v32 = v29, #(0)::DD,16313:DD,16368
16374 :: EXPR :: assign :: null :: PHI v27 = v18, v31::DD,16372:CF,16368
16406 :: CALL :: call :: Z :: v6 = p0 $this .isExcluded(p1 $name )::JM,16411
16411 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 53::CD,16412:CD,16417
16412 :: CALL :: call :: Z :: v9 = p0 $this .isIncluded(p1 $name )::JM,16417
16417 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 40::CD,16418:CD,16422:CD,16438:CD,16442
16418 :: CALL :: call :: Z :: v11 = p2 $file .isDirectory()::JM,16422
16422 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 53::CD,16423:CD,16428:JM,16434:JM,16438
16423 :: CALL :: call :: Z :: v13 = p0 $this .couldHoldIncluded(p1 $name )::JM,16434:JM,16438:JM,16428
16428 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 53::CD,16429:CD,16434:JM,16438:JM,16428
16429 :: CALL :: call :: Z :: v15 = p0 $this .contentsExcluded(p1 $name )::JM,16434:JM,16438:JM,16428
16434 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 53::CD,16438:CD,16442
16435 :: EXPR :: reference :: Ljava/util/Set :: v16 = p0 $this .notFollowedSymlinks::
16438 :: CALL :: call :: Ljava/lang/String :: v18 = p2 $file .getAbsolutePath()::JM,16434:JM,16438:JM,16428
16442 :: CALL :: call :: Z :: v20 = v16.add(v18)::
16518 :: CALL :: call :: V :: p0 $this .processIncluded(p1 $name , p2 $file , v6, v7, v8)::
16526 :: PRED :: IF :: Z :: if (p3 $fast  == #(0)) goto 45::CD,16527:CD,16532:JM,16538
16527 :: CALL :: call :: Z :: v12 = p0 $this .couldHoldIncluded(p1 $name )::JM,16532:JM,16538
16532 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 45::CD,16533:CD,16538:JM,16532
16533 :: CALL :: call :: Z :: v14 = p0 $this .contentsExcluded(p1 $name )::JM,16532:JM,16538
16538 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 45::CD,16539
16539 :: CALL :: call :: V :: p0 $this .scandir(p2 $file , p1 $name , p3 $fast )::
16572 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v55 = new org.apache.tools.ant.BuildException::
16578 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $dir .list()::
16583 :: CALL :: call :: Z :: v13 = p1 $dir .exists()::
16588 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v44 = new org.apache.tools.ant.BuildException::
16589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
16593 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(p1 $dir )::
16598 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(#( does not exist.))::
16603 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
16612 :: CALL :: call :: Z :: v16 = p1 $dir .isDirectory()::
16617 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v33 = new org.apache.tools.ant.BuildException::
16618 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
16622 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(p1 $dir )::
16627 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#( is not a directory.))::
16632 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
16641 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v17 = new org.apache.tools.ant.BuildException::
16642 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
16646 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(#(IO error scanning dir...))::
16651 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $dir .getAbsolutePath()::
16655 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v22.append(v24)::
16660 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#('))::
16665 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
16674 :: NORM :: declaration :: Ljava/util/LinkedList :: v9 = new java.util.LinkedList::
16678 :: CALL :: call :: V :: p0 $this .scandir(p1 $dir , p2 $path , p3 $fast , v8, v9)::
16751 :: CALL :: call :: V :: p0 $this .processIncluded(p1 $name , p2 $file , v5, v6, v7)::
16766 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Defines.defineSingle(java.lang.String)::JM,19906:JM,19911:JM,19897:JM,19898:CD,16776:CD,16787:CD,16792:CD,16796:CD,16801:CD,16806:CD,16811:CD,16816:CD,16825:CD,16829:CD,16833:CD,16889:CD,16894:CD,16899:CD,16904:CD,16908:CD,16913:CD,16918:CD,16923:CD,16928:CD,16956:CD,16961:CD,16965:CD,16970:CD,16975:CD,16980:CD,16985:CD,17005:CD,17010:CD,17014:CD,17019:CD,17024:CD,17029:CD,17034:CD,17044
16776 :: CALL :: call :: I :: v7 = v4.next()::CL,19951
16787 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v108 = new java.lang.StringBuilder::
16792 :: CALL :: call :: I :: v112 = v4.getStartIndex()::CL,20528
16796 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v108.append(v112)::
16801 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(#( in [))::
16806 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v116.append(p1 $expression )::
16811 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(#(]))::
16816 :: CALL :: call :: Ljava/lang/String :: v122 = v120.toString()::
16825 :: CALL :: call :: Ljava/lang/String :: v13 = v4.getIdent()::CL,20537
16829 :: CALL :: call :: I :: v15 = v4.next()::JM,16833:JM,17044:CL,19951
16833 :: PRED :: IF :: null :: switch v15::CF,17044:CD,16844:CD,16849:CD,16994
16844 :: CALL :: call :: I :: v17 = v4.next()::JM,17044:CL,19951
16849 :: PRED :: IF :: null :: switch v18::CD,16850:CD,16864:CD,16878
16850 :: CALL :: call :: Ljava/lang/Number :: v77 = v4.getNumber()::CL,20572
16864 :: CALL :: call :: Ljava/lang/String :: v72 = v4.getString()::CL,20617
16878 :: CALL :: call :: Ljava/lang/String :: v39 = v4.getIdent()::CL,20537
16889 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
16894 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v39)::
16899 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#(] at position: ))::
16904 :: CALL :: call :: I :: v58 = v4.getStartIndex()::CL,20528
16908 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v58)::
16913 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#( is undefined in [))::
16918 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(p1 $expression )::
16923 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#(]))::
16928 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
16956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
16961 :: CALL :: call :: I :: v24 = v4.getStartIndex()::CL,20528
16965 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
16970 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( in [))::
16975 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(p1 $expression )::
16980 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#(]))::
16985 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
16994 :: CALL :: call :: I :: v83 = v4.next()::CL,19951
17005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
17010 :: CALL :: call :: I :: v92 = v4.getStartIndex()::CL,20528
17014 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v88.append(v92)::
17019 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(#( in [))::
17024 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v96.append(p1 $expression )::
17029 :: CALL :: call :: Ljava/lang/StringBuilder :: v100 = v98.append(#(]))::
17034 :: CALL :: call :: Ljava/lang/String :: v102 = v100.toString()::
17044 :: EXPR :: assign :: null :: PHI v18 = v15, v17::CF,16849
17093 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.getArguments()::CD,17110:CD,17118:CD,17123:CD,17128
17110 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
17115 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .text::
17118 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
17123 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(]: has no argument(s)))::
17128 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
17146 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.resolvePath(java.lang.String)::CD,17152:CD,17169
17152 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
17169 :: CALL :: call :: Ljava/io/File :: v10 = v8.resolveFile(v7)::CL,20656
17194 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.loadInclude(java.lang.String)::JM,10504:CD,17203:CD,17211:CD,17219:CD,17227:CD,17232:CD,17237:CD,17242:CD,17247:CD,17257:CD,17262:CD,17267:CD,17272:CD,17277
17203 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .toCanonicalOrAbsoluteFile(p1 $path )::CL,20794
17211 :: CALL :: call :: Lorg/hsqldb/util/preprocessor/Document :: v10 = v4.load(v7, v8)::CL,10515
17219 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
17224 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .encoding::
17227 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v28.append(v31)::
17232 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v33.append(#(' loading include '))::
17237 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v36.append(v7)::
17242 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('))::
17247 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
17257 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
17262 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v7)::
17267 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#(': ))::
17272 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(v11)::
17277 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
17314 :: NORM :: declaration :: Ljava/util/Stack :: v7 = new java.util.Stack::
17366 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Document.insertSourceLine(int,java.lang.String)::CD,17373:CD,17382
17373 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
17379 :: EXPR :: reference :: Ljava/util/Vector :: v6 = p0 $this .lines::
17382 :: CALL :: call :: V :: v6.insertElementAt(p2 $line , p1 $index )::
17394 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Option.isIndent(int)::CF,17395:CD,17398:CD,17399
17395 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Option.isIndent(int)::JM,13960
17398 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $options  && #(4)::DD,17399
17399 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,17400:CD,17401
17400 :: NORM :: compound :: Z :: return #(1)::CF,17395
17401 :: NORM :: compound :: Z :: return #(0)::CF,17395
17407 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Defines.undefine(java.lang.String)::CD,17415
17412 :: EXPR :: reference :: Ljava/util/Hashtable :: v4 = p0 $this .symbols::
17415 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.remove(p1 $symbol )::
17424 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Defines.evaluate(java.lang.String)::JM,19906:JM,19911:JM,19897:JM,19898:CD,17434:CD,17444:CD,17455:CD,17460:CD,17464:CD,17469:CD,17474:CD,17479:CD,17484
17434 :: CALL :: call :: I :: v7 = v4.next()::CL,19951
17444 :: CALL :: call :: Z :: v11 = v8.parseExpression()::CL,20898
17455 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
17460 :: CALL :: call :: I :: v21 = v4.getStartIndex()::CL,20528
17464 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
17469 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#( in [))::
17474 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v26.append(p1 $expression )::
17479 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#(]))::
17484 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
17555 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.processElseIf(boolean)::
17586 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.processElse()::
17613 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.processEndIf()::CD,17627
17627 :: CALL :: call :: V :: p0 $this .statePop()::CL,20981
17634 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.setSourceText(java.lang.String)::CD,17642:CD,17646:CD,17655:CD,17660:CD,17665:CD,17774:CD,17782:CD,17787:CD,17792:CD,17797:CD,17802:JM,17682:JM,17705
17642 :: CALL :: call :: I :: v5 = indexOfNonTabOrSpace(p1 $line )::JM,17665:JM,17682:JM,17705:CL,21003
17646 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $line .substring(#(0), v5)::JM,17665:JM,17682:JM,17705
17655 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v5)::JM,17665:JM,17682:JM,17705
17660 :: CALL :: call :: Z :: v13 = v10.startsWith(#(//#))::JM,17665:JM,17682:JM,17705
17665 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 55::CD,17676:CD,17680:CD,17682:JM,17665:JM,17705
17676 :: CALL :: call :: I :: v15 = v10.length()::JM,17665:JM,17682:JM,17705
17680 :: EXPR :: reference :: I :: v16 = org.hsqldb.util.preprocessor.Line.DIRECTIVE_PREFIX_LENGTH::CF,17682
17682 :: PRED :: IF :: Z :: if (v15 != v16) goto 87::CD,17693:CD,17695:CD,17700:CD,17705
17693 :: EXPR :: reference :: I :: v18 = org.hsqldb.util.preprocessor.Line.DIRECTIVE_PREFIX_LENGTH::JM,17665:JM,17682:JM,17705
17695 :: CALL :: call :: C :: v20 = v10.charAt(v18)::JM,17665:JM,17682:JM,17705
17700 :: CALL :: call :: I :: v22 = #( 	).indexOf(v20)::JM,17705
17705 :: PRED :: IF :: Z :: if (v22 == #(-1)) goto 126::CD,17706:CD,17708:CD,17725:CD,17730:CD,17760
17706 :: EXPR :: reference :: I :: v62 = org.hsqldb.util.preprocessor.Line.DIRECTIVE_PREFIX_LENGTH_PLUS_ONE::JM,17665:JM,17682:JM,17705
17708 :: CALL :: call :: Ljava/lang/String :: v64 = v10.substring(v62)::JM,17665:JM,17682:JM,17705
17725 :: CALL :: call :: I :: v26 = indexOfTabOrSpace(v10, v24)::JM,17730:JM,17747:CL,21039
17730 :: PRED :: IF :: Z :: if (v26 != #(-1)) goto 155::CD,17738:CD,17747:CD,17748:CD,17753:JM,17665:JM,17682:JM,17705
17738 :: CALL :: call :: Ljava/lang/String :: v28 = v10.substring(#(0), v26)::JM,17665:JM,17682:JM,17705:JM,17747
17747 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v26 + #(1)::JM,17665:JM,17682:JM,17705
17748 :: CALL :: call :: Ljava/lang/String :: v32 = v10.substring(v30)::JM,17665:JM,17682:JM,17705
17753 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,17705
17760 :: CALL :: call :: Ljava/util/Hashtable :: v37 = directives()::CL,21078
17774 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
17779 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .text::
17782 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v45.append(v48)::
17787 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#(] in [))::
17792 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v53.append(v10)::JM,17665:JM,17682:JM,17705
17797 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(]))::JM,17705
17802 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
18591 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.types.DataType.displayName(java.lang.Class)::
18595 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
18599 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $clazz .getName()::JM,18599
18603 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v4.append(v7)::
18608 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( (loaded via ))::
18613 :: CALL :: call :: Ljava/lang/ClassLoader :: v14 = p1 $clazz .getClassLoader()::
18617 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v14)::JM,18631
18622 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#()))::JM,18631
18627 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,18631
18631 :: NORM :: compound :: Ljava/lang/String :: return v21::DD,18591
18760 :: EXIT :: exit :: Ljava/lang/String :: org.apache.tools.ant.types.PatternSet.NameEntry.evalName(org.apache.tools.ant.Project)::JM,15719:JM,15720:JM,15809:JM,15810:JM,15956:JM,15951
18764 :: CALL :: call :: Z :: v5 = p0 $this .valid(p1 $p )::JM,18769
18769 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,18775
18770 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .name::DD,18775
18774 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,18760
18775 :: EXPR :: assign :: null :: PHI v9 = v8, #(null)::CF,18774
18788 :: NORM :: declaration :: Ljava/io/BufferedReader :: v7 = new java.io.BufferedReader::JM,18863:DD,18864:DD,18865:CF,18789
18789 :: NORM :: declaration :: Ljava/io/FileReader :: v8 = new java.io.FileReader::
18798 :: CALL :: call :: Ljava/lang/String :: v12 = v7.readLine()::JM,18863
18802 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 70::CD,18803:CD,18807:CD,18822:CD,18863
18803 :: CALL :: call :: I :: v14 = v24.length()::JM,18807
18807 :: PRED :: IF :: Z :: if (v14 <= #(0)) goto 60::CD,18813:JM,18863
18813 :: CALL :: call :: Lorg/apache/tools/ant/types/PatternSet$NameEntry :: v19 = p0 $this .addPatternToList(p2 $patternlist )::
18822 :: CALL :: call :: Ljava/lang/String :: v23 = v7.readLine()::JM,18863
18827 :: CALL :: call :: V :: close(v7)::
18831 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v28 = new org.apache.tools.ant.BuildException::
18832 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
18836 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(#(An error occurred whi...))::
18841 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v33.append(p1 $patternfile )::
18846 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
18856 :: CALL :: call :: V :: close(v40)::
18861 :: EXPR :: assign :: Ljava/lang/Exception :: v26 = catch <exc>::
18863 :: EXPR :: assign :: null :: PHI v24 = v23, v12::DD,18802:JM,18807
18864 :: EXPR :: assign :: null :: PHI v27 = #(null), v7, v7::DD,18865
18865 :: EXPR :: assign :: null :: PHI v40 = #(null), #(null), #(null), #(null), v7, v7, v7, v7, v7, v7, v27, v27, v27, v27, v27, v27, v27, v27::
18887 :: EXIT :: exit :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: org.apache.tools.ant.DirectoryScanner.fillNonPatternSet(java.util.Map,java.lang.String[])::JM,16018:JM,16033
18892 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,18959:JM,18965:CF,18893
18893 :: EXPR :: assign :: I :: v6 = p2 $patterns .length::
18898 :: EXPR :: assign :: I :: v9 = p2 $patterns .length::CF,18899
18899 :: PRED :: IF :: Z :: if (v31 >= v9) goto 98::CD,18898:CD,18904:CD,18908:CD,18953:CD,18967:JM,18959
18900 :: EXPR :: reference :: Ljava/lang/Object :: v10 = p2 $patterns [v31]::JM,18908
18904 :: CALL :: call :: Z :: v12 = hasWildcards(v10)::JM,18908
18908 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 75::CD,18909:CD,18913:CD,18927:CD,18932:CD,18939:CD,18948:CD,18968:JM,18898:JM,18892:JM,18893
18909 :: CALL :: call :: Z :: v14 = p0 $this .isCaseSensitive()::JM,18913:JM,18898:JM,18892:JM,18893
18913 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 47::CD,18923:CD,18968
18914 :: EXPR :: reference :: Ljava/lang/Object :: v15 = p2 $patterns [v31]::DD,18968
18923 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toUpperCase()::JM,18968
18927 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v20 = new org.apache.tools.ant.types.selectors.TokenizedPath::JM,18913
18932 :: CALL :: call :: Ljava/lang/Object :: v23 = p1 $map .put(v19, v20)::JM,18913:JM,18898:JM,18892:JM,18893
18939 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v24 = new org.apache.tools.ant.types.selectors.TokenizedPattern::
18940 :: EXPR :: reference :: Ljava/lang/Object :: v25 = p2 $patterns [v31]::
18948 :: CALL :: call :: Z :: v28 = v5.add(v24)::
18953 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v31 + #(1)::DD,18967
18955 :: CALL :: call :: I :: v33 = v5.size()::JM,18959
18959 :: NORM :: declaration :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: v34 = new org.apache.tools.ant.types.selectors.TokenizedPattern[]::JM,18965
18960 :: CALL :: call :: [Ljava/lang/Object :: v36 = v5.toArray(v34)::JM,18965
18965 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::CF,18966
18966 :: NORM :: compound :: [Lorg/apache/tools/ant/types/selectors/TokenizedPattern :: return v37::DD,18887
18967 :: EXPR :: assign :: null :: PHI v31 = v30, #(0)::DD,18899:DD,18953:CF,18898
18968 :: EXPR :: assign :: null :: PHI v19 = v15, v18::JM,18913:CF,18927
19000 :: EXIT :: exit :: Ljava/io/File :: org.apache.tools.ant.types.selectors.TokenizedPath.findFile(java.io.File,java.lang.String[],boolean)::JM,16272
19005 :: EXPR :: assign :: I :: v6 = p2 $pathElements .length::CF,19006
19006 :: PRED :: IF :: Z :: if (v43 >= v6) goto 190::CD,19007:CD,19011:CD,19110:CD,19111:CD,19118:CD,19133
19007 :: CALL :: call :: Z :: v8 = v42.isDirectory()::JM,19011
19011 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 18::CD,19012:CD,19013:CD,19046:CD,19052:CD,19106:CD,19121:CD,19122:CD,19123:CD,19124:CD,19125
19012 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,19000
19013 :: CALL :: call :: [Ljava/lang/String :: v10 = v42.list()::JM,19056
19018 :: NORM :: declaration :: Lorg/apache/tools/ant/BuildException :: v50 = new org.apache.tools.ant.BuildException::
19019 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
19023 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(#(IO error scanning dir...))::
19028 :: CALL :: call :: Ljava/lang/String :: v57 = v42.getAbsolutePath()::
19032 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v55.append(v57)::
19037 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
19046 :: PRED :: IF :: Z :: if (p3 $cs  == #(0)) goto 71::CD,19047:CD,19050:CD,19121
19047 :: EXPR :: reference :: [Z :: v12 = org.apache.tools.ant.types.selectors.TokenizedPath.CS_SCAN_ONLY::DD,19121
19050 :: EXPR :: reference :: [Z :: v13 = org.apache.tools.ant.types.selectors.TokenizedPath.CS_THEN_NON_CS::CF,19121
19052 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 178::CD,19053:CD,19054:CF,19106
19053 :: EXPR :: assign :: I :: v15 = v14.length::CF,19054
19054 :: PRED :: IF :: Z :: if (v39 >= v15) goto 178::CD,19052:CD,19055:CD,19104:CD,19122:CD,19123:CD,19124:CD,19125:CD,19126:CD,19127:CD,19128:CD,19129:CD,19130:CF,19106
19055 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 170::CD,19056:CD,19057:CF,19104
19056 :: EXPR :: assign :: I :: v16 = v10.length::CF,19057
19057 :: PRED :: IF :: Z :: if (v35 >= v16) goto 170::CD,19055:CD,19062:CD,19102:CD,19126:CD,19127:CD,19128:CD,19129:CD,19130:CD,19131:CD,19132:CF,19104
19058 :: EXPR :: reference :: B :: v17 = v14[v40]::DD,19062
19062 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 137::CD,19071:CD,19076:CD,19086:CD,19091:CD,19131:CD,19132
19063 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v10[v35]::JM,19076:JM,19071
19067 :: EXPR :: reference :: Ljava/lang/Object :: v19 = p2 $pathElements [v45]::JM,19076:JM,19071
19071 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,19076:JM,19071
19076 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 164::CF,19131:CD,19092:CD,19132
19078 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v10[v35]::JM,19091:JM,19086
19082 :: EXPR :: reference :: Ljava/lang/Object :: v23 = p2 $pathElements [v45]::JM,19091:JM,19086
19086 :: CALL :: call :: Z :: v25 = v22.equalsIgnoreCase(v23)::JM,19091:JM,19086
19091 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 164::CF,19131:CF,19092:CD,19132
19092 :: NORM :: declaration :: Ljava/io/File :: v26 = new java.io.File::DD,19131
19093 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v10[v35]::
19102 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v35 + #(1)::DD,19130
19104 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v40 + #(1)::DD,19125
19106 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 183::CD,19005:CD,19006:CD,19107:CD,19108:CD,19119:CD,19120
19107 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,19000
19108 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v44 + #(1)::DD,19120
19110 :: EXPR :: assign :: I :: v46 = p2 $pathElements .length::DD,19111
19111 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 206::CD,19112:CD,19116:CD,19133
19112 :: CALL :: call :: Z :: v48 = v42.isDirectory()::JM,19116
19116 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 206::CD,19133
19118 :: NORM :: compound :: Ljava/io/File :: return v49::DD,19000
19119 :: EXPR :: assign :: null :: PHI v42 = v37, p1 $base ::CF,19120:DD,19122:DD,19133
19120 :: EXPR :: assign :: null :: PHI v43 = v41, #(0)::DD,19006:DD,19123:CF,19005
19121 :: EXPR :: assign :: null :: PHI v14 = v12, v13::DD,19053:CF,19122
19122 :: EXPR :: assign :: null :: PHI v37 = v33, v42::CF,19123:DD,19119:DD,19126
19123 :: EXPR :: assign :: null :: PHI v44 = v45, v43::CF,19124:DD,19108:DD,19127
19124 :: EXPR :: assign :: null :: PHI v38 = v34, #(0)::CF,19125:DD,19052:DD,19106:DD,19128
19125 :: EXPR :: assign :: null :: PHI v39 = v36, #(0)::DD,19054:DD,19129:CF,19052
19126 :: EXPR :: assign :: null :: PHI v33 = v30, v37::CF,19127:DD,19122:DD,19131
19127 :: EXPR :: assign :: null :: PHI v45 = v45, v44::CF,19128:DD,19123:DD,19127
19128 :: EXPR :: assign :: null :: PHI v34 = v31, v38::CF,19129:DD,19055:DD,19124:DD,19132
19129 :: EXPR :: assign :: null :: PHI v40 = v40, v39::CF,19130:DD,19104:DD,19129
19130 :: EXPR :: assign :: null :: PHI v35 = v32, #(0)::DD,19057:DD,19102:CF,19055
19131 :: EXPR :: assign :: null :: PHI v30 = v33, v33, v26::CF,19132:DD,19126
19132 :: EXPR :: assign :: null :: PHI v31 = v34, v34, #(1)::DD,19128:CF,19102
19133 :: EXPR :: assign :: null :: PHI v49 = #(null), v42::CF,19118
19206 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $path .toString()::JM,19221:JM,19227:JM,19247:JM,19215
19210 :: CALL :: call :: Z :: v11 = p3 $inc .contains(v9)::JM,19221:JM,19227:JM,19247:JM,19215
19215 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 35::CD,19216:CD,19221:JM,19227:JM,19215
19216 :: CALL :: call :: Z :: v14 = p4 $exc .contains(v9)::JM,19221:JM,19227:JM,19215
19221 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 35::CD,19222:CD,19227:JM,19221:JM,19215
19222 :: CALL :: call :: Z :: v16 = p5 $des .contains(v9)::JM,19221:JM,19227:JM,19215
19227 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 41::CD,19229:CD,19234:CD,19262:CD,19267
19229 :: CALL :: call :: Z :: v18 = p0 $this .isExcluded(p1 $path )::JM,19234
19234 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 62::CD,19235:CD,19241:CD,19247:CD,19267:JM,19221:JM,19227:JM,19215
19235 :: CALL :: call :: Z :: v27 = p4 $exc .add(v9)::JM,19221:JM,19227:JM,19215
19241 :: CALL :: call :: Z :: v20 = p0 $this .isSelected(v9, p2 $file )::JM,19221:JM,19227:JM,19247:JM,19215
19247 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 85::CD,19248:CD,19254:CD,19267:JM,19221:JM,19227:JM,19247:JM,19215
19248 :: CALL :: call :: Z :: v25 = p3 $inc .add(v9)::JM,19221:JM,19227:JM,19247:JM,19215
19254 :: CALL :: call :: Z :: v22 = p5 $des .add(v9)::JM,19221:JM,19227:JM,19215
19259 :: EXPR :: reference :: Z :: v29 = p0 $this .everythingIncluded::DD,19262
19262 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v29 && v28::DD,19263
19263 :: EXPR :: modify :: Z :: p0 $this .everythingIncluded = v30::
19267 :: EXPR :: assign :: null :: PHI v28 = #(0), #(1), #(0)::DD,19262
19340 :: CALL :: call :: Ljava/lang/String :: v9 = p2 $path .toString()::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19344 :: CALL :: call :: I :: v11 = v9.length()::JM,19731:JM,19348:JM,19356
19348 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 49::CF,19731:CD,19349:CD,19351:CD,19356
19349 :: EXPR :: reference :: Ljava/lang/String :: v13 = java.io.File.separator::JM,19731:JM,19348:JM,19356
19351 :: CALL :: call :: Z :: v15 = v9.endsWith(v13)::JM,19731:JM,19348:JM,19356
19356 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 49::CF,19731:CF,19357:CD,19361:CD,19366:CD,19368:CD,19373
19357 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,19731
19361 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v9)::JM,19731:JM,19348:JM,19356
19366 :: EXPR :: reference :: Ljava/lang/String :: v20 = java.io.File.separator::JM,19731
19368 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::JM,19731
19373 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,19731
19377 :: PRED :: IF :: Z :: if (p3 $fast  == #(0)) goto 63::CD,19378:CD,19383:CD,19388:CD,19518:CD,19519:CD,19724:CD,19733:CD,19734:JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19378 :: CALL :: call :: Z :: v27 = p0 $this .hasBeenScanned(v25)::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19383 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 63::CD,19388:CD,19518:CD,19519:CD,19724:CD,19733:CD,19734
19385 :: EXPR :: reference :: Z :: v28 = p0 $this .followSymlinks::DD,19388
19388 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 261::CF,19389:CD,19393:CD,19394:CD,19498:CD,19502:CD,19503:CD,19508:CD,19510:CD,19514:CD,19732:CD,19733:JM,19377:JM,19731:JM,19348:JM,19701:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19389 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::JM,19502:JM,19508
19393 :: EXPR :: assign :: I :: v34 = p4 $newfiles .length::CF,19394
19394 :: PRED :: IF :: Z :: if (v76 >= v34) goto 241::CD,19393:CD,19395:CD,19401:CD,19407:CD,19496:CD,19732:JM,19502
19395 :: EXPR :: reference :: Lorg/apache/tools/ant/util/SymbolicLinkUtils :: v35 = org.apache.tools.ant.DirectoryScanner.SYMLINK_UTILS::JM,19407
19397 :: EXPR :: reference :: Ljava/lang/Object :: v36 = p4 $newfiles [v76]::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19401 :: CALL :: call :: Z :: v38 = v35.isSymbolicLink(p1 $dir , v36)::JM,19407:JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695
19407 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 198::CF,19408:CD,19412:CD,19421:CD,19426:CD,19430:CD,19440:CD,19444:CD,19465:CD,19475
19408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::
19412 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(v25)::
19417 :: EXPR :: reference :: Ljava/lang/Object :: v43 = p4 $newfiles [v76]::
19421 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(v43)::
19426 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
19430 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::
19431 :: EXPR :: reference :: Ljava/lang/Object :: v49 = p4 $newfiles [v76]::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19440 :: CALL :: call :: Z :: v52 = v48.isDirectory()::JM,19444
19444 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 166::CD,19448:CD,19453:CD,19457
19445 :: EXPR :: reference :: Ljava/util/Vector :: v55 = p0 $this .dirsExcluded::
19448 :: CALL :: call :: V :: v55.addElement(v47)::
19453 :: CALL :: call :: Z :: v54 = v48.isFile()::JM,19457
19457 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 186::CD,19461
19458 :: EXPR :: reference :: Ljava/util/Vector :: v57 = p0 $this .filesExcluded::
19461 :: CALL :: call :: V :: v57.addElement(v47)::
19465 :: CALL :: call :: V :: p0 $this .accountForNotFollowedSymlink(v47, v48)::
19471 :: EXPR :: reference :: Ljava/lang/Object :: v60 = p4 $newfiles [v76]::
19475 :: CALL :: call :: Z :: v62 = v32.add(v60)::
19483 :: CALL :: call :: V :: v65.println(#(IOException caught wh...))::
19487 :: EXPR :: reference :: Ljava/lang/Object :: v67 = p4 $newfiles [v76]::
19491 :: CALL :: call :: Z :: v69 = v32.add(v67)::
19496 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,19732
19498 :: CALL :: call :: I :: v80 = v32.size()::JM,19502
19502 :: NORM :: declaration :: [Ljava/lang/String :: v81 = new java.lang.String[]::JM,19508
19503 :: CALL :: call :: [Ljava/lang/Object :: v83 = v32.toArray(v81)::JM,19508
19508 :: EXPR :: assign :: Ljava/lang/Object :: v84 = CHECKCAST v83::DD,19733
19510 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $dir .getName()::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19514 :: CALL :: call :: V :: p5 $directoryNamesFollowed .addFirst(v30)::JM,19731:JM,19348:JM,19356
19518 :: EXPR :: assign :: I :: v87 = v86.length::CF,19519
19519 :: PRED :: IF :: Z :: if (v153 >= v87) goto 576::CF,19520:CD,19518:CD,19524:CD,19533:CD,19538:CD,19542:CD,19552:CD,19562:CD,19566:CD,19719:CD,19734
19520 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
19524 :: CALL :: call :: Ljava/lang/StringBuilder :: v91 = v88.append(v25)::
19529 :: EXPR :: reference :: Ljava/lang/Object :: v92 = v86[v153]::
19533 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v91.append(v92)::
19538 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::
19542 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v97 = new org.apache.tools.ant.types.selectors.TokenizedPath::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19543 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v86[v153]::JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19356:JM,19695:JM,19407
19552 :: NORM :: declaration :: Ljava/io/File :: v100 = new java.io.File::JM,19629:JM,19654
19553 :: EXPR :: reference :: Ljava/lang/Object :: v101 = v86[v153]::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19562 :: CALL :: call :: [Ljava/lang/String :: v104 = v100.list()::JM,19566:JM,19567
19566 :: PRED :: IF :: Z :: if (v104 == #(null)) goto 362::CD,19567:CD,19568:CD,19574:CD,19579
19567 :: EXPR :: assign :: I :: v106 = v104.length::DD,19568
19568 :: PRED :: IF :: Z :: if (v106 != #(0)) goto 398::CD,19569:CD,19573:CD,19597:CD,19601
19569 :: CALL :: call :: Z :: v108 = v100.isFile()::JM,19573
19573 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 398::CD,19574:CD,19579:CD,19597:CD,19601
19574 :: CALL :: call :: Z :: v126 = p0 $this .isIncluded(v97)::JM,19579
19579 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 381::CD,19580:CD,19592
19580 :: CALL :: call :: V :: p0 $this .accountForIncludedFile(v97, v100)::
19586 :: EXPR :: modify :: Z :: p0 $this .everythingIncluded = #(0)::
19589 :: EXPR :: reference :: Ljava/util/Vector :: v128 = p0 $this .filesNotIncluded::
19592 :: CALL :: call :: V :: v128.addElement(v96)::
19597 :: CALL :: call :: Z :: v110 = v100.isDirectory()::JM,19601
19601 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 569::CD,19605:CF,19719
19602 :: EXPR :: reference :: Z :: v111 = p0 $this .followSymlinks::DD,19605
19605 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 481::CD,19610:CD,19617:CD,19664:CD,19669:CD,19710
19610 :: CALL :: call :: Z :: v114 = p0 $this .causesIllegalSymlinkLoop(v112, p1 $dir , p5 $directoryNamesFollowed )::JM,19617
19617 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 481::CD,19620:CD,19624:CD,19629:CD,19633:CD,19638:CD,19643:CD,19647:CD,19654:CD,19658:CD,19664:CD,19669:CD,19710
19620 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v131 = new java.lang.StringBuilder::
19624 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v131.append(#(skipping symbolic link ))::
19629 :: CALL :: call :: Ljava/lang/String :: v137 = v100.getAbsolutePath()::JM,19629
19633 :: CALL :: call :: Ljava/lang/StringBuilder :: v139 = v135.append(v137)::
19638 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v139.append(#( -- too many levels o...))::
19643 :: CALL :: call :: Ljava/lang/String :: v144 = v142.toString()::
19647 :: CALL :: call :: V :: v130.println(v144)::
19651 :: EXPR :: reference :: Ljava/util/Set :: v146 = p0 $this .notFollowedSymlinks::
19654 :: CALL :: call :: Ljava/lang/String :: v148 = v100.getAbsolutePath()::JM,19654
19658 :: CALL :: call :: Z :: v150 = v146.add(v148)::
19664 :: CALL :: call :: Z :: v116 = p0 $this .isIncluded(v97)::JM,19669
19669 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 505::CD,19670:CD,19685:CD,19689
19670 :: CALL :: call :: V :: p0 $this .accountForIncludedDir(v97, v100, p3 $fast , v104, p5 $directoryNamesFollowed )::
19679 :: EXPR :: modify :: Z :: p0 $this .everythingIncluded = #(0)::
19682 :: EXPR :: reference :: Ljava/util/Vector :: v117 = p0 $this .dirsNotIncluded::
19685 :: CALL :: call :: V :: v117.addElement(v96)::
19689 :: PRED :: IF :: Z :: if (p3 $fast  == #(0)) goto 553::CD,19690:CD,19695:JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19407:CF,19710
19690 :: CALL :: call :: Z :: v120 = p0 $this .couldHoldIncluded(v97)::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19695 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 553::CD,19696:CD,19701:JM,19377:JM,19393:JM,19731:JM,19348:JM,19733:JM,19383:JM,19689:JM,19356:JM,19695:JM,19407:CF,19710
19696 :: CALL :: call :: Z :: v122 = p0 $this .contentsExcluded(v97)::JM,19377:JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407
19701 :: PRED :: IF :: Z :: if (v122 != #(0)) goto 553::CD,19702:CF,19710
19702 :: CALL :: call :: V :: p0 $this .scandir(v100, v97, p3 $fast , v104, p5 $directoryNamesFollowed )::
19710 :: PRED :: IF :: Z :: if (p3 $fast  != #(0)) goto 569::CD,19711:CF,19719
19711 :: CALL :: call :: V :: p0 $this .scandir(v100, v97, p3 $fast , v104, p5 $directoryNamesFollowed )::
19719 :: EXPR :: assign :: Ljava/lang/Object :: v152 = v153 + #(1)::DD,19734
19721 :: EXPR :: reference :: Z :: v157 = p0 $this .followSymlinks::DD,19724
19724 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 588::CD,19725:JM,19731:JM,19348:JM,19356
19725 :: CALL :: call :: Ljava/lang/Object :: v159 = p5 $directoryNamesFollowed .removeFirst()::JM,19731:JM,19348:JM,19356
19731 :: EXPR :: assign :: null :: PHI v25 = v9, v9, v24::JM,19393:JM,19731:JM,19348:JM,19701:JM,19733:JM,19383:JM,19689:JM,19356:JM,19710:JM,19695:JM,19407:CF,19377
19732 :: EXPR :: assign :: null :: PHI v76 = v74, #(0)::DD,19394:DD,19496:CF,19393
19733 :: EXPR :: assign :: null :: PHI v86 = v84, p4 $newfiles ::DD,19518:CF,19734
19734 :: EXPR :: assign :: null :: PHI v153 = v152, #(0)::DD,19519:DD,19719:CF,19518
19897 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
19898 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(p1 $cmd )::
19906 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v5.append(#( ))::
19911 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
19951 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.next()::CE,19952:CD,19955:CD,19973:CD,20144:CD,20152:CD,20157:CD,20162:CD,20337:CD,20345:CD,20350:CD,20355
19952 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Tokenizer.next()::JM,16833:JM,17044:JM,23090:JM,23091:JM,24118
19955 :: CALL :: call :: V :: p0 $this .skipBlanks()::CL,22082
19964 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .command::JM,20179:JM,20037:JM,19993:JM,20122:JM,20190:JM,20335:JM,20028:JM,20072:JM,20085:JM,20117:JM,20210:JM,20248:JM,20286
19967 :: EXPR :: reference :: I :: v6 = p0 $this .commandLength::DD,19973:DD,20015:DD,20059:DD,20076:DD,20104:DD,20201:DD,20239:DD,20277:DD,20315
19970 :: EXPR :: reference :: I :: v7 = p0 $this .currentIndex::DD,19973
19973 :: PRED :: IF :: Z :: if (v7 < v6) goto 42::CD,19980:CD,19984:CD,19989:CD,19993
19974 :: EXPR :: modify :: I :: p0 $this .tokenType = #(-1)::
19977 :: EXPR :: reference :: I :: v132 = p0 $this .tokenType::DD,19980
19980 :: NORM :: compound :: I :: return v132::DD,19952
19981 :: EXPR :: reference :: I :: v8 = p0 $this .currentIndex::JM,20179:JM,20037:JM,19993:JM,20122:JM,20190:JM,20335
19984 :: CALL :: call :: C :: v10 = v5.charAt(v8)::JM,20179:JM,20037:JM,19993:JM,20122:JM,20190:JM,20335
19989 :: CALL :: call :: Z :: v12 = isJavaIdentifierStart(v10)::JM,20179:JM,20037:JM,19993:JM,20122:JM,20190:JM,20335
19993 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 112::CD,20000:CD,20015:CD,20032:CD,20033:CD,20037:JM,20179:JM,19993:JM,20122:JM,20190:JM,20335
19994 :: EXPR :: modify :: I :: p0 $this .tokenType = #(1)::
19997 :: EXPR :: reference :: I :: v121 = p0 $this .currentIndex::DD,20000
20000 :: EXPR :: assign :: Ljava/lang/Object :: v122 = v121 + #(1)::DD,20001
20001 :: EXPR :: modify :: I :: p0 $this .currentIndex = v122::
20005 :: EXPR :: reference :: I :: v129 = p0 $this .currentIndex::DD,20008
20008 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v129 + #(1)::DD,20009
20009 :: EXPR :: modify :: I :: p0 $this .currentIndex = v130::
20012 :: EXPR :: reference :: I :: v123 = p0 $this .currentIndex::DD,20015
20015 :: PRED :: IF :: Z :: if (v123 >= v6) goto 107::CD,20019:CD,20024:CD,20028
20016 :: EXPR :: reference :: I :: v124 = p0 $this .currentIndex::JM,20028
20019 :: CALL :: call :: C :: v126 = v5.charAt(v124)::JM,20028
20024 :: CALL :: call :: Z :: v128 = isJavaIdentifierPart(v126)::JM,20028
20028 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 76::CD,20008:CD,20015
20029 :: EXPR :: reference :: I :: v131 = p0 $this .tokenType::DD,20032
20032 :: NORM :: compound :: I :: return v131::DD,19952
20033 :: CALL :: call :: Z :: v15 = isDigit(v10)::JM,20179:JM,20037:JM,19993:JM,20122:JM,20190:JM,20335
20037 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 242::CD,20044:CD,20059:CD,20076:CD,20104:CD,20121:CD,20122
20038 :: EXPR :: modify :: I :: p0 $this .tokenType = #(2)::
20041 :: EXPR :: reference :: I :: v95 = p0 $this .currentIndex::DD,20044
20044 :: EXPR :: assign :: Ljava/lang/Object :: v96 = v95 + #(1)::DD,20045
20045 :: EXPR :: modify :: I :: p0 $this .currentIndex = v96::
20049 :: EXPR :: reference :: I :: v103 = p0 $this .currentIndex::DD,20052
20052 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v103 + #(1)::DD,20053
20053 :: EXPR :: modify :: I :: p0 $this .currentIndex = v104::
20056 :: EXPR :: reference :: I :: v97 = p0 $this .currentIndex::DD,20059
20059 :: PRED :: IF :: Z :: if (v97 >= v6) goto 169::CD,20063:CD,20068:CD,20072
20060 :: EXPR :: reference :: I :: v98 = p0 $this .currentIndex::JM,20072
20063 :: CALL :: call :: C :: v100 = v5.charAt(v98)::JM,20072
20068 :: CALL :: call :: Z :: v102 = isDigit(v100)::JM,20072
20072 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 138::CD,20052:CD,20059
20073 :: EXPR :: reference :: I :: v105 = p0 $this .currentIndex::DD,20076
20076 :: PRED :: IF :: Z :: if (v105 >= v6) goto 213::CD,20080:CD,20085
20077 :: EXPR :: reference :: I :: v106 = p0 $this .currentIndex::JM,20085
20080 :: CALL :: call :: C :: v108 = v5.charAt(v106)::JM,20085
20085 :: PRED :: IF :: Z :: if (v108 != #(46)) goto 213::CD,20089
20086 :: EXPR :: reference :: I :: v110 = p0 $this .currentIndex::DD,20089
20089 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v110 + #(1)::DD,20090
20090 :: EXPR :: modify :: I :: p0 $this .currentIndex = v111::
20094 :: EXPR :: reference :: I :: v118 = p0 $this .currentIndex::DD,20097
20097 :: EXPR :: assign :: Ljava/lang/Object :: v119 = v118 + #(1)::DD,20098
20098 :: EXPR :: modify :: I :: p0 $this .currentIndex = v119::
20101 :: EXPR :: reference :: I :: v112 = p0 $this .currentIndex::DD,20104
20104 :: PRED :: IF :: Z :: if (v112 >= v6) goto 235::CD,20108:CD,20113:CD,20117
20105 :: EXPR :: reference :: I :: v113 = p0 $this .currentIndex::JM,20117
20108 :: CALL :: call :: C :: v115 = v5.charAt(v113)::JM,20117
20113 :: CALL :: call :: Z :: v117 = isDigit(v115)::JM,20117
20117 :: PRED :: IF :: Z :: if (v117 != #(0)) goto 204::CD,20097:CD,20104
20118 :: EXPR :: reference :: I :: v120 = p0 $this .tokenType::DD,20121
20121 :: NORM :: compound :: I :: return v120::DD,19952
20122 :: PRED :: IF :: Z :: if (v10 != #(34)) goto 323::CD,20178:CD,20179
20123 :: EXPR :: modify :: I :: p0 $this .tokenType = #(3)::
20144 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
20149 :: EXPR :: reference :: I :: v86 = p0 $this .startIndex::
20152 :: CALL :: call :: Ljava/lang/String :: v88 = v5.substring(v86)::
20157 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v83.append(v88)::
20162 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::
20175 :: EXPR :: reference :: I :: v81 = p0 $this .tokenType::DD,20178
20178 :: NORM :: compound :: I :: return v81::DD,19952
20179 :: PRED :: IF :: null :: switch v10::CD,20190:CD,20194:CD,20201:CD,20228:CD,20232:CD,20239:CD,20266:CD,20270:CD,20277:CD,20304:CD,20308:CD,20315:CD,20335
20190 :: NORM :: compound :: I :: return v10::DD,19952
20191 :: EXPR :: reference :: I :: v61 = p0 $this .currentIndex::DD,20194
20194 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v61 + #(1)::DD,20195
20195 :: EXPR :: modify :: I :: p0 $this .currentIndex = v62::
20198 :: EXPR :: reference :: I :: v63 = p0 $this .currentIndex::DD,20201
20201 :: PRED :: IF :: Z :: if (v63 >= v6) goto 474::CD,20205:CD,20210
20202 :: EXPR :: reference :: I :: v64 = p0 $this .currentIndex::JM,20210
20205 :: CALL :: call :: C :: v66 = v5.charAt(v64)::JM,20210
20210 :: PRED :: IF :: Z :: if (v66 != #(61)) goto 474::
20218 :: EXPR :: modify :: I :: p0 $this .tokenType = #(122)::
20222 :: EXPR :: modify :: I :: p0 $this .tokenType = #(61)::
20225 :: EXPR :: reference :: I :: v70 = p0 $this .tokenType::DD,20228
20228 :: NORM :: compound :: I :: return v70::DD,19952
20229 :: EXPR :: reference :: I :: v50 = p0 $this .currentIndex::DD,20232
20232 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v50 + #(1)::DD,20233
20233 :: EXPR :: modify :: I :: p0 $this .currentIndex = v51::
20236 :: EXPR :: reference :: I :: v52 = p0 $this .currentIndex::DD,20239
20239 :: PRED :: IF :: Z :: if (v52 >= v6) goto 535::CD,20243:CD,20248
20240 :: EXPR :: reference :: I :: v53 = p0 $this .currentIndex::JM,20248
20243 :: CALL :: call :: C :: v55 = v5.charAt(v53)::JM,20248
20248 :: PRED :: IF :: Z :: if (v55 != #(61)) goto 535::
20256 :: EXPR :: modify :: I :: p0 $this .tokenType = #(121)::
20260 :: EXPR :: modify :: I :: p0 $this .tokenType = #(60)::
20263 :: EXPR :: reference :: I :: v60 = p0 $this .tokenType::DD,20266
20266 :: NORM :: compound :: I :: return v60::DD,19952
20267 :: EXPR :: reference :: I :: v38 = p0 $this .currentIndex::DD,20270
20270 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v38 + #(1)::DD,20271
20271 :: EXPR :: modify :: I :: p0 $this .currentIndex = v39::
20274 :: EXPR :: reference :: I :: v40 = p0 $this .currentIndex::DD,20277
20277 :: PRED :: IF :: Z :: if (v40 >= v6) goto 596::CD,20281:CD,20286
20278 :: EXPR :: reference :: I :: v41 = p0 $this .currentIndex::JM,20286
20281 :: CALL :: call :: C :: v43 = v5.charAt(v41)::JM,20286
20286 :: PRED :: IF :: Z :: if (v43 != #(61)) goto 596::
20294 :: EXPR :: modify :: I :: p0 $this .tokenType = #(123)::
20298 :: EXPR :: modify :: I :: p0 $this .tokenType = #(62)::
20301 :: EXPR :: reference :: I :: v49 = p0 $this .tokenType::DD,20304
20304 :: NORM :: compound :: I :: return v49::DD,19952
20305 :: EXPR :: reference :: I :: v29 = p0 $this .currentIndex::DD,20308
20308 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v29 + #(1)::DD,20309
20309 :: EXPR :: modify :: I :: p0 $this .currentIndex = v31::
20312 :: EXPR :: reference :: I :: v32 = p0 $this .currentIndex::DD,20315
20315 :: PRED :: IF :: Z :: if (v32 >= v6) goto 647::CD,20319
20316 :: EXPR :: reference :: I :: v33 = p0 $this .currentIndex::
20319 :: CALL :: call :: C :: v35 = v5.charAt(v33)::
20335 :: NORM :: compound :: I :: return v10::DD,19952
20337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
20342 :: EXPR :: reference :: I :: v21 = p0 $this .currentIndex::
20345 :: CALL :: call :: Ljava/lang/String :: v23 = v5.substring(v21)::
20350 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(v23)::
20355 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
20513 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.isToken(int)::CE,20514:CD,20521
20514 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Tokenizer.isToken(int)::JM,20546:JM,20581:JM,20626:JM,22156
20518 :: EXPR :: reference :: I :: v4 = p0 $this .tokenType::DD,20521
20521 :: PRED :: IF :: Z :: if (v4 != p1 $type ) goto 11::CD,20522:CD,20523
20522 :: NORM :: compound :: Z :: return #(1)::CF,20514
20523 :: NORM :: compound :: Z :: return #(0)::CF,20514
20528 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getStartIndex()::CE,20529:CD,20535
20529 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Tokenizer.getStartIndex()::
20532 :: EXPR :: reference :: I :: v3 = p0 $this .startIndex::DD,20535
20535 :: NORM :: compound :: I :: return v3::CF,20529
20537 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getIdent()::CE,20538:CD,20541:CD,20546:CD,20563:CD,20564
20538 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.util.preprocessor.Tokenizer.getIdent()::
20541 :: CALL :: call :: Z :: v5 = p0 $this .isToken(#(-1))::JM,20546:CL,20513
20546 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 13::CD,20557:CD,20564
20548 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .command::JM,20564
20551 :: EXPR :: reference :: I :: v8 = p0 $this .startIndex::JM,20564
20554 :: EXPR :: reference :: I :: v9 = p0 $this .currentIndex::JM,20564
20557 :: CALL :: call :: Ljava/lang/String :: v11 = v7.substring(v8, v9)::JM,20564
20563 :: NORM :: compound :: Ljava/lang/String :: return v13::DD,20538
20564 :: EXPR :: assign :: null :: PHI v13 = #(null), v11::CF,20563
20572 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getNumber()::CD,20576:CD,20581
20576 :: CALL :: call :: Z :: v5 = p0 $this .isToken(#(-1))::JM,20581:CL,20513
20581 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CF,20583:CD,20593:CD,20599
20583 :: NORM :: declaration :: Ljava/lang/Double :: v7 = new java.lang.Double::
20584 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .command::JM,20599
20587 :: EXPR :: reference :: I :: v9 = p0 $this .startIndex::JM,20599
20590 :: EXPR :: reference :: I :: v10 = p0 $this .currentIndex::JM,20599
20593 :: CALL :: call :: Ljava/lang/String :: v12 = v8.substring(v9, v10)::JM,20599
20599 :: CALL :: call :: D :: v14 = parseDouble(v12)::JM,20599
20617 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getString()::CD,20621:CD,20626
20621 :: CALL :: call :: Z :: v5 = p0 $this .isToken(#(-1))::JM,20626:CL,20513
20626 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 13::CD,20634:CD,20638:CD,20639
20628 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .command::
20631 :: EXPR :: reference :: I :: v8 = p0 $this .startIndex::DD,20634
20634 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::
20635 :: EXPR :: reference :: I :: v11 = p0 $this .currentIndex::DD,20638
20638 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v11 - #(1)::
20639 :: CALL :: call :: Ljava/lang/String :: v14 = v7.substring(v10, v12)::
20656 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.BasicResolver.resolveFile(java.lang.String)::CD,20661:CD,20669:CD,20713:CD,20721:CD,20729:CD,20731:CD,20736:CD,20741
20661 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::JM,20674:JM,20670
20666 :: EXPR :: reference :: Ljava/io/File :: v6 = p0 $this .parentDir::DD,20669
20669 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 108::CD,20670:CD,20674
20670 :: CALL :: call :: Z :: v9 = v4.isAbsolute()::JM,20674:JM,20670
20674 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 108::CF,20675:CD,20683:CD,20691:CD,20693:CD,20698:CD,20703
20675 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
20683 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v14)::
20691 :: EXPR :: reference :: C :: v35 = java.io.File.separatorChar::
20693 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v11.append(v35)::
20698 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(p1 $path )::
20703 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
20713 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
20721 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
20729 :: EXPR :: reference :: C :: v23 = java.io.File.separatorChar::
20731 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v16.append(v23)::
20736 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $path )::
20741 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
20794 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.toCanonicalOrAbsoluteFile(java.lang.String)::CD,20799:CD,20804:CD,20808
20799 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::JM,20804:JM,20808
20804 :: CALL :: call :: Z :: v7 = v4.isAbsolute()::JM,20804:JM,20808
20808 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 64::CF,20809:CD,20810:CD,20822:CD,20830:CD,20832:CD,20837:CD,20842
20809 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::CF,20810
20810 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
20811 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .documentPath::
20822 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
20830 :: EXPR :: reference :: C :: v18 = java.io.File.separatorChar::
20832 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v9.append(v18)::
20837 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(p1 $path )::
20842 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
20898 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.parseExpression()::CD,20902:CD,20909:CD,20913
20902 :: CALL :: call :: Z :: v4 = p0 $this .parseTerm()::CL,22127
20909 :: CALL :: call :: I :: v7 = v5.getTokenType()::JM,20913:CL,22169
20913 :: PRED :: IF :: null :: switch v7::CD,20909:CD,20917:CD,20921:CD,20930:CD,20934
20917 :: CALL :: call :: I :: v10 = v8.next()::CL,19951
20921 :: CALL :: call :: Z :: v12 = p0 $this .parseTerm()::CL,22127
20930 :: CALL :: call :: I :: v17 = v15.next()::CL,19951
20934 :: CALL :: call :: Z :: v19 = p0 $this .parseTerm()::CL,22127
20981 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Preprocessor.statePop()::CD,20988
20985 :: EXPR :: reference :: Ljava/util/Stack :: v3 = p0 $this .stack::
20988 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.pop()::
21003 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.indexOfNonTabOrSpace(java.lang.String)::CE,21004:CD,21007:CD,21020:CD,21021:CD,21022:JM,21017:JM,21018
21004 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Line.indexOfNonTabOrSpace(java.lang.String)::JM,17665:JM,17682:JM,17705
21007 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,21017:JM,21018:JM,21020
21012 :: CALL :: call :: C :: v7 = p1 $line .charAt(v12)::JM,21017:JM,21018:JM,21020
21017 :: PRED :: IF :: Z :: if (v7 == #(32)) goto 28::CD,21018:CD,21019:CD,21020:CD,21022
21018 :: PRED :: IF :: Z :: if (v7 != #(9)) goto 37::CD,21019:CD,21020:CD,21022:CF,21021
21019 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v12 + #(1)::DD,21022
21020 :: PRED :: IF :: Z :: if (v12 < v5) goto 12::CD,21012:CD,21017:JM,21018:JM,21020:CF,21021
21021 :: NORM :: compound :: I :: return v12::DD,21004
21022 :: EXPR :: assign :: null :: PHI v12 = #(0), v11::JM,21017:JM,21018:DD,21019:DD,21020:DD,21021
21039 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Line.indexOfTabOrSpace(java.lang.String,int)::CE,21040:CD,21044:CD,21050:CD,21056:CD,21060:CD,21061:JM,21057:JM,21058
21040 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Line.indexOfTabOrSpace(java.lang.String,int)::JM,17730:JM,17747
21044 :: CALL :: call :: I :: v6 = p1 $s .indexOf(#(32), p2 $fromIndex )::JM,21056:JM,21057:JM,21058:JM,21061
21050 :: CALL :: call :: I :: v9 = p1 $s .indexOf(#(9), p2 $fromIndex )::JM,21056:JM,21057:JM,21058:JM,21061
21056 :: PRED :: IF :: Z :: if (v9 == #(-1)) goto 28::CD,21057:CD,21058
21057 :: PRED :: IF :: Z :: if (v9 < v6) goto 32::CD,21058:CD,21061
21058 :: PRED :: IF :: Z :: if (v6 != #(-1)) goto 36::CD,21061
21060 :: NORM :: compound :: I :: return v11::CF,21040
21061 :: EXPR :: assign :: null :: PHI v11 = v9, v6::CF,21060
21078 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.LineType.directives()::CD,21081:CD,21083
21081 :: EXPR :: reference :: Ljava/util/Hashtable :: v2 = org.hsqldb.util.preprocessor.LineType.directives::DD,21083
21083 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 9::CD,21084
21084 :: CALL :: call :: V :: init()::CL,22178
21210 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,21211:CD,21214:JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21211 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,21214
21214 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,21215:JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21215 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
21219 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21224 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,21483
21225 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,21484:CD,21226:CD,21227:CD,21232
21226 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21227 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21232 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,21224:CD,21225:CD,21483:CD,21484
21234 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,21484
21235 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,21236:CD,21241:JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21433:JM,21210:JM,21307
21236 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21241 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,21234:CD,21235:CD,21484:JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21242 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21251 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,21485:CD,21252
21252 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,21485
21253 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21257 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,21486:CD,21258:CD,21263:JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21258 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21263 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,21486
21265 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,21266:CD,21272:CD,21276:CD,21281:CD,21284:CD,21285:CD,21487:CD,21488:CD,21489:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21266 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21272 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,21489:JM,21281
21276 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21296:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307:JM,21489
21281 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,21488:CD,21282:CD,21489
21282 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,21488
21284 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,21487
21285 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,21488:CD,21286:CD,21489
21286 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,21488:CD,21287:CD,21292:CD,21489:JM,21281:JM,21251:JM,21257:JM,21483:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21287 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21292 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,21488:CD,21265
21296 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,21492:CD,21297
21297 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,21301:CD,21306:CD,21307:CD,21314:CD,21324:CD,21490:CD,21491:CD,21492
21298 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,21306
21301 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,21306
21306 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,21492:CD,21307:CD,21314:CD,21324:CD,21490:CD,21491
21307 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,21490
21308 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,21490
21311 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,21314
21314 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,21491:CD,21318:CD,21323
21315 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,21318:JM,21323
21318 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,21318:JM,21323
21323 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,21491
21324 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,21492
21371 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
21372 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
21377 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21382 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,21432:JM,21433
21391 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,21395
21395 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
21400 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
21401 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
21406 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
21409 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
21414 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
21426 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21432 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,21433:CD,21434
21433 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,21232:JM,21281:JM,21265:JM,21251:JM,21432:JM,21241:JM,21257:JM,21433:JM,21483:JM,21292:JM,21263:JM,21490:JM,21492:JM,21210:JM,21307
21434 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,21281:JM,21251:JM,21257:JM,21483:JM,21292:JM,21263:JM,21232:JM,21265:JM,21490:JM,21492:JM,21432:JM,21241:JM,21433:JM,21210:JM,21307
21470 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
21471 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
21482 :: EXPR :: assign :: Ljava/lang/Exception :: v108 = catch <exc>::
21483 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,21224:DD,21225:DD,21226:DD,21235:DD,21286:JM,21232:JM,21265:JM,21251:JM,21432:JM,21241:JM,21257:JM,21433:JM,21483:JM,21292:JM,21263
21484 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,21234:DD,21235:JM,21232:JM,21281:JM,21265:JM,21251:JM,21432:JM,21241:JM,21257:JM,21433:JM,21483:JM,21292:JM,21263:DD,21252:DD,21485
21485 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,21257:JM,21232:JM,21281:JM,21265:JM,21251:JM,21432:JM,21241:JM,21433:JM,21483:JM,21292:JM,21263:DD,21487:DD,21488:JM,21490:JM,21492:JM,21210:JM,21307
21486 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,21285
21487 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,21232:JM,21265:JM,21251:JM,21432:JM,21241:JM,21257:JM,21433:JM,21483:JM,21292:JM,21263:DD,21282:DD,21284:DD,21286:JM,21281:CF,21285
21488 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,21489:JM,21232:JM,21265:JM,21251:JM,21432:JM,21241:JM,21257:JM,21433:JM,21483:JM,21292:JM,21263
21489 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,21297:JM,21306:DD,21491
21490 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,21492
21491 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,21324
21492 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,21391
21749 :: EXIT :: exit :: Z :: org.apache.tools.ant.types.PatternSet.NameEntry.valid(org.apache.tools.ant.Project)::JM,18769
21753 :: CALL :: call :: Lorg/apache/tools/ant/PropertyHelper :: v5 = getPropertyHelper(p1 $p )::
21760 :: CALL :: call :: Z :: v8 = v5.testIfCondition(v6)::JM,21765
21765 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 32::CD,21769:CD,21774:CD,21777
21769 :: CALL :: call :: Z :: v12 = v5.testUnlessCondition(v10)::JM,21774
21774 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 32::CD,21777
21776 :: NORM :: compound :: Z :: return v14::DD,21749
21777 :: EXPR :: assign :: null :: PHI v14 = #(1), #(0)::CF,21776
21794 :: NORM :: declaration :: Lorg/apache/tools/ant/types/selectors/TokenizedPath :: v5 = new org.apache.tools.ant.types.selectors.TokenizedPath::
21799 :: CALL :: call :: V :: p0 $this .accountForNotFollowedSymlink(v5, p2 $file )::
21810 :: EXIT :: exit :: Z :: org.apache.tools.ant.DirectoryScanner.causesIllegalSymlinkLoop(java.lang.String,java.io.File,java.util.LinkedList)::JM,19617
21816 :: CALL :: call :: I :: v7 = p3 $directoryNamesFollowed .size()::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871
21820 :: EXPR :: reference :: I :: v8 = p0 $this .maxLevelsOfSymlinks::DD,21823
21823 :: PRED :: IF :: Z :: if (v7 < v8) goto 203::CD,21824:CD,21832:CD,21955:JM,21841:JM,21876:JM,21900:JM,21823:JM,21871
21824 :: CALL :: call :: I :: v10 = frequency(p3 $directoryNamesFollowed , p1 $dirName )::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871
21829 :: EXPR :: reference :: I :: v11 = p0 $this .maxLevelsOfSymlinks::DD,21832
21832 :: PRED :: IF :: Z :: if (v10 < v11) goto 203::CD,21833:CD,21835:CD,21841:CD,21955
21833 :: EXPR :: reference :: Lorg/apache/tools/ant/util/SymbolicLinkUtils :: v12 = org.apache.tools.ant.DirectoryScanner.SYMLINK_UTILS::JM,21841
21835 :: CALL :: call :: Z :: v14 = v12.isSymbolicLink(p2 $parent , p1 $dirName )::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871
21841 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 203::CF,21842:CD,21848:CD,21854:CD,21858:CD,21863:CD,21867:CD,21871:CD,21955:CD,21964
21842 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::JM,21943:JM,21952
21848 :: CALL :: call :: Ljava/io/File :: v20 = v18.resolveFile(p2 $parent , p1 $dirName )::JM,21952:JM,21854
21854 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getCanonicalPath()::JM,21952:JM,21854
21858 :: CALL :: call :: Z :: v24 = v16.add(v22)::JM,21952
21863 :: CALL :: call :: Ljava/util/Iterator :: v27 = p3 $directoryNamesFollowed .iterator()::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871
21867 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,21876:JM,21871
21871 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 203::CD,21872:CD,21876:CD,21877:CD,21881:CD,21886:CD,21891:CD,21895:CD,21900:CD,21955:JM,21871
21872 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,21876:JM,21871
21876 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871:CF,21877
21877 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::JM,21964
21881 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v33.append(v67)::JM,21964
21886 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#(../))::JM,21964
21891 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::JM,21964
21895 :: CALL :: call :: Z :: v43 = p1 $dirName .equals(v32)::JM,21841:JM,21876:JM,21832:JM,21900:JM,21823:JM,21871
21900 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 199::CD,21867:CD,21871:CD,21903:CD,21907:CD,21912:CD,21917:CD,21921:CD,21927:CD,21931:CD,21936:CD,21943:CD,21964
21903 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
21907 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(v41)::JM,21964
21912 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(v32)::
21917 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
21921 :: CALL :: call :: Ljava/io/File :: v54 = v44.resolveFile(p2 $parent , v52)::JM,21927
21927 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getCanonicalPath()::JM,21927
21931 :: CALL :: call :: Z :: v58 = v16.add(v56)::
21936 :: CALL :: call :: I :: v60 = v16.size()::JM,21943
21940 :: EXPR :: reference :: I :: v61 = p0 $this .maxLevelsOfSymlinks::DD,21943
21943 :: PRED :: IF :: Z :: if (v60 <= v61) goto 199::CD,21867:CD,21871:CD,21944:CD,21952:CD,21964
21944 :: CALL :: call :: I :: v63 = frequency(v16, v22)::JM,21952
21949 :: EXPR :: reference :: I :: v64 = p0 $this .maxLevelsOfSymlinks::DD,21952
21952 :: PRED :: IF :: Z :: if (v63 <= v64) goto 199::CD,21867:CD,21871:CD,21953:CD,21964
21953 :: NORM :: compound :: Z :: return #(1)::DD,21810
21955 :: NORM :: compound :: Z :: return #(0)::DD,21810
21964 :: EXPR :: assign :: null :: PHI v67 = v41, #()::JM,21876:JM,21871:JM,21964
22032 :: CALL :: call :: V :: p0 $this .processIncluded(p1 $name , p2 $file , v8, v9, v10)::
22040 :: PRED :: IF :: Z :: if (p3 $fast  == #(0)) goto 49::CD,22041:CD,22046:JM,22052
22041 :: CALL :: call :: Z :: v14 = p0 $this .couldHoldIncluded(p1 $name )::JM,22052:JM,22046
22046 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 49::CD,22047:CD,22052:JM,22046
22047 :: CALL :: call :: Z :: v16 = p0 $this .contentsExcluded(p1 $name )::JM,22052:JM,22046
22052 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 49::CD,22053
22053 :: CALL :: call :: V :: p0 $this .scandir(p2 $file , p1 $name , p3 $fast , p4 $children , p5 $directoryNamesFollowed )::
22082 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.skipBlanks()::CD,22114
22086 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .command::JM,22101
22089 :: EXPR :: reference :: I :: v4 = p0 $this .commandLength::DD,22114
22093 :: EXPR :: reference :: I :: v6 = p0 $this .currentIndex::JM,22101
22096 :: CALL :: call :: C :: v8 = v3.charAt(v6)::JM,22101
22101 :: PRED :: IF :: null :: switch v8::CD,22105:CD,22114
22102 :: EXPR :: reference :: I :: v9 = p0 $this .currentIndex::DD,22105
22105 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 + #(1)::DD,22106
22106 :: EXPR :: modify :: I :: p0 $this .currentIndex = v11::
22111 :: EXPR :: reference :: I :: v5 = p0 $this .currentIndex::DD,22114
22114 :: PRED :: IF :: Z :: if (v5 < v4) goto 15::CD,22096:CD,22101
22127 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.parseTerm()::CD,22131:CD,22151:CD,22156
22131 :: CALL :: call :: Z :: v4 = p0 $this .parseFactor()::CL,23064
22139 :: CALL :: call :: I :: v12 = v10.next()::CL,19951
22143 :: CALL :: call :: Z :: v14 = p0 $this .parseFactor()::CL,23064
22151 :: CALL :: call :: Z :: v8 = v5.isToken(#(38))::JM,22156:CL,20513
22156 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 9::CD,22139:CD,22143:CD,22151
22169 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getTokenType()::CE,22170:CD,22176
22170 :: EXIT :: exit :: I :: org.hsqldb.util.preprocessor.Tokenizer.getTokenType()::JM,20913:JM,23075
22173 :: EXPR :: reference :: I :: v3 = p0 $this .tokenType::DD,22176
22176 :: NORM :: compound :: I :: return v3::CF,22170
22178 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.LineType.init()::CD,22181:CD,22185:CD,22187:CD,22188:CD,22191:CD,22266:CD,22267:CD,22271
22181 :: NORM :: declaration :: Ljava/util/Hashtable :: v2 = new java.util.Hashtable::DD,22185
22185 :: EXPR :: modify :: Ljava/util/Hashtable :: org.hsqldb.util.preprocessor.LineType.directives = v2::
22187 :: NORM :: declaration :: [Ljava/lang/String :: v5 = new java.lang.String[]::CF,22188
22188 :: EXPR :: modify :: [Ljava/lang/String :: org.hsqldb.util.preprocessor.LineType.labels = v5::
22191 :: CALL :: call :: [Ljava/lang/reflect/Field :: v8 = v6.getDeclaredFields()::JM,22266
22196 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v8[v44]::JM,22211:JM,22200:JM,22206:JM,22212:JM,22236:JM,22223:JM,22227:JM,22216:JM,22252
22200 :: CALL :: call :: Ljava/lang/Class :: v13 = v11.getType()::JM,22211:JM,22200:JM,22206
22204 :: EXPR :: reference :: Ljava/lang/Class :: v14 = java.lang.Integer.TYPE::JM,22211:JM,22206
22206 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,22211:JM,22206
22211 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 152::CD,22212:CD,22216:CD,22221:CD,22227:JM,22236:JM,22223:CF,22265
22212 :: CALL :: call :: Ljava/lang/String :: v18 = v11.getName()::JM,22212:JM,22236:JM,22223
22216 :: CALL :: call :: I :: v21 = v11.getInt(#(null))::JM,22227:JM,22216:JM,22252
22221 :: EXPR :: reference :: [Ljava/lang/String :: v22 = org.hsqldb.util.preprocessor.LineType.labels::
22223 :: EXPR :: modify :: Ljava/lang/Object :: v22[v21] = v18::
22227 :: PRED :: IF :: null :: switch v21::CF,22229:CD,22234:CD,22236:CD,22241:CD,22246:CD,22250:CD,22252:CD,22257
22229 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
22234 :: EXPR :: reference :: Ljava/util/Locale :: v26 = java.util.Locale.ENGLISH::JM,22236
22236 :: CALL :: call :: Ljava/lang/String :: v28 = v18.toLowerCase(v26)::JM,22236
22241 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v23.append(v28)::
22246 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
22250 :: EXPR :: reference :: Ljava/util/Hashtable :: v33 = org.hsqldb.util.preprocessor.LineType.directives::CF,22252
22252 :: NORM :: declaration :: Ljava/lang/Integer :: v34 = new java.lang.Integer::JM,22252
22257 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v32, v34)::
22265 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(1)::DD,22271
22266 :: EXPR :: assign :: I :: v10 = v8.length::CF,22267
22267 :: PRED :: IF :: Z :: if (v44 < v10) goto 33::CD,22200:CD,22204:CD,22206:CD,22211:CD,22265:CD,22266:CD,22271
22271 :: EXPR :: assign :: null :: PHI v44 = #(0), v42::DD,22265:DD,22267:CF,22266
22410 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
22424 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,22431
22426 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,22431:JM,22608:JM,22438:JM,22535:JM,22605
22431 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,22432:DD,22605
22432 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,22433:CD,22435:CD,22443:CD,22605
22433 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,22435
22435 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,22605:CD,22436:CD,22438
22436 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,22438:JM,22605
22438 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,22438:JM,22605:JM,22608:JM,22535:JM,22431
22443 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CD,22450:CD,22454:CD,22455:CD,22474:CD,22475:CD,22483:CD,22488:CD,22492:CD,22556:CD,22609
22450 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,22454
22454 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,22455
22455 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,22456:CD,22457:CD,22465:CD,22470
22456 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
22457 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
22465 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
22470 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
22474 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
22475 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
22483 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
22488 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
22492 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,22561
22499 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
22503 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
22507 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,22608:JM,22535
22508 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
22516 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,22608:JM,22535
22521 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,22608:JM,22535:JM,22438:JM,22605:JM,22431
22526 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,22608:JM,22535
22531 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,22608:JM,22535
22535 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,22608:JM,22535
22540 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,22608
22544 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,22608:JM,22535
22549 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,22609:CD,22550:CD,22554
22550 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,22550:JM,22554
22554 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,22609
22556 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CD,22557:CD,22561
22557 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,22561
22561 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CD,22499:CD,22503:CD,22507:CD,22508:CD,22516:CD,22521:CD,22526:CD,22531:CD,22535:CD,22549:CD,22556:CD,22608:CD,22609
22605 :: EXPR :: assign :: null :: PHI v14 = v6, v12::DD,22443:DD,22609
22608 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,22549:JM,22550:JM,22554
22609 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,22556:DD,22609
22882 :: EXIT :: exit :: Z :: org.apache.tools.ant.PropertyHelper.testIfCondition(java.lang.Object)::JM,21765
22886 :: CALL :: call :: Z :: v5 = nullOrEmpty(p1 $value )::JM,22890
22890 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 16::CD,22891:CD,22896:CD,22899
22891 :: CALL :: call :: Z :: v8 = p0 $this .evalAsBooleanOrPropertyName(p1 $value )::JM,22896
22896 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CD,22899
22898 :: NORM :: compound :: Z :: return v10::DD,22882
22899 :: EXPR :: assign :: null :: PHI v10 = #(1), #(0)::CF,22898
22908 :: EXIT :: exit :: Z :: org.apache.tools.ant.PropertyHelper.testUnlessCondition(java.lang.Object)::JM,21774
22912 :: CALL :: call :: Z :: v5 = nullOrEmpty(p1 $value )::JM,22916
22916 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 16::CD,22917:CD,22922:CD,22925
22917 :: CALL :: call :: Z :: v8 = p0 $this .evalAsBooleanOrPropertyName(p1 $value )::JM,22922
22922 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 20::CD,22925
22924 :: NORM :: compound :: Z :: return v10::DD,22908
22925 :: EXPR :: assign :: null :: PHI v10 = #(1), #(0)::CF,22924
22934 :: EXIT :: exit :: Ljava/io/File :: org.apache.tools.ant.util.FileUtils.resolveFile(java.io.File,java.lang.String)::JM,21952:JM,21854:JM,21927
22939 :: CALL :: call :: Z :: v6 = isAbsolutePath(p2 $filename )::JM,22962:JM,23028:JM,22972:JM,22943
22943 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 105::CD,22944:CD,22946:CD,22952:CD,22958:CD,22962:CD,23011:CD,23027:CD,23028
22944 :: EXPR :: reference :: C :: v8 = java.io.File.separatorChar::JM,22962:JM,23028:JM,22943:DD,22972:DD,22978
22946 :: CALL :: call :: Ljava/lang/String :: v11 = p2 $filename .replace(#(47), v8)::JM,22962:JM,23028:JM,22972:JM,22943
22952 :: CALL :: call :: Ljava/lang/String :: v14 = v11.replace(#(92), v8)::JM,22962:JM,23028:JM,22972
22958 :: CALL :: call :: Z :: v16 = isContextRelativePath(v14)::JM,22962:JM,23028:JM,22972
22962 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 90::CF,23027:CD,22963:CD,22967:CD,22972:CD,23028:JM,22978
22963 :: CALL :: call :: Ljava/lang/String :: v20 = getProperty(#(user.dir))::JM,22978:JM,22963
22967 :: CALL :: call :: C :: v22 = v14.charAt(#(0))::JM,22962:JM,23028:JM,22972
22972 :: PRED :: IF :: Z :: if (v22 != v8) goto 90::CF,23027:CD,22973:CD,22978:CD,23028
22973 :: CALL :: call :: C :: v24 = v20.charAt(#(0))::JM,22978
22978 :: PRED :: IF :: Z :: if (v24 != v8) goto 90::CF,23027:CF,22979:CD,22983:CD,22992:CD,22997:CD,23002:CD,23007:CD,23028
22979 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::JM,23028
22983 :: CALL :: call :: [Ljava/lang/String :: v28 = p0 $this .dissect(v20)::JM,22962:JM,23027:JM,23028:JM,22972:JM,22943:JM,22978
22988 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v28[#(0)]::JM,23028
22992 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v25.append(v29)::JM,23028
22997 :: CALL :: call :: Ljava/lang/String :: v34 = v14.substring(#(1))::JM,22962:JM,23028:JM,22972
23002 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v31.append(v34)::JM,23028
23007 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::JM,23028
23011 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
23021 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .normalize(v46)::JM,23026
23026 :: NORM :: compound :: Ljava/io/File :: return v48::DD,22934
23027 :: EXPR :: assign :: null :: PHI v39 = p1 $file , #(null), #(null), #(null)::CF,23028
23028 :: EXPR :: assign :: null :: PHI v40 = v14, v14, v14, v38::CF,23011
23064 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.parseFactor()::CD,23071:CD,23075:CD,23119:CD,23127:CD,23131:CD,23136:CD,23144:CD,23148:CD,23153:CD,23158:CD,23202:CD,23210:CD,23214:CD,23219:CD,23227:CD,23231:CD,23236:CD,23241:CD,23259:CD,23267:CD,23271:CD,23276:CD,23284:CD,23288:CD,23293:CD,23298
23071 :: CALL :: call :: I :: v5 = v3.getTokenType()::JM,23075:CL,22169
23075 :: PRED :: IF :: null :: switch v5::CD,23079:CD,23086:CD,23090:CD,23170:CD,23174:CD,23184:CD,23188:CD,23253
23079 :: CALL :: call :: Ljava/lang/String :: v72 = v70.getIdent()::CL,20537
23086 :: CALL :: call :: I :: v75 = v73.next()::JM,23090:JM,23091:CL,19951
23090 :: PRED :: IF :: Z :: if (v75 == #(-1)) goto 75::CD,23091
23091 :: PRED :: IF :: Z :: if (v75 == #(41)) goto 75::CD,23092:CD,23096
23092 :: CALL :: call :: Z :: v78 = isLogicalOperator(v75)::JM,23096:CL,23565
23096 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 87::CD,23111
23111 :: CALL :: call :: Z :: v103 = p0 $this .parseComparison(v72, v75)::CL,23585
23119 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v82 = new java.lang.StringBuilder::
23127 :: CALL :: call :: I :: v87 = v85.getStartIndex()::CL,20528
23131 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v82.append(v87)::
23136 :: CALL :: call :: Ljava/lang/StringBuilder :: v91 = v89.append(#( in [))::
23144 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getSource()::CL,23761
23148 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(v94)::
23153 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v96.append(#(]))::
23158 :: CALL :: call :: Ljava/lang/String :: v100 = v98.toString()::
23170 :: CALL :: call :: I :: v65 = v63.next()::CL,19951
23174 :: CALL :: call :: Z :: v67 = p0 $this .parseFactor()::CL,23064
23184 :: CALL :: call :: I :: v31 = v29.next()::CL,19951
23188 :: CALL :: call :: Z :: v33 = p0 $this .parseExpression()::CL,20898
23202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v43 = new java.lang.StringBuilder::
23210 :: CALL :: call :: I :: v48 = v46.getStartIndex()::CL,20528
23214 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v43.append(v48)::
23219 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#( in [))::
23227 :: CALL :: call :: Ljava/lang/String :: v55 = v53.getSource()::CL,23761
23231 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v52.append(v55)::
23236 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v57.append(#(]))::
23241 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
23253 :: CALL :: call :: I :: v41 = v39.next()::CL,19951
23259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
23267 :: CALL :: call :: I :: v12 = v10.getStartIndex()::CL,20528
23271 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(v12)::
23276 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( in [))::
23284 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSource()::CL,23761
23288 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v17.append(v20)::
23293 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(]))::
23298 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
23528 :: EXIT :: exit :: Z :: org.apache.tools.ant.PropertyHelper.evalAsBooleanOrPropertyName(java.lang.Object)::JM,22896:JM,22922
23532 :: CALL :: call :: Ljava/lang/Boolean :: v5 = toBoolean(p1 $value )::JM,23536:JM,23541:JM,23551
23536 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 16::CD,23537:CD,23541:CD,23542:CD,23546:CD,23551:CD,23553:CD,23554
23537 :: CALL :: call :: Z :: v15 = v5.booleanValue()::JM,23541
23541 :: NORM :: compound :: Z :: return v15::DD,23528
23542 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(p1 $value )::JM,23551
23546 :: CALL :: call :: Ljava/lang/Object :: v10 = p0 $this .getProperty(v8)::JM,23536:JM,23541:JM,23551
23551 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 30::CD,23554
23553 :: NORM :: compound :: Z :: return v13::DD,23528
23554 :: EXPR :: assign :: null :: PHI v13 = #(1), #(0)::CF,23553
23565 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Token.isLogicalOperator(int)::CF,23566:CD,23569
23566 :: EXIT :: exit :: Z :: org.hsqldb.util.preprocessor.Token.isLogicalOperator(int)::JM,23096
23569 :: PRED :: IF :: null :: switch p1 $type ::CD,23570:CD,23571
23570 :: NORM :: compound :: Z :: return #(1)::CF,23566
23571 :: NORM :: compound :: Z :: return #(0)::CF,23566
23585 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.parseComparison(java.lang.String,int)::CD,23602:CD,23606:CD,23612:CD,23617:CD,23622:CD,23627:CD,23632:CD,23640:CD,23644:CD,23649:CD,23654:CD,23663:CD,23713
23602 :: CALL :: call :: I :: v10 = v8.getStartIndex()::CL,20528
23606 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .parseValue()::CL,24107
23612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::
23617 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v39.append(p1 $ident )::JM,23663
23622 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( is not defined at po...))::
23627 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(v10)::
23632 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(#(in [))::
23640 :: CALL :: call :: Ljava/lang/String :: v54 = v52.getSource()::CL,23761
23644 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v54)::
23649 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(]))::
23654 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
23663 :: PRED :: IF :: null :: switch p2 $opType ::CD,23664:CD,23672:CD,23680:CD,23688:CD,23696
23664 :: CALL :: call :: I :: v32 = compare(v7, v12)::CL,24273
23672 :: CALL :: call :: I :: v29 = compare(v7, v12)::CL,24273
23680 :: CALL :: call :: I :: v26 = compare(v7, v12)::CL,24273
23688 :: CALL :: call :: I :: v23 = compare(v7, v12)::CL,24273
23696 :: CALL :: call :: I :: v18 = compare(v7, v12)::CL,24273
23713 :: CALL :: call :: I :: v37 = v35.next()::CL,19951
23761 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Tokenizer.getSource()::CE,23762:CD,23768
23762 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.util.preprocessor.Tokenizer.getSource()::
23765 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .command::DD,23768
23768 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,23762
24107 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.parseValue()::CD,24114:CD,24118:CD,24136:CD,24141:CD,24146:CD,24154:CD,24158:CD,24163:CD,24171:CD,24175:CD,24180:CD,24185:CD,24211:CD,24219:CD,24223:CD,24228:CD,24236:CD,24240:CD,24245:CD,24250
24114 :: CALL :: call :: I :: v5 = v3.next()::JM,24118:CL,19951
24118 :: PRED :: IF :: null :: switch v5::CD,24122:CD,24197:CD,24205
24122 :: CALL :: call :: Ljava/lang/String :: v37 = v35.getIdent()::CL,20537
24136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
24141 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v37)::
24146 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(#( is not defined at po...))::
24154 :: CALL :: call :: I :: v54 = v52.getStartIndex()::CL,20528
24158 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v54)::
24163 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(in [))::
24171 :: CALL :: call :: Ljava/lang/String :: v62 = v60.getSource()::CL,23761
24175 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
24180 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v64.append(#(]))::
24185 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
24197 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getString()::CL,20617
24205 :: CALL :: call :: Ljava/lang/Number :: v31 = v29.getNumber()::CL,20572
24211 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
24219 :: CALL :: call :: I :: v12 = v10.getStartIndex()::CL,20528
24223 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(v12)::
24228 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( in: [))::
24236 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSource()::CL,23761
24240 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v17.append(v20)::
24245 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(]))::
24250 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
24273 :: ENTR :: entry :: null :: org.hsqldb.util.preprocessor.Parser.compare(java.lang.Object,java.lang.Object)::CD,24278:CD,24279:JM,24288:JM,24293:JM,24280:JM,24284
24278 :: EXPR :: assign :: Z :: v4=p1 $o1  INSTANCEOF java.lang.Comparable::DD,24279
24279 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 47::CD,24280:CD,24284:CD,24288:CD,24293:CD,24315:CD,24319:JM,24278
24280 :: CALL :: call :: Ljava/lang/Class :: v13 = p1 $o1 .getClass()::JM,24288:JM,24293:JM,24278:JM,24280:JM,24284
24284 :: CALL :: call :: Ljava/lang/Class :: v15 = p2 $o2 .getClass()::JM,24288:JM,24293:JM,24278:JM,24280:JM,24284
24288 :: CALL :: call :: Z :: v17 = v13.isAssignableFrom(v15)::JM,24288:JM,24293
24293 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 35::CD,24301:CD,24305
24301 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $o1 )::
24305 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(p2 $o2 )::
24315 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $o1 .toString()::
24319 :: CALL :: call :: Ljava/lang/String :: v9 = p2 $o2 .toString()::
