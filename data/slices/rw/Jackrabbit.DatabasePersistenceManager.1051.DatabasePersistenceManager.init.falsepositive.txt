[1042]
1 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.OraclePersistenceManager.init(org.apache.jackrabbit.core.persistence.PMContext)::CD,6
1026 :: CALL :: call :: Z :: v47 = v57.startsWith(#(#))::JM,1031
6 :: CALL :: call :: V :: p0 $this .init(p1 $context )::CL,375
1031 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 246::CD,1032:CD,1036:JM,1078
1032 :: CALL :: call :: I :: v49 = v57.length()::JM,1036
1036 :: PRED :: IF :: Z :: if (v49 <= #(0)) goto 246::CD,1037:CD,1042:JM,1078
1037 :: CALL :: call :: Ljava/lang/String :: v51 = p0 $this .createSchemaSql(v57)::JM,1042:CL,2772:CL,2796
1042 :: CALL :: call :: I :: v53 = v42.executeUpdate(v51)::JM,1042
1047 :: CALL :: call :: Ljava/lang/String :: v56 = v36.readLine()::JM,1078
1051 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 212::CD,1026:CD,1031:CD,1047:CD,1078
1077 :: EXPR :: assign :: null :: PHI v25 = v24, v15, v22::JM,944:JM,964:JM,952:JM,929:JM,935:JM,939:JM,925
1078 :: EXPR :: assign :: null :: PHI v57 = v44, v56::JM,1031:JM,1036:DD,1051
276 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schemaObjectPrefix = #()::
320 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schemaObjectPrefix = #()::
349 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schemaObjectPrefix = #()::
375 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.init(org.apache.jackrabbit.core.persistence.PMContext)::CD,390:CD,396:CD,402:CD,407:CD,411:CD,416:CD,421:CD,425:CD,430:CD,440:CD,445:CD,449:CD,454:CD,459:CD,463:CD,468:CD,484:CD,487:CD,491
390 :: CALL :: call :: V :: p0 $this .initConnection()::CL,693
393 :: EXPR :: reference :: Ljava/sql/Connection :: v7 = p0 $this .con::JM,421:JM,407:JM,459:JM,396:JM,445
396 :: CALL :: call :: Ljava/sql/DatabaseMetaData :: v9 = v7.getMetaData()::JM,421:JM,407:JM,459:JM,396:JM,445
402 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
407 :: CALL :: call :: Ljava/lang/String :: v15 = v9.getDatabaseProductName()::JM,421:JM,407:JM,459:JM,445
411 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
416 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( / ))::
421 :: CALL :: call :: Ljava/lang/String :: v22 = v9.getDatabaseProductVersion()::JM,421:JM,407:JM,459:JM,445
425 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(v22)::
430 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
440 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
445 :: CALL :: call :: Ljava/lang/String :: v33 = v9.getDriverName()::JM,421:JM,407:JM,459:JM,445
449 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(v33)::
454 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(#( / ))::
459 :: CALL :: call :: Ljava/lang/String :: v39 = v9.getDriverVersion()::JM,421:JM,407:JM,459:JM,445
463 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(v39)::
468 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
484 :: CALL :: call :: V :: p0 $this .prepareSchemaObjectPrefix()::CL,726
487 :: CALL :: call :: Z :: v52 = p0 $this .isSchemaCheckEnabled()::JM,491:CL,884
491 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 148::CD,492
492 :: CALL :: call :: V :: p0 $this .checkSchema()::CL,893
2672 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.JNDIDatabasePersistenceManager.getConnection()::CE,2673:CD,2676:CD,2683:CD,2688:CD,2689:CD,2693
2673 :: EXIT :: exit :: Ljava/sql/Connection :: org.apache.jackrabbit.core.persistence.db.JNDIDatabasePersistenceManager.getConnection()::JM,701
2676 :: NORM :: declaration :: Ljavax/naming/InitialContext :: v3 = new javax.naming.InitialContext::JM,2688:JM,2683
2680 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .dataSourceLocation::JM,2688:JM,2683
2683 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.lookup(v5)::JM,2688:JM,2683
2688 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,2689:JM,2693
641 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
2689 :: CALL :: call :: Ljava/sql/Connection :: v10 = v8.getConnection()::JM,2689:JM,2693
2693 :: NORM :: compound :: Ljava/sql/Connection :: return v10::CF,2673
651 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schemaObjectPrefix = #()::
2700 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.SimpleDbPersistenceManager.getConnection()::CE,2701:CD,2719:CD,2727:CD,2731
2701 :: EXIT :: exit :: Ljava/sql/Connection :: org.apache.jackrabbit.core.persistence.db.SimpleDbPersistenceManager.getConnection()::JM,701
2704 :: EXPR :: reference :: Lorg/apache/jackrabbit/core/util/db/ConnectionFactory :: v3 = p0 $this .connectionFactory::JM,2727:JM,2731:JM,2719
2707 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .driver::JM,2727:JM,2731:JM,2719
2710 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .url::JM,2727:JM,2731:JM,2719
2713 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .user::JM,2727:JM,2731:JM,2719
2716 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .password::JM,2727:JM,2731:JM,2719
2719 :: CALL :: call :: Ljavax/sql/DataSource :: v9 = v3.getDataSource(v4, v5, v6, v7)::JM,2727:JM,2731:JM,2719
2727 :: CALL :: call :: Ljava/sql/Connection :: v11 = v9.getConnection()::JM,2727:JM,2731:JM,2719
2731 :: NORM :: compound :: Ljava/sql/Connection :: return v11::CF,2701
2737 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.getSchemaDDL()::CE,2738:CD,2741:CD,2742:CD,2746:CD,2754:CD,2759:CD,2763:CD,2768
2738 :: EXIT :: exit :: Ljava/io/InputStream :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.getSchemaDDL()::
693 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.initConnection()::CD,697
2741 :: EXPR :: assign :: Ljava/lang/Class :: v3 = metadata <Application,Lorg/apache/jackrabbit/core/persistence/db/DatabasePersistenceManager>-><Primordial,Ljava/lang/Class>::CF,2742:JM,2768
2742 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,2768
2743 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .schema::
697 :: CALL :: call :: Ljava/sql/Connection :: v4 = p0 $this .getConnection()::JM,701:CL,2700:CL,2672
2746 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
701 :: EXPR :: modify :: Ljava/sql/Connection :: p0 $this .con = v4::
2754 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v4.append(#(.ddl))::JM,2768
2759 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::JM,2768
2763 :: CALL :: call :: Ljava/io/InputStream :: v15 = v3.getResourceAsStream(v13)::JM,2768
2768 :: NORM :: compound :: Ljava/io/InputStream :: return v15::DD,2738
2772 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.MSSqlPersistenceManager.createSchemaSql(java.lang.String)::CE,2773:CD,2777:CD,2785:CD,2791
2773 :: EXIT :: exit :: Ljava/lang/String :: org.apache.jackrabbit.core.persistence.db.MSSqlPersistenceManager.createSchemaSql(java.lang.String)::JM,1042
726 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.prepareSchemaObjectPrefix()::CD,733:CD,737:CD,741:CD,742:CD,750:CD,755:CD,762:CD,766:CD,824:CD,828:CD,829:CD,837
2777 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .createSchemaSql(p1 $sql )::JM,2785:JM,2791:CL,2796
730 :: EXPR :: reference :: Ljava/sql/Connection :: v3 = p0 $this .con::JM,737:JM,733
733 :: CALL :: call :: Ljava/sql/DatabaseMetaData :: v5 = v3.getMetaData()::JM,737:JM,733
2782 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .tableSpace::JM,2785:JM,2791
2785 :: CALL :: call :: Ljava/lang/String :: v9 = replace(v5, #(${tableSpace}), v7)::JM,2785:JM,2791
737 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getExtraNameCharacters()::JM,737
741 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,781
742 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v7)::
2791 :: NORM :: compound :: Ljava/lang/String :: return v9::CF,2773
2796 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.createSchemaSql(java.lang.String)::CE,2797:CD,2804:CD,2810
2797 :: EXIT :: exit :: Ljava/lang/String :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.createSchemaSql(java.lang.String)::JM,1042:JM,2785:JM,2791
750 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(#(ABCDEFGHIJKLMNOPQRSTU...))::JM,781
2801 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .schemaObjectPrefix::JM,2804:JM,2810
755 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,781
2804 :: CALL :: call :: Ljava/lang/String :: v7 = replace(p1 $sql , #(${schemaObjectPrefix}), v5)::JM,2804:JM,2810
759 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .schemaObjectPrefix::JM,828:JM,781:JM,799
2810 :: NORM :: compound :: Ljava/lang/String :: return v7::CF,2797
762 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,828:JM,781:JM,799
766 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,833
771 :: CALL :: call :: C :: v26 = v19.charAt(v53)::JM,828:JM,781:JM,799
776 :: CALL :: call :: I :: v28 = v16.indexOf(v26)::JM,781:JM,828:JM,799
781 :: PRED :: IF :: Z :: if (v28 != #(-1)) goto 139::CD,782:CD,787:CD,791:CD,795:CD,799:CD,800:CD,807:CD,812:CD,818
782 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v20.append(#(_x))::
787 :: CALL :: call :: Ljava/lang/String :: v34 = toHexString(v26)::JM,828:JM,781:JM,799
791 :: CALL :: call :: [C :: v37 = #(0000).toCharArray()::
795 :: CALL :: call :: I :: v40 = v34.length()::JM,799
799 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(4) - v40::
800 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v20.append(v37, #(0), v41)::
807 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v20.append(v34)::JM,799
812 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v20.append(#(_))::
818 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v20.append(v26)::JM,828:JM,781:JM,799
823 :: EXPR :: assign :: Ljava/lang/Object :: v52 = v53 + #(1)::DD,837
824 :: CALL :: call :: I :: v24 = v19.length()::JM,828:JM,781:JM,799
828 :: PRED :: IF :: Z :: if (v53 < v24) goto 64::CD,771:CD,776:CD,781:CD,823:CD,824:CD,837:JM,828:JM,799:JM,833
829 :: CALL :: call :: Ljava/lang/String :: v55 = v20.toString()::JM,833
833 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schemaObjectPrefix = v55::
837 :: EXPR :: assign :: null :: PHI v53 = #(0), v52::JM,781:JM,799:DD,823:DD,828
884 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.isSchemaCheckEnabled()::CE,885:CD,891
885 :: EXIT :: exit :: Z :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.isSchemaCheckEnabled()::JM,491
888 :: EXPR :: reference :: Z :: v3 = p0 $this .schemaCheckEnabled::DD,891
891 :: NORM :: compound :: Z :: return v3::CF,885
893 :: ENTR :: entry :: null :: org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.checkSchema()::CD,900:CD,904:CD,908:CD,916:CD,921:CD,925:CD,929:CD,944:CD,952:CD,964:CD,1077
897 :: EXPR :: reference :: Ljava/sql/Connection :: v3 = p0 $this .con::JM,944:JM,929:JM,900:JM,964:JM,935:JM,952:JM,939:JM,925
900 :: CALL :: call :: Ljava/sql/DatabaseMetaData :: v5 = v3.getMetaData()::JM,944:JM,929:JM,900:JM,964:JM,935:JM,952:JM,939:JM,925
904 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::JM,1077
905 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .schemaObjectPrefix::
908 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
916 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(NODE))::JM,1077
921 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,1077
925 :: CALL :: call :: Z :: v17 = v5.storesLowerCaseIdentifiers()::JM,944:JM,929:JM,964:JM,935:JM,952:JM,939:JM,925
929 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 52::CD,930:CD,935:CD,939:CD,1077:JM,944:JM,929:JM,964:JM,952:JM,925
930 :: CALL :: call :: Ljava/lang/String :: v24 = v15.toLowerCase()::JM,1077
935 :: CALL :: call :: Z :: v20 = v5.storesUpperCaseIdentifiers()::JM,944:JM,929:JM,964:JM,935:JM,952:JM,939:JM,925
939 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 70::CF,1077:CD,940
940 :: CALL :: call :: Ljava/lang/String :: v22 = v15.toUpperCase()::JM,1077
944 :: CALL :: call :: Ljava/sql/ResultSet :: v28 = v5.getTables(#(null), #(null), v25, #(null))::JM,944:JM,929:JM,964:JM,935:JM,952:JM,939:JM,925
952 :: CALL :: call :: Z :: v30 = v28.next()::JM,944:JM,964:JM,952
964 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 295::CD,965:CD,1004:CD,1005:CD,1017:CD,1021:CD,1051:CD,1078
965 :: CALL :: call :: Ljava/io/InputStream :: v35 = p0 $this .getSchemaDDL()::CL,2737
1004 :: NORM :: declaration :: Ljava/io/BufferedReader :: v36 = new java.io.BufferedReader::JM,1078:CF,1005
1005 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v37 = new java.io.InputStreamReader::
1014 :: EXPR :: reference :: Ljava/sql/Connection :: v40 = p0 $this .con::JM,1042:JM,1017
1017 :: CALL :: call :: Ljava/sql/Statement :: v42 = v40.createStatement()::JM,1042:JM,1017
1021 :: CALL :: call :: Ljava/lang/String :: v44 = v36.readLine()::JM,1078
