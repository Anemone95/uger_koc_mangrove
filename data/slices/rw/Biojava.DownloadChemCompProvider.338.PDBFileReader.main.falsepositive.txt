[50569]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.main(java.lang.String[])::JM,32497:JM,32561:JM,29570:JM,32547:JM,29558:JM,29574:JM,29562:JM,29578:JM,32555:JM,29566:JM,32511:JM,32575:CD,13:CD,25:CD,32:CD,36:CD,40:CD,210:CD,214
13 :: CALL :: call :: V :: v3.setPath(v7)::CL,27635
25 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v14 = v3.getStructureById(#(193D))::CL,27684
32 :: CALL :: call :: V :: v17.println(v14)::
36 :: CALL :: call :: Ljava/util/List :: v20 = v14.getCompounds()::JM,214:CL,27731
40 :: CALL :: call :: Ljava/util/Iterator :: v22 = v20.iterator()::JM,214
45 :: CALL :: call :: Ljava/lang/Object :: v27 = v22.next()::JM,214
50 :: CALL :: call :: Ljava/util/List :: v30 = v28.getChains()::JM,112:JM,102:JM,136:CL,27828
56 :: CALL :: call :: V :: v31.print(#(>Chains :))::
60 :: CALL :: call :: Ljava/util/Iterator :: v35 = v30.iterator()::JM,112:JM,102:JM,136
65 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,112:JM,102:JM,136
72 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
77 :: CALL :: call :: Ljava/lang/String :: v46 = valueOf(v44)::
85 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v42.append(#( ))::
90 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
94 :: CALL :: call :: V :: v41.print(v52)::
98 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,112:JM,102:JM,136
102 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 114::CD,65:CD,72:CD,77:CD,85:CD,90:CD,94:CD,98:JM,112:JM,102:JM,136
105 :: CALL :: call :: V :: v54.println()::
108 :: CALL :: call :: I :: v57 = v30.size()::JM,112:JM,102:JM,136
112 :: PRED :: IF :: Z :: if (v57 <= #(0)) goto 322::CD,115:CD,121:CD,125:CD,131:CD,136:CD,137:CD,141:CD,147:CD,151:CD,157:CD,161:CD,199:CD,203:CD,206:JM,214
115 :: CALL :: call :: Ljava/lang/Object :: v60 = v30.get(#(0))::JM,112:JM,102:JM,136
121 :: CALL :: call :: Ljava/lang/String :: v63 = v61.getAtomSequence()::CL,27876
125 :: CALL :: call :: V :: v58.println(v63)::
131 :: CALL :: call :: Ljava/lang/Object :: v67 = v30.get(#(0))::JM,112:JM,102:JM,136
136 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::
137 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getSeqResSequence()::CL,28004
141 :: CALL :: call :: V :: v65.println(v70)::
147 :: CALL :: call :: V :: v72.print(#(  Atom Ligands: ))::
151 :: CALL :: call :: Ljava/lang/Object :: v76 = v30.get(#(0))::JM,112:JM,102:JM,136
157 :: CALL :: call :: Ljava/util/List :: v79 = v77.getAtomLigands()::JM,203:CL,28150
161 :: CALL :: call :: Ljava/util/Iterator :: v81 = v79.iterator()::JM,203
166 :: CALL :: call :: Ljava/lang/Object :: v85 = v81.next()::JM,203
173 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
178 :: CALL :: call :: Ljava/lang/String :: v92 = valueOf(v90)::
186 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v88.append(#( ))::
191 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
195 :: CALL :: call :: V :: v87.print(v97)::
199 :: CALL :: call :: Z :: v83 = v81.hasNext()::JM,203
203 :: PRED :: IF :: Z :: if (v83 != #(0)) goto 261::CD,166:CD,173:CD,178:CD,186:CD,191:CD,195:CD,199:JM,203
206 :: CALL :: call :: V :: v100.println(#( ))::
210 :: CALL :: call :: Z :: v24 = v22.hasNext()::JM,214
214 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 75::CD,45:CD,50:CD,56:CD,60:CD,98:CD,102:CD,105:CD,108:CD,112:CD,210:JM,214
546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,549:CD,568
549 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
550 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
554 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
558 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
562 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
568 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
569 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
573 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
577 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
581 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,620:CD,655:CD,660:CD,664:CD,669:CD,686
620 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
655 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
660 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
664 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
669 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
686 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,847:CD,851:CD,853:CD,854:CD,895:CD,905:CD,906:CD,927:CD,937:CD,938:CD,1075
847 :: CALL :: call :: Ljava/lang/String :: v7 = getProperty(#(line.separator))::JM,851:JM,847
851 :: EXPR :: modify :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileParser.NEWLINE = v7::
853 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,854
854 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,895
855 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
859 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
863 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
867 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
871 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
875 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
879 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
883 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
887 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
891 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
895 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,895
905 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,906
906 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,927
907 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
911 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
915 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
919 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
923 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
927 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,927
937 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,938
938 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,1075
939 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
943 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
947 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
951 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
955 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
959 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
963 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
967 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
971 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
975 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
979 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
983 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
987 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
991 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
995 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
999 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
1003 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
1007 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
1011 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
1015 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
1019 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
1023 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
1027 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
1031 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
1035 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
1039 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
1043 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
1047 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
1051 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
1055 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
1059 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
1063 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
1067 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
1071 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
1075 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,1075
1265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,1268:CD,1274:CD,1276:CD,1282:CD,1284:CD,1290:CD,1292:CD,1298:CD,1300:CD,1306:CD,1308:CD,1309:CD,1315:CD,1321:CD,1327:CD,1333
1268 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,1274
1274 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
1276 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,1282
1282 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
1284 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,1290
1290 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
1292 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,1298
1298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
1300 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,1306
1306 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
1308 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
1309 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,1311
1311 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
1315 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,1317
1317 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
1321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,1323
1323 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
1327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,1329
1329 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
1333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,1335
1335 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
1384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,1387:CD,1393:CD,1395:CD,1401:CD,1403:CD,1409:CD,1411:CD,1412:CD,1418:CD,1424
1387 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1393
1393 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
1395 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1401
1401 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
1403 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1409
1409 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
1411 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
1412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,1414
1414 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1418 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,1420
1420 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,1426
1426 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,1465:CD,1480
1465 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1480 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
1495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,1498:CD,1504:CD,1506:CD,1512:CD,1514:CD,1520:CD,1522:CD,1528:CD,1530:CD,1536:CD,1538:CD,1544:CD,1546:CD,1552:CD,1554:CD,1560:CD,1562:CD,1568:CD,1570:CD,1576:CD,1578:CD,1584:CD,1586:CD,1592:CD,1594:CD,1600:CD,1602:CD,1603:CD,1609:CD,1615:CD,1621:CD,1627:CD,1633:CD,1639:CD,1645:CD,1651:CD,1657:CD,1663:CD,1669:CD,1675
1498 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1504
1504 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
1506 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1512
1512 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
1514 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1520
1520 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
1522 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1528
1528 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
1530 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1536
1536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
1538 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1544
1544 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
1546 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1552
1552 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
1554 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1560
1560 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
1562 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1568
1568 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
1570 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1576
1576 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
1578 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1584
1584 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
1586 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1592
1592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
1594 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,1600
1600 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
1602 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
1603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,1605
1605 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
1609 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,1611
1611 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
1615 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,1617
1617 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
1621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,1623
1623 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
1627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,1629
1629 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
1633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,1635
1635 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
1639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,1641
1641 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
1645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,1647
1647 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
1651 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,1653
1653 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
1657 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,1659
1659 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
1663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,1665
1665 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
1669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,1671
1671 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
1675 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,1677
1677 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
1874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,1884:CD,1892:CD,1896:CD,1904:CD,1908:CD,1916:CD,1920:CD,1928:CD,1932:CD,1940:CD,1944:CD,1952:CD,1956:CD,1964:CD,1968:CD,1976:CD,1980:CD,1988:CD,1992:CD,2000:CD,2004:CD,2012:CD,2016:CD,2024:CD,2028:CD,2036:CD,2040:CD,2048:CD,2052:CD,2060:CD,2064:CD,2072:CD,2076:CD,2084:CD,2088:CD,2096:CD,2100:CD,2108:CD,2112:CD,2120:CD,2124:CD,2132:CD,2136:CD,2144:CD,2148:CD,2156:CD,2160:CD,2168:CD,2172:CD,2180:CD,2184:CD,2192:CD,2196:CD,2202:CD,2208:CD,2257:CD,2286:CD,2287:CD,2295:CD,2299:CD,2307:CD,2311:CD,2319:CD,2323:CD,2331:CD,2335:CD,2343:CD,2347:CD,2355:CD,2359:CD,2367:CD,2371:CD,2379:CD,2383:CD,2391:CD,2395:CD,2403:CD,2407:CD,2415:CD,2419:CD,2427:CD,2431:CD,2439:CD,2443:CD,2451:CD,2455:CD,2463:CD,2467:CD,2475:CD,2479:CD,2487:CD,2491:CD,2499:CD,2503:CD,2511:CD,2515:CD,2523:CD,2527:CD,2535:CD,2539:CD,2547:CD,2551:CD,2559:CD,2563:CD,2571:CD,2575:CD,2583:CD,2587:CD,2593:CD,2603:CD,2612:CD,2621:CD,2627
1884 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
1892 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
1896 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
1904 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
1908 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
1916 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
1920 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
1928 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
1932 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
1940 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
1944 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
1952 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
1956 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
1964 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
1968 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
1976 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
1980 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
1988 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
1992 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
2000 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
2004 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
2012 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
2016 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
2024 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
2028 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
2036 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
2040 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
2048 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
2052 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
2060 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
2064 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
2072 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
2076 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
2084 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
2088 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
2096 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
2100 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
2108 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
2112 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
2120 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
2124 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
2132 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
2136 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
2144 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
2148 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
2156 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
2160 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
2168 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
2172 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
2180 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
2184 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
2192 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
2196 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
2202 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
2208 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,2257
2209 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
2213 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
2217 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
2221 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
2225 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
2229 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
2233 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
2237 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
2241 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
2245 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
2249 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
2253 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
2257 :: EXPR :: assign :: I :: v193 = v173.length::DD,2286
2259 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,2269
2265 :: CALL :: call :: I :: v197 = v194.length()::JM,2269
2269 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
2270 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
2275 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
2279 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
2285 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,2627
2286 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,2287:CD,2265:CD,2269:CD,2270:CD,2275:CD,2279:CD,2285:CD,2627
2287 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
2295 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
2299 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
2307 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
2311 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
2319 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
2323 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
2331 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
2335 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
2343 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
2347 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
2355 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
2359 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
2367 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
2371 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
2379 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
2383 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
2391 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
2395 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
2403 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
2407 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
2415 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
2419 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
2427 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
2431 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
2439 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
2443 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
2451 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
2455 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
2463 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
2467 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
2475 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
2479 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
2487 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
2491 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
2499 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
2503 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
2511 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
2515 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
2523 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
2527 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
2535 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
2539 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
2547 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
2551 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
2559 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
2563 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
2571 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
2575 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
2583 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
2587 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
2593 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
2603 :: CALL :: call :: Z :: v380 = v377.add(v378)::
2612 :: CALL :: call :: Z :: v384 = v381.add(v382)::
2621 :: CALL :: call :: Z :: v388 = v385.add(v386)::
2627 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,2285:DD,2286
2856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,2859:CD,2860:JM,28576:JM,28579:JM,28582:JM,28585:JM,28588:JM,28558:JM,28591:JM,28561:JM,28594:JM,28564:JM,28597:JM,28567:JM,28600:JM,28570:JM,28573:CD,2888:CD,2890:CD,2891:CD,2947:CD,2949:CD,2950:CD,3006:CD,3008:CD,3009:CD,3049:CD,3051:CD,3052:CD,3080:CD,3082:CD,3083:CD,3111:CD,3113:CD,3138:CD,3140:CD,3141:CD,3169:CD,3171:CD,3172:CD,3204:CD,3206:CD,3207:CD,3243:CD,3245:CD,3246:CD,3278:CD,3280:CD,3305:CD,3307:CD,3308:CD,3340:CD,3342:CD,3343:CD,3375:CD,3377:CD,3378:CD,3414:CD,3416:CD,3417:CD,3473:CD,3475:CD,3476:CD,3532:CD,3534:CD,3535:CD,3591:CD,3593:CD,3594:CD,3650:CD,3652:CD,3677:CD,3679:CD,3680:CD,3712:CD,3714:CD,3715:CD,3747:CD,3749:CD,3750:CD,3786:CD,3788:CD,3789:CD,3833:CD,3835:CD,3836:CD,3884:CD,3886:CD,3887:CD,3943:CD,3945:CD,3946:CD,4010:CD,4012:CD,4013:CD,4069:CD,4071:CD,4072:CD,4120:CD,4122:CD,4123:CD,4167:CD,4169:CD,4170:CD,4210:CD,4212:CD,4213:CD,4245:CD,4247:CD,4248:CD,4284:CD,4286:CD,4287:CD,4343:CD,4345:CD,4346:CD,4390:CD,4392:CD,4393:CD,4437:CD,4439:CD,4440:CD,4492:CD,4494:CD,4495:CD,4523:CD,4525:CD,4526:CD,4558:CD,4560:CD,4561:CD,4593:CD,4595:CD,4596:CD,4632:CD,4634:CD,4635:CD,4675:CD,4677:CD,4678:CD,4726:CD,4728:CD,4729:CD,4785:CD,4787:CD,4788:CD,4848:CD,4850:CD,4851:CD,4911:CD,4913:CD,4914:CD,4966:CD,4968:CD,4969:CD,5005:CD,5007:CD,5008:CD,5048:CD,5050:CD,5051:CD,5083:CD,5085:CD,5086:CD,5122:CD,5124:CD,5125:CD,5161:CD,5163:CD,5164:CD,5200:CD,5202:CD,5203:CD,5247:CD,5249:CD,5250:CD,5298:CD,5300:CD,5301:CD,5345:CD,5347:CD,5348:CD,5380:CD,5382:CD,5383:CD,5411:CD,5413:CD,5414:CD,5446:CD,5448:CD,5449:CD,5485:CD,5487:CD,5488:CD,5524:CD,5526:CD,5527:CD,5563:CD,5565:CD,5566:CD,5598:CD,5600:CD,5601:CD,5633:CD,5635:CD,5636:CD,5668:CD,5670:CD,5671:CD,5707:CD,5709:CD,5710:CD,5750:CD,5752:CD,5753:CD,5789:CD,5791:CD,5792:CD,5824:CD,5826:CD,5827:CD,5859:CD,5861:CD,5862:CD,5898:CD,5900:CD,5901:CD,5933:CD,5935:CD,5936:CD,5964:CD,5966:CD,5967:CD,6003:CD,6005:CD,6006:CD,6050:CD,6052:CD,6053:CD,6109:CD,6111:CD,6112:CD,6172:CD,6174:CD,6175:CD,6239:CD,6241:CD,6242:CD,6302:CD,6304:CD,6305:CD,6361:CD,6363:CD,6364:CD,6408:CD,6410:CD,6411:CD,6447:CD,6449:CD,6450:CD,6486:CD,6488:CD,6489:CD,6525:CD,6527:CD,6528:CD,6568:CD,6570:CD,6571:CD,6615:CD,6617:CD,6618:CD,6662:CD,6664:CD,6665:CD,6697:CD,6699:CD,6700:CD,6728:CD,6730:CD,6731:CD,6759:CD,6761:CD,6762:CD,6794:CD,6796:CD,6797:CD,6833:CD,6835:CD,6836:CD,6876:CD,6878:CD,6879:CD,6923:CD,6925:CD,6926:CD,6970:CD,6972:CD,6973:CD,7021:CD,7023:CD,7024:CD,7072:CD,7074:CD,7075:CD,7107:CD,7109:CD,7110:CD,7146:CD,7148:CD,7149:CD,7185:CD,7187:CD,7188:CD,7220:CD,7222:CD,7223:CD,7255:CD,7257:CD,7258:CD,7290:CD,7292:CD,7293:CD,7325:CD,7327:CD,7328:CD,7356:CD,7358:CD,7382:CD,7384:CD,7385:CD,7391:CD,7397:CD,7403:CD,7409:CD,7415:CD,7421:CD,7427:CD,7433:CD,7439:CD,7445:CD,7451:CD,7457:CD,7463:CD,7469:CD,7475:CD,7481:CD,7487:CD,7493:CD,7499:CD,7505:CD,7511:CD,7517:CD,7523:CD,7529:CD,7535:CD,7541:CD,7547:CD,7553:CD,7559:CD,7565:CD,7571:CD,7577:CD,7583:CD,7589:CD,7595:CD,7601:CD,7607:CD,7613:CD,7619:CD,7625:CD,7631:CD,7637:CD,7643:CD,7649:CD,7655:CD,7661:CD,7667:CD,7673:CD,7679:CD,7685:CD,7691:CD,7697:CD,7703:CD,7709:CD,7715:CD,7721:CD,7727:CD,7733:CD,7739:CD,7745:CD,7751:CD,7757:CD,7763:CD,7769:CD,7775:CD,7781:CD,7787:CD,7793:CD,7799:CD,7805:CD,7811:CD,7817:CD,7823:CD,7829:CD,7835:CD,7841:CD,7847:CD,7853:CD,7859:CD,7865:CD,7871:CD,7877:CD,7883:CD,7889:CD,7895:CD,7901:CD,7907:CD,7913:CD,7919:CD,7925:CD,7931:CD,7937:CD,7943:CD,7949:CD,7955:CD,7961:CD,7967:CD,7973:CD,7979:CD,7985:CD,7991:CD,7997:CD,8003:CD,8009:CD,8015:CD,8023:CD,8029:CD,8032:CD,8055:CD,8057
2859 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,2888:CF,2860
2860 :: NORM :: declaration :: [I :: v10 = new []::
2861 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
2888 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
2890 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,2947:CF,2891
2891 :: NORM :: declaration :: [I :: v24 = new []::
2892 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
2896 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
2900 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
2904 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
2908 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
2912 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
2916 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
2920 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
2947 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
2949 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,3006:CF,2950
2950 :: NORM :: declaration :: [I :: v41 = new []::
2951 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
2955 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
2959 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
2963 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
2967 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
2971 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
2975 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
2979 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
3006 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
3008 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,3049:CF,3009
3009 :: NORM :: declaration :: [I :: v51 = new []::
3010 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
3014 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
3018 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
3022 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
3049 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
3051 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,3080:CF,3052
3052 :: NORM :: declaration :: [I :: v58 = new []::
3053 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
3080 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
3082 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,3111:CF,3083
3083 :: NORM :: declaration :: [I :: v64 = new []::
3084 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
3111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
3113 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,3138
3138 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
3140 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,3169:CF,3141
3141 :: NORM :: declaration :: [I :: v83 = new []::
3142 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
3169 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
3171 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,3204:CF,3172
3172 :: NORM :: declaration :: [I :: v92 = new []::
3173 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
3177 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
3204 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
3206 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,3243:CF,3207
3207 :: NORM :: declaration :: [I :: v101 = new []::
3208 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
3212 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
3216 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
3243 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
3245 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,3278:CF,3246
3246 :: NORM :: declaration :: [I :: v111 = new []::
3247 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
3251 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
3278 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
3280 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,3305
3305 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
3307 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,3340:CF,3308
3308 :: NORM :: declaration :: [I :: v130 = new []::
3309 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
3313 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
3340 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
3342 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,3375:CF,3343
3343 :: NORM :: declaration :: [I :: v140 = new []::
3344 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
3348 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
3375 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
3377 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,3414:CF,3378
3378 :: NORM :: declaration :: [I :: v149 = new []::
3379 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
3383 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
3387 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
3414 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
3416 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,3473:CF,3417
3417 :: NORM :: declaration :: [I :: v159 = new []::
3418 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
3422 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
3426 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
3430 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
3434 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
3438 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
3442 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
3446 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
3473 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
3475 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,3532:CF,3476
3476 :: NORM :: declaration :: [I :: v170 = new []::
3477 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
3481 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
3485 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
3489 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
3493 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
3497 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
3501 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
3505 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
3532 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
3534 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,3591:CF,3535
3535 :: NORM :: declaration :: [I :: v181 = new []::
3536 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
3540 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
3544 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
3548 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
3552 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
3556 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
3560 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
3564 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
3591 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
3593 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,3650:CF,3594
3594 :: NORM :: declaration :: [I :: v192 = new []::
3595 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
3599 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
3603 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
3607 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
3611 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
3615 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
3619 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
3623 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
3650 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
3652 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,3677
3677 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
3679 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,3712:CF,3680
3680 :: NORM :: declaration :: [I :: v211 = new []::
3681 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
3685 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
3712 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
3714 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,3747:CF,3715
3715 :: NORM :: declaration :: [I :: v219 = new []::
3716 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
3720 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
3747 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
3749 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,3786:CF,3750
3750 :: NORM :: declaration :: [I :: v230 = new []::
3751 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
3755 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
3759 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
3786 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
3788 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,3833:CF,3789
3789 :: NORM :: declaration :: [I :: v239 = new []::
3790 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
3794 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
3798 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
3802 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
3806 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
3833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
3835 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,3884:CF,3836
3836 :: NORM :: declaration :: [I :: v248 = new []::
3837 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
3841 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
3845 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
3849 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
3853 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
3857 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
3884 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
3886 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,3943:CF,3887
3887 :: NORM :: declaration :: [I :: v258 = new []::
3888 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
3892 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
3896 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
3900 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
3904 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
3908 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
3912 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
3916 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
3943 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
3945 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,4010:CF,3946
3946 :: NORM :: declaration :: [I :: v269 = new []::
3947 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
3951 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
3955 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
3959 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
3963 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
3967 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
3971 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
3975 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
3979 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
3983 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
4010 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
4012 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,4069:CF,4013
4013 :: NORM :: declaration :: [I :: v276 = new []::
4014 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
4018 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
4022 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
4026 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
4030 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
4034 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
4038 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
4042 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
4069 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
4071 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,4120:CF,4072
4072 :: NORM :: declaration :: [I :: v285 = new []::
4073 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
4077 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
4081 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
4085 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
4089 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
4093 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
4120 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
4122 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,4167:CF,4123
4123 :: NORM :: declaration :: [I :: v295 = new []::
4124 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
4128 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
4132 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
4136 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
4140 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
4167 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
4169 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,4210:CF,4170
4170 :: NORM :: declaration :: [I :: v305 = new []::
4171 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
4175 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
4179 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
4183 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
4210 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
4212 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,4245:CF,4213
4213 :: NORM :: declaration :: [I :: v313 = new []::
4214 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
4218 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
4245 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
4247 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,4284:CF,4248
4248 :: NORM :: declaration :: [I :: v321 = new []::
4249 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
4253 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
4257 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
4284 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
4286 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,4343:CF,4287
4287 :: NORM :: declaration :: [I :: v329 = new []::
4288 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
4292 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
4296 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
4300 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
4304 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
4308 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
4312 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
4316 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
4343 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
4345 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,4390:CF,4346
4346 :: NORM :: declaration :: [I :: v338 = new []::
4347 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
4351 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
4355 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
4359 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
4363 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
4390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
4392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,4437:CF,4393
4393 :: NORM :: declaration :: [I :: v348 = new []::
4394 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
4398 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
4402 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
4406 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
4410 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
4437 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
4439 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,4492:CF,4440
4440 :: NORM :: declaration :: [I :: v355 = new []::
4441 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
4445 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
4449 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
4453 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
4457 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
4461 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
4465 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
4492 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
4494 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,4523:CF,4495
4495 :: NORM :: declaration :: [I :: v364 = new []::
4496 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
4523 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
4525 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,4558:CF,4526
4526 :: NORM :: declaration :: [I :: v374 = new []::
4527 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
4531 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
4558 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
4560 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,4593:CF,4561
4561 :: NORM :: declaration :: [I :: v382 = new []::
4562 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
4566 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
4593 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
4595 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,4632:CF,4596
4596 :: NORM :: declaration :: [I :: v391 = new []::
4597 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
4601 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
4605 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
4632 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
4634 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,4675:CF,4635
4635 :: NORM :: declaration :: [I :: v401 = new []::
4636 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
4640 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
4644 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
4648 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
4675 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
4677 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,4726:CF,4678
4678 :: NORM :: declaration :: [I :: v411 = new []::
4679 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
4683 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
4687 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
4691 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
4695 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
4699 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
4726 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
4728 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,4785:CF,4729
4729 :: NORM :: declaration :: [I :: v420 = new []::
4730 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
4734 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
4738 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
4742 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
4746 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
4750 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
4754 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
4758 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
4785 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
4787 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,4848:CF,4788
4788 :: NORM :: declaration :: [I :: v431 = new []::
4789 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
4793 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
4797 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
4801 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
4805 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
4809 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
4813 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
4817 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
4821 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
4848 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
4850 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,4911:CF,4851
4851 :: NORM :: declaration :: [I :: v440 = new []::
4852 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
4856 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
4860 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
4864 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
4868 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
4872 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
4876 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
4880 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
4884 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
4911 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
4913 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,4966:CF,4914
4914 :: NORM :: declaration :: [I :: v448 = new []::
4915 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
4919 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
4923 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
4927 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
4931 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
4935 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
4939 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
4966 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
4968 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,5005:CF,4969
4969 :: NORM :: declaration :: [I :: v456 = new []::
4970 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
4974 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
4978 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
5005 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
5007 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,5048:CF,5008
5008 :: NORM :: declaration :: [I :: v463 = new []::
5009 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
5013 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
5017 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
5021 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
5048 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
5050 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,5083:CF,5051
5051 :: NORM :: declaration :: [I :: v471 = new []::
5052 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
5056 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
5083 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
5085 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,5122:CF,5086
5086 :: NORM :: declaration :: [I :: v479 = new []::
5087 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
5091 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
5095 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
5122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
5124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,5161:CF,5125
5125 :: NORM :: declaration :: [I :: v490 = new []::
5126 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
5130 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
5134 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
5161 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
5163 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,5200:CF,5164
5164 :: NORM :: declaration :: [I :: v498 = new []::
5165 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
5169 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
5173 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
5200 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
5202 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,5247:CF,5203
5203 :: NORM :: declaration :: [I :: v507 = new []::
5204 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
5208 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
5212 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
5216 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
5220 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
5247 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
5249 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,5298:CF,5250
5250 :: NORM :: declaration :: [I :: v515 = new []::
5251 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
5255 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
5259 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
5263 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
5267 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
5271 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
5298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
5300 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,5345:CF,5301
5301 :: NORM :: declaration :: [I :: v524 = new []::
5302 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
5306 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
5310 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
5314 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
5318 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
5345 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
5347 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,5380:CF,5348
5348 :: NORM :: declaration :: [I :: v533 = new []::
5349 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
5353 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
5380 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
5382 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,5411:CF,5383
5383 :: NORM :: declaration :: [I :: v542 = new []::
5384 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
5411 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
5413 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,5446:CF,5414
5414 :: NORM :: declaration :: [I :: v549 = new []::
5415 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
5419 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
5446 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
5448 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,5485:CF,5449
5449 :: NORM :: declaration :: [I :: v557 = new []::
5450 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
5454 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
5458 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
5485 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
5487 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,5524:CF,5488
5488 :: NORM :: declaration :: [I :: v565 = new []::
5489 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
5493 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
5497 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
5524 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
5526 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,5563:CF,5527
5527 :: NORM :: declaration :: [I :: v572 = new []::
5528 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
5532 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
5536 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
5563 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
5565 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,5598:CF,5566
5566 :: NORM :: declaration :: [I :: v580 = new []::
5567 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
5571 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
5598 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
5600 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,5633:CF,5601
5601 :: NORM :: declaration :: [I :: v589 = new []::
5602 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
5606 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
5633 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
5635 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,5668:CF,5636
5636 :: NORM :: declaration :: [I :: v598 = new []::
5637 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
5641 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
5668 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
5670 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,5707:CF,5671
5671 :: NORM :: declaration :: [I :: v605 = new []::
5672 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
5676 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
5680 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
5707 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
5709 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,5750:CF,5710
5710 :: NORM :: declaration :: [I :: v614 = new []::
5711 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
5715 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
5719 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
5723 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
5750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
5752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,5789:CF,5753
5753 :: NORM :: declaration :: [I :: v621 = new []::
5754 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
5758 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
5762 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
5789 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
5791 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,5824:CF,5792
5792 :: NORM :: declaration :: [I :: v628 = new []::
5793 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
5797 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
5824 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
5826 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,5859:CF,5827
5827 :: NORM :: declaration :: [I :: v638 = new []::
5828 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
5832 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
5859 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
5861 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,5898:CF,5862
5862 :: NORM :: declaration :: [I :: v646 = new []::
5863 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
5867 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
5871 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
5898 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
5900 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,5933:CF,5901
5901 :: NORM :: declaration :: [I :: v654 = new []::
5902 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
5906 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
5933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
5935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,5964:CF,5936
5936 :: NORM :: declaration :: [I :: v662 = new []::
5937 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
5964 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
5966 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,6003:CF,5967
5967 :: NORM :: declaration :: [I :: v669 = new []::
5968 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
5972 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
5976 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
6003 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
6005 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,6050:CF,6006
6006 :: NORM :: declaration :: [I :: v677 = new []::
6007 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
6011 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
6015 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
6019 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
6023 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
6050 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
6052 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,6109:CF,6053
6053 :: NORM :: declaration :: [I :: v685 = new []::
6054 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
6058 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
6062 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
6066 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
6070 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
6074 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
6078 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
6082 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
6109 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
6111 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,6172:CF,6112
6112 :: NORM :: declaration :: [I :: v694 = new []::
6113 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
6117 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
6121 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
6125 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
6129 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
6133 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
6137 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
6141 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
6145 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
6172 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
6174 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,6239:CF,6175
6175 :: NORM :: declaration :: [I :: v701 = new []::
6176 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
6180 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
6184 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
6188 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
6192 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
6196 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
6200 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
6204 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
6208 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
6212 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
6239 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
6241 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,6302:CF,6242
6242 :: NORM :: declaration :: [I :: v707 = new []::
6243 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
6247 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
6251 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
6255 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
6259 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
6263 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
6267 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
6271 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
6275 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
6302 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
6304 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,6361:CF,6305
6305 :: NORM :: declaration :: [I :: v713 = new []::
6306 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
6310 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
6314 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
6318 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
6322 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
6326 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
6330 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
6334 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
6361 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
6363 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,6408:CF,6364
6364 :: NORM :: declaration :: [I :: v720 = new []::
6365 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
6369 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
6373 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
6377 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
6381 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
6408 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
6410 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,6447:CF,6411
6411 :: NORM :: declaration :: [I :: v727 = new []::
6412 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
6416 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
6420 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
6447 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
6449 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,6486:CF,6450
6450 :: NORM :: declaration :: [I :: v735 = new []::
6451 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
6455 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
6459 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
6486 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
6488 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,6525:CF,6489
6489 :: NORM :: declaration :: [I :: v742 = new []::
6490 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
6494 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
6498 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
6525 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
6527 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,6568:CF,6528
6528 :: NORM :: declaration :: [I :: v750 = new []::
6529 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
6533 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
6537 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
6541 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
6568 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
6570 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,6615:CF,6571
6571 :: NORM :: declaration :: [I :: v757 = new []::
6572 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
6576 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
6580 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
6584 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
6588 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
6615 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
6617 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,6662:CF,6618
6618 :: NORM :: declaration :: [I :: v764 = new []::
6619 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
6623 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
6627 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
6631 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
6635 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
6662 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
6664 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,6697:CF,6665
6665 :: NORM :: declaration :: [I :: v771 = new []::
6666 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
6670 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
6697 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
6699 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,6728:CF,6700
6700 :: NORM :: declaration :: [I :: v778 = new []::
6701 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
6728 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
6730 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,6759:CF,6731
6731 :: NORM :: declaration :: [I :: v787 = new []::
6732 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
6759 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
6761 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,6794:CF,6762
6762 :: NORM :: declaration :: [I :: v794 = new []::
6763 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
6767 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
6794 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
6796 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,6833:CF,6797
6797 :: NORM :: declaration :: [I :: v802 = new []::
6798 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
6802 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
6806 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
6833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
6835 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,6876:CF,6836
6836 :: NORM :: declaration :: [I :: v808 = new []::
6837 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
6841 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
6845 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
6849 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
6876 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
6878 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,6923:CF,6879
6879 :: NORM :: declaration :: [I :: v816 = new []::
6880 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
6884 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
6888 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
6892 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
6896 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
6923 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
6925 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,6970:CF,6926
6926 :: NORM :: declaration :: [I :: v823 = new []::
6927 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
6931 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
6935 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
6939 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
6943 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
6970 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
6972 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,7021:CF,6973
6973 :: NORM :: declaration :: [I :: v829 = new []::
6974 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
6978 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
6982 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
6986 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
6990 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
6994 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
7021 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
7023 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,7072:CF,7024
7024 :: NORM :: declaration :: [I :: v835 = new []::
7025 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
7029 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
7033 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
7037 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
7041 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
7045 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
7072 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
7074 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,7107:CF,7075
7075 :: NORM :: declaration :: [I :: v841 = new []::
7076 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
7080 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
7107 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
7109 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,7146:CF,7110
7110 :: NORM :: declaration :: [I :: v848 = new []::
7111 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
7115 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
7119 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
7146 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
7148 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,7185:CF,7149
7149 :: NORM :: declaration :: [I :: v854 = new []::
7150 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
7154 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
7158 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
7185 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
7187 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,7220:CF,7188
7188 :: NORM :: declaration :: [I :: v860 = new []::
7189 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
7193 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
7220 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
7222 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,7255:CF,7223
7223 :: NORM :: declaration :: [I :: v866 = new []::
7224 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
7228 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
7255 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
7257 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,7290:CF,7258
7258 :: NORM :: declaration :: [I :: v872 = new []::
7259 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
7263 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
7290 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
7292 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,7325:CF,7293
7293 :: NORM :: declaration :: [I :: v877 = new []::
7294 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
7298 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
7325 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
7327 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,7356:CF,7328
7328 :: NORM :: declaration :: [I :: v883 = new []::
7329 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
7356 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
7358 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,7382
7382 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
7384 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
7385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,7387
7387 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
7391 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,7393
7393 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
7397 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,7399
7399 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
7403 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,7405
7405 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
7409 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,7411
7411 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
7415 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,7417
7417 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
7421 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,7423
7423 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
7427 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,7429
7429 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
7433 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,7435
7435 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
7439 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,7441
7441 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
7445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,7447
7447 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
7451 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,7453
7453 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
7457 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,7459
7459 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
7463 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,7465
7465 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
7469 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,7471
7471 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
7475 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,7477
7477 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
7481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,7483
7483 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
7487 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,7489
7489 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
7493 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,7495
7495 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
7499 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,7501
7501 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
7505 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,7507
7507 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
7511 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,7513
7513 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
7517 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,7519
7519 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
7523 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,7525
7525 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
7529 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,7531
7531 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
7535 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,7537
7537 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
7541 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,7543
7543 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
7547 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,7549
7549 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
7553 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,7555
7555 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
7559 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,7561
7561 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
7565 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,7567
7567 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
7571 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,7573
7573 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
7577 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,7579
7579 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
7583 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,7585
7585 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
7589 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,7591
7591 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
7595 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,7597
7597 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
7601 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,7603
7603 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
7607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,7609
7609 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
7613 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,7615
7615 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
7619 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,7621
7621 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
7625 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,7627
7627 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
7631 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,7633
7633 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
7637 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,7639
7639 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
7643 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,7645
7645 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
7649 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,7651
7651 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
7655 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,7657
7657 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
7661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,7663
7663 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
7667 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,7669
7669 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
7673 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,7675
7675 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
7679 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,7681
7681 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
7685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,7687
7687 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
7691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,7693
7693 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
7697 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,7699
7699 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
7703 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,7705
7705 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
7709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,7711
7711 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
7715 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,7717
7717 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
7721 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,7723
7723 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
7727 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,7729
7729 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
7733 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,7735
7735 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
7739 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,7741
7741 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
7745 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,7747
7747 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
7751 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,7753
7753 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
7757 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,7759
7759 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
7763 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,7765
7765 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
7769 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,7771
7771 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
7775 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,7777
7777 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
7781 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,7783
7783 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
7787 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,7789
7789 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
7793 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,7795
7795 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
7799 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,7801
7801 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
7805 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,7807
7807 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
7811 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,7813
7813 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
7817 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,7819
7819 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
7823 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,7825
7825 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
7829 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,7831
7831 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
7835 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,7837
7837 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
7841 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,7843
7843 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
7847 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,7849
7849 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
7853 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,7855
7855 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
7859 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,7861
7861 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
7865 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,7867
7867 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
7871 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,7873
7873 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
7877 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,7879
7879 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
7883 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,7885
7885 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
7889 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,7891
7891 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
7895 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,7897
7897 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
7901 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,7903
7903 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
7907 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,7909
7909 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
7913 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,7915
7915 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
7919 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,7921
7921 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
7925 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,7927
7927 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
7931 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,7933
7933 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
7937 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,7939
7939 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
7943 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,7945
7945 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
7949 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,7951
7951 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
7955 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,7957
7957 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
7961 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,7963
7963 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
7967 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,7969
7969 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
7973 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,7975
7975 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
7979 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,7981
7981 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
7985 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,7987
7987 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
7991 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,7993
7993 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
7997 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,7999
7999 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
8003 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,8005
8005 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
8009 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,8011
8011 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
8015 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,8017
8017 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
8023 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
8029 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,8032:CL,28637
8032 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,8055
8048 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
8054 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,8057
8055 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,8048:CD,8054:CD,8057
8057 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,8054:DD,8055
11669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,11685:CD,11691
11685 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
11691 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,28664
11751 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,11761:CD,11769:CD,11776:CD,11783:CD,11790:CD,11797:CD,11804
11761 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
11769 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
11776 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
11783 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
11790 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
11797 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
11804 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
11838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,11841:CD,11842:JM,28855:JM,28858:CD,11853:CD,11855:CD,11856:CD,11867:CD,11869:CD,11870:CD,11881:CD,11883:CD,11884:CD,11895:CD,11897:CD,11898:CD,11909:CD,11911:CD,11912:CD,11923:CD,11925:CD,11926:CD,11937:CD,11939:CD,11940:CD,11951:CD,11953:CD,11954:CD,11960:CD,11966:CD,11972:CD,11978:CD,11984:CD,11990:CD,11996
11841 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11853
11842 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
11853 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
11855 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11867
11856 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
11867 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
11869 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11881
11870 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
11881 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
11883 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11895
11884 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
11895 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
11897 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11909
11898 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
11909 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
11911 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11923
11912 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
11923 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
11925 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11937
11926 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
11937 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
11939 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11951
11940 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
11951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
11953 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
11954 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,11956
11956 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
11960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,11962
11962 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
11966 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,11968
11968 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
11972 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,11974
11974 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
11978 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,11980
11980 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
11984 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,11986
11986 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
11990 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,11992
11992 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
11996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,11998
11998 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
17435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,28885:CD,17451:CD,17456
17451 :: NORM :: declaration :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = new org.biojava.nbio.core.util.SoftHashMap::DD,17456
17456 :: EXPR :: modify :: Lorg/biojava/nbio/core/util/SoftHashMap :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache = v7::
17509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,17512:CD,17515:JM,28966:JM,28969:CD,17526:CD,17528:CD,17531:CD,17542:CD,17544:CD,17545:CD,17555:CD,17557:CD,17558:CD,17564:CD,17570:CD,17578:CD,17591
17512 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,17526
17515 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,28893
17526 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
17528 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,17542
17531 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,28893
17542 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
17544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,17555
17545 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,28980
17555 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
17557 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
17558 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,17560
17560 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
17564 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,17566
17566 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
17570 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,17572
17572 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
17578 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,17591
17579 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
17583 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
17587 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
17591 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,17591
17637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,17640:JM,29069:CD,17647:CD,17649:CD,17656:CD,17658:CD,17665:CD,17667:CD,17674:CD,17676:CD,17683:CD,17685:CD,17692:CD,17694:CD,17701:CD,17703:CD,17710:CD,17712:CD,17719:CD,17721:CD,17728:CD,17730:CD,17737:CD,17739:CD,17740:CD,17746:CD,17752:CD,17758:CD,17764:CD,17770:CD,17776:CD,17782:CD,17788:CD,17794:CD,17800
17640 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,17647
17647 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
17649 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,17656
17656 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
17658 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,17665
17665 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
17667 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,17674
17674 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
17676 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,17683
17683 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
17685 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,17692
17692 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
17694 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,17701
17701 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
17703 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,17710
17710 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
17712 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,17719
17719 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
17721 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,17728
17728 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
17730 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,17737
17737 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
17739 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
17740 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,17742
17742 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
17746 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,17748
17748 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
17752 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,17754
17754 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
17758 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,17760
17760 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
17764 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,17766
17766 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
17770 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,17772
17772 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
17776 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,17778
17778 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
17782 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,17784
17784 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
17788 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,17790
17790 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
17794 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,17796
17796 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
17800 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,17802
17802 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
17899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,17902:JM,29092:JM,29095:JM,29098:CD,17911:CD,17913:CD,17922:CD,17924:CD,17933:CD,17935:CD,17944:CD,17946:CD,17955:CD,17957:CD,17966:CD,17968:CD,17977:CD,17979:CD,17988:CD,17990:CD,17999:CD,18001:CD,18010:CD,18012:CD,18021:CD,18023:CD,18024:CD,18030:CD,18036:CD,18042:CD,18048:CD,18054:CD,18060:CD,18066:CD,18072:CD,18078:CD,18084:CD,18092
17902 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17911
17911 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
17913 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17922
17922 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
17924 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17933
17933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
17935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17944
17944 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
17946 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17955
17955 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
17957 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17966
17966 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
17968 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17977
17977 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
17979 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17988
17988 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
17990 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,17999
17999 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
18001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,18010
18010 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
18012 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,18021
18021 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
18023 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
18024 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,18026
18026 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
18030 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,18032
18032 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
18036 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,18038
18038 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
18042 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,18044
18044 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
18048 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,18050
18050 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
18054 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,18056
18056 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
18060 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,18062
18062 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
18066 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,18068
18068 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
18072 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,18074
18074 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
18078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,18080
18080 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
18084 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,18086
18086 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
18092 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,29111
18253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,18256:JM,29172:CD,18263:CD,18265:CD,18272:CD,18274:CD,18281:CD,18283:CD,18290:CD,18292:CD,18299:CD,18301:CD,18308:CD,18310:CD,18317:CD,18319:CD,18326:CD,18328:CD,18335:CD,18337:CD,18344:CD,18346:CD,18353:CD,18355:CD,18356:CD,18362:CD,18368:CD,18374:CD,18380:CD,18386:CD,18392:CD,18398:CD,18404:CD,18410:CD,18416:CD,18424:CD,18430:CD,18435:CD,18441:CD,18447:CD,18452:CD,18458:CD,18464:CD,18469:CD,18475:CD,18481:CD,18488:CD,18495:CD,18500:CD,18506:CD,18507:CD,18510:CD,18518
18256 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18263
18263 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
18265 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18272
18272 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
18274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18281
18281 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
18283 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18290
18290 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
18292 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18299
18299 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
18301 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18308
18308 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
18310 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18317
18317 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
18319 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18326
18326 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
18328 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18335
18335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
18337 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18344
18344 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
18346 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18353
18353 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
18355 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
18356 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,18358
18358 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
18362 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,18364
18364 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
18368 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,18370
18370 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
18374 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,18376
18376 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
18380 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,18382
18382 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
18386 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,18388
18388 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
18392 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,18394
18394 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
18398 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,18400
18400 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
18404 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,18406
18406 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
18410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,18412
18412 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
18416 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,18418
18418 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
18424 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,18435
18430 :: CALL :: call :: Z :: v74 = v70.add(v72)::
18435 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,18435
18441 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,18452
18447 :: CALL :: call :: Z :: v81 = v77.add(v79)::
18452 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,18452
18458 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,18469
18464 :: CALL :: call :: Z :: v88 = v84.add(v86)::
18469 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,18469
18475 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::JM,18500
18481 :: CALL :: call :: Z :: v95 = v91.add(v93)::
18488 :: CALL :: call :: Z :: v98 = v91.add(v96)::
18495 :: CALL :: call :: Z :: v101 = v91.add(v99)::
18500 :: CALL :: call :: Ljava/util/Set :: v103 = unmodifiableSet(v91)::JM,18500
18506 :: NORM :: declaration :: Ljava/util/HashSet :: v104 = new java.util.HashSet::JM,18518
18507 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,18510:CL,29181
18510 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,18510
18518 :: CALL :: call :: Ljava/util/Set :: v111 = unmodifiableSet(v104)::JM,18518
18645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,18661:CD,18668:CD,18672:CD,18674:CD,18676:CD,18681:CD,18683:CD,18688:CD,18690:CD,18695:CD,18697
18661 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
18668 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,18672
18672 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
18674 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
18676 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
18681 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
18683 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
18688 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
18690 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
18695 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
18697 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
18720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,18723:CD,18729:CD,18731:CD,18737:CD,18739:CD,18740:CD,18746
18723 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,18729
18729 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
18731 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,18737
18737 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
18739 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
18740 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,18742
18742 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
18746 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,18748
18748 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
18861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,18864:JM,29335:JM,29338:CD,18872:CD,18874:CD,18884:CD,18886:CD,18896:CD,18898:CD,18908:CD,18910:CD,18920:CD,18922:CD,18932:CD,18934:CD,18944:CD,18946:CD,18956:CD,18958:CD,18968:CD,18970:CD,18980:CD,18982:CD,18992:CD,18994:CD,19004:CD,19006:CD,19016:CD,19018:CD,19028:CD,19030:CD,19040:CD,19042:CD,19052:CD,19054:CD,19064:CD,19066:CD,19076:CD,19078:CD,19088:CD,19090:CD,19100:CD,19102:CD,19112:CD,19114:CD,19124:CD,19126:CD,19136:CD,19138:CD,19148:CD,19150:CD,19160:CD,19162:CD,19172:CD,19174:CD,19184:CD,19186:CD,19196:CD,19198:CD,19206:CD,19208:CD,19216:CD,19218:CD,19219:CD,19225:CD,19231:CD,19237:CD,19243:CD,19249:CD,19255:CD,19261:CD,19267:CD,19273:CD,19279:CD,19285:CD,19291:CD,19297:CD,19303:CD,19309:CD,19315:CD,19321:CD,19327:CD,19333:CD,19339:CD,19345:CD,19351:CD,19357:CD,19363:CD,19369:CD,19375:CD,19381:CD,19387:CD,19393
18864 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18872
18872 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
18874 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18884
18884 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
18886 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18896
18896 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
18898 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18908
18908 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
18910 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18920
18920 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
18922 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18932
18932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
18934 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18944
18944 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
18946 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18956
18956 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
18958 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18968
18968 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
18970 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18980
18980 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
18982 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,18992
18992 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
18994 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19004
19004 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
19006 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19016
19016 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
19018 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19028
19028 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
19030 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19040
19040 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
19042 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19052
19052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
19054 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19064
19064 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
19066 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19076
19076 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
19078 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19088
19088 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
19090 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19100
19100 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
19102 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19112
19112 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
19114 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19124
19124 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
19126 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19136
19136 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
19138 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19148
19148 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
19150 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19160
19160 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
19162 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19172
19172 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
19174 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19184
19184 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
19186 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19196
19196 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
19198 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19206
19206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
19208 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,19216
19216 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
19218 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
19219 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,19221
19221 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
19225 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,19227
19227 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
19231 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,19233
19233 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
19237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,19239
19239 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
19243 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,19245
19245 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
19249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,19251
19251 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
19255 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,19257
19257 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
19261 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,19263
19263 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
19267 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,19269
19269 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
19273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,19275
19275 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
19279 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,19281
19281 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
19285 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,19287
19287 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
19291 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,19293
19293 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
19297 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,19299
19299 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
19303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,19305
19305 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
19309 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,19311
19311 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
19315 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,19317
19317 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
19321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,19323
19323 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
19327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,19329
19329 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
19333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,19335
19335 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
19339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,19341
19341 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
19345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,19347
19347 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
19351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,19353
19353 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
19357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,19359
19359 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
19363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,19365
19365 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
19369 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,19371
19371 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
19375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,19377
19377 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
19381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,19383
19383 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
19387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,19389
19389 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
19393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,19395
19395 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
25839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,25842:CD,25848:CD,25854:CD,25858:CD,25862:CD,25868:CD,25872:CD,25878:CD,25882:CD,25888:CD,25892:CD,25898:CD,25902:CD,25908:CD,25912:CD,25918:CD,25922:CD,25928:CD,25932:CD,25938:CD,25942:CD,25948:CD,25952:CD,25958:CD,25962:CD,25968:CD,25972:CD,25978:CD,25982:CD,25988:CD,25992:CD,25998:CD,26002:CD,26008:CD,26012:CD,26018:CD,26022:CD,26028:CD,26032:CD,26038:CD,26042:CD,26048:CD,26052:CD,26058:CD,26062:CD,26068:CD,26072:CD,26078:CD,26082:CD,26086:CD,26088:CD,26092:CD,26096:CD,26102:CD,26106:CD,26112:CD,26116:CD,26122:CD,26126:CD,26132:CD,26136:CD,26142:CD,26146:CD,26152:CD,26156:CD,26162:CD,26166:CD,26172:CD,26176:CD,26182:CD,26186:CD,26192:CD,26196:CD,26202:CD,26206:CD,26212:CD,26216:CD,26222:CD,26226:CD,26232:CD,26236:CD,26242:CD,26246:CD,26252:CD,26256:CD,26262:CD,26266:CD,26272:CD,26276:CD,26282:CD,26286:CD,26292:CD,26296:CD,26302:CD,26306:CD,26312:CD,26316:CD,26322:CD,26326:CD,26330:CD,26336:CD,26340:CD,26346:CD,26350:CD,26356:CD,26360:CD,26366:CD,26370:CD,26376:CD,26380:CD,26386:CD,26390:CD,26394:CD,26396:CD,26400:CD,26404:CD,26410:CD,26414:CD,26420:CD,26424:CD,26430:CD,26434:CD,26440:CD,26444:CD,26450:CD,26454:CD,26460:CD,26464:CD,26470:CD,26474:CD,26476:CD,26480:CD,26485:CD,26487:CD,26491
25842 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
25848 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
25854 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,26082:JM,26086:JM,26078
25858 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
25862 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
25868 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
25872 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
25878 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
25882 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
25888 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
25892 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
25898 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
25902 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
25908 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
25912 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
25918 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
25922 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
25928 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
25932 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
25938 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
25942 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
25948 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
25952 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
25958 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
25962 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
25968 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
25972 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
25978 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
25982 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
25988 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
25992 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
25998 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
26002 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
26008 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
26012 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
26018 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
26022 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
26028 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
26032 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
26038 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
26042 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
26048 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
26052 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
26058 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
26062 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
26068 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
26072 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
26078 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,26082:JM,26086:JM,26078
26082 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,26082:JM,26086
26086 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
26088 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,26312:JM,26316
26092 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
26096 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
26102 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
26106 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
26112 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
26116 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
26122 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
26126 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
26132 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
26136 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
26142 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
26146 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
26152 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
26156 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
26162 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
26166 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
26172 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
26176 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
26182 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
26186 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
26192 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
26196 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
26202 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
26206 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
26212 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
26216 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
26222 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
26226 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
26232 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
26236 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
26242 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
26246 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
26252 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
26256 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
26262 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
26266 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
26272 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
26276 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
26282 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
26286 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
26292 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
26296 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
26302 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
26306 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
26312 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,26312:JM,26316
26316 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,26316
26322 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,26386:JM,26390:JM,26394
26326 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
26330 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
26336 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
26340 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
26346 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
26350 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
26356 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
26360 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
26366 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
26370 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
26376 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
26380 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
26386 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,26386:JM,26390:JM,26394
26390 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,26390:JM,26394
26394 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
26396 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,26464:JM,26460
26400 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
26404 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
26410 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
26414 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
26420 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
26424 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
26430 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
26434 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
26440 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
26444 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
26450 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
26454 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
26460 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,26464:JM,26460
26464 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,26464
26470 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
26474 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
26476 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
26480 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
26485 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
26487 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
26491 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
27635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.setPath(java.lang.String)::CD,27640:CD,27641:CD,27652
27640 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::
27641 :: CALL :: call :: Ljava/lang/String :: v6 = expandUserHome(p1 $p )::CL,29597
27652 :: CALL :: call :: V :: p0 $this .initPaths()::CL,29662
27684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CE,27685:CD,27689:CD,27694:CD,27699
27685 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::
27689 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,29922
27694 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::JM,27699:CL,30010
27699 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,27685
27731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,27732:CD,27738:CD,27803
27732 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,214
27735 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,27738
27738 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,27742:CD,27746:CD,27752:CD,27762:CD,27795:CD,27799
27739 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,27746
27742 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,27746
27746 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,27752:CD,27762:CD,27795:CD,27799
27752 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,27756:CL,30137
27756 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
27759 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,27799
27762 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,27799
27767 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,27799
27772 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,27794:CL,27828
27776 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,27794
27781 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,27794
27786 :: CALL :: call :: V :: v29.setCompound(v20)::CL,30161
27790 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,27794
27794 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,27781:CD,27786:CD,27790:JM,27794:JM,27799
27795 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,27799
27799 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,27767:CD,27772:CD,27776:CD,27790:CD,27794:CD,27795:JM,27799
27800 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,27803
27803 :: NORM :: compound :: Ljava/util/List :: return v31::DD,27732
27828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,27829:CD,27835
27829 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,112:JM,102:JM,136:JM,27794
27832 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,27835
27835 :: NORM :: compound :: Ljava/util/List :: return v3::CF,27829
27854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,27855:CD,27861
27855 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,33722:JM,33732:JM,33796:JM,33823:JM,34021:JM,42965:JM,43002:JM,55938:JM,62936:JM,62996:JM,74631:JM,83490:JM,83573
27858 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,27861
27861 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,27855
27876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomSequence()::CD,27880:CD,27884:CD,27888:CD,27940:CD,27944:CD,27945
27880 :: CALL :: call :: Ljava/util/List :: v4 = p0 $this .getAtomGroups()::JM,27944:JM,27897:CL,30249
27884 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
27888 :: CALL :: call :: Ljava/util/Iterator :: v8 = v4.iterator()::JM,27944:JM,27897
27893 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,27944:JM,27897
27897 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
27898 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v16 = v14.getChemComp()::CL,30258
27908 :: CALL :: call :: Z :: v21 = v17.contains(v19)::JM,27913
27913 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 77::CD,27920:CD,27925:CD,27926:CD,27930:CD,27935:CD,27950
27920 :: CALL :: call :: Z :: v26 = v22.contains(v24)::JM,27925
27925 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 103::CD,27926:CD,27930:CD,27935:CD,27950:JM,27944:JM,27897
27926 :: CALL :: call :: Ljava/lang/String :: v28 = getOneLetterCode(v16)::JM,27930:JM,27950:CL,30343
27930 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 97::CF,27950:CD,27931
27931 :: CALL :: call :: Ljava/lang/String :: v32 = toString(#(88))::JM,27950
27935 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v5.append(v33)::
27940 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,27944:JM,27897
27944 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,27893:CD,27897:CD,27898:CD,27908:CD,27913:CD,27940:JM,27944
27945 :: CALL :: call :: Ljava/lang/String :: v37 = v5.toString()::
27950 :: EXPR :: assign :: null :: PHI v33 = v28, v32::
28004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResSequence()::CD,28008:CD,28015:CD,28098:CD,28102:CD,28103
28008 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
28012 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .seqResGroups::JM,28102:JM,28024
28015 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,28102:JM,28024
28020 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,28102:JM,28024
28024 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
28025 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v15 = v13.getChemComp()::JM,28029:CL,30258
28029 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 66::CD,28037:CD,28049:CD,28054
28037 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v3.append(#(88))::
28049 :: CALL :: call :: Z :: v27 = v23.contains(v25)::JM,28054
28054 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 100::CD,28061:CD,28066:CD,28067:CD,28071:CD,28087:CD,28108
28061 :: CALL :: call :: Z :: v32 = v28.contains(v30)::JM,28066
28066 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 149::CD,28067:CD,28071:CD,28087:CD,28093:CD,28108
28067 :: CALL :: call :: Ljava/lang/String :: v34 = getOneLetterCode(v15)::JM,28082:JM,28071:JM,28072:JM,28108:JM,28076:CL,30343
28071 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 131::CD,28072:CD,28076:CD,28083:CD,28108:JM,28082
28072 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,28082:JM,28072:JM,28108:JM,28076
28076 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 131::CD,28077:CD,28082:CD,28083:CD,28108:JM,28072:JM,28076
28077 :: CALL :: call :: Z :: v39 = v34.equals(#(?))::JM,28082:JM,28072:JM,28108:JM,28076
28082 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 139::CF,28108:CD,28083
28083 :: CALL :: call :: Ljava/lang/String :: v41 = toString(#(88))::JM,28108
28087 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
28093 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v3.append(#(88))::
28098 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,28102:JM,28024
28102 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,28020:CD,28024:CD,28025:CD,28029:CD,28098:JM,28102
28103 :: CALL :: call :: Ljava/lang/String :: v48 = v3.toString()::
28108 :: EXPR :: assign :: null :: PHI v42 = v34, v41::
28150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLigands()::CE,28151:CD,28154:CD,28161:CD,28190:CD,28194:CD,28195
28151 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomLigands()::JM,203
28154 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,28195
28158 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .groups::JM,28194:JM,28170
28161 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,28194:JM,28170
28166 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,28194:JM,28170
28170 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,28179
28171 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .seqResGroups::JM,28179
28174 :: CALL :: call :: Z :: v16 = v14.contains(v13)::JM,28179
28179 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CD,28180:CD,28184:JM,28194:JM,28170
28180 :: CALL :: call :: Z :: v18 = v13.isWater()::JM,28184:CL,30404
28184 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 62::CD,28185:JM,28194:JM,28170
28185 :: CALL :: call :: Z :: v20 = v3.add(v13)::
28190 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,28194:JM,28170
28194 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,28166:CD,28170:CD,28174:CD,28179:CD,28190:JM,28194:CF,28195
28195 :: NORM :: compound :: Ljava/util/List :: return v3::DD,28151
28213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,28214:CD,28220
28214 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,39313:JM,56203:JM,56501:JM,82719:JM,82895:JM,86769:JM,86823:JM,86770:JM,88711:JM,88697:JM,88634:JM,88635
28217 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,28220
28220 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,28214
28558 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
28561 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
28564 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
28567 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
28570 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
28573 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
28576 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
28579 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
28582 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
28585 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
28588 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
28591 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
28594 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
28597 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
28600 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
28637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,28638:CD,28640:CD,28642:CD,28643:CD,28651
28638 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,8032
28640 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,28642
28642 :: EXPR :: assign :: I :: v4 = v2.length::DD,28643
28643 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,28651
28651 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,28638
28664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,28668:CD,28672:CD,28677:CD,28687:CD,28691:CD,28698:CD,28703:CD,28707:CD,28712:CD,28720:CD,28726:CD,28731:CD,28735:CD,28740:CD,28748:CD,28751:CD,28757:CD,28761:CD,28803:CD,28807:CD,28809:CD,28810:CD,28811
28668 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,28677
28672 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,28677
28677 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,28687:CD,28684
28684 :: CALL :: call :: V :: exit(#(1))::
28687 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,28811
28691 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,28811:CL,31732
28698 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
28703 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
28707 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
28712 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
28720 :: CALL :: call :: V :: exit(#(1))::
28726 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
28731 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
28735 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
28740 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
28748 :: CALL :: call :: V :: exit(#(1))::
28751 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
28757 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,28770:JM,28807
28761 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,28770:JM,28807
28766 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,28770:JM,28807
28770 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,28786:JM,28790
28780 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
28786 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,28786:JM,28790
28790 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,28797:JM,28770:JM,28807
28797 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
28803 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,28770:JM,28807
28807 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,28766:CD,28770:CD,28780:CD,28786:CD,28790:CD,28803:JM,28807
28809 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
28810 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
28811 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,28751:JM,28770:JM,28807
28855 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
28858 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
28876 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
28885 :: CALL :: call :: V :: initPath()::CL,31754
28893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,28897:CD,28901:CD,28904:CD,28925:CD,28926:CD,28931
28897 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::JM,28926
28901 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,28904:CL,31783
28904 :: EXPR :: assign :: I :: v7 = v6.length::DD,28925
28913 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,28918
28918 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,28919:CF,28924
28919 :: CALL :: call :: Z :: v14 = v3.add(v9)::
28924 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,28931
28925 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,28913:CD,28918:CD,28924:CD,28931:JM,28926
28926 :: CALL :: call :: Ljava/util/Set :: v19 = unmodifiableSet(v3)::JM,28926
28931 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,28924:DD,28925
28966 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
28969 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
28980 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,28983:CD,28987:CD,28990:CD,29026:CD,29027:CD,29032
28983 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::JM,29027
28987 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,28990:CL,31783
28990 :: EXPR :: assign :: I :: v6 = v5.length::DD,29026
29002 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,29007
29007 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,29014:CD,29019:CF,29025
29014 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,29019
29019 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,29020:CF,29025
29020 :: CALL :: call :: Z :: v20 = v2.add(v8)::
29025 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,29032
29026 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,29002:CD,29007:CD,29025:CD,29032:JM,29027
29027 :: CALL :: call :: Ljava/util/Set :: v25 = unmodifiableSet(v2)::JM,29027
29032 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,29025:DD,29026
29069 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
29092 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
29095 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
29098 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
29111 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,29114:CD,29118:CD,29121:CD,29138:CD,29140
29114 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
29118 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,29121:CL,31819
29121 :: EXPR :: assign :: I :: v6 = v5.length::DD,29138
29131 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
29137 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,29140
29138 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,29131:CD,29137:CD,29140
29140 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,29137:DD,29138
29172 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
29181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,29182:CD,29184:CD,29186:CD,29187:CD,29195
29182 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,18510
29184 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,29186
29186 :: EXPR :: assign :: I :: v4 = v2.length::DD,29187
29187 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,29195
29195 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,29182
29335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
29338 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
29558 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,32602
29562 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,32602
29566 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,32602
29570 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,32602
29574 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,32602
29578 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,32602
29597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,29598:CD,29601:CD,29606:CD,29608:CD,29613:CD,29617:CD,29622:CD,29650:CD,29651
29598 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,32575
29601 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,29622
29606 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,29622
29608 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,29622
29613 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,29622
29617 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,29651:JM,29622
29622 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,29651:CF,29623:CD,29628:CD,29636:CD,29641:CD,29646
29623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,29651
29628 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
29636 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,29651:JM,29622
29641 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,29651
29646 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,29651
29650 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,29598
29651 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,29650
29662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,29666:CD,29670:CD,29674:CD,29695:CD,29696:CD,29697:CD,29718:CD,29719:CD,29720:CD,29727:CD,29758:CD,29759:CD,29784:CD,29785:CD,29787:CD,29788:CD,29789:CD,29790
29666 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,29758:JM,29695:CL,32619
29670 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,29718:JM,29784:CL,32627
29674 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
29680 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
29685 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
29689 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
29694 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,29787
29695 :: EXPR :: assign :: I :: v11 = v4.length::CF,29696
29696 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,29697:CD,29680:CD,29689:CD,29694:CD,29695:CD,29787
29697 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
29703 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
29708 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
29712 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
29717 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,29788
29718 :: EXPR :: assign :: I :: v23 = v6.length::CF,29719
29719 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,29703:CD,29712:CD,29717:CD,29718:CD,29788
29720 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
29727 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
29734 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,29737
29737 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
29741 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,29754
29742 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
29745 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
29754 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
29757 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,29789
29758 :: EXPR :: assign :: I :: v36 = v4.length::CF,29759
29759 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,29741:CD,29757:CD,29758:CD,29789
29760 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,29763
29763 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
29767 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,29780
29768 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
29771 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
29780 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
29783 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,29790
29784 :: EXPR :: assign :: I :: v44 = v6.length::CF,29785
29785 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,29767:CD,29783:CD,29784:CD,29790
29787 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,29694:DD,29696:CF,29695
29788 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,29717:DD,29719:CF,29718
29789 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,29757:DD,29759:CF,29758
29790 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,29783:DD,29785:CF,29784
29922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,29932:CD,29933:CD,29938:CD,29943:CD,29952:CD,29957:CD,29962:CD,29963:CD,29968:CD,29973:CD,29978
29932 :: NORM :: declaration :: Ljava/io/IOException :: v28 = new java.io.IOException::
29933 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
29938 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
29943 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
29952 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,32635
29957 :: CALL :: call :: Z :: v10 = v8.exists()::
29962 :: NORM :: declaration :: Ljava/io/IOException :: v16 = new java.io.IOException::
29963 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
29968 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
29973 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
29978 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
30010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::CE,30011:CD,30015:JM,32960:JM,32995:JM,33059:JM,33126:JM,32967:JM,37288:JM,37321:JM,33066:JM,32974:JM,37296:JM,37328:JM,32946:JM,33076:JM,32981:JM,33045:JM,37304:JM,32953:JM,33018:JM,32988:JM,33052:CD,30027:CD,30032
30011 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,27699
30015 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/PDBFileParser :: v4 = new org.biojava.nbio.structure.io.PDBFileParser::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
30027 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:JM,30032:CL,33245
30032 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v10::DD,30011
30137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,30138:CD,30141:CD,30145:CD,30149:CD,30153
30138 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,27756
30141 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,33316
30145 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,30153:CL,34363
30149 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,34440
30153 :: NORM :: compound :: Ljava/util/List :: return v6::DD,30138
30161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,30166
30166 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
30249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,30250:CD,30256
30250 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,27944:JM,27897:JM,38492:JM,38287:JM,38245:JM,62759:JM,71042:JM,71115:JM,76548:JM,76665:JM,76811:JM,83752
30253 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,30256
30256 :: NORM :: compound :: Ljava/util/List :: return v3::CF,30250
30258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,30259:CD,30265:CD,30306:JM,56245
30259 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,28029:JM,38353:JM,56209
30262 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,30265
30265 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,30269:CD,30279
30269 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,30273:CL,34616
30273 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
30276 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,30279
30279 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,30282:CD,30290:CD,30295
30282 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
30287 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
30290 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
30295 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
30303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,30306
30306 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,30259
30318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,30319:CD,30325
30319 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,87860:JM,87848:JM,87851:JM,87868
30322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,30325
30325 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,30319
30343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getOneLetterCode(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,30344:CD,30347:CD,30351
30344 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getOneLetterCode(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,27930:JM,27950:JM,28082:JM,28071:JM,28072:JM,28108:JM,28076
30347 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getOne_letter_code()::JM,30369:JM,30357:JM,30375:JM,30363:JM,30381:JM,30351:CL,34811
30351 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 28::CD,30352:CD,30357:CD,30364:CD,30368:JM,30369:JM,30375:JM,30363:JM,30381
30352 :: CALL :: call :: Z :: v8 = v4.equals(#(X))::JM,30369:JM,30357:JM,30375:JM,30363:JM,30381
30357 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 28::CD,30358:CD,30363:CD,30364:CD,30368:CD,30381:JM,30369:JM,30357:JM,30375
30358 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,30369:JM,30357:JM,30375:JM,30363:JM,30381
30363 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 55::CF,30381:CD,30364:CD,30368:CD,30380
30364 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $cc .getMon_nstd_parent_comp_id()::JM,30368:CL,34820
30368 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 39::CD,30369:CD,30370:CD,30374
30369 :: NORM :: compound :: Ljava/lang/String :: return v4::DD,30344
30370 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v16 = getChemComp(v14)::JM,30374:CL,34616
30374 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 50::CD,30375:CD,30376:CD,30380:CD,30381
30375 :: NORM :: compound :: Ljava/lang/String :: return v4::DD,30344
30376 :: CALL :: call :: Ljava/lang/String :: v18 = v16.getOne_letter_code()::JM,30381:CL,34811
30380 :: NORM :: compound :: Ljava/lang/String :: return v19::DD,30344
30381 :: EXPR :: assign :: null :: PHI v19 = v4, v18::CF,30380
30404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,30405:CD,30408:CD,30413:CD,30418
30405 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,28184:JM,38325:JM,63395:JM,82672
30408 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,30418
30410 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,30418
30413 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,30418
30418 :: NORM :: compound :: Z :: return v6::CF,30405
30652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,30653:CD,30656:CD,30660:CD,30669:CD,30670:CD,30674:CD,30683:CD,30684:CD,30688:CD,30697:CD,30698:CD,30702:CD,30711:CD,30712:CD,30716:CD,30725:CD,30726:CD,30730:CD,30739:CD,30740:CD,30741:CD,30742:CD,30743:CD,30744:CD,30745:CD,30746
30653 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
30656 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,30669
30657 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,30660
30660 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,30665:CD,30741
30662 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,30741
30665 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,30741
30669 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,30670
30670 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,30683
30671 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,30674
30674 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,30679:CD,30742
30676 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,30742
30679 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,30742
30683 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,30684
30684 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,30697
30685 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,30688
30688 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,30693:CD,30743
30690 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,30743
30693 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,30743
30697 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,30698
30698 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,30711
30699 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,30702
30702 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,30707:CD,30744
30704 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,30744
30707 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,30744
30711 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,30712
30712 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,30725
30713 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,30716
30716 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,30721:CD,30745
30718 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,30745
30721 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,30745
30725 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,30726
30726 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,30739
30727 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,30730
30730 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,30735:CD,30746
30732 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,30746
30735 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,30746
30739 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,30740
30740 :: NORM :: compound :: I :: return v48::CF,30653
30741 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,30669
30742 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,30683
30743 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,30697
30744 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,30711
30745 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,30725
30746 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,30739
30794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,30795:CD,30798:CD,30802:CD,30811:CD,30812:CD,30816:CD,30825:CD,30826:CD,30830:CD,30839:CD,30840:CD,30841:CD,30842:CD,30843
30795 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::
30798 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,30811
30799 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,30802
30802 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,30807:CD,30841
30804 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,30841
30807 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,30841
30811 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,30812
30812 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,30825
30813 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,30816
30816 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,30821:CD,30842
30818 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,30842
30821 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,30842
30825 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,30826
30826 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,30839
30827 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,30830
30830 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,30835:CD,30843
30832 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,30843
30835 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,30843
30839 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,30840
30840 :: NORM :: compound :: I :: return v27::CF,30795
30841 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,30811
30842 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,30825
30843 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,30839
30953 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,30954:CD,30957:CD,30961:CD,30970:CD,30971:CD,30975:CD,30984:CD,30985:CD,30986:CD,30987
30954 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
30957 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,30970
30958 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,30961
30961 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,30965:CD,30986
30962 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,30986
30965 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,30986
30970 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,30971
30971 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,30984
30972 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,30975
30975 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,30979:CD,30987
30976 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,30987
30979 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,30987
30984 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,30985
30985 :: NORM :: compound :: I :: return v20::CF,30954
30986 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,30970
30987 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,30984
31005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,31006:CD,31010:JM,31024:JM,31012:JM,31014:JM,31018:JM,31022
31006 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,43236
31010 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,31011:CD,31012
31011 :: NORM :: compound :: Z :: return #(1)::CF,31006
31012 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,31013:CD,31014:CD,31018:CD,31022:JM,31024:JM,31010:JM,31012
31013 :: NORM :: compound :: Z :: return #(0)::CF,31006
31014 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,31024:JM,31010:JM,31012:JM,31014:JM,31018:JM,31022
31018 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,31024:JM,31010:JM,31014:JM,31018:JM,31022
31022 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,31023:CD,31024:CD,31028
31023 :: NORM :: compound :: Z :: return #(0)::CF,31006
31024 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
31025 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,31028
31028 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,31032:CD,31040:CD,31045
31029 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,31032
31032 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,31033:CD,31050
31033 :: NORM :: compound :: Z :: return #(0)::CF,31006
31034 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,31045
31037 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,31045
31040 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,31045
31045 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,31046:CD,31050
31046 :: NORM :: compound :: Z :: return #(0)::CF,31006
31047 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,31050
31050 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,31054:CD,31062:CD,31067
31051 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,31054
31054 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,31055:CD,31072
31055 :: NORM :: compound :: Z :: return #(0)::CF,31006
31056 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,31067
31059 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,31067
31062 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,31067
31067 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,31068:CD,31072
31068 :: NORM :: compound :: Z :: return #(0)::CF,31006
31069 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,31072
31072 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,31076:CD,31084:CD,31089
31073 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,31076
31076 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,31077:CD,31091
31077 :: NORM :: compound :: Z :: return #(0)::CF,31006
31078 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,31089
31081 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,31089
31084 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,31089
31089 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,31090:CD,31091
31090 :: NORM :: compound :: Z :: return #(0)::CF,31006
31091 :: NORM :: compound :: Z :: return #(1)::CF,31006
31131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,31132:CD,31136:JM,31138:JM,31142:JM,31146:JM,31148
31132 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
31136 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,31137:CD,31138:CD,31142:CD,31146:JM,31136:JM,31148
31137 :: NORM :: compound :: Z :: return #(0)::CF,31132
31138 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,31136:JM,31138:JM,31142:JM,31146:JM,31148
31142 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,31136:JM,31138:JM,31142:JM,31146:JM,31148
31146 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,31147:CD,31148:CD,31152
31147 :: NORM :: compound :: Z :: return #(0)::CF,31132
31148 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
31149 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,31152
31152 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,31156:CD,31164:CD,31169
31153 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,31156
31156 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,31170:CD,31174:CD,31193:CD,31194
31158 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,31169
31161 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,31169
31164 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,31169
31169 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,31170:CD,31174:CD,31193:CD,31194
31170 :: NORM :: compound :: Z :: return #(0)::CF,31132
31171 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,31174
31174 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,31178:CD,31186:CD,31191
31175 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,31178
31178 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,31194
31180 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,31191
31183 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,31191
31186 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,31191
31191 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,31194
31193 :: NORM :: compound :: Z :: return v24::CF,31132
31194 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,31193
31336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,31337:CD,31341:JM,31345:JM,31349:JM,31353:JM,31355:JM,31343
31337 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
31341 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,31342:CD,31343
31342 :: NORM :: compound :: Z :: return #(1)::CF,31337
31343 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,31344:CD,31345:CD,31349:CD,31353:JM,31355:JM,31341:JM,31343
31344 :: NORM :: compound :: Z :: return #(0)::CF,31337
31345 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,31345:JM,31349:JM,31353:JM,31355:JM,31341:JM,31343
31349 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,31345:JM,31349:JM,31353:JM,31355:JM,31341
31353 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,31354:CD,31355:CD,31359
31354 :: NORM :: compound :: Z :: return #(0)::CF,31337
31355 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
31356 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,31359
31359 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,31363:CD,31371:CD,31376
31360 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,31363
31363 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,31364:CD,31381
31364 :: NORM :: compound :: Z :: return #(0)::CF,31337
31365 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,31376
31368 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,31376
31371 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,31376
31376 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,31377:CD,31381
31377 :: NORM :: compound :: Z :: return #(0)::CF,31337
31378 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,31381
31381 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,31385:CD,31393:CD,31398
31382 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,31385
31385 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,31386:CD,31403
31386 :: NORM :: compound :: Z :: return #(0)::CF,31337
31387 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,31398
31390 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,31398
31393 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,31398
31398 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,31399:CD,31403
31399 :: NORM :: compound :: Z :: return #(0)::CF,31337
31400 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,31403
31403 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,31407:CD,31415:CD,31420
31404 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,31407
31407 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,31408:CD,31425
31408 :: NORM :: compound :: Z :: return #(0)::CF,31337
31409 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,31420
31412 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,31420
31415 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,31420
31420 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,31421:CD,31425
31421 :: NORM :: compound :: Z :: return #(0)::CF,31337
31422 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,31425
31425 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,31429:CD,31437:CD,31442
31426 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,31429
31429 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,31430:CD,31447
31430 :: NORM :: compound :: Z :: return #(0)::CF,31337
31431 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,31442
31434 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,31442
31437 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,31442
31442 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,31443:CD,31447
31443 :: NORM :: compound :: Z :: return #(0)::CF,31337
31444 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,31447
31447 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,31451:CD,31459:CD,31464
31448 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,31451
31451 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,31452:CD,31469
31452 :: NORM :: compound :: Z :: return #(0)::CF,31337
31453 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,31464
31456 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,31464
31459 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,31464
31464 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,31465:CD,31469
31465 :: NORM :: compound :: Z :: return #(0)::CF,31337
31466 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,31469
31469 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,31473:CD,31481:CD,31486
31470 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,31473
31473 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,31474:CD,31488
31474 :: NORM :: compound :: Z :: return #(0)::CF,31337
31475 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,31486
31478 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,31486
31481 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,31486
31486 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,31487:CD,31488
31487 :: NORM :: compound :: Z :: return #(0)::CF,31337
31488 :: NORM :: compound :: Z :: return #(1)::CF,31337
31732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,31733:CD,31736:CD,31740:CD,31744:CD,31748
31733 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,28811
31736 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,35772
31740 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,31744:JM,31748:CL,35830
31744 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,31744:JM,31748
31748 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,31733
31754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,31757:CD,31759
31757 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,31759
31759 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,35896:JM,35903:CD,31764:CD,31765:CD,31773
31764 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,31773
31765 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,35925
31773 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
31783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,31784:CD,31786:CD,31788:CD,31789:CD,31797
31784 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,28904:JM,28990
31786 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,31788
31788 :: EXPR :: assign :: I :: v4 = v2.length::DD,31789
31789 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,31797
31797 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,31784
31819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,31820:CD,31822:CD,31824:CD,31825:CD,31833
31820 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,29121
31822 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,31824
31824 :: EXPR :: assign :: I :: v4 = v2.length::DD,31825
31825 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,31833
31833 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,31820
32497 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,32511
32511 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,35896:JM,35903:CD,32516:CD,32532:CD,32575
32516 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,32575:CL,36498
32532 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,32575:CL,29597
32547 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,32511
32555 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,36507
32561 :: CALL :: call :: V :: p0 $this .initPaths()::CL,29662
32575 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,32547:JM,32511
32602 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,32610
32607 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
32610 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
32619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,32620:CD,32623:CD,32625
32620 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,29758:JM,29695
32623 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,32625
32625 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,32620
32627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,32628:CD,32631:CD,32633
32628 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,29718:JM,29784
32631 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,32633
32633 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,32628
32635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,32645:CD,32646:CD,32651:CD,32656:CD,32665:CD,32670:CD,32676:CD,32684:CD,32686:CD,32700
32645 :: NORM :: declaration :: Ljava/io/IOException :: v68 = new java.io.IOException::
32646 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
32651 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
32656 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
32665 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,32711:JM,32746:CL,36604
32670 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,36816
32673 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
32676 :: CALL :: call :: I :: v13 = v11.ordinal()::
32680 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,32684
32684 :: PRED :: IF :: null :: switch v14::CD,32711:CD,32746:CD,32768:CD,32770
32686 :: NORM :: declaration :: Ljava/io/IOException :: v59 = new java.io.IOException::
32700 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
32711 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,32716:CD,32720:CD,32768:CD,32770
32716 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,32720:CL,36932
32720 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,32721:CD,32725:CD,32727:CD,32728
32721 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,32727
32725 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,32727
32727 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,32728
32728 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,32768:CD,32770
32746 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,32747:CD,32751:CD,32753:CD,32754:CD,32768:CD,32770
32747 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,32753
32751 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,32753
32753 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,32754
32754 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,32768:CD,32770
32765 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,32770
32768 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,32770
32770 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,32771:CD,32779:CD,32791:CD,32793
32771 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,36971
32779 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,37006
32788 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,32793
32791 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,32793
32793 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,32794:CD,32798:CD,32800:CD,32816
32794 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,32800:CL,37217
32798 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,32800
32800 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,32804:CD,32816
32804 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,37006
32816 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,37006
32946 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,32950
32950 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v6::
32953 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
32960 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,32964
32964 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compndLines = v10::
32967 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,32971
32971 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sourceLines = v12::
32974 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,32978
32978 :: EXPR :: modify :: Ljava/util/List :: p0 $this .journalLines = v14::
32981 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
32988 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,32992
32992 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .siteToResidueMap = v18::
32995 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
33015 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = #(null)::
33018 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,33022
33022 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v25::
33025 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
33028 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
33045 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
33052 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,33056
33056 :: EXPR :: modify :: Ljava/util/List :: p0 $this .helixList = v33::
33059 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,33063
33063 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strandList = v35::
33066 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,33070
33070 :: EXPR :: modify :: Ljava/util/List :: p0 $this .turnList = v37::
33076 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
33126 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,33130
33130 :: EXPR :: modify :: Ljava/util/List :: p0 $this .linkRecords = v51::
33245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CE,33246:CD,33250:CD,33255:CD,33260:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
33246 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::JM,30032
33250 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,37704:JM,43208:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,37855:JM,43615:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,37885:JM,43517:JM,43647:JM,44287:CL,37382
33255 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:JM,33260:CL,37412
33260 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,33246
33316 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,33320:CD,33324:CD,33369:CD,33373:CD,33377:CD,33378:CD,33382:CD,33985:CD,33989:CD,33990:CD,34056:CD,34060:CD,34062
33320 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,33989:JM,33391:JM,33984:JM,33405:JM,33978:JM,34060
33324 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
33332 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,38191
33337 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,33341:CL,38208
33341 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,33345:CD,33350:CD,33356:CD,33360
33345 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,38191
33350 :: CALL :: call :: Z :: v22 = v5.add(v20)::
33356 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
33360 :: CALL :: call :: Z :: v26 = v3.add(v24)::
33365 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,34062
33369 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,33377:CL,38259
33373 :: CALL :: call :: I :: v12 = v10.size()::JM,33377
33377 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,33378:CD,33332:CD,33337:CD,33341:CD,33365:CD,33369:CD,33373:CD,34062
33378 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,33722:JM,33732:JM,33796:JM,33823:JM,33978:JM,34021
33382 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,33989:JM,33391
33387 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,33989:JM,33391
33391 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,33410
33392 :: CALL :: call :: I :: v40 = v38.intValue()::JM,33410
33396 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,33984:JM,33405
33401 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,33984:JM,33405
33405 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,33410
33406 :: CALL :: call :: I :: v49 = v47.intValue()::JM,33410
33410 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,33415:CD,33423:CD,33428:CD,33432:CD,33436:CD,33440:CD,33446:CD,33450:CD,33456:CD,33461:CD,33980:CD,33984
33415 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,38191
33423 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,38191
33428 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
33432 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
33436 :: CALL :: call :: Ljava/util/List :: v61 = v52.getAtomGroups()::JM,38492:JM,38287:CL,30249
33440 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::JM,38492:JM,38287:JM,38412:CL,38271
33446 :: CALL :: call :: Ljava/util/List :: v65 = v55.getAtomGroups()::JM,38492:JM,38287:CL,30249
33450 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::JM,38492:JM,38287:JM,38412:CL,38271
33456 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,33461:CL,38602
33461 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,33462:CD,33467:CD,33493:CD,33498
33462 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,33467:CL,38602
33467 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,33468:CD,33473:CD,33478:CD,33482:CD,33486:CD,33493:CD,33498:CD,33574:CD,33578:CD,33582:CD,33586:CD,33590:CD,33591:CD,33595:CD,33596:CD,33597:CD,33598:CD,33599:CD,33600:CD,33601:CD,33602:CD,33603:CD,33624:CD,33632:CD,33642:CD,33650:CD,33660:CD,33668:CD,33684:CD,33689:CD,33694:CD,33699:CD,33707:CD,33708:CD,33891:CD,33892:CD,33970:CD,33974:CD,33978:CD,34063:CD,34064:CD,34065
33468 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,33478:JM,34063:CL,38618
33473 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,34064:JM,33482:CL,38618
33478 :: CALL :: call :: I :: v78 = v74.getLength()::JM,33478:JM,34063
33482 :: CALL :: call :: I :: v80 = v76.getLength()::JM,34064:JM,33482
33486 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,34065:CL,38643
33493 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,33498:CL,38683
33498 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,33499:CD,33504:CD,33530:CD,33535
33499 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,33504:CL,38683
33504 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,33505:CD,33510:CD,33515:CD,33519:CD,33523:CD,33530:CD,33535:CD,33574:CD,33578:CD,33582:CD,33586:CD,33590:CD,33591:CD,33595:CD,33596:CD,33597:CD,33598:CD,33599:CD,33600:CD,33601:CD,33602:CD,33603:CD,33624:CD,33632:CD,33642:CD,33650:CD,33660:CD,33668:CD,33684:CD,33689:CD,33694:CD,33699:CD,33707:CD,33708:CD,33891:CD,33892:CD,33970:CD,33974:CD,33978:CD,34063:CD,34064:CD,34065
33505 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,33515:JM,34063:CL,38699
33510 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,34064:JM,33519:CL,38699
33515 :: CALL :: call :: I :: v92 = v88.getLength()::JM,33515:JM,34063
33519 :: CALL :: call :: I :: v94 = v90.getLength()::JM,34064:JM,33519
33523 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,34065:CL,38724
33530 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,33535:CL,38764
33535 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,33536:CD,33541:CD,33980:CD,33984
33536 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,33541:CL,38764
33541 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,33542:CD,33547:CD,33552:CD,33556:CD,33560:CD,33574:CD,33578:CD,33582:CD,33586:CD,33590:CD,33591:CD,33595:CD,33596:CD,33597:CD,33598:CD,33599:CD,33600:CD,33601:CD,33602:CD,33603:CD,33624:CD,33632:CD,33642:CD,33650:CD,33660:CD,33668:CD,33684:CD,33689:CD,33694:CD,33699:CD,33707:CD,33708:CD,33891:CD,33892:CD,33970:CD,33974:CD,33978:CD,33980:CD,33984:CD,34063:CD,34064:CD,34065
33542 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,33552:JM,34063:CL,38780
33547 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,34064:JM,33556:CL,38780
33552 :: CALL :: call :: I :: v106 = v102.getLength()::JM,33552:JM,34063
33556 :: CALL :: call :: I :: v108 = v104.getLength()::JM,34064:JM,33556
33560 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,34065:CL,38805
33574 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,33590:CL,38845
33578 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,33598:CL,38881
33582 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,33601:CL,38928
33586 :: CALL :: call :: I :: v123 = v113.getLength()::JM,33586:JM,33590
33590 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,33596:JM,33591:JM,33595
33591 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,33591:JM,33595
33595 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,33597:CF,33596
33596 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,33597
33597 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,33624:DD,33707:DD,33891:JM,33932:CF,33598
33598 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,33600:CF,33599
33599 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,33600
33600 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,33642:DD,33709:CF,33601
33601 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,33603:CF,33602
33602 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,33603
33603 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,33660:DD,33711
33624 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,33624
33632 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
33642 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,33642
33650 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
33660 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,33660
33668 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
33684 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
33689 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,33689
33694 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
33699 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
33707 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,33708
33708 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,33709:CD,33710
33709 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,33710
33710 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,33711:CD,33712
33711 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,33712
33712 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,33713:CD,33717:CD,33722:CD,33869
33713 :: CALL :: call :: Ljava/lang/String :: v182 = v52.getChainID()::JM,33722:CL,27854
33717 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,33722
33722 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,33723:CD,33727:CD,33732:CD,33787:CD,33791:CD,33796:CD,33797
33723 :: CALL :: call :: Ljava/lang/String :: v186 = v55.getChainID()::JM,33732:CL,27854
33727 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,33732
33732 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::CD,33749:JM,39111:JM,39118:CD,33753:CD,33757:CD,33762:CD,33766:CD,33770:CD,33776:CD,33780:CD,33787:CD,33791:CD,33796:CD,33797
33749 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v196 = new org.biojava.nbio.structure.Compound::
33753 :: CALL :: call :: V :: v196.addChain(v52)::CL,39222
33757 :: CALL :: call :: V :: v196.addChain(v55)::CL,39222
33762 :: CALL :: call :: V :: v196.setMolId(v290)::CL,39239
33766 :: CALL :: call :: Ljava/lang/String :: v203 = v52.getChainID()::CL,27854
33770 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
33776 :: CALL :: call :: Ljava/lang/String :: v207 = v55.getChainID()::CL,27854
33780 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
33787 :: CALL :: call :: Ljava/lang/String :: v211 = v52.getChainID()::JM,33796:CL,27854
33791 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,33796
33796 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,33797
33797 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,33814:CD,33818:CD,33823:CD,33824:CD,33828:CD,33832:CD,33855:CD,33859:CD,33863
33814 :: CALL :: call :: Ljava/lang/String :: v223 = v55.getChainID()::JM,33823:CL,27854
33818 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::JM,33823
33823 :: EXPR :: assign :: Ljava/lang/Object :: v226 = CHECKCAST v225::
33824 :: CALL :: call :: V :: v226.addChain(v52)::CL,39222
33828 :: CALL :: call :: Ljava/lang/String :: v229 = v52.getChainID()::CL,27854
33832 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
33855 :: CALL :: call :: V :: v214.addChain(v55)::CL,39222
33859 :: CALL :: call :: Ljava/lang/String :: v240 = v55.getChainID()::CL,27854
33863 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
33869 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,39250
33891 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,33892
33892 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,33912:CD,33916:CD,33924:CD,33932:CD,33947:CD,33952:CD,33957:CD,33962:JM,33978
33912 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,33912
33916 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
33924 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
33932 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,33932
33947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
33952 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,33952
33957 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
33962 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
33970 :: CALL :: call :: I :: v284 = v30.size()::JM,33978
33974 :: CALL :: call :: I :: v286 = v3.size()::JM,33978
33978 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,33980:CD,33984
33980 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,33984:JM,33405
33984 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,33401:CD,33405:CD,33406:CD,33410:CD,33985:CD,33989:JM,33984
33985 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,33989:JM,33391
33989 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,33387:CD,33391:CD,33392:CD,33396:CD,33980:CD,33984:JM,33989
33990 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,34060
33995 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,34060
34007 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,38191
34012 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getChainID()::JM,34021:CL,27854
34016 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,34021
34021 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::CD,34033:JM,39111:JM,39118:CD,34037:CD,34042:CD,34046:CD,34050
34033 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v316 = new org.biojava.nbio.structure.Compound::
34037 :: CALL :: call :: V :: v316.addChain(v304)::CL,39222
34042 :: CALL :: call :: V :: v316.setMolId(v325)::CL,39239
34046 :: CALL :: call :: Ljava/lang/String :: v322 = v304.getChainID()::CL,27854
34050 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
34056 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,34060
34060 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,33995:CD,34007:CD,34012:CD,34016:CD,34021:CD,34056:JM,34060
34062 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,33365:DD,33377
34063 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,34064:DD,33599
34064 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,34065:DD,33602
34065 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,33586:JM,33590:JM,33591:JM,33595:JM,33689:JM,33912:JM,33952
34363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,34364:CD,34367:CD,34371:CD,34375:CD,34408:CD,34412:CD,34413:JM,34384
34364 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,30153
34367 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,34401:JM,34394:DD,34413
34371 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,34384:JM,34412
34375 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,34384:JM,34412
34380 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,34384:JM,34412
34384 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,34395:JM,34401:JM,34394
34385 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,34401:JM,34394
34390 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,34401:JM,34394
34394 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,34395
34395 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,34397:CD,34401:CD,34414:JM,34394
34397 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,34401:JM,34394
34401 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,34414:CD,34390:CD,34394:CD,34395:JM,34401
34402 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,34403:JM,34384:JM,34412
34403 :: CALL :: call :: Z :: v25 = v3.add(v14)::
34408 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,34384:JM,34412
34412 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,34380:CD,34384:CD,34385:CD,34397:CD,34401:CD,34402:CD,34408:CD,34414:JM,34412:CF,34413
34413 :: NORM :: compound :: Ljava/util/List :: return v3::DD,34364
34414 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,34402
34440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,34445:CD,34480:CD,34484:CD,34488:CD,34489:CD,34493:CD,34565:JM,34498
34445 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,34493:JM,34563
34453 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,38191
34458 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,34462:CL,38208
34462 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,34466:CD,34471:CF,34476
34466 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,38191
34471 :: CALL :: call :: Z :: v21 = v4.add(v19)::
34476 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,34565
34480 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,34488:CL,38259
34484 :: CALL :: call :: I :: v11 = v9.size()::JM,34488
34488 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,34453:CD,34458:CD,34462:CD,34476:CD,34480:CD,34484:CD,34565:JM,34493
34489 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,34493
34493 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,34494:CD,34498:CD,34514:CD,34515:CD,34559:CD,34563:CD,34566
34494 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,34498
34498 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,34504:CF,34514
34504 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
34514 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,34566:JM,34563
34515 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,34563
34520 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,34563
34525 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,34498
34529 :: CALL :: call :: V :: v44.addChain(v43)::CL,39222
34533 :: CALL :: call :: V :: v44.setMolId(v58)::CL,39239
34543 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
34553 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,34566:JM,34498
34554 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,34498
34559 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,34563
34563 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,34520:CD,34525:JM,39111:JM,39118:CD,34529:CD,34533:CD,34543:CD,34553:CD,34554:CD,34559:CD,34566:JM,34563
34565 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,34476:DD,34488
34566 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,34563:DD,34553
34616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,34617:CD,34620:CD,34624:CD,34628:CD,34630:CD,34635:CD,34636
34617 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,30273:JM,30374:JM,69788
34620 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,34630:JM,34635
34624 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,34630:JM,34635
34628 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,34630:JM,34635
34630 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,34630:JM,34635
34635 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,34636:JM,34644:DD,34666
34636 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,34639:CD,34644:CD,34648:CD,34653:CD,34658:CD,34666:CD,34669:CD,34674:CD,34679:CD,34690:CD,34694:CD,34699:CD,34709:CD,34722
34639 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
34644 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,34644
34648 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
34653 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
34658 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
34666 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,34617
34669 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
34674 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,34630:JM,34635
34679 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
34690 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
34694 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
34699 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
34709 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,34722:CL,39704
34722 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,34617
34811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,34812:CD,34818
34812 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,30369:JM,30357:JM,30375:JM,30363:JM,30381:JM,30351:JM,38499:JM,38411:JM,69936:JM,69827:JM,69810:JM,69816:JM,69822:JM,87845:JM,87839
34815 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,34818
34818 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,34812
34820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,34821:CD,34827
34821 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,30368:JM,69833:JM,69832:JM,69837:JM,87833:JM,87832:JM,87838
34824 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,34827
34827 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,34821
35446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,35447:CD,35451:CD,35452:JM,35454
35447 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
35451 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,35452
35452 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,35453:CD,35454:CD,35461
35453 :: NORM :: compound :: Z :: return #(0)::CF,35447
35454 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
35455 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,35461
35458 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,35461
35461 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,35462:CD,35463
35462 :: NORM :: compound :: Z :: return #(1)::CF,35447
35463 :: NORM :: compound :: Z :: return #(0)::CF,35447
35473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,35474:CD,35478:JM,35488:JM,35490:JM,35480:JM,35484
35474 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
35478 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,35479:CD,35480:CD,35484:CD,35488:JM,35490:JM,35478
35479 :: NORM :: compound :: Z :: return #(0)::DD,35474
35480 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,35488:JM,35490:JM,35478:JM,35480:JM,35484
35484 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,35488:JM,35490:JM,35478:JM,35480:JM,35484
35488 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,35489:CD,35490:CD,35494
35489 :: NORM :: compound :: Z :: return #(0)::DD,35474
35490 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
35491 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,35494
35494 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,35498:CD,35506:CD,35511
35495 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,35498
35498 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,35512:CD,35519
35500 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,35511
35503 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,35511
35506 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,35511
35511 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,35512:CD,35519
35512 :: NORM :: compound :: Z :: return #(0)::DD,35474
35513 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,35519
35516 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,35519
35519 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,35523:CD,35540
35520 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,35523
35523 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,35530:CD,35535:CD,35536
35530 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,35535
35535 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,35536:CD,35540
35536 :: NORM :: compound :: Z :: return #(0)::DD,35474
35537 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,35540
35540 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,35544:CD,35552:CD,35557
35541 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,35544
35544 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,35558:CD,35562
35546 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,35557
35549 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,35557
35552 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,35557
35557 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,35558:CD,35562
35558 :: NORM :: compound :: Z :: return #(0)::DD,35474
35559 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,35562
35562 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,35566:CD,35574:CD,35579
35563 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,35566
35566 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,35580:CD,35581
35568 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,35579
35571 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,35579
35574 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,35579
35579 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,35580:CD,35581
35580 :: NORM :: compound :: Z :: return #(0)::DD,35474
35581 :: NORM :: compound :: Z :: return #(1)::DD,35474
35772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,35776:CD,35777:CD,35786:CD,35803:CD,35807:CD,35808
35776 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,35807:CF,35777
35777 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
35786 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
35791 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,35807
35796 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
35798 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
35803 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,35807
35807 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,35791:CD,35796:CD,35798:CD,35803
35808 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
35830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,35831:CD,35834:CD,35840:CD,35844:CD,35848:CD,35849:CD,35857:CD,35862:CD,35863
35831 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,31744:JM,31748
35834 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,35840:JM,35857:JM,35844:JM,35862
35840 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,35840:JM,35857:JM,35844:JM,35862
35844 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,35857:JM,35844:JM,35862
35848 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,35857:JM,35862:JM,35834
35849 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,35834
35857 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,35857:JM,35862
35862 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,35863
35863 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,35831
35896 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,40505
35903 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,40831
35925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,35926:CD,35932
35926 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
35929 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,35932
35932 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,35926
36498 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,36499:CD,36505
36499 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,32575
36502 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,36505
36505 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,36499
36507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,36510:CD,36514
36510 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,36514:JM,36519:JM,36537:JM,36523:JM,36510:JM,36543
36514 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,36515:CD,36519:CD,36523:JM,36537:JM,36543
36515 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,36519:JM,36537:JM,36523:JM,36543
36519 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,36519:JM,36537:JM,36523:JM,36543
36523 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,36532:CD,36537:JM,36519:JM,36523:JM,36543
36532 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,36519:JM,36537:JM,36523:JM,36543
36537 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,36538:CD,36543:JM,36519:JM,36537:JM,36523
36538 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,36519:JM,36537:JM,36523:JM,36543
36543 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,36552:CD,36557:CD,36562
36552 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
36557 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,36519:JM,36537:JM,36523:JM,36543
36562 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,36519:JM,36523
36604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,36605:CD,36609:CD,36613:CD,36619:CD,36623:CD,36632:CD,36637:CD,36641:CD,36643:CD,36658:CD,36667:CD,36743:CD,36747
36605 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,32711:JM,32746
36609 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,36676:JM,36747
36613 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
36619 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
36623 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
36624 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
36632 :: CALL :: call :: Z :: v16 = v4.add(v12)::
36637 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,36643:CL,41683
36641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,36643
36643 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,36644:CD,36653:CF,36658
36644 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
36645 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
36653 :: CALL :: call :: Z :: v24 = v4.add(v20)::
36658 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,36677
36667 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,36676:JM,36747
36672 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,36676:JM,36747
36676 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,36677
36677 :: EXPR :: assign :: I :: v37 = v26.length::DD,36742
36683 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,36740:JM,36696:CL,41692
36687 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,36740:JM,36696
36692 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,36740:JM,36696
36696 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,36697
36697 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,36735:CF,36698
36698 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
36699 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
36707 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
36711 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
36716 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
36721 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
36730 :: CALL :: call :: Z :: v63 = v48.exists()::JM,36734
36734 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,36749:CD,36735:CD,36736:CD,36740
36735 :: NORM :: compound :: Ljava/io/File :: return v48::DD,36605
36736 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,36740:JM,36696
36740 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,36692:CD,36696:CD,36697:CD,36698:CD,36699:CD,36707:CD,36711:CD,36716:CD,36721:CD,36730:CD,36734:CD,36741:CD,36742:CD,36750:CD,36749:JM,36740
36741 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,36750
36742 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,36683:CD,36687:CD,36736:CD,36740:CD,36743:CD,36747:CD,36749:JM,36676
36743 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,36676:JM,36747
36747 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,36672:CD,36676:CD,36677:CD,36742:CD,36748:CD,36750:JM,36747
36748 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,36605
36749 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,36740:JM,36696:DD,36741:DD,36749
36750 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,36742:DD,36749
36816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,36817:CD,36819:CD,36821
36817 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
36819 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,36821:DD,36822
36821 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,36822:CD,36823:CD,36826:CD,36827:CD,36828:CD,36830:CD,36839:CD,36841:CD,36850:CD,36852:CD,36861:CD,36863:CD,36872:CD,36874:CD,36885
36822 :: NORM :: compound :: [I :: return v2::DD,36817
36823 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,36826:CL,41705
36826 :: EXPR :: assign :: I :: v6 = v5.length::CF,36827
36827 :: NORM :: declaration :: [I :: v7 = new []::DD,36885
36828 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
36830 :: CALL :: call :: I :: v10 = v8.ordinal()::
36834 :: EXPR :: modify :: I :: v7[v10] = #(2)::
36839 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
36841 :: CALL :: call :: I :: v16 = v14.ordinal()::
36845 :: EXPR :: modify :: I :: v7[v16] = #(3)::
36850 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
36852 :: CALL :: call :: I :: v22 = v20.ordinal()::
36856 :: EXPR :: modify :: I :: v7[v22] = #(4)::
36861 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
36863 :: CALL :: call :: I :: v28 = v26.ordinal()::
36867 :: EXPR :: modify :: I :: v7[v28] = #(5)::
36872 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
36874 :: CALL :: call :: I :: v34 = v32.ordinal()::
36878 :: EXPR :: modify :: I :: v7[v34] = #(1)::
36885 :: NORM :: compound :: [I :: return v7::DD,36817
36932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,36933:CD,36939
36933 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,32720
36936 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,36939
36939 :: NORM :: compound :: Z :: return v3::CF,36933
36971 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,36975:CD,36981
36975 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,36981:JM,36986:CL,41732
36981 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,36982:CD,36986
36982 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,36986
36986 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,36987:JM,36986
36987 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,36986
37006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,37014:CD,37020:CD,37021:CD,37043:CD,37049:CD,37057:CD,37066:CD,37076
37014 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,42189
37020 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
37021 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,42287
37043 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
37049 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
37057 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,42287
37066 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
37076 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,37077:CD,37082:CD,37116:CD,37121:CD,37126:CD,37136:CD,37141:CD,37146:CD,37154
37077 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,37091:JM,37082:JM,37087:CL,42334
37082 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,37083:CD,37087:CD,37091:CD,37092:CD,37116:CD,37121:CD,37126:CD,37136:CD,37141:CD,37146:CD,37154
37083 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,37091
37087 :: CALL :: call :: J :: v40 = v33.getTime()::JM,37091:JM,37087
37091 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,37092
37092 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,37116:CD,37121:CD,37126:CD,37136:CD,37141:CD,37146:CD,37154
37116 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
37121 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
37126 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
37136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
37141 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
37146 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
37154 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,42419
37217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,37218:CD,37226:CD,37230
37218 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,32800
37226 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,37230:CL,42587
37230 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,37245:CD,37246
37241 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,37245
37245 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,37218
37246 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,37218
37288 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,37293
37293 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
37296 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,37301
37301 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
37304 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,37312
37312 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
37315 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
37318 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
37321 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,37325
37325 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
37328 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,37332
37332 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
37382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CE,37383:CD,37388:CD,37394:CD,37395:CD,37404
37383 :: EXIT :: exit :: Ljava/io/BufferedReader :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,37704:JM,43208:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,37855:JM,43615:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,37885:JM,43517:JM,43647:JM,44287
37388 :: NORM :: declaration :: Ljava/io/IOException :: v9 = new java.io.IOException::
37394 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::DD,37404:CF,37395
37395 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
37404 :: NORM :: compound :: Ljava/io/BufferedReader :: return v5::DD,37383
37412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::CE,37413:CD,37437:JM,42816:JM,42854:JM,37288:JM,37321:JM,42826:JM,42861:JM,37296:JM,37328:JM,42833:JM,42868:JM,42840:JM,37304:JM,42847:CD,37444:CD,37451:CD,37458:CD,37478:CD,37500:CD,37506:CD,37521:CD,37527:CD,37533:CD,37539:CD,37551:CD,37561:CD,37912:CD,37916:CD,37923:CD,37928:CD,37934:CD,37938:CD,37945:CD,37949:CD,37956:CD,37960:CD,37975:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37413 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,33260
37437 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v10 = new org.biojava.nbio.structure.StructureImpl::DD,37441
37441 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v10::
37444 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,37448
37448 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v12::
37451 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,37455
37455 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v14::
37458 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
37465 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
37468 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
37478 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
37497 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
37500 :: CALL :: call :: V :: v24.clear()::
37503 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
37506 :: CALL :: call :: V :: v26.clear()::
37518 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
37521 :: CALL :: call :: V :: v30.clear()::
37524 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
37527 :: CALL :: call :: V :: v32.clear()::
37530 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
37533 :: CALL :: call :: V :: v34.clear()::
37536 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
37539 :: CALL :: call :: V :: v36.clear()::
37542 :: EXPR :: modify :: I :: p0 $this .lengthCheck = #(-1)::
37551 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,37555
37555 :: EXPR :: modify :: Ljava/util/List :: p0 $this .linkRecords = v38::
37558 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
37561 :: CALL :: call :: V :: v40.clear()::
37575 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37580 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,37581:CD,37583:CD,37588:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37581 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37583 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37588 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,37590:CD,37595:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37590 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37595 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,37596:CD,37601:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37596 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37601 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,37603:CD,37607:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37603 :: CALL :: call :: I :: v60 = v46.length()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37607 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,37610:CD,37615:CD,37620:CD,37625:CD,37634:CD,37640:CD,37644:CD,37649:JM,44160:JM,37767:JM,37896:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37610 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
37615 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37620 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,43677:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,43627:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287:JM,43647
37625 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37634 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37640 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,43677:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,43627:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287:JM,43647
37644 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37649 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,37650:CD,37655:CD,37660:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37650 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:CL,42904
37655 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37660 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,37661:CD,37666:CD,37671:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37661 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:CL,44103
37666 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37671 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,37672:CD,37677:CD,37682:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37672 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:CL,42904
37677 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37682 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,37683:CD,37688:CD,37693:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,37822:JM,44287
37683 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,44367
37688 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37693 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,37694:CD,37699:CD,37704:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37694 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,44483
37699 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37704 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,37705:CD,37710:CD,37715:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37705 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,44739
37710 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37715 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,37716:CD,37721:CD,37726:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37716 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,44810
37721 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37726 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,37730:CD,37736:CD,37741:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37727 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
37730 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37736 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37741 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,37745:CD,37751:CD,37756:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37742 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
37745 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37751 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37756 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,37757:CD,37762:CD,37767:JM,44160:JM,43588:JM,43718:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37757 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,44960
37762 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37767 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,37768:CD,37773:CD,37778:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37768 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,45045
37773 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37778 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,37779:CD,37784:CD,37789:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37779 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,45124
37784 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37789 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,37790:CD,37795:CD,37800:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37790 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,45478
37795 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37800 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,37801:CD,37806:CD,37811:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37801 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,45832
37806 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37811 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,37812:CD,37817:CD,37822:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,44287
37812 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,46157
37817 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37822 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,37823:CD,37828:CD,37833:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37823 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,46520
37828 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37833 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,37834:CD,37839:CD,37844:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37834 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,46615
37839 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37844 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,37845:CD,37850:CD,37855:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37845 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,46940
37850 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37855 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,37856:CD,37861:CD,37866:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37856 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,47544
37861 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37866 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,37867:CD,37875:CD,37879
37867 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,47844
37875 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,37879:CL,48100
37879 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,37880:CD,37885:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37822:JM,44287:JM,37916:JM,43677:JM,37580:JM,37588:JM,37595:JM,37601:JM,37607:JM,43627:JM,43647
37880 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37885 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,37886:CD,37891:CD,37896:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37886 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,48109
37891 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37896 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,37897:CD,37902:CD,37907:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37897 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,48335
37902 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,42965:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
37907 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,37908:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37908 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,48561
37912 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37916 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,37575:CD,37580:CD,37912:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37923 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,48787
37928 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:CL,48923
37934 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,37938:CL,49390
37938 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,37939:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
37939 :: CALL :: call :: V :: p0 $this .formBonds()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287:CL,49399
37945 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,37949:CL,49463
37949 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,37950
37950 :: CALL :: call :: V :: p0 $this .addCharges()::CL,49472
37956 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,37960:CL,48100
37960 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,37964:CD,37968
37964 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,37968:CL,49484
37968 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,37969
37969 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,49493
37972 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Structure :: v196 = p0 $this .structure::DD,37975
37975 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v196::DD,37413
38191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,38192:CD,38196:CD,38202
38192 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
38196 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,38202:CL,49606
38202 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,38192
38208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,38209:CD,38212:CD,38216:CD,38241:CD,38245
38209 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,33341:JM,34462
38212 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,38245:CL,30249
38216 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,38245
38221 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,38245
38226 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,38232:CL,49633:CL,49641:CL,49649
38230 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,38232
38232 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,38233:CD,38237:CD,38239:CD,38240
38233 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,38239:CL,49633:CL,49641:CL,49649
38237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,38239
38239 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,38240:CD,38241:CD,38245
38240 :: NORM :: compound :: Z :: return #(0)::DD,38209
38241 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,38245
38245 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,38221:CD,38226:CD,38230:CD,38232:CD,38246:JM,38245
38246 :: NORM :: compound :: Z :: return #(1)::DD,38209
38259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,38260:CD,38263:CD,38268
38260 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,33377:JM,34488:JM,61752:JM,61899:JM,76310:JM,76463:JM,76670:JM,76816
38263 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,38268:CL,49657
38268 :: NORM :: compound :: Ljava/util/List :: return v5::DD,38260
38271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,38272:CD,38277:CD,38488:CD,38492:CD,38493:CD,38497:CD,38505:CD,38506:JM,38287:JM,38412
38272 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,86212:JM,86216:JM,86217:JM,86221
38277 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,38497
38282 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,38492:JM,38287
38287 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,38288
38288 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,38289
38289 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,38291:CD,38295:CD,38299:CD,38300:CD,38304:CD,38308:CD,38314:CD,38319:CD,38321:CD,38325:CD,38498:CD,38503:CD,38504
38291 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,38498:JM,38299:CL,49674
38295 :: CALL :: call :: C :: v18 = v16.charValue()::JM,38498:JM,38299
38299 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,38498
38300 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
38304 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
38308 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
38314 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
38319 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,38503
38321 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,38325:CL,30404
38325 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,38327:CD,38331:CD,38503:CD,38504
38327 :: CALL :: call :: I :: v35 = v12.size()::JM,38331:CL,49683
38331 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,38332:CD,38337:CD,38349:CD,38353
38332 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,38337:CL,49696
38337 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,38343:CD,38347:CD,38503:CD,38504
38343 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,38347:CL,49737
38347 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,38349:CD,38353:CD,38503:CD,38504
38349 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,38353:CL,30258
38353 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,38356:CD,38366:CD,38368:CD,38372:CD,38377:CD,38503:CD,38504
38356 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,50038:CL,49940:CL,49750
38366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,38372:JM,38377
38368 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,38372:JM,38377:CL,50177
38372 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,38372:JM,38377
38377 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,38384:CD,38389:CD,38402:CD,38406:CD,38411:CD,38426:CD,38430:CD,38470:CD,38474:CD,38499:CD,38500:CD,38501:CD,38502:CD,38503:CD,38504
38384 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,38389
38389 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,38396:CD,38401:CD,38402:CD,38406:CD,38411:CD,38426:CD,38430:CD,38470:CD,38474:CD,38499:CD,38500:CD,38501:CD,38502:CD,38503:CD,38504
38396 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,38401
38401 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,38402:CD,38406:CD,38411:CD,38426:CD,38430:CD,38470:CD,38474:CD,38478:CD,38499:CD,38500:CD,38501:CD,38502:CD,38503:CD,38504
38402 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,38499:JM,38411:CL,34811
38406 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,38499:JM,38411
38411 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,38499:CD,38412
38412 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,38419:CD,38424:CD,38499
38419 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,38424
38424 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,38499
38426 :: CALL :: call :: I :: v79 = v77.length()::JM,38430
38430 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,38433
38433 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,50038:CL,49940:CL,49750
38444 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
38448 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
38452 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
38458 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
38463 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
38468 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,38500:CF,38469
38469 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,38502:CF,38500
38470 :: CALL :: call :: I :: v86 = v77.length()::JM,38474
38474 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,38444:CD,38448:CD,38452:CD,38458:CD,38463:CD,38468:CD,38469:CD,38470:CD,38500:CD,38501:CD,38502
38478 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,50038:CL,49940:CL,49750
38487 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,38506:CF,38505
38488 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,38492:JM,38287
38492 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,38282:CD,38287:CD,38288:CD,38289:CD,38487:CD,38488:CD,38503:CD,38504:CD,38505:CD,38506:JM,38492:JM,38497
38493 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,38497
38497 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,38272
38498 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
38499 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,38430:JM,38474
38500 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,38501:DD,38468:DD,38503
38501 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,38502:DD,38501:DD,38504
38502 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,38469:DD,38474
38503 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,38504:DD,38505
38504 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,38487
38505 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,38506:DD,38319:DD,38500:DD,38503
38506 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,38287:DD,38492:DD,38501:DD,38504
38602 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,38603:CF,38613:CD,38614
38603 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,33461:JM,33467
38613 :: NORM :: compound :: Z :: return #(0)::CF,38603
38614 :: NORM :: compound :: Z :: return #(1)::CF,38603
38618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,38619:CF,38636:CD,38623:CD,38628
38619 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,33478:JM,34063:JM,34064:JM,33482
38623 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,38628
38628 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,38619
38636 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,38619
38643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,38644:CD,38649:CD,38652:CD,38658:CD,38659:CD,38667:CD,38671
38644 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,34065
38649 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,38659:JM,38667:JM,38671
38652 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,38659:JM,38667:JM,38671
38658 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,38659:JM,38667:JM,38671:JM,38649
38659 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,38659:JM,38649:JM,38667:JM,38671
38667 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,38659:JM,38667:JM,38671
38671 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,38644
38683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,38684:CF,38694:CD,38695
38684 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,33498:JM,33504
38694 :: NORM :: compound :: Z :: return #(0)::CF,38684
38695 :: NORM :: compound :: Z :: return #(1)::CF,38684
38699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,38700:CF,38717:CD,38704:CD,38709
38700 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,33515:JM,34063:JM,34064:JM,33519
38704 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,38709
38709 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,38700
38717 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,38700
38724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,38725:CD,38730:CD,38733:CD,38739:CD,38740:CD,38748:CD,38752
38725 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,34065
38730 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,38752:JM,38740:JM,38748
38733 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,38752:JM,38740:JM,38748
38739 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,38752:JM,38740:JM,38748:JM,38730
38740 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,38752:JM,38740:JM,38730:JM,38748
38748 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,38752:JM,38740:JM,38748
38752 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,38725
38764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,38765:CF,38775:CD,38776
38765 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,33535:JM,33541
38775 :: NORM :: compound :: Z :: return #(0)::CF,38765
38776 :: NORM :: compound :: Z :: return #(1)::CF,38765
38780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,38781:CF,38798:CD,38785:CD,38790
38781 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,33552:JM,34063:JM,34064:JM,33556
38785 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,38790
38790 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,38781
38798 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,38781
38805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,38806:CD,38811:CD,38814:CD,38820:CD,38821:CD,38829:CD,38833
38806 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,34065
38811 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,38833:JM,38821:JM,38829
38814 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,38833:JM,38821:JM,38829
38820 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,38833:JM,38821:JM,38829:JM,38811
38821 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,38833:JM,38821:JM,38811:JM,38829
38829 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,38833:JM,38821:JM,38829
38833 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,38806
38845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,38850:JM,38855:CF,38846:CD,38858:CD,38862:CD,38863:CD,38865:CD,38866
38846 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,33590
38850 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,38850:JM,38855:JM,38858:JM,38862
38855 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,38864:CD,38856
38856 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,38864
38857 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,38866:CF,38865
38858 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,38850:JM,38855:JM,38858:JM,38862
38862 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,38850:CD,38855:CD,38857:CD,38858:CD,38864:CD,38865:CD,38866:JM,38862:CF,38863
38863 :: NORM :: compound :: I :: return v12::CF,38846
38864 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,38865:CF,38857
38865 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38866:DD,38856:DD,38863:DD,38864
38866 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,38850:JM,38855:JM,38858:DD,38857:DD,38862
38881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,38886:JM,38891:CF,38882:CD,38904:CD,38908:CD,38909:CD,38911:CD,38912
38882 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,33598
38886 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,38886:JM,38904:JM,38891:JM,38908
38891 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,38896:JM,38901:JM,38892
38892 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,38896:JM,38901:JM,38892
38896 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,38896:JM,38901
38901 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,38910:CD,38902
38902 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,38910
38903 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,38912:CF,38911
38904 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,38886:JM,38904:JM,38891:JM,38908
38908 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,38886:CD,38891:CD,38892:CD,38896:CD,38901:CD,38903:CD,38904:CD,38910:CD,38911:CD,38912:JM,38908:CF,38909
38909 :: NORM :: compound :: I :: return v18::CF,38882
38910 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,38911:CF,38903
38911 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,38912:DD,38902:DD,38909:DD,38910
38912 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,38886:JM,38904:JM,38891:DD,38903:DD,38908
38928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,38933:JM,38938:CF,38929:CD,38951:CD,38955:CD,38956:CD,38958:CD,38959
38929 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,33601
38933 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,38933:JM,38951:JM,38938:JM,38955
38938 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,38948:JM,38939:JM,38943
38939 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,38948:JM,38939:JM,38943
38943 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,38948:JM,38943
38948 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,38957:CD,38949
38949 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,38957
38950 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,38959:CF,38958
38951 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,38933:JM,38951:JM,38938:JM,38955
38955 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,38933:CD,38938:CD,38939:CD,38943:CD,38948:CD,38950:CD,38951:CD,38957:CD,38958:CD,38959:JM,38955:CF,38956
38956 :: NORM :: compound :: I :: return v18::CF,38929
38957 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,38958:CF,38950
38958 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,38959:DD,38949:DD,38956:DD,38957
38959 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,38933:JM,38951:JM,38938:DD,38950:DD,38955
38982 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
38985 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
38988 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
38991 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
38994 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
38997 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
39000 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
39003 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
39006 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
39009 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
39012 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
39015 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
39018 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
39021 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
39024 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
39027 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
39030 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
39033 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
39036 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
39039 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
39042 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
39045 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
39048 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
39051 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
39054 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
39057 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
39060 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
39063 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
39066 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
39069 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
39072 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
39075 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
39078 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
39081 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
39084 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
39087 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
39090 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
39093 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
39096 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
39099 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
39102 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
39105 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
39108 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
39111 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,39115
39115 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
39118 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,39122
39122 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
39125 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
39222 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,39230
39227 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
39230 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
39239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,39244
39244 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
39250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,39255:CD,39259:CD,39263:CD,39363
39255 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,39265:JM,39263:CL,50186
39259 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,39263:CL,50186
39263 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,39265:CD,39281:CD,39364:CD,39368:CD,39433:CD,39434
39265 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,39268:CD,39276:CD,39433
39268 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,39433:CL,50203
39276 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,39433:CL,50203
39281 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,39368
39286 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,39368
39295 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,50270
39300 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,39313:CL,28213
39304 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,39313:CL,28213
39308 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,39313
39313 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CF,39434:CD,39364:CD,39368
39363 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v56 + #(1)::DD,39434
39364 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,39368
39368 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,39286:CD,39295:CD,39300:CD,39304:CD,39308:CD,39313:CD,39369:CD,39370:CD,39374:CD,39375:CD,39376:CD,39377:CD,39434:JM,39368
39369 :: EXPR :: assign :: D :: v57 = CONVERT I to D v56::DD,39375:JM,39374
39370 :: CALL :: call :: I :: v59 = v16.size()::JM,39374
39374 :: EXPR :: assign :: D :: v60 = CONVERT I to D v59::CF,39375
39375 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v57 / v60::DD,39376
39376 :: EXPR :: assign :: Z :: v63 = v61 < #(0.5 d)::DD,39377
39377 :: PRED :: IF :: Z :: if (v63 <= #(0)) goto 274::CD,39381
39381 :: CALL :: call :: Ljava/lang/Double :: v68 = valueOf(#(0.5 d))::JM,39381
39433 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,39368:JM,39374
39434 :: EXPR :: assign :: null :: PHI v56 = #(0), v56, v54::JM,39368:DD,39363:DD,39369:DD,39434
39576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,39577:CD,39583
39577 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,63707:JM,63739
39580 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,39583
39583 :: NORM :: compound :: I :: return v3::CF,39577
39704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,39705:CD,39709:CD,39713:CD,39717:CD,39722
39705 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,34722
39709 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,39722
39713 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,39722
39717 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,39722
39722 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,39723:CD,39724:CD,39728:CD,39732:CD,39736:CD,39741:CD,39868
39723 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,39705
39724 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,39728:CL,50561
39728 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,39729
39729 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,50585
39732 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,39736:CL,50561
39736 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,39868:CD,39737
39737 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,39868:CL,50674
39741 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,39742:JM,51122:JM,64372:JM,64358:JM,51145:JM,64365:CD,39763:CD,39767:CD,39768:CD,39777:CD,39785:CD,39802:CD,39857:CD,39862
39742 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,50982
39763 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,51156
39767 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,39768
39768 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
39777 :: CALL :: call :: V :: v28.parse(v33)::CL,51173
39785 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,39802:CL,52101
39802 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,39705
39857 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,39862:CL,52135
39862 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,39705
39868 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,39741
40337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,40338:CD,40341:CD,40345:CD,40354:CD,40355:CD,40359:CD,40368:CD,40369:CD,40373:CD,40382:CD,40383:CD,40387:CD,40396:CD,40397:CD,40398:CD,40399:CD,40400:CD,40401
40338 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
40341 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,40354
40342 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,40345
40345 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,40349:CD,40398
40346 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,40398
40349 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,40398
40354 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,40355
40355 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,40368
40356 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,40359
40359 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,40363:CD,40399
40363 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,40399
40368 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,40369
40369 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,40382
40370 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,40373
40373 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,40377:CD,40400
40374 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,40400
40377 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,40400
40382 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,40383
40383 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,40396
40384 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,40387
40387 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,40391:CD,40401
40388 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,40401
40391 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,40401
40396 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,40397
40397 :: NORM :: compound :: I :: return v34::DD,40338
40398 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,40354
40399 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,40368
40400 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,40382
40401 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,40396
40505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,40509:CD,40513:CD,40704:CD,40706:CD,40711:CD,40733
40509 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,40513:JM,40518:JM,40522:JM,40509:JM,40733
40513 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,40514:CD,40518:CD,40522:CD,40584:CD,40587:CD,40592:JM,40733
40514 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,40518:JM,40522:JM,40733
40518 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,40518:JM,40522
40522 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,40531:CD,40536:CD,40540:CD,40584:CD,40587:CD,40592
40531 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
40536 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,40540
40540 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,40565:CD,40570:CD,40574:CD,40733
40565 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,40565:JM,40733
40570 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,40574
40574 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,40733
40584 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
40587 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,40592
40592 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,40593:CD,40598:CD,40599:CD,40603:CD,40607:CD,40675:CD,40699:CD,40733
40593 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,40598
40598 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,40603:JM,40607
40599 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,40603:JM,40607
40603 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,40603:JM,40607
40607 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,40608:CD,40613:CD,40622:CD,40627:CD,40631:CD,40675:CD,40699:CD,40733
40608 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,40613
40613 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,40733
40622 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
40627 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,40631
40631 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,40656:CD,40661:CD,40665:CD,40733
40656 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,40656:JM,40733
40661 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,40665
40665 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,40733
40675 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,40675:JM,40733
40699 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
40704 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,40711
40706 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,40711
40711 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,40712:CD,40713:CD,40721:CD,40723:CD,40728
40712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
40713 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
40721 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
40723 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
40728 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
40733 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,40711
40831 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,40835:CD,40839:CD,41100:CD,41102:CD,41107:CD,41129
40835 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,40835:JM,40839:JM,41129
40839 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,40848:CD,40853:CD,40857:CD,40926:CD,40929:CD,40934
40848 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
40853 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,40857
40857 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,40882:CD,40887:CD,40891:CD,41129
40882 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,40882:JM,41129
40887 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,40891
40891 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,41129:CD,40916:CD,40920
40916 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,40916:JM,41129
40920 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
40926 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
40929 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,40934
40934 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,41022:CD,40935:CD,40940:CD,40949:CD,40954:CD,40958:CD,41030:CD,41034
40935 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,40940
40940 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,41129
40949 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
40954 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,40958
40958 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,40983:CD,40988:CD,40992:CD,41129
40983 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,40983:JM,41129
40988 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,40992
40992 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,41129:CD,41017
41017 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,41017:JM,41129
41022 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
41023 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
41030 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,41034
41034 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,41058:CD,41064:CD,41095:CD,41129
41035 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,41129
41058 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
41064 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,41064:JM,41129
41095 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
41100 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,41107
41102 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,41107
41107 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,41108:CD,41109:CD,41117:CD,41119:CD,41124
41108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
41109 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
41117 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
41119 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
41124 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
41129 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,41107
41683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,41684:CD,41690
41684 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,36643
41687 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,41690
41690 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,41684
41692 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,41693:CD,41699:CD,41703
41693 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,36740:JM,36696
41696 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,41699:JM,41703
41699 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,41699:JM,41703
41703 :: NORM :: compound :: Ljava/util/List :: return v5::DD,41693
41705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,41706:CD,41708:CD,41710:CD,41711:CD,41719
41706 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,36826
41708 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,41710
41710 :: EXPR :: assign :: I :: v4 = v2.length::DD,41711
41711 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,41719
41719 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,41706
41732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,41733:CD,41743:CD,41747:JM,41889:JM,41857:JM,41779:JM,41901:JM,41998
41733 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,36981:JM,36986
41743 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,41747:JM,41752:CL,53928
41747 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,41748:CD,41752:CD,41760
41748 :: CALL :: call :: I :: v12 = v9.size()::JM,41752
41752 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,41760:CD,41761:CD,41767:CD,41772:CD,41773:JM,41752
41760 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41761 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,41752
41767 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,41772
41772 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,41773:JM,41779
41773 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,41774:CD,41779:CD,41787
41774 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,41779:JM,41889:JM,41857:JM,41901:JM,41998
41779 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,41787:CD,41788:CD,41793:CD,41794
41787 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41788 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,41793
41793 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,41794
41794 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,41802:CD,41803:CD,41807
41802 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41803 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,41807:CL,54298
41807 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,41816:CD,41815:CD,41820:CD,41823:CD,41831
41815 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41816 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,41837:DD,41869:DD,41948:DD,41962:DD,42025
41820 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,54517
41823 :: CALL :: call :: I :: v33 = v27.ordinal()::
41827 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,41831
41831 :: PRED :: IF :: null :: switch v34::CD,41832:CD,41837:CD,41838:CD,41843:CD,41844:CD,41949:CD,41950:CD,41955:CD,41956
41832 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,41889:JM,41857:JM,41779:JM,41901:JM,41998
41837 :: NORM :: compound :: Ljava/util/List :: return v28::DD,41733
41838 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,41843
41843 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,41844
41844 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,41852:CD,41853:CD,41857:CD,41863:CD,41868
41852 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41853 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,41868
41857 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,41858:JM,41868
41858 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,41889:JM,41857:JM,41779:JM,41901:JM,41998
41863 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,41868
41868 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,41869:CD,41870:CD,41879:CD,41883:CD,41947:CD,41948:CD,42026
41869 :: NORM :: compound :: Ljava/util/List :: return v28::DD,41733
41870 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,41883
41879 :: CALL :: call :: V :: sort(v75, v76)::
41883 :: EXPR :: assign :: I :: v79 = v75.length::DD,41947
41885 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,41903:DD,41934
41889 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,41890:CD,41896:CD,41901
41890 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,41732
41896 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,54794
41901 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,41902:CD,41907:CD,41911:CD,41916:CD,41920:CD,41923:CD,41931
41902 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,41907
41903 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
41907 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,41907
41911 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,54794
41916 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,37217
41920 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,54517
41923 :: CALL :: call :: I :: v93 = v89.ordinal()::
41927 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,41931
41931 :: PRED :: IF :: null :: switch v94::CD,41933:CD,41938:CD,41942
41933 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,41938
41934 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
41938 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,41938
41942 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,54794
41946 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,42026
41947 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,41889:CD,41946:CD,42026:CF,41948
41948 :: NORM :: compound :: Ljava/util/List :: return v28::DD,41733
41949 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41950 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,41955
41955 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,41956
41956 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,41957:CD,41962:CD,41963:CD,41967:CD,41972
41957 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,41889:JM,41857:JM,41779:JM,41901:JM,41998
41962 :: NORM :: compound :: Ljava/util/List :: return v28::DD,41733
41963 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,41972
41967 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,41972
41972 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,41973:CD,41974:CD,41979:CD,41988:CD,41992:CD,42024:CD,42025:CD,42027
41973 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,41733
41974 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,41889:JM,41857:JM,41779:JM,41901:JM,41998
41979 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,41992
41988 :: CALL :: call :: V :: sort(v48, v49)::
41992 :: EXPR :: assign :: I :: v52 = v48.length::DD,42024
41994 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,42011
41998 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,41999:CD,42005:CD,42010:CD,42015:CD,42019
41999 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,41732
42005 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,54794
42010 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,42015
42011 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
42015 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,42015
42019 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,54794
42023 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,42027
42024 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,41998:CD,42023:CD,42027:CF,42025
42025 :: NORM :: compound :: Ljava/util/List :: return v28::DD,41733
42026 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,41946:DD,41947
42027 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,42023:DD,42024
42189 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,42190:CD,42195:CD,42235:CD,42239:CD,42256:CD,42257
42190 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
42195 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,42196:CD,42202:CD,42206:CD,42216:CD,42222:CD,42226:CD,42257:JM,42195
42196 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,42195
42202 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
42206 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,42257
42216 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,42195
42222 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
42226 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,42257
42235 :: CALL :: call :: Z :: v26 = v23.exists()::JM,42239
42239 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,42240:CF,42256
42240 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
42256 :: NORM :: compound :: Ljava/io/File :: return v23::DD,42190
42257 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,42256
42287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,42288:CD,42292:CD,42297:CD,42301:CD,42306:CD,42311:CD,42315
42288 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
42292 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,42315
42297 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,42315
42301 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,42315
42306 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,42315
42311 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,42315
42315 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,42288
42334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,42335:CD,42339:CD,42343:CD,42360:CD,42399:CD,42402:JM,42369
42335 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,37091:JM,37082:JM,37087
42339 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,42369:JM,42402:JM,42343:JM,42360
42343 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,42369:JM,42402:JM,42343:JM,42360
42360 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,42402:CF,42361:CD,42369
42361 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,42369:JM,42402
42369 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,42369:JM,42402
42399 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,42335
42402 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,42399
42419 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,42428:CD,42433:CD,42437:CD,42442:CD,42446:CD,42455:CD,42525:CD,42529
42428 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
42433 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,55084
42437 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
42442 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
42446 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
42455 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,55137
42525 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,55182
42529 :: CALL :: call :: Z :: v63 = v19.delete()::
42587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,42588:CD,42591:CD,42592:CD,42593:CD,42597:JM,42710:JM,42602
42588 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,37230
42591 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,42592
42592 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,42712
42593 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,42692:JM,42597:JM,42603:CL,53928
42597 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,42598:CD,42602:CD,42603:CD,42606:CD,42615:JM,42692
42598 :: CALL :: call :: I :: v9 = v6.size()::JM,42692:JM,42603
42602 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,42603
42603 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,42606:CD,42615:CD,42710:CD,42711:CD,42712:CD,42716
42606 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
42615 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,42588
42617 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,42692:JM,42603
42622 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,42692
42627 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,42632
42632 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,42633:JM,42643
42633 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,42714:CD,42638:CD,42643
42634 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,42643
42638 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,42643
42643 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,42645:CD,42650:CD,42651:CD,42672:CD,42713:CD,42714:CD,42715
42645 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,42650
42650 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,42651
42651 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,42668:CD,42713
42663 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
42668 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,42713:CL,54298
42672 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
42680 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
42684 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
42688 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,42692
42692 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,42622:CD,42627:CD,42632:CD,42633:CD,42688:CD,42714:CD,42715:JM,42692:CF,42693
42693 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,42709
42705 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
42709 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,42716
42710 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,42711
42711 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,42617:CD,42688:CD,42692:CD,42693:CD,42709:CD,42710:CD,42714:CD,42715:CD,42716:JM,42603:CF,42712
42712 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,42588
42713 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,42672:DD,42684
42714 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,42715:DD,42709:DD,42714
42715 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,42692:DD,42693:DD,42715
42716 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,42711:DD,42714:CF,42710
42816 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42820
42820 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
42826 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42830
42830 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
42833 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42837
42837 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
42840 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42844
42844 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
42847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,42851
42851 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
42854 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321
42861 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42865
42865 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
42868 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,37296:JM,37328:JM,37288:JM,37304:JM,37321:DD,42872
42872 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
42904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,42912:CD,42916:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
42912 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,42916:CL,49484
42916 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,42918:CD,42927:CD,42956:CD,42960:CD,42965:CD,43054:CD,43060:CD,43064:CD,43070:CD,43074:CD,43080:CD,43084:CD,43090:CD,43095:CD,43105:JM,55972:JM,55975:JM,55978:CD,43115:CD,43120:CD,43144:CD,43176:CD,43208:CD,43209:CD,43215:JM,44160:JM,43588:JM,43718:JM,37767:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287:CD,43231:CD,43236:CD,43351:CD,43361:CD,43405:CD,43777:CD,43779:CD,43782:JM,37916:JM,43677:JM,37580:JM,37588:JM,43478:JM,37595:JM,37601:JM,37607:JM,43627:JM,43002:JM,43647
42918 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
42924 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,42927
42927 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,43777:CD,42928:JM,55632:JM,55620:JM,55639:JM,55625:CD,42938:CD,42948
42928 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,42932
42932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
42938 :: CALL :: call :: V :: v16.setChainID(v11)::CL,55663
42942 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
42945 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
42948 :: CALL :: call :: Z :: v22 = v19.add(v20)::
42956 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,42965:CL,27854
42960 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
42965 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,43779:CD,42972:CD,42986:CD,42992:CD,43012:CD,43037:CD,43042:CD,43778
42972 :: CALL :: call :: V :: v29.addGroup(v30)::CL,55674
42986 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,42992:JM,43778:CL,55916
42992 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,42993:CD,42997:CD,43002:CD,43006:CD,43778
42993 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,43002:CL,27854
42997 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,43002:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43002 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,43778:CD,43006
43006 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,43778:CL,55916
43012 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,43013:JM,55632:JM,55620:JM,55639:JM,55625:CD,43023
43013 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,43017
43017 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
43023 :: CALL :: call :: V :: v48.setChainID(v11)::CL,55663
43028 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
43031 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,43042
43034 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,43042
43037 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,43042
43042 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,43779:CD,43049
43043 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
43046 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
43049 :: CALL :: call :: Z :: v57 = v54.add(v55)::
43054 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43060 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43064 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43070 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43074 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43080 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43084 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43090 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43095 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43105 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43115 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43120 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,43121:CD,43126:CD,43130
43121 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,55989
43126 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,43130:CL,55989
43130 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,43131
43131 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
43141 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,43144
43144 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,43145:CD,43158:CD,43165:CD,43172:CF,43176
43145 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::JM,43152:CL,56058
43152 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v105::
43158 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,56136:CL,56167
43165 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,56178
43169 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v110 = p0 $this .current_group::JM,56245
43172 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::JM,56245:CL,56189
43176 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,43208:CD,43177:CD,43190:CD,43197:CD,43204
43177 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::JM,43184:CL,56058
43184 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v113::
43190 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,56136:CL,56167
43197 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,56178
43201 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v118 = p0 $this .current_group::JM,56245
43204 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::JM,56245:CL,56189
43208 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,44160:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43702:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287:JM,43294:JM,56427:JM,56477:JM,37916:JM,43677:JM,43574:JM,43588:JM,37580:JM,43602:JM,37588:JM,42965:JM,43478:JM,37595:JM,37601:JM,37607:JM,43627:JM,43512:JM,43002:JM,43647
43209 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43215 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43231 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,43236:CL,31005
43236 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,43243:CD,43250:CD,43253:CD,43266:CD,43273:CD,43280:CD,43285:CD,43289:CD,43294:CD,43782
43243 :: CALL :: call :: V :: v157.addGroup(v158)::CL,55674
43250 :: CALL :: call :: V :: v160.trimToSize()::CL,56283
43253 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::JM,43260:CL,56058
43260 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v163::
43266 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,56136:CL,56167
43273 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,56178
43277 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v168 = p0 $this .current_group::JM,56245
43280 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::JM,56245:CL,56189
43285 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,43294
43289 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,43294
43294 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,43782:CD,43297:CD,43305:CD,43310:CD,43315:CD,43320:CD,43328:CD,43336:CD,43340
43297 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
43305 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
43310 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
43315 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
43320 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
43328 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,56427:JM,56477:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43478:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287:JM,43782:CL,56392
43336 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,43340:CL,56638
43340 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,43782:CD,43344
43344 :: CALL :: call :: V :: v152.setChain(v155)::CL,56647
43348 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,43351
43351 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,43352
43352 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
43355 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,43361
43358 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,43361
43361 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,43364:CD,43372:CD,43377:CD,43382:CD,43393:CD,43396
43364 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
43369 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
43372 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
43377 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
43382 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
43390 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
43393 :: CALL :: call :: V :: v188.clear()::
43396 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,56677
43399 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,43405
43402 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,43405
43405 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,43408:CD,43416:CD,43421:CD,43426:CD,43436:CD,43441:CD,43446:CD,43461
43408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
43413 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
43416 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
43421 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
43426 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
43436 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
43441 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43446 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43455 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,43461
43458 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,43461
43461 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,43463:CD,43472:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43463 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43469 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,43472
43472 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,43473:CD,43478:CD,43490:CD,43494:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43473 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43478 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,43490:CD,43494
43490 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,43494:CL,56756
43494 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,43498:CD,43502:CD,43520:CD,43521:CD,43530:CD,43536:CD,43540:JM,56775:JM,56780:CD,43548:CD,43552:CD,43556:CD,43560:CD,43564:CD,43570:CD,43574:CD,43578:CD,43584:CD,43588:CD,43592:CD,43598:CD,43602:CD,43606:CD,43619:CD,43623:CD,43627:CD,43643:CD,43647:CD,43663:CD,43667:CD,43673:CD,43677:CD,43735:CD,43739:CD,43759:CD,43764:CD,43783:CD,43784:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43702:JM,37693:JM,37822:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,44287
43498 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,43502:CL,56756
43502 :: EXPR :: assign :: I :: v208 = v207.length::DD,43520
43504 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,43512:JM,43517
43508 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43512 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,43512:JM,43517:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,37756:JM,37693:JM,37885:JM,37822:JM,44287
43517 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,43519:CD,43520:CD,43783:CD,43784
43519 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,43783
43520 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,43784:CD,43508:CD,43512:CD,43517
43521 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,43530:CD,43536:CD,43540:JM,56775:JM,56780:CD,43548:CD,43552:CD,43556:CD,43560:CD,43564:CD,43570:CD,43574:CD,43578:CD,43584:CD,43588:CD,43592:CD,43598:CD,43602:CD,43606:CD,43619:CD,43623:CD,43627:CD,43643:CD,43647:CD,43663:CD,43667:CD,43673:CD,43677:CD,43735:CD,43739:CD,43759:CD,43764:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43702:JM,37693:JM,37822:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,44287
43530 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43536 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43540 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43548 :: CALL :: call :: V :: v224.setPDBserial(v223)::CL,56822
43552 :: CALL :: call :: V :: v224.setAltLoc(v120)::CL,56833
43556 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43560 :: CALL :: call :: V :: v224.setName(v229)::CL,56857
43564 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43570 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43574 :: CALL :: call :: D :: v238 = parseDouble(v236)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43578 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43584 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43588 :: CALL :: call :: D :: v245 = parseDouble(v243)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43592 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43598 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43602 :: CALL :: call :: D :: v252 = parseDouble(v250)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43606 :: NORM :: declaration :: [D :: v254 = new []::
43607 :: EXPR :: modify :: D :: v254[#(0)] = v238::
43611 :: EXPR :: modify :: D :: v254[#(1)] = v245::
43615 :: EXPR :: modify :: D :: v254[#(2)] = v252::
43619 :: CALL :: call :: V :: v224.setCoords(v254)::CL,56868
43623 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43627 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,43628:CD,43634:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43628 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43634 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43643 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43647 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,43648:CD,43654:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43648 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43654 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37580:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37660:JM,43677:JM,37789:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43663 :: CALL :: call :: V :: v224.setOccupancy(v270)::CL,56879
43667 :: CALL :: call :: V :: v224.setTempFactor(v284)::CL,56890
43673 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43677 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,43678:CD,43684:CD,43688:CD,43694:CD,43698:CD,43702:CD,43730:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43678 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43684 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37580:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43688 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,56901
43694 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43698 :: CALL :: call :: I :: v294 = v292.length()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43702 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,43703:CD,43710:CD,43714:CD,43718:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43703 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43710 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43714 :: CALL :: call :: I :: v299 = v297.length()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43718 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,43719:CD,43725:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43719 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43725 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
43730 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,56901
43735 :: CALL :: call :: V :: v224.setElement(v321)::CL,56945
43739 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,43740:CD,43748
43740 :: CALL :: call :: V :: v170.addAtom(v224)::CL,56956
43748 :: CALL :: call :: V :: v323.addAtom(v224)::CL,56956
43759 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,43764:CL,57146
43764 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,43768
43768 :: CALL :: call :: V :: v332.addAtom(v224)::CL,56956
43777 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,43779
43778 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,43012:DD,43028
43779 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,43176:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
43782 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,43739
43783 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,43519:DD,43520
43784 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,43521
44103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,44108:CD,44114:CD,44118:CD,44124:CD,44130:CD,44134:CD,44142:CD,44150:CD,44155:CD,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
44108 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
44114 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37580:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44118 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
44124 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
44130 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37580:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,43002:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44134 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
44139 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,44142
44142 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,44150:CD,44143:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44143 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44147 :: EXPR :: modify :: I :: p0 $this .lengthCheck = v26::
44150 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,44245
44155 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44160 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,44165:CD,44177:CD,44241:CD,44245:CD,44249:CD,44255:CD,44270:CD,44283
44165 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,44171:CL,55916
44171 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
44174 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,44177
44177 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,44178:JM,55632:JM,55620:JM,55639:JM,55625:CD,44188:JM,44245
44178 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,44182
44182 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
44188 :: CALL :: call :: V :: v39.setChainID(v13)::CL,55663
44193 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
44197 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,55989
44201 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,44208:CL,56058
44208 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
44214 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,56136:CL,56167
44218 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,44221
44221 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,44222
44222 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,44227
44227 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,57221
44237 :: CALL :: call :: V :: v57.addGroup(v58)::CL,55674
44241 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,44245
44245 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,44193:CD,44197:CD,44201:CD,44214:CD,44221:CD,44222:CD,44237:CD,44241
44249 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,44255:CL,55916
44255 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,44262
44256 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
44259 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
44262 :: CALL :: call :: Z :: v67 = v64.add(v65)::
44267 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,44270
44270 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,44274
44274 :: CALL :: call :: V :: v69.trimToSize()::CL,56283
44277 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
44280 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
44283 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
44287 :: EXPR :: modify :: I :: p0 $this .lengthCheck = v72::
44367 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,44375:CD,44379
44375 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,44379:CL,49484
44379 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,44384
44381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,44384
44384 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,44388:CD,44415:CD,44421:CD,44439:CD,44443
44385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,44388
44388 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,44395:CD,44402
44395 :: CALL :: call :: V :: v11.addGroup(v12)::CL,55674
44402 :: CALL :: call :: V :: v14.trimToSize()::CL,56283
44415 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,44421:CL,55916
44421 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,44428
44422 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
44425 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
44428 :: CALL :: call :: Z :: v25 = v22.add(v23)::
44439 :: CALL :: call :: V :: v26.addModel(v27)::CL,57232
44443 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::DD,44447
44447 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v29::
44450 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
44453 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
44483 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,44488:CD,44492:CD,44496:CD,44519:CD,44553:CD,44558:CD,44563:CD,44568:CD,44576:CD,44632:JM,44592:JM,44497:JM,44577:JM,44647:JM,44520
44488 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44492 :: CALL :: call :: I :: v8 = v6.length()::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44496 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,44497:CD,44502:CD,44508:CD,44515:JM,44576:JM,44592:JM,44577:JM,44647:JM,44632:JM,44520:CF,44519
44497 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44502 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44508 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44515 :: CALL :: call :: V :: v17.setClassification(v16)::CL,57276
44519 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,44520:CD,44525:CD,44531:CD,44546:JM,44592:JM,44497:JM,44577:JM,44647:JM,44632:CF,44576
44520 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,44576:JM,44592:JM,44497:JM,44577:JM,44647:JM,44632:JM,44520
44525 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44531 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44546 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,57287
44553 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
44558 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,44592:JM,44497:JM,44577:JM,44647:JM,44520
44563 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
44568 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
44576 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,44577:CD,44582:CD,44588:CD,44597:CD,44605:CD,44610:CD,44621:CD,44628:JM,44592:JM,44497:JM,44647:JM,44520:CF,44632
44577 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,44592:JM,44497:JM,44577:JM,44647:JM,44632:JM,44520
44582 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44588 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44592 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
44597 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
44602 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
44605 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
44610 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
44621 :: CALL :: call :: V :: v65.setPDBCode(v54)::CL,57298
44628 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,57309
44632 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,44636:CD,44642:CD,44647
44633 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,44647
44636 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44647:JM,44632:JM,44520
44642 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,44647:JM,44496:JM,44576:JM,44592:JM,44497:JM,44577:JM,44519:JM,44632:JM,44520
44647 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,44653:CD,44657:CD,44665:CD,44670:CD,44674
44653 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
44657 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
44665 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
44670 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
44674 :: CALL :: call :: V :: v79.println(v89)::
44739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,44744:CD,44749:CD,44756:CD,44760
44744 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
44749 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
44756 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,44760:CL,57320
44760 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,44769:CD,44764:CD,44770:CD,44778:CD,44783:CD,44790
44764 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,57329
44769 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
44770 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
44778 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
44783 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
44790 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,57329
44810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,44815:CD,44819:CD,44848:CD,44852:CD,44898:CD,44899:CD,44907:CD,44912:CD,44919:CD,44924
44815 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,44819:JM,44924
44819 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,44820:CD,44826:CD,44831:CD,44835:CD,44841:CD,44924:JM,44819
44820 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,44819:JM,44924
44826 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,44924
44831 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,44819:JM,44924
44835 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,44819:JM,44924
44841 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,44924
44848 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,44864:JM,44852:JM,44858:CL,57340
44852 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,44853:CD,44858:JM,44864
44853 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,44864:JM,44858
44858 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,44859:CD,44864:JM,44858
44859 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,44864:JM,44858
44864 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,44879:CF,44865:CD,44866:CD,44874:CD,44880:CD,44888:CD,44893
44865 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
44866 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
44874 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
44879 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
44880 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
44888 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
44893 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
44898 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
44899 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
44907 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
44912 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
44919 :: CALL :: call :: V :: v55.setTitle(v54)::CL,57349
44924 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
44960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,44965:CD,44969:CD,44970:CD,44974:CD,44975:CD,44984:CD,44989:JM,45000
44965 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,45000:JM,44969:JM,44989:JM,44974
44969 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,45000:JM,44969:JM,44989:JM,44974
44970 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,45000:JM,44969:JM,44989:JM,44974
44974 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,45000:JM,44969:JM,44989:JM,44974
44975 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,45000:JM,44969:JM,44989:JM,44974
44981 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,44989
44984 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,45000:JM,44989
44989 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,44996:CD,45000:CD,45001:CD,45010:CD,45019
44996 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,45000:JM,44969:JM,44989:JM,44974
45000 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,45000:JM,44969:JM,44989:JM,44974
45001 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,45000:JM,44969:JM,44989:JM,44974
45007 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
45010 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,44989
45016 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
45019 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,45000:JM,44969:JM,44989:JM,44974
45045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,45050:CD,45054:CD,45075:CD,45080:CD,45095:CD,45098
45050 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,45054
45054 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,45055:CD,45061:CD,45066:CD,45071:JM,45054
45055 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,45054
45061 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
45066 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,45054
45071 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
45075 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,45080
45080 :: EXPR :: assign :: I :: v21 = v20.length::DD,45095
45089 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,57360
45094 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,45098
45095 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,45089:CD,45094:CD,45098
45098 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,45094:DD,45095
45124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,45129:CD,45133:CD,45228:CD,45233:CD,45237:CD,45242:CD,45247:CD,45252:CD,45402:JM,45265:JM,45403
45129 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,45265:JM,45403:JM,45133
45133 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,45141:CD,45147:CD,45155:CD,45161:CD,45169:CD,45175:CD,45183:CD,45189:CD,45197:CD,45203:CD,45211:CD,45217:CD,45261:CD,45265:CD,45296:CD,45301:CD,45306:CD,45311:CD,45316:CD,45321:CD,45325:CD,45329:CD,45349:CD,45353:CD,45403:JM,45133
45141 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,45265:JM,45403:JM,45133
45147 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,45265:JM,45403
45155 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,45265:JM,45403:JM,45133
45161 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,45265:JM,45403
45169 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,45265:JM,45403:JM,45133
45175 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,45265:JM,45403
45183 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,45265:JM,45403:JM,45133
45189 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,45265:JM,45403
45197 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,45265:JM,45403:JM,45133
45203 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,45265:JM,45403
45211 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,45265:JM,45403:JM,45133
45217 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,45265:JM,45403
45228 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
45233 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
45237 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
45242 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
45247 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,45265:JM,45403:JM,45133
45252 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,45265:JM,45403
45261 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,45265:JM,45403:JM,45133
45265 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,45266:CD,45272:CD,45277:CD,45281:CD,45287:CD,45403:JM,45265:JM,45133
45266 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,45265:JM,45403:JM,45133
45272 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,45403
45277 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,45265:JM,45403:JM,45133
45281 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,45265:JM,45403:JM,45133
45287 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,45403
45296 :: CALL :: call :: V :: v83.setA(v85)::CL,57413
45301 :: CALL :: call :: V :: v83.setB(v87)::CL,57424
45306 :: CALL :: call :: V :: v83.setC(v89)::CL,57435
45311 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,57446
45316 :: CALL :: call :: V :: v83.setBeta(v93)::CL,57466
45321 :: CALL :: call :: V :: v83.setGamma(v95)::CL,57486
45325 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,45329:CL,57506
45329 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,45332:CD,45345
45332 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,45332
45345 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,57541
45349 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,45353:CL,57552
45353 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,45356:CD,45361:CD,45366:CD,45371:CD,45382:CD,45390:CD,45397
45356 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
45361 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
45366 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
45371 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
45382 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,57631
45390 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,57642
45397 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,57631
45402 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
45403 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
45478 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,45483:CD,45487:JM,45728:JM,45651:JM,45560
45483 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,45728:JM,45651:JM,45560:JM,45487
45487 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,45495:CD,45501:CD,45505:CD,45515:CD,45525:CD,45535:CD,45545:CD,45551:CD,45555:CD,45560:CD,45571:CD,45728:JM,45651:JM,45487
45495 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,45728:JM,45651:JM,45560:JM,45487
45501 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,45728:JM,45651:JM,45560
45505 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,45728:JM,45651:JM,45560:JM,45487
45515 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,45728:JM,45651:JM,45560:JM,45487
45525 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,45728:JM,45651:JM,45560:JM,45487
45535 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,45728:JM,45651:JM,45560:JM,45487
45545 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,45728:JM,45651:JM,45560:JM,45487
45551 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,45728:JM,45651:JM,45560
45555 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,45728:JM,45560
45560 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,45728:CD,45561:CD,45567:JM,45651:JM,45560:JM,45487
45561 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,45728:JM,45651:JM,45560:JM,45487
45567 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,45728:JM,45651:JM,45560
45571 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,45576:CD,45587:CD,45651
45573 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,45576
45576 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,45577
45577 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,45581
45581 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
45584 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,45587
45587 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,45588
45588 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,45608
45608 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
45651 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,45658
45652 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
45655 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
45658 :: CALL :: call :: Z :: v76 = v73.add(v74)::
45728 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,45571
45832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,45837:CD,45923:CD,45928:CD,45933:CD,45938:CD,45943:CD,45980:CD,46073:JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45837 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,45838:CD,45842:JM,45860:JM,45893:JM,45849:JM,45996
45838 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45842 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,45844:CD,45849:JM,45842:JM,45860:JM,45893:JM,45996
45844 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45849 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,45850:CD,45855:CD,45860:JM,45842:JM,45893:JM,45849:JM,45996
45850 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,57653
45855 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45860 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,45864:CD,45868:CD,45888:CD,45893:JM,45842:JM,45860:JM,45849:JM,45996
45864 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,45868:CL,58054
45868 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,45872:CD,45883
45869 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,45872
45872 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,58086:JM,58073
45883 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,58110
45888 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45893 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,45894:CD,45898:CD,45903:CD,45907:CD,45951:CD,45955:CD,45960:CD,45964:CD,45991:CD,45996:JM,45842:JM,45860:JM,45893:JM,45849
45894 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
45898 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,45907
45903 :: CALL :: call :: Z :: v66 = v64.matches()::JM,45907
45907 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,45908:JM,45907
45908 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,45907
45923 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
45928 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,45907
45933 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
45938 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
45943 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
45951 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
45955 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,45964
45960 :: CALL :: call :: Z :: v93 = v91.matches()::JM,45964
45964 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,45965:JM,45964
45965 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,45964
45980 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,45964
45991 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,45842:JM,45860:JM,45893:JM,45849:JM,45996
45996 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,45997:CD,46001:CD,46006:CD,46010
45997 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
46001 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,46010
46006 :: CALL :: call :: Z :: v27 = v25.matches()::JM,46010
46010 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,46011:CD,46023:CD,46027:CD,46028:CD,46066:JM,46010
46011 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,46010
46023 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,46027:CL,58323
46027 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,46028
46028 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,46031:CD,46040:CD,46044:CD,46052
46031 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,46010
46040 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,46044:CL,58323
46044 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,46044
46052 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
46066 :: CALL :: call :: V :: v52.setResolution(v32)::CL,58332
46073 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,46010
46157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,46165
46162 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,46165
46165 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,46170:CD,46174
46170 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,46174:CL,49484
46174 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,46176:CD,46182:CD,46186:CD,46190:CD,46197:CD,46204:CD,46211:CD,46218:CD,46225:CD,46232:CD,46239:CD,46246:CD,46253:CD,46260:CD,46269:CD,46275:CD,46282:CD,46289:CD,46296:CD,46303:CD,46310:CD,46317:CD,46324:CD,46331:CD,46338:CD,46348
46176 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
46182 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
46186 :: CALL :: call :: I :: v16 = parseInt(v14)::
46190 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,46275:CL,58343
46197 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,46282:CL,58343
46204 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,46289:CL,58343
46211 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,46296:CL,58343
46218 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,46303:CL,58343
46225 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,46310:CL,58343
46232 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,46317:CL,58343
46239 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,46324:CL,58343
46246 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,46331:CL,58343
46253 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,46338:CL,58343
46260 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
46269 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
46275 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,46276:CF,46282
46276 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
46282 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,46283:CF,46289
46283 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
46289 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,46290:CF,46296
46290 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
46296 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,46297:CF,46303
46297 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
46303 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,46304:CF,46310
46304 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
46310 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,46311:CF,46317
46311 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
46317 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,46318:CF,46324
46318 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
46324 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,46325:CF,46331
46325 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
46331 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,46332:CF,46338
46332 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
46338 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,46339
46339 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
46345 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
46348 :: CALL :: call :: Z :: v87 = v85.add(v47)::
46520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,46528:CD,46532:CD,46572:CD,46577:CD,46582:CD,46587
46528 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,46532:CL,58393
46532 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,46533:CD,46538:CD,46543:CD,46544:CD,46550:CD,46565
46533 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
46538 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,46543
46543 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,46544:CD,46550:CD,46565
46544 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
46550 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
46565 :: CALL :: call :: V :: v23.setModDate(v22)::CL,58429
46572 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
46577 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
46582 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
46587 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
46615 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,46640:CD,46728:CD,46732:CD,46741:CD,46750:CD,46759:CD,46768:CD,46776:CD,46784:CD,46792:CD,46801:CD,46810:CD,46819:CD,46828:CD,46835
46640 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
46728 :: CALL :: call :: V :: v13.setIdCode(v18)::CL,58469
46732 :: CALL :: call :: V :: v13.setChainId(v22)::CL,58480
46741 :: CALL :: call :: V :: v13.setSeqBegin(v70)::CL,58537
46750 :: CALL :: call :: V :: v13.setInsertBegin(v74)::CL,58548
46759 :: CALL :: call :: V :: v13.setSeqEnd(v77)::CL,58559
46768 :: CALL :: call :: V :: v13.setInsertEnd(v80)::CL,58570
46776 :: CALL :: call :: V :: v13.setDatabase(v83)::CL,58581
46784 :: CALL :: call :: V :: v13.setDbAccession(v86)::CL,58592
46792 :: CALL :: call :: V :: v13.setDbIdCode(v89)::CL,58603
46801 :: CALL :: call :: V :: v13.setDbSeqBegin(v92)::CL,58614
46810 :: CALL :: call :: V :: v13.setIdbnsBegin(v95)::CL,58625
46819 :: CALL :: call :: V :: v13.setDbSeqEnd(v98)::CL,58636
46828 :: CALL :: call :: V :: v13.setIdbnsEnd(v101)::CL,58647
46832 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
46835 :: CALL :: call :: Z :: v105 = v103.add(v13)::
46940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,46948:CD,46952:JM,47404
46948 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,46952:CL,49484
46952 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,46956:CD,46961:CD,46966:CD,46974:CD,46983:CD,46988:CD,46989:CD,46994:CD,46998:CD,47003:CD,47005:CD,47006:CD,47083:CD,47092:CD,47293:CD,47299:CD,47304:CD,47307:CD,47315:CD,47319:CD,47323:CD,47328:CD,47333:CD,47344:CD,47348:CD,47395:CD,47399:CD,47401:CD,47402:CD,47403:CD,47404
46956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
46961 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,47404
46966 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,47404
46974 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,47404
46983 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,46988
46988 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,46989:DD,47403
46989 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,47401
46994 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,47404
46998 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,47003
47003 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,47402
47005 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,47006
47006 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,47403:CF,47007:CD,47014:CD,47018:CD,47035:CD,47046:CD,47054:CD,47058:CD,47063:CD,47068
47007 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,47403
47014 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,47404
47018 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
47035 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
47046 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
47051 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
47054 :: CALL :: call :: I :: v55 = v53.size()::
47058 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
47063 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
47068 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
47083 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
47092 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,47404
47100 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
47105 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,47304
47110 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,47304
47115 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
47123 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,47304
47129 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,47133:CL,55989
47133 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,47134:JM,47304
47134 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
47144 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,47304
47150 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,47304
47156 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,47304
47160 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
47164 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,47304
47170 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,47304
47175 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
47198 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
47207 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
47213 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
47218 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
47223 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
47228 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
47233 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
47241 :: CALL :: call :: V :: v126.setChainId(v106)::CL,58697
47245 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,58708
47249 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,58719
47253 :: CALL :: call :: Z :: v145 = v64.add(v126)::
47260 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
47265 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
47270 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
47275 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,47404
47280 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
47288 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,47404
47293 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,47304
47299 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,47304
47304 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,47100:CD,47105:CD,47110:CD,47115:CD,47123:CD,47129:CD,47133:CD,47144:CD,47150:CD,47156:CD,47160:CD,47164:CD,47170:CD,47175:CD,47198:CD,47207:CD,47213:CD,47218:CD,47223:CD,47228:CD,47233:CD,47241:CD,47245:CD,47249:CD,47253:CD,47260:CD,47265:CD,47270:CD,47275:CD,47280:CD,47288:CD,47293:CD,47299:CD,47404
47307 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
47312 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
47315 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
47319 :: CALL :: call :: I :: v172 = v170.size()::
47323 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
47328 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
47333 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
47341 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,47399
47344 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,47399
47348 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,47399
47353 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,47399
47360 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
47361 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
47369 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
47377 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
47382 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
47387 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
47395 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,47399
47399 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,47353:CD,47360:CD,47361:CD,47369:CD,47377:CD,47382:CD,47387:CD,47395:JM,47399
47401 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,47005
47402 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,47005
47403 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
47404 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,47404:JM,47304
47544 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,47552:CD,47556:JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47552 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,47556:CL,49484
47556 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,47558:CD,47562:JM,47618:JM,47650:JM,47656:JM,47644:JM,47662
47558 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47562 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,47570:CD,47576:CD,47582:CD,47586:CD,47592:CD,47598:CD,47604:CD,47608:CD,47614:CD,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47570 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47576 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47582 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,47618:JM,47650:JM,47656:JM,47644:JM,47662
47586 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47592 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47598 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47604 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,47618:JM,47650:JM,47656:JM,47644:JM,47662
47608 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47614 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47618 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,47619:CD,47625:CD,47629:CD,47635:CD,47639:CD,47644:CD,47720:CD,47724:CD,47728:CD,47732:CD,47736:CD,47740:CD,47744:CD,47751:JM,47618:JM,47650:JM,47656:JM,47562:JM,47662
47619 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47625 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,47650:JM,47656:JM,47644:JM,47662
47629 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,47618:JM,47650:JM,47656:JM,47562:JM,47644:JM,47662
47635 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,47650:JM,47656:JM,47644:JM,47662
47639 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,47650:JM,47656:JM,47644:JM,47662
47644 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,47645:CD,47650:CD,47720:CD,47724:CD,47728:CD,47732:CD,47736:CD,47740:CD,47744:CD,47751:JM,47656:JM,47644:JM,47662
47645 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,47650:JM,47656:JM,47644:JM,47662
47650 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,47651:CD,47656:CD,47720:CD,47724:CD,47728:CD,47732:CD,47736:CD,47740:CD,47744:CD,47751:JM,47650:JM,47644:JM,47662
47651 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,47650:JM,47656:JM,47644:JM,47662
47656 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,47657:CD,47662:CD,47665:CD,47666:CD,47674:CD,47679:CD,47683:CD,47684:CD,47692:CD,47697:JM,47650:JM,47656:JM,47644
47657 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,47650:JM,47656:JM,47644:JM,47662
47662 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,47665:CD,47666:CD,47674:CD,47679:CD,47683:CD,47684:CD,47692:CD,47697:CD,47720:CD,47724:CD,47728:CD,47732:CD,47736:CD,47740:CD,47744:CD,47751
47665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
47666 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
47674 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,47618:JM,47650:JM,47656:JM,47644:JM,47662
47679 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,47650:JM,47656:JM,47644:JM,47662
47683 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
47684 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
47692 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,47618:JM,47650:JM,47656:JM,47644:JM,47662
47697 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,47650:JM,47656:JM,47644:JM,47662
47720 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
47724 :: CALL :: call :: V :: v67.setChainID1(v14)::CL,58744
47728 :: CALL :: call :: V :: v67.setResnum1(v20)::CL,58755
47732 :: CALL :: call :: V :: v67.setChainID2(v27)::CL,58766
47736 :: CALL :: call :: V :: v67.setResnum2(v33)::CL,58777
47740 :: CALL :: call :: V :: v67.setInsCode1(v63)::CL,58788
47744 :: CALL :: call :: V :: v67.setInsCode2(v66)::CL,58799
47748 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
47751 :: CALL :: call :: Z :: v77 = v75.add(v67)::
47844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,47852:CD,47856
47852 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,47856:CL,49484
47856 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,47858:CD,47864:CD,47868:CD,47874:CD,47878:CD,47884:CD,47888:CD,47894:CD,47898:CD,47904:CD,47908:CD,47914:CD,47918:CD,47924:CD,47928:CD,47934:CD,47938:CD,47944:CD,47948:CD,47954:CD,47958:CD,47964:CD,47968:CD,47974:CD,47978:CD,47984:CD,47988:CD,47994:CD,48001:JM,58864:JM,58849:JM,58834:JM,58852:JM,58837:JM,58855:JM,58840:JM,58858:JM,58843:JM,58861:JM,58846:JM,58831:CD,48019
47858 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
47864 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
47868 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
47874 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
47878 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
47884 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
47888 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
47894 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
47898 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
47904 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
47908 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
47914 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
47918 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
47924 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
47928 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
47934 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
47938 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
47944 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
47948 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
47954 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
47958 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
47964 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
47968 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
47974 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
47978 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
47984 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
47988 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
47994 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
47998 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
48001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
48019 :: CALL :: call :: Z :: v88 = v84.add(v85)::
48100 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,48101:CD,48107
48101 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,37879:JM,37960
48104 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,48107
48107 :: NORM :: compound :: Z :: return v3::CF,48101
48109 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,48117:CD,48121:JM,48127
48117 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,48121:CL,49484
48121 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,48123:CD,48127
48123 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,48127
48127 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,48135:CD,48141:CD,48145:CD,48151:CD,48157:CD,48161:CD,48167:CD,48173:CD,48177:CD,48183:CD,48189:CD,48193:CD,48199:CD,48203:CD,48209:CD,48215:CD,48221:CD,48227:CD,48233:CD,48239:CD,48245:CD,48254:JM,48127
48135 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,48127
48141 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
48145 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,48127
48151 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,48127
48157 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
48161 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,48127
48167 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,48127
48173 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
48177 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,48127
48183 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,48127
48189 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
48193 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,48127
48199 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
48203 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
48209 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
48215 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
48221 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
48227 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
48233 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
48239 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
48245 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
48251 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
48254 :: CALL :: call :: Z :: v76 = v74.add(v48)::
48335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,48343:CD,48347:JM,48353
48343 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,48347:CL,49484
48347 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,48349:CD,48353
48349 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,48353
48353 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,48361:CD,48367:CD,48371:CD,48377:CD,48383:CD,48387:CD,48393:CD,48399:CD,48403:CD,48409:CD,48415:CD,48419:CD,48425:CD,48429:CD,48435:CD,48441:CD,48447:CD,48453:CD,48459:CD,48465:CD,48471:CD,48480:JM,48353
48361 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,48353
48367 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
48371 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,48353
48377 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,48353
48383 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
48387 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,48353
48393 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,48353
48399 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
48403 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,48353
48409 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,48353
48415 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
48419 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,48353
48425 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
48429 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
48435 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
48441 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
48447 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
48453 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
48459 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
48465 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
48471 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
48477 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
48480 :: CALL :: call :: Z :: v74 = v72.add(v46)::
48561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,48569:CD,48573:JM,48579
48569 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,48573:CL,49484
48573 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,48575:CD,48579
48575 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,48579
48579 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,48587:CD,48593:CD,48597:CD,48603:CD,48609:CD,48613:CD,48619:CD,48625:CD,48629:CD,48635:CD,48641:CD,48645:CD,48651:CD,48655:CD,48661:CD,48667:CD,48673:CD,48679:CD,48685:CD,48691:CD,48697:CD,48706:JM,48579
48587 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,48579
48593 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
48597 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,48579
48603 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,48579
48609 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
48613 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,48579
48619 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,48579
48625 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
48629 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,48579
48635 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,48579
48641 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
48645 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,48579
48651 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
48655 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
48661 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
48667 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
48673 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
48679 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
48685 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
48691 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
48697 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
48703 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
48706 :: CALL :: call :: Z :: v74 = v72.add(v46)::
48787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,48793:CD,48821:CD,48825:CD,48829:CD,48833:CD,48854:CD,48882:CD,48886
48793 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,48886:JM,48825
48798 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,48886:JM,48825
48817 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,58903
48821 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,48886:JM,48825
48825 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,48798:CD,48817:CD,48821:JM,48886:JM,48825
48826 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,48833
48829 :: CALL :: call :: I :: v22 = v20.size()::JM,48833
48833 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,39111:JM,39118:CD,48845
48842 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
48845 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
48854 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,48886:JM,48825
48859 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,48886:JM,48825
48878 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,59466
48882 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,48886:JM,48825
48886 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,48859:CD,48878:CD,48882:JM,48886:JM,48825
48923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,48934:CD,48939:CD,48944:CD,48968:CD,49010:CD,49014:CD,49034:CD,49044:CD,49054:CD,49064:CD,49074:CD,49081:CD,49085:CD,49143:CD,49153:CD,49160:CD,49164:CD,49171:CD,49189:CD,49225:CD,49226:CD,49287:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
48934 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
48939 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,48944
48944 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,48952:CD,48957
48952 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,48957
48957 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,48961
48961 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,57287
48965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,48968
48968 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,48975:CD,48989:CD,48995
48975 :: CALL :: call :: V :: v21.addGroup(v22)::CL,55674
48989 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,48995:CL,55916
48995 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,49002
48996 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
48999 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
49002 :: CALL :: call :: Z :: v33 = v30.add(v31)::
49007 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,49014
49010 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,49014
49014 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,49015:CD,49024
49015 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,60132
49024 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,61096
49034 :: CALL :: call :: V :: v41.addModel(v42)::CL,57232
49044 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,61107
49054 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,61118
49064 :: CALL :: call :: V :: v50.setConnections(v51)::CL,61133
49074 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,61144
49081 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,49085:CL,61191
49085 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,49089:CD,49093:CD,49135
49089 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,49093:CL,49484
49093 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,49110:CD,49135
49107 :: EXPR :: reference :: Ljava/util/List :: v77 = p0 $this .seqResChains::JM,61259
49110 :: CALL :: call :: V :: v74.align(v76, v77)::JM,61259:CL,61222
49135 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,61278
49143 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,61421
49153 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,61858
49160 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,49164:CL,49484
49164 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,49165
49165 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,61869
49168 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,49171
49171 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,49182
49182 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,62236
49186 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,49189
49189 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,49193:CD,49197
49190 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,49197
49193 :: CALL :: call :: I :: v97 = v95.size()::JM,49197
49197 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,49207:CD,49211:CD,49212:CD,49218
49201 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
49204 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,49211
49207 :: CALL :: call :: I :: v102 = v100.size()::JM,49211
49211 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
49212 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
49218 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,62247
49222 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,49225
49225 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,49226
49226 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,49230:CD,49231:CD,49246:CD,49247
49227 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,49230
49230 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,49231
49231 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,49238:CD,49246:CD,49247
49238 :: CALL :: call :: V :: v127.setRfree(v128)::CL,62258
49243 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,49246
49246 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,49247
49247 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,49251:CD,49252:CD,49267:CD,49268
49248 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,49251
49251 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,49252
49252 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,49259:CD,49267:CD,49268
49259 :: CALL :: call :: V :: v124.setRfree(v125)::CL,62258
49264 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,49267
49267 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,49268
49268 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,49272:CD,49273
49269 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,49272
49272 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,49273
49273 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,49280
49280 :: CALL :: call :: V :: v121.setRfree(v122)::CL,62258
49284 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Structure :: v130 = p0 $this .structure::
49287 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,27731
49390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,49391:CD,49397
49391 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,37938
49394 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,49397
49397 :: NORM :: compound :: Z :: return v3::CF,49391
49399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,49418:CD,49432:CD,49436:CD,49440:CD,49444:JM,44160:JM,37767:JM,37896:JM,37649:JM,37778:JM,37907:JM,37916:JM,37660:JM,43677:JM,37789:JM,37671:JM,37800:JM,37682:JM,37811:JM,56501:JM,43574:JM,43702:JM,37693:JM,37822:JM,43588:JM,43718:JM,43208:JM,37704:JM,37833:JM,37580:JM,43602:JM,37715:JM,37588:JM,37844:JM,42965:JM,43478:JM,43607:JM,37595:JM,43611:JM,37726:JM,43615:JM,37855:JM,37601:JM,37607:JM,37866:JM,43627:JM,37741:JM,43120:JM,44147:JM,43512:JM,43002:JM,37756:JM,43517:JM,37885:JM,43647:JM,44287
49415 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,49436
49418 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,49436
49423 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,49436
49428 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,62290
49432 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,49436
49436 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,49423:CD,49428:CD,49432:JM,49436
49440 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,62446
49444 :: CALL :: call :: V :: v3.makeBonds()::CL,62507
49463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,49464:CD,49470
49464 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,37949
49467 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,49470
49470 :: NORM :: compound :: Z :: return v3::CF,49464
49472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,49479
49479 :: CALL :: call :: V :: addCharges(v3)::CL,62528
49484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,49485:CD,49491
49485 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,37968:JM,42916:JM,44379:JM,46174:JM,46952:JM,47556:JM,47856:JM,48121:JM,48347:JM,48573:JM,49093:JM,49164:JM,57665
49488 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,49491
49491 :: NORM :: compound :: Z :: return v3::CF,49485
49493 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,49502:CD,49513:CD,49524:CD,49568:CD,49572
49502 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,62845
49513 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,62845
49524 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,62845
49539 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,63153
49543 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,49547:CL,63180
49547 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,49548:CD,49553
49548 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,49553:CL,63224
49553 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::JM,63250:JM,63253:CD,49563
49563 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,63267
49568 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,49572:CL,63287
49572 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,49539:CD,49543:CD,49547:CD,49568
49606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,49607:CD,49615:CD,49620:CD,49621:CD,49626:CD,49627
49607 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,38202
49612 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,49620
49615 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,49620:JM,49626
49620 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,49626
49621 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,49626:JM,49620
49626 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,49627
49627 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,49607
49633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,49634:CD,49637:CD,49639
49634 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,38232:JM,38239:JM,50229:JM,50234:JM,56216:JM,56221:JM,86899:JM,86894:JM,86906:JM,86911:JM,88787:JM,88792:JM,88804:JM,88799
49637 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,49639
49639 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,49634
49641 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,49642:CD,49645:CD,49647
49642 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,38232:JM,38239:JM,50229:JM,50234:JM,56216:JM,56221:JM,86899:JM,86894:JM,86906:JM,86911:JM,88787:JM,88792:JM,88804:JM,88799
49645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,49647
49647 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,49642
49649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,49650:CD,49653:CD,49655
49650 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,38232:JM,38239:JM,50229:JM,50234:JM,56216:JM,56221:JM,86899:JM,86894:JM,86906:JM,86911:JM,88787:JM,88792:JM,88804:JM,88799
49653 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,49655
49655 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,49650
49657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,49658:CD,49665:CD,49670:CD,49671
49658 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,38268:JM,75141:JM,76967:JM,77073
49662 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,49670
49665 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,49670
49670 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,49671
49671 :: NORM :: compound :: Ljava/util/List :: return v7::DD,49658
49674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,49675:CD,49681
49675 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,38498:JM,38299
49678 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,49681
49681 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,49675
49683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,49684:CD,49690:CD,49694
49684 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,38331
49687 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,49694
49690 :: CALL :: call :: I :: v5 = v3.size()::JM,49694
49694 :: NORM :: compound :: I :: return v5::CF,49684
49696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,49697:CD,49701:JM,49719:JM,49709
49697 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,38337:JM,83833:JM,83887
49701 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,49705:CD,49709:CD,49710
49702 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,49709
49705 :: CALL :: call :: I :: v7 = v5.size()::JM,49709
49709 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,49710:CD,49714:CD,49719:CD,49720
49710 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,49697
49711 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,49719
49714 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,49719:JM,49701
49719 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,49720
49720 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,49697
49728 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,49729:CD,49735
49729 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,71076
49732 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,49735
49735 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,49729
49737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,49738:CD,49744:CD,49748
49738 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,38347
49744 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,49748:CL,63314
49748 :: NORM :: compound :: Z :: return v5::CF,49738
49750 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,49751:CD,49754:CD,49762:CD,49767:CD,49775:CD,49780:CD,49788:CD,49793:CD,49801:CD,49806:CD,49814:CD,49819:CD,49827:CD,49832:CD,49839:CD,49870:CD,49874:CD,49878:CD,49910:CD,49911:CD,49912
49751 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
49754 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
49759 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
49762 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
49767 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
49772 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
49775 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
49780 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
49788 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
49793 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
49801 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,49911
49806 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,49911
49811 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,49911
49814 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,49911
49819 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,49911
49824 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,49911
49827 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,49911
49832 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,49911
49836 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,49839
49839 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,49911:CF,49840:CD,49841:CD,49849:CD,49857:CD,49861:CD,49866
49840 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,49911
49841 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
49849 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,49911
49854 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,49911
49857 :: CALL :: call :: I :: v49 = v47.size()::JM,49911
49861 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,49911
49866 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,49911
49870 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,49878:CL,63323
49874 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,49878
49878 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,49912:CF,49879:CD,49880:CD,49888:CD,49893:CD,49897:CD,49901:CD,49906
49879 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,49912
49880 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
49888 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,49912
49893 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,49912:CL,63323
49897 :: CALL :: call :: I :: v69 = v67.size()::JM,49912
49901 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,49912
49906 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,49912
49910 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,49751
49911 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,49912
49912 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,49910
49940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,49941:CD,49944:CD,49952:CD,49957:CD,49965:CD,49970:CD,49978:CD,49983:CD,49990:CD,50021:CD,50022
49941 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
49944 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
49949 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
49952 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
49957 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
49965 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,50022
49970 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,50022
49975 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,50022
49978 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,50022
49983 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,50022
49987 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,49990
49990 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,50022:CF,49991:CD,49992:CD,50000:CD,50008:CD,50012:CD,50017
49991 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,50022
49992 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
50000 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,50022
50005 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,50022
50008 :: CALL :: call :: I :: v33 = v31.size()::JM,50022
50012 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,50022
50017 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,50022
50021 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,49941
50022 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,50021
50038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,50039:CD,50042:CD,50050:CD,50055:CD,50063:CD,50068:CD,50076:CD,50081:CD,50088:CD,50122:CD,50153:CD,50154:CD,50155
50039 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
50042 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
50050 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,50154
50055 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,50154
50060 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,50154
50063 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,50154
50068 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,50154
50073 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,50154
50076 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,50154
50081 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,50154
50085 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,50088
50088 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,50154:CF,50089:CD,50090:CD,50098:CD,50106:CD,50110:CD,50115
50089 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,50154
50090 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
50098 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,50154
50103 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,50154
50106 :: CALL :: call :: I :: v33 = v31.size()::JM,50154
50110 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,50154
50115 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,50154
50119 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,50122
50122 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,50155:CF,50123:CD,50124:CD,50132:CD,50140:CD,50144:CD,50149
50123 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,50155
50124 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
50132 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,50155
50137 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,50155
50140 :: CALL :: call :: I :: v50 = v48.size()::JM,50155
50144 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,50155
50149 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,50155
50153 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,50039
50154 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,50155
50155 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,50153
50177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,50178:CD,50184
50178 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,38372:JM,38377
50181 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,50184
50184 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,50178
50186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,50187:CD,50190:CD,50194:CD,50196
50187 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,39265:JM,39263
50190 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,50196:CL,63344
50194 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,50196
50196 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,50197:CD,50198
50197 :: NORM :: compound :: Z :: return #(1)::DD,50187
50198 :: NORM :: compound :: Z :: return #(0)::DD,50187
50203 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,50204:CD,50208:CD,50215:CD,50240:CD,50244:CD,50245:JM,50229:JM,50234
50204 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,39433:JM,63429:JM,63498:JM,63403:JM,63405:JM,63437:JM,63413:JM,63509:JM,63430:JM,63401:JM,63402:JM,74796:JM,74797:JM,74864:JM,83130
50208 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,50245
50212 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,50224:JM,50244
50215 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,50224:JM,50244
50220 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,50224:JM,50244
50224 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
50225 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,50229:JM,50234:CL,49633:CL,49641:CL,49649
50229 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,50229:JM,50234
50234 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,50235:JM,50224:JM,50244
50235 :: CALL :: call :: Z :: v20 = v4.add(v14)::
50240 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,50224:JM,50244
50244 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,50220:CD,50224:CD,50225:CD,50229:CD,50234:CD,50240:JM,50244:CF,50245
50245 :: NORM :: compound :: Ljava/util/List :: return v4::DD,50204
50261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,50262:CD,50268
50262 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,55718:JM,76267:JM,76272:JM,76420:JM,76425:JM,76553
50265 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,50268
50268 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,50262
50270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CD,50275:CD,50282:CD,50291:CD,50296:CD,50300:CD,50304:CD,50312:CD,50317:CD,50322:CD,50330:CD,50335
50275 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,63613
50282 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
50291 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,50296
50296 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::
50297 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::
50300 :: CALL :: call :: I :: v31 = v28.intValue()::
50304 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::
50312 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
50317 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
50322 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
50327 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
50330 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
50335 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
50398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,50406
50406 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,63701
50416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,50424
50424 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,63733
50561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,50562:CD,50565:CD,50569:CD,50574:CD,50578
50562 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,39728:JM,39736
50565 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,50982
50569 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
50574 :: CALL :: call :: Z :: v8 = v5.exists()::JM,50578
50578 :: NORM :: compound :: Z :: return v8::DD,50562
50585 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,50592
50589 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,50592
50592 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,50594:CD,50595:CD,50602:CD,50608:CD,50612
50594 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
50595 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
50602 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
50608 :: CALL :: call :: Z :: v13 = v9.exists()::JM,50612
50612 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,50613:CD,50622:CD,50627:CD,50628
50613 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,63765
50622 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,50627
50627 :: EXPR :: assign :: I :: v18 = v17.length::DD,50628
50628 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,50629
50629 :: CALL :: call :: V :: p0 $this .split()::CL,64038
50674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,50675:CD,50678:CD,50682:CD,50687:CD,50692:CD,50696:CD,50713:CD,50714:CD,50719:CD,50724:CD,50729:CD,50735:CD,50740:CD,50745:CD,50753:CD,50758:CD,50762:CD,50777:CD,50778:CD,50796:CD,50800:CD,50801:CD,50804:CD,50810:CD,50814:CD,50827:CD,50861:CD,50864:CD,50869:CD,50873:CD,50878:CD,50883:CD,50888:CD,50893:CD,50897:CD,50902:CD,50910:CD,50914:CD,50919:CD,50924
50675 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,39868
50678 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,50982
50682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
50687 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
50692 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
50696 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
50713 :: NORM :: compound :: Z :: return #(0)::DD,50675
50714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
50719 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
50724 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
50729 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
50735 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
50740 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
50745 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
50753 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,50924
50758 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,64266
50762 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,50814
50777 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,50800:DD,50804:CF,50778
50778 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
50792 :: CALL :: call :: V :: v47.println(v60)::
50796 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,50800
50800 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,50792:CD,50796
50801 :: CALL :: call :: V :: v47.flush()::
50804 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,50805:CF,50814
50805 :: CALL :: call :: V :: v53.close()::
50810 :: CALL :: call :: V :: v53.close()::
50814 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,50815
50815 :: CALL :: call :: V :: v47.close()::
50827 :: CALL :: call :: V :: v47.close()::
50861 :: NORM :: compound :: Z :: return #(1)::DD,50675
50864 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
50869 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
50873 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
50878 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
50883 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
50888 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
50893 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
50897 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
50902 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
50910 :: CALL :: call :: Z :: v113 = v14.delete()::
50914 :: NORM :: compound :: Z :: return #(0)::DD,50675
50919 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
50924 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
50982 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,50983:CD,50986:CD,50988:CD,50993:CD,51008:CD,51010:CD,51011:CD,51018:CD,51022:CD,51055:CD,51056:CD,51057:CD,51065:CD,51070:CD,51079:CD,51083
50983 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
50986 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,50993
50988 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,50993
50993 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,50994:CD,50999:CD,51004
50994 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
50999 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,50993
51004 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
51008 :: CALL :: call :: V :: initPath()::CL,31754
51010 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
51011 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
51018 :: CALL :: call :: Z :: v21 = v16.exists()::JM,51022
51022 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,51055:CD,51025:CD,51030:CD,51035:CD,51043
51025 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
51030 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
51035 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
51043 :: CALL :: call :: Z :: v32 = v16.mkdir()::
51055 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,51083:CF,51056
51056 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
51057 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
51065 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
51070 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
51079 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,51083
51083 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,50983
51122 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
51145 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,51149
51149 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
51156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,51164
51161 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
51164 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
51173 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,51178:CD,51181:CD,51188:CD,51192:CD,51196:CD,51200:CD,51204:JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51178 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,64387
51181 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,51185
51185 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
51188 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,51535:JM,51770
51192 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,51803
51196 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
51200 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,51360:JM,51650:JM,51204:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51204 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,51205:CD,51210:CD,51213:CD,51218:CD,51223:CD,51228:CD,51236:CD,51801:CD,51802:CD,51803:CD,51804:JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286
51205 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51210 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,51801:CD,51213:CD,51218:CD,51223:CD,51228:CD,51236:CD,51751:CD,51755:CD,51802:CD,51803:CD,51804
51213 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
51218 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51223 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,51360:JM,51250:JM,51650:JM,51300:JM,51588:JM,51317:JM,51445:JM,51286:JM,51244:JM,51804
51228 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,51445
51236 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,64429
51240 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51244 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,51801:CD,51245:CD,51250:CD,51751:CD,51755:CD,51802:CD,51803:CD,51804:JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51244:JM,51317:JM,51445:JM,51286
51245 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51250 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,51254:CD,51255:CD,51263:CD,51268:CD,51273:CD,51281:CD,51286:CD,51294:CD,51751:CD,51755:CD,51799:CD,51800:CD,51801:CD,51802:CD,51803:CD,51804
51254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,51255
51255 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,51255
51263 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
51268 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51273 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,51360:JM,51650:JM,51300:JM,51588:JM,51317:JM,51445:JM,51286:JM,51804
51281 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51286 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,51799:CD,51287:CD,51800
51287 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,51799:CD,51288:CD,51291
51288 :: CALL :: call :: V :: v154.clear()::
51291 :: CALL :: call :: V :: v9.clear()::
51294 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,51295:CD,51300:CD,51583:CD,51588:JM,51360:JM,51650:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51295 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51300 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,51301:CD,51305:CD,51310:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804
51301 :: CALL :: call :: V :: v9.clear()::
51305 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,51310
51310 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,51311:CD,51494:CD,51503:CD,51507:CD,51518:CD,51527:CD,51531:CD,51535:CD,51572:CD,51579:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804
51311 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,51312:CD,51317:CD,51436:CD,51440:CD,51445:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51244:JM,51250:JM,51286
51312 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51317 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,51324:CD,51327:CD,51334:CD,51338:CD,51436:CD,51440:CD,51445:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51244:JM,51250:JM,51317:JM,51286
51324 :: CALL :: call :: V :: v9.clear()::
51327 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,51348:JM,51338:JM,51405:CL,64467
51334 :: CALL :: call :: I :: v84 = v82.size()::JM,51348:JM,51338:JM,51405
51338 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,51339:CD,51343:CD,51348:CD,51349:CD,51354:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51338:JM,51405
51339 :: CALL :: call :: V :: v154.clear()::
51343 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,51348:JM,51338:JM,51405
51348 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,51354:JM,51804:JM,51406
51349 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,51354:JM,51804:JM,51406
51354 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,51355:CD,51360:CD,51394:CD,51400:CD,51405:CD,51406:CD,51407:CD,51411:CD,51417:CD,51422:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286
51355 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51360 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,51363:CD,51368:CD,51373:CD,51378:CD,51386:CD,51390:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804
51363 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
51368 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51373 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,51650:JM,51588:JM,51445:JM,51804
51378 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,51445
51386 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,64429
51390 :: CALL :: call :: V :: v154.clear()::
51394 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,51804:JM,51406
51400 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,51348:JM,51338:JM,51405
51405 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,51406
51406 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
51407 :: CALL :: call :: I :: v102 = v88.length()::
51411 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
51417 :: CALL :: call :: Z :: v106 = v9.add(v104)::
51422 :: CALL :: call :: Z :: v108 = v154.add(v99)::
51436 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51440 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,51650:JM,51588:JM,51445:JM,51804
51445 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,51446:CD,51459:CD,51472:CD,51473:CD,51801:CD,51802:CD,51803:CD,51804
51446 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,51472
51451 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,51804
51455 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
51459 :: CALL :: call :: Z :: v67 = v9.add(v65)::
51472 :: EXPR :: assign :: I :: v71 = v62.length::DD,51473
51473 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,51801:CD,51802:CD,51803:CD,51804
51494 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,51803:JM,51535:CL,64467
51503 :: CALL :: call :: I :: v125 = v121.size()::JM,51803:JM,51535
51507 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,51535
51518 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
51527 :: CALL :: call :: I :: v135 = v121.size()::JM,51803:JM,51535
51531 :: CALL :: call :: I :: v137 = v9.size()::JM,51535
51535 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,51539:CD,51543:CD,51551:CD,51555
51539 :: CALL :: call :: I :: v143 = v9.size()::
51543 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
51551 :: CALL :: call :: I :: v147 = v121.size()::JM,51803:JM,51535
51555 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
51572 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,64783
51579 :: CALL :: call :: V :: v121.clear()::JM,51803:JM,51535
51583 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51588 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,51589:CD,51597:CD,51617:CD,51624:CD,51628:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804
51589 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,51590
51590 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,64783
51597 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,66204
51617 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,51638:JM,51721:JM,51628:CL,64467
51624 :: CALL :: call :: I :: v169 = v167.size()::JM,51638:JM,51721:JM,51628
51628 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,51629:CD,51633:CD,51638:CD,51639:CD,51644:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51721:JM,51628
51629 :: CALL :: call :: V :: v154.clear()::
51633 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,51638:JM,51721:JM,51628
51638 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,51696:JM,51722:JM,51644:JM,51804
51639 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,51696:JM,51722:JM,51644:JM,51804
51644 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,51645:CD,51650:CD,51684:CD,51710:CD,51716:CD,51721:CD,51722:CD,51723:CD,51727:CD,51733:CD,51738:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804:JM,51360:JM,51300:JM,51588:JM,51240:JM,51210:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286
51645 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51650 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,51653:CD,51658:CD,51663:CD,51668:CD,51676:CD,51680:CD,51751:CD,51755:CD,51801:CD,51802:CD,51803:CD,51804
51653 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
51658 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,51360:JM,51650:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51663 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,51445
51668 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
51676 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,64429
51680 :: CALL :: call :: V :: v154.clear()::
51684 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,51685:CD,51691:CD,51696:JM,51804
51685 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,51696:JM,51722:JM,51804
51691 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,51696:JM,51804
51696 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,51697:CD,51704:JM,51804
51697 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,64783
51704 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,66204
51710 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,51804:JM,51696:JM,51722
51716 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,51638:JM,51721:JM,51628
51721 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,51722
51722 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
51723 :: CALL :: call :: I :: v192 = v173.length()::
51727 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
51733 :: CALL :: call :: Z :: v196 = v9.add(v194)::
51738 :: CALL :: call :: Z :: v198 = v154.add(v189)::
51751 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,51360:JM,51650:JM,51204:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:JM,51804
51755 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,51240:CD,51244:CD,51756:CD,51787:CD,51795:CD,51801:CD,51802:CD,51803:CD,51804:JM,51360:JM,51650:JM,51300:JM,51588:JM,51210:JM,51755:JM,51250:JM,51317:JM,51445:JM,51286
51756 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,51757:CD,51761
51757 :: CALL :: call :: I :: v202 = v154.size()::JM,51761
51761 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,51762:CD,51766:CD,51770
51762 :: CALL :: call :: I :: v204 = v154.size()::JM,51770
51766 :: CALL :: call :: I :: v206 = v9.size()::JM,51770
51770 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,51771:CD,51778
51771 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,64783
51778 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,66204
51784 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,51787
51787 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,51791
51791 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,66224
51795 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,64429
51799 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,51800:DD,51294:DD,51801
51800 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,51311:DD,51802:CF,51294
51801 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,51802:JM,51255:DD,51287:DD,51799:DD,51801
51802 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,51803:DD,51800:DD,51802
51803 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,51804:JM,51761:JM,51770:DD,51803
51804 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,51360:JM,51650:JM,51204:JM,51300:JM,51588:JM,51240:JM,51210:JM,51755:JM,51244:JM,51250:JM,51317:JM,51445:JM,51286:DD,51589:DD,51684:JM,51696:DD,51756:DD,51804
52101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,52102:CD,52109:CD,52114:CD,52115
52102 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,39802:JM,52265
52109 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,52114
52114 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,52115
52115 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,52102
52135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,52136:CD,52140:CD,52144:CD,52152:CD,52157:CD,52162:CD,52167:CD,52171:CD,52178:CD,52183:CD,52188:CD,52193:CD,52201:CD,52294:CD,52297:CD,52301
52136 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,39862
52140 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
52144 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
52152 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
52157 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
52162 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
52167 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
52171 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,52201
52178 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
52183 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
52188 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
52193 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
52201 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,52209:CD,52212:CD,52220:JM,51122:JM,64372:JM,64358:JM,51145:JM,64365:CD,52229:CD,52233:CD,52234:CD,52248:CD,52256:CD,52265
52209 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,52220:CL,66296
52212 :: CALL :: call :: V :: v55.setId(v7)::CL,66335
52220 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,52136
52229 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,51156
52233 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,52234
52234 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
52248 :: CALL :: call :: V :: v34.parse(v39)::CL,51173
52256 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,52265:CL,52101
52265 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,52136
52294 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,52301:CL,66296
52297 :: CALL :: call :: V :: v73.setId(v7)::CL,66335
52301 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,52136
53928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,53929:CD,53932:CD,53933:CD,53938:CD,53942:CD,53966:CD,53977:CD,53982:CD,54038:CD,54039:CD,54043:CD,54044:CD,54049:CD,54145:CD,54159:CD,54162:CD,54176:CD,54179:CD,54193:CD,54200:CD,54201
53929 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,41747:JM,41752:JM,42692:JM,42597:JM,42603
53932 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,54050:DD,54194:CF,53933
53933 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
53938 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,53938:JM,53942
53942 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,53955
53955 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
53966 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
53977 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,54200
53982 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,54038
53988 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,54007:JM,54199:JM,53999
53992 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,53999
53994 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,53999:JM,54007:JM,54199
53999 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,54014:CD,54000:CD,54002:CD,54007:CD,54008:CD,54015:CD,54023:CD,54028:CD,54033:CD,54199
54000 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,54007
54002 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,54007:JM,54199:JM,53999
54007 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
54008 :: CALL :: call :: Z :: v38 = v3.add(v36)::
54014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,54199
54015 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
54023 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,54199:JM,54007:JM,53999
54028 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,54199
54033 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,54199
54037 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,54201:CF,54200
54038 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,53988:CD,53992:CD,53994:CD,53999:CD,54037:CD,54199:CD,54200:CD,54201:JM,54043
54039 :: CALL :: call :: I :: v55 = v52.length()::JM,54043
54043 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,54049
54044 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,54049
54049 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,54050:CD,54083:CD,54095:CD,54099:CD,54128:CD,54132:CD,54133:CD,54137:CD,54194
54050 :: NORM :: compound :: Ljava/util/List :: return v3::DD,53929
54083 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,54128:JM,54099:JM,54132:JM,54104:JM,54108:JM,54095:JM,54133
54095 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,54128:JM,54099:JM,54132:JM,54104:JM,54108:JM,54095
54099 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,54128:JM,54099:JM,54132:JM,54104:JM,54108
54104 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,54128:JM,54132:JM,54104:JM,54108
54108 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,54114:JM,54109
54109 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,54114:JM,54109
54114 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,54115:JM,54119
54115 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,54115:JM,54119
54119 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,54120:CD,54122:JM,54128:JM,54132:JM,54104:JM,54108
54120 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
54122 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
54128 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,54128:JM,54132:JM,54104:JM,54108
54132 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,54104:CD,54108:CD,54109:CD,54114:CD,54115:CD,54119:CD,54128:JM,54132:JM,54133
54133 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,54133
54137 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
54145 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
54159 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,53929
54162 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
54176 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,53929
54179 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
54193 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,53929
54194 :: NORM :: compound :: Ljava/util/List :: return v3::DD,53929
54199 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,54200:CF,54037
54200 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,54201:JM,54043:JM,54049:DD,54199
54201 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,54037:DD,54038
54298 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,54299:CD,54302:CD,54306:CD,54311:CD,54423:CD,54424:CD,54429:CD,54434:CD,54439:CD,54448:CD,54449
54299 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,41807:JM,42713
54302 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54306 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54311 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,54312:CD,54315:CD,54320:CD,54449:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54312 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,54449
54315 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54320 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,54321:CD,54324:CD,54329:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54410:JM,54347:JM,54365:JM,54383
54321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,54449
54324 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54329 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,54330:CD,54333:CD,54338:CD,54449:JM,54320:JM,54401:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54330 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,54449
54333 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54338 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,54339:CD,54342:CD,54347:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54365:JM,54383
54339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,54449
54342 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54347 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,54348:CD,54351:CD,54356:CD,54449:JM,54320:JM,54401:JM,54338:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54348 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,54449
54351 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54356 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,54357:CD,54360:CD,54365:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54383
54357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,54449
54360 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54365 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,54366:CD,54369:CD,54374:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,54449
54369 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54374 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,54375:CD,54378:CD,54383:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365
54375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,54449
54378 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54383 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,54384:CD,54387:CD,54392:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54384 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,54449
54387 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54392 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,54393:CD,54396:CD,54401:CD,54449:JM,54320:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,54449
54396 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54401 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,54402:CD,54405:CD,54410:CD,54449:JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54347:JM,54365:JM,54383
54402 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,54449
54405 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54410 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,54411:CD,54420:CD,54449
54411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,54449
54420 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,54449
54423 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
54424 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
54429 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,54320:JM,54401:JM,54338:JM,54356:JM,54374:JM,54311:JM,54392:JM,54329:JM,54410:JM,54347:JM,54365:JM,54383
54434 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
54439 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
54448 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,54299
54449 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,54448
54517 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,54518:CD,54520:CD,54522
54518 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
54520 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,54522:DD,54523
54522 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,54523:CD,54524:CD,54527:CD,54528:CD,54529:CD,54531:CD,54540:CD,54542:CD,54551:CD,54553:CD,54562:CD,54564:CD,54573:CD,54575:CD,54584:CD,54586:CD,54595:CD,54597:CD,54606:CD,54608:CD,54617:CD,54619:CD,54628:CD,54630:CD,54639:CD,54641:CD,54650:CD,54652:CD,54661:CD,54663:CD,54674
54523 :: NORM :: compound :: [I :: return v2::DD,54518
54524 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,54527:CL,68805
54527 :: EXPR :: assign :: I :: v6 = v5.length::CF,54528
54528 :: NORM :: declaration :: [I :: v7 = new []::DD,54674
54529 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
54531 :: CALL :: call :: I :: v10 = v8.ordinal()::
54535 :: EXPR :: modify :: I :: v7[v10] = #(3)::
54540 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
54542 :: CALL :: call :: I :: v16 = v14.ordinal()::
54546 :: EXPR :: modify :: I :: v7[v16] = #(2)::
54551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
54553 :: CALL :: call :: I :: v22 = v20.ordinal()::
54557 :: EXPR :: modify :: I :: v7[v22] = #(4)::
54562 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
54564 :: CALL :: call :: I :: v28 = v26.ordinal()::
54568 :: EXPR :: modify :: I :: v7[v28] = #(5)::
54573 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
54575 :: CALL :: call :: I :: v34 = v32.ordinal()::
54579 :: EXPR :: modify :: I :: v7[v34] = #(12)::
54584 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
54586 :: CALL :: call :: I :: v40 = v38.ordinal()::
54590 :: EXPR :: modify :: I :: v7[v40] = #(1)::
54595 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
54597 :: CALL :: call :: I :: v46 = v44.ordinal()::
54601 :: EXPR :: modify :: I :: v7[v46] = #(6)::
54606 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
54608 :: CALL :: call :: I :: v52 = v50.ordinal()::
54612 :: EXPR :: modify :: I :: v7[v52] = #(7)::
54617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
54619 :: CALL :: call :: I :: v58 = v56.ordinal()::
54623 :: EXPR :: modify :: I :: v7[v58] = #(8)::
54628 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
54630 :: CALL :: call :: I :: v64 = v62.ordinal()::
54634 :: EXPR :: modify :: I :: v7[v64] = #(9)::
54639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
54641 :: CALL :: call :: I :: v70 = v68.ordinal()::
54645 :: EXPR :: modify :: I :: v7[v70] = #(13)::
54650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
54652 :: CALL :: call :: I :: v76 = v74.ordinal()::
54656 :: EXPR :: modify :: I :: v7[v76] = #(10)::
54661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
54663 :: CALL :: call :: I :: v82 = v80.ordinal()::
54667 :: EXPR :: modify :: I :: v7[v82] = #(11)::
54674 :: NORM :: compound :: [I :: return v7::DD,54518
54794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,54799:CD,54803:JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54799 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54803 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,54805:CD,54809:JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54805 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54809 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,54810:CD,54816:CD,54820:CD,54824:CD,54828:CD,54882:CD,54886:CD,54909:JM,54848:JM,54896:JM,54834:JM,54803:JM,54854:JM,54871:JM,54809:JM,54905:JM,54877
54810 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54816 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54820 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54809:JM,54905:JM,54828:JM,54877
54824 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54828 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,54909
54830 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54834 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,54860:JM,54866:JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54835 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54840 :: CALL :: call :: V :: v10.add(v31)::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54844 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54848 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,54850:CD,54854:CD,54855:CD,54860:CD,54907:JM,54848:JM,54896:JM,54834:JM,54886:JM,54871:JM,54905:JM,54828:JM,54877
54850 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54854 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,54907
54855 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,54860
54860 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,54840:CD,54844:CD,54848:CD,54861:CD,54866:CD,54908:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54861 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,54866
54866 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,54908:CD,54867:CD,54871:CD,54878:CD,54882:CD,54886:CD,54909:JM,54848:JM,54896:JM,54834:JM,54854:JM,54905:JM,54828:JM,54877
54867 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54871 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,54873:CD,54877:CD,54878:CD,54882:CD,54886:CD,54908:CD,54909:JM,54848:JM,54896:JM,54834:JM,54854:JM,54871:JM,54905:JM,54828
54873 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54877 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,54908
54878 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54882 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54886 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,54830:CD,54834:CD,54835:CD,54855:CD,54860:CD,54887:CD,54901:CD,54905:CD,54907:JM,54848:JM,54896:JM,54803:JM,54886:JM,54854:JM,54871:JM,54828:JM,54877
54887 :: CALL :: call :: V :: v10.add(v42)::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54892 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54896 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54897 :: CALL :: call :: V :: v10.add(v48)::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54901 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54905 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,54892:CD,54896:CD,54897:CD,54901:JM,54848:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877
54907 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,54848:JM,54896:JM,54834:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877:JM,54860:JM,54866:DD,54908
54908 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877:DD,54909
54909 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,54848:JM,54896:JM,54834:JM,54803:JM,54886:JM,54854:JM,54871:JM,54905:JM,54828:JM,54877:DD,54907
55084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,55085:CD,55088:CD,55092:CD,55097:CD,55098:CD,55102:CD,55108
55085 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
55088 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,55092:JM,55108:JM,55097:JM,55098:JM,55102
55092 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,55092:JM,55108:JM,55097:JM,55098:JM,55102
55097 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,55092:JM,55108:JM,55097:JM,55102:JM,55098
55098 :: CALL :: call :: I :: v12 = v4.length()::JM,55092:JM,55108:JM,55097:JM,55098:JM,55102
55102 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,55092:JM,55108:JM,55097:JM,55098:JM,55102
55108 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,55085
55137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
55182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::
55617 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
55620 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,55622
55622 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
55625 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,55629
55629 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
55632 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,55636
55636 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
55639 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,55643
55643 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
55646 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
55663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,55668
55668 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
55674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,55679:CD,55683:CD,55687:CD,55701:CD,55705:CD,55709:CD,55714:CD,55718:CD,55723:CD,55855:JM,55833
55679 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,56647
55683 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,55705:CL,63323
55687 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,55705
55692 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,55705
55697 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,56647
55701 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,55705
55705 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,55692:CD,55697:CD,55701:JM,55705
55706 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
55709 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,55833
55714 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,55718:CL,50261
55718 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,55855:CD,55719
55719 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,55855:CL,63613
55723 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,55727:CD,55731:CD,55732:CD,55739:CD,55744
55724 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,55731
55727 :: CALL :: call :: I :: v27 = v25.size()::JM,55731
55731 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
55732 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
55739 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,55744
55744 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,55774:CD,55779:CD,55780:CD,55784:CD,55804:CD,55809:CD,55810:CD,55814:CD,55833:CD,55834:CD,55848
55768 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
55774 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,55779
55779 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
55780 :: CALL :: call :: I :: v54 = v52.intValue()::
55784 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
55798 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
55804 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,55809
55809 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
55810 :: CALL :: call :: I :: v67 = v65.intValue()::
55814 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
55833 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,55834
55834 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,55838
55838 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
55848 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
55855 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,55723
55916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,55917:CD,55941:CD,55945:CD,55947:JM,55938:JM,55928
55917 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,42992:JM,43778:JM,44171:JM,44255:JM,44421:JM,48995
55923 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,55938:JM,55928:JM,55945
55928 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,55939
55929 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,55938:CL,27854
55933 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,55938:JM,55928:JM,55945
55938 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,55939:CD,55940:CD,55941:CD,55945:CD,55947
55939 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,55917
55940 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,55947
55941 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,55938:JM,55928:JM,55945
55945 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,55923:CD,55928:CD,55929:CD,55933:CD,55938:CD,55946:JM,55945
55946 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,55917
55947 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,55938:JM,55928:DD,55940:DD,55945
55972 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
55975 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
55978 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
55989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,55990:CD,55993:CD,55997:CD,56034:CD,56036
55990 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,43130:JM,47133
55993 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,56036:JM,55997:CL,69721
55997 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,56036:CD,55998:CD,56002:CD,56006
55998 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
56002 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,56006:CL,69736
56006 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,56009:CD,56014:CD,56015:CD,56024:CD,56030:CD,56035:CD,56036
56009 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,56014
56014 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,56015:DD,56035
56015 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,56035:CD,56018:CD,56023
56018 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,56023
56023 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,56035
56024 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,56036:CD,56025
56025 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,56036
56030 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,56036
56034 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,55990
56035 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,56024:DD,56036
56036 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,56034
56058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,56059:CD,56065:CD,56069:JM,56080:JM,56085
56059 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,43152:JM,43184:JM,43260:JM,44208:JM,56578
56065 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,56069:JM,56079:CL,69772
56069 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,56070:CD,56074:CD,56078:CD,56080:CD,56109:CD,56110:JM,56079
56070 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::JM,56079:CL,30258
56074 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,56078:CL,70005
56078 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,56079:CD,56080:CD,56109:CD,56110
56079 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,56059
56080 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,56086:CD,56081:CD,56085:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,56110
56081 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,56085
56085 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,56086:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,56091:CD,56095:CD,56110
56086 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,56110
56091 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,56095:CL,69736
56095 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,56101:CF,56096:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,56105:CD,56110
56096 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,56110
56101 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,56110
56105 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,70146
56109 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,56059
56110 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,56109
56136 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,56154
56154 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
56167 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,56172
56172 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
56178 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,56183
56183 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
56189 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,56194:CD,56198:CD,56203:JM,56245
56194 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,56203:CL,28213
56198 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,56203
56203 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,56205:CD,56209:CD,56232:CD,56259:JM,56245
56205 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,56245:JM,56209:CL,30258
56209 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,56210:CD,56214:CD,56216:CD,56221:CD,56223:CD,56227:CD,56231:CD,56259:JM,56245
56210 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,56216:JM,56221:CL,49633:CL,49641:CL,49649
56214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,56216:JM,56221
56216 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,56216:JM,56221
56221 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,56259
56223 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::JM,56245:CL,30258
56227 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,56231:CL,70157
56231 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,56259
56232 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,56236:CD,56240:CD,56245
56236 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,56245:CL,70166
56240 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,56245
56245 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,56249:CD,56253
56249 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,70166
56253 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,56245
56259 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,56232
56283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,56290:CD,56291:CD,56302:CD,56303:CD,56311:CD,56315:CD,56338:CD,56352
56287 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,56290
56290 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,56291
56291 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,56295:CD,56296
56292 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,56295
56295 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
56296 :: CALL :: call :: V :: v7.trimToSize()::
56299 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,56302
56302 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,56303
56303 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,56307:CD,56308
56304 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,56307
56307 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
56308 :: CALL :: call :: V :: v12.trimToSize()::
56311 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,56315:CL,70175
56315 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,56316:CD,56320:CD,56333:CD,56337:CF,56338
56316 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,56337:CL,63323
56320 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,56337
56325 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,56337
56330 :: CALL :: call :: V :: v24.trimToSize()::CL,56283
56333 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,56337
56337 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,56325:CD,56330:CD,56333:JM,56337:CF,56338
56338 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,56346
56346 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
56349 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,56352
56352 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,56353
56353 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,56361
56361 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
56392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,56393:CD,56403:CD,56407:CD,56411:JM,56427:JM,56477:JM,44160:JM,43588:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,43602:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43574:JM,43702:JM,43512:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
56393 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,43782
56403 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,56411:CL,70238
56407 :: CALL :: call :: I :: v11 = v9.size()::JM,56411
56411 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,56412:CD,56418:CD,56422:CD,56427:CD,56435:CD,56439:CD,56484:CD,56488:JM,56411
56412 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,56411
56418 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,56427:CL,70247
56422 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,56427:JM,56477
56427 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,56431:CD,56435:CD,56439:CD,56484:CD,56488
56428 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,56431
56431 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,56393
56435 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,56448:JM,56488:CL,63323
56439 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,56448:JM,56488
56444 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,56448:JM,56488
56448 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,56478
56449 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,56483:JM,56457:CL,70238
56453 :: CALL :: call :: I :: v33 = v31.size()::JM,56483:JM,56457
56457 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,56458:CD,56479:CD,56483:CD,56484:CD,56488:JM,56457:JM,56448
56458 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,56483:JM,56457
56463 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,56483
56468 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,56477:CL,70247
56472 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,56477:JM,56427
56477 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,56478:CD,56479:CD,56483
56478 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,56393
56479 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,56483
56483 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,56463:CD,56468:CD,56472:CD,56477:CD,56484:CD,56488:JM,56483:JM,56448
56484 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,56448:JM,56488
56488 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,56444:CD,56448:CD,56449:CD,56453:CD,56457:CD,56492:CD,56496:CD,56501:JM,56488
56492 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,56501:CL,28213
56496 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,44160:JM,43718:JM,37767:JM,43208:JM,37704:JM,37896:JM,37833:JM,37649:JM,37778:JM,37715:JM,37907:JM,37844:JM,43607:JM,43611:JM,37660:JM,37789:JM,37726:JM,43615:JM,37855:JM,37671:JM,37800:JM,37866:JM,37741:JM,43120:JM,37682:JM,44147:JM,37811:JM,56501:JM,43702:JM,37756:JM,43517:JM,37693:JM,37885:JM,37822:JM,44287
56501 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,56505:CD,56509:CD,56513:CD,56549:CD,56556:CD,56567:CD,56574:CD,56578
56505 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,56513:CL,70238
56509 :: CALL :: call :: I :: v64 = v62.size()::JM,56513
56513 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,56517:CD,56521:CD,56525:CD,56526:CD,56530:CD,56534:CD,56538:CD,56544:CD,56548
56514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,56517
56517 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,56393
56521 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,56525:CL,70410:CL,70268:CL,70585
56525 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,56548:CF,56526
56526 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
56530 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,70741
56534 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,63323
56538 :: CALL :: call :: V :: v73.clear()::
56544 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,70827
56548 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,56393
56549 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,56578:CL,56058
56556 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,56136:CL,56167
56567 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,56178
56574 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,70827
56578 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,56393
56638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,56639:CD,56645
56639 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,43340
56642 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,56645
56645 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,56639
56647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,56658:JM,56652
56652 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
56655 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,56658
56658 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,56666
56666 :: CALL :: call :: V :: v6.setChainId(v8)::CL,58697
56677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,56687:CD,56719:CD,56723:CD,56727:CD,56735
56681 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
56687 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::JM,56691:CL,70859
56691 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
56698 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,49657
56703 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,70859
56710 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,70906
56715 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,56735
56719 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,56723:CL,70984
56723 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,56698:CD,56703:CD,56710:CD,56715:CD,56719:CD,56735
56727 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::JM,56731:CL,70997
56731 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v22::
56735 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,56715:DD,56723
56756 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,56757:CD,56763
56757 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,43494:JM,43502
56760 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,56763
56763 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,56757
56772 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
56775 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,56777
56777 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
56780 :: NORM :: declaration :: [D :: v7 = new []::DD,56781
56781 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
56784 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
56787 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
56790 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
56793 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
56796 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
56799 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
56822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,56827
56827 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
56833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,56838:JM,56847
56838 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,56843:JM,56838:JM,56847
56839 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
56843 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,56838:JM,56847
56847 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
56857 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,56862
56862 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
56868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCoords([])::JM,56873
56873 :: EXPR :: modify :: [D :: p0 $this .coords = p1 $c ::
56879 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,56884
56884 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
56890 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,56895
56895 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
56901 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,56907:CD,56911:CD,56919:CD,56920:CD,56925:CD,56930
56907 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
56911 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
56919 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
56920 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
56925 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
56930 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
56945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,56950
56950 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
56956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,56961:CD,56968:CD,56973:CD,56977:CD,56985
56961 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,71159
56965 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
56968 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
56973 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,56977:CL,71170
56977 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,56978
56978 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,71179
56982 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,56985
56985 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,56993:CD,56999:CD,57000
56993 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,56999
56999 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,57000
57000 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,57001:CD,57005:CD,57009:CD,57031:CD,57036:CD,57040:CD,57045:CD,57050:CD,57055:CD,57060:CD,57064:CD,57069:CD,57074:CD,57078:CD,57083:CD,57088:CD,57097
57001 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,57009:JM,57097:CL,70247
57005 :: CALL :: call :: C :: v24 = v22.charValue()::JM,57009:JM,57097
57009 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,57097:CF,57010:CD,57015:CD,57020:CD,57025
57010 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,57097
57015 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,57097
57020 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,57097
57025 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,57097
57031 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
57036 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,57137
57040 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
57045 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
57050 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
57055 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
57060 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,50038:CL,49940:CL,49750
57064 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
57069 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
57074 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,71190
57078 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
57083 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
57088 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
57097 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
57137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,57138:CD,57144
57138 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,57193:JM,71069:JM,76891
57141 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,57144
57144 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57138
57146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,57147:CD,57154:JM,57193
57147 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,43764:JM,63189:JM,63195:JM,63201:JM,63207
57151 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,57154
57154 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,57158:CD,57162:CD,57167:CD,57168:CD,57174:CD,57195:CD,57199
57158 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,57193
57162 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,57167
57167 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,57168
57168 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,57169:CD,57170
57169 :: NORM :: compound :: Z :: return #(1)::DD,57147
57170 :: NORM :: compound :: Z :: return #(0)::DD,57147
57171 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,57199
57174 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,57199
57179 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,57199
57184 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,57193:CL,57137
57188 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,57193
57193 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,57194:CD,57195:CD,57199
57194 :: NORM :: compound :: Z :: return #(1)::DD,57147
57195 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,57199
57199 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,57179:CD,57184:CD,57188:CD,57193:CD,57200:JM,57199
57200 :: NORM :: compound :: Z :: return #(0)::DD,57147
57221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,57226
57226 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
57232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,57237:CD,57251:CD,57255:CD,57259
57237 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,57255
57242 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,57255
57247 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,71199
57251 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,57255
57255 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,57242:CD,57247:CD,57251:JM,57255
57256 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
57259 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,57255
57276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,57281
57281 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
57287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,57292
57292 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
57298 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,57303
57303 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
57309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,57314
57314 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
57320 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,57321:CD,57327
57321 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,44760
57324 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,57327
57327 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57321
57329 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,57334
57334 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
57340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,57341:CD,57347
57341 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,44864:JM,44852:JM,44858
57344 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,57347
57347 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,57341
57349 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,57354
57354 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
57360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,57365:CD,57369
57365 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,57379:JM,57369:JM,57375:CL,71210
57369 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,57374
57371 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,57374
57374 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,57375:JM,57379
57375 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,57379:JM,57375
57379 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
57413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,57418
57418 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
57424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,57429
57429 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
57435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,57440
57440 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
57446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,57458:JM,57451:CD,57454
57451 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
57454 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,57458:JM,57454
57458 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
57466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,57478:JM,57471:CD,57474
57471 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
57474 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,57474:JM,57478
57478 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
57486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,57491:JM,57498:CD,57494
57491 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
57494 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,57494:JM,57498
57498 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
57506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,57507:CD,57510:CD,57514:CD,57515
57507 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,45329
57510 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,57514:CL,71225
57514 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,57515
57515 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,57516:CD,57520:CD,57521:CD,57529
57516 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,57520:CL,71234
57520 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,57521
57521 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,57522:CD,57526:CD,57527:CD,57529
57522 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,57526:CL,71243
57526 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,57527
57527 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,57528:CD,57529
57528 :: NORM :: compound :: Z :: return #(0)::CF,57507
57529 :: NORM :: compound :: Z :: return #(1)::CF,57507
57541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,57546
57546 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
57552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,57553:CD,57556:JM,57568:JM,57561:JM,57611
57553 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,45353
57556 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,57557:CD,57561:CD,57562:JM,57568:JM,57611
57557 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,57568:JM,57561:JM,57611
57561 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,57562:CD,57563:CD,57568:CD,57569:CD,57570:CD,57576:CD,57584:CD,57589:CD,57593:CD,57598:CD,57604:CD,57609:CD,57610:CD,57611:JM,57561
57562 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,57553
57563 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,57568:JM,57561:JM,57611
57568 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,57611
57569 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
57570 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
57576 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
57584 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
57589 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
57593 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
57598 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
57604 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,57609
57609 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,57610
57610 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,57553
57611 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,57569
57631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,57636
57636 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
57642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,57647
57647 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
57653 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,57661:CD,57665
57661 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,57665:CL,49484
57665 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,57667:CD,57672:CD,57677:CD,57678
57667 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
57672 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,57677
57677 :: EXPR :: assign :: I :: v14 = v13.length::DD,57678
57678 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,57683:CD,57688:CD,57842:CD,57847:CD,57892:CD,57897
57679 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,57688
57683 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,57688
57688 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,57693:CD,57699:CD,57704:CD,57709:CD,57714:CD,57725:CD,57730:CD,57737
57689 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,57750
57693 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,57750
57699 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
57704 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,57750
57709 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,57750
57714 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
57725 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,57730
57730 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,57731
57731 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
57734 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,57737
57737 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,57741:CD,57745:CD,57750:CD,57752:JM,71286:JM,71273:JM,71289:CD,57777:CD,57785:CD,57793:CD,57798:CD,57808:CD,57816:CD,57820:CD,57825:CD,57830
57741 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,57750:CL,71252
57745 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,57750
57750 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,57752:JM,71286:JM,71273:JM,71289:CD,57777:CD,57785:CD,57793:CD,57798:CD,57808:CD,57816:CD,57820:CD,57825:CD,57830
57752 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
57777 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
57785 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
57793 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
57798 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
57808 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
57813 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
57816 :: CALL :: call :: I :: v74 = v72.size()::
57820 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
57825 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
57830 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
57838 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,57847
57842 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,57847
57847 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,57852:CD,57858:CD,57863:CD,57868:CD,57873:CD,57884
57848 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
57852 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
57858 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
57863 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
57868 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
57873 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
57884 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,71306
57888 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,57897
57892 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,57897
57897 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,57902:CD,57908:CD,57913:CD,57918:CD,57923:CD,57934:CD,57940:CD,57948:CD,57952:CD,57957:CD,57970
57898 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
57902 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
57908 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
57913 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
57918 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
57923 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
57934 :: CALL :: call :: V :: v121.setDescription(v109)::CL,71317
57940 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
57948 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,71252
57952 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
57957 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
57970 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,71328
58054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,58055:CD,58061
58055 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,45868
58058 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,58061
58061 :: NORM :: compound :: Z :: return v3::CF,58055
58070 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
58073 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,58077
58077 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
58080 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
58083 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
58086 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,58090
58090 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
58093 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
58110 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,58115:CD,58120:JM,58211:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58115 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58120 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,58121:CD,58124:CD,58129:CD,58133:CD,58137:CD,58145:CD,58150
58121 :: CALL :: call :: V :: p0 $this .initialize()::CL,71350
58124 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58129 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,58211:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58133 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,58141
58137 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,58141
58141 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
58145 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,58150
58150 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,58151:CD,58156:CD,58157
58151 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,58156
58156 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,58157:CD,58166:CD,58171:JM,58211:JM,58120:JM,58188:JM,58205:JM,58141:JM,58222
58157 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,58162:CL,71396
58162 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
58166 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58171 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,58175:CD,58178:CD,58183:CD,58188:JM,58211:JM,58120:JM,58171:JM,58205:JM,58141:JM,58222
58172 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
58175 :: CALL :: call :: V :: v39.clear()::
58178 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,71441
58183 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58188 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,58192:CD,58195:CD,58200:CD,58205:JM,58211:JM,58120:JM,58171:JM,58188:JM,58141:JM,58222
58189 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
58192 :: CALL :: call :: V :: v36.clear()::
58195 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,71441
58200 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58205 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,58206:CD,58211:CD,58217:CD,58222:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141
58206 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58211 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,58212:CD,58217:CD,58222:JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141
58212 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,71441
58217 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,58211:JM,58120:JM,58171:JM,58188:JM,58205:JM,58141:JM,58222
58222 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,58223:CD,58228
58223 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,58228:CL,71492
58228 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,58229:CD,58235
58229 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,71648
58232 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,58235
58235 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,58236
58236 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
58323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,58324:CD,58330
58324 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,46027:JM,46044
58327 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,58330
58330 :: NORM :: compound :: F :: return v3::CF,58324
58332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,58337
58337 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
58343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,58344:CD,58350:CD,58356:CD,58360:CD,58365:CD,58375:CD,58376:JM,58370
58344 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,46275:JM,46282:JM,46289:JM,46296:JM,46303:JM,46310:JM,46317:JM,46324:JM,46331:JM,46338
58350 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,58370:JM,58365
58356 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,58370:JM,58365
58360 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,58370:JM,58365
58365 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,58376:CD,58366:CD,58370:JM,58365
58366 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,58370:JM,58365
58370 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,58370:DD,58376
58375 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,58344
58376 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,58375
58393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,58394:CD,58400
58394 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,46532
58397 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,58400
58400 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,58394
58429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,58434
58434 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
58447 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
58450 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
58453 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
58456 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
58469 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,58474
58474 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
58480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,58485
58485 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
58537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,58542
58542 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
58548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,58553
58553 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
58559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,58564
58564 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
58570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,58575
58575 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
58581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,58586
58586 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
58592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,58597
58597 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
58603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,58608
58608 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
58614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,58619
58619 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
58625 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,58630
58630 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
58636 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,58641
58641 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
58647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,58652
58652 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
58697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,58702
58702 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
58708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,58713
58713 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
58719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,58724
58724 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
58744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID1(java.lang.String)::JM,58749
58749 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p1 $chainID1 ::
58755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum1(java.lang.String)::JM,58760
58760 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum1 = p1 $resnum1 ::
58766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID2(java.lang.String)::JM,58771
58771 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p1 $chainID2 ::
58777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum2(java.lang.String)::JM,58782
58782 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum2 = p1 $resnum2 ::
58788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode1(java.lang.String)::JM,58793
58793 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode1 = p1 $insCode1 ::
58799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode2(java.lang.String)::JM,58804
58804 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode2 = p1 $insCode2 ::
58831 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name1 = p1 $name1 ::
58834 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc1 = p2 $altLoc1 ::
58837 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName1 = p3 $resName1 ::
58840 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p4 $chainID1 ::
58843 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq1 = p5 $resSeq1 ::
58846 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode1 = p6 $iCode1 ::
58849 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name2 = p7 $name2 ::
58852 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc2 = p8 $altLoc2 ::
58855 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName2 = p9 $resName2 ::
58858 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p10 $chainID2 ::
58861 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq2 = p11 $resSeq2 ::
58864 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode2 = p12 $iCode2 ::
58903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,58910:CD,58918:CD,58923:CD,58933:CD,58941:CD,58946:CD,58956:CD,58964:CD,58969:CD,58979:CD,58987:CD,58992:CD,59003:CD,59010:CD,59014:CD,59020:CD,59024:CD,59029:CD,59030:CD,59350
58910 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
58915 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
58918 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
58923 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
58933 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
58938 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
58941 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
58946 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
58956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
58961 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
58964 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
58969 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
58979 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
58987 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
58992 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
59000 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,59003
59003 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,59350:CD,59004
59004 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,59350
59010 :: CALL :: call :: I :: v52 = v49.length()::
59014 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
59020 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
59024 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,59029
59029 :: EXPR :: assign :: I :: v60 = v59.length::DD,59030:DD,59066
59030 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,59031:CD,59037:CD,59042:CD,59066
59031 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,59042
59033 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,59042
59037 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,59042
59042 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,59053:CD,59058:CD,59066:CD,59087:CD,59093:CD,59097:CD,59311:CD,59315:CD,59319
59043 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,59047
59047 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
59050 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,59058
59053 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,59058
59058 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
59059 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,59062
59062 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
59066 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,59071:CD,59076:CD,59087:CD,59093:CD,59097:CD,59311:CD,59315:CD,59319
59067 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,59076
59071 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,59076
59076 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,59087:CD,59093:CD,59097:CD,59311:CD,59315:CD,59319
59087 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
59093 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
59097 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,59261:JM,59315
59103 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,59261
59107 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,59115
59110 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,59115
59115 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
59116 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,59119
59119 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
59122 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,59133
59125 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,59133
59128 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,59133
59133 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,59134:CD,59139:CD,59144
59134 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,59144
59136 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,59144
59139 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,59144
59144 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,59147:CD,59155:CD,59160:CD,59170:CD,59175:CD,59180:CD,59191:CD,59192:CD,59200:CD,59205:CD,59209:CD,59219:CD,59227:CD,59232
59147 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
59152 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
59155 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
59160 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
59170 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
59175 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,59261
59180 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
59188 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,59214
59191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,59214
59192 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
59200 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,59214
59205 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,59214
59209 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,59214
59214 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
59219 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
59224 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
59227 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
59232 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
59240 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,59251
59243 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,59251
59246 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,59251
59251 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,59255:CD,59260
59252 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,59260
59255 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,59260
59260 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,59271:CD,59282:CD,59283:CD,59291:CD,59296
59261 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
59271 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,71910
59276 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,59279
59279 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
59282 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,59300
59283 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
59291 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,59300
59296 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,59300
59300 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
59311 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,59315
59315 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,59103:CD,59110:CD,59115:CD,59128:CD,59133:CD,59246:CD,59251:CD,59311:JM,59261
59316 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,59319
59319 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,59326:CD,59337
59326 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,71910
59334 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,59337
59337 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,59344
59338 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
59341 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
59344 :: CALL :: call :: Z :: v173 = v170.add(v171)::
59350 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
59466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,59471:CD,59477:CD,59483:CD,59488:CD,59493:CD,59503:CD,59511:CD,59516:CD,59526:CD,59534:CD,59539:CD,59549:CD,59557:CD,59562:CD,59572:CD,59580:CD,59585:CD,59593:CD,59597:CD,59604:CD,59608:CD,59616:CD,59621:CD,59626:CD,59631:CD,59639:CD,59648:CD,59653:CD,59759:CD,59765:CD,59769:CD,59963:CD,59967:CD,59971:CD,59987:JM,59731
59471 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,59987:JM,59731:JM,59597
59477 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,59987:JM,59731:JM,59597
59483 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
59488 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,59731
59493 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,59731
59503 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
59508 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
59511 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
59516 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
59526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
59531 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
59534 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
59539 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
59549 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
59554 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
59557 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
59562 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
59572 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
59580 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
59585 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
59593 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,59987:JM,59731:JM,59597
59597 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,59987:CD,59598:JM,59731:JM,59597
59598 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,59987:JM,59731:JM,59597
59604 :: CALL :: call :: I :: v67 = v65.length()::
59608 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
59616 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
59621 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
59626 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
59631 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
59639 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,59689
59644 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,59653
59648 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,59653
59653 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,59654:CD,59660:CD,59665:CD,59689:CD,59690
59654 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,59665
59656 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,59665
59660 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,59665
59665 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,59676:CD,59681:CD,59689:CD,59690
59666 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,59670
59670 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
59673 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,59681
59676 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,59681
59681 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
59682 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,59685
59685 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
59689 :: EXPR :: assign :: I :: v93 = v84.length::DD,59690
59690 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,59691:CD,59697:CD,59702:CD,59726:CD,59731
59691 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,59702
59693 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,59702
59697 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,59702
59702 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,59713:CD,59718:CD,59726:CD,59731
59703 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,59707
59707 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
59710 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,59718
59713 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,59718
59718 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
59719 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,59722
59722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
59726 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,59731
59731 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,59744:CD,59749
59738 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
59741 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,59749
59744 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,59749
59749 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
59750 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,59753
59753 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
59759 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
59765 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
59769 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,59913:JM,59967
59775 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,59913
59779 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,59787
59782 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,59787
59787 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
59788 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,59791
59791 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
59794 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,59805
59797 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,59805
59800 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,59805
59805 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,59806:CD,59811:CD,59816
59806 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,59816
59808 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,59816
59811 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,59816
59816 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,59819:CD,59827:CD,59832:CD,59843:CD,59844:CD,59852:CD,59857:CD,59861:CD,59871:CD,59879:CD,59884
59819 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
59824 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
59827 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
59832 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
59840 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,59866
59843 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,59866
59844 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
59852 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,59866
59857 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,59866
59861 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,59866
59866 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
59871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
59876 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
59879 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
59884 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
59892 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,59903
59895 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,59903
59898 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,59903
59903 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,59907:CD,59912
59904 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,59912
59907 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,59912
59912 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,59923:CD,59934:CD,59935:CD,59943:CD,59948
59913 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
59923 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,72336
59928 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,59931
59931 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
59934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,59952
59935 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
59943 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,59952
59948 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,59952
59952 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
59963 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,59967
59967 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,59775:CD,59782:CD,59787:CD,59800:CD,59805:CD,59898:CD,59903:CD,59963:JM,59913
59968 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,59971
59971 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,59978
59978 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,72336
59987 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
60132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,73040:JM,73033:CD,60149:CD,60153:CD,60157:CD,60161:CD,60165:CD,60169:CD,60173:CD,60177:CD,60184:CD,60699:CD,60703:CD,60707:CD,60711:CD,60716:CD,60723:CD,60727:CD,60732:CD,60739:CD,60743:CD,60748:JM,73666:JM,73540:JM,73671:JM,73545:JM,73833:JM,73834:JM,73578:JM,73517:JM,73710:JM,73646:JM,73651:JM,73522:JM,73842:JM,73527:JM,73847:JM,73817:JM,73626:JM,73532:JM,73631:CD,60764:CD,60771:CD,60775:CD,60780:CD,60799:CD,60810:CD,60821:CD,60828:CD,60832:CD,60836:CD,60843:CD,60847:CD,60851:CD,60858:CD,60862:CD,60866:CD,60873:CD,60877:CD,60881:CD,60888:CD,60892:CD,60896:CD,60911
60149 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
60153 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
60157 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
60161 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
60165 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
60169 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
60173 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
60177 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
60181 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,60193:JM,60703
60184 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,60193:JM,60703
60189 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,60193:JM,60703
60193 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,60198:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398:JM,60521
60194 :: CALL :: call :: I :: v34 = v32.length()::JM,60198
60198 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,60201:CD,60206:CD,60211:CD,60220:CD,60226:CD,60231:CD,60280:CD,60285:CD,60339:CD,60344:CD,60393:CD,60398:CD,60452:CD,60457:CD,60511:CD,60516:JM,60596:JM,60650
60201 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
60206 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
60211 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
60220 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60226 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60231 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,60232:CD,60236:CD,60242:CD,60246:CD,60253:CD,60258:CD,60262:CD,60267:CD,60272:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60232 :: CALL :: call :: I :: v44 = v32.length()::
60236 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
60242 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
60246 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
60253 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
60258 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
60262 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
60267 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
60272 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
60280 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60285 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,60286:CD,60290:CD,60296:CD,60300:CD,60305:CD,60312:CD,60317:CD,60321:CD,60326:CD,60331:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60286 :: CALL :: call :: I :: v69 = v32.length()::
60290 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
60296 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
60300 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
60305 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
60312 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
60317 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
60321 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
60326 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
60331 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
60339 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60344 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,60345:CD,60349:CD,60355:CD,60359:CD,60366:CD,60371:CD,60375:CD,60380:CD,60385:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60345 :: CALL :: call :: I :: v96 = v32.length()::
60349 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
60355 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
60359 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
60366 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
60371 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
60375 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
60380 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
60385 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
60393 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60398 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,60399:CD,60403:CD,60409:CD,60413:CD,60418:CD,60425:CD,60430:CD,60434:CD,60439:CD,60444:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60399 :: CALL :: call :: I :: v120 = v32.length()::
60403 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
60409 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
60413 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
60418 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
60425 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
60430 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
60434 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
60439 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
60444 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
60452 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60457 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,60458:CD,60462:CD,60468:CD,60472:CD,60477:CD,60484:CD,60489:CD,60493:CD,60498:CD,60503:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60458 :: CALL :: call :: I :: v146 = v32.length()::
60462 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
60468 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
60472 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
60477 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
60484 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
60489 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
60493 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
60498 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
60503 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
60511 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60516 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,60517:CD,60521:CD,60591:CD,60596:CD,60645:CD,60650:JM,60516:JM,60231:JM,60344:JM,60457:JM,60285:JM,60398
60517 :: CALL :: call :: I :: v172 = v32.length()::JM,60521
60521 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,60524:CD,60529:CD,60534:CD,60543:CD,60547:CD,60553:CD,60557:CD,60564:CD,60569:CD,60573:CD,60578:CD,60583:CD,60591:CD,60596:CD,60645:CD,60650
60524 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
60529 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
60534 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
60543 :: CALL :: call :: I :: v175 = v32.length()::
60547 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
60553 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
60557 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
60564 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
60569 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
60573 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
60578 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
60583 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
60591 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60596 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,60597:CD,60601:CD,60607:CD,60611:CD,60618:CD,60623:CD,60627:CD,60632:CD,60637:JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60597 :: CALL :: call :: I :: v199 = v32.length()::
60601 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
60607 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
60611 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
60618 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
60623 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
60627 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
60632 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
60637 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
60645 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,60516:JM,60596:JM,60231:JM,60344:JM,60457:JM,60650:JM,60285:JM,60398
60650 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,60651:CD,60655:CD,60661:CD,60665:CD,60672:CD,60677:CD,60681:CD,60686:CD,60691:JM,60193:JM,60703
60651 :: CALL :: call :: I :: v241 = v32.length()::
60655 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
60661 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
60665 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
60672 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
60677 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
60681 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
60686 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
60691 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
60699 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,60193:JM,60703
60703 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,60189:CD,60193:CD,60194:CD,60198:CD,60699:JM,60703
60707 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
60711 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,73093
60716 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,73469
60723 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
60727 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,73093
60732 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,73480
60739 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
60743 :: CALL :: call :: V :: v273.setRef(v275)::CL,73491
60748 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
60764 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,74030
60771 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,60780:CL,74041
60775 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,60780
60780 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,60788
60788 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,74050
60799 :: CALL :: call :: V :: v296.setVolume(v298)::CL,74075
60810 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,74096
60821 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,74117
60828 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
60832 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
60836 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,74128
60843 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
60847 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
60851 :: CALL :: call :: V :: v314.setTitle(v318)::CL,74139
60858 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
60862 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
60866 :: CALL :: call :: V :: v320.setRefn(v324)::CL,74150
60873 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
60877 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
60881 :: CALL :: call :: V :: v326.setPmid(v330)::CL,74161
60888 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
60892 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
60896 :: CALL :: call :: V :: v332.setDoi(v336)::CL,74172
60911 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,74183
61096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,61101
61101 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
61107 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,61112
61112 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
61118 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,61126
61126 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,74581
61133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,61138
61138 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
61144 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,61150:CD,61156:CD,61170:CD,61174:JM,61175
61150 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
61156 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,61174:JM,61175
61161 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,61174
61166 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,74592
61170 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,61174
61174 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,61161:CD,61166:CD,61170:JM,61174
61175 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
61191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,61192:CD,61198
61192 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,49085
61195 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,61198
61198 :: NORM :: compound :: Z :: return v3::CF,61192
61222 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,61228:CD,61233:CD,61255:CD,61259
61228 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,49657
61233 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,61259
61238 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,61259
61243 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,61248:CL,74603
61248 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,61250
61250 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,74694
61255 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,61259
61259 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,61238:CD,61243:CD,61248:CD,61255:JM,61259
61278 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,61374:CD,61378:CD,61381:JM,61299:JM,61300:JM,61366:JM,61367
61285 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,49657
61290 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,61299:JM,61300:JM,61366:JM,61367
61295 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,61299:JM,61366
61299 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,61300
61300 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,61305:CD,61309:CD,61313:CD,61317:CD,61323:CD,61328:CD,61380
61305 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,74973
61309 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
61313 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,75011
61317 :: CALL :: call :: Z :: v24 = v9.add(v16)::
61323 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,61328:CL,74603
61328 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,61333:CD,61340:CD,61345:CD,61349:CD,61354:CD,61380
61333 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,74973
61340 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
61345 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,27854
61349 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
61354 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
61362 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,61299:JM,61366
61366 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,61295:CD,61299:CD,61300:CD,61362:CD,61380:JM,61366:CF,61367
61367 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,61368:CF,61373
61368 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,75049
61373 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,61381
61374 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,61378:CL,70984
61378 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,61285:CD,61290:CD,61362:CD,61366:CD,61367:CD,61373:CD,61374:CD,61380:CD,61381
61380 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,61299:JM,61366:DD,61373:DD,61380
61381 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,61378:DD,61380
61421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,61429:CD,61491:CD,61495:CD,61514:CD,61518:CD,61522:CD,61526:CD,61576:CD,61660:CD,61664:CD,61668
61426 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,61518
61429 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,61518
61434 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,61518
61439 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
61446 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,39576
61450 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
61454 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,61459
61459 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,61460:JM,61509
61460 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,61462:CD,61505:CD,61509:CD,61510
61462 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,61509
61467 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,61509
61478 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,75105
61483 :: CALL :: call :: Z :: v39 = v13.add(v37)::
61491 :: CALL :: call :: I :: v44 = v12.getMolId()::CL,39576
61495 :: CALL :: call :: Ljava/lang/Integer :: v46 = valueOf(v44)::
61505 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,61509
61509 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,61467:CD,61478:CD,61483:CD,61505:JM,61509
61510 :: CALL :: call :: V :: v12.setChains(v13)::CL,75120
61514 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,61518
61518 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,61434:CD,61439:CD,61446:CD,61450:CD,61454:CD,61459:CD,61460:CD,61514:JM,61518
61519 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,61526
61522 :: CALL :: call :: I :: v53 = v51.size()::JM,61526
61526 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,61530:CD,61539:CD,61543:CD,61547:CD,61552
61527 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
61530 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
61539 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,39576
61543 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
61547 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,61552
61552 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,61553:CD,61558:CD,61562
61553 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,61562:CL,75131
61558 :: CALL :: call :: I :: v69 = v67.size()::JM,61562
61562 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,61563:CD,61569:JM,61562
61563 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,61562
61569 :: CALL :: call :: V :: v58.addChain(v72)::CL,39222
61573 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,61664
61576 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,61664
61581 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,61664
61589 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,39576
61593 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
61597 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,61602
61602 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,61607:CD,61611:CD,61615:CD,61620:CD,61621:CD,61655:CD,61659
61607 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,39576
61611 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
61615 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,61620
61620 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,61659:JM,61630
61621 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,61659:JM,61630
61626 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,61659:JM,61630
61630 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,61636
61631 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,61636
61636 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,61638:CD,61643
61638 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,75144
61643 :: CALL :: call :: V :: v110.setCompound(v83)::CL,30161
61655 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,61659:JM,61630
61659 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,61626:CD,61630:CD,61631:CD,61636:CD,61655:JM,61659:JM,61664
61660 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,61664
61664 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,61581:CD,61589:CD,61593:CD,61597:CD,61602:CD,61660:JM,61664
61665 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,61668
61668 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,61672:CD,61676
61669 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,61676
61672 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,61676
61676 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,61677:CD,61681:CD,61748:CD,61752
61677 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,61752:CL,38259
61681 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,61752
61686 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,61752
61691 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,61695:CL,75159
61695 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,61696:JM,39111:JM,39118:CD,61700:CD,61707:CD,61712:CD,61716:CD,61723:CD,61734:CD,61738:JM,61752
61696 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
61700 :: CALL :: call :: V :: v134.addChain(v130)::CL,39222
61707 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,75168
61712 :: CALL :: call :: V :: v134.setMolId(v140)::CL,39239
61716 :: CALL :: call :: V :: v130.setCompound(v134)::CL,30161
61720 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
61723 :: CALL :: call :: Z :: v145 = v143.add(v134)::
61734 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,39576
61738 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
61748 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,61752
61752 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,61686:CD,61691:CD,61695:CD,61748:JM,61752
61858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,61863
61863 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
61869 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,61876:CD,62077:CD,62082:CD,62087:CD,62092:CD,62097:CD,62105:CD,62110:CD,62115
61873 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,61876
61876 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,61880
61877 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,61880
61880 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,61891:CD,61895:CD,61899
61891 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,61899:CL,38259
61895 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,61899
61899 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,61900:CD,61904:CD,61922:CD,61929:CD,61933:CD,61938:CD,62013:CD,62017:CD,62138:CD,62142:CD,62143:CD,62147:CD,62158
61900 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
61901 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
61904 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
61919 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
61922 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
61926 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
61929 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
61933 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,61938
61938 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,61941:CD,61949:CD,61954:CD,61959:CD,61969:CD,61976:CD,61980:CD,61985:CD,61993:CD,61997:CD,62002
61941 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
61946 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
61949 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
61954 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
61959 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
61969 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
61973 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
61976 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
61980 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
61985 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
61990 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
61993 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
61997 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
62002 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
62010 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,62142
62013 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,62142
62017 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,62142
62022 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,62142
62030 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
62039 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,62044
62044 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,62045:JM,62137
62045 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,62047:CD,62133:CD,62137
62047 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,62137
62052 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,62137
62057 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,63613
62061 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,75233
62068 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,75242
62077 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
62082 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
62087 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
62092 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
62097 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
62102 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
62105 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
62110 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
62115 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
62124 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,75260
62128 :: CALL :: call :: Z :: v111 = v109.add(v83)::
62133 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,62137
62137 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,62052:CD,62057:CD,62061:CD,62068:CD,62124:CD,62128:CD,62133:JM,62137:JM,62142
62138 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,62142
62142 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,62143:CD,62022:CD,62030:CD,62039:CD,62044:CD,62045:CD,62138:JM,62142
62143 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
62144 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
62147 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
62158 :: CALL :: call :: V :: v117.setSites(v112)::CL,75269
62236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,62241
62241 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
62247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,62252
62252 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
62258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,62263
62263 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
62290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,62295:CD,62299:CD,62304:CD,62402
62295 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,62304:CL,75280
62299 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,62304
62304 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,62305:CD,62309:CD,62314
62305 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,62314:CL,75289
62309 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,62314
62314 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,62340:CD,62374:JM,83953:JM,83956:JM,83959:JM,83950
62340 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,75343
62374 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,75343
62402 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,75562
62446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,62451:CD,62455:CD,62476:CD,62480
62451 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
62455 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,62480
62460 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,62480
62465 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,62470:CL,76080
62470 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,62471:JM,62480
62471 :: CALL :: call :: Z :: v18 = v4.add(v15)::
62476 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,62480
62480 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,62460:CD,62465:CD,62470:CD,62476:JM,62480
62507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,62511:CD,62514:CD,62517:CD,62520
62511 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,76208
62514 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,76361
62517 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,76514
62520 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,76731
62528 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,62611:CD,62616:CD,62621:CD,62626:CD,62766:CD,62770:CD,62778
62533 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,62764:CL,75131
62538 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,62764
62543 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,62764
62548 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,62759:CL,30249
62552 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,62759
62557 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,62759
62566 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,34616
62570 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,62754:JM,62583:CL,76841
62574 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,62754:JM,62583
62579 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,62754:JM,62583
62583 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,62593:JM,62597:JM,62598:JM,62603:JM,62642:JM,62681
62588 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::CL,76850
62593 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,62593:JM,62597:JM,62598:JM,62603
62597 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,62598:CD,62603:CD,62676:CD,62681:CD,62685:CD,62690:CD,62695:CD,62699:CD,62704
62598 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,62598:JM,62603
62603 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,62604:CD,62637:CD,62642:CD,62646:CD,62651:CD,62656:CD,62660:CD,62665:JM,62598:JM,62603
62604 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,62598:JM,62603
62611 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
62616 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,62598:JM,62603
62621 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
62626 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
62637 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
62642 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,62642
62646 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
62651 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
62656 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,76914
62660 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
62665 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
62676 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
62681 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,62681
62685 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
62690 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
62695 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,76914
62699 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
62704 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
62717 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,62749:CL,63323
62721 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,62749
62726 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,62749
62735 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::CL,76850
62745 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,62749
62749 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,62775:CD,62726:CD,62735:CD,62745:CD,62774:JM,62749
62750 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,62754:JM,62583
62754 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,62776:CD,62579:CD,62583:CD,62588:CD,62593:CD,62597:CD,62717:CD,62721:CD,62745:CD,62749:CD,62750:CD,62774:CD,62775:JM,62754
62755 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,62759
62759 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,62777:CD,62557:CD,62566:CD,62570:CD,62574:CD,62750:CD,62754:CD,62755:CD,62775:CD,62776:JM,62759
62760 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,62764
62764 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,62543:CD,62548:CD,62552:CD,62755:CD,62759:CD,62760:CD,62776:CD,62777:JM,62764:CF,62765
62765 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,62778
62766 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,62770:CL,70984
62770 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,62533:CD,62538:CD,62760:CD,62764:CD,62765:CD,62766:CD,62777:CD,62778
62774 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,62749:DD,62774:DD,62775
62775 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,62754:JM,62583:DD,62774:DD,62776
62776 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,62759:DD,62775:DD,62777
62777 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,62764:DD,62765:DD,62776
62778 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,62770:DD,62777
62845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,62852:CD,63035:CD,63039
62852 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,63039
62857 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,63039
62862 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,62867
62867 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,62936
62868 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
62874 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,62879
62879 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,62903:DD,63041
62880 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,62885
62885 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,62996
62886 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
62892 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,62897
62897 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,62909:DD,63042:JM,62903
62898 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,62903
62903 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,63041
62904 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,62909
62909 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,63042
62919 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,63153
62927 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,62936:CL,27854
62931 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,62936
62936 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,63043:CF,62937:CD,62938:CD,62946:CD,62951:CD,62959:CD,62963:CD,62968
62937 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,62968
62938 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
62946 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,62968
62951 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,62968
62959 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,62968:CL,63613
62963 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,62968
62968 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,63043
62969 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,62970:CD,62974
62970 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,62974:CL,63180
62974 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::JM,63250:JM,63253:CD,62982
62982 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,63267
62987 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,62996:CL,27854
62991 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,62996
62996 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,63044:CF,62997:CD,62998:CD,63006:CD,63011:CD,63019:CD,63023:CD,63028:CD,63030:CD,63034
62997 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,63028
62998 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
63006 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,63028
63011 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,63028
63019 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,63028:CL,63613
63023 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,63028
63028 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,63044:CD,63030:CD,63034
63030 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,63034:CL,63287
63034 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,62919:CD,62927:CD,62931:CD,62936:CD,62969:CD,62987:CD,62991:CD,62996:CD,63043:CD,63044:JM,63039
63035 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,63039
63039 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,62857:CD,62862:CD,62867:CD,62868:CD,62874:CD,62879:CD,62880:CD,62885:CD,62886:CD,62892:CD,62897:CD,62898:CD,62903:CD,62904:CD,62909:CD,63030:CD,63034:CD,63035:CD,63041:CD,63042:CD,63044:JM,63039
63041 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,62968:JM,62909
63042 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,63028
63043 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,62969:DD,63044
63044 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,63043
63153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,63167
63167 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,76934
63180 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,63181:CD,63184:CD,63189
63181 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,49547:JM,62974
63184 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,63189:CL,57146
63189 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,63190:CD,63195:CD,63209
63190 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,63195:CL,57146
63195 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,63196:CD,63201:CD,63209
63196 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,63201:CL,57146
63201 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,63202:CD,63207:CD,63209
63202 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,63207:CL,57146
63207 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,63208:CD,63209
63208 :: NORM :: compound :: Z :: return #(1)::DD,63181
63209 :: NORM :: compound :: Z :: return #(0)::DD,63181
63224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,63225:CD,63232:CD,63237
63225 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,49553
63232 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,63237
63237 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,63225
63250 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: p0 $this .type = p3 $t ::
63253 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .assignment = p2 $ass ::
63267 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,63276
63276 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
63287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,63288:CD,63301:CD,63308
63288 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,49572:JM,63034
63301 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,63308:CL,77045
63308 :: NORM :: compound :: Z :: return v9::DD,63288
63314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,63315:CD,63321
63315 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,49748
63318 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,63321
63321 :: NORM :: compound :: Z :: return v3::CF,63315
63323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,63324:CD,63330
63324 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,49878:JM,49912:JM,55705:JM,56337:JM,56448:JM,56488:JM,62749:JM,70492:JM,70501:JM,70529:JM,70652:JM,70661:JM,70689:JM,76577:JM,76587
63327 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,63330
63330 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,63331:CD,63335:CD,63339
63331 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,63335
63335 :: NORM :: compound :: Ljava/util/List :: return v6::DD,63324
63336 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,63339
63339 :: NORM :: compound :: Ljava/util/List :: return v5::DD,63324
63344 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,63345:CD,63350:CD,63355:CD,63361:CD,63366:CD,63372:CD,63377:CD,63381:CD,63397:CD,63401:CD,63402:CD,63403:CD,63404:CD,63405:CD,63406:CD,63407:CD,63408:CD,63409:CD,63526
63345 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,50196
63350 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,63429:JM,63498:JM,63403:JM,63405:JM,63437:CL,50203
63355 :: CALL :: call :: I :: v7 = v5.size()::JM,63429:JM,63498:JM,63403:JM,63405:JM,63437
63361 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,63413:JM,63429:JM,63509:JM,63430:JM,63403:CL,50203
63366 :: CALL :: call :: I :: v12 = v10.size()::JM,63413:JM,63429:JM,63509:JM,63430:JM,63403
63372 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,63401:JM,63402:CL,50203
63377 :: CALL :: call :: I :: v17 = v15.size()::JM,63401:JM,63402
63381 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,63401:JM,63402
63386 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,63401
63391 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,63395:CL,30404
63395 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,63526:CD,63396
63396 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,63526
63397 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,63401
63401 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,63386:CD,63391:CD,63395:CD,63397:CD,63526:JM,63401:CF,63402
63402 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,63404:DD,63421:DD,63430:DD,63437:CF,63403
63403 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,63404
63404 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,63406:DD,63414:DD,63422:DD,63499:DD,63510:CF,63405
63405 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,63407:CF,63406
63406 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,63407
63407 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,63408
63408 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,63409
63409 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,63410:CD,63412:CD,63413:CD,63414:CD,63415:CD,63416:CD,63417
63410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,63412
63412 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,63345
63413 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,63415:CF,63414
63414 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,63415
63415 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,63416
63416 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,63417
63417 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,63418:CD,63420:CD,63421:CD,63422:CD,63423:CD,63424:CD,63425
63418 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,63420
63420 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,63345
63421 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,63423:CF,63422
63422 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,63423
63423 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,63424
63424 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,63425
63425 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,63426:CD,63428:CD,63429:CD,63454:CD,63466:CD,63474:CD,63482:CD,63490:CD,63498:CD,63499:CD,63500:CD,63501:CD,63509:CD,63510:CD,63511:CD,63512:CD,63525:CD,63527
63426 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,63428
63428 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,63345
63429 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,63430:CD,63437
63430 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,63431:CD,63434:CD,63527
63431 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,63527
63434 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,63527
63437 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,63438:CD,63441:CD,63527
63438 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,63527
63441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,63527
63454 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,63454
63466 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,63498
63474 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,63509
63482 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
63490 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
63498 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,63500:CF,63499
63499 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,63500
63500 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,63501
63501 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,63501
63509 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,63511:CF,63510
63510 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,63511
63511 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,63512
63512 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,63512
63525 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,63345
63526 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,63401:DD,63396:DD,63402:DD,63526
63527 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,63525
63613 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,63614:CD,63617:CD,63624:CD,63628:CD,63636:CD,63657:CD,63661
63614 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,55855:JM,62968:JM,63028:JM,83766
63617 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,63661
63624 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
63628 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
63633 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,63636
63636 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,63640:CD,63644:JM,63661
63637 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,63644
63640 :: CALL :: call :: C :: v14 = v12.charValue()::JM,63644
63644 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,63648:CD,63652:JM,63661
63645 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
63648 :: CALL :: call :: C :: v18 = v16.charValue()::
63652 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
63657 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,63661
63661 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,63614
63701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,63707:CD,63708:CD,63716:CD,63720
63707 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,63707
63708 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,63707:CL,39576
63716 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,39576
63720 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
63733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,63739:CD,63740:CD,63748:CD,63752
63739 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,63739
63740 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,63739:CL,39576
63748 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,39576
63752 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
63765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,63782:CD,63784:CD,63788:CD,63795:CD,63800:CD,63804:CD,63809:CD,63859:CD,63861:CD,63881:CD,63883:CD,63925
63782 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,63788
63784 :: CALL :: call :: Z :: v12 = v10.get()::JM,63788
63788 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,63824:CD,63826:CD,63830:CD,63845:CD,63866:CD,63888:CD,63893:CD,63898:CD,63899:CD,63900:CD,63905:CD,63910:CD,63918:CD,63920
63795 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
63800 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
63804 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
63809 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
63824 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,63826
63826 :: CALL :: call :: V :: v13.set(#(1))::JM,63826
63830 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,63898
63845 :: CALL :: call :: V :: downloadFile()::CL,77345
63859 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
63861 :: CALL :: call :: V :: v31.set(#(0))::
63866 :: CALL :: call :: V :: p0 $this .split()::CL,64038
63881 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
63883 :: CALL :: call :: V :: v40.set(#(0))::
63888 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,63898
63893 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
63898 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,63899
63899 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
63900 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
63905 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
63910 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
63918 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,63920
63920 :: CALL :: call :: V :: v59.set(#(0))::JM,63920
63925 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
64038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,64048:CD,64049:CD,64056:CD,64066:CD,64067:CD,64081:CD,64085:CD,64132:CD,64133:CD,64137:CD,64142:CD,64143:CD,64149:CD,64163:CD,64168:CD,64173:CD,64178:CD,64193:CD,64194:CD,64195:CD,64196
64048 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
64049 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
64056 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
64066 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,64194:DD,64143:CF,64067
64067 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
64081 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,64194
64085 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,64195
64090 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,64095
64095 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,64190:CD,64096:CD,64107:CD,64112:CD,64189:CD,64191:CD,64192
64096 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,64189:CD,64097:CD,64101:CD,64106
64097 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
64101 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,77449
64106 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,64189
64107 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,64192
64112 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,64191
64116 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
64121 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
64123 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
64128 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,64194
64132 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,64090:CD,64095:CD,64116:CD,64121:CD,64123:CD,64128:CD,64190:CD,64191:CD,64192:CD,64193:CD,64194:CD,64195:CD,64196
64133 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
64137 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,77449
64142 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,64143
64143 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,64144
64144 :: CALL :: call :: V :: v17.close()::
64149 :: CALL :: call :: V :: v17.close()::
64163 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
64168 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
64173 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
64178 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
64189 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,64190:JM,64192
64190 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,64191:DD,64193
64191 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,64192:DD,64195
64192 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,64196
64193 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,64194:DD,64106:DD,64142:DD,64189:DD,64190
64194 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,64195:JM,64095:JM,64192:DD,64132
64195 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,64196:DD,64191
64196 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,64096:DD,64192:CF,64132
64266 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,64270
64270 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,77525
64358 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,64362
64362 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
64365 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,64369
64369 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
64372 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,64376
64376 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
64387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,64394:CD,64407:CD,64411
64391 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,64411
64394 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,64411
64399 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,64411
64407 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,64411
64411 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,64399:CD,64407:JM,64411
64429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,64436:CD,64449:CD,64453
64433 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,64453
64436 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,64453
64441 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,64453
64449 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,64453
64453 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,64441:CD,64449:JM,64453
64467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,64468:CD,64474:CD,64478:CD,64483:CD,64549:CD,64553:CD,64621:CD,64622:CD,64623:CD,64627:CD,64628:CD,64629:JM,64613:JM,64619
64468 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,51348:JM,51338:JM,51405:JM,51803:JM,51535:JM,51638:JM,51721:JM,51628
64474 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,64553:DD,64608:JM,64613:DD,64614:DD,64620
64478 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,64483
64483 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,64484:CD,64517
64484 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,64485:CD,64489:CD,64507:CD,64511:CD,64627:CD,64628:CD,64629
64485 :: CALL :: call :: I :: v26 = v48.length()::JM,64489
64489 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,64501:CF,64490:CD,64491:CD,64627:CD,64628:CD,64629
64490 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,64629
64491 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
64501 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,64629
64507 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
64511 :: CALL :: call :: Z :: v37 = v6.add(v35)::
64517 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,64518:CD,64524:CD,64529:CD,64544:CD,64548:CD,64624:CD,64625:CD,64626:CD,64627:CD,64628:CD,64629
64518 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
64524 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,64548:JM,64538:CL,77754
64529 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,64548:JM,64538
64534 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,64548:JM,64538
64538 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
64539 :: CALL :: call :: Z :: v23 = v6.add(v21)::
64544 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,64548:JM,64538
64548 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,64627:CD,64534:CD,64538:CD,64539:CD,64544:CD,64624:CD,64625:CD,64626:JM,64548
64549 :: CALL :: call :: I :: v43 = v6.size()::JM,64553
64553 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,64556:CD,64561:CD,64565:CD,64570:CD,64575:CD,64580:CD,64585:CD,64590:CD,64595:CD,64600:CD,64608:CD,64609:CD,64613
64556 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
64561 :: CALL :: call :: I :: v60 = v6.size()::
64565 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
64570 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
64575 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,64613:JM,64619:JM,64621
64580 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
64585 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
64590 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
64595 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
64600 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
64608 :: NORM :: compound :: Ljava/util/List :: return v6::DD,64468
64609 :: CALL :: call :: I :: v45 = v6.size()::JM,64613
64613 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,64614:CD,64615:CD,64619:CD,64621:CD,64622:CD,64623:JM,64613:JM,64553
64614 :: NORM :: compound :: Ljava/util/List :: return v6::DD,64468
64615 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,64613:JM,64553:JM,64619:JM,64621
64619 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,64621:CD,64478:CD,64483:CD,64549:CD,64553:CD,64620:CD,64622:CD,64623:CD,64627:CD,64628:CD,64629
64620 :: NORM :: compound :: Ljava/util/List :: return v6::DD,64468
64621 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,64622:JM,64483:JM,64489:DD,64624:DD,64627
64622 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,64623:DD,64484:DD,64517:DD,64625:DD,64628
64623 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,64626:DD,64629:JM,64483
64624 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,64625:DD,64624:DD,64627
64625 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,64626:DD,64625:DD,64628
64626 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,64548:JM,64538:DD,64626:DD,64629
64627 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,64628
64628 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,64629:DD,64622
64629 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,64553:DD,64623
64783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,64793:CD,64818:CD,64819:CD,64824:CD,64828:CD,64833:CD,64838:CD,64842:CD,64847:CD,64852:CD,64857:CD,64862:CD,64867:CD,64872:CD,64877:CD,64886:CD,64891:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,65340:JM,65215:JM,65790
64793 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
64818 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
64819 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
64824 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64828 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
64833 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
64838 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64842 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
64847 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
64852 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64857 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64862 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
64867 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
64872 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
64877 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
64886 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64891 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,64897:CD,64906:CD,64911:CD,64916:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64897 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
64906 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,78647
64911 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64916 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,64922:CD,64930:CD,64935:CD,64940:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64922 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,64930:CL,78244
64930 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,64931
64931 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
64935 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64940 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,64946:CD,64955:CD,64960:CD,64965:JM,65665:JM,65090:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64946 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
64955 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,78683
64960 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64965 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,64971:CD,64980:CD,64985:CD,64990:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64971 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
64980 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,78719
64985 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64990 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,64996:CD,65005:CD,65010:CD,65015:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
64996 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65005 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,78755
65010 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65015 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,65021:CD,65030:CD,65035:CD,65040:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65021 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65030 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,78791
65035 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65040 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,65046:CD,65055:CD,65060:CD,65065:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65046 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65055 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,78827
65060 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65065 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,65071:CD,65080:CD,65085:CD,65090:JM,65665:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65071 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65080 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,78863
65085 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65090 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,65096:CD,65105:CD,65110:CD,65115:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65096 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65105 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,78899
65110 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65115 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,65121:CD,65130:CD,65135:CD,65140:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65121 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65130 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,78935
65135 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65140 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,65146:CD,65155:CD,65160:CD,65165:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65146 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65155 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,78971
65160 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65165 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,65171:CD,65180:CD,65185:CD,65190:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65171 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65180 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,79007
65185 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65190 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,65196:CD,65205:CD,65210:CD,65215:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65790
65196 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65205 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,79043
65210 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65215 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,65221:CD,65230:CD,65235:CD,65240:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65221 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65230 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,79079
65235 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65240 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,65246:CD,65255:CD,65260:CD,65265:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65246 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65255 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,79115
65260 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65265 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,65271:CD,65280:CD,65285:CD,65290:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65271 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65280 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,79151
65285 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65290 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,65296:CD,65305:CD,65310:CD,65315:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65296 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65305 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,79187
65310 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65315 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,65321:CD,65330:CD,65335:CD,65340:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65215:JM,65790
65321 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65330 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,79223
65335 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65340 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,65346:CD,65355:CD,65360:CD,65365:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65346 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65355 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,79259
65360 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65365 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,65371:CD,65380:CD,65385:CD,65390:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65371 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65380 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,79295
65385 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65390 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,65396:CD,65405:CD,65410:CD,65415:JM,65665:JM,65090:JM,64965:JM,65540:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65396 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65405 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,79331
65410 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65415 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,65421:CD,65430:CD,65435:CD,65440:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65421 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65430 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,79367
65435 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65440 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,65446:CD,65455:CD,65460:CD,65465:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,64891:JM,65340:JM,65215:JM,65790
65446 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65455 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,79403
65460 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65465 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,65471:CD,65480:CD,65485:CD,65490:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65471 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65480 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,79439
65485 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65490 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,65496:CD,65505:CD,65510:CD,65515:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65496 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65505 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,79475
65510 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65515 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,65521:CD,65530:CD,65535:CD,65540:JM,65665:JM,65090:JM,64965:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65521 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65530 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,79511
65535 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65540 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,65546:CD,65555:CD,65560:CD,65565:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65546 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65555 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,79547
65560 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65565 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,65571:CD,65580:CD,65585:CD,65590:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65571 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65580 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,79583
65585 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65590 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,65596:CD,65605:CD,65610:CD,65615:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65596 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65605 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,79619
65610 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65615 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,65621:CD,65630:CD,65635:CD,65640:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65621 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65630 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,79655
65635 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65640 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,65646:CD,65655:CD,65660:CD,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65646 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65655 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,79691
65660 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65665 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,65671:CD,65680:CD,65685:CD,65690:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65671 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65680 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,79727
65685 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65690 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,65696:CD,65705:CD,65710:CD,65715:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65696 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65705 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,79763
65710 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65715 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,65721:CD,65730:CD,65735:CD,65740:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65721 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65730 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,79799
65735 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65740 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,65746:CD,65755:CD,65760:CD,65765:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65746 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65755 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,79835
65760 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65765 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,65771:CD,65780:CD,65785:CD,65790:JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215
65771 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65780 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,79871
65785 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,65665:JM,65090:JM,64965:JM,65540:JM,65415:JM,65290:JM,65165:JM,65740:JM,65615:JM,65040:JM,65490:JM,64916:JM,65365:JM,65240:JM,65115:JM,65690:JM,65565:JM,64990:JM,65440:JM,65315:JM,65765:JM,65190:JM,65065:JM,65640:JM,65515:JM,64940:JM,65390:JM,65265:JM,65715:JM,65140:JM,65015:JM,65590:JM,65465:JM,64891:JM,65340:JM,65215:JM,65790
65790 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,65796:CD,65805:CD,65817
65796 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,78244
65805 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,79907
65817 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,79943
66204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,66211:CD,66214:CD,66217
66211 :: CALL :: call :: V :: p1 $loopFields .clear()::
66214 :: CALL :: call :: V :: p2 $lineData .clear()::
66217 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
66224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,66232:CD,66246:CD,66250
66229 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,66250
66232 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,66250
66237 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,66250
66246 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,66250
66250 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,66237:CD,66246:JM,66250
66297 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,52220:JM,52301
66296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,66297:CD,66299:JM,80129:JM,80136:JM,80143:CD,66303:CD,66307:CD,66313:CD,66319:CD,66323
66299 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,66323
66303 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,80158
66307 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,80173
66313 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,80184
66319 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,80195
66323 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,66297
66335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,66340
66340 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
68805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,68806:CD,68808:CD,68810:CD,68811:CD,68819
68806 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,54527
68808 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,68810
68811 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,68819
68810 :: EXPR :: assign :: I :: v4 = v2.length::DD,68811
68819 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,68806
69081 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,69082:CD,69085:JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69082 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,69085
69085 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,69086:JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69086 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
69090 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69095 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,69354
69097 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69096 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,69355:CD,69097:CD,69098:CD,69103
69098 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69103 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,69095:CD,69096:CD,69354:CD,69355
69105 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,69355
69107 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69106 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,69107:CD,69112:JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69304:JM,69178
69113 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69112 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,69105:CD,69106:CD,69355:JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69123 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,69356
69122 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,69356:CD,69123
69124 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69129 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69128 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,69357:CD,69129:CD,69134:JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69134 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,69357
69137 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69136 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,69137:CD,69143:CD,69147:CD,69152:CD,69155:CD,69156:CD,69358:CD,69359:CD,69360:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69143 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,69360:JM,69152
69147 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,69152:JM,69360
69153 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,69359
69152 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,69359:CD,69153:CD,69360
69155 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,69358
69157 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,69359:CD,69158:CD,69163:CD,69360:JM,69152:JM,69122:JM,69128:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69156 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,69359:CD,69157:CD,69360
69158 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69163 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,69359:CD,69136
69167 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,69363:CD,69168
69169 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,69177
69168 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,69172:CD,69177:CD,69178:CD,69185:CD,69195:CD,69361:CD,69362:CD,69363
69172 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,69177
69177 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,69363:CD,69178:CD,69185:CD,69195:CD,69361:CD,69362
69179 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,69361
69178 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,69361
69182 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,69185
69185 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,69362:CD,69189:CD,69194
69186 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,69189:JM,69194
69189 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,69189:JM,69194
69195 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,69363
69194 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,69362
69243 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
69242 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
69248 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69253 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,69152:JM,69303:JM,69304
69262 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,69266
69266 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
69271 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
69272 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
69277 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
69280 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
69285 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
69297 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69303 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,69304:CD,69305
69305 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,69152:JM,69122:JM,69128:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69136:JM,69363:JM,69303:JM,69081:JM,69112:JM,69304:JM,69178
69304 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69128:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134:JM,69361:JM,69363:JM,69081:JM,69178
69341 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
69342 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
69355 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,69105:DD,69106:JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69128:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134:DD,69123:DD,69356
69354 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,69095:DD,69096:DD,69097:DD,69106:DD,69157:JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69128:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134
69357 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,69156
69356 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,69128:JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134:DD,69358:DD,69359:JM,69361:JM,69363:JM,69081:JM,69178
69359 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,69360:JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69128:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134
69358 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,69136:JM,69152:JM,69122:JM,69303:JM,69112:JM,69128:JM,69304:JM,69163:JM,69354:JM,69103:JM,69134:DD,69153:DD,69155:DD,69157:CF,69156
69361 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,69363
69360 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,69168:JM,69177:DD,69362
69363 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,69262
69362 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,69195
69721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,69722:CD,69727:CD,69732:CD,69733
69722 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,56036:JM,55997
69727 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,69732
69733 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,69722
69732 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,69733
69737 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,56006:JM,56095
69736 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,69737:CD,69740:CD,69746:CD,69751
69740 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
69746 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,69751
69751 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,69754:CD,69759:CD,69761
69754 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,69759
69759 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,69760:CD,69761
69761 :: NORM :: compound :: Z :: return #(1)::DD,69737
69760 :: NORM :: compound :: Z :: return #(0)::DD,69737
69773 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,56069:JM,56079
69772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,69773:CD,69776:CD,69780:CD,69784:CD,69788
69776 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
69780 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
69784 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,69788:CL,34616
69789 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,69773
69788 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,69789:CD,69796:CD,69801:CD,69931:CD,69935:CD,69937
69796 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,69801
69801 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,69802:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,69806:CD,69810:CD,69850:CD,69916:CD,69921:CD,69936:CD,69937
69802 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,69937
69806 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,69936:JM,69827:JM,69810:JM,69816:JM,69822:CL,34811
69811 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,69936:JM,69827:JM,69816:JM,69822
69810 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,69811:CD,69816:CD,69828:CD,69832:CD,69936:JM,69827:JM,69822
69817 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,69936:JM,69827:JM,69816:JM,69822
69816 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,69817:CD,69822:CD,69828:CD,69832:CD,69936:JM,69827:JM,69816
69823 :: CALL :: call :: I :: v36 = v28.length()::JM,69936:JM,69827:JM,69816:JM,69822
69822 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,69823:CD,69827:CD,69828:CD,69832:CD,69936:JM,69816:JM,69822
69827 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,69936:CD,69828:CD,69832
69828 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,69833:JM,69832:JM,69837:CL,34820
69833 :: CALL :: call :: I :: v40 = v38.length()::JM,69833:JM,69837
69832 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,69936:CD,69833:CD,69837
69837 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,69936:CD,69842:CD,69846
69842 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,34616
69846 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,69936:CL,34811
69851 :: CALL :: call :: I :: v50 = v48.length()::JM,69855
69850 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,69851:CD,69855:CD,69864:CD,69869:CD,69874:CD,69879:CD,69887:CD,69891
69855 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,69856:CD,69861:CD,69864:CD,69869:CD,69874:CD,69879:CD,69887:CD,69891
69856 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,69861
69861 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,69864:CD,69869:CD,69874:CD,69879:CD,69887:CD,69891:CD,69896:CD,69901:CD,69905
69864 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
69869 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
69874 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
69879 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
69887 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(88))::
69891 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,70146
69896 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
69901 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(v54)::
69905 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,70146
69916 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,69921
69921 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,69927:CF,69922:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,69937
69922 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,69937
69927 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,69937
69931 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,81183
69935 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,69773
69937 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,69935
69936 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,69850:JM,69855:JM,69861
70005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,70006:CD,70012
70006 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,56078
70009 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,70012
70013 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,70017:CL,81194
70012 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,70013:CD,70017:CD,70029
70017 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,70018:CD,70022:CD,70027:CD,70029
70018 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,70027:CL,81194
70022 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,70027
70027 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,70028:CD,70029
70029 :: NORM :: compound :: Z :: return #(1)::CF,70006
70028 :: NORM :: compound :: Z :: return #(0)::CF,70006
70046 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
70049 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
70052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
70055 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,70059
70059 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
70062 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,70066
70066 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
70069 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
70072 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
70075 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
70078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,70082
70080 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,70082
70083 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,70087
70082 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,70083
70087 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
70091 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
70134 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
70137 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
70146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,70151
70151 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
70157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,70158:CD,70164
70158 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,56231
70161 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,70164
70164 :: NORM :: compound :: Z :: return v3::CF,70158
70167 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,56245
70166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,70167:CD,70173
70170 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,70173
70173 :: NORM :: compound :: Ljava/util/List :: return v3::CF,70167
70175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,70176:CD,70182
70176 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,56315
70179 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,70182
70183 :: NORM :: compound :: Z :: return #(0)::CF,70176
70182 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,70183:CD,70187:CD,70191:CD,70193:CD,70194
70184 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,70191
70187 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,70191
70191 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,70194
70193 :: NORM :: compound :: Z :: return v10::CF,70176
70194 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,70193
70239 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,56411:JM,56483:JM,56457:JM,56513:JM,71110:JM,76806:JM,83880
70238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,70239:CD,70245
70242 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,70245
70245 :: NORM :: compound :: Ljava/util/List :: return v3::CF,70239
70247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,70248:CD,70254
70248 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,56427:JM,56477:JM,57009:JM,57097:JM,83844:JM,83898
70251 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,70254
70255 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,70248
70254 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,70255:CD,70259:CD,70263
70256 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,70263
70259 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,70263
70263 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,70248
70269 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,56525
70268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,70269:CD,70272:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,70280:CD,70287:CD,70295:CD,70302:CD,70325:CD,70329:CD,70333:CD,70364:CD,70372
70272 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,70372
70280 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,71179
70287 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,56178
70295 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,56136
70299 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,70329
70302 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,70329
70307 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,70329
70312 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,81259
70317 :: CALL :: call :: V :: v3.addAtom(v24)::CL,56956
70321 :: CALL :: call :: V :: v24.setGroup(v3)::CL,71159
70325 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,70329
70329 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,70307:CD,70312:CD,70317:CD,70321:CD,70325:JM,70329
70330 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,70333
70333 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,70337:CD,70356:CD,70360
70334 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,70360
70337 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,70360
70342 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,70360
70347 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,70410:CL,70268:CL,70585
70352 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,70827
70356 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,70360
70361 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,70364
70360 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,70342:CD,70347:CD,70352:CD,70356:JM,70360
70364 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,70368:CF,70372
70368 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,81183
70372 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,70269
70411 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,56525
70410 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,70411:CD,70414:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,70422:CD,70430:CD,70438:CD,70446:CD,70453:CD,70460:CD,70483:CD,70487:CD,70488:CD,70492:CD,70533:CD,70541
70414 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,70541
70422 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,71179
70430 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,56178
70438 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,56167
70446 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,70146
70453 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,57221
70457 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,70487
70460 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,70487
70465 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,70487
70470 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,81259
70475 :: CALL :: call :: V :: v3.addAtom(v30)::CL,56956
70479 :: CALL :: call :: V :: v30.setGroup(v3)::CL,71159
70483 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,70487
70487 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,70465:CD,70470:CD,70475:CD,70479:CD,70483:JM,70487
70488 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,70492:CL,63323
70493 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,70501:CL,63323
70492 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,70493:CD,70497:CD,70501
70497 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,70501
70501 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,70502:CD,70506:CD,70525:CD,70529
70502 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,70529:CL,63323
70506 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,70529
70511 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,70529
70516 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,70410:CL,70268:CL,70585
70521 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,70827
70525 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,70529
70529 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,70511:CD,70516:CD,70521:CD,70525:JM,70529
70530 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,70533
70533 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,70537:CF,70541
70537 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,81183
70541 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,70411
70585 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,70586:CD,70589:JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,70597:CD,70605:CD,70613:CD,70620:CD,70643:CD,70647:CD,70648:CD,70652:CD,70693:CD,70701
70586 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,56525
70589 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,70701
70597 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,71179
70605 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,56178
70613 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,56136
70617 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,70647
70620 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,70647
70625 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,70647
70630 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,81259
70635 :: CALL :: call :: V :: v3.addAtom(v25)::CL,56956
70639 :: CALL :: call :: V :: v25.setGroup(v3)::CL,71159
70643 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,70647
70647 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,70625:CD,70630:CD,70635:CD,70639:CD,70643:JM,70647
70648 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,70652:CL,63323
70653 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,70661:CL,63323
70652 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,70653:CD,70657:CD,70661
70657 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,70661
70661 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,70662:CD,70666:CD,70685:CD,70689
70662 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,70689:CL,63323
70666 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,70689
70671 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,70689
70676 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,70410:CL,70268:CL,70585
70681 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,70827
70685 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,70689
70689 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,70671:CD,70676:CD,70681:CD,70685:JM,70689
70690 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,70693
70693 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,70697:CF,70701
70697 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,81183
70701 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,70586
70741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,70749:CD,70756:CD,70787:CD,70791:CD,70795:CD,70799:JM,70792
70746 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,70749
70749 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,70753:JM,70791:JM,70792:JM,70799
70750 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
70753 :: CALL :: call :: V :: v6.clear()::
70756 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,70791:JM,70792:JM,70799
70761 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,70791:JM,70799
70766 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,71159
70770 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,70773
70773 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,70781:JM,70791:JM,70799
70781 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
70787 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,70791:JM,70799
70791 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,70761:CD,70766:CD,70773:CD,70787:JM,70791:JM,70799
70792 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
70795 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,70791:JM,70799
70799 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
70800 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
70827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,70835:CD,70846
70832 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,70835
70835 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,70836
70836 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,70840
70840 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
70843 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
70846 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
70859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CE,70860:CD,70863:CD,70867:CD,70886:CD,70890:CD,70891
70860 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::JM,56691
70863 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,70891
70867 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,70890
70872 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,70890
70877 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,70997
70881 :: CALL :: call :: Z :: v16 = v3.add(v14)::
70886 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,70890
70891 :: NORM :: compound :: Ljava/util/List :: return v3::DD,70860
70890 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,70872:CD,70877:CD,70881:CD,70886:JM,70890:CF,70891
70906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,70913:CD,70919:CD,70933:CD,70937:CD,70941:CD,70945
70913 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
70919 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,70937
70924 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,70937
70929 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,71199
70933 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,70937
70937 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,70924:CD,70929:CD,70933:JM,70937
70938 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,70945
70941 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,70945
70945 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,70949:CD,70958
70946 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
70949 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,70937
70955 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
70958 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,70937
70985 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,56723:JM,61378:JM,62770:JM,77059
70984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,70985:CD,70991:CD,70995
70988 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,70995
70991 :: CALL :: call :: I :: v5 = v3.size()::JM,70995
70995 :: NORM :: compound :: I :: return v5::CF,70985
70997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,70998:CD,71001:JM,55632:JM,55620:JM,55639:JM,55625:CD,71009:CD,71017:CD,71025:CD,71029:CD,71033:CD,71111:CD,71115:CD,71116
70998 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::JM,56731
71001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,71116
71009 :: CALL :: call :: V :: v3.setChainID(v6)::CL,55663
71017 :: CALL :: call :: V :: v3.setCompound(v9)::CL,30161
71025 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,81387
71029 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,71042:JM,71115:CL,30249
71033 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,71042:JM,71115
71038 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,71042:JM,71115
71043 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,71110:CL,70238
71042 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,71047
71047 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,71048
71048 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,71050:CD,71106:CD,71110
71050 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,71110
71055 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,71110
71060 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,71069:CL,57137
71064 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,71069
71069 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,71070:CD,71074:CD,71076:CD,71106:CD,71110
71070 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,71076:CL,49728
71074 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,71076
71076 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,70080:JM,70082:JM,70055:JM,70062:JM,70078:CD,71085:CD,71093:CD,71097:CD,71101:CD,71106:CD,71110
71085 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,56167
71093 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,56178
71097 :: CALL :: call :: V :: v42.addAtom(v33)::CL,56956
71101 :: CALL :: call :: V :: v3.addGroup(v42)::CL,55674
71106 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,71110
71111 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,71042:JM,71115
71110 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,71055:CD,71060:CD,71064:CD,71069:JM,71110:JM,71042:JM,71115
71115 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,71038:CD,71042:CD,71043:CD,71047:CD,71048:CD,71111:JM,71115:CF,71116
71116 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,70998
71159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,71164
71164 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
71171 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,56977
71170 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,71171:CD,71177
71174 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,71177
71177 :: NORM :: compound :: [D :: return v3::CF,71171
71179 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,71184
71184 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
71191 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
71190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,71191:CD,71197
71194 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,71197
71197 :: NORM :: compound :: I :: return v3::CF,71191
71199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,71204
71204 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
71211 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,57379:JM,57369:JM,57375
71210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,71211:CD,71216:CD,71221:CD,71222
71216 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,71221
71221 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,71222
71222 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,71211
71225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,71226:CD,71232
71226 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,57514
71229 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,71232
71232 :: NORM :: compound :: D :: return v3::CF,71226
71235 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,57520
71234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,71235:CD,71241
71238 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,71241
71241 :: NORM :: compound :: D :: return v3::CF,71235
71243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,71244:CD,71250
71244 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,57526
71247 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,71250
71250 :: NORM :: compound :: D :: return v3::CF,71244
71253 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,57750
71252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,71253:CD,71259
71256 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,71259
71259 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,71253
71270 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
71273 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,71286:JM,71289:DD,71277
71277 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
71280 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
71283 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
71286 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
71289 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
71306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,71311
71311 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
71317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,71322
71322 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
71328 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,71332:CD,71336:CD,71340
71332 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
71336 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,81398
71340 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
71350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,71354:CD,71361:CD,71372
71354 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,71358
71358 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
71361 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,71366:CL,81514
71366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
71369 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
71373 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
71372 :: NORM :: declaration :: [D :: v9 = new []::DD,71373
71376 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
71379 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
71397 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,58162
71396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,71397:CD,71401:CD,71406:CD,71407:CD,71411:CD,71412:CD,71418:CD,71422:CD,71426:CD,71430
71401 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,71411:JM,71406
71407 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,71411:JM,71406
71406 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,71411:JM,71406
71411 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,71411:JM,71406
71412 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,71411:JM,71406
71418 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
71422 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
71426 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,71430:CL,81576
71430 :: NORM :: compound :: I :: return v19::DD,71397
71441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,71446:CD,71451:CD,71452:CD,71457:CD,71461:CD,71469:CD,71473
71446 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,71451
71451 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,71451
71452 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,71451
71457 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
71461 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,71469
71466 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
71469 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,71469
71473 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
71493 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,58228
71492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,71493:CD,71497:CD,71506:CD,71511:CD,71515:CD,71541:CD,71560:CD,71579:CD,71588:CD,71593:CD,71597:CD,71602
71497 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
71502 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,71602:JM,71588:JM,71515
71506 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,71602:JM,71588:JM,71515
71511 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,71602:JM,71588:JM,71515
71515 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,71516:CD,71524
71516 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,71521:CL,81514
71521 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
71525 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
71524 :: NORM :: declaration :: [D :: v18 = new []::DD,71525
71541 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,81853
71560 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,81853
71579 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,81853
71585 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
71589 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,71593:JM,71597
71588 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
71593 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,71593:JM,71597
71597 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,71598
71598 :: EXPR :: modify :: D :: v43[v44] = v49::
71603 :: NORM :: compound :: Z :: return #(1)::DD,71493
71602 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,71603:CD,71604
71604 :: NORM :: compound :: Z :: return #(0)::DD,71493
71648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,71655:CD,71710:CD,71714:CD,71721:CD,71726
71652 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,71714
71655 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,71714
71660 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,71714
71665 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
71687 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
71690 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
71694 :: CALL :: call :: V :: v12.setId(v22)::CL,82019
71698 :: CALL :: call :: V :: v12.setChainId(v11)::CL,82030
71702 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
71705 :: CALL :: call :: Z :: v27 = v25.add(v12)::
71710 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,71714
71714 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,71660:CD,71665:JM,81883:CD,71690:CD,71694:CD,71698:CD,71705:CD,71710:JM,71714
71721 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,71726
71726 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,71738:CD,71759:CD,71766:CD,71776
71738 :: CALL :: call :: V :: v32.setId(v36)::CL,82050
71759 :: CALL :: call :: V :: v32.setMacromolecularSize(v43)::CL,82061
71766 :: CALL :: call :: V :: v32.setTransforms(v45)::CL,82072
71776 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
71910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,71916:CD,71920:CD,71926:CD,71931:CD,71999:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,72156
71916 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
71920 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,72218
71926 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
71931 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,71932:CD,71936:CD,71948:CD,72218
71932 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,72218
71936 :: CALL :: call :: I :: v19 = v17.intValue()::JM,72218
71949 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,71952
71948 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,71952
71953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,71956
71952 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,71956:CD,71970:CD,71979:JM,39111:JM,39118:CD,71989
71957 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
71956 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,71963
71960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
71963 :: CALL :: call :: Z :: v32 = v29.add(v30)::
71970 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
71979 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,71983
71983 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
71989 :: CALL :: call :: V :: v40.setMolId(v25)::CL,39239
71996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,71999
71999 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,72001:CD,72006:CD,72014:CD,72019:CD,72075:CD,72080:CD,72113:CD,72118:CD,72151:CD,72156:CD,72164:CD,72169:CD,72177:CD,72182:CD,72190:CD,72195:CD,72203:CD,72208:JM,71931
72001 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72006 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,72010:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72010 :: CALL :: call :: V :: v47.setMolName(v10)::CL,82127
72014 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72019 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,72020:CD,72026:CD,72050:CD,72054:CD,72061:CD,72065:CD,72069:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72020 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,72219:JM,72044:JM,72054
72026 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
72031 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,72219:JM,72044
72035 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,72219:JM,72044
72039 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,72219:JM,72044
72045 :: CALL :: call :: Z :: v69 = v55.add(v67)::
72044 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,72219
72050 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,72054
72054 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,72031:CD,72035:CD,72039:CD,72044:CD,72045:CD,72050:CD,72219
72061 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,39576
72065 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
72069 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
72075 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72081 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,72112
72080 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,72081:CD,72087:CD,72108:CD,72112:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72087 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
72092 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
72096 :: CALL :: call :: Z :: v90 = v83.add(v88)::
72104 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,82138
72108 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,72112
72113 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72112 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,72092:CD,72096:CD,72104:CD,72108:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72119 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,72150
72118 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,72119:CD,72125:CD,72146:CD,72150:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72125 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
72130 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
72134 :: CALL :: call :: Z :: v105 = v98.add(v103)::
72142 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,82149
72146 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,72150
72151 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72150 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,72130:CD,72134:CD,72142:CD,72146:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72156 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,72160:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72160 :: CALL :: call :: V :: v111.setFragment(v10)::CL,82160
72164 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72169 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,72173:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72173 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,82171
72177 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72182 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,72186:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72186 :: CALL :: call :: V :: v121.setMutation(v10)::CL,82182
72190 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72195 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,72199:JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72199 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,82193
72203 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,72080:JM,72208:JM,72019:JM,72195:JM,72006:JM,72118:JM,72182:JM,72169:JM,71931:JM,72156
72208 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,72212
72212 :: CALL :: call :: V :: v131.setDetails(v10)::CL,82204
72219 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
72218 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,71948:DD,71952
72336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,72342:CD,72346:CD,72352:CD,72357:CD,72382:CD,72387:CD,72391:CD,72396:CD,72405:CD,72410:CD,72853:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72732:JM,72606:JM,72480:JM,72802:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72342 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72346 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,72369
72352 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72357 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,72361:CD,72365:CD,72369:CD,72370:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72358 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
72361 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,72369
72365 :: CALL :: call :: I :: v19 = v17.intValue()::JM,72369
72369 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
72370 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
72382 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
72387 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
72391 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
72396 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
72405 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72410 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,72414:CD,72419:CD,72424:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72414 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,82215
72419 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72424 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,72428:CD,72433:CD,72438:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72760:JM,72634:JM,72508:JM,72830
72428 :: CALL :: call :: V :: v193.setFragment(v10)::CL,82160
72433 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72438 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,72442:CD,72447:CD,72452:JM,72704:JM,72578:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72442 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,82226
72447 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72452 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,72456:CD,72461:CD,72466:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72456 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,82237
72461 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72466 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,72470:CD,72475:CD,72480:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72470 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,82248
72475 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72480 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,72484:CD,72489:CD,72494:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72484 :: CALL :: call :: V :: v185.setStrain(v10)::CL,82259
72489 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72494 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,72498:CD,72503:CD,72508:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72830
72498 :: CALL :: call :: V :: v183.setVariant(v10)::CL,82270
72503 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72508 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,72512:CD,72517:CD,72522:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72512 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,82281
72517 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72522 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,72526:CD,72531:CD,72536:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72526 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,82292
72531 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72536 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,72540:CD,72545:CD,72550:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72540 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,82303
72545 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72550 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,72554:CD,72559:CD,72564:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72554 :: CALL :: call :: V :: v175.setTissue(v10)::CL,82314
72559 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72564 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,72568:CD,72573:CD,72578:JM,72704:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72568 :: CALL :: call :: V :: v173.setCell(v10)::CL,82325
72573 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72578 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,72582:CD,72587:CD,72592:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72582 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,82336
72587 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72592 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,72596:CD,72601:CD,72606:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72596 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,82347
72601 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72606 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,72610:CD,72615:CD,72620:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72610 :: CALL :: call :: V :: v167.setGene(v10)::CL,82358
72615 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72620 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,72624:CD,72629:CD,72634:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72508:JM,72830
72624 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,82369
72629 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72634 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,72638:CD,72643:CD,72648:JM,72704:JM,72578:JM,72452:JM,72774:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72638 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,82380
72643 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72648 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,72652:CD,72657:CD,72662:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72652 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,82391
72657 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72662 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,72666:CD,72671:CD,72676:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72666 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,82402
72671 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72676 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,72680:CD,72685:CD,72690:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72680 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,82413
72685 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72690 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,72694:CD,72699:CD,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72694 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,82424
72699 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72704 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,72708:CD,72713:CD,72718:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72708 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,82435
72713 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72718 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,72722:CD,72727:CD,72732:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72722 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,82446
72727 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72732 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,72736:CD,72741:CD,72746:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72736 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,82457
72741 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72746 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,72750:CD,72755:CD,72760:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72634:JM,72508:JM,72830
72750 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,82468
72755 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72760 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,72764:CD,72769:CD,72774:JM,72704:JM,72578:JM,72452:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72764 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,82479
72769 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72774 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,72778:CD,72783:CD,72788:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72778 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,82490
72783 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72788 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,72792:CD,72797:CD,72802:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72792 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,82501
72797 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72802 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,72806:CD,72811:CD,72816:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72806 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,82512
72811 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72816 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,72820:CD,72825:CD,72830:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508
72820 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,82523
72825 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72830 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,72834:CD,72839:CD,72844:JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72834 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,82534
72839 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,72704:JM,72578:JM,72452:JM,72774:JM,72648:JM,72522:JM,72844:JM,72718:JM,72592:JM,72466:JM,72788:JM,72662:JM,72536:JM,72410:JM,72732:JM,72606:JM,72480:JM,72802:JM,72357:JM,72676:JM,72550:JM,72424:JM,72746:JM,72620:JM,72494:JM,72816:JM,72690:JM,72564:JM,72438:JM,72760:JM,72634:JM,72508:JM,72830
72844 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,72848
72848 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,82545
72853 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
73033 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,73037
73037 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
73040 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,73044
73044 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
73047 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
73050 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
73053 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
73056 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
73059 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
73062 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
73065 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
73068 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
73093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,73098:CD,73102:CD,73107
73098 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
73102 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,73107
73107 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,73109:CD,73114:CD,73115
73109 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,73365:JM,73114
73115 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,73116:CD,73124:CD,73130:CD,73135:CD,73139:CD,73144:CD,73152:CD,73365:CD,73366:CD,73372
73114 :: EXPR :: assign :: I :: v13 = v12.length::DD,73115
73116 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
73124 :: CALL :: call :: V :: v112.setSurname(v114)::CL,82575
73130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
73135 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,82586
73139 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
73144 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
73152 :: CALL :: call :: Z :: v128 = v4.add(v112)::
73159 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
73165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
73170 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
73175 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
73183 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
73187 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,73233:JM,73297:JM,73329:JM,73192
73193 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,73194:CD,73200:CD,73205:CD,73210:CD,73215:CD,73219:CD,73224:CD,73233:CD,73234:CD,73371
73192 :: EXPR :: assign :: I :: v31 = v30.length::DD,73193
73194 :: CALL :: call :: V :: v26.setSurname(v16)::CL,82575
73200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
73205 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
73210 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
73215 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,82586
73219 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
73224 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
73233 :: EXPR :: assign :: I :: v49 = v30.length::DD,73234
73234 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,73239:CD,73245:CD,73250:CD,73254:CD,73259:CD,73297:CD,73298:CD,73299:CD,73302:CD,73307:CD,73312:CD,73317:CD,73325:CD,73329:CD,73330:CD,73337:CD,73342:CD,73347:CD,73355:CD,73368:CD,73369:CD,73370:CD,73371
73239 :: CALL :: call :: V :: v26.setSurname(v50)::CL,82575
73245 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
73250 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,82586
73254 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
73259 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
73269 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,73369
73273 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,73369
73274 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
73282 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,73369
73287 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,73369
73292 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,73369
73297 :: EXPR :: assign :: I :: v63 = v30.length::DD,73298
73296 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,73370:CF,73368
73299 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,73273:CD,73274:CD,73282:CD,73287:CD,73292:CD,73296:CD,73297:CD,73298:CD,73368:CD,73369:CD,73370
73298 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,73299
73302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
73307 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
73312 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
73317 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
73325 :: CALL :: call :: V :: v26.setInitials(v78)::CL,82595
73329 :: EXPR :: assign :: I :: v93 = v30.length::DD,73330
73331 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
73330 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
73337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
73342 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
73347 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
73355 :: CALL :: call :: V :: v26.setSurname(v95)::CL,82575
73359 :: CALL :: call :: Z :: v107 = v4.add(v26)::
73365 :: EXPR :: assign :: I :: v15 = v12.length::CF,73366
73364 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,73372
73366 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,73165:CD,73170:CD,73175:CD,73183:CD,73187:CD,73192:CD,73193:CD,73359:CD,73364:CD,73365:CD,73371:CD,73372
73369 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,73370
73368 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,73369:DD,73368:DD,73371
73371 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,73364
73370 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,73296:DD,73299:CF,73297
73372 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,73366:DD,73368:DD,73371:CF,73365
73469 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,73474
73474 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
73480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,73485
73485 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
73491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,73496
73496 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
73517 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73522 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73527 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73532 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73646
73540 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73545 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,73546:CD,73564:CD,73574:CD,73578:JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73546 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73564 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
73574 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73578 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,73599:CD,73613:CD,73622:CD,73626:CD,73627:CD,73631:CD,73632:CD,73638:CD,73642:CD,73646:CD,73647:CD,73651:CD,73652:CD,73658:CD,73662:CD,73666:CD,73667:CD,73671:CD,73672:CD,73678:CD,73682:CD,73683:CD,73689:CD,73693:CD,73701:CD,73706:CD,73710:CD,73711:CD,73717:CD,73721:CD,73727:CD,73731:CD,73736:CD,73740:CD,73752:CD,73769:CD,73786:CD,73803:CD,73812:CD,73817:CD,73873:CD,73878:JM,73545:JM,73578
73599 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73613 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
73622 :: CALL :: call :: I :: v38 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73627 :: CALL :: call :: I :: v42 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73626 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73646:JM,73710
73631 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73632 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73638 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73646
73642 :: CALL :: call :: I :: v49 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73647 :: CALL :: call :: I :: v53 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73646 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73646:JM,73710
73651 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73652 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73658 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,73666:JM,73671:JM,73817
73662 :: CALL :: call :: I :: v61 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73667 :: CALL :: call :: I :: v65 = v28.length()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73666 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73646:JM,73710
73671 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73672 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73678 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,73817
73683 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,73879:JM,73878:JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73689 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73693 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
73701 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,73879:JM,73878
73706 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73711 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73710 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73717 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,73651:JM,73666:JM,73671:JM,73817:JM,73626:JM,73631:JM,73710:JM,73646
73721 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,73879:JM,73878
73727 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,73879:JM,73878
73731 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,73879:JM,73878
73736 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,73879:JM,73878
73740 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,73879:JM,73878
73752 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
73769 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
73786 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
73803 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
73812 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,73817
73817 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,73818:JM,73817
73818 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,73817
73833 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,73651:JM,73666:JM,73671:JM,73545:JM,73817:JM,73578:JM,73626:JM,73631:JM,73710:JM,73646
73834 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
73842 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
73847 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
73873 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,73879:JM,73878
73879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
73878 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,73885:CD,73893:CD,73898
73885 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
73890 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
73893 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
73898 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
74030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,74035
74035 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
74041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,74042:CD,74048
74042 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,60780
74045 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,74048
74048 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,74042
74050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,74055:JM,74059
74055 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,74059
74059 :: EXPR :: modify :: Z :: p0 $this .published = v5::
74075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,74080
74080 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
74096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,74101
74101 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
74117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,74122
74122 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
74128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,74133
74133 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
74139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,74144
74144 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
74150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,74155
74155 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
74161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,74166
74166 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
74172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,74177
74177 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
74183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,74187:CD,74191:CD,74195:CD,74200:CD,74205:CD,74210:CD,74215:CD,74220:CD,74225:CD,74230:CD,74238:CD,74258:CD,74262:CD,74263:CD,74268:CD,74276:CD,74281:CD,74286:CD,74294:CD,74298:CD,74340:CD,74345:CD,74350:CD,74358:CD,74363:CD,74385:CD,74390:CD,74412:CD,74417:CD,74439:CD,74444:CD,74463
74187 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,74187
74191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
74195 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
74200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
74205 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
74210 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
74215 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
74220 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
74225 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
74230 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
74235 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,74262
74238 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,74262
74243 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,74262
74248 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
74253 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
74258 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,74262
74263 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
74262 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,74243:CD,74248:CD,74253:CD,74258:JM,74262
74268 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
74273 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
74276 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
74281 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
74286 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
74291 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,74298
74294 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,74298
74299 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,74326
74298 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,74302:CD,74322:CD,74326:CD,74327:CD,74332
74302 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,74326
74307 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,74326
74312 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
74317 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
74322 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,74326
74327 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
74326 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,74307:CD,74312:CD,74317:CD,74322:JM,74326
74332 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
74337 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
74340 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
74345 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
74350 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
74355 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,74363
74358 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,74363
74363 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,74367:CD,74372:CD,74377
74364 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
74367 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
74372 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
74377 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
74382 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,74390
74385 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,74390
74391 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
74390 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,74394:CD,74399:CD,74404
74394 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
74399 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
74404 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
74409 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,74417
74412 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,74417
74417 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,74421:CD,74426:CD,74431
74418 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
74421 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
74426 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
74431 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
74436 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,74444
74439 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,74444
74445 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
74444 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,74448:CD,74453:CD,74458
74448 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
74453 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
74458 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
74463 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
74581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,74586
74586 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
74592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,74597
74597 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
74603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,74604:CD,74608:CD,74633:CD,74637:JM,74617
74604 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,61248:JM,61328
74608 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,74617:JM,74637
74613 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,74617:JM,74637
74617 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,74632
74618 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,74631:CL,27854
74622 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,74631:CL,27854
74626 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,74631
74631 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,74632:CD,74633:CD,74637:JM,74617
74633 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,74617:JM,74637
74632 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,74604
74637 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,74613:CD,74617:CD,74618:CD,74622:CD,74626:CD,74631:CD,74640:CD,74645:CD,74649:CD,74654:CD,74659:CD,74663:CD,74668:CD,74676:JM,74637
74640 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
74645 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,27854
74649 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
74654 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
74659 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,74617:JM,74637
74663 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,74617:JM,74637
74668 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
74676 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,74604
74694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,74700:CD,74704:CD,74719:CD,74723:CD,74739:CD,74743:CD,74756:CD,74762
74700 :: CALL :: call :: Ljava/util/List :: v6 = p2 $seqRes .getAtomGroups()::JM,38492:JM,38287:CL,30249
74704 :: CALL :: call :: Ljava/util/List :: v8 = p1 $atomRes .getAtomGroups()::CL,30249
74719 :: CALL :: call :: I :: v18 = v8.size()::
74723 :: CALL :: call :: Ljava/lang/Integer :: v20 = valueOf(v18)::
74739 :: CALL :: call :: I :: v26 = v6.size()::JM,38492:JM,38287
74743 :: CALL :: call :: Ljava/lang/Integer :: v28 = valueOf(v26)::JM,38492:JM,38287
74756 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,74762:CL,82649
74763 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,74973
74762 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,74763:CD,74776:CD,74781:CD,74787:CD,74792:CD,74796
74776 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,74796:CL,50203
74781 :: CALL :: call :: I :: v40 = v38.size()::JM,74796
74787 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,74797:CL,50203
74792 :: CALL :: call :: I :: v45 = v43.size()::JM,74797
74797 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,74804:CD,74814:CD,74831:CD,74839
74796 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,74797:CD,74855:CD,74860:CD,74864
74804 :: CALL :: call :: Ljava/lang/Integer :: v81 = valueOf(v45)::
74814 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,83113
74831 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v40)::
74839 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v45)::
74855 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,74864:CL,50203
74860 :: CALL :: call :: I :: v50 = v48.size()::JM,74864
74864 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,74888:CD,74892:CD,74898
74888 :: CALL :: call :: Ljava/util/List :: v57 = p1 $atomRes .getAtomGroups()::JM,38492:JM,38287:CL,30249
74892 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,38492:JM,38287:JM,74898:CL,83192
74899 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,74973
74898 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,74899
74973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,74978:CD,74992:CD,74996:JM,74997
74978 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,74997:JM,74996
74983 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,74996
74988 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,56647
74992 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,74996
74997 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
74996 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,74983:CD,74988:CD,74992:JM,74996
75011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,75016:CD,75030:CD,75034:JM,75035
75016 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,75035:JM,75034
75021 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,75034
75026 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,56647
75030 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,75034
75035 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
75034 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,75021:CD,75026:CD,75030:JM,75034
75049 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,75055:CD,75069:CD,75073:CD,75077:CD,75085
75055 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,75073
75060 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,75073
75065 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,71199
75069 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,75073
75073 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,75060:CD,75065:CD,75069:JM,75073
75074 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
75077 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,75073
75082 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
75085 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,75073
75105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,75106:CD,75110:CD,75116
75106 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
75110 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,75116:CL,83460
75116 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,75106
75120 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,75125
75125 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
75131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,75132:CD,75136:CD,75141
75132 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,61562:JM,62764:JM,83480
75136 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,75141:CL,49657
75141 :: NORM :: compound :: Ljava/util/List :: return v5::DD,75132
75144 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CD,75149
75149 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::CL,83543
75159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,75160:CD,75166
75160 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,61695
75163 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,75166
75166 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,75160
75168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,75176
75176 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
75233 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,75234:CD,75240
75234 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
75237 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,75240
75240 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,75234
75243 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
75242 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,75243:CD,75248:CD,75255
75248 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,75255:CL,83676
75255 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,75243
75261 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::
75260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,75261:CD,75267
75264 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,75267
75267 :: NORM :: compound :: Ljava/util/List :: return v3::CF,75261
75269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,75274
75274 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
75281 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,62304
75280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,75281:CD,75287
75284 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,75287
75287 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,75281
75289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,75290:CD,75296
75290 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,62314
75293 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,75296
75296 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,75290
75343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CD,75353:CD,75362:CD,75368:CD,75372:CD,75376:CD,75381:JM,55972:JM,55975:JM,55978:CD,75391:CD,75396:CD,75400:CD,75417:CD,75422:CD,75427:CD,75432:CD,75437:CD,75442:CD,75447:CD,75452:CD,75461:CD,75467:JM,75354:JM,75358
75353 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,75354:CD,75358:CD,75467:JM,75353
75354 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,75353:JM,75467:JM,75354:JM,75358
75358 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,75467
75362 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,75144
75368 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,75353:JM,75467:JM,75354:JM,75358
75372 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,75358
75376 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
75381 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
75391 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,50270
75396 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,75396:JM,75400
75401 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,75396:JM,75400
75400 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,75401:CD,75410:JM,75396:JM,75400
75410 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,83823
75417 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
75422 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,75396:JM,75400
75427 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
75432 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,75353:JM,75467:JM,75354:JM,75358
75437 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,75358
75442 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
75447 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,75353:JM,75467:JM,75354:JM,75358
75452 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,75358
75461 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::CL,76850
75467 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
75562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,75566:CD,75567:CD,75575:CD,75580:CD,75584:CD,75585:CD,75593:CD,75601:CD,75606:CD,75611:CD,75615:CD,75616:CD,75624:CD,75632:CD,75637:CD,75642:CD,75646:CD,75647:CD,75655:CD,75663:CD,75668:CD,75673:CD,75677:CD,75678:CD,75686:CD,75694:CD,75699:CD,75704:CD,75708:CD,75709:CD,75717:CD,75725:CD,75730:CD,75735:CD,75739:CD,75740:CD,75748:CD,75756:CD,75761:CD,75766:CD,75770:CD,75771:CD,75779:CD,75784:CD,75788:CD,75789:CD,75797:CD,75805:CD,75810:CD,75815:CD,75819:CD,75820:CD,75828:CD,75836:CD,75841:CD,75846:CD,75850:CD,75851:CD,75859:CD,75867:CD,75872:CD,75877:CD,75881:CD,75882:CD,75890:CD,75898:CD,75903:CD,75908:CD,75912:CD,75913:CD,75921:CD,75929:CD,75934:CD,75939:CD,75943:CD,75944:CD,75952:CD,75960:CD,75965:CD,75970:CD,75974:CD,75975:CD,75983:CD,75988
75567 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
75566 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
75575 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
75580 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
75585 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
75584 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
75593 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
75598 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
75601 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
75606 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
75611 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
75615 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
75616 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
75624 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
75629 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
75632 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
75637 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
75642 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
75647 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
75646 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
75655 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
75660 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
75663 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
75668 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
75673 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
75677 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
75678 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
75686 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
75691 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
75694 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
75699 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
75704 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
75709 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
75708 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
75717 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
75722 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
75725 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
75730 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
75735 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
75739 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
75740 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
75748 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
75753 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
75756 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
75761 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
75766 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
75771 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
75770 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
75779 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
75784 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
75789 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
75788 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
75797 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
75802 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
75805 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
75810 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
75815 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
75819 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
75820 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
75828 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
75833 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
75836 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
75841 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
75846 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
75851 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
75850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
75859 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
75864 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
75867 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
75872 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
75877 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
75881 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
75882 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
75890 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
75895 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
75898 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
75903 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
75908 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
75913 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
75912 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
75921 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
75926 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
75929 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
75934 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
75939 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
75943 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
75944 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
75952 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
75957 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
75960 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
75965 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
75970 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
75975 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
75974 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
75983 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
75988 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
76081 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,62470
76080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,76081:CD,76097:CD,76119:CD,76129:JM,83953:JM,83956:JM,83959:JM,83950:CD,76139:CD,76143:CD,76154:CD,76170
76097 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,75343
76119 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,75343
76129 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,76143
76139 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,84028
76143 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,76081
76154 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,84045
76170 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,76081
76208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,76215:CD,76219:CD,76306:CD,76310
76215 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,76310:CL,38259
76219 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,76310
76224 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,76310
76229 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,76304:JM,76247:JM,76239:CL,84341
76234 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,76304:JM,76247:JM,76239
76239 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,76240
76241 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,76304:JM,76247:JM,76239
76240 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,76241:CD,76242:CD,76247:CD,76248:CF,76299
76242 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,76304:JM,76247:JM,76239
76247 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,76248
76248 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,76250:CD,76256:CD,76257:CD,76263:CD,76267:JM,76304:JM,76247:JM,76239
76250 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,76304:JM,76247:JM,76239
76257 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,76304:JM,76247:JM,76239
76256 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,76304:JM,76247:JM,76239
76263 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,76267:CL,50261
76267 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,76268:CD,76272:CF,76299
76268 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,76272:CL,50261
76272 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,76274:CD,76278:CD,76282
76274 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,76282:CL,84350
76278 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,76283:CL,84362
76283 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,76285:CD,76290:CD,76291
76282 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,76283:CF,76299
76285 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,76290:CL,84374
76291 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,83953:JM,83956:JM,83959:JM,83950:CF,76299
76290 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,76291
76299 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,76312
76300 :: CALL :: call :: I :: v17 = v15.size()::JM,76304:JM,76247:JM,76239
76305 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,76234:CD,76239:CD,76240:CD,76299:CD,76300:CD,76304:CD,76312:JM,76247:JM,76310
76304 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,76305
76306 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,76310
76310 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,76224:CD,76229:CD,76300:CD,76304:CD,76305:CD,76306:CD,76312:JM,76310
76312 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,76304:JM,76247:JM,76239:DD,76241:DD,76256:DD,76299:DD,76305
76361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,76368:CD,76372:CD,76459:CD,76463
76368 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,76463:CL,38259
76372 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,76463
76377 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,76463
76382 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,76400:JM,76457:JM,76392:CL,84341
76387 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,76400:JM,76457:JM,76392
76393 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,76394:CD,76395:CD,76400:CD,76401:CF,76452
76392 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,76393
76395 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,76400:JM,76457:JM,76392
76394 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,76400:JM,76457:JM,76392
76401 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,76403:CD,76409:CD,76410:CD,76416:CD,76420:JM,76400:JM,76457:JM,76392
76400 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,76401
76403 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,76400:JM,76457:JM,76392
76409 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,76400:JM,76457:JM,76392
76410 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,76400:JM,76457:JM,76392
76416 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,76420:CL,50261
76421 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,76425:CL,50261
76420 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,76421:CD,76425:CF,76452
76425 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,76427:CD,76431:CD,76435
76427 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,76435:CL,84433
76431 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,76436:CL,84445
76435 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,76436:CF,76452
76436 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,76438:CD,76443:CD,76444
76438 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,76443:CL,84374
76443 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,76444
76444 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,83953:JM,83956:JM,83959:JM,83950:CF,76452
76453 :: CALL :: call :: I :: v17 = v15.size()::JM,76400:JM,76457:JM,76392
76452 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,76465
76457 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,76458
76459 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,76463
76458 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,76387:CD,76392:CD,76393:CD,76452:CD,76453:CD,76457:CD,76465:JM,76400:JM,76463
76463 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,76377:CD,76382:CD,76453:CD,76457:CD,76458:CD,76459:CD,76465:JM,76463
76465 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,76400:JM,76457:JM,76392:DD,76394:DD,76409:DD,76452:DD,76458
76514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,76521:CD,76525:CD,76666:CD,76670
76521 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,76670:CL,38259
76525 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,76670
76530 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,76670
76535 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,76548:JM,76665:CL,30249
76539 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,76548:JM,76665
76544 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,76548:JM,76665
76549 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,76553:CL,50261
76548 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
76553 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,76555:CD,76559:CD,76564:CD,76568:CD,76583:CD,76587:CD,76588:CD,76656:CD,76660
76555 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,76660
76559 :: CALL :: call :: Z :: v29 = v26.add(v22)::
76564 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,76577:JM,76587:CL,63323
76568 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,76577:JM,76587
76573 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,76577:JM,76587
76577 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
76578 :: CALL :: call :: Z :: v40 = v26.add(v38)::
76583 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,76577:JM,76587
76587 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,76573:CD,76577:CD,76578:CD,76583:JM,76587:JM,76660
76588 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,76660
76593 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,76660
76602 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,34616
76606 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,76655:CL,84457
76610 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,76655
76615 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,76655
76624 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,76638:CL,76850
76633 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,76639:CL,76850
76639 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,83953:JM,83956:JM,83959:JM,83950:JM,76655
76638 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,76639:JM,76655
76651 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,76655
76655 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,76615:CD,76624:CD,76633:CD,76638:CD,76651:JM,76655:JM,76660
76656 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,76660
76661 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,76548:JM,76665
76660 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,76593:CD,76602:CD,76606:CD,76610:CD,76651:CD,76655:CD,76656:JM,76660:JM,76548:JM,76665
76665 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,76544:CD,76548:CD,76549:CD,76553:CD,76661:JM,76665:JM,76670
76666 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,76670
76670 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,76530:CD,76535:CD,76539:CD,76661:CD,76665:CD,76666:JM,76670
76731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,76738:CD,76742:CD,76812:CD,76816
76738 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,76816:CL,38259
76742 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,76816
76747 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,76816
76752 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,76811:CL,30249
76756 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,76811
76761 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,76811
76766 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,76806:CL,70238
76770 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,76806
76775 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,76806
76780 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,76784:CL,84466
76785 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,76793:CL,84466
76784 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,76785:CD,76789:CD,76793:JM,76806
76789 :: CALL :: call :: I :: v38 = v36.size()::JM,76793
76793 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,76794:CD,76798:CD,76799:JM,76806
76794 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,76798:CL,84466
76799 :: CALL :: call :: V :: v41.trimToSize()::
76798 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
76802 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,76806
76807 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,76811
76806 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,76775:CD,76780:CD,76784:CD,76802:JM,76806:JM,76811
76811 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,76761:CD,76766:CD,76770:CD,76802:CD,76806:CD,76807:JM,76811:JM,76816
76812 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,76816
76816 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,76747:CD,76752:CD,76756:CD,76807:CD,76811:CD,76812:JM,76816
76841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,76842:CD,76848
76842 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,62754:JM,62583
76845 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,76848
76848 :: NORM :: compound :: Ljava/util/List :: return v3::CF,76842
76851 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,76638:JM,76639:JM,84359:JM,84371:JM,84442:JM,84454
76850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,76851:CD,76858:JM,76891
76855 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,76858
76858 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,76862:CD,76867:CD,76868:CD,76872:CD,76893:CD,76897
76862 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,76867
76867 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,76868
76869 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,76881:JM,76897
76868 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,76851
76872 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,76881:JM,76897
76877 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,76881:JM,76897
76881 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,76892
76882 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,76891:CL,57137
76886 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,76891
76891 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,76892:CD,76893:CD,76897:JM,76881
76893 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,76881:JM,76897
76892 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,76851
76897 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,76877:CD,76881:CD,76882:CD,76886:CD,76891:CD,76898:JM,76897
76898 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,76851
76915 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,89364:JM,89390
76914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,76915:CD,76921
76918 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,76921
76921 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,76915
76923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,76928
76928 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
76934 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,76949:CD,76958:CD,76963:CD,76967:JM,76987
76949 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
76958 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,76967:CL,49657
76963 :: CALL :: call :: I :: v13 = v11.size()::JM,76967
76967 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,76969:CD,76977:CD,76983:CD,76987:JM,76967
76969 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,76934
76977 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,76967:JM,76987
76983 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,76987:CL,84475
76987 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,76989:CD,77009
76989 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,76934
77009 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,84488
77045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,77046:CD,77055:CD,77059:JM,77073:JM,77093
77046 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,63308:JM,77082:JM,77102
77055 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,77059:CL,70984
77059 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,77060:CD,77064:CD,77069:CD,77073
77060 :: NORM :: compound :: Z :: return #(0)::DD,77046
77064 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,77073:CL,49657
77069 :: CALL :: call :: I :: v13 = v11.size()::JM,77073
77073 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,77075:CD,77082:CD,77083:CD,77089:CD,77093:JM,77073
77075 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,77082:CL,77045
77083 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,77073:JM,77093
77082 :: NORM :: compound :: Z :: return v26::DD,77046
77089 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,77093:CL,84475
77093 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,77095:CD,77102:CD,77104
77095 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,77102:CL,77045
77103 :: NORM :: compound :: Z :: return #(0)::DD,77046
77102 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,77103:CD,77104
77104 :: NORM :: compound :: Z :: return #(1)::DD,77046
77345 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,77348:CD,77350:CD,77352:CD,77355:CD,77358:CD,77366:CD,77371:CD,77376:CD,77390
77348 :: CALL :: call :: V :: initPath()::CL,84505
77350 :: CALL :: call :: V :: initServerName()::CL,84528
77352 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,84543
77355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
77358 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
77366 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
77371 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
77376 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
77390 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,84601
77435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,77436:CD,77441:CD,77446
77436 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
77441 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,77441:JM,77446
77446 :: NORM :: compound :: Z :: return v7::CF,77436
77449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,77455:CD,77459:CD,77478:CD,77482:CD,77485:CD,77491
77455 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,50982
77459 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,77485
77478 :: CALL :: call :: V :: v8.print(v15)::
77482 :: CALL :: call :: V :: v8.flush()::
77485 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,77486
77486 :: CALL :: call :: V :: v8.close()::
77491 :: CALL :: call :: V :: v8.close()::
77525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,77530:CD,77534:CD,77540:CD,77544:CD,77549:CD,77553:CD,77558:CD,77562:CD,77567:CD,77571:CD,77587:CD,77593:CD,77603:CD,77616:CD,77622:CD,77632:CD,77639
77530 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,77534
77534 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
77540 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
77544 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,77534
77549 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
77553 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
77558 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
77562 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,77534
77567 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
77571 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
77587 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
77593 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
77603 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
77616 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
77622 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
77632 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
77639 :: CALL :: call :: V :: v54.printStackTrace()::
77755 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,64548:JM,64538
77754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,77755:CD,77759:CD,77763:CD,77767:CD,77771:JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77871:JM,77951
77759 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,77772:DD,77788:DD,78066
77763 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77767 :: CALL :: call :: I :: v9 = v7.length()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77771 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,77772:CD,77773:CD,77777:CD,77781:JM,78067:JM,78050:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77773 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77772 :: NORM :: compound :: Ljava/util/List :: return v4::DD,77755
77777 :: CALL :: call :: I :: v14 = v12.length()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77781 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,77782:CD,77787:CD,78046:CD,78050:CD,78051:CD,78055:CD,78060:CD,78066:CD,78078:CD,78079:CD,78080:CD,78081:CD,78082:JM,78067:JM,77781:JM,78068:JM,77830:JM,77803:JM,77771:JM,77871:JM,77951
77782 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77787 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,77788:CD,78046:CD,78050:CD,78051:CD,78055:CD,78060:CD,78066:CD,78078:CD,78079:CD,78080:CD,78081:CD,78082
77788 :: NORM :: compound :: Ljava/util/List :: return v4::DD,77755
77790 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77795 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77803:JM,77771:JM,77871:JM,77951
77799 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77803 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,77804
77805 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77804 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,78067:CD,77805:CD,77806:CD,77811
77806 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77811 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77771:JM,77871:JM,77951
77815 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,78068:CD,77816:CD,77817:CD,77822
77817 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77816 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
77822 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77771:JM,77871:JM,77951
77826 :: CALL :: call :: C :: v43 = v25.charValue()::JM,78067:JM,78068:JM,77830:JM,77871:JM,77951
77831 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,77848:CD,77832:CD,77837:CD,77849:CD,77857:CD,77862:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77830 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,77831:CD,77867:CD,77871:JM,78067:JM,78068:JM,77830:JM,77951
77832 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,77837
77837 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,77838:CD,77842
77838 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
77842 :: CALL :: call :: Z :: v50 = v4.add(v48)::
77849 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
77848 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
77857 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,78076
77862 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,78076
77867 :: CALL :: call :: C :: v60 = v25.charValue()::JM,78067:JM,78068:JM,77830:JM,77871:JM,77951
77871 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,77872:CD,77947:CD,77951:JM,78067:JM,78068:JM,77830:JM,77871
77873 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,78069:CD,77874
77872 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,77873:CD,77885:CD,77921:CD,78069:CD,78070
77875 :: CALL :: call :: C :: v63 = v35.charValue()::JM,77883
77874 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,77875:CD,77879:CD,77883:CD,77884:CD,78069:CD,78070
77879 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,77883
77883 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,78069:CD,77884:CD,78070
77885 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,77902:CD,77886:CD,77891:CD,77903:CD,77911:CD,77916:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77884 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,78069
77886 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,77891
77891 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,77892:CD,77896
77892 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
77896 :: CALL :: call :: Z :: v74 = v4.add(v72)::
77903 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
77902 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
77911 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,78076
77916 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,78076
77921 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,77922:CD,77926:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77922 :: CALL :: call :: C :: v84 = v41.charValue()::JM,77926
77926 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,77928:CD,77929:CD,77937:CD,77942:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77929 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
77928 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
77937 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,78076
77942 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,78076
77947 :: CALL :: call :: C :: v94 = v25.charValue()::JM,78067:JM,78068:JM,77830:JM,77871:JM,77951
77951 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,78027:CD,77952:CD,78028:CD,78036:CD,78041:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77953 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,78071:CD,77954
77952 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,77953:CD,77965:CD,78001:CD,78071:CD,78072
77955 :: CALL :: call :: C :: v97 = v35.charValue()::JM,77963
77954 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,77955:CD,77959:CD,77963:CD,77964:CD,78071:CD,78072
77959 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,77963
77963 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,78071:CD,77964:CD,78072
77965 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,77982:CD,77966:CD,77971:CD,77983:CD,77991:CD,77996:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
77964 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,78071
77966 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,77971
77971 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,77972:CD,77976
77972 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
77976 :: CALL :: call :: Z :: v108 = v4.add(v106)::
77983 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
77982 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
77991 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,78076
77996 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,78076
78001 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,78002:CD,78006:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
78002 :: CALL :: call :: C :: v118 = v41.charValue()::JM,78006
78006 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,78008:CD,78009:CD,78017:CD,78022:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077
78009 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
78008 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
78017 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,78076
78022 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,78076
78027 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
78028 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
78036 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,78076
78041 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,78076
78045 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,78082:CF,78078
78046 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,78067:JM,78050:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951
78051 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,78060
78050 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,77790:CD,77795:CD,77799:CD,77803:CD,77804:CD,77815:CD,77826:CD,77830:CD,78045:CD,78046:CD,78067:CD,78068:CD,78073:CD,78074:CD,78075:CD,78076:CD,78077:CD,78078:CD,78079:CD,78080:CD,78081:CD,78082:JM,78050:JM,77781:JM,77787:JM,77771:JM,77871:JM,77951:JM,78060
78055 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,78060
78061 :: CALL :: call :: Z :: v151 = v4.add(v144)::
78060 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,78061:CF,78066
78067 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,77874:JM,77883:DD,77954:JM,77963:CF,77815
78066 :: NORM :: compound :: Ljava/util/List :: return v4::DD,77755
78069 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,78070:DD,78077
78068 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,78067:JM,78068:JM,77830:JM,77871:JM,77951:DD,77921:JM,77926:DD,78001:JM,78006
78071 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,78072:DD,78077
78070 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,77885
78073 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,78074:DD,78078
78072 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,77965
78075 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,78076:DD,78080
78074 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,78075:DD,78079
78077 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,78045
78076 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,78077:DD,78081
78079 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,78080:DD,77953:DD,78074
78078 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,78079:DD,77831:DD,77872:DD,77952:DD,78073
78081 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,78082:JM,77837:JM,77891:JM,77971:JM,78060:DD,78076
78080 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,78081:DD,77873:DD,78075
78082 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,78067:JM,77781:JM,78068:JM,77830:JM,77787:JM,77803:JM,77771:JM,77871:JM,77951:DD,77804:DD,77805:DD,77815:DD,77816:DD,77884:DD,77964:DD,78050:DD,78069:DD,78071:DD,78077
78245 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,64930
78244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,78245:CD,78252:CD,78256:CD,78273:CD,78274:CD,78282:CD,78286:CD,78290:CD,78307:CD,78308:CD,78328:CD,78329:CD,78330:CD,78516:CD,78520:CD,78521:CD,78524:CD,78525:CD,78526:JM,78346
78252 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,78256:JM,78521:JM,78520:JM,78346:JM,78252
78256 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,78256:JM,78521:JM,78520:JM,78346
78273 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,78245
78274 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,78328:CL,84916
78282 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,78290
78286 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
78290 :: EXPR :: assign :: I :: v27 = v24.length::DD,78307
78300 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
78307 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,78308:CD,78300:CD,78306:CD,78524
78306 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,78524
78308 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
78321 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
78327 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,78525
78329 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,78321:CD,78327:CD,78328:CD,78525:JM,78256:JM,78521:JM,78520:JM,78346:JM,78252
78328 :: EXPR :: assign :: I :: v39 = v20.length::CF,78329
78330 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,78256:JM,78521:JM,78520:JM,78346:JM,78252
78335 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,78256:JM,78521:JM,78520:JM,78346
78341 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,78256:JM,78521:JM,78520:JM,78346
78340 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,78256:JM,78521:JM,78520:JM,78346:DD,78526
78347 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,78352
78346 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,78451:JM,78457:JM,78463
78353 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,78362:CD,78354:CD,78367:CD,78371:CD,78377:CD,78381:CD,78386:CD,78390:CD,78394:CD,78398:CD,78404:CD,78409:CD,78413:CD,78418:CD,78419:CD,78526
78352 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,78353:JM,78371:JM,78377:JM,78367:JM,78386:JM,78398:JM,78390:JM,78394
78354 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,85093
78362 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
78367 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,78371:JM,78377:JM,78367
78371 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,78371:JM,78377
78377 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,78377
78381 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
78386 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,78386:JM,78398
78390 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,78390:JM,78394:JM,78398
78394 :: CALL :: call :: I :: v77 = v75.length()::JM,78394:JM,78398
78398 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,78398
78404 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
78409 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
78413 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,78418
78419 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,78420:CD,78428:CD,78436:CD,78440:CD,78441:CD,78445:CD,78450:CD,78526
78418 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,78419:JM,78428
78420 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,85093
78428 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,78428
78432 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,78450:JM,78436:JM,78445
78436 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,78450:JM,78436:JM,78445
78441 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,78450:JM,78441:JM,78445
78440 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,78450:JM,78441:JM,78445
78445 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,78450:JM,78445
78451 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,78526:CD,78452:CD,78457
78450 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,78451:CD,78526
78452 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,78457
78457 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,78526:CD,78458:CD,78463
78458 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,78463
78463 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,78526:CD,78464:CD,78468
78464 :: CALL :: call :: I :: v108 = parseInt(v57)::
78468 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
78516 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,78256:JM,78521:JM,78520:JM,78346
78521 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,78245
78520 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,78335:CD,78340:CD,78341:CD,78346:CD,78347:CD,78352:CD,78353:CD,78516:CD,78526:JM,78256:JM,78520:CF,78521
78525 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,78327:DD,78329:CF,78328
78524 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,78306:DD,78307
78526 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,78256:JM,78521:JM,78520:JM,78346:DD,78340
78647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,78655:CD,78669:CD,78673
78652 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78673
78655 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78673
78660 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78673
78669 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78673
78673 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78660:CD,78669:JM,78673
78683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,78691:CD,78705:CD,78709
78688 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78709
78691 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78709
78696 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78709
78705 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78709
78709 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78696:CD,78705:JM,78709
78719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,78727:CD,78741:CD,78745
78724 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78745
78727 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78745
78732 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78745
78741 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78745
78745 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78732:CD,78741:JM,78745
78755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,78763:CD,78777:CD,78781
78760 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78781
78763 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78781
78768 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78781
78777 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78781
78781 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78768:CD,78777:JM,78781
78791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,78799:CD,78813:CD,78817
78796 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78817
78799 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78817
78804 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78817
78813 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78817
78817 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78804:CD,78813:JM,78817
78827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,78835:CD,78849:CD,78853
78832 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78853
78835 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78853
78840 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78853
78849 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78853
78853 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78840:CD,78849:JM,78853
78863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,78871:CD,78885:CD,78889
78868 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78889
78871 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78889
78876 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78889
78885 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78889
78889 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78876:CD,78885:JM,78889
78899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,78907:CD,78921:CD,78925
78904 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78925
78907 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78925
78912 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78925
78921 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78925
78925 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78912:CD,78921:JM,78925
78935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,78943:CD,78957:CD,78961
78940 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78961
78943 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78961
78948 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78961
78957 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78961
78961 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78948:CD,78957:JM,78961
78971 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,78979:CD,78993:CD,78997
78976 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,78997
78979 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,78997
78984 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,78997
78993 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,78997
78997 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,78984:CD,78993:JM,78997
79007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,79015:CD,79029:CD,79033
79012 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79033
79015 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79033
79020 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79033
79029 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79033
79033 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79020:CD,79029:JM,79033
79043 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,79051:CD,79065:CD,79069
79048 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79069
79051 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79069
79056 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79069
79065 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79069
79069 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79056:CD,79065:JM,79069
79079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,79087:CD,79101:CD,79105
79084 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79105
79087 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79105
79092 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79105
79101 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79105
79105 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79092:CD,79101:JM,79105
79115 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,79123:CD,79137:CD,79141
79120 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79141
79123 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79141
79128 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79141
79137 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79141
79141 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79128:CD,79137:JM,79141
79151 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,79159:CD,79173:CD,79177
79156 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79177
79159 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79177
79164 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79177
79173 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79177
79177 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79164:CD,79173:JM,79177
79187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,79195:CD,79209:CD,79213
79192 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79213
79195 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79213
79200 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79213
79209 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79213
79213 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79200:CD,79209:JM,79213
79223 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,79231:CD,79245:CD,79249
79228 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79249
79231 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79249
79236 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79249
79245 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79249
79249 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79236:CD,79245:JM,79249
79259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,79267:CD,79281:CD,79285
79264 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79285
79267 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79285
79272 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79285
79281 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79285
79285 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79272:CD,79281:JM,79285
79295 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,79303:CD,79317:CD,79321
79300 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79321
79303 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79321
79308 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79321
79317 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79321
79321 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79308:CD,79317:JM,79321
79331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,79339:CD,79353:CD,79357
79336 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79357
79339 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79357
79344 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79357
79353 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79357
79357 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79344:CD,79353:JM,79357
79367 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,79375:CD,79389:CD,79393
79372 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79393
79375 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79393
79380 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79393
79389 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79393
79393 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79380:CD,79389:JM,79393
79403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,79411:CD,79425:CD,79429
79408 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79429
79411 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79429
79416 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79429
79425 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79429
79429 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79416:CD,79425:JM,79429
79439 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,79447:CD,79461:CD,79465
79444 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79465
79447 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79465
79452 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79465
79461 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79465
79465 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79452:CD,79461:JM,79465
79475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,79483:CD,79497:CD,79501
79480 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79501
79483 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79501
79488 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79501
79497 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79501
79501 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79488:CD,79497:JM,79501
79511 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,79519:CD,79533:CD,79537
79516 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79537
79519 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79537
79524 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79537
79533 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79537
79537 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79524:CD,79533:JM,79537
79547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,79555:CD,79569:CD,79573
79552 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79573
79555 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79573
79560 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79573
79565 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,85393
79569 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79573
79573 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79560:CD,79565:CD,79569:JM,79573
79583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,79591:CD,79605:CD,79609
79588 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79609
79591 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79609
79596 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79609
79605 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79609
79609 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79596:CD,79605:JM,79609
79619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,79627:CD,79641:CD,79645
79624 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79645
79627 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79645
79632 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79645
79637 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,85484
79641 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79645
79645 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79632:CD,79637:CD,79641:JM,79645
79655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,79663:CD,79677:CD,79681
79660 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79681
79663 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79681
79668 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79681
79677 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79681
79681 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79668:CD,79677:JM,79681
79691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,79699:CD,79713:CD,79717
79696 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79717
79699 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79717
79704 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79717
79713 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79717
79717 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79704:CD,79713:JM,79717
79727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,79735:CD,79749:CD,79753
79732 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79753
79735 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79753
79740 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79753
79749 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79753
79753 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79740:CD,79749:JM,79753
79763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,79771:CD,79785:CD,79789
79768 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79789
79771 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79789
79776 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79789
79781 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,85534
79785 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79789
79789 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79776:CD,79781:CD,79785:JM,79789
79799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,79807:CD,79821:CD,79825
79804 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79825
79807 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79825
79812 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79825
79817 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,85564
79821 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79825
79825 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79812:CD,79817:CD,79821:JM,79825
79835 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,79843:CD,79857:CD,79861
79840 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79861
79843 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79861
79848 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79861
79857 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79861
79861 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79848:CD,79857:JM,79861
79871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,79879:CD,79893:CD,79897
79876 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79897
79879 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79897
79884 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79897
79893 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79897
79897 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79884:CD,79893:JM,79897
79907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,79915:CD,79929:CD,79933
79912 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,79933
79915 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79933
79920 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79933
79929 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79933
79933 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,79920:CD,79929:JM,79933
79943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,79953:CD,79969:CD,79973
79950 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,79973
79953 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,79973
79958 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,79973
79969 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,79973
79973 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,79958:CD,79969:JM,79973
80129 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,80133
80133 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
80136 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,80140
80140 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
80143 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,80147
80147 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
80158 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,80166:JM,80163
80163 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
80166 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,85645
80173 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,80178
80178 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
80184 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,80189
80189 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
80195 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,80200
80200 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
80675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,80676:CD,80683:CD,80689
80676 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
80683 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,80689:CL,85786
80689 :: NORM :: compound :: I :: return v8::CF,80676
80693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,80694:CD,80701:CD,80707
80694 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
80701 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,80707:CL,85800
80707 :: NORM :: compound :: I :: return v8::CF,80694
80717 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
80727 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,80734
80729 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,80734:JM,80914:JM,80741:JM,80885:JM,80838:JM,80875:JM,80908:JM,80911
80735 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,80736:CD,80738:CD,80746:CD,80868:CD,80870:CD,80875:CD,80876:CD,80908:CD,80909:CD,80913
80734 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,80735:DD,80908
80736 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,80738
80739 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,80741:JM,80908
80738 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,80908:CD,80739:CD,80741:CD,80909
80741 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,80741:JM,80908:JM,80914:JM,80885:JM,80838:JM,80875:JM,80911:JM,80734
80746 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,80913:CD,80753:CD,80757:CD,80758:CD,80777:CD,80778:CD,80786:CD,80791:CD,80795:CD,80859:CD,80912
80753 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,80757
80757 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,80758
80759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
80758 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,80759:CD,80760:CD,80768:CD,80773
80760 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
80768 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
80773 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
80777 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
80778 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
80786 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
80791 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
80795 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,80864
80802 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
80806 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
80811 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
80810 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,80838:JM,80911
80819 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,80838:JM,80911
80824 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,80838:JM,80911:JM,80914:JM,80741:JM,80885:JM,80875:JM,80908:JM,80734
80829 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,80914:JM,80838:JM,80875:JM,80911
80834 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,80838:JM,80911
80838 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,80838:JM,80911
80843 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,80911
80847 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,80911:JM,80838
80853 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,80853:JM,80857
80852 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,80912:CD,80853:CD,80857
80857 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,80912
80859 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,80913:CD,80860:CD,80864
80860 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,80864
80864 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,80913:CD,80802:CD,80806:CD,80810:CD,80811:CD,80819:CD,80824:CD,80829:CD,80834:CD,80838:CD,80852:CD,80859:CD,80911:CD,80912
80868 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,80875
80870 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,80875:JM,80914:JM,80741:JM,80885:JM,80838:JM,80908:JM,80911:JM,80734
80875 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,80876:DD,80914
80876 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,80879:CD,80890:CD,80891:CD,80914:CD,80915
80879 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,80914:CD,80880:CD,80882
80880 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,80882
80883 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,80914:JM,80885
80882 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,80914:CD,80883:CD,80885
80885 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,80914:JM,80885:JM,80741:JM,80838:JM,80875:JM,80908:JM,80911:JM,80734
80891 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,80892:CD,80894
80890 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,80915
80892 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
80894 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,80914:JM,80741:JM,80885:JM,80838:JM,80875:JM,80908:JM,80911:JM,80734
80909 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,80879:CF,80746
80908 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,80909:DD,80746:DD,80912:DD,80913
80911 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,80852:JM,80853:JM,80857
80913 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,80915
80912 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,80859:DD,80912:DD,80913
80915 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,80891:JM,80914:JM,80838:JM,80875:JM,80908:JM,80911:JM,80734
80914 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,80890:DD,80915
81183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,81188
81188 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
81195 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,70017:JM,70027
81194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,81195:CD,81201
81198 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,81201
81201 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,81195
81259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,81263:JM,56775:JM,56780:CD,81271:CD,81279:CD,81293:CD,81305:CD,81313:CD,81321:CD,81329:CD,81337:CD,81345
81263 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
81271 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,56879
81279 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,56890
81283 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,81286
81286 :: EXPR :: modify :: C :: v3.altLoc = v11::
81293 :: CALL :: call :: V :: v3.setCharge(v13)::CL,76923
81305 :: CALL :: call :: V :: v3.setX(v18)::CL,85980
81313 :: CALL :: call :: V :: v3.setY(v21)::CL,85996
81321 :: CALL :: call :: V :: v3.setZ(v24)::CL,86012
81329 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,56822
81337 :: CALL :: call :: V :: v3.setName(v30)::CL,56857
81345 :: CALL :: call :: V :: v3.setElement(v33)::CL,56945
81387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,81392
81392 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
81398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,81419:CD,81425:CD,81446:CD,81452:CD,81473:CD,81479
81419 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
81425 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
81446 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
81452 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
81473 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
81479 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
81515 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,71366:JM,71521
81514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,81515:CD,81519:JM,86049:JM,86043:JM,86046:CD,81525:CD,81544:CD,81545:CD,81549:JM,81542
81519 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,81545
81525 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,81926
81531 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
81535 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,81546
81537 :: EXPR :: modify :: D :: v9[v15] = v12::
81541 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,81548:CF,81547
81543 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,81549
81542 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,81535:CD,81541:CD,81546:CD,81547:CD,81548:CF,81543
81545 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,81515
81544 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,81542:CD,81543:CD,81547:CD,81548:CD,81549:CF,81545
81547 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,81548:DD,81535:DD,81543:DD,81547
81546 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,81537
81549 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,81544:DD,81547
81548 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,81535:DD,81541:DD,81542
81577 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,71430
81576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,81577:CD,81580:CD,81584:CD,81589:CD,81740:CD,81741
81580 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81584 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81589 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,81591:CD,81596:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81631:JM,81694
81591 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81596 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,81598:CD,81603:CD,81741:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81598 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81603 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,81605:CD,81610:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81605 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81610 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,81612:CD,81617:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81612 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81617 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,81619:CD,81624:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81619 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81624 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,81626:CD,81631:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81694
81626 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81631 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,81633:CD,81638:CD,81741:JM,81603:JM,81666:JM,81701:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81633 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81638 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,81640:CD,81645:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81640 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81645 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,81647:CD,81652:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81647 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81652 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,81654:CD,81659:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81722:JM,81596:JM,81631:JM,81694
81654 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81659 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,81661:CD,81666:CD,81741:JM,81603:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81661 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81666 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,81668:CD,81673:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81668 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81673 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,81675:CD,81680:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81675 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81680 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,81682:CD,81687:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81682 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81687 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,81689:CD,81694:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631
81689 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81694 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,81696:CD,81701:CD,81741:JM,81603:JM,81666:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81696 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81701 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,81703:CD,81708:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81703 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81708 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,81710:CD,81715:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81710 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81715 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,81717:CD,81722:CD,81741:JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81596:JM,81631:JM,81694
81717 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,81603:JM,81666:JM,81701:JM,81638:JM,81673:JM,81610:JM,81645:JM,81708:JM,81617:JM,81680:JM,81715:JM,81589:JM,81652:JM,81687:JM,81624:JM,81659:JM,81722:JM,81596:JM,81631:JM,81694
81722 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,81724:CD,81729:CD,81741
81724 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,81729
81729 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,81741:CD,81730:CD,81736
81730 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,81741
81736 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,81741
81741 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,81740
81740 :: NORM :: compound :: I :: return v94::DD,81577
81853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,81867
81860 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
81863 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
81867 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
81883 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,81903
81903 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
81927 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
81926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,81927:CD,81933
81930 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,81933
81933 :: NORM :: compound :: [[D :: return v3::CF,81927
82019 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,82024
82024 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
82030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,82035
82035 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
82050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,82055
82055 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
82061 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,82066
82066 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
82072 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,82077
82077 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
82127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,82132
82132 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
82138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,82143
82143 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
82149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,82154
82154 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
82160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,82165
82165 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
82171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,82176
82176 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
82182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,82187
82187 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
82193 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,82198
82198 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
82204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,82209
82209 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
82215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,82220
82220 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
82226 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,82231
82231 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
82237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,82242
82242 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
82248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,82253
82253 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
82259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,82264
82264 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
82270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,82275
82275 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
82281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,82286
82286 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
82292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,82297
82297 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
82303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,82308
82308 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
82314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,82319
82319 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
82325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,82330
82330 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
82336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,82341
82341 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
82347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,82352
82352 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
82358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,82363
82363 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
82369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,82374
82374 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
82380 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,82385
82385 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
82391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,82396
82396 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
82402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,82407
82407 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
82413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,82418
82418 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
82424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,82429
82429 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
82435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,82440
82440 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
82446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,82451
82451 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
82457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,82462
82462 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
82468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,82473
82473 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
82479 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,82484
82484 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
82490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,82495
82495 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
82501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,82506
82506 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
82512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,82517
82517 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
82523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,82528
82528 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
82534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,82539
82539 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
82545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,82550
82550 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
82563 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
82566 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
82575 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,82580
82580 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
82587 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
82586 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,82587:CD,82593
82590 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,82593
82593 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,82587
82595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,82600
82600 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
82649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,82650:CD,82655:CD,82656:CD,82660:CD,82993:CD,82997:CD,83002:CD,83003:JM,82745:JM,82667:JM,82844
82650 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,74762
82655 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,82660
82656 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,82660
82660 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,82998
82662 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,82997:JM,82745:JM,82667:JM,82844
82667 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,82746:DD,82793:DD,82865
82668 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,82672:CL,30404
82672 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,82678:CD,82682:CD,82686:CD,82992:CD,82993:CD,82997:CD,83001:CD,83002:CD,83003
82678 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,82739:JM,83000:JM,82699:JM,82686:CL,86177
82682 :: CALL :: call :: I :: v23 = v21.intValue()::JM,82739:JM,83000:JM,82699:JM,82686
82686 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,82698:CD,82699:CD,82999
82699 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,82999:CD,82700:CD,82706:CD,82710:CD,82714:CD,82719:CD,82738:CD,82740:CD,83000:JM,82997:JM,82745:JM,82667:JM,82844
82698 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82700 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,82997:JM,82745:JM,82667:JM,82844
82706 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,82719:CL,28213
82710 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,82719:CL,28213
82714 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,82719
82719 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,82737:CD,82738:CD,82740:CD,82999:CD,83000
82737 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82739 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,83000
82738 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,83000:CD,82739
82741 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,82997:JM,82745:JM,82667:JM,82844
82740 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,82741:CD,82745:CD,82840:CD,82844:JM,82997:JM,82667
82745 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,82746:CD,82747:CD,82840:CD,82844:JM,82997:JM,82745:JM,82667
82747 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,82750:CD,82755:CD,82760:CD,82765:CD,82769:CD,82774:CD,82779:CD,82784:CD,82792:CD,82793:CD,82794:CD,83001
82746 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,82747
82750 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
82755 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
82760 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
82765 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,82997:JM,82745:JM,82667:JM,82844
82769 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,82997:JM,82667:JM,82844
82774 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
82779 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
82784 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
82793 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,82794
82792 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82794 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,83001:CD,82797:CD,82802:CD,82807:CD,82812:CD,82816:CD,82821:CD,82826:CD,82831:CD,82839:CD,82992:CD,82993:CD,82997:CD,83002:CD,83003
82797 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
82802 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
82807 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
82812 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,82997:JM,82745:JM,82667:JM,82844
82816 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,82997:JM,82667:JM,82844
82821 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
82826 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
82831 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
82839 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82840 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,82997:JM,82745:JM,82667:JM,82844
82844 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,82847:CD,82852:CD,82857:CD,82865:CD,82866:CD,82868:CD,82874:CD,82878:CD,82882:CD,82886:CD,82890:CD,82895:CD,83001:JM,82997:JM,82745:JM,82667:JM,82844
82847 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
82852 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
82857 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
82865 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,82866
82867 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82866 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,83001:CD,82867:CD,82992:CD,82993:CD,82997:CD,83002:CD,83003
82868 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,82997:JM,82745:JM,82667:JM,82844
82874 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,82895:CL,28213
82878 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,82895
82882 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,82895:CL,28213
82886 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,82895
82890 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,82895
82895 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,82898:CD,82903:CD,82908:CD,82913:CD,82918:CD,82923:CD,82928:CD,82936:CD,82937:CD,82947:CD,82992:CD,82993:CD,82997:CD,83001:CD,83002:CD,83003
82898 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
82903 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
82908 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
82913 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
82918 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
82923 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
82928 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
82937 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
82936 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,82650
82947 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
82993 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,82997:JM,82745:JM,82667:JM,82844
82992 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,83003:CF,83002
82997 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,82662:CD,82667:CD,82668:CD,82672:CD,82998:JM,82997:JM,82745:JM,82844
82999 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,82738:DD,82740:DD,83001
82998 :: NORM :: compound :: Ljava/util/List :: return v8::DD,82650
83001 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,83002:CF,82992
83000 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,82745:DD,82844:JM,82997:JM,82667:CF,82740
83003 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,82745:JM,82667:JM,82844:DD,82992:DD,82997
83002 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,83003:DD,82999:DD,83001
83113 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,83121:CD,83126:CD,83130
83121 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,83130:CL,50203
83126 :: CALL :: call :: I :: v9 = v7.size()::JM,83130
83130 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,83154:CD,83158:CD,83162:CD,83168
83154 :: CALL :: call :: Ljava/util/List :: v17 = p1 $seqRes .getAtomGroups()::JM,38492:JM,38287:CL,30249
83158 :: CALL :: call :: Ljava/util/List :: v19 = p2 $atomRes .getAtomGroups()::JM,38492:JM,38287:CL,30249
83162 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,38492:JM,38287:JM,83168:CL,86186
83169 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,74973
83168 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,83169
83193 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,74898
83192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,83193:CD,83198:CD,83202:CD,83206:CD,83212:CD,83220:CD,83225:CD,83229:CD,83234:CD,83239:CD,83244:CD,83254:CD,83259:CD,83263:CD,83268:CD,83273:CD,83278:CD,83286:CD,83291:CD,83308:CD,83309:CD,83312:CD,83318:CD,83319:CD,83327:CD,83331:JM,38492:JM,38287
83198 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
83202 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
83206 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::JM,38492:JM,38287:JM,38412:CL,38271
83212 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::JM,38492:JM,38287:JM,38412:CL,38271
83220 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
83225 :: CALL :: call :: I :: v19 = v11.length()::
83229 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
83234 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
83239 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
83244 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
83254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
83259 :: CALL :: call :: I :: v35 = v13.length()::
83263 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
83268 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
83273 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
83278 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
83286 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83291 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83309 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83308 :: NORM :: compound :: Z :: return #(1)::DD,83193
83312 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83319 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83318 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83327 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,83331:JM,83332:JM,83319:JM,83369:JM,83336:JM,83327
83331 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,83332:CD,83336:CD,83361:JM,83369
83332 :: CALL :: call :: I :: v68 = v65.getLength()::JM,83332:JM,83369:JM,83336
83336 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,83361:CD,83364:CD,83369:CD,83374:CD,83379:CD,83387:CD,83396
83361 :: NORM :: compound :: Z :: return #(1)::DD,83193
83364 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
83369 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,83332:JM,83369:JM,83336
83374 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
83379 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
83387 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,83396:CL,86583
83396 :: NORM :: compound :: Z :: return v82::DD,83193
83461 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,75116
83460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,83461:CD,83466:CD,83471:CD,83476:CD,83480:CD,83481:CD,83485:CD,83490:CD,83491:CD,83492:CD,83498:CD,83503:CD,83508:CD,83516:CD,83521
83466 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,83480:CL,75131
83471 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,83480
83476 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,83480
83481 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,83490:CL,27854
83480 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,83491
83485 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,83490
83491 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,83461
83490 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,83476:CD,83480:CD,83481:CD,83485:CD,83492:CF,83491
83492 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,83480
83498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
83503 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,83490
83508 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
83513 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
83516 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
83521 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
83543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CD,83549:CD,83554:CD,83559:CD,83564:CD,83568:CD,83573:CD,83575:CD,83581:CD,83586:CD,83591:CD,83596:CD,83604:CD,83609
83549 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::CL,75131
83554 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::
83559 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::
83564 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,83573:CL,27854
83568 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,83573
83573 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,83559:CD,83564:CD,83568:CD,83575
83575 :: CALL :: call :: Z :: v10 = v8.hasNext()::
83581 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
83586 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,83573
83591 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
83596 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
83601 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
83604 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
83609 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
83677 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,75255
83676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,83677:CD,83692:CD,83697:CD,83702:CD,83710:CD,83714:CD,83719:CD,83724:CD,83733:CD,83739:CD,83743:CD,83748:CD,83752:CD,83757:CD,83761:CD,83766:CD,83767:CD,83768:CD,83774:CD,83779:CD,83784:CD,83789:CD,83794
83692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
83697 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,83766
83702 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
83707 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
83710 :: CALL :: call :: I :: v52 = v50.size()::
83714 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
83719 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
83724 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
83733 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,83460
83739 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,83752:CL,30249
83743 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,83752
83748 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,83752
83752 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,83767
83757 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,83766:CL,63613
83761 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,83766
83767 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,83677
83766 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,83748:CD,83752:CD,83757:CD,83761:CD,83768:CF,83767
83768 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,83752
83774 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
83779 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,83766
83784 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
83789 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,83766
83794 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,83766
83823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,83828:CD,83833:JM,83844:JM,83898
83828 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,83833:CL,49696
83833 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,83835:CD,83839:CD,83844
83835 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,83844:CL,70247
83839 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,83844:JM,83898
83844 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,83849
83846 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,83849
83849 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,83853:CD,83857
83850 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,83857
83853 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,83857
83857 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,83862:CD,83900:CD,83904
83859 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,83904
83862 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,83904
83867 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,83904
83872 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,83880:CL,70238
83876 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,83880
83880 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,83882:CD,83887:CD,83900:CD,83904
83882 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,83887:CL,49696
83887 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,83889:CD,83893:CD,83898:CD,83900:CD,83904
83889 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,83898:CL,70247
83893 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,83898:JM,83844
83898 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,83900:CD,83904
83900 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,83904
83904 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,83867:CD,83872:CD,83876:CD,83880:JM,83904
83950 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
83953 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
83956 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
83959 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,83960
83960 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,87119
84028 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,84036
84033 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
84036 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
84045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,84049:CD,84050:CD,84058:CD,84063:CD,84067:CD,84068:CD,84076:CD,84084:CD,84089:CD,84094:CD,84098:CD,84099:CD,84107:CD,84115:CD,84120:CD,84125:CD,84129:CD,84130:CD,84138:CD,84146:CD,84151:CD,84156:CD,84160:CD,84161:CD,84169:CD,84174:CD,84178:CD,84179:CD,84187:CD,84195:CD,84200:CD,84205:CD,84209:CD,84210:CD,84218:CD,84226:CD,84231:CD,84236:CD,84240:CD,84241:CD,84249:CD,84257:CD,84262:CD,84267:CD,84271:CD,84272:CD,84280:CD,84285
84049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
84050 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
84058 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
84063 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
84067 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
84068 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
84076 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
84081 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
84084 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
84089 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
84094 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
84099 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
84098 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
84107 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
84112 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
84115 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
84120 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
84125 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
84129 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
84130 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
84138 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
84143 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
84146 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
84151 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
84156 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
84161 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
84160 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
84169 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
84174 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
84179 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
84178 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
84187 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
84192 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
84195 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
84200 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
84205 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
84209 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
84210 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
84218 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
84223 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
84226 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
84231 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
84236 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
84241 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
84240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
84249 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
84254 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
84257 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
84262 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
84267 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
84271 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
84272 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
84280 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
84285 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
84341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,84342:CD,84348
84342 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,76304:JM,76247:JM,76239:JM,76400:JM,76457:JM,76392
84345 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,84348
84348 :: NORM :: compound :: Ljava/util/List :: return v3::CF,84342
84351 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,76282
84350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,84351:CD,84354:CD,84359
84354 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,84359:CL,76850
84359 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,84351
84363 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,76283
84362 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,84363:CD,84366:CD,84371
84366 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,84371:CL,76850
84371 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,84363
84375 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,76290:JM,76443
84374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,84375:CD,84379:CD,84383:CD,84387:CD,84388:CD,84392:CD,84396:CD,84397:CD,84401:CD,84405:CD,84406:CD,84407:CD,84408:CD,84409:CD,84410:CD,84411:CD,84415
84379 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,84387:CL,87221
84383 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,84387:CL,87221
84387 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,84406
84388 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,84396:CL,87235
84392 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,84396:CL,87235
84397 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,84405:CL,87249
84396 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,84407
84401 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,84405:CL,87249
84405 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,84409:CF,84406
84407 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,84408
84406 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,84408:CF,84407
84409 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,84410
84408 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,84410:CF,84409
84411 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,84411:JM,84415
84410 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,84411:JM,84415
84415 :: NORM :: compound :: D :: return v25::CF,84375
84433 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,84434:CD,84437:CD,84442
84434 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,76435
84437 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,84442:CL,76850
84442 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,84434
84445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,84446:CD,84449:CD,84454
84446 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,76436
84449 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,84454:CL,76850
84454 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,84446
84457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,84458:CD,84464
84458 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,76655
84461 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,84464
84464 :: NORM :: compound :: Ljava/util/List :: return v3::CF,84458
84467 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,76784:JM,76793:JM,76798:JM,87192:JM,87130
84466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,84467:CD,84473
84470 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,84473
84473 :: NORM :: compound :: Ljava/util/List :: return v3::CF,84467
84475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,84476:CD,84482:CD,84486
84476 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,76987:JM,77093
84479 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,84486
84482 :: CALL :: call :: I :: v5 = v3.size()::JM,84486
84486 :: NORM :: compound :: I :: return v5::CF,84476
84488 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CD,84496
84493 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::
84496 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::
84505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,84508:CD,84510
84508 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,84510
84510 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,35896:JM,35903
84528 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,84531:CD,84533
84531 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,84533
84533 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,84534
84534 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,36507
84543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CD,84554:CD,84558
84554 :: CALL :: call :: Z :: v7 = v2.exists()::JM,84558
84558 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CD,84570
84570 :: CALL :: call :: Z :: v15 = v2.mkdir()::
84601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,84608:CD,84613:CD,84618:CD,84623:CD,84628
84608 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
84613 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
84618 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
84623 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
84628 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
84917 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,78328
84916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,84917:CD,84920:CD,84924:CD,84925:CD,84926:CD,84950:CD,84951:CD,84956:CD,84957:CD,84959:CD,84960
84920 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,84924:JM,84926
84925 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,84951:JM,84956:CF,84926
84924 :: EXPR :: assign :: I :: v5 = v4.length::CF,84925
84926 :: EXPR :: assign :: I :: v8 = v4.length::DD,84950
84928 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,84937:JM,84942
84937 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,84937:JM,84942
84936 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,84937:JM,84942
84943 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,84958:CD,84948
84942 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,84943
84949 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,84960:CF,84959
84948 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,84958
84951 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,84951:JM,84956
84950 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,84936:CD,84937:CD,84942:CD,84943:CD,84949:CD,84958:CD,84959:CD,84960:JM,84951:JM,84956
84957 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,84917
84956 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,84957
84959 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,84960:DD,84948:JM,84951:JM,84956:DD,84958
84958 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,84959:CF,84949
84960 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,84949:DD,84950
85093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,85101:CD,85106:CD,85111:CD,85116:CD,85120:CD,85125:CD,85130:CD,85135:CD,85140:CD,85144:CD,85145:CD,85153:CD,85158:CD,85162:CD,85167:CD,85171:CD,85176:CD,85203:JM,85183:JM,85182
85101 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
85106 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85111 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,85176:JM,85182
85116 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85120 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
85125 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
85130 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85135 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,85176:JM,85182
85140 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
85145 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
85144 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
85153 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
85158 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85162 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
85167 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
85171 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85177 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,85203:JM,85158:JM,85176:JM,85116:JM,85183:JM,85182
85176 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,85177:CD,85182:JM,85203:JM,85158:JM,85176:JM,85116:JM,85183
85183 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,85184
85182 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,85183
85184 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
85203 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,85204
85204 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
85393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,85398:CD,85402:CD,85423:CD,85433:JM,85427
85398 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,85427:JM,85398:JM,85402:JM,85423
85402 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,85405:CD,85410:CD,85415:JM,85427:JM,85398:JM,85402:JM,85423
85405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
85410 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
85415 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
85423 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,85427:JM,85398:JM,85402:JM,85423
85427 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
85433 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,87723
85484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,85495
85495 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,52101
85534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,85545
85545 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,52101
85564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,85575
85575 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,52101
85645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,85649
85649 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,85653:CL,87816
85653 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
85787 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,80689
85786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,85787:CD,85792:CD,85797
85792 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,85797
85797 :: NORM :: compound :: I :: return v6::CF,85787
85801 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,80707
85800 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,85801:CD,85806:CD,85811
85806 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,85811
85811 :: NORM :: compound :: I :: return v6::CF,85801
85980 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,85988
85985 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
85988 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
85996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,86004
86001 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
86004 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
86012 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,86020
86017 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
86020 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
86043 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
86046 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
86049 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,86050
86050 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
86177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,86178:CD,86184
86178 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,82739:JM,83000:JM,82699:JM,82686
86181 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,86184
86184 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,86178
86187 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,83168
86186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,86187:CD,86192:CD,86196:CD,86200:CD,86206:CD,86212:CD,86216:CD,86349:CD,86354:CD,86359:CD,86367:CD,86393:CD,86398:CD,86403:CD,86411:JM,38492:JM,38287
86192 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
86196 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
86200 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,38492:JM,38287:JM,38412:JM,86212:JM,86216:CL,38271
86206 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,38492:JM,38287:JM,38412:JM,86217:JM,86221:CL,38271
86212 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,86212:JM,86216
86217 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,86217:JM,86221
86216 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,86217:CD,86221:CD,86228
86221 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,86228:CD,86231:CD,86236:CD,86240:CD,86245:CD,86250:CD,86255:CD,86265:CD,86270:CD,86274:CD,86279:CD,86284:CD,86289:CD,86297:CD,86302:CD,86307
86228 :: NORM :: compound :: Z :: return #(1)::DD,86187
86231 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
86236 :: CALL :: call :: I :: v24 = v11.length()::JM,86212:JM,86216
86240 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
86245 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
86250 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,86212:JM,86216
86255 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
86265 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
86270 :: CALL :: call :: I :: v40 = v13.length()::JM,86217:JM,86221
86274 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
86279 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
86284 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,86217:JM,86221
86289 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
86297 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,86497:JM,86336:JM,86307:JM,86323:JM,86498:JM,86324:JM,86310:JM,86331:JM,86318:CL,88374
86302 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,86368:JM,86499:JM,86323:JM,86308:JM,86375:JM,86314:JM,86380:JM,86318:CL,88374
86307 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,86308:CD,86309
86309 :: NORM :: compound :: Z :: return #(1)::DD,86187
86308 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,86309:CD,86310:CD,86314:CD,86318:CD,86323:CD,86412:CD,86415:CD,86421:CD,86422:CD,86430:CD,86434:CD,86498:CD,86499:JM,86497:JM,86336:JM,86324:JM,86331
86310 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,86497:JM,86336:JM,86323:JM,86498:JM,86324:JM,86310:JM,86331:JM,86318
86314 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,86368:JM,86499:JM,86323:JM,86375:JM,86314:JM,86380:JM,86318
86318 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,86336:JM,86323:JM,86331:JM,86318:JM,86375:JM,86380
86323 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,86498:CD,86324:CD,86328:CD,86331:CD,86336:CD,86368:CD,86372:CD,86375:CD,86380:CD,86497:CD,86499:JM,86323:JM,86310:JM,86318
86324 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,86497:JM,86336:JM,86323:JM,86498:JM,86324:JM,86310:JM,86331:JM,86318
86328 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,86336:JM,86331
86331 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,86336:JM,86323:JM,86331:JM,86318
86337 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,86497
86336 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,86497:CF,86337
86349 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
86354 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,86212:JM,86216
86359 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
86367 :: NORM :: compound :: Z :: return #(1)::DD,86187
86368 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,86368:JM,86499:JM,86323:JM,86375:JM,86314:JM,86380:JM,86318
86372 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,86375:JM,86380
86375 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,86323:JM,86375:JM,86380:JM,86318
86381 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,86499
86380 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,86498:CF,86381:CD,86499
86393 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
86398 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,86217:JM,86221
86403 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
86411 :: NORM :: compound :: Z :: return #(1)::DD,86187
86412 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,86467:JM,86434:JM,86422:JM,86430
86415 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,86467:JM,86434:JM,86422:JM,86430
86421 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,86467:JM,86434:JM,86422:JM,86430
86422 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,86467:JM,86434:JM,86422:JM,86430
86430 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,86467:JM,86434:JM,86422:JM,86430
86434 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,86459:CD,86462:CD,86467:CD,86472:CD,86477:CD,86485:CD,86494
86459 :: NORM :: compound :: Z :: return #(1)::DD,86187
86462 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
86467 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,86467
86472 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
86477 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
86485 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,86494:CL,88448
86494 :: NORM :: compound :: Z :: return v126::DD,86187
86497 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,86368:JM,86499:JM,86323:JM,86375:JM,86314:JM,86380:JM,86318:DD,86498
86499 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,86412:JM,86467:JM,86434:JM,86422:JM,86430
86498 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,86499:JM,86467:JM,86434:JM,86422:JM,86430
86583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,86584:CD,86592:CD,86596:CD,86599:CD,86982:CD,86992:CD,86993:JM,86629:JM,86628:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86584 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,83396
86592 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86596 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,86640:JM,86629:JM,86599:JM,86635:JM,86634
86599 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,86640:JM,86629:JM,86599:JM,86635:JM,86634
86605 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86611 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86617 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86623 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86622 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86629 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,86640:JM,86611:JM,86642:JM,86629:JM,86628:JM,86647:JM,86635:JM,86634:JM,86622
86628 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,86640:JM,86611:JM,86642:JM,86629:JM,86628:JM,86647:JM,86635:JM,86634:JM,86622
86635 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,86640:JM,86642:JM,86629:JM,86628:JM,86647:JM,86635:JM,86634:JM,86622
86634 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,86991:CD,86635:CD,86640:CD,86981:CD,86982:CD,86992:CD,86993:JM,86642:JM,86629:JM,86628:JM,86647:JM,86634:JM,86622
86640 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,86642:CD,86647:CD,86981:CD,86982:CD,86991:CD,86992:CD,86993:JM,86640:JM,86611:JM,86629:JM,86628:JM,86635:JM,86634:JM,86622
86642 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,86640:JM,86611:JM,86642:JM,86629:JM,86628:JM,86647:JM,86635:JM,86634:JM,86622
86647 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,86991:CD,86648:CD,86652:CD,86657:CD,86658:CD,86662:CD,86667:CD,86668:CD,86672:CD,86677:CD,86678:CD,86682:CD,86687:CD,86688:CD,86981:CD,86982:CD,86992:CD,86993
86648 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
86652 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,86657
86657 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,86667
86658 :: CALL :: call :: I :: v40 = v38.intValue()::JM,86667
86662 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86667 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,86688
86668 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
86672 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,86677
86677 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,86687
86678 :: CALL :: call :: I :: v50 = v48.intValue()::JM,86687
86682 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86687 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,86689:JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622:CF,86688
86689 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,86692:CD,86697:CD,86702:CD,86707:CD,86712:CD,86717:CD,86722:CD,86727:CD,86732:CD,86737:CD,86742:CD,86747:CD,86752:CD,86761:CD,86765:CD,86769:CD,86981:CD,86982:CD,86991:CD,86992:CD,86993
86688 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,86689:CD,86692:CD,86697:CD,86702:CD,86707:CD,86712:CD,86717:CD,86722:CD,86727:CD,86732:CD,86737:CD,86742:CD,86747:CD,86752:CD,86981:CD,86982:CD,86991:CD,86992:CD,86993
86692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
86697 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
86702 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
86707 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
86712 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
86717 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
86722 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
86727 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
86732 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
86737 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
86742 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
86747 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
86752 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
86761 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,86769:JM,86823:CL,28213
86765 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,86770:JM,86823:CL,28213
86769 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,86770:CD,86809
86770 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,86809:CD,86810:CD,86814:CD,86818:CD,86823:CD,86961:CD,86965:CD,86970:CD,86971:CD,86975:CD,86981:CD,86982:CD,86991:CD,86992:CD,86993
86809 :: NORM :: compound :: Z :: return #(1)::DD,86584
86810 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,86823
86814 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,86823
86818 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,86823
86823 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,86824:CD,86829:CD,86834:CD,86839:CD,86844:CD,86849:CD,86854:CD,86859:CD,86864:CD,86869:CD,86874:CD,86879:CD,86884:CD,86888:CD,86892:CD,86894:CD,86899
86824 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
86829 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
86834 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
86839 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
86844 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
86849 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
86854 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
86859 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
86864 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
86869 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
86874 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
86879 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
86884 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
86888 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,86899:JM,86894:CL,49633:CL,49641:CL,49649
86892 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,86899:JM,86894
86894 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,86899:JM,86894
86899 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,86900:CD,86904:CD,86906:CD,86911:CD,86939:CD,86940:CD,86948:CD,86953
86900 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,86906:JM,86911:CL,49633:CL,49641:CL,49649
86904 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,86906:JM,86911
86906 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,86906:JM,86911
86911 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,86914:CD,86915:CD,86923:CD,86928:CD,86939:CD,86940:CD,86948:CD,86953
86915 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
86914 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
86923 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
86928 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
86939 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
86940 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
86948 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
86953 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
86961 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
86965 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,86970
86971 :: CALL :: call :: I :: v166 = v164.intValue()::
86970 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
86975 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,86592:JM,86629:JM,86628:JM,86982:JM,86667:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622
86981 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,86993:CF,86992
86982 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,86605:CD,86611:CD,86617:CD,86622:CD,86623:CD,86628:CD,86629:CD,86634:CD,86990:CD,86991:JM,86592:JM,86982:JM,86667:JM,86635:JM,86640:JM,86642:JM,86647:JM,86687
86991 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,86992:CF,86981
86990 :: NORM :: compound :: Z :: return v171::DD,86584
86993 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,86629:JM,86628:JM,86635:JM,86634:JM,86605:JM,86640:JM,86611:JM,86642:JM,86647:JM,86617:JM,86623:JM,86687:JM,86622:JM,86667:DD,86981:DD,86982
86992 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,86993:DD,86990:DD,86991
87119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,87126:CD,87130:CD,87143:CD,87171:CD,87175:CD,87176:CD,87192:CD,87193
87126 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,87192:JM,87130:CL,84466
87131 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,87192
87130 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,87192:CF,87131
87143 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,87175
87148 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,87175
87156 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,87169:JM,87164:CL,89006
87161 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,87169:JM,87164
87164 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,87169:JM,87164
87169 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,87171:CD,87175:CD,87193
87171 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,87175
87175 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,87193:CD,87148:CD,87156:CD,87164:CD,87169:JM,87175
87176 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,87180:CD,87187
87180 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,89045
87187 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,89045
87193 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,87176
87192 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,87175
87221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,87222:CD,87232
87222 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,84387
87225 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
87228 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,87232
87232 :: NORM :: compound :: D :: return v5::CF,87222
87235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,87236:CD,87246
87236 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,84396
87239 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
87242 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,87246
87246 :: NORM :: compound :: D :: return v5::CF,87236
87249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,87250:CD,87260
87250 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,84405
87253 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
87256 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,87260
87260 :: NORM :: compound :: D :: return v5::CF,87250
87723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,87735:CD,87741:CD,87745:CD,87765:CD,87769:JM,87746:JM,87751:JM,87770:JM,87775
87735 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
87741 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,87745:JM,87746:JM,87765:JM,87751:JM,87769:JM,87770:JM,87741:JM,87775
87745 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,87746:CD,87751:JM,87769:JM,87770:JM,87775:JM,87745:JM,87765:JM,87741
87746 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,87746:JM,87751:JM,87769:JM,87770:JM,87775
87751 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,87759:JM,87745:JM,87746:JM,87765:JM,87751:JM,87769:JM,87770:JM,87741:JM,87775
87759 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
87765 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,87745:JM,87746:JM,87765:JM,87751:JM,87769:JM,87770:JM,87741:JM,87775
87769 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,87770:CD,87775:JM,87746:JM,87751
87770 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,87746:JM,87751:JM,87770:JM,87775
87775 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,87783
87783 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
87817 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,85653
87816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,87817:CD,87820:CD,87824:CD,87828:CD,87832
87820 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,87833:JM,87832:JM,87838:CL,34820
87824 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,87845:JM,87839:CL,34811
87828 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,87860:JM,87848:JM,87851:JM,87868:CL,30318
87833 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,87833:JM,87838
87832 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,87833:CD,87838:CD,87839
87839 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,87840:CD,87845:CD,87875
87838 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,87839:CD,87875
87840 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,87845
87845 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,87846:CD,87848:CD,87875
87846 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,87848
87849 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,87851
87848 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,87849:CD,87851:CD,87852:CD,87857
87851 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,87852:CD,87857:CD,87858:CD,87860
87852 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,87857:CL,89313
87857 :: NORM :: compound :: Z :: return v25::DD,87817
87858 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,87860
87861 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,87865:CL,89352
87860 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,87861:CD,87865:CD,87866:CD,87868
87865 :: NORM :: compound :: Z :: return v23::DD,87817
87866 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,87868
87869 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,87873:CL,89371
87868 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,87869:CD,87873:CD,87874
87873 :: NORM :: compound :: Z :: return v21::DD,87817
87875 :: NORM :: compound :: Z :: return #(0)::DD,87817
87874 :: NORM :: compound :: Z :: return #(0)::DD,87817
88375 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,86497:JM,86336:JM,86307:JM,86323:JM,86498:JM,86324:JM,86310:JM,86331:JM,86318:JM,86368:JM,86499:JM,86308:JM,86375:JM,86314:JM,86380
88374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,88375:CD,88379:CD,88389:CD,88399:CD,88418:CD,88423:CD,88428:CD,88436:CD,88437:CD,88441
88379 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,88441
88389 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,88441
88399 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,88441
88418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
88423 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
88428 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
88437 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,88375
88436 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,88375
88441 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,88437
88449 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,86494
88448 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,88449:CD,88457:CD,88461:CD,88464:CD,88863:CD,88871:CD,88873:CD,88874:JM,88512:JM,88482:JM,88487:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88532:JM,88500:JM,88470:JM,88505:JM,88507:JM,88476
88457 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88461 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,88464:JM,88499:JM,88500:JM,88505:JM,88494
88464 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,88464:JM,88499:JM,88500:JM,88505:JM,88494
88470 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88476 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88482 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88487 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88488 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88493 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,88512:JM,88499:JM,88500:JM,88487:JM,88505:JM,88507:JM,88493:JM,88476:JM,88494
88494 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,88512:JM,88499:JM,88500:JM,88487:JM,88505:JM,88507:JM,88493:JM,88476:JM,88494
88499 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,88872:CD,88500:CD,88505:JM,88512:JM,88499:JM,88487:JM,88507:JM,88493:JM,88494
88500 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,88512:JM,88499:JM,88500:JM,88487:JM,88505:JM,88507:JM,88493:JM,88494
88505 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,88507:CD,88512:CD,88872:JM,88499:JM,88500:JM,88487:JM,88505:JM,88493:JM,88476:JM,88494
88507 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,88512:JM,88499:JM,88500:JM,88487:JM,88505:JM,88507:JM,88493:JM,88476:JM,88494
88513 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
88512 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,88872:CD,88513:CD,88517:CD,88522:CD,88523:CD,88527:CD,88532:CD,88533:CD,88537:CD,88542:CD,88543:CD,88547:CD,88552:CD,88553
88517 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,88522
88523 :: CALL :: call :: I :: v40 = v38.intValue()::JM,88532
88522 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,88532
88527 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88532:JM,88500:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88533 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
88532 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,88553
88537 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,88542
88543 :: CALL :: call :: I :: v50 = v48.intValue()::JM,88552
88542 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,88552
88547 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88532:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88553 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,88554:CD,88557:CD,88562:CD,88567:CD,88572:CD,88577:CD,88582:CD,88587:CD,88592:CD,88597:CD,88602:CD,88607:CD,88612:CD,88617:CD,88872
88552 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,88554:JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88532:JM,88500:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863:CF,88553
88554 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,88557:CD,88562:CD,88567:CD,88572:CD,88577:CD,88582:CD,88587:CD,88592:CD,88597:CD,88602:CD,88607:CD,88612:CD,88617:CD,88626:CD,88630:CD,88634:CD,88692:CD,88697:CD,88842:CD,88846:CD,88851:CD,88852:CD,88856:CD,88872
88557 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
88562 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
88567 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
88572 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
88577 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
88582 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
88587 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
88592 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
88597 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
88602 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
88607 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
88612 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
88617 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
88626 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,88711:JM,88697:JM,88634:CL,28213
88630 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,88711:JM,88697:JM,88635:CL,28213
88635 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,88638:CD,88643:CD,88648:CD,88653:CD,88658:CD,88663:CD,88668:CD,88673:CD,88678:JM,88711:JM,88697
88634 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,88635:CD,88638:CD,88643:CD,88648:CD,88653:CD,88658:CD,88663:CD,88668:CD,88673:CD,88678
88638 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
88643 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
88648 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
88653 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
88658 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
88663 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
88668 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
88673 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
88678 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
88692 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,88711:JM,88697
88697 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,88698:CD,88702:CD,88706:CD,88711:JM,88697
88698 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,88711:JM,88697
88702 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,88711:JM,88697
88706 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,88711
88711 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,88714:CD,88718:CD,88723:CD,88728:CD,88733:CD,88738:CD,88743:CD,88748:CD,88753:CD,88758:CD,88763:CD,88768:CD,88773:CD,88781:CD,88785:CD,88787:CD,88792
88714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
88718 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
88723 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
88728 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
88733 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
88738 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
88743 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
88748 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
88753 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
88758 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
88763 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
88768 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
88773 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
88781 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,88787:JM,88792:CL,49633:CL,49641:CL,49649
88785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,88787:JM,88792
88787 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,88787:JM,88792
88793 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,88804:JM,88799:CL,49633:CL,49641:CL,49649
88792 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,88793:CD,88797:CD,88799:CD,88804:CD,88814:CD,88819:CD,88824:CD,88829:CD,88834
88797 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,88804:JM,88799
88799 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,88804:JM,88799
88804 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,88814:CD,88819:CD,88824:CD,88829:CD,88834
88814 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
88819 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
88824 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
88829 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
88834 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
88842 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
88846 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,88851
88851 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
88852 :: CALL :: call :: I :: v188 = v186.intValue()::
88856 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,88512:JM,88482:JM,88487:JM,88457:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88532:JM,88500:JM,88470:JM,88505:JM,88507:JM,88476:JM,88863
88863 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,88470:CD,88476:CD,88482:CD,88487:CD,88488:CD,88493:CD,88494:CD,88499:CD,88862:CD,88872:CD,88873:CD,88874:JM,88512:JM,88457:JM,88552:JM,88500:JM,88532:JM,88505:JM,88507:JM,88863
88862 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,88874:CF,88873
88871 :: NORM :: compound :: Z :: return v193::DD,88449
88873 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,88874:DD,88871:DD,88872
88872 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,88873:CF,88862
88874 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,88512:JM,88482:JM,88487:JM,88488:JM,88552:JM,88493:JM,88494:JM,88499:JM,88500:JM,88470:JM,88505:JM,88507:JM,88476:JM,88532:DD,88862:DD,88863
89007 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,87169:JM,87164
89006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,89007:CD,89019:CD,89028
89019 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
89025 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,89028
89029 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,89032
89028 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,89032:CD,89036
89033 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,89036
89032 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,89007
89036 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,89007
89045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,89053:CD,89065
89050 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,89053
89053 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,89054
89054 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,89059
89059 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
89062 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
89065 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
89313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,89314:CD,89318:CD,89320:CD,89324:CD,89329
89314 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,87857
89318 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,89329
89320 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,89329
89324 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,89329
89329 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,89330:CD,89335:CD,89339
89330 :: NORM :: compound :: Z :: return #(0)::DD,89314
89335 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,89339:CL,89949
89339 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,89340:CD,89341
89341 :: NORM :: compound :: Z :: return #(1)::DD,89314
89340 :: NORM :: compound :: Z :: return #(0)::DD,89314
89353 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,87865
89352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,89353:CD,89356:CD,89360:CD,89364
89356 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,89364:CL,76914
89360 :: CALL :: call :: I :: v6 = v4.length()::JM,89364
89365 :: NORM :: compound :: Z :: return #(1)::CF,89353
89364 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,89365:CD,89366
89366 :: NORM :: compound :: Z :: return #(0)::CF,89353
89371 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,89372:CD,89375:CD,89379:CD,89381:CD,89385:CD,89390
89372 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,87873
89375 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,89390:CL,76914
89379 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,89390
89381 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,89390
89385 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,89390
89391 :: NORM :: compound :: Z :: return #(0)::DD,89372
89390 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,89391:CD,89396:CD,89400
89396 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,89400:CL,89964
89401 :: NORM :: compound :: Z :: return #(0)::DD,89372
89400 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,89401:CD,89402
89402 :: NORM :: compound :: Z :: return #(1)::DD,89372
89949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,89950:CD,89955:CD,89960:CD,89961
89950 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,89339
89955 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,89960
89961 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,89950
89960 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,89961
89965 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,89400
89964 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,89965:CD,89970:CD,89975:CD,89976
89970 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,89975
89975 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,89976
89976 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,89965
