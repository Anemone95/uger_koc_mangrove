[43, 44, 45, 53]
1 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])::CD,5:CD,6:JM,10
5 :: EXPR :: assign :: I :: v3 = p1 $null .length::DD,6
6 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 21::CD,10:CD,11:CD,141
10 :: EXPR :: assign :: I :: v6 = p1 $null .length::CF,11
11 :: PRED :: IF :: Z :: if (v36 >= v6) goto 139::CD,16:CD,21
12 :: EXPR :: reference :: Ljava/lang/Object :: v8 = p1 $null [v36]::JM,21
16 :: CALL :: call :: Z :: v10 = #(-src).equals(v8)::JM,21
21 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 60::CF,22:CD,10:CD,11:CD,23:CD,37:CD,42:CD,83:CD,141:CD,145
22 :: NORM :: declaration :: Ljava/io/File :: v11 = new java.io.File::CF,23
23 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v36 + #(1)::DD,145
24 :: EXPR :: reference :: Ljava/lang/Object :: v14 = p1 $null [v13]::
33 :: EXPR :: reference :: Ljava/lang/Object :: v17 = p1 $null [v36]::JM,42
37 :: CALL :: call :: Z :: v19 = #(-dst).equals(v17)::JM,42
42 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 90::CF,43:CD,10:CD,11:CD,44:CD,53:CD,58:CD,63:CD,83:CD,141:CD,145
43 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::CF,44
44 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v36 + #(1)::DD,145
45 :: EXPR :: reference :: Ljava/lang/Object :: v22 = p1 $null [v21]::
53 :: NORM :: compound :: Ljava/lang/Object :: goto 121::
54 :: EXPR :: reference :: Ljava/lang/Object :: v25 = p1 $null [v36]::JM,63
58 :: CALL :: call :: Z :: v27 = #(-verbose).equals(v25)::JM,63
63 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 107::CD,10:CD,11:CD,83:CD,141:CD,145
83 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v31 + #(1)::DD,141
141 :: EXPR :: assign :: null :: PHI v36 = v32, #(0)::DD,11:DD,23:DD,44:DD,145:CF,10
145 :: EXPR :: assign :: null :: PHI v31 = v13, v21, v36::DD,83
524 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoLogger.<clinit>()::
548 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.RuleSet.<clinit>()::CD,561
561 :: CALL :: call :: I :: v9 = v7.get(v3)::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
661 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.<clinit>()::CD,664:JM,16402:JM,16405:JM,16408:CD,686
664 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v2 = new java.util.concurrent.ConcurrentHashMap::
686 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.put(v9, v10)::
701 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.<clinit>()::
727 :: ENTR :: entry :: null :: org.joda.time.Period.<clinit>()::JM,16611:JM,16616:JM,16623
739 :: ENTR :: entry :: null :: org.joda.time.base.BasePeriod.<clinit>()::
751 :: ENTR :: entry :: null :: org.joda.time.PeriodType.<clinit>()::CD,754
754 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
797 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.<clinit>()::JM,16663:JM,16669
809 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.<clinit>()::CD,812:CD,820
812 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v2 = new java.util.concurrent.ConcurrentHashMap::
820 :: CALL :: call :: Lorg/joda/time/chrono/GregorianChronology :: v6 = getInstance(v4)::CL,9892
831 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.<clinit>()::CD,834:CD,883:CD,885:CD,934:CD,936:CD,937:CD,939:CD,940:CD,942:CD,978:CD,979:CD,980
834 :: NORM :: declaration :: [I :: v3 = new []::DD,883
835 :: EXPR :: modify :: I :: v3[#(0)] = #(31)::
839 :: EXPR :: modify :: I :: v3[#(1)] = #(28)::
843 :: EXPR :: modify :: I :: v3[#(2)] = #(31)::
847 :: EXPR :: modify :: I :: v3[#(3)] = #(30)::
851 :: EXPR :: modify :: I :: v3[#(4)] = #(31)::
855 :: EXPR :: modify :: I :: v3[#(5)] = #(30)::
859 :: EXPR :: modify :: I :: v3[#(6)] = #(31)::
863 :: EXPR :: modify :: I :: v3[#(7)] = #(31)::
867 :: EXPR :: modify :: I :: v3[#(8)] = #(30)::
871 :: EXPR :: modify :: I :: v3[#(9)] = #(31)::
875 :: EXPR :: modify :: I :: v3[#(10)] = #(30)::
879 :: EXPR :: modify :: I :: v3[#(11)] = #(31)::
883 :: EXPR :: modify :: [I :: org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY = v3::
885 :: NORM :: declaration :: [I :: v19 = new []::DD,934
886 :: EXPR :: modify :: I :: v19[#(0)] = #(31)::
890 :: EXPR :: modify :: I :: v19[#(1)] = #(29)::
894 :: EXPR :: modify :: I :: v19[#(2)] = #(31)::
898 :: EXPR :: modify :: I :: v19[#(3)] = #(30)::
902 :: EXPR :: modify :: I :: v19[#(4)] = #(31)::
906 :: EXPR :: modify :: I :: v19[#(5)] = #(30)::
910 :: EXPR :: modify :: I :: v19[#(6)] = #(31)::
914 :: EXPR :: modify :: I :: v19[#(7)] = #(31)::
918 :: EXPR :: modify :: I :: v19[#(8)] = #(30)::
922 :: EXPR :: modify :: I :: v19[#(9)] = #(31)::
926 :: EXPR :: modify :: I :: v19[#(10)] = #(30)::
930 :: EXPR :: modify :: I :: v19[#(11)] = #(31)::
934 :: EXPR :: modify :: [I :: org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY = v19::
936 :: NORM :: declaration :: [J :: v21 = new []::CF,937
937 :: EXPR :: modify :: [J :: org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = v21::
939 :: NORM :: declaration :: [J :: v22 = new []::CF,940
940 :: EXPR :: modify :: [J :: org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = v22::
942 :: PRED :: IF :: Z :: if (v42 >= #(11)) goto 234::CD,943:CD,949:CD,950:CD,951:CD,952:CD,954:CD,959:CD,965:CD,966:CD,967:CD,968:CD,970:CD,975:CD,978:CD,979:CD,980
943 :: EXPR :: reference :: [I :: v24 = org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY::
945 :: EXPR :: reference :: I :: v25 = v24[v42]::DD,949
949 :: EXPR :: assign :: J :: v26 = CONVERT I to J v25::DD,950
950 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v26 * #(86400000 l)::DD,951
951 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v40 + v28::DD,955:DD,978
952 :: EXPR :: reference :: [J :: v30 = org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY::CF,954
954 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v42 + #(1)::
955 :: EXPR :: modify :: J :: v30[v31] = v29::
959 :: EXPR :: reference :: [I :: v32 = org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY::
961 :: EXPR :: reference :: I :: v33 = v32[v42]::DD,965
965 :: EXPR :: assign :: J :: v34 = CONVERT I to J v33::DD,966
966 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 * #(86400000 l)::DD,967
967 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v41 + v35::DD,971:DD,979
968 :: EXPR :: reference :: [J :: v37 = org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY::CF,970
970 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v42 + #(1)::
971 :: EXPR :: modify :: J :: v37[v38] = v36::
975 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v42 + #(1)::DD,980
978 :: EXPR :: assign :: null :: PHI v40 = v29, #(0 l)::CF,979:DD,951
979 :: EXPR :: assign :: null :: PHI v41 = v36, #(0 l)::CF,980:DD,967
980 :: EXPR :: assign :: null :: PHI v42 = v39, #(0)::DD,942:DD,954:DD,970:DD,975
1093 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.<clinit>()::JM,9921:JM,16850:JM,16856:JM,10017:JM,16898:JM,9988:JM,25796:JM,16904:JM,9994:JM,9998:JM,16880:JM,10002:JM,10003:JM,16886:JM,10011:JM,25790:JM,17088:JM,17077:JM,17094:JM,10107
6650 :: ENTR :: entry :: null :: org.joda.time.LocalDate.<clinit>()::CD,6653:CD,6664:CD,6674:CD,6684:CD,6694:CD,6704:CD,6714:CD,6724
6653 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
6664 :: CALL :: call :: Z :: v8 = v4.add(v6)::
6674 :: CALL :: call :: Z :: v13 = v9.add(v11)::
6684 :: CALL :: call :: Z :: v18 = v14.add(v16)::
6694 :: CALL :: call :: Z :: v23 = v19.add(v21)::
6704 :: CALL :: call :: Z :: v28 = v24.add(v26)::
6714 :: CALL :: call :: Z :: v33 = v29.add(v31)::
6724 :: CALL :: call :: Z :: v38 = v34.add(v36)::
6740 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.<clinit>()::JM,17141:JM,10217
6888 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.<clinit>()::
6900 :: ENTR :: entry :: null :: org.joda.time.DateTimeFieldType.<clinit>()::JM,10246:JM,10249:JM,10252:JM,17165
7358 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.<clinit>()::CD,7361:CD,7366:CD,7371:CD,7376:CD,7381:CD,7386:CD,7391:CD,7396:CD,7401:CD,7406:CD,7411:CD,7416:CD,7421:CD,7426:CD,7431:CD,7436:CD,7441:CD,7446:CD,7451:CD,7456:CD,7461:CD,7466:CD,7471:CD,7476:CD,7481:CD,7486:CD,7491:CD,7496:CD,7501:CD,7506:CD,7511:CD,7516:CD,7521:CD,7526:CD,7531:CD,7536:CD,7541:CD,7546:CD,7551:CD,7556:CD,7561:CD,7566:CD,7571:CD,7576:CD,7581:CD,7586:CD,7591:CD,7596:CD,7601:CD,7606:CD,7611:CD,7616:CD,7621:CD,7626:CD,7631:CD,7636:CD,7641:CD,7646:CD,7651
7361 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v3 = yearElement()::CL,10271
7366 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v5 = monthElement()::CL,10300
7371 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v7 = dayOfMonthElement()::CL,10333
7376 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v9 = weekyearElement()::CL,10366
7381 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = weekElement()::CL,10395
7386 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v13 = dayOfWeekElement()::CL,10428
7391 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v15 = dayOfYearElement()::CL,10461
7396 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v17 = hourElement()::CL,10494
7401 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v19 = minuteElement()::CL,10521
7406 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v21 = secondElement()::CL,10554
7411 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v23 = fractionElement()::CL,10587
7416 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v25 = offsetElement()::CL,10622
7421 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v27 = literalTElement()::CL,10655
7426 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v29 = yearMonth()::CL,10682
7431 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v31 = yearMonthDay()::CL,10719
7436 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v33 = weekyearWeek()::CL,10764
7441 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v35 = weekyearWeekDay()::CL,10801
7446 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v37 = hourMinute()::CL,10846
7451 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v39 = hourMinuteSecond()::CL,10883
7456 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v41 = hourMinuteSecondMillis()::CL,10928
7461 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v43 = hourMinuteSecondFraction()::CL,10987
7466 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v45 = dateHour()::CL,11040
7471 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v47 = dateHourMinute()::CL,11085
7476 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v49 = dateHourMinuteSecond()::CL,11130
7481 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v51 = dateHourMinuteSecondMillis()::CL,11175
7486 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v53 = dateHourMinuteSecondFraction()::CL,11220
7491 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v55 = time()::CL,11265
7496 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v57 = timeNoMillis()::CL,11302
7501 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v59 = tTime()::CL,11339
7506 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v61 = tTimeNoMillis()::CL,11376
7511 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v63 = dateTime()::CL,11413
7516 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v65 = dateTimeNoMillis()::CL,11450
7521 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v67 = weekDateTime()::CL,11487
7526 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v69 = weekDateTimeNoMillis()::CL,11524
7531 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v71 = ordinalDate()::CL,11561
7536 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v73 = ordinalDateTime()::CL,11598
7541 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v75 = ordinalDateTimeNoMillis()::CL,11635
7546 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v77 = basicDate()::CL,11672
7551 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v79 = basicTime()::CL,11721
7556 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v81 = basicTimeNoMillis()::CL,11798
7561 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v83 = basicTTime()::CL,11861
7566 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v85 = basicTTimeNoMillis()::CL,11898
7571 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v87 = basicDateTime()::CL,11935
7576 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v89 = basicDateTimeNoMillis()::CL,11972
7581 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v91 = basicOrdinalDate()::CL,12009
7586 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v93 = basicOrdinalDateTime()::CL,12048
7591 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v95 = basicOrdinalDateTimeNoMillis()::CL,12085
7596 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v97 = basicWeekDate()::CL,12122
7601 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v99 = basicWeekDateTime()::CL,12177
7606 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v101 = basicWeekDateTimeNoMillis()::CL,12214
7611 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v103 = dateElementParser()::CL,12251
7616 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v105 = timeElementParser()::CL,12412
7621 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v107 = dateParser()::CL,12666
7626 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v109 = localDateParser()::CL,12725
7631 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v111 = timeParser()::CL,12744
7636 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v113 = localTimeParser()::CL,12797
7641 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v115 = dateTimeParser()::CL,12842
7646 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v117 = dateOptionalTimeParser()::CL,12928
7651 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v119 = localDateOptionalTimeParser()::CL,13003
7927 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.<clinit>()::JM,17088:JM,25796:JM,17077:JM,17094:JM,25790
7939 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.LazyInit.<clinit>()::CD,7942:CD,7947
7942 :: CALL :: call :: Ljava/util/Map :: v3 = buildMap()::CL,13228
7947 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v5 = buildFormatter()::CL,13573
7967 :: ENTR :: entry :: null :: org.joda.time.tz.UTCProvider.<clinit>()::CD,7970
7970 :: CALL :: call :: Ljava/util/Set :: v4 = singleton(#(UTC))::JM,7970
8078 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.<clinit>()::CD,8081
8081 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v2 = new java.util.concurrent.ConcurrentHashMap::
8110 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.<clinit>()::CD,8113
8113 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v2 = new java.util.concurrent.ConcurrentHashMap::
8157 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.<clinit>()::CD,8160:CD,8166:CD,8168:CD,8169:CD,8177:CD,8181:CD,8183:CD,8184:CD,8191:CD,8195:CD,8198:CD,8204:CD,8206:CD,8210:CD,8214
8160 :: NORM :: declaration :: Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId :: v2 = new org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId::DD,8166
8166 :: EXPR :: modify :: Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId :: org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.INSTANCE = v2::
8168 :: NORM :: declaration :: [Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId :: v7 = new org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[]::
8169 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId :: v8 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.INSTANCE::DD,8171
8171 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = v8::
8177 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::DD,8181
8181 :: EXPR :: modify :: Ljava/util/List :: org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.BASE_GROUPED_IDS = v9::
8183 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,8191
8184 :: CALL :: call :: Ljava/util/Set :: v13 = getAvailableIDs()::CL,13654
8191 :: EXPR :: modify :: Ljava/util/List :: org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.ALL_IDS = v11::
8195 :: CALL :: call :: V :: sort(v15)::
8198 :: NORM :: declaration :: Ljava/util/HashMap :: v17 = new java.util.HashMap::
8204 :: EXPR :: reference :: Ljava/util/List :: v19 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.ALL_IDS::JM,8214:JM,8219
8206 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,8214:JM,8219
8210 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,8214:JM,8219
8214 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 226::CD,8210:CD,8215:CD,8219:CD,8220:CD,8225:JM,8214
8215 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,8214:JM,8219
8219 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,8225:JM,8307:JM,8230:JM,8231
8220 :: CALL :: call :: I :: v29 = v26.indexOf(#(47))::JM,8225:JM,8307:JM,8230:JM,8231
8225 :: PRED :: IF :: Z :: if (v29 < #(0)) goto 203::CD,8226:CD,8230:CD,8237:CD,8238:CD,8244:CD,8251:CD,8256:CD,8271:CD,8276:CD,8277:CD,8283:CD,8285:CD,8307
8226 :: CALL :: call :: I :: v31 = v26.length()::JM,8230
8230 :: PRED :: IF :: Z :: if (v29 >= v31) goto 125::CF,8307:CD,8231
8231 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v29 + #(1)::DD,8307
8237 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v33 + #(1)::
8238 :: CALL :: call :: Ljava/lang/String :: v38 = v26.substring(#(0), v36)::
8244 :: CALL :: call :: Ljava/lang/String :: v40 = v26.substring(v33)::
8251 :: CALL :: call :: Z :: v43 = v41.containsKey(v38)::JM,8256
8256 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 179::CD,8259:CD,8263
8259 :: NORM :: declaration :: Ljava/util/ArrayList :: v45 = new java.util.ArrayList::
8263 :: CALL :: call :: Ljava/lang/Object :: v48 = v44.put(v38, v45)::
8271 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v38)::JM,8276
8276 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
8277 :: CALL :: call :: Z :: v54 = v52.add(v40)::
8283 :: EXPR :: reference :: Ljava/util/List :: v55 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.BASE_GROUPED_IDS::
8285 :: CALL :: call :: Z :: v57 = v55.add(v26)::
8307 :: EXPR :: assign :: null :: PHI v33 = v29, v32::DD,8237
8371 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.<clinit>()::CD,8374
8374 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v2 = new java.util.concurrent.ConcurrentHashMap::
9383 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.getInstanceUTC()::CF,9384:CD,9386:CD,9388
9384 :: EXIT :: exit :: Lorg/joda/time/chrono/ISOChronology :: org.joda.time.chrono.ISOChronology.getInstanceUTC()::JM,60942
9386 :: EXPR :: reference :: Lorg/joda/time/chrono/ISOChronology :: v2 = org.joda.time.chrono.ISOChronology.INSTANCE_UTC::CF,9388
9388 :: NORM :: compound :: Lorg/joda/time/chrono/ISOChronology :: return v2::CF,9384
9390 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.year()::CE,9391:CD,9397
9391 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.year()::JM,25033:JM,32505
9394 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iYear::DD,9397
9397 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,9391
9399 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.get(long)::CE,9400:CD,9404:CD,9412:CD,9413
9400 :: EXIT :: exit :: I :: org.joda.time.field.OffsetDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9404 :: CALL :: call :: I :: v5 = p0 $null .get(p1 $null )::JM,9412:CL,15955
9409 :: EXPR :: reference :: I :: v6 = p0 $null .iOffset::DD,9412
9412 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 + v6::CF,9413
9413 :: NORM :: compound :: I :: return v7::DD,9400
9417 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.get(long)::CE,9418:CD,9425:CD,9433:CD,9438
9418 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9425 :: CALL :: call :: J :: v6 = v4.convertUTCToLocal(p1 $null )::CL,15971
9433 :: CALL :: call :: I :: v9 = v7.get(v6)::JM,9438:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
9438 :: NORM :: compound :: I :: return v9::DD,9418
9444 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.get(long)::CE,9445:CD,9452:CD,9457
9445 :: EXIT :: exit :: I :: org.joda.time.chrono.GJDayOfWeekDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22333:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9452 :: CALL :: call :: I :: v6 = v4.getDayOfWeek(p1 $null )::JM,9457:CL,16012
9457 :: NORM :: compound :: I :: return v6::CF,9445
9460 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(long)::CE,9461:CD,9468:CD,9473
9461 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9468 :: CALL :: call :: I :: v6 = v4.getMonthOfYear(p1 $null )::JM,9473:CL,16056
9473 :: NORM :: compound :: I :: return v6::DD,9461
9476 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.get(long)::CE,9477:CD,9484:CD,9489
9477 :: EXIT :: exit :: I :: org.joda.time.field.DelegatedDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9484 :: CALL :: call :: I :: v6 = v4.get(p1 $null )::JM,9489:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
9489 :: NORM :: compound :: I :: return v6::DD,9477
9492 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.get(long)::CE,9493:CD,9500:CD,9505
9493 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekyearDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22073:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9500 :: CALL :: call :: I :: v6 = v4.getWeekyear(p1 $null )::JM,9505:CL,16077
9505 :: NORM :: compound :: I :: return v6::DD,9493
9508 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.get(long)::CE,9509:CD,9517:CD,9522:CD,9527:CD,9528
9509 :: EXIT :: exit :: I :: org.joda.time.field.ZeroIsMaxDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9517 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,9522:JM,9528:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
9522 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 19::CF,9528:CD,9523
9523 :: CALL :: call :: I :: v10 = p0 $null .getMaximumValue()::JM,9528:CL,16163
9527 :: NORM :: compound :: I :: return v11::DD,9509
9528 :: EXPR :: assign :: null :: PHI v11 = v7, v10::CF,9527
9536 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)::CE,9537:CD,9545:CD,9550:CD,9552:CD,9553
9537 :: EXIT :: exit :: I :: org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9545 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,9553:JM,9550:JM,9551:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
9550 :: PRED :: IF :: Z :: if (v7 > #(0)) goto 18::CF,9553:CD,9551
9551 :: EXPR :: assign :: Ljava/lang/Object :: v10 = #(1) - v7::DD,9553
9552 :: NORM :: compound :: I :: return v11::DD,9537
9553 :: EXPR :: assign :: null :: PHI v11 = v7, v10::CF,9552
9562 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.get(long)::CE,9563:CD,9571:CD,9576
9563 :: EXIT :: exit :: I :: org.joda.time.field.DividedDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9571 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,9576:JM,9580:JM,9582:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
9576 :: PRED :: IF :: Z :: if (v7 < #(0)) goto 22::CD,9580:CD,9581:CD,9582:CD,9586:CD,9587:CD,9588
9577 :: EXPR :: reference :: I :: v14 = p0 $null .iDivisor::DD,9580
9580 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v7 / v14::CF,9581
9581 :: NORM :: compound :: I :: return v15::DD,9563
9582 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + #(1)::DD,9586
9583 :: EXPR :: reference :: I :: v11 = p0 $null .iDivisor::DD,9586
9586 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 / v11::DD,9587
9587 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v12 - #(1)::CF,9588
9588 :: NORM :: compound :: I :: return v13::DD,9563
9600 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(long)::CE,9601:CD,9608:CD,9613
9601 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22333:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9608 :: CALL :: call :: I :: v6 = v4.getWeekOfWeekyear(p1 $null )::JM,9613:CL,16179
9613 :: NORM :: compound :: I :: return v6::DD,9601
9616 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.get(long)::CE,9617:CD,9624:CD,9629
9617 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfYearDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22333:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9624 :: CALL :: call :: I :: v6 = v4.getDayOfYear(p1 $null )::JM,9629:CL,16200
9629 :: NORM :: compound :: I :: return v6::DD,9617
9632 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.get(long)::CE,9633:CD,9640:CD,9645
9633 :: EXIT :: exit :: I :: org.joda.time.chrono.GJEraDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22507:JM,37698:JM,52153:JM,58426:JM,62313:JM,62314:JM,62319
9640 :: CALL :: call :: I :: v6 = v4.getYear(p1 $null )::JM,9645:CL,16221
9645 :: PRED :: IF :: Z :: if (v6 > #(0)) goto 14::CD,9646:CD,9647
9646 :: NORM :: compound :: I :: return #(0)::DD,9633
9647 :: NORM :: compound :: I :: return #(1)::DD,9633
9653 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.get(long)::CE,9654:CD,9661:CD,9666
9654 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicYearDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9661 :: CALL :: call :: I :: v6 = v4.getYear(p1 $null )::JM,9666:CL,16221
9666 :: NORM :: compound :: I :: return v6::DD,9654
9669 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDateTimeField.get(long)::CE,9670:CD,9674:CD,9675:JM,9680:JM,9692
9670 :: EXIT :: exit :: I :: org.joda.time.field.PreciseDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,21830:JM,22333:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9674 :: EXPR :: assign :: Z :: v5 = p1 $null  == #(0 l)::DD,9675
9675 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 21::CD,9676:CD,9680:CD,9684:CD,9685:CD,9686:CD,9687:CD,9691:CD,9692:CD,9693:CD,9697:CD,9701:CD,9702:CD,9703:CD,9704:CD,9705
9676 :: CALL :: call :: J :: v21 = p0 $null .getUnitMillis()::JM,9680:CL,16314
9680 :: EXPR :: assign :: Ljava/lang/Object :: v22 = p1 $null  / v21::DD,9685
9681 :: EXPR :: reference :: I :: v23 = p0 $null .iRange::DD,9684
9684 :: EXPR :: assign :: J :: v24 = CONVERT I to J v23::CF,9685
9685 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v22 % v24::CF,9686
9686 :: EXPR :: assign :: I :: v26 = CONVERT J to I v25::CF,9687
9687 :: NORM :: compound :: I :: return v26::CF,9670
9688 :: EXPR :: reference :: I :: v7 = p0 $null .iRange::DD,9691
9691 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 - #(1)::DD,9704:CF,9692
9692 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $null  + #(1 l)::DD,9697
9693 :: CALL :: call :: J :: v13 = p0 $null .getUnitMillis()::JM,9697:CL,16314
9697 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v11 / v13::DD,9702
9698 :: EXPR :: reference :: I :: v15 = p0 $null .iRange::DD,9701
9701 :: EXPR :: assign :: J :: v16 = CONVERT I to J v15::CF,9702
9702 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v14 % v16::CF,9703
9703 :: EXPR :: assign :: I :: v18 = CONVERT J to I v17::CF,9704
9704 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v9 + v18::CF,9705
9705 :: NORM :: compound :: I :: return v19::CF,9670
9718 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.get(long)::CE,9719:CD,9723
9719 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9723 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v5 = p0 $null .unsupported()::CL,16323
9728 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(long)::CE,9729:CD,9736:CD,9741
9729 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,22333:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9736 :: CALL :: call :: I :: v6 = v4.getDayOfMonth(p1 $null )::JM,9741:CL,16358
9741 :: NORM :: compound :: I :: return v6::DD,9729
9744 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.get(long)::CE,9745:CD,9753:CD,9758
9745 :: EXIT :: exit :: I :: org.joda.time.field.RemainderDateTimeField.get(long)::JM,9438:JM,9489:JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155:JM,37698:JM,58426:JM,62313:JM,62314:JM,62319
9753 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,9762:JM,9768:JM,9758:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
9758 :: PRED :: IF :: Z :: if (v7 < #(0)) goto 21::CD,9762:CD,9763:CD,9767:CD,9768:CD,9772:CD,9773:CD,9774
9759 :: EXPR :: reference :: I :: v16 = p0 $null .iDivisor::DD,9762
9762 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v7 % v16::CF,9763
9763 :: NORM :: compound :: I :: return v17::DD,9745
9764 :: EXPR :: reference :: I :: v9 = p0 $null .iDivisor::DD,9767
9767 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(1)::DD,9773:CF,9768
9768 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v7 + #(1)::DD,9772
9769 :: EXPR :: reference :: I :: v13 = p0 $null .iDivisor::DD,9772
9772 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v12 % v13::CF,9773
9773 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v11 + v14::CF,9774
9774 :: NORM :: compound :: I :: return v15::DD,9745
9892 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone)::CD,9896
9896 :: CALL :: call :: Lorg/joda/time/chrono/GregorianChronology :: v5 = getInstance(p1 $null , #(4))::CL,16678
9904 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.seconds()::CF,9905:CD,9907:CD,9909
9905 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.seconds()::JM,42044
9907 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.SECONDS_TYPE::CF,9909
9909 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,9905
9921 :: EXPR :: modify :: J :: p0 $null .iUnitMillis = p2 $null ::
9929 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.minutes()::CF,9930:CD,9932:CD,9934
9930 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.minutes()::JM,42037
9932 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.MINUTES_TYPE::CF,9934
9934 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,9930
9936 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.hours()::CF,9937:CD,9939:CD,9941
9937 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.hours()::JM,42030
9939 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.HOURS_TYPE::CF,9941
9941 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,9937
9950 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.days()::CF,9951:CD,9953:CD,9955
9951 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.days()::JM,42023
9953 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.DAYS_TYPE::CF,9955
9955 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,9951
9957 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.weeks()::CF,9958:CD,9960:CD,9962
9958 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.weeks()::JM,42016
9960 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.WEEKS_TYPE::CF,9962
9962 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,9958
9988 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v21 = new java.lang.IllegalArgumentException::JM,16880:JM,10017:JM,16898:JM,25796:JM,16886:JM,16904:JM,25790
9994 :: CALL :: call :: J :: v11 = p3 $null .getUnitMillis()::JM,10002:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
9998 :: CALL :: call :: J :: v13 = p0 $null .getUnitMillis()::JM,10002:CL,16314
10002 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v11 / v13::CF,10003
10003 :: EXPR :: assign :: I :: v15 = CONVERT J to I v14::DD,10004
10004 :: EXPR :: modify :: I :: p0 $null .iRange = v15::
10011 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::JM,16880:JM,10017:JM,16898:JM,25796:JM,16886:JM,16904:JM,25790
10017 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeField = p3 $null ::
10107 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::JM,17088:JM,25796:JM,17077:JM,17094:JM,25790
10172 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.months()::CF,10173:CD,10175:CD,10177
10173 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.months()::JM,42009
10175 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.MONTHS_TYPE::CF,10177
10177 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,10173
10186 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.years()::CF,10187:CD,10189:CD,10191
10187 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.years()::JM,42002
10189 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.YEARS_TYPE::CF,10191
10191 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,10187
10217 :: EXPR :: modify :: B :: p0 $null .iOrdinal = p2 $null ::
10246 :: EXPR :: modify :: B :: p0 $null .iOrdinal = p2 $null ::
10249 :: EXPR :: modify :: Lorg/joda/time/DurationFieldType :: p0 $null .iUnitType = p3 $null ::
10252 :: EXPR :: modify :: Lorg/joda/time/DurationFieldType :: p0 $null .iRangeType = p4 $null ::
10264 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.millis()::CF,10265:CD,10267:CD,10269
10265 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.DurationFieldType.millis()::JM,42051
10267 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v2 = org.joda.time.DurationFieldType.MILLIS_TYPE::CF,10269
10269 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v2::CF,10265
10271 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.yearElement()::CD,10274:CD,10276
10274 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ye::DD,10276
10276 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 23::JM,17179:CD,10281:CD,10287
10281 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.appendYear(#(4), #(9))::CL,17190
10287 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = v10.toFormatter()::CL,17210
10300 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.monthElement()::CD,10303:CD,10305
10303 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.mye::DD,10305
10305 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10310:CD,10315:CD,10320
10310 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(45))::CL,17270
10315 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendMonthOfYear(#(2))::CL,17289
10320 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10333 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dayOfMonthElement()::CD,10336:CD,10338
10336 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dme::DD,10338
10338 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10343:CD,10348:CD,10353
10343 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(45))::CL,17270
10348 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendDayOfMonth(#(2))::CL,17308
10353 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10366 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekyearElement()::CD,10369:CD,10371
10369 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.we::DD,10371
10371 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 23::JM,17179:CD,10376:CD,10382
10376 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.appendWeekyear(#(4), #(9))::CL,17327
10382 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = v10.toFormatter()::CL,17210
10395 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekElement()::CD,10398:CD,10400
10398 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.wwe::DD,10400
10400 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10405:CD,10410:CD,10415
10405 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(-W))::CL,17347
10410 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendWeekOfWeekyear(#(2))::CL,17403
10415 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10428 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dayOfWeekElement()::CD,10431:CD,10433
10431 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dwe::DD,10433
10433 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10438:CD,10443:CD,10448
10438 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(45))::CL,17270
10443 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendDayOfWeek(#(1))::CL,17422
10448 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10461 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dayOfYearElement()::CD,10464:CD,10466
10464 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dye::DD,10466
10466 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10471:CD,10476:CD,10481
10471 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(45))::CL,17270
10476 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendDayOfYear(#(3))::CL,17441
10481 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10494 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.hourElement()::CD,10497:CD,10499
10497 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.hde::DD,10499
10499 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,17179:CD,10504:CD,10509
10504 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendHourOfDay(#(2))::CL,17460
10509 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = v9.toFormatter()::CL,17210
10521 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.minuteElement()::CD,10524:CD,10526
10524 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.mhe::DD,10526
10526 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10531:CD,10536:CD,10541
10531 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(58))::CL,17270
10536 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendMinuteOfHour(#(2))::CL,17479
10541 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10554 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.secondElement()::CD,10557:CD,10559
10557 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.sme::DD,10559
10559 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 26::JM,17179:CD,10564:CD,10569:CD,10574
10564 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(58))::CL,17270
10569 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendSecondOfMinute(#(2))::CL,17498
10574 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10587 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.fractionElement()::CD,10590:CD,10592
10590 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.fse::DD,10592
10592 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,17179:CD,10597:CD,10602:CD,10608
10597 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(46))::CL,17270
10602 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = v9.appendFractionOfSecond(#(3), #(9))::CL,17517
10608 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v15 = v13.toFormatter()::CL,17210
10622 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.offsetElement()::CD,10625:CD,10627
10625 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ze::DD,10627
10627 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 25::JM,17179:CD,10632:CD,10640
10632 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v5.appendTimeZoneOffset(#(Z), #(1), #(2), #(4))::CL,17537
10640 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = v12.toFormatter()::CL,17210
10655 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.literalTElement()::CD,10658:CD,10660
10658 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.lte::DD,10660
10660 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 22::JM,17179:CD,10665:CD,10670
10665 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(84))::CL,17270
10670 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = v9.toFormatter()::CL,17210
10682 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.yearMonth()::CD,10685:CD,10687
10685 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ym::DD,10687
10687 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,10692:CD,10695:CD,10700:CD,10703:CD,10708
10692 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = yearElement()::CL,10271
10695 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10700 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = monthElement()::CL,10300
10703 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10708 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
10719 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.yearMonthDay()::CD,10722:CD,10724
10722 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ymd::DD,10724
10724 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,10729:CD,10732:CD,10737:CD,10740:CD,10745:CD,10748:CD,10753
10729 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = yearElement()::CL,10271
10732 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10737 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = monthElement()::CL,10300
10740 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10745 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = dayOfMonthElement()::CL,10333
10748 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
10753 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
10764 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekyearWeek()::CD,10767:CD,10769
10767 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ww::DD,10769
10769 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,10774:CD,10777:CD,10782:CD,10785:CD,10790
10774 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = weekyearElement()::CL,10366
10777 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10782 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = weekElement()::CL,10395
10785 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10790 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
10801 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekyearWeekDay()::CD,10804:CD,10806
10804 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.wwd::DD,10806
10806 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,10811:CD,10814:CD,10819:CD,10822:CD,10827:CD,10830:CD,10835
10811 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = weekyearElement()::CL,10366
10814 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10819 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = weekElement()::CL,10395
10822 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10827 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = dayOfWeekElement()::CL,10428
10830 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
10835 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
10846 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.hourMinute()::CD,10849:CD,10851
10849 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.hm::DD,10851
10851 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,10856:CD,10859:CD,10864:CD,10867:CD,10872
10856 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourElement()::CL,10494
10859 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10864 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = minuteElement()::CL,10521
10867 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10872 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
10883 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.hourMinuteSecond()::CD,10886:CD,10888
10886 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.hms::DD,10888
10888 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,10893:CD,10896:CD,10901:CD,10904:CD,10909:CD,10912:CD,10917
10893 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourElement()::CL,10494
10896 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10901 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = minuteElement()::CL,10521
10904 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10909 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = secondElement()::CL,10554
10912 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
10917 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
10928 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.hourMinuteSecondMillis()::CD,10931:CD,10933
10931 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.hmsl::DD,10933
10933 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 45::JM,17179:CD,10938:CD,10941:CD,10946:CD,10949:CD,10954:CD,10957:CD,10962:CD,10967:CD,10973
10938 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourElement()::CL,10494
10941 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
10946 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = minuteElement()::CL,10521
10949 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
10954 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = secondElement()::CL,10554
10957 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
10962 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v21 = v18.appendLiteral(#(46))::CL,17270
10967 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v24 = v21.appendFractionOfSecond(#(3), #(3))::CL,17517
10973 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v26 = v24.toFormatter()::CL,17210
10987 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.hourMinuteSecondFraction()::CD,10990:CD,10992
10990 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.hmsf::DD,10992
10992 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 41::JM,17179:CD,10997:CD,11000:CD,11005:CD,11008:CD,11013:CD,11016:CD,11021:CD,11024:CD,11029
10997 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourElement()::CL,10494
11000 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11005 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = minuteElement()::CL,10521
11008 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11013 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = secondElement()::CL,10554
11016 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11021 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = fractionElement()::CL,10587
11024 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v22 = v18.append(v20)::CL,17567
11029 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v24 = v22.toFormatter()::CL,17210
11040 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateHour()::CD,11043:CD,11045
11043 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dh::DD,11045
11045 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,11053:CD,11058:CD,11061:CD,11069:CD,11074
11053 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11058 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = literalTElement()::CL,10655
11061 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11069 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11074 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11085 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateHourMinute()::CD,11088:CD,11090
11088 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dhm::DD,11090
11090 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,11098:CD,11103:CD,11106:CD,11111:CD,11114:CD,11119
11098 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11103 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = literalTElement()::CL,10655
11106 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11111 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = hourMinute()::CL,10846
11114 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11119 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11130 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateHourMinuteSecond()::CD,11133:CD,11135
11133 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dhms::DD,11135
11135 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,11143:CD,11148:CD,11151:CD,11156:CD,11159:CD,11164
11143 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11148 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = literalTElement()::CL,10655
11151 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11156 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = hourMinuteSecond()::CL,10883
11159 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11164 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11175 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateHourMinuteSecondMillis()::CD,11178:CD,11180
11178 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dhmsl::DD,11180
11180 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,11188:CD,11193:CD,11196:CD,11201:CD,11204:CD,11209
11188 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11193 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = literalTElement()::CL,10655
11196 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11201 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = hourMinuteSecondMillis()::CL,10928
11204 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11209 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11220 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateHourMinuteSecondFraction()::CD,11223:CD,11225
11223 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dhmsf::DD,11225
11225 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,11233:CD,11238:CD,11241:CD,11246:CD,11249:CD,11254
11233 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11238 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = literalTElement()::CL,10655
11241 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11246 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = hourMinuteSecondFraction()::CL,10987
11249 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.append(v16)::CL,17567
11254 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11265 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.time()::CD,11268:CD,11270
11268 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.t::DD,11270
11270 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11275:CD,11278:CD,11283:CD,11286:CD,11291
11275 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourMinuteSecondFraction()::CL,10987
11278 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11283 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = offsetElement()::CL,10622
11286 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11291 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11302 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.timeNoMillis()::CD,11305:CD,11307
11305 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.tx::DD,11307
11307 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11312:CD,11315:CD,11320:CD,11323:CD,11328
11312 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = hourMinuteSecond()::CL,10883
11315 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11320 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = offsetElement()::CL,10622
11323 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11328 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11339 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.tTime()::CD,11342:CD,11344
11342 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.tt::DD,11344
11344 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11349:CD,11352:CD,11357:CD,11360:CD,11365
11349 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
11352 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11357 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = time()::CL,11265
11360 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11365 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11376 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.tTimeNoMillis()::CD,11379:CD,11381
11379 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ttx::DD,11381
11381 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11386:CD,11389:CD,11394:CD,11397:CD,11402
11386 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
11389 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11394 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = timeNoMillis()::CL,11302
11397 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11402 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11413 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateTime()::CD,11416:CD,11418
11416 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dt::DD,11418
11418 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11426:CD,11431:CD,11434:CD,11439
11426 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11431 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTime()::CL,11339
11434 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11439 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11450 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateTimeNoMillis()::CD,11453:CD,11455
11453 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dtx::DD,11455
11455 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11463:CD,11468:CD,11471:CD,11476
11463 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11468 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTimeNoMillis()::CL,11376
11471 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11476 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11487 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekDateTime()::CD,11490:CD,11492
11490 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.wdt::DD,11492
11492 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11500:CD,11505:CD,11508:CD,11513
11500 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11505 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTime()::CL,11339
11508 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11513 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11524 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.weekDateTimeNoMillis()::CD,11527:CD,11529
11527 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.wdtx::DD,11529
11529 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11537:CD,11542:CD,11545:CD,11550
11537 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11542 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTimeNoMillis()::CL,11376
11545 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11550 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11561 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.ordinalDate()::CD,11564:CD,11566
11564 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.od::DD,11566
11566 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11571:CD,11574:CD,11579:CD,11582:CD,11587
11571 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = yearElement()::CL,10271
11574 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11579 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = dayOfYearElement()::CL,10461
11582 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11587 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11598 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.ordinalDateTime()::CD,11601:CD,11603
11601 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.odt::DD,11603
11603 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11608:CD,11611:CD,11616:CD,11619:CD,11624
11608 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = ordinalDate()::CL,11561
11611 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11616 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTime()::CL,11339
11619 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11624 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11635 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.ordinalDateTimeNoMillis()::CD,11638:CD,11640
11638 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.odtx::DD,11640
11640 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11645:CD,11648:CD,11653:CD,11656:CD,11661
11645 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = ordinalDate()::CL,11561
11648 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11653 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = tTimeNoMillis()::CL,11376
11656 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11661 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11672 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicDate()::CD,11675:CD,11677
11675 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bd::DD,11677
11677 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 36::JM,17179:CD,11682:CD,11691:CD,11700:CD,11706
11682 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendYear(#(4), #(4))::CL,17190
11691 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v9.appendFixedDecimal(v11, #(2))::CL,17627
11700 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v18 = v14.appendFixedDecimal(v16, #(2))::CL,17627
11706 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.toFormatter()::CL,17210
11721 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicTime()::CD,11724:CD,11726
11724 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bt::DD,11726
11726 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 57::JM,17179:CD,11734:CD,11743:CD,11752:CD,11758:CD,11763:CD,11769:CD,11777
11734 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v11 = v5.appendFixedDecimal(v8, #(2))::CL,17627
11743 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v15 = v11.appendFixedDecimal(v13, #(2))::CL,17627
11752 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v19 = v15.appendFixedDecimal(v17, #(2))::CL,17627
11758 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v22 = v19.appendLiteral(#(46))::CL,17270
11763 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v26 = v22.appendFractionOfSecond(#(3), #(9))::CL,17517
11769 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v30 = v26.appendTimeZoneOffset(#(Z), #(0), #(2), #(2))::CL,17537
11777 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v32 = v30.toFormatter()::CL,17210
11798 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicTimeNoMillis()::CD,11801:CD,11803
11801 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.btx::DD,11803
11803 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 46::JM,17179:CD,11811:CD,11820:CD,11829:CD,11835:CD,11843
11811 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v11 = v5.appendFixedDecimal(v8, #(2))::CL,17627
11820 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v15 = v11.appendFixedDecimal(v13, #(2))::CL,17627
11829 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v19 = v15.appendFixedDecimal(v17, #(2))::CL,17627
11835 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v23 = v19.appendTimeZoneOffset(#(Z), #(0), #(2), #(2))::CL,17537
11843 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v25 = v23.toFormatter()::CL,17210
11861 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicTTime()::CD,11864:CD,11866
11864 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.btt::DD,11866
11866 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11871:CD,11874:CD,11879:CD,11882:CD,11887
11871 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
11874 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11879 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTime()::CL,11721
11882 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11887 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11898 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicTTimeNoMillis()::CD,11901:CD,11903
11901 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bttx::DD,11903
11903 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11908:CD,11911:CD,11916:CD,11919:CD,11924
11908 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
11911 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11916 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTimeNoMillis()::CL,11798
11919 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11924 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11935 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicDateTime()::CD,11938:CD,11940
11938 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bdt::DD,11940
11940 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11945:CD,11948:CD,11953:CD,11956:CD,11961
11945 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicDate()::CL,11672
11948 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11953 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTime()::CL,11861
11956 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11961 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
11972 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicDateTimeNoMillis()::CD,11975:CD,11977
11975 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bdtx::DD,11977
11977 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,11982:CD,11985:CD,11990:CD,11993:CD,11998
11982 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicDate()::CL,11672
11985 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
11990 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTimeNoMillis()::CL,11898
11993 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
11998 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12009 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicOrdinalDate()::CD,12012:CD,12014
12012 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bod::DD,12014
12014 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,12019:CD,12028:CD,12034
12019 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendYear(#(4), #(4))::CL,17190
12028 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v9.appendFixedDecimal(v11, #(3))::CL,17627
12034 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12048 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicOrdinalDateTime()::CD,12051:CD,12053
12051 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bodt::DD,12053
12053 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,12058:CD,12061:CD,12066:CD,12069:CD,12074
12058 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicOrdinalDate()::CL,12009
12061 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
12066 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTime()::CL,11861
12069 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
12074 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12085 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicOrdinalDateTimeNoMillis()::CD,12088:CD,12090
12088 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bodtx::DD,12090
12090 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,12095:CD,12098:CD,12103:CD,12106:CD,12111
12095 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicOrdinalDate()::CL,12009
12098 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
12103 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTimeNoMillis()::CL,11898
12106 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
12111 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12122 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicWeekDate()::CD,12125:CD,12127
12125 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bwd::DD,12127
12127 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 41::JM,17179:CD,12132:CD,12138:CD,12146:CD,12155:CD,12161
12132 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendWeekyear(#(4), #(4))::CL,17327
12138 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v9.appendLiteral(#(87))::CL,17270
12146 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v17 = v12.appendFixedDecimal(v14, #(2))::CL,17627
12155 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v22 = v17.appendFixedDecimal(v19, #(1))::CL,17627
12161 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v24 = v22.toFormatter()::CL,17210
12177 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicWeekDateTime()::CD,12180:CD,12182
12180 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bwdt::DD,12182
12182 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,12187:CD,12190:CD,12195:CD,12198:CD,12203
12187 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicWeekDate()::CL,12122
12190 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
12195 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTime()::CL,11861
12198 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
12203 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12214 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.basicWeekDateTimeNoMillis()::CD,12217:CD,12219
12217 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.bwdtx::DD,12219
12219 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 29::JM,17179:CD,12224:CD,12227:CD,12232:CD,12235:CD,12240
12224 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = basicWeekDate()::CL,12122
12227 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = v5.append(v8)::CL,17567
12232 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v12 = basicTTimeNoMillis()::CL,11898
12235 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.append(v12)::CL,17567
12240 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v16 = v14.toFormatter()::CL,17210
12251 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateElementParser()::CD,12254:CD,12256
12254 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dpe::DD,12256
12256 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 131::JM,17179:CD,12266:CD,12269:CD,12278:CD,12281:CD,12286:CD,12289:CD,12293:CD,12298:CD,12302:CD,12307:CD,12319:CD,12322:CD,12327:CD,12330:CD,12335:CD,12338:CD,12342:CD,12347:CD,12359:CD,12362:CD,12367:CD,12370:CD,12375:CD,12383:CD,12389
12266 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v13 = yearElement()::CL,10271
12269 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v15 = v10.append(v13)::CL,17567
12278 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v19 = monthElement()::CL,10300
12281 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v21 = v16.append(v19)::CL,17567
12286 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v23 = dayOfMonthElement()::CL,10333
12289 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v25 = v23.getParser()::CL,17715
12293 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v27 = v21.appendOptional(v25)::CL,17728
12298 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v29 = v27.toParser()::CL,17776
12302 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v31 = v15.appendOptional(v29)::CL,17728
12307 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v33 = v31.toParser()::CL,17776
12319 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v38 = weekyearElement()::CL,10366
12322 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v40 = v35.append(v38)::CL,17567
12327 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v42 = weekElement()::CL,10395
12330 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v44 = v40.append(v42)::CL,17567
12335 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v46 = dayOfWeekElement()::CL,10428
12338 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v48 = v46.getParser()::CL,17715
12342 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v50 = v44.appendOptional(v48)::CL,17728
12347 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v52 = v50.toParser()::CL,17776
12359 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v57 = yearElement()::CL,10271
12362 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v59 = v54.append(v57)::CL,17567
12367 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v61 = dayOfYearElement()::CL,10461
12370 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v63 = v59.append(v61)::CL,17567
12375 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v65 = v63.toParser()::CL,17776
12383 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v67 = v5.append(#(null), v8)::CL,17810
12389 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v69 = v67.toFormatter()::CL,17210
12412 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.timeElementParser()::CD,12415:CD,12417
12415 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.tpe::DD,12417
12417 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 209::JM,17179:CD,12427:CD,12432:CD,12444:CD,12449:CD,12457:CD,12463:CD,12471:CD,12474:CD,12484:CD,12487:CD,12497:CD,12500:CD,12509:CD,12514:CD,12520:CD,12524:CD,12529:CD,12541:CD,12546:CD,12552:CD,12564:CD,12570:CD,12582:CD,12587:CD,12593:CD,12605:CD,12611
12427 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v14 = v10.appendLiteral(#(46))::CL,17270
12432 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v16 = v14.toParser()::CL,17776
12444 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v22 = v18.appendLiteral(#(44))::CL,17270
12449 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v24 = v22.toParser()::CL,17776
12457 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v26 = v5.append(#(null), v8)::CL,17810
12463 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v28 = v26.toParser()::CL,17776
12471 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v32 = hourElement()::CL,10494
12474 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v34 = v29.append(v32)::CL,17567
12484 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v40 = minuteElement()::CL,10521
12487 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v42 = v37.append(v40)::CL,17567
12497 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v47 = secondElement()::CL,10554
12500 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v49 = v44.append(v47)::CL,17567
12509 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v53 = v50.append(v28)::CL,17953
12514 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v56 = v53.appendFractionOfSecond(#(1), #(9))::CL,17517
12520 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v58 = v56.toParser()::CL,17776
12524 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v60 = v49.appendOptional(v58)::CL,17728
12529 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v62 = v60.toParser()::CL,17776
12541 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v66 = v63.append(v28)::CL,17953
12546 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v68 = v66.appendFractionOfMinute(#(1), #(9))::CL,17978
12552 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v70 = v68.toParser()::CL,17776
12564 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v72 = v42.append(#(null), v43)::CL,17810
12570 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v74 = v72.toParser()::CL,17776
12582 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v78 = v75.append(v28)::CL,17953
12587 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v80 = v78.appendFractionOfHour(#(1), #(9))::CL,17998
12593 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v82 = v80.toParser()::CL,17776
12605 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v84 = v34.append(#(null), v36)::CL,17810
12611 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v86 = v84.toFormatter()::CL,17210
12666 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateParser()::CD,12669:CD,12671
12669 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dp::DD,12671
12671 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 49::JM,17179:CD,12676:CD,12681:CD,12684:CD,12689:CD,12697:CD,12700:CD,12705:CD,12710
12676 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(84))::CL,17270
12681 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = offsetElement()::CL,10622
12684 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = v9.append(v11)::CL,17567
12689 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v15 = v13.toParser()::CL,17776
12697 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v19 = dateElementParser()::CL,12251
12700 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v21 = v16.append(v19)::CL,17567
12705 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v23 = v21.appendOptional(v15)::CL,17728
12710 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v25 = v23.toFormatter()::CL,17210
12725 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.localDateParser()::CD,12728:CD,12730
12728 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ldp::DD,12730
12730 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 13::CD,12731:CD,12734
12731 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v6 = dateElementParser()::CL,12251
12734 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = v6.withZoneUTC()::CL,18018
12744 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.timeParser()::CD,12747:CD,12749
12747 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.tp::DD,12749
12749 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 41::JM,17179:CD,12754:CD,12757:CD,12761:CD,12766:CD,12769:CD,12774:CD,12777:CD,12781:CD,12786
12754 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
12757 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v10 = v8.getParser()::CL,17715
12761 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v5.appendOptional(v10)::CL,17728
12766 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = timeElementParser()::CL,12412
12769 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v16 = v12.append(v14)::CL,17567
12774 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v18 = offsetElement()::CL,10622
12777 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v20 = v18.getParser()::CL,17715
12781 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v22 = v16.appendOptional(v20)::CL,17728
12786 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v24 = v22.toFormatter()::CL,17210
12797 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.localTimeParser()::CD,12800:CD,12802
12800 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ltp::DD,12802
12802 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 35::JM,17179:CD,12807:CD,12810:CD,12814:CD,12819:CD,12822:CD,12827:CD,12831
12807 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v8 = literalTElement()::CL,10655
12810 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v10 = v8.getParser()::CL,17715
12814 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = v5.appendOptional(v10)::CL,17728
12819 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v14 = timeElementParser()::CL,12412
12822 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v16 = v12.append(v14)::CL,17567
12827 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v18 = v16.toFormatter()::CL,17210
12831 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v20 = v18.withZoneUTC()::CL,18018
12842 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateTimeParser()::CD,12845:CD,12847
12845 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dtp::DD,12847
12847 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 69::JM,17179:CD,12852:CD,12857:CD,12860:CD,12865:CD,12868:CD,12872:CD,12877:CD,12890:CD,12893:CD,12901:CD,12907
12852 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(84))::CL,17270
12857 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = timeElementParser()::CL,12412
12860 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = v9.append(v11)::CL,17567
12865 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v15 = offsetElement()::CL,10622
12868 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v17 = v15.getParser()::CL,17715
12872 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v19 = v13.appendOptional(v17)::CL,17728
12877 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v21 = v19.toParser()::CL,17776
12890 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v29 = dateOptionalTimeParser()::CL,12928
12893 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v31 = v29.getParser()::CL,17715
12901 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v33 = v22.append(#(null), v25)::CL,17810
12907 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v35 = v33.toFormatter()::CL,17210
12928 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.dateOptionalTimeParser()::CD,12931:CD,12933
12931 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.dotp::DD,12933
12933 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 61::JM,17179:CD,12938:CD,12943:CD,12946:CD,12950:CD,12955:CD,12958:CD,12962:CD,12967:CD,12975:CD,12978:CD,12983:CD,12988
12938 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(84))::CL,17270
12943 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = timeElementParser()::CL,12412
12946 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v13 = v11.getParser()::CL,17715
12950 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v15 = v9.appendOptional(v13)::CL,17728
12955 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v17 = offsetElement()::CL,10622
12958 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v19 = v17.getParser()::CL,17715
12962 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v21 = v15.appendOptional(v19)::CL,17728
12967 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v23 = v21.toParser()::CL,17776
12975 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v27 = dateElementParser()::CL,12251
12978 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v29 = v24.append(v27)::CL,17567
12983 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v31 = v29.appendOptional(v23)::CL,17728
12988 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v33 = v31.toFormatter()::CL,17210
13003 :: ENTR :: entry :: null :: org.joda.time.format.ISODateTimeFormat.Constants.localDateOptionalTimeParser()::CD,13006:CD,13008
13006 :: EXPR :: reference :: Lorg/joda/time/format/DateTimeFormatter :: v2 = org.joda.time.format.ISODateTimeFormat$Constants.ldotp::DD,13008
13008 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 52::JM,17179:CD,13013:CD,13018:CD,13021:CD,13026:CD,13034:CD,13037:CD,13042:CD,13047:CD,13051
13013 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = v5.appendLiteral(#(84))::CL,17270
13018 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v11 = timeElementParser()::CL,12412
13021 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = v9.append(v11)::CL,17567
13026 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v15 = v13.toParser()::CL,17776
13034 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v19 = dateElementParser()::CL,12251
13037 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v21 = v16.append(v19)::CL,17567
13042 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v23 = v21.appendOptional(v15)::CL,17728
13047 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v25 = v23.toFormatter()::CL,17210
13051 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v27 = v25.withZoneUTC()::CL,18018
13228 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.LazyInit.buildMap()::CD,13231:CD,13235:CD,13241:CD,13247:CD,13253:CD,13259:CD,13265:CD,13271:CD,13277:CD,13283:CD,13289:CD,13295:CD,13301:CD,13307:CD,13313:CD,13319:CD,13325:CD,13331:CD,13337:CD,13343:CD,13349:CD,13355:CD,13361:CD,13367:CD,13373:CD,13379:CD,13385:CD,13391:CD,13397:CD,13403:CD,13409:CD,13415:CD,13421:CD,13427:CD,13433
13231 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::JM,13433
13235 :: CALL :: call :: Ljava/lang/Object :: v7 = v2.put(#(GMT), #(UTC))::
13241 :: CALL :: call :: Ljava/lang/Object :: v10 = v2.put(#(WET), #(WET))::
13247 :: CALL :: call :: Ljava/lang/Object :: v13 = v2.put(#(CET), #(CET))::
13253 :: CALL :: call :: Ljava/lang/Object :: v16 = v2.put(#(MET), #(CET))::
13259 :: CALL :: call :: Ljava/lang/Object :: v19 = v2.put(#(ECT), #(CET))::
13265 :: CALL :: call :: Ljava/lang/Object :: v22 = v2.put(#(EET), #(EET))::
13271 :: CALL :: call :: Ljava/lang/Object :: v26 = v2.put(#(MIT), #(Pacific/Apia))::
13277 :: CALL :: call :: Ljava/lang/Object :: v30 = v2.put(#(HST), #(Pacific/Honolulu))::
13283 :: CALL :: call :: Ljava/lang/Object :: v34 = v2.put(#(AST), #(America/Anchorage))::
13289 :: CALL :: call :: Ljava/lang/Object :: v38 = v2.put(#(PST), #(America/Los_Angeles))::
13295 :: CALL :: call :: Ljava/lang/Object :: v42 = v2.put(#(MST), #(America/Denver))::
13301 :: CALL :: call :: Ljava/lang/Object :: v46 = v2.put(#(PNT), #(America/Phoenix))::
13307 :: CALL :: call :: Ljava/lang/Object :: v50 = v2.put(#(CST), #(America/Chicago))::
13313 :: CALL :: call :: Ljava/lang/Object :: v54 = v2.put(#(EST), #(America/New_York))::
13319 :: CALL :: call :: Ljava/lang/Object :: v58 = v2.put(#(IET), #(America/Indiana/India...))::
13325 :: CALL :: call :: Ljava/lang/Object :: v62 = v2.put(#(PRT), #(America/Puerto_Rico))::
13331 :: CALL :: call :: Ljava/lang/Object :: v66 = v2.put(#(CNT), #(America/St_Johns))::
13337 :: CALL :: call :: Ljava/lang/Object :: v70 = v2.put(#(AGT), #(America/Argentina/Bue...))::
13343 :: CALL :: call :: Ljava/lang/Object :: v74 = v2.put(#(BET), #(America/Sao_Paulo))::
13349 :: CALL :: call :: Ljava/lang/Object :: v78 = v2.put(#(ART), #(Africa/Cairo))::
13355 :: CALL :: call :: Ljava/lang/Object :: v82 = v2.put(#(CAT), #(Africa/Harare))::
13361 :: CALL :: call :: Ljava/lang/Object :: v86 = v2.put(#(EAT), #(Africa/Addis_Ababa))::
13367 :: CALL :: call :: Ljava/lang/Object :: v90 = v2.put(#(NET), #(Asia/Yerevan))::
13373 :: CALL :: call :: Ljava/lang/Object :: v94 = v2.put(#(PLT), #(Asia/Karachi))::
13379 :: CALL :: call :: Ljava/lang/Object :: v98 = v2.put(#(IST), #(Asia/Kolkata))::
13385 :: CALL :: call :: Ljava/lang/Object :: v102 = v2.put(#(BST), #(Asia/Dhaka))::
13391 :: CALL :: call :: Ljava/lang/Object :: v106 = v2.put(#(VST), #(Asia/Ho_Chi_Minh))::
13397 :: CALL :: call :: Ljava/lang/Object :: v110 = v2.put(#(CTT), #(Asia/Shanghai))::
13403 :: CALL :: call :: Ljava/lang/Object :: v114 = v2.put(#(JST), #(Asia/Tokyo))::
13409 :: CALL :: call :: Ljava/lang/Object :: v118 = v2.put(#(ACT), #(Australia/Darwin))::
13415 :: CALL :: call :: Ljava/lang/Object :: v122 = v2.put(#(AET), #(Australia/Sydney))::
13421 :: CALL :: call :: Ljava/lang/Object :: v126 = v2.put(#(SST), #(Pacific/Guadalcanal))::
13427 :: CALL :: call :: Ljava/lang/Object :: v130 = v2.put(#(NST), #(Pacific/Auckland))::
13433 :: CALL :: call :: Ljava/util/Map :: v132 = unmodifiableMap(v2)::JM,13433
13573 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.LazyInit.buildFormatter()::JM,17179:CD,13584:CD,13592:CD,13596
13584 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v11 = v4.appendTimeZoneOffset(#(null), #(1), #(2), #(4))::CL,17537
13592 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v13 = v11.toFormatter()::CL,17210
13596 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v15 = v13.withChronology(v2)::CL,18360
13654 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getAvailableIDs()::CE,13655:CD,13657:CD,13660:CD,13664
13655 :: EXIT :: exit :: Ljava/util/Set :: org.joda.time.DateTimeZone.getAvailableIDs()::
13657 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v3 = getProvider()::CL,18719
13660 :: CALL :: call :: Ljava/util/Set :: v5 = v3.getAvailableIDs()::JM,13664:CL,18760:CL,18769
13664 :: NORM :: compound :: Ljava/util/Set :: return v5::DD,13655
14897 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getID()::CE,14898:CD,14904
14898 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DateTimeZone.getID()::JM,23569:JM,23688:JM,23747:JM,25393:JM,25409:JM,25427:JM,61252
14901 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $null .iID::DD,14904
14904 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,14898
15955 :: ENTR :: entry :: null :: org.joda.time.field.DecoratedDateTimeField.get(long)::CE,15956:CD,15963:CD,15968
15956 :: EXIT :: exit :: I :: org.joda.time.field.DecoratedDateTimeField.get(long)::JM,9412
15963 :: CALL :: call :: I :: v6 = v4.get(p1 $null )::JM,15968:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
15968 :: NORM :: compound :: I :: return v6::DD,15956
15971 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.convertUTCToLocal(long)::CD,15976
15976 :: CALL :: call :: I :: v5 = p0 $null .getOffset(p1 $null )::CL,22651:CL,22661:CL,22668:CL,22544
16012 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfWeek(long)::CF,16013:CD,16017:CD,16018:JM,16019:JM,16021
16013 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDayOfWeek(long)::JM,9457:JM,31986:JM,31980:JM,31981
16017 :: EXPR :: assign :: Z :: v5 = p1 $null  == #(0 l)::DD,16018
16018 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 19::CD,16019:CD,16021:CD,16022:CD,16023:CD,16024:CD,16030:CD,16031:CD,16032:CD,16033:CD,16034:CD,16035
16019 :: EXPR :: assign :: Ljava/lang/Object :: v20 = p1 $null  / #(86400000 l)::DD,16035
16021 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $null  - #(86399999 l)::DD,16022
16022 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 / #(86400000 l)::DD,16023:DD,16025:DD,16035
16023 :: EXPR :: assign :: Z :: v12 = v10 == #(-3 l)::DD,16024
16024 :: PRED :: IF :: Z :: if (v12 >= #(0)) goto 52::CF,16035:CD,16025:CD,16026:CD,16027:CD,16028:CD,16029:CD,16030:CD,16031:CD,16032:CD,16033:CD,16034
16025 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v10 + #(4 l)::DD,16026
16026 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 % #(7 l)::CF,16027
16027 :: EXPR :: assign :: I :: v18 = CONVERT J to I v17::CF,16028
16028 :: EXPR :: assign :: Ljava/lang/Object :: v19 = #(7) + v18::CF,16029
16029 :: NORM :: compound :: I :: return v19::CF,16013
16030 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v21 + #(3 l)::DD,16031
16031 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v24 % #(7 l)::CF,16032
16032 :: EXPR :: assign :: I :: v26 = CONVERT J to I v25::CF,16033
16033 :: EXPR :: assign :: Ljava/lang/Object :: v27 = #(1) + v26::CF,16034
16034 :: NORM :: compound :: I :: return v27::CF,16013
16035 :: EXPR :: assign :: null :: PHI v21 = v20, v10::DD,16030
16056 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getMonthOfYear(long)::CE,16057:CD,16061:CD,16066:CD,16072
16057 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getMonthOfYear(long)::JM,9473
16061 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::CL,16221
16066 :: CALL :: call :: I :: v7 = p0 $null .getMonthOfYear(p1 $null , v5)::JM,16072:CL,24016
16072 :: NORM :: compound :: I :: return v7::DD,16057
16077 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getWeekyear(long)::CE,16078:CD,16082:CD,16087:CD,16093
16078 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getWeekyear(long)::JM,9505
16082 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::JM,16109:CL,16221
16087 :: CALL :: call :: I :: v7 = p0 $null .getWeekOfWeekyear(p1 $null , v5)::JM,16101:JM,16093:CL,24159
16093 :: PRED :: IF :: Z :: if (v7 != #(1)) goto 34::CD,16095:CD,16100:CD,16101
16095 :: CALL :: call :: I :: v17 = p0 $null .getYear(v15)::JM,16100:CL,16221
16100 :: NORM :: compound :: I :: return v17::DD,16078
16101 :: PRED :: IF :: Z :: if (v7 <= #(51)) goto 48::CD,16103:CD,16108:CD,16109
16103 :: CALL :: call :: I :: v13 = p0 $null .getYear(v11)::JM,16108:CL,16221
16108 :: NORM :: compound :: I :: return v13::DD,16078
16109 :: NORM :: compound :: I :: return v5::DD,16078
16137 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long)::CE,16138:CD,16146:CD,16151:CD,16154:CD,16155
16138 :: EXIT :: exit :: I :: org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long)::JM,9522:JM,9528:JM,9553:JM,9550:JM,9551:JM,9576:JM,9580:JM,9582:JM,9762:JM,9768:JM,9758:JM,15968:JM,16151:JM,16152:JM,16155
16146 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,16151:JM,16152:JM,16155:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
16151 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 19::CD,16152:CD,16155
16152 :: EXPR :: assign :: Ljava/lang/Object :: v9 = -(v7)::DD,16155
16154 :: NORM :: compound :: I :: return v10::DD,16138
16155 :: EXPR :: assign :: null :: PHI v10 = v9, v7::CF,16154
16163 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()::CE,16164:CD,16171:CD,16175:CD,16176
16164 :: EXIT :: exit :: I :: org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()::JM,9528:JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
16171 :: CALL :: call :: I :: v6 = v4.getMaximumValue()::JM,16175:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24318:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
16175 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::CF,16176
16176 :: NORM :: compound :: I :: return v8::DD,16164
16179 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long)::CE,16180:CD,16184:CD,16189:CD,16195
16180 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long)::JM,9613:JM,52106:JM,52107
16184 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::CL,16221
16189 :: CALL :: call :: I :: v7 = p0 $null .getWeekOfWeekyear(p1 $null , v5)::JM,16195:CL,24159
16195 :: NORM :: compound :: I :: return v7::DD,16180
16200 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfYear(long)::CE,16201:CD,16205:CD,16210:CD,16216
16201 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDayOfYear(long)::JM,9629
16205 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::CL,16221
16210 :: CALL :: call :: I :: v7 = p0 $null .getDayOfYear(p1 $null , v5)::JM,16216:CL,24396
16216 :: NORM :: compound :: I :: return v7::DD,16201
16221 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getYear(long)::CE,16222:CD,16226:CD,16230:CD,16231:CD,16235:CD,16236:CD,16237:CD,16240:CD,16241:CD,16242:CD,16247:CD,16248:CD,16249:CD,16265:CD,16266:CD,16268:JM,16262
16222 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getYear(long)::JM,9645:JM,9666:JM,16109:JM,16100:JM,16108
16226 :: CALL :: call :: J :: v5 = p0 $null .getAverageMillisPerYearDividedByTwo()::JM,16240:JM,16238:CL,24419
16230 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $null  ? #(1)::DD,16235
16231 :: CALL :: call :: J :: v9 = p0 $null .getApproxMillisAtEpochDividedByTwo()::JM,16235:CL,24425
16235 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::DD,16236:DD,16238:DD,16266
16236 :: EXPR :: assign :: Z :: v12 = v10 == #(0 l)::DD,16237
16237 :: PRED :: IF :: Z :: if (v12 >= #(0)) goto 33::CF,16266:CD,16238:CD,16239
16238 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v10 - v5::DD,16239
16239 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 + #(1 l)::DD,16266
16240 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 / v5::CF,16241
16241 :: EXPR :: assign :: I :: v19 = CONVERT J to I v18::DD,16250:DD,16264:DD,16268
16242 :: CALL :: call :: J :: v21 = p0 $null .getYearMillis(v19)::JM,16261:JM,16247:CL,24431
16247 :: EXPR :: assign :: Ljava/lang/Object :: v22 = p1 $null  - v21::DD,16248:DD,16252
16248 :: EXPR :: assign :: Z :: v23 = v22 == #(0 l)::DD,16249
16249 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 69::CD,16250:CD,16252:CD,16253:CD,16268
16250 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v19 + #(-1)::DD,16268
16252 :: EXPR :: assign :: Z :: v25 = v22 == #(31536000000 l)::DD,16253
16253 :: PRED :: IF :: Z :: if (v25 < #(0)) goto 114::CF,16268:CD,16254:CD,16259:CD,16261:CD,16262:CD,16263:CD,16267
16254 :: CALL :: call :: Z :: v27 = p0 $null .isLeapYear(v19)::JM,16259:CL,24447
16259 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 99::CD,16267
16261 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v21 + v29::DD,16262
16262 :: EXPR :: assign :: Z :: v31 = v30 == p1 $null ::DD,16263
16263 :: PRED :: IF :: Z :: if (v31 > #(0)) goto 114::CF,16268:CD,16264
16264 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v19 + #(1)::DD,16268
16265 :: NORM :: compound :: I :: return v35::DD,16222
16266 :: EXPR :: assign :: null :: PHI v17 = v10, v16::DD,16240
16267 :: EXPR :: assign :: null :: PHI v29 = #(31622400000 l), #(31536000000 l)::DD,16261
16268 :: EXPR :: assign :: null :: PHI v35 = v34, v19, v19, v32::CF,16265
16314 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()::CE,16315:CD,16321
16315 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()::JM,9680:JM,9697:JM,10002
16318 :: EXPR :: reference :: J :: v3 = p0 $null .iUnitMillis::DD,16321
16321 :: NORM :: compound :: J :: return v3::CF,16315
16323 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.unsupported()::CD,16328:CD,16335:CD,16340:CD,16345
16328 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
16335 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v4.append(v6)::
16340 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( field is unsupported))::
16345 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
16358 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfMonth(long)::CE,16359:CD,16363:CD,16368:CD,16374:CD,16381
16359 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDayOfMonth(long)::JM,9741
16363 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::CL,16221
16368 :: CALL :: call :: I :: v7 = p0 $null .getMonthOfYear(p1 $null , v5)::CL,24016
16374 :: CALL :: call :: I :: v9 = p0 $null .getDayOfMonth(p1 $null , v5, v7)::JM,16381:CL,24472
16381 :: NORM :: compound :: I :: return v9::DD,16359
16402 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iBase = p1 $null ::
16405 :: EXPR :: modify :: Ljava/lang/Object :: p0 $null .iParam = p2 $null ::
16408 :: CALL :: call :: V :: p0 $null .setFields()::CL,24517
16611 :: CALL :: call :: Lorg/joda/time/PeriodType :: v8 = p0 $null .checkPeriodType(p2 $null )::JM,16620:CL,25464
16616 :: CALL :: call :: Lorg/joda/time/Chronology :: v10 = getChronology(p3 $null )::CL,25475
16620 :: EXPR :: modify :: Lorg/joda/time/PeriodType :: p0 $null .iType = v8::
16623 :: CALL :: call :: [I :: v12 = v10.get(p0 $null , p1 $null )::JM,16629:CL,25488
16629 :: EXPR :: modify :: [I :: p0 $null .iValues = v12::
16663 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v6 = new java.lang.IllegalArgumentException::JM,16663:JM,16669
16669 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iID = p1 $null ::
16678 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)::CD,16683:CD,16689:CD,16694:CD,16695:CD,16707:CD,16714:CD,16718:CD,16723:CD,16728:CD,16737:CD,16787:CD,16788:JM,16739:JM,16775
16683 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 8::CF,16787:CD,16684
16684 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = getDefault()::JM,16787:CL,25571
16689 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(v7)::JM,16694
16694 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,16695:DD,16788
16695 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 53::CF,16788:CD,16696:CD,16699:CD,16705:CD,16706
16696 :: NORM :: declaration :: [Lorg/joda/time/chrono/GregorianChronology :: v13 = new org.joda.time.chrono.GregorianChronology[]::DD,16788
16699 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.putIfAbsent(v7, v13)::JM,16705
16705 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,16706:DD,16788
16706 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 53::CF,16788
16707 :: EXPR :: assign :: Ljava/lang/Object :: v20 = p2 $null  - #(1)::
16708 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v18[v20]::DD,16737
16714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
16718 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(#(Invalid min days in f...))::
16723 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(p2 $null )::JM,16739:JM,16775
16728 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
16737 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 172::CD,16739:CD,16744
16739 :: EXPR :: assign :: Ljava/lang/Object :: v34 = p2 $null  - #(1)::
16740 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v18[v34]::DD,16744
16744 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 159::CD,16745:CD,16747:CD,16775:CD,16789
16745 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v36 = org.joda.time.DateTimeZone.UTC::CF,16747
16747 :: PRED :: IF :: Z :: if (v7 != v36) goto 128::CF,16748:JM,16402:JM,43011:JM,42997:JM,16405:JM,16408:JM,43001:JM,43020:JM,42990:JM,43006:CD,16758:CD,16763:CD,16764:CD,16789
16748 :: NORM :: declaration :: Lorg/joda/time/chrono/GregorianChronology :: v44 = new org.joda.time.chrono.GregorianChronology::DD,16789
16758 :: CALL :: call :: Lorg/joda/time/chrono/GregorianChronology :: v39 = getInstance(v37, p2 $null )::CL,16678
16763 :: NORM :: declaration :: Lorg/joda/time/chrono/GregorianChronology :: v40 = new org.joda.time.chrono.GregorianChronology::DD,16789
16764 :: CALL :: call :: Lorg/joda/time/chrono/ZonedChronology :: v42 = getInstance(v39, v7)::CL,25733
16775 :: EXPR :: assign :: Ljava/lang/Object :: v47 = p2 $null  - #(1)::
16776 :: EXPR :: modify :: Ljava/lang/Object :: v18[v47] = v46::
16787 :: EXPR :: assign :: null :: PHI v7 = p1 $null , v6::DD,16747
16788 :: EXPR :: assign :: null :: PHI v18 = v11, v13, v17::CF,16707
16789 :: EXPR :: assign :: null :: PHI v46 = v44, v40::DD,16776:CF,16775
16850 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v6 = new java.lang.IllegalArgumentException::JM,16850:JM,16856
16856 :: EXPR :: modify :: Lorg/joda/time/DurationFieldType :: p0 $null .iType = p1 $null ::
16880 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::JM,25796:JM,16904:JM,25790
16886 :: CALL :: call :: J :: v10 = p2 $null .getUnitMillis()::JM,16890:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
16890 :: EXPR :: modify :: J :: p0 $null .iUnitMillis = v10::
16898 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::JM,25796:JM,16904:JM,25790
16904 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iUnitField = p2 $null ::
16919 :: ENTR :: entry :: null :: org.joda.time.field.DecoratedDurationField.isPrecise()::CE,16920:CD,16926:CD,16930
16920 :: EXIT :: exit :: Z :: org.joda.time.field.DecoratedDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16926 :: CALL :: call :: Z :: v5 = v3.isPrecise()::JM,16930:CL,16919:CL,16982:CL,16988:CL,16976:CL,16932:CL,16994
16930 :: NORM :: compound :: Z :: return v5::DD,16920
16932 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.isPrecise()::CE,16933:CD,16939:CD,16965:CD,16966
16933 :: EXIT :: exit :: Z :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16936 :: EXPR :: reference :: Z :: v3 = p0 $null .iTimeField::DD,16939
16939 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 18::CD,16943:CD,16951:CD,16955:CD,16966
16943 :: CALL :: call :: Z :: v14 = v12.isPrecise()::JM,16966:CL,16919:CL,16982:CL,16988:CL,16976:CL,16932:CL,16994
16951 :: CALL :: call :: Z :: v7 = v5.isPrecise()::JM,16955:CL,16919:CL,16982:CL,16988:CL,16976:CL,16932:CL,16994
16955 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 42::CD,16959:CD,16963:CD,16966
16959 :: CALL :: call :: Z :: v10 = v8.isFixed()::JM,16963:CL,25818:CL,25824:CL,25805:CL,25830
16963 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 42::CD,16966
16965 :: NORM :: compound :: Z :: return v15::DD,16933
16966 :: EXPR :: assign :: null :: PHI v15 = v14, #(1), #(0)::CF,16965
16976 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.isPrecise()::CF,16977:CD,16980
16977 :: EXIT :: exit :: Z :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16980 :: NORM :: compound :: Z :: return #(0)::CF,16977
16982 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.isPrecise()::CF,16983:CD,16986
16983 :: EXIT :: exit :: Z :: org.joda.time.field.PreciseDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16986 :: NORM :: compound :: Z :: return #(1)::CF,16983
16988 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.isPrecise()::CF,16989:CD,16992
16989 :: EXIT :: exit :: Z :: org.joda.time.field.MillisDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16992 :: NORM :: compound :: Z :: return #(1)::CF,16989
16994 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.isPrecise()::CF,16995:CD,16998
16995 :: EXIT :: exit :: Z :: org.joda.time.field.UnsupportedDurationField.isPrecise()::JM,16930:JM,16966:JM,16955:JM,25516
16998 :: NORM :: compound :: Z :: return #(1)::CF,16995
17000 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.getUnitMillis()::CE,17001:CD,17007
17001 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17004 :: EXPR :: reference :: J :: v3 = p0 $null .iUnitMillis::DD,17007
17007 :: NORM :: compound :: J :: return v3::CF,17001
17009 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.getUnitMillis()::CF,17010:CD,17013
17010 :: EXIT :: exit :: J :: org.joda.time.field.MillisDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,18868:JM,19431:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17013 :: NORM :: compound :: J :: return #(1 l)::CF,17010
17015 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.getUnitMillis()::CE,17016:CD,17023:CD,17030:CD,17031:CD,17032
17016 :: EXIT :: exit :: J :: org.joda.time.field.ScaledDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17023 :: CALL :: call :: J :: v6 = v4.getUnitMillis()::JM,17031:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
17027 :: EXPR :: reference :: I :: v7 = p0 $null .iScalar::DD,17030
17030 :: EXPR :: assign :: J :: v8 = CONVERT I to J v7::CF,17031
17031 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 * v8::CF,17032
17032 :: NORM :: compound :: J :: return v9::CF,17016
17035 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getUnitMillis()::CE,17036:CD,17042:CD,17046
17036 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17042 :: CALL :: call :: J :: v5 = v3.getUnitMillis()::JM,17046:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
17046 :: NORM :: compound :: J :: return v5::CF,17036
17048 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.getUnitMillis()::CF,17049:CD,17052
17049 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17052 :: NORM :: compound :: J :: return #(0 l)::CF,17049
17054 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.getUnitMillis()::CE,17055:CD,17064
17055 :: EXIT :: exit :: J :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.getUnitMillis()::JM,10002:JM,16890:JM,17031:JM,17046:JM,44167:JM,44170:JM,44200:JM,44203:JM,45261:JM,54495:JM,63494:JM,63496:JM,63503
17058 :: EXPR :: reference :: Lorg/joda/time/field/ImpreciseDateTimeField :: v3 = p0 $null .this$0::
17061 :: EXPR :: reference :: J :: v4 = v3.iUnitMillis::DD,17064
17064 :: NORM :: compound :: J :: return v4::CF,17055
17077 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v13 = new java.lang.IllegalArgumentException::JM,25796:JM,17094:JM,25790
17088 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::JM,25796:JM,17094:JM,25790
17094 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iField = p1 $null ::
17106 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()::CF,17107:CD,17110
17107 :: EXIT :: exit :: I :: org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
17110 :: NORM :: compound :: I :: return #(0)::CF,17107
17141 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iName = p1 $null ::
17165 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iName = p1 $null ::
17179 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
17190 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendYear(int,int)::CD,17199
17199 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendSignedDecimal(v6, p1 $null , p2 $null )::CL,25877
17210 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.toFormatter()::CD,17214:JM,26086:JM,26089:CD,17241
17214 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $null .getFormatter()::CL,25950
17241 :: NORM :: declaration :: Ljava/lang/UnsupportedOperationException :: v15 = new java.lang.UnsupportedOperationException::
17270 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(char)::JM,26136:CD,17280
17280 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v7 = p0 $null .append0(v4)::CL,26143
17289 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(int)::CD,17297
17297 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17308 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(int)::CD,17316
17316 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17327 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(int,int)::CD,17336
17336 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendSignedDecimal(v6, p1 $null , p2 $null )::CL,25877
17347 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(java.lang.String)::CD,17353:CD,17359:CD,17363
17353 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::
17359 :: CALL :: call :: I :: v6 = p1 $null .length()::JM,17363
17363 :: PRED :: IF :: null :: switch v6::CD,17366:JM,26136:CD,17375:JM,26265:CD,17386
17366 :: CALL :: call :: C :: v14 = p1 $null .charAt(#(0))::JM,17363
17375 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v17 = p0 $null .append0(v11)::CL,26143
17386 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v7)::CL,26143
17403 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(int)::CD,17411
17411 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17422 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(int)::CD,17430
17430 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(1))::CL,26177
17441 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(int)::CD,17449
17449 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(3))::CL,26177
17460 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(int)::CD,17468
17468 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17479 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(int)::CD,17487
17487 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17498 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(int)::CD,17506
17506 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
17517 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(int,int)::CD,17526
17526 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendFraction(v6, p1 $null , p2 $null )::CL,26272
17537 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,boolean,int,int)::JM,26337:JM,26340:JM,26358:JM,26359:JM,26345:JM,26350:JM,26334:CD,17554
17554 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v7)::CL,26143
17567 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatter)::CD,17573:CD,17587
17573 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v11 = new java.lang.IllegalArgumentException::
17587 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v6, v8)::CL,26398
17627 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)::CD,17634:CD,17641:CD,17642:CD,17646:CD,17651:CD,17656:JM,35331:JM,43045:JM,43048:JM,43051:CD,17672
17634 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v22 = new java.lang.IllegalArgumentException::
17641 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v11 = new java.lang.IllegalArgumentException::
17642 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
17646 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(#(Illegal number of dig...))::
17651 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p2 $null )::
17656 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
17672 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v7)::CL,26143
17715 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.getParser()::CD,17722
17722 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v5 = of(v3)::CL,26474
17728 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeParser)::CD,17733:CD,17737:CD,17738:JM,26560:JM,26561:JM,26577:JM,26578:JM,26556:JM,26559:CD,17755
17733 :: CALL :: call :: V :: p0 $null .checkParser(p1 $null )::CL,26509
17737 :: NORM :: declaration :: [Lorg/joda/time/format/InternalParser :: v6 = new org.joda.time.format.InternalParser[]::
17738 :: CALL :: call :: Lorg/joda/time/format/InternalParser :: v9 = of(p1 $null )::JM,17742:CL,26524
17742 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v9::
17746 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = #(null)::
17755 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v15 = p0 $null .append0(#(null), v12)::CL,26398
17776 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.toParser()::CD,17780:CD,17791:CD,17796
17780 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $null .getFormatter()::CL,25950
17791 :: CALL :: call :: Lorg/joda/time/format/DateTimeParser :: v13 = of(v11)::CL,26474
17796 :: NORM :: declaration :: Ljava/lang/UnsupportedOperationException :: v8 = new java.lang.UnsupportedOperationException::
17810 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])::CD,17816:CD,17822:CD,17828:CD,17829:CD,17835:CD,17876
17816 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 10::CD,17817
17817 :: CALL :: call :: V :: p0 $null .checkPrinter(p1 $null )::CL,26604
17822 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v40 = new java.lang.IllegalArgumentException::
17828 :: EXPR :: assign :: I :: v7 = p2 $null .length::DD,17829:DD,17860:DD,17861
17829 :: PRED :: IF :: Z :: if (v7 != #(1)) goto 63::CD,17841:CD,17849:CD,17853:CD,17860:CD,17861:CD,17862:CD,17888:CD,17896:JM,26560:JM,26561:JM,26577:JM,26578:JM,26556:JM,26559:CD,17905:CD,17912
17835 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v37 = new java.lang.IllegalArgumentException::
17841 :: CALL :: call :: Lorg/joda/time/format/InternalPrinter :: v31 = of(p1 $null )::CL,26619
17849 :: CALL :: call :: Lorg/joda/time/format/InternalParser :: v34 = of(v32)::CL,26524
17853 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v36 = p0 $null .append0(v31, v34)::CL,26398
17860 :: NORM :: declaration :: [Lorg/joda/time/format/InternalParser :: v9 = new org.joda.time.format.InternalParser[]::CF,17912
17861 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v7 - #(1)::CF,17862
17862 :: PRED :: IF :: Z :: if (v16 >= v11) goto 118::CD,17861:CD,17867:CD,17882:CD,17912
17867 :: CALL :: call :: Lorg/joda/time/format/InternalParser :: v14 = of(v12)::JM,17871:CL,26524
17871 :: EXPR :: modify :: Ljava/lang/Object :: v9[v16] = v14::
17876 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v26 = new java.lang.IllegalArgumentException::
17882 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,17912
17888 :: CALL :: call :: Lorg/joda/time/format/InternalParser :: v19 = of(v17)::JM,17892:CL,26524
17892 :: EXPR :: modify :: Ljava/lang/Object :: v9[v16] = v19::
17896 :: CALL :: call :: Lorg/joda/time/format/InternalPrinter :: v21 = of(p1 $null )::CL,26619
17905 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v25 = p0 $null .append0(v21, v22)::CL,26398
17912 :: EXPR :: assign :: null :: PHI v16 = v15, #(0)::DD,17862:DD,17882:CF,17861
17953 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeParser)::CD,17958:CD,17962:CD,17966
17958 :: CALL :: call :: V :: p0 $null .checkParser(p1 $null )::CL,26509
17962 :: CALL :: call :: Lorg/joda/time/format/InternalParser :: v7 = of(p1 $null )::CL,26524
17966 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = p0 $null .append0(#(null), v7)::CL,26398
17978 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(int,int)::CD,17987
17987 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendFraction(v6, p1 $null , p2 $null )::CL,26272
17998 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(int,int)::CD,18007
18007 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendFraction(v6, p1 $null , p2 $null )::CL,26272
18018 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.withZoneUTC()::CD,18024
18024 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v5 = p0 $null .withZone(v3)::CL,26643
18360 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)::CD,18368
18365 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v4 = p0 $null .iChrono::DD,18368
18368 :: PRED :: IF :: Z :: if (v4 != p1 $null ) goto 10::JM,27153:JM,27138:JM,27156:JM,27141:JM,27159:JM,27144:JM,27147:JM,27150
18577 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.1.run()::CE,18578:CD,18581:CD,18585
18578 :: EXIT :: exit :: Ljava/lang/Object :: org.joda.time.tz.ZoneInfoProvider.1.run()::
18581 :: CALL :: call :: Ljava/io/InputStream :: v4 = p0 $null .run()::JM,18585:CL,27288
18585 :: NORM :: compound :: Ljava/lang/Object :: return v4::DD,18578
18719 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getProvider()::CD,18722:CD,18724:CD,18728:CD,18729
18722 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v2 = org.joda.time.DateTimeZone.cProvider::JM,18724:JM,18728
18724 :: CALL :: call :: Ljava/lang/Object :: v4 = v2.get()::JM,18724:JM,18728
18728 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::DD,18729
18729 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 40::CD,18730
18730 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v8 = getDefaultProvider()::CL,27341
18760 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.getAvailableIDs()::CE,18761:CD,18767
18761 :: EXIT :: exit :: Ljava/util/Set :: org.joda.time.tz.ZoneInfoProvider.getAvailableIDs()::JM,13664
18764 :: EXPR :: reference :: Ljava/util/Set :: v3 = p0 $null .iZoneInfoKeys::DD,18767
18767 :: NORM :: compound :: Ljava/util/Set :: return v3::CF,18761
18769 :: ENTR :: entry :: null :: org.joda.time.tz.UTCProvider.getAvailableIDs()::CF,18770:CD,18773:CD,18775
18770 :: EXIT :: exit :: Ljava/util/Set :: org.joda.time.tz.UTCProvider.getAvailableIDs()::JM,13664
18773 :: EXPR :: reference :: Ljava/util/Set :: v3 = org.joda.time.tz.UTCProvider.AVAILABLE_IDS::CF,18775
18775 :: NORM :: compound :: Ljava/util/Set :: return v3::CF,18770
18802 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.StandardDurationFieldType.hashCode()::CE,18803:CD,18809:CD,18810
18803 :: EXIT :: exit :: I :: org.joda.time.DurationFieldType.StandardDurationFieldType.hashCode()::JM,18890:JM,18932
18806 :: EXPR :: reference :: B :: v4 = p0 $null .iOrdinal::DD,18809
18809 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(1) ? v4::CF,18810
18810 :: NORM :: compound :: I :: return v5::CF,18803
18813 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.hashCode()::CE,18814:CD,18817:CD,18821:CD,18825
18814 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDurationField.hashCode()::JM,18856:JM,18899
18817 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $null .getName()::JM,18825:CL,27665
18821 :: CALL :: call :: I :: v6 = v4.hashCode()::JM,18825
18825 :: NORM :: compound :: I :: return v6::CF,18814
18827 :: ENTR :: entry :: null :: org.joda.time.DateTimeFieldType.StandardDateTimeFieldType.hashCode()::CE,18828:CD,18834:CD,18835
18828 :: EXIT :: exit :: I :: org.joda.time.DateTimeFieldType.StandardDateTimeFieldType.hashCode()::
18831 :: EXPR :: reference :: B :: v4 = p0 $null .iOrdinal::DD,18834
18834 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(1) ? v4::CF,18835
18835 :: NORM :: compound :: I :: return v5::CF,18828
18838 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.hashCode()::CE,18839:CD,18845:CD,18852:CD,18856:CD,18857
18839 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.hashCode()::JM,18856:JM,18899
18845 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,18856:CL,18838:CL,18860:CL,18813:CL,18914:CL,18871
18852 :: CALL :: call :: I :: v8 = v6.hashCode()::JM,18856:CL,25397:CL,25381:CL,25439:CL,25411
18856 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v5 ^ v8::CF,18857
18857 :: NORM :: compound :: I :: return v9::DD,18839
18860 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.hashCode()::CF,18861:CD,18864:CD,18868:CD,18869
18861 :: EXIT :: exit :: I :: org.joda.time.field.MillisDurationField.hashCode()::JM,18856:JM,18899
18864 :: CALL :: call :: J :: v4 = p0 $null .getUnitMillis()::JM,18868:CL,17009
18868 :: EXPR :: assign :: I :: v5 = CONVERT J to I v4::CF,18869
18869 :: NORM :: compound :: I :: return v5::CF,18861
18871 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.hashCode()::CE,18872:CD,18878:CD,18879:CD,18880:CD,18881:CD,18886:CD,18890:CD,18895:CD,18899:CD,18900
18872 :: EXIT :: exit :: I :: org.joda.time.field.ScaledDurationField.hashCode()::JM,18856:JM,18899
18875 :: EXPR :: reference :: I :: v3 = p0 $null .iScalar::DD,18878
18878 :: EXPR :: assign :: J :: v4 = CONVERT I to J v3::DD,18879:DD,18880
18879 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 ? #(32)::CF,18880
18880 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v4 ^ v6::CF,18881
18881 :: EXPR :: assign :: I :: v8 = CONVERT J to I v7::DD,18890
18886 :: CALL :: call :: I :: v12 = v10.hashCode()::JM,18890:CL,18802
18890 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v8 + v12::DD,18899
18895 :: CALL :: call :: I :: v17 = v15.hashCode()::JM,18899:CL,18838:CL,18860:CL,18813:CL,18914:CL,18871
18899 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v13 + v17::DD,18900
18900 :: NORM :: compound :: I :: return v18::DD,18872
18914 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.hashCode()::CE,18915:CD,18921:CD,18922:CD,18923:CD,18928:CD,18932:CD,18933
18915 :: EXIT :: exit :: I :: org.joda.time.field.PreciseDurationField.hashCode()::JM,18856:JM,18899
18918 :: EXPR :: reference :: J :: v3 = p0 $null .iUnitMillis::DD,18921:DD,18922
18921 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v3 ? #(32)::CF,18922
18922 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v3 ^ v5::CF,18923
18923 :: EXPR :: assign :: I :: v7 = CONVERT J to I v6::DD,18932
18928 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,18932:CL,18802
18932 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v7 + v11::DD,18933
18933 :: NORM :: compound :: I :: return v12::CF,18915
18944 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.hashCode()::CE,18945:CD,18951:CD,18958:CD,18962:CD,18963
18945 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.hashCode()::JM,18962
18951 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,18962:CL,18944
18958 :: CALL :: call :: I :: v8 = v6.hashCode()::JM,18962:CL,25397:CL,25381:CL,25439:CL,25411
18962 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v5 ^ v8::CF,18963
18963 :: NORM :: compound :: I :: return v9::DD,18945
19085 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.equals(java.lang.Object)::CE,19086:CD,19090:JM,19092:JM,19094
19086 :: EXIT :: exit :: Z :: org.joda.time.field.ScaledDurationField.equals(java.lang.Object)::JM,19108:JM,19237:JM,19249:JM,19382
19090 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19091:CD,19092:CD,19093
19091 :: NORM :: compound :: Z :: return #(1)::DD,19086
19092 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.field.ScaledDurationField::DD,19093
19093 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 62::CD,19094:CD,19103:CD,19108:CD,19126:CD,19127:CD,19128
19094 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
19103 :: CALL :: call :: Z :: v12 = v8.equals(v10)::JM,19108:CL,19146:CL,19085:CL,19276:CL,19415:CL,19361
19108 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 60::CD,19109:CD,19113:CD,19117:CD,19128
19109 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v14 = p0 $null .getType()::JM,19117:CL,27678
19113 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v16 = v6.getType()::JM,19117:CL,27678
19117 :: PRED :: IF :: Z :: if (v14 != v16) goto 60::CD,19124:CD,19128
19118 :: EXPR :: reference :: I :: v17 = p0 $null .iScalar::DD,19124
19121 :: EXPR :: reference :: I :: v18 = v6.iScalar::DD,19124
19124 :: PRED :: IF :: Z :: if (v17 != v18) goto 60::CD,19128
19126 :: NORM :: compound :: Z :: return v20::DD,19086
19127 :: NORM :: compound :: Z :: return #(0)::DD,19086
19128 :: EXPR :: assign :: null :: PHI v20 = #(1), #(0)::CF,19126
19146 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.equals(java.lang.Object)::CE,19147:CD,19151:JM,19153:JM,19155
19147 :: EXIT :: exit :: Z :: org.joda.time.field.PreciseDurationField.equals(java.lang.Object)::JM,19108:JM,19237:JM,19249:JM,19382
19151 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19152:CD,19153:CD,19154
19152 :: NORM :: compound :: Z :: return #(1)::CF,19147
19153 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.field.PreciseDurationField::DD,19154
19154 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 49::CD,19155:CD,19156:CD,19160:CD,19164:CD,19174:CD,19175:CD,19176
19155 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
19156 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v8 = p0 $null .getType()::JM,19164:CL,27678
19160 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v10 = v6.getType()::JM,19164:CL,27678
19164 :: PRED :: IF :: Z :: if (v8 != v10) goto 47::CD,19171:CD,19172:CD,19176
19165 :: EXPR :: reference :: J :: v11 = p0 $null .iUnitMillis::DD,19171
19168 :: EXPR :: reference :: J :: v12 = v6.iUnitMillis::DD,19171
19171 :: EXPR :: assign :: Z :: v13 = v11 == v12::DD,19172
19172 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 47::CD,19176
19174 :: NORM :: compound :: Z :: return v15::CF,19147
19175 :: NORM :: compound :: Z :: return #(0)::CF,19147
19176 :: EXPR :: assign :: null :: PHI v15 = #(1), #(0)::CF,19174
19192 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.equals(java.lang.Object)::CE,19193:CD,19197:JM,19199
19193 :: EXIT :: exit :: Z :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.equals(java.lang.Object)::JM,19213
19197 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19198:CD,19199:CD,19200
19198 :: NORM :: compound :: Z :: return #(1)::DD,19193
19199 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.chrono.ZonedChronology$ZonedDateTimeField::DD,19200
19200 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 82::CD,19208:CD,19213:CD,19251:CD,19252:CD,19253
19208 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,19213:CL,19192
19213 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 80::CD,19220:CD,19225:CD,19253
19220 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,19225:CL,23665:CL,23634:CL,23724:CL,23626
19225 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 80::CD,19232:CD,19237:CD,19253
19232 :: CALL :: call :: Z :: v18 = v15.equals(v16)::JM,19237:CL,19146:CL,19085:CL,19276:CL,19415:CL,19361
19237 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 80::CD,19244:CD,19249:CD,19253
19244 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,19249:CL,19146:CL,19085:CL,19276:CL,19415:CL,19361
19249 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 80::CD,19253
19251 :: NORM :: compound :: Z :: return v24::DD,19193
19252 :: NORM :: compound :: Z :: return #(0)::DD,19193
19253 :: EXPR :: assign :: null :: PHI v24 = #(1), #(0)::CF,19251
19276 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.equals(java.lang.Object)::CE,19277:CD,19281:JM,19283
19277 :: EXIT :: exit :: Z :: org.joda.time.field.UnsupportedDurationField.equals(java.lang.Object)::JM,19108:JM,19237:JM,19249:JM,19382
19281 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19282:CD,19283:CD,19284
19282 :: NORM :: compound :: Z :: return #(1)::CF,19277
19283 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.field.UnsupportedDurationField::DD,19284
19284 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 52::CD,19286:CD,19290:CD,19312
19286 :: CALL :: call :: Ljava/lang/String :: v8 = v6.getName()::JM,19290:CL,27665
19290 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 40::CD,19291:CD,19295:CD,19297:CD,19298:CD,19302:CD,19306:CD,19311:CD,19313
19291 :: CALL :: call :: Ljava/lang/String :: v17 = p0 $null .getName()::JM,19295:CL,27665
19295 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 38::CD,19313
19297 :: NORM :: compound :: Z :: return v19::CF,19277
19298 :: CALL :: call :: Ljava/lang/String :: v11 = v6.getName()::JM,19311:CL,27665
19302 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $null .getName()::JM,19311:CL,27665
19306 :: CALL :: call :: Z :: v15 = v11.equals(v13)::JM,19311
19311 :: NORM :: compound :: Z :: return v15::CF,19277
19312 :: NORM :: compound :: Z :: return #(0)::CF,19277
19313 :: EXPR :: assign :: null :: PHI v19 = #(1), #(0)::CF,19297
19330 :: ENTR :: entry :: null :: org.joda.time.DateTimeFieldType.StandardDateTimeFieldType.equals(java.lang.Object)::CE,19331:CD,19335:JM,19337:JM,19342
19331 :: EXIT :: exit :: Z :: org.joda.time.DateTimeFieldType.StandardDateTimeFieldType.equals(java.lang.Object)::
19335 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19336:CD,19337:CD,19338
19336 :: NORM :: compound :: Z :: return #(1)::CF,19331
19337 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.DateTimeFieldType$StandardDateTimeFieldType::DD,19338
19338 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 35::CD,19342:CD,19346:CD,19348:CD,19349:CD,19350
19339 :: EXPR :: reference :: B :: v6 = p0 $null .iOrdinal::DD,19346
19342 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST p1 $null ::
19343 :: EXPR :: reference :: B :: v8 = v7.iOrdinal::DD,19346
19346 :: PRED :: IF :: Z :: if (v6 != v8) goto 33::CD,19350
19348 :: NORM :: compound :: Z :: return v10::CF,19331
19349 :: NORM :: compound :: Z :: return #(0)::CF,19331
19350 :: EXPR :: assign :: null :: PHI v10 = #(1), #(0)::CF,19348
19361 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.equals(java.lang.Object)::CE,19362:CD,19366:JM,19368
19362 :: EXIT :: exit :: Z :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.equals(java.lang.Object)::JM,19108:JM,19237:JM,19249:JM,19382
19366 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19367:CD,19368:CD,19369
19367 :: NORM :: compound :: Z :: return #(1)::DD,19362
19368 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.chrono.ZonedChronology$ZonedDurationField::DD,19369
19369 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 54::CD,19377:CD,19382:CD,19396:CD,19397:CD,19398
19377 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,19382:CL,19146:CL,19085:CL,19276:CL,19415:CL,19361
19382 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 52::CD,19389:CD,19394:CD,19398
19389 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,19394:CL,23665:CL,23634:CL,23724:CL,23626
19394 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 52::CD,19398
19396 :: NORM :: compound :: Z :: return v16::DD,19362
19397 :: NORM :: compound :: Z :: return #(0)::DD,19362
19398 :: EXPR :: assign :: null :: PHI v16 = #(1), #(0)::CF,19396
19415 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.equals(java.lang.Object)::CF,19416:CD,19420:CD,19421
19416 :: EXIT :: exit :: Z :: org.joda.time.field.MillisDurationField.equals(java.lang.Object)::JM,19108:JM,19237:JM,19249:JM,19382
19420 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.field.MillisDurationField::DD,19421
19421 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 29::CD,19422:CD,19427:CD,19431:CD,19432:CD,19434:CD,19435:CD,19436
19422 :: CALL :: call :: J :: v7 = p0 $null .getUnitMillis()::JM,19431:CL,17009
19427 :: CALL :: call :: J :: v10 = v8.getUnitMillis()::JM,19431:CL,17009
19431 :: EXPR :: assign :: Z :: v11 = v7 == v10::DD,19432
19432 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,19436
19434 :: NORM :: compound :: Z :: return v13::CF,19416
19435 :: NORM :: compound :: Z :: return #(0)::CF,19416
19436 :: EXPR :: assign :: null :: PHI v13 = #(1), #(0)::CF,19434
19445 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.StandardDurationFieldType.equals(java.lang.Object)::CE,19446:CD,19450:JM,19457:JM,19452
19446 :: EXIT :: exit :: Z :: org.joda.time.DurationFieldType.StandardDurationFieldType.equals(java.lang.Object)::
19450 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,19451:CD,19452:CD,19453
19451 :: NORM :: compound :: Z :: return #(1)::CF,19446
19452 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.DurationFieldType$StandardDurationFieldType::DD,19453
19453 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 35::CD,19457:CD,19461:CD,19463:CD,19464:CD,19465
19454 :: EXPR :: reference :: B :: v6 = p0 $null .iOrdinal::DD,19461
19457 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST p1 $null ::
19458 :: EXPR :: reference :: B :: v8 = v7.iOrdinal::DD,19461
19461 :: PRED :: IF :: Z :: if (v6 != v8) goto 33::CD,19465
19463 :: NORM :: compound :: Z :: return v10::CF,19446
19464 :: NORM :: compound :: Z :: return #(0)::CF,19446
19465 :: EXPR :: assign :: null :: PHI v10 = #(1), #(0)::CF,19463
21636 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone)::CE,21637:CD,21640:CD,21641:JM,21642
21637 :: EXIT :: exit :: Lorg/joda/time/tz/CachedDateTimeZone :: org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone)::JM,31733
21640 :: EXPR :: assign :: Z :: v3=p1 $null  INSTANCEOF org.joda.time.tz.CachedDateTimeZone::DD,21641
21641 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 12::CF,21644:CD,21642:CD,21643:JM,29636:JM,29638:JM,29639:JM,16663:JM,29643:JM,16669:CD,21649
21642 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST p1 $null ::CF,21643
21643 :: NORM :: compound :: Lorg/joda/time/tz/CachedDateTimeZone :: return v7::DD,21637
21644 :: NORM :: declaration :: Lorg/joda/time/tz/CachedDateTimeZone :: v5 = new org.joda.time.tz.CachedDateTimeZone::DD,21649
21649 :: NORM :: compound :: Lorg/joda/time/tz/CachedDateTimeZone :: return v5::DD,21637
21655 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.set(long,int)::CE,21656:CD,21675:CD,21684:CD,21690
21656 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,38729:JM,44312:JM,60266
21675 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v7, v10)::CL,29666
21684 :: CALL :: call :: J :: v14 = v12.setYear(p1 $null , p2 $null )::JM,21690:CL,29705
21690 :: NORM :: compound :: J :: return v14::DD,21656
21698 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.set(long,int)::CE,21699:CD,21710:CD,21720:CD,21725:CD,21739:CD,21745
21699 :: EXIT :: exit :: J :: org.joda.time.field.DividedDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266:JM,63283
21710 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v5, v6)::CL,29666
21720 :: CALL :: call :: I :: v11 = v9.get(p1 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
21725 :: CALL :: call :: I :: v13 = p0 $null .getRemainder(v11)::CL,29795
21739 :: CALL :: call :: J :: v20 = v15.set(p1 $null , v18)::JM,21745:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,29826:CL,22306:CL,22490:CL,21805
21745 :: NORM :: compound :: J :: return v20::DD,21699
21759 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)::CE,21760:CD,21765:CD,21769:CD,21778:CD,21785:CD,21791
21760 :: EXIT :: exit :: J :: org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
21765 :: CALL :: call :: I :: v7 = p0 $null .getMaximumValue()::CL,24266
21769 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(1), v7)::CL,29666
21778 :: CALL :: call :: I :: v11 = v9.getYear(p1 $null )::CL,16221
21785 :: CALL :: call :: J :: v16 = p0 $null .set(p1 $null , v14)::JM,21791:CL,29872
21791 :: NORM :: compound :: J :: return v16::DD,21760
21805 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDateTimeField.set(long,int)::CE,21806:CD,21819:CD,21825:CD,21830:CD,21831:CD,21835:CD,21836:CD,21837
21806 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44288:JM,44312:JM,60266
21819 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v6, v8)::CL,29666
21825 :: CALL :: call :: I :: v11 = p0 $null .get(p1 $null )::JM,21830:CL,9669
21830 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p2 $null  - v11::CF,21831
21831 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::DD,21835
21832 :: EXPR :: reference :: J :: v14 = p0 $null .iUnitMillis::DD,21835
21835 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 * v14::CF,21836
21836 :: EXPR :: assign :: Ljava/lang/Object :: v16 = p1 $null  + v15::CF,21837
21837 :: NORM :: compound :: J :: return v16::DD,21806
21847 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.set(long,int)::CE,21848:CD,21859:CD,21869:CD,21875
21848 :: EXIT :: exit :: J :: org.joda.time.field.OffsetDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
21859 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v5, v6)::CL,29666
21869 :: CALL :: call :: J :: v11 = p0 $null .set(p1 $null , v9)::JM,21875:CL,29872
21875 :: NORM :: compound :: J :: return v11::DD,21848
21884 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.set(long,int)::CE,21885:CD,21890
21885 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,60266
21890 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,16323
21895 :: ENTR :: entry :: null :: org.joda.time.field.LenientDateTimeField.set(long,int)::CE,21896:CD,21908:CD,21914:CD,21936:CD,21941:CD,21954:CD,21961
21896 :: EXIT :: exit :: J :: org.joda.time.field.LenientDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,60266
21908 :: CALL :: call :: J :: v9 = v7.convertUTCToLocal(p1 $null )::CL,15971
21914 :: CALL :: call :: I :: v12 = p0 $null .get(p1 $null )::CL,9476
21936 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v22 = v17.getField(v20)::CL,30026
21941 :: CALL :: call :: J :: v24 = v22.add(v9, v15)::CL,30689:CL,30444:CL,30663:CL,30624:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
21954 :: CALL :: call :: J :: v30 = v27.convertLocalToUTC(v24, #(0), p1 $null )::JM,21961:CL,30729
21961 :: NORM :: compound :: J :: return v30::DD,21896
21978 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.set(long,int)::CE,21979:CD,21988:CD,21998:CD,22017:CD,22023
21979 :: EXIT :: exit :: J :: org.joda.time.field.RemainderDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
21988 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(0), v8)::CL,29666
21998 :: CALL :: call :: I :: v13 = v11.get(p1 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
22017 :: CALL :: call :: J :: v22 = v17.set(p1 $null , v20)::JM,22023:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,29826:CL,22306:CL,22490:CL,21805
22023 :: NORM :: compound :: J :: return v22::DD,21979
22038 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)::CE,22039:CD,22062:CD,22068:CD,22073:JM,22074
22039 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,38696:JM,44312:JM,60266
22062 :: CALL :: call :: V :: verifyValueBounds(p0 $null , v6, v9, v12)::CL,29666
22068 :: CALL :: call :: I :: v15 = p0 $null .get(p1 $null )::JM,22073:CL,9492
22073 :: PRED :: IF :: Z :: if (v15 != p2 $null ) goto 38::CD,22074:CD,22086:CD,22094:CD,22104:CD,22113:CD,22119:CD,22132:CD,22148:CD,22154
22074 :: NORM :: compound :: J :: return p1 $null ::DD,22039
22086 :: CALL :: call :: I :: v21 = v19.getWeeksInYear(v15)::CL,30798
22094 :: CALL :: call :: I :: v24 = v22.getWeeksInYear(p2 $null )::CL,30798
22104 :: CALL :: call :: I :: v28 = v26.getWeekOfWeekyear(p1 $null )::CL,16179
22113 :: CALL :: call :: J :: v32 = v30.setYear(p1 $null , p2 $null )::CL,29705
22119 :: CALL :: call :: I :: v34 = p0 $null .get(v32)::CL,9492
22132 :: CALL :: call :: I :: v41 = v39.getWeekOfWeekyear(v38)::CL,16179
22148 :: CALL :: call :: J :: v50 = v48.set(v45, v18)::JM,22154:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
22154 :: NORM :: compound :: J :: return v50::DD,22039
22218 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)::CE,22219:CD,22227:CD,22236:CD,22244:CD,22263:CD,22273:CD,22278:CD,22279:CD,22280
22219 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
22227 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(1), v6)::CL,29666
22236 :: CALL :: call :: I :: v10 = v8.getYear(p1 $null )::CL,16221
22244 :: CALL :: call :: I :: v13 = v11.getDayOfMonth(p1 $null , v10)::CL,30837
22263 :: CALL :: call :: J :: v20 = v18.getYearMonthDayMillis(v10, p2 $null , v17)::JM,22279:CL,30902
22273 :: CALL :: call :: I :: v23 = v21.getMillisOfDay(p1 $null )::JM,22278:CL,30938
22278 :: EXPR :: assign :: J :: v24 = CONVERT I to J v23::CF,22279
22279 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v20 + v24::CF,22280
22280 :: NORM :: compound :: J :: return v25::DD,22219
22306 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.set(long,int)::CE,22307:CD,22316:CD,22322:CD,22328:CD,22333:CD,22334:CD,22338:CD,22339:CD,22340
22307 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
22316 :: CALL :: call :: I :: v8 = p0 $null .getMaximumValueForSet(p1 $null , p2 $null )::CL,31054:CL,31040:CL,30986:CL,31020
22322 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v6, v8)::CL,29666
22328 :: CALL :: call :: I :: v11 = p0 $null .get(p1 $null )::JM,22333:CL,9669:CL,9444:CL,9728:CL,9616:CL,9600
22333 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p2 $null  - v11::CF,22334
22334 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::DD,22338
22335 :: EXPR :: reference :: J :: v14 = p0 $null .iUnitMillis::DD,22338
22338 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 * v14::CF,22339
22339 :: EXPR :: assign :: Ljava/lang/Object :: v16 = p1 $null  + v15::CF,22340
22340 :: NORM :: compound :: J :: return v16::DD,22307
22352 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)::CE,22353:CD,22358:CD,22362:CD,22373:CD,22379
22353 :: EXIT :: exit :: J :: org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
22358 :: CALL :: call :: I :: v6 = p0 $null .getMaximumValue()::CL,16163
22362 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(1), v6)::CL,29666
22373 :: CALL :: call :: J :: v14 = v12.set(p1 $null , v10)::JM,22379:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,29826:CL,22306:CL,22490:CL,21805
22379 :: NORM :: compound :: J :: return v14::DD,22353
22393 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.set(long,int)::CE,22394:CD,22402:CD,22410:CD,22419:CD,22426:JM,31079:CD,22449:JM,31121:CD,22473
22394 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,60266
22402 :: CALL :: call :: J :: v7 = v5.convertUTCToLocal(p1 $null )::CL,15971
22410 :: CALL :: call :: J :: v10 = v8.set(v7, p2 $null )::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
22419 :: CALL :: call :: J :: v14 = v11.convertLocalToUTC(v10, #(0), p1 $null )::JM,22473:CL,30729
22426 :: CALL :: call :: I :: v16 = p0 $null .get(v14)::CL,9417
22449 :: CALL :: call :: Lorg/joda/time/DateTimeFieldType :: v25 = v23.getType()::CL,29991:CL,31092:CL,31101
22473 :: NORM :: compound :: J :: return v14::DD,22394
22490 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.set(long,int)::CE,22491:CD,22496:CD,22502:CD,22507:JM,22527
22491 :: EXIT :: exit :: J :: org.joda.time.chrono.GJEraDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22154:JM,22379:JM,29887:JM,37661:JM,44312:JM,44376:JM,60266
22496 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(0), #(1))::CL,29666
22502 :: CALL :: call :: I :: v9 = p0 $null .get(p1 $null )::JM,22507:CL,9632
22507 :: PRED :: IF :: Z :: if (v9 == p2 $null ) goto 43::CD,22511:CD,22520:CD,22526:CD,22527
22511 :: CALL :: call :: I :: v12 = v10.getYear(p1 $null )::CL,16221
22520 :: CALL :: call :: J :: v16 = v13.setYear(p1 $null , v14)::JM,22526:CL,29705
22526 :: NORM :: compound :: J :: return v16::DD,22491
22527 :: NORM :: compound :: J :: return p1 $null ::DD,22491
22544 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getOffset(long)::CE,22545:CD,22552:CD,22557:JM,22566
22545 :: EXIT :: exit :: I :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getOffset(long)::JM,30741:JM,30748:JM,31347:JM,38610:JM,38837:JM,38790:JM,38780:JM,38782:JM,38801:JM,42377:JM,50370:JM,50402:JM,50355:JM,50387:JM,50389:JM,50362:JM,50363:JM,50408:JM,50381:JM,50407
22549 :: EXPR :: reference :: [J :: v4 = p0 $null .iTransitions::JM,22566:JM,22557:DD,22567
22552 :: CALL :: call :: I :: v6 = binarySearch(v4, p1 $null )::JM,22566:JM,22557
22557 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 28::CD,22565:CD,22566:CD,22567:CD,22568
22558 :: EXPR :: reference :: [I :: v23 = p0 $null .iWallOffsets::
22561 :: EXPR :: reference :: I :: v24 = v23[v6]::DD,22565
22565 :: NORM :: compound :: I :: return v24::DD,22545
22566 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 ^ #(-1)::DD,22568:DD,22569:DD,22573:DD,22587:CF,22567
22567 :: EXPR :: assign :: I :: v10 = v4.length::CF,22568
22568 :: PRED :: IF :: Z :: if (v9 >= v10) goto 56::CD,22569:CD,22583
22569 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 54::CD,22573:CD,22578:CD,22579
22570 :: EXPR :: reference :: [I :: v20 = p0 $null .iWallOffsets::
22573 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v9 - #(1)::
22574 :: EXPR :: reference :: I :: v22 = v20[v21]::DD,22578
22578 :: NORM :: compound :: I :: return v22::DD,22545
22579 :: NORM :: compound :: I :: return #(0)::DD,22545
22580 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v11 = p0 $null .iTailZone::DD,22583
22583 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 73::CD,22587:CD,22592:CD,22596:CD,22601
22584 :: EXPR :: reference :: [I :: v16 = p0 $null .iWallOffsets::
22587 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v9 - #(1)::
22588 :: EXPR :: reference :: I :: v19 = v16[v18]::DD,22592
22592 :: NORM :: compound :: I :: return v19::DD,22545
22596 :: CALL :: call :: I :: v15 = v13.getOffset(p1 $null )::JM,22601:CL,22629
22601 :: NORM :: compound :: I :: return v15::DD,22545
22629 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getOffset(long)::CE,22630:CD,22637:CD,22642:CD,22646:CD,22647
22630 :: EXIT :: exit :: I :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getOffset(long)::JM,22601
22634 :: EXPR :: reference :: I :: v4 = p0 $null .iStandardOffset::DD,22646
22637 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: v6 = p0 $null .findMatchingRecurrence(p1 $null )::CL,31188
22642 :: CALL :: call :: I :: v8 = v6.getSaveMillis()::JM,22646:CL,29532
22646 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v4 + v8::CF,22647
22647 :: NORM :: compound :: I :: return v9::DD,22630
22651 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.getOffset(long)::CE,22652:CD,22659
22652 :: EXIT :: exit :: I :: org.joda.time.tz.FixedDateTimeZone.getOffset(long)::JM,30741:JM,30748:JM,38610:JM,38837:JM,38790:JM,38780:JM,38782:JM,38801:JM,42377:JM,50370:JM,50402:JM,50355:JM,50387:JM,50389:JM,50362:JM,50363:JM,50408:JM,50381:JM,50407
22656 :: EXPR :: reference :: I :: v4 = p0 $null .iWallOffset::DD,22659
22659 :: NORM :: compound :: I :: return v4::CF,22652
22661 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.getOffset(long)::CF,22662:CD,22666
22662 :: EXIT :: exit :: I :: org.joda.time.UTCDateTimeZone.getOffset(long)::JM,30741:JM,30748:JM,38610:JM,38837:JM,38790:JM,38780:JM,38782:JM,38801:JM,42377:JM,50370:JM,50402:JM,50355:JM,50387:JM,50389:JM,50362:JM,50363:JM,50408:JM,50381:JM,50407
22666 :: NORM :: compound :: I :: return #(0)::CF,22662
22668 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.getOffset(long)::CE,22669:CD,22673:CD,22678:CD,22683
22669 :: EXIT :: exit :: I :: org.joda.time.tz.CachedDateTimeZone.getOffset(long)::JM,30741:JM,30748:JM,38610:JM,38837:JM,38790:JM,38780:JM,38782:JM,38801:JM,42377:JM,50370:JM,50402:JM,50355:JM,50387:JM,50389:JM,50362:JM,50363:JM,50408:JM,50381:JM,50407
22673 :: CALL :: call :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v5 = p0 $null .getInfo(p1 $null )::CL,31258
22678 :: CALL :: call :: I :: v7 = v5.getOffset(p1 $null )::JM,22683:CL,31315
22683 :: NORM :: compound :: I :: return v7::DD,22669
22687 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getStandardOffset(long)::CE,22688:CD,22695:CD,22700:JM,22709
22688 :: EXIT :: exit :: I :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getStandardOffset(long)::JM,31408
22692 :: EXPR :: reference :: [J :: v4 = p0 $null .iTransitions::JM,22709:JM,22700:DD,22710
22695 :: CALL :: call :: I :: v6 = binarySearch(v4, p1 $null )::JM,22709:JM,22700
22700 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 28::CD,22708:CD,22709:CD,22710:CD,22711
22701 :: EXPR :: reference :: [I :: v23 = p0 $null .iStandardOffsets::
22704 :: EXPR :: reference :: I :: v24 = v23[v6]::DD,22708
22708 :: NORM :: compound :: I :: return v24::CF,22688
22709 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 ^ #(-1)::DD,22711:DD,22712:DD,22716:DD,22730:CF,22710
22710 :: EXPR :: assign :: I :: v10 = v4.length::CF,22711
22711 :: PRED :: IF :: Z :: if (v9 >= v10) goto 56::CD,22712:CD,22726
22712 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 54::CD,22716:CD,22721:CD,22722
22713 :: EXPR :: reference :: [I :: v20 = p0 $null .iStandardOffsets::
22716 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v9 - #(1)::
22717 :: EXPR :: reference :: I :: v22 = v20[v21]::DD,22721
22721 :: NORM :: compound :: I :: return v22::CF,22688
22722 :: NORM :: compound :: I :: return #(0)::CF,22688
22723 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v11 = p0 $null .iTailZone::DD,22726
22726 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 73::CD,22730:CD,22735:CD,22739:CD,22744
22727 :: EXPR :: reference :: [I :: v16 = p0 $null .iStandardOffsets::
22730 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v9 - #(1)::
22731 :: EXPR :: reference :: I :: v19 = v16[v18]::DD,22735
22735 :: NORM :: compound :: I :: return v19::CF,22688
22739 :: CALL :: call :: I :: v15 = v13.getStandardOffset(p1 $null )::JM,22744:CL,22801
22744 :: NORM :: compound :: I :: return v15::CF,22688
22782 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.getStandardOffset(long)::CD,22787:CD,22792
22787 :: CALL :: call :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v5 = p0 $null .getInfo(p1 $null )::CL,31258
22792 :: CALL :: call :: I :: v7 = v5.getStandardOffset(p1 $null )::CL,31376
22801 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getStandardOffset(long)::CE,22802:CD,22809
22802 :: EXIT :: exit :: I :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getStandardOffset(long)::JM,22744
22806 :: EXPR :: reference :: I :: v4 = p0 $null .iStandardOffset::DD,22809
22809 :: NORM :: compound :: I :: return v4::CF,22802
22818 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getNameKey(long)::CE,22819:CD,22826:CD,22831:JM,22840
22819 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.getNameKey(long)::JM,31469:JM,63589:JM,63683
22823 :: EXPR :: reference :: [J :: v4 = p0 $null .iTransitions::JM,22840:JM,22831:DD,22841
22826 :: CALL :: call :: I :: v6 = binarySearch(v4, p1 $null )::JM,22840:JM,22831
22831 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 28::CD,22839:CD,22840:CD,22841:CD,22842
22832 :: EXPR :: reference :: [Ljava/lang/String :: v24 = p0 $null .iNameKeys::
22835 :: EXPR :: reference :: Ljava/lang/Object :: v25 = v24[v6]::DD,22839
22839 :: NORM :: compound :: Ljava/lang/String :: return v25::DD,22819
22840 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 ^ #(-1)::DD,22842:DD,22843:DD,22847:DD,22861:CF,22841
22841 :: EXPR :: assign :: I :: v10 = v4.length::CF,22842
22842 :: PRED :: IF :: Z :: if (v9 >= v10) goto 57::CD,22843:CD,22857
22843 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 55::CD,22847:CD,22852:CD,22853
22844 :: EXPR :: reference :: [Ljava/lang/String :: v21 = p0 $null .iNameKeys::
22847 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v9 - #(1)::
22848 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v21[v22]::DD,22852
22852 :: NORM :: compound :: Ljava/lang/String :: return v23::DD,22819
22853 :: NORM :: compound :: Ljava/lang/String :: return #(UTC)::DD,22819
22854 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v11 = p0 $null .iTailZone::DD,22857
22857 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 74::CD,22861:CD,22866:CD,22870:CD,22875
22858 :: EXPR :: reference :: [Ljava/lang/String :: v16 = p0 $null .iNameKeys::
22861 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v9 - #(1)::
22862 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v16[v18]::DD,22866
22866 :: NORM :: compound :: Ljava/lang/String :: return v19::DD,22819
22870 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getNameKey(p1 $null )::JM,22875:CL,22939
22875 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,22819
22903 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.getNameKey(long)::CE,22904:CD,22908:CD,22913:CD,22918
22904 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.CachedDateTimeZone.getNameKey(long)::JM,63589:JM,63683
22908 :: CALL :: call :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v5 = p0 $null .getInfo(p1 $null )::CL,31258
22913 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getNameKey(p1 $null )::JM,22918:CL,31437
22918 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,22904
22922 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.getNameKey(long)::CF,22923:CD,22927
22923 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.UTCDateTimeZone.getNameKey(long)::JM,63589:JM,63683
22927 :: NORM :: compound :: Ljava/lang/String :: return #(UTC)::CF,22923
22929 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.getNameKey(long)::CE,22930:CD,22937
22930 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.FixedDateTimeZone.getNameKey(long)::JM,63589:JM,63683
22934 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $null .iNameKey::DD,22937
22937 :: NORM :: compound :: Ljava/lang/String :: return v4::CF,22930
22939 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getNameKey(long)::CE,22940:CD,22944:CD,22949:CD,22953
22940 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.getNameKey(long)::JM,22875
22944 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: v5 = p0 $null .findMatchingRecurrence(p1 $null )::CL,31188
22949 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getNameKey()::JM,22953:CL,29523
22953 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,22940
22956 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.nextTransition(long)::CE,22957:CD,22964:CD,22969
22957 :: EXIT :: exit :: J :: org.joda.time.tz.CachedDateTimeZone.nextTransition(long)::JM,38835:JM,38792:JM,38803:JM,38836:JM,50372:JM,50409:JM,50410:JM,50383
22964 :: CALL :: call :: J :: v6 = v4.nextTransition(p1 $null )::JM,22969:CL,22986
22969 :: NORM :: compound :: J :: return v6::DD,22957
22972 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.nextTransition(long)::CF,22973:CD,22977
22973 :: EXIT :: exit :: J :: org.joda.time.tz.FixedDateTimeZone.nextTransition(long)::JM,38835:JM,38792:JM,38803:JM,38836:JM,50372:JM,50409:JM,50410:JM,50383
22977 :: NORM :: compound :: J :: return p1 $null ::CF,22973
22979 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.nextTransition(long)::CF,22980:CD,22984
22980 :: EXIT :: exit :: J :: org.joda.time.UTCDateTimeZone.nextTransition(long)::JM,38835:JM,38792:JM,38803:JM,38836:JM,50372:JM,50409:JM,50410:JM,50383
22984 :: NORM :: compound :: J :: return p1 $null ::CF,22980
22986 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.nextTransition(long)::CE,22987:CD,22994:CD,22999:CD,23003:CD,23004:CD,23032:JM,23014:JM,23000:JM,23002
22987 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.nextTransition(long)::JM,22969:JM,38835:JM,38792:JM,38803:JM,38836:JM,39255:JM,39257:JM,39274:JM,50372:JM,50409:JM,50410:JM,50383
22991 :: EXPR :: reference :: [J :: v4 = p0 $null .iTransitions::JM,22999:JM,23000:JM,23002:DD,23003
22994 :: CALL :: call :: I :: v6 = binarySearch(v4, p1 $null )::JM,22999:JM,23000:JM,23002:JM,23014
22999 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 27::CD,23000:CD,23002:CD,23032
23000 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v6 + #(1)::DD,23032
23002 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 ^ #(-1)::CF,23032
23003 :: EXPR :: assign :: I :: v13 = v4.length::CF,23004
23004 :: PRED :: IF :: Z :: if (v12 >= v13) goto 43::CD,23009:CD,23013
23005 :: EXPR :: reference :: J :: v24 = v4[v12]::DD,23009
23009 :: NORM :: compound :: J :: return v24::DD,22987
23010 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v14 = p0 $null .iTailZone::DD,23013
23013 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 53::CD,23014:CD,23026:CD,23031
23014 :: NORM :: compound :: J :: return p1 $null ::DD,22987
23026 :: CALL :: call :: J :: v23 = v21.nextTransition(v20)::JM,23031:CL,23062
23031 :: NORM :: compound :: J :: return v23::DD,22987
23032 :: EXPR :: assign :: null :: PHI v12 = v11, v9::DD,23004:CF,23003
23062 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.nextTransition(long)::CE,23063:CD,23080:CD,23087:CD,23088:CD,23097:CD,23104:CD,23105:CD,23110:CD,23111:CD,23113:CD,23118:CD,23119:CD,23120:CD,23121:CD,23122
23063 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.nextTransition(long)::JM,23031
23080 :: CALL :: call :: J :: v10 = v5.next(p1 $null , v4, v8)::JM,23089:JM,23118:CL,31498
23087 :: EXPR :: assign :: Z :: v14 = p1 $null  == #(0 l)::DD,23088
23088 :: PRED :: IF :: Z :: if (v14 <= #(0)) goto 47::CF,23118:CD,23089:CD,23090
23089 :: EXPR :: assign :: Z :: v16 = v10 == #(0 l)::DD,23090
23090 :: PRED :: IF :: Z :: if (v16 >= #(0)) goto 47::CF,23118
23097 :: CALL :: call :: J :: v23 = v6.next(p1 $null , v4, v21)::JM,23120:JM,23106:CL,31498
23104 :: EXPR :: assign :: Z :: v26 = p1 $null  == #(0 l)::DD,23105
23105 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 93::CF,23120:CD,23106:CD,23107
23106 :: EXPR :: assign :: Z :: v27 = v23 == #(0 l)::DD,23107
23107 :: PRED :: IF :: Z :: if (v27 >= #(0)) goto 93::CF,23120
23110 :: EXPR :: assign :: Z :: v31 = v19 == v30::DD,23111
23111 :: PRED :: IF :: Z :: if (v31 <= #(0)) goto 124::CD,23122
23113 :: NORM :: compound :: J :: return v32::DD,23063
23118 :: EXPR :: assign :: null :: PHI v17 = v10, v10, p1 $null ::DD,23119
23119 :: EXPR :: assign :: null :: PHI v19 = v17, p1 $null , p1 $null ::DD,23110:DD,23122
23120 :: EXPR :: assign :: null :: PHI v28 = v23, v23, p1 $null ::DD,23121
23121 :: EXPR :: assign :: null :: PHI v30 = v28, p1 $null , p1 $null ::DD,23110:DD,23122
23122 :: EXPR :: assign :: null :: PHI v32 = v30, v19::CF,23113
23173 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.previousTransition(long)::CE,23174:CD,23181:CD,23186
23174 :: EXIT :: exit :: J :: org.joda.time.tz.CachedDateTimeZone.previousTransition(long)::JM,50403:JM,50395
23181 :: CALL :: call :: J :: v6 = v4.previousTransition(p1 $null )::JM,23186:CL,23189
23186 :: NORM :: compound :: J :: return v6::DD,23174
23189 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.previousTransition(long)::CE,23190:CD,23197:CD,23202:JM,23234:JM,23203:JM,23205:JM,23221:JM,23207:JM,23208:JM,23246
23190 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.previousTransition(long)::JM,23186:JM,50403:JM,50395
23194 :: EXPR :: reference :: [J :: v4 = p0 $null .iTransitions::JM,23202:JM,23208:DD,23209
23197 :: CALL :: call :: I :: v6 = binarySearch(v4, p1 $null )::JM,23202:JM,23208:JM,23234:JM,23203:JM,23205:JM,23221:JM,23207:JM,23246
23202 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 34::CD,23203:CD,23204:CD,23208:CD,23209:CD,23210
23203 :: EXPR :: assign :: Z :: v28 = p1 $null  == #(-9223372036854775808 l)::DD,23204
23204 :: PRED :: IF :: Z :: if (v28 <= #(0)) goto 30::CD,23205:CD,23206:CD,23207
23205 :: EXPR :: assign :: Ljava/lang/Object :: v29 = p1 $null  - #(1 l)::CF,23206
23206 :: NORM :: compound :: J :: return v29::DD,23190
23207 :: NORM :: compound :: J :: return p1 $null ::DD,23190
23208 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 ^ #(-1)::DD,23210:DD,23211:DD,23212:DD,23237:CF,23209
23209 :: EXPR :: assign :: I :: v10 = v4.length::CF,23210
23210 :: PRED :: IF :: Z :: if (v9 >= v10) goto 74::CD,23211:CD,23225
23211 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 72::CD,23212:CD,23217:CD,23218:CD,23221
23212 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v9 - #(1)::
23213 :: EXPR :: reference :: J :: v25 = v4[v24]::DD,23217:DD,23219
23217 :: EXPR :: assign :: Z :: v26 = v25 == #(-9223372036854775808 l)::DD,23218
23218 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 72::CD,23219:CD,23220:CD,23221
23219 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 - #(1 l)::CF,23220
23220 :: NORM :: compound :: J :: return v27::DD,23190
23221 :: NORM :: compound :: J :: return p1 $null ::DD,23190
23222 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v11 = p0 $null .iTailZone::DD,23225
23225 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 104::CD,23229:CD,23234:CD,23235:CD,23237:CD,23242:CD,23243
23229 :: CALL :: call :: J :: v15 = v13.previousTransition(p1 $null )::JM,23234:JM,23236:CL,23303
23234 :: EXPR :: assign :: Z :: v16 = v15 == p1 $null ::DD,23235
23235 :: PRED :: IF :: Z :: if (v16 >= #(0)) goto 104::CD,23236:CD,23237:CD,23242:CD,23243
23236 :: NORM :: compound :: J :: return v15::DD,23190
23237 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v9 - #(1)::
23238 :: EXPR :: reference :: J :: v19 = v4[v18]::DD,23242:DD,23244
23242 :: EXPR :: assign :: Z :: v21 = v19 == #(-9223372036854775808 l)::DD,23243
23243 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 123::CD,23244:CD,23245:CD,23246
23244 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v19 - #(1 l)::CF,23245
23245 :: NORM :: compound :: J :: return v23::DD,23190
23246 :: NORM :: compound :: J :: return p1 $null ::DD,23190
23296 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.previousTransition(long)::CF,23297:CD,23301
23297 :: EXIT :: exit :: J :: org.joda.time.UTCDateTimeZone.previousTransition(long)::JM,50403:JM,50395
23301 :: NORM :: compound :: J :: return p1 $null ::CF,23297
23303 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.previousTransition(long)::CE,23304:CD,23308:CD,23322:CD,23329:CD,23330:CD,23339:CD,23346:CD,23347:CD,23352:CD,23353:CD,23355:CD,23356:CD,23361:CD,23362:CD,23363:CD,23364:CD,23365
23304 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.previousTransition(long)::JM,23234:JM,23236
23308 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $null  + #(1 l)::DD,23329:DD,23346:DD,23361:DD,23362:DD,23363:DD,23364
23322 :: CALL :: call :: J :: v12 = v7.previous(v5, v6, v10)::JM,23361:JM,23331:CL,31562
23329 :: EXPR :: assign :: Z :: v16 = v5 == #(0 l)::DD,23330
23330 :: PRED :: IF :: Z :: if (v16 >= #(0)) goto 51::CF,23361:CD,23331:CD,23332
23331 :: EXPR :: assign :: Z :: v18 = v12 == #(0 l)::DD,23332
23332 :: PRED :: IF :: Z :: if (v18 <= #(0)) goto 51::CF,23361
23339 :: CALL :: call :: J :: v25 = v8.previous(v5, v6, v23)::JM,23363:JM,23348:CL,31562
23346 :: EXPR :: assign :: Z :: v28 = v5 == #(0 l)::DD,23347
23347 :: PRED :: IF :: Z :: if (v28 >= #(0)) goto 97::CF,23363:CD,23348:CD,23349
23348 :: EXPR :: assign :: Z :: v29 = v25 == #(0 l)::DD,23349
23349 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 97::CF,23363
23352 :: EXPR :: assign :: Z :: v33 = v21 == v32::DD,23353
23353 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 129::CD,23365
23355 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 - #(1 l)::CF,23356
23356 :: NORM :: compound :: J :: return v35::DD,23304
23361 :: EXPR :: assign :: null :: PHI v19 = v12, v12, v5::DD,23362
23362 :: EXPR :: assign :: null :: PHI v21 = v19, v5, v5::DD,23352:DD,23365
23363 :: EXPR :: assign :: null :: PHI v30 = v25, v25, v5::DD,23364
23364 :: EXPR :: assign :: null :: PHI v32 = v30, v5, v5::DD,23352:DD,23365
23365 :: EXPR :: assign :: null :: PHI v34 = v21, v32::CF,23355
23404 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.previousTransition(long)::CF,23405:CD,23409
23405 :: EXIT :: exit :: J :: org.joda.time.tz.FixedDateTimeZone.previousTransition(long)::JM,50403:JM,50395
23409 :: NORM :: compound :: J :: return p1 $null ::CF,23405
23514 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream,java.lang.String)::CE,23515:CD,23519:CD,23520
23515 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream,java.lang.String)::JM,50517
23519 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF java.io.DataInput::DD,23520
23520 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 16::CF,23528:CD,23522:CD,23527:CD,23533:CD,23538
23522 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v12 = readFrom(v10, p2 $null )::JM,23527:CL,31681
23527 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v12::DD,23515
23528 :: NORM :: declaration :: Ljava/io/DataInputStream :: v6 = new java.io.DataInputStream::
23533 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v9 = readFrom(v6, p2 $null )::JM,23538:CL,31681
23538 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v9::DD,23515
23546 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.equals(java.lang.Object)::CE,23547:CD,23551:JM,23553:JM,23555
23547 :: EXIT :: exit :: Z :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.equals(java.lang.Object)::JM,23816
23551 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,23552:CD,23553:CD,23554
23552 :: NORM :: compound :: Z :: return #(1)::DD,23547
23553 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.DateTimeZoneBuilder$DSTZone::DD,23554
23554 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 79::CD,23555:CD,23556:CD,23560:CD,23564:CD,23569:CD,23602:CD,23603:CD,23604
23555 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
23556 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .getID()::JM,23569:CL,14897
23560 :: CALL :: call :: Ljava/lang/String :: v10 = v6.getID()::JM,23569:CL,14897
23564 :: CALL :: call :: Z :: v12 = v8.equals(v10)::JM,23569
23569 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 77::CD,23576:CD,23604
23570 :: EXPR :: reference :: I :: v13 = p0 $null .iStandardOffset::DD,23576
23573 :: EXPR :: reference :: I :: v14 = v6.iStandardOffset::DD,23576
23576 :: PRED :: IF :: Z :: if (v13 != v14) goto 77::CD,23583:CD,23588:CD,23604
23583 :: CALL :: call :: Z :: v18 = v15.equals(v16)::JM,23588:CL,31762
23588 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 77::CD,23595:CD,23600:CD,23604
23595 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,23600:CL,31762
23600 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 77::CD,23604
23602 :: NORM :: compound :: Z :: return v24::DD,23547
23603 :: NORM :: compound :: Z :: return #(0)::DD,23547
23604 :: EXPR :: assign :: null :: PHI v24 = #(1), #(0)::CF,23602
23626 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.equals(java.lang.Object)::CF,23627:CD,23631:CD,23632
23627 :: EXIT :: exit :: Z :: org.joda.time.UTCDateTimeZone.equals(java.lang.Object)::JM,19225:JM,19394
23631 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.UTCDateTimeZone::CF,23632
23632 :: NORM :: compound :: Z :: return v4::CF,23627
23634 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.equals(java.lang.Object)::CE,23635:CD,23639:JM,23641
23635 :: EXIT :: exit :: Z :: org.joda.time.tz.CachedDateTimeZone.equals(java.lang.Object)::JM,19225:JM,19394
23639 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,23640:CD,23641:CD,23642
23640 :: NORM :: compound :: Z :: return #(1)::DD,23635
23641 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.CachedDateTimeZone::DD,23642
23642 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 30::CD,23650:CD,23655:CD,23656
23650 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,23655:CL,23724
23655 :: NORM :: compound :: Z :: return v10::DD,23635
23656 :: NORM :: compound :: Z :: return #(0)::DD,23635
23665 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)::CE,23666:CD,23670:JM,23672:JM,23674
23666 :: EXIT :: exit :: Z :: org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)::JM,19225:JM,19394:JM,31720
23670 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,23671:CD,23672:CD,23673
23671 :: NORM :: compound :: Z :: return #(1)::CF,23666
23672 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.FixedDateTimeZone::DD,23673
23673 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 62::CD,23674:CD,23675:CD,23679:CD,23683:CD,23688:CD,23704:CD,23705:CD,23706
23674 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
23675 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .getID()::JM,23688:CL,14897
23679 :: CALL :: call :: Ljava/lang/String :: v10 = v6.getID()::JM,23688:CL,14897
23683 :: CALL :: call :: Z :: v12 = v8.equals(v10)::JM,23688
23688 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 60::CD,23695:CD,23706
23689 :: EXPR :: reference :: I :: v13 = p0 $null .iStandardOffset::DD,23695
23692 :: EXPR :: reference :: I :: v14 = v6.iStandardOffset::DD,23695
23695 :: PRED :: IF :: Z :: if (v13 != v14) goto 60::CD,23702:CD,23706
23696 :: EXPR :: reference :: I :: v15 = p0 $null .iWallOffset::DD,23702
23699 :: EXPR :: reference :: I :: v16 = v6.iWallOffset::DD,23702
23702 :: PRED :: IF :: Z :: if (v15 != v16) goto 60::CD,23706
23704 :: NORM :: compound :: Z :: return v18::CF,23666
23705 :: NORM :: compound :: Z :: return #(0)::CF,23666
23706 :: EXPR :: assign :: null :: PHI v18 = #(1), #(0)::CF,23704
23724 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.equals(java.lang.Object)::CE,23725:CD,23729:JM,23731:JM,23733
23725 :: EXIT :: exit :: Z :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.equals(java.lang.Object)::JM,19225:JM,19394:JM,23655
23729 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,23730:CD,23731:CD,23732
23730 :: NORM :: compound :: Z :: return #(1)::DD,23725
23731 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone::DD,23732
23732 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 128::CD,23733:CD,23734:CD,23738:CD,23742:CD,23747:CD,23818:CD,23819:CD,23820
23733 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
23734 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .getID()::JM,23747:CL,14897
23738 :: CALL :: call :: Ljava/lang/String :: v10 = v6.getID()::JM,23747:CL,14897
23742 :: CALL :: call :: Z :: v12 = v8.equals(v10)::JM,23747
23747 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 126::CD,23754:CD,23759:CD,23820
23748 :: EXPR :: reference :: [J :: v13 = p0 $null .iTransitions::JM,23759
23751 :: EXPR :: reference :: [J :: v14 = v6.iTransitions::JM,23759
23754 :: CALL :: call :: Z :: v16 = equals(v13, v14)::JM,23759
23759 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 126::CD,23766:CD,23771:CD,23820
23760 :: EXPR :: reference :: [Ljava/lang/String :: v17 = p0 $null .iNameKeys::JM,23771
23763 :: EXPR :: reference :: [Ljava/lang/String :: v18 = v6.iNameKeys::JM,23771
23766 :: CALL :: call :: Z :: v20 = equals(v17, v18)::JM,23771
23771 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 126::CD,23778:CD,23783:CD,23820
23772 :: EXPR :: reference :: [I :: v21 = p0 $null .iWallOffsets::JM,23783
23775 :: EXPR :: reference :: [I :: v22 = v6.iWallOffsets::JM,23783
23778 :: CALL :: call :: Z :: v24 = equals(v21, v22)::JM,23783
23783 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 126::CD,23790:CD,23795:CD,23820
23784 :: EXPR :: reference :: [I :: v25 = p0 $null .iStandardOffsets::JM,23795
23787 :: EXPR :: reference :: [I :: v26 = v6.iStandardOffsets::JM,23795
23790 :: CALL :: call :: Z :: v28 = equals(v25, v26)::JM,23795
23795 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 126::CD,23799:CD,23820
23796 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v29 = p0 $null .iTailZone::DD,23799
23799 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 108::CD,23803:CD,23811:CD,23816
23800 :: EXPR :: reference :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v35 = v6.iTailZone::DD,23803
23803 :: PRED :: IF :: Z :: if (#(null) != v35) goto 126::CD,23820
23811 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,23816:CL,23546
23816 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 126::CD,23820
23818 :: NORM :: compound :: Z :: return v37::DD,23725
23819 :: NORM :: compound :: Z :: return #(0)::DD,23725
23820 :: EXPR :: assign :: null :: PHI v37 = #(1), #(0)::CF,23818
24016 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)::CE,24017:CD,24022:CD,24027:CD,24028:CD,24029:CD,24030:CD,24035:CD,24081:CD,24082
24017 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)::JM,16072
24022 :: CALL :: call :: J :: v6 = p0 $null .getYearMillis(p2 $null )::JM,24027:CL,24431
24027 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $null  - v6::DD,24028
24028 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 ? #(10)::CF,24029
24029 :: EXPR :: assign :: I :: v10 = CONVERT J to I v9::DD,24036:DD,24037:DD,24038:DD,24040:DD,24043:DD,24045:DD,24048:DD,24049:DD,24051:DD,24054:DD,24056:DD,24059:DD,24060:DD,24061:DD,24063:DD,24066:DD,24068:DD,24071:DD,24072:DD,24074:DD,24077:DD,24079
24030 :: CALL :: call :: Z :: v12 = p0 $null .isLeapYear(p2 $null )::JM,24035:CL,24447
24035 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 157::CD,24036:CD,24059
24036 :: PRED :: IF :: Z :: if (v10 >= #(15356250)) goto 92::CD,24037:CD,24048
24037 :: PRED :: IF :: Z :: if (v10 >= #(7678125)) goto 65::CD,24038:CD,24043
24038 :: PRED :: IF :: Z :: if (v10 >= #(2615625)) goto 50::CD,24040:CD,24082
24040 :: PRED :: IF :: Z :: if (v10 >= #(5062500)) goto 58::CD,24082
24043 :: PRED :: IF :: Z :: if (v10 >= #(10209375)) goto 76::CD,24045:CD,24082
24045 :: PRED :: IF :: Z :: if (v10 >= #(12825000)) goto 85::CD,24082
24048 :: PRED :: IF :: Z :: if (v10 >= #(23118750)) goto 128::CD,24049:CD,24054
24049 :: PRED :: IF :: Z :: if (v10 >= #(17971875)) goto 111::CD,24051:CD,24082
24051 :: PRED :: IF :: Z :: if (v10 >= #(20587500)) goto 121::CD,24082
24054 :: PRED :: IF :: Z :: if (v10 >= #(25734375)) goto 140::CD,24056:CD,24082
24056 :: PRED :: IF :: Z :: if (v10 >= #(28265625)) goto 150::CD,24082
24059 :: PRED :: IF :: Z :: if (v10 >= #(15271875)) goto 224::CD,24060:CD,24071
24060 :: PRED :: IF :: Z :: if (v10 >= #(7593750)) goto 197::CD,24061:CD,24066
24061 :: PRED :: IF :: Z :: if (v10 >= #(2615625)) goto 182::CD,24063:CD,24082
24063 :: PRED :: IF :: Z :: if (v10 >= #(4978125)) goto 190::CD,24082
24066 :: PRED :: IF :: Z :: if (v10 >= #(10125000)) goto 208::CD,24068:CD,24082
24068 :: PRED :: IF :: Z :: if (v10 >= #(12740625)) goto 217::CD,24082
24071 :: PRED :: IF :: Z :: if (v10 >= #(23034375)) goto 260::CD,24072:CD,24077
24072 :: PRED :: IF :: Z :: if (v10 >= #(17887500)) goto 243::CD,24074:CD,24082
24074 :: PRED :: IF :: Z :: if (v10 >= #(20503125)) goto 253::CD,24082
24077 :: PRED :: IF :: Z :: if (v10 >= #(25650000)) goto 272::CD,24079:CD,24082
24079 :: PRED :: IF :: Z :: if (v10 >= #(28181250)) goto 282::CD,24082
24081 :: NORM :: compound :: I :: return v46::DD,24017
24082 :: EXPR :: assign :: null :: PHI v46 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12)::CF,24081
24159 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)::CE,24160:CD,24165:CD,24170:CD,24171:JM,24185:JM,24188
24160 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)::JM,16101:JM,16093:JM,16195
24165 :: CALL :: call :: J :: v6 = p0 $null .getFirstWeekOfYearMillis(p2 $null )::JM,24170:JM,24188:CL,31961
24170 :: EXPR :: assign :: Z :: v7 = p1 $null  == v6::DD,24171
24171 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,24173:CD,24178:CD,24180:CD,24185:CD,24186
24173 :: CALL :: call :: I :: v21 = p0 $null .getWeeksInYear(v19)::JM,24178:CL,30798
24178 :: NORM :: compound :: I :: return v21::DD,24160
24180 :: CALL :: call :: J :: v12 = p0 $null .getFirstWeekOfYearMillis(v10)::JM,24185:CL,31961
24185 :: EXPR :: assign :: Z :: v13 = p1 $null  == v12::DD,24186
24186 :: PRED :: IF :: Z :: if (v13 < #(0)) goto 43::CD,24187:CD,24188:CD,24189:CD,24190:CD,24191:CD,24192
24187 :: NORM :: compound :: I :: return #(1)::DD,24160
24188 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p1 $null  - v6::DD,24189
24189 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 / #(604800000 l)::CF,24190
24190 :: EXPR :: assign :: I :: v17 = CONVERT J to I v16::DD,24191
24191 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 + #(1)::CF,24192
24192 :: NORM :: compound :: I :: return v18::DD,24160
24214 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue()::CE,24215:CD,24221:CD,24225
24215 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24221 :: CALL :: call :: I :: v5 = v3.getMaxYear()::JM,24225:CL,29660
24225 :: NORM :: compound :: I :: return v5::CF,24215
24227 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDateTimeField.getMaximumValue()::CE,24228:CD,24234:CD,24235
24228 :: EXIT :: exit :: I :: org.joda.time.field.PreciseDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24231 :: EXPR :: reference :: I :: v3 = p0 $null .iRange::DD,24234
24234 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v3 - #(1)::CF,24235
24235 :: NORM :: compound :: I :: return v5::CF,24228
24238 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumValue()::CF,24239:CD,24242
24239 :: EXIT :: exit :: I :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24242 :: NORM :: compound :: I :: return #(7)::CF,24239
24244 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.getMaximumValue()::CE,24245:CD,24251
24245 :: EXIT :: exit :: I :: org.joda.time.field.DividedDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24248 :: EXPR :: reference :: I :: v3 = p0 $null .iMax::DD,24251
24251 :: NORM :: compound :: I :: return v3::CF,24245
24253 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue()::CE,24254:CD,24260:CD,24264
24254 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24260 :: CALL :: call :: I :: v5 = v3.getMaxYear()::JM,24264:CL,29660
24264 :: NORM :: compound :: I :: return v5::CF,24254
24266 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue()::CE,24267:CD,24274:CD,24278
24267 :: EXIT :: exit :: I :: org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24274 :: CALL :: call :: I :: v6 = v4.getMaximumValue()::JM,24278:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24318:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
24278 :: NORM :: compound :: I :: return v6::DD,24267
24280 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMaximumValue()::CE,24281:CD,24287:CD,24291
24281 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24287 :: CALL :: call :: I :: v5 = v3.getMaximumValue()::JM,24291:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
24291 :: NORM :: compound :: I :: return v5::DD,24281
24293 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.getMaximumValue()::CF,24294:CD,24297
24294 :: EXIT :: exit :: I :: org.joda.time.chrono.GJEraDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24297 :: NORM :: compound :: I :: return #(1)::CF,24294
24299 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue()::CF,24300:CD,24303
24300 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24303 :: NORM :: compound :: I :: return #(53)::CF,24300
24305 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue()::CE,24306:CD,24312:CD,24316
24306 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24312 :: CALL :: call :: I :: v5 = v3.getDaysInYearMax()::JM,24316:CL,32008
24316 :: NORM :: compound :: I :: return v5::CF,24306
24318 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue()::CE,24319:CD,24326:CD,24330
24319 :: EXIT :: exit :: I :: org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24330:JM,49492:JM,49493:JM,49495
24326 :: CALL :: call :: I :: v6 = v4.getMaximumValue()::JM,24330:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24318:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
24330 :: NORM :: compound :: I :: return v6::DD,24319
24332 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMaximumValue()::CE,24333:CD,24339
24333 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24336 :: EXPR :: reference :: I :: v3 = p0 $null .iMax::DD,24339
24339 :: NORM :: compound :: I :: return v3::CF,24333
24341 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue()::CE,24342:CD,24348:CD,24352
24342 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24348 :: CALL :: call :: I :: v5 = v3.getDaysInMonthMax()::JM,24352:CL,32014
24352 :: NORM :: compound :: I :: return v5::CF,24342
24354 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.getMaximumValue()::CE,24355:CD,24361:CD,24362
24355 :: EXIT :: exit :: I :: org.joda.time.field.RemainderDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24358 :: EXPR :: reference :: I :: v3 = p0 $null .iDivisor::DD,24361
24361 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v3 - #(1)::CF,24362
24362 :: NORM :: compound :: I :: return v5::CF,24355
24365 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getMaximumValue()::CE,24366:CD,24372:CD,24376
24366 :: EXIT :: exit :: I :: org.joda.time.field.DelegatedDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337
24372 :: CALL :: call :: I :: v5 = v3.getMaximumValue()::JM,24376:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
24376 :: NORM :: compound :: I :: return v5::DD,24366
24378 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.getMaximumValue()::CE,24379:CD,24385
24379 :: EXIT :: exit :: I :: org.joda.time.field.OffsetDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,49492:JM,49493:JM,49495:JM,53082:JM,54331:JM,54337:JM,56896:JM,56898:JM,56908:JM,56893:JM,56894
24382 :: EXPR :: reference :: I :: v3 = p0 $null .iMax::DD,24385
24385 :: NORM :: compound :: I :: return v3::CF,24379
24387 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getMaximumValue()::CE,24388:CD,24391
24388 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDateTimeField.getMaximumValue()::JM,16175:JM,24278:JM,24291:JM,24330:JM,24376:JM,53082:JM,54331:JM,54337
24391 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v4 = p0 $null .unsupported()::CL,16323
24396 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)::CE,24397:CD,24402:CD,24407:CD,24408:CD,24409:CD,24410:CD,24411
24397 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)::JM,16216
24402 :: CALL :: call :: J :: v6 = p0 $null .getYearMillis(p2 $null )::JM,24407:CL,24431
24407 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $null  - v6::DD,24408
24408 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 / #(86400000 l)::CF,24409
24409 :: EXPR :: assign :: I :: v10 = CONVERT J to I v9::DD,24410
24410 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 + #(1)::CF,24411
24411 :: NORM :: compound :: I :: return v12::DD,24397
24419 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()::CF,24420:CD,24423
24420 :: EXIT :: exit :: J :: org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()::JM,16240:JM,16238
24423 :: NORM :: compound :: J :: return #(15778476000 l)::CF,24420
24425 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()::CF,24426:CD,24429
24426 :: EXIT :: exit :: J :: org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()::JM,16235
24429 :: NORM :: compound :: J :: return #(31083597720000 l)::CF,24426
24431 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getYearMillis(int)::CE,24432:CD,24436:CD,24444
24432 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicChronology.getYearMillis(int)::JM,16261:JM,16247:JM,24027:JM,24407:JM,24490:JM,30920:JM,31984:JM,31989:JM,52262:JM,54644
24436 :: CALL :: call :: Lorg/joda/time/chrono/BasicChronology$YearInfo :: v5 = p0 $null .getYearInfo(p1 $null )::CL,32020
24441 :: EXPR :: reference :: J :: v6 = v5.iFirstDayMillis::DD,24444
24444 :: NORM :: compound :: J :: return v6::DD,24432
24447 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.isLeapYear(int)::CF,24448:CD,24452:CD,24453:CD,24459:CD,24460:JM,24454:JM,24456
24448 :: EXIT :: exit :: Z :: org.joda.time.chrono.GregorianChronology.isLeapYear(int)::JM,16259:JM,24035:JM,30876:JM,32087:JM,53945
24452 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $null  && #(3)::DD,24453
24453 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 26::CD,24454:CD,24455:CD,24460
24454 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $null  % #(100)::DD,24455
24455 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 22::CD,24456:CD,24457:CD,24460
24456 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p1 $null  % #(400)::DD,24457
24457 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,24460
24459 :: NORM :: compound :: Z :: return v12::CF,24448
24460 :: EXPR :: assign :: null :: PHI v12 = #(1), #(0)::CF,24459
24472 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)::CE,24473:CD,24479:CD,24484:CD,24490:CD,24491:CD,24492:CD,24493:CD,24494:CD,24495
24473 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)::JM,16381:JM,50244:JM,50233
24479 :: CALL :: call :: J :: v7 = p0 $null .getYearMillis(p2 $null )::JM,24490:CL,24431
24484 :: CALL :: call :: J :: v9 = p0 $null .getTotalMillisByYearMonth(p2 $null , p3 $null )::JM,24490:CL,32076
24490 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::DD,24491
24491 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $null  - v10::DD,24492
24492 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 / #(86400000 l)::CF,24493
24493 :: EXPR :: assign :: I :: v14 = CONVERT J to I v13::DD,24494
24494 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 + #(1)::CF,24495
24495 :: NORM :: compound :: I :: return v16::DD,24473
24517 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.setFields()::CD,24521:CD,24528:CD,24536:CD,24543:CD,24555:CD,24567:CD,24579:CD,24591:CD,24603:CD,24615:CD,24627:CD,24639:CD,24651:CD,24663:CD,24675:CD,24687:CD,24699:CD,24711:CD,24723:CD,24735:CD,24747:CD,24759:CD,24771:CD,24783:CD,24795:CD,24807:CD,24819:CD,24831:CD,24843:CD,24855:CD,24867:CD,24879:CD,24891:CD,24903:CD,24915:CD,24927:CD,24939:CD,24951:CD,24963:CD,25062:CD,25063:CD,25064:CD,25065:CD,25066:CD,25067:CD,25068:CD,25069:CD,25070:CD,25071:CD,25072:CD,25073:CD,25074:CD,25075:CD,25076:CD,25077:CD,25078:CD,25079:CD,25080:CD,25081:CD,25082:CD,25083:CD,25084:CD,25085:CD,25086:CD,25087:CD,25088:CD,25089:CD,25090:CD,25091:CD,25092:CD,25093:CD,25094:CD,25095:CD,25096:CD,25100
24521 :: NORM :: declaration :: Lorg/joda/time/chrono/AssembledChronology$Fields :: v3 = new org.joda.time.chrono.AssembledChronology$Fields::
24525 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v5 = p0 $null .iBase::DD,24528
24528 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 25::CD,24532
24532 :: CALL :: call :: V :: v3.copyFieldsFrom(v7)::CL,32131
24536 :: CALL :: call :: V :: p0 $null .assemble(v3)::CL,33207:CL,33114:CL,33095:CL,32767
24540 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v10 = v3.millis::DD,24543:DD,25062
24543 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 43::CD,24545:CD,25062
24545 :: CALL :: call :: Lorg/joda/time/DurationField :: v12 = p0 $null .millis()::JM,25062:CL,33779
24549 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iMillis = v13::
24552 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v14 = v3.seconds::DD,24555:DD,25063
24555 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 64::CD,24557:CD,25063
24557 :: CALL :: call :: Lorg/joda/time/DurationField :: v16 = p0 $null .seconds()::JM,25063:CL,33791
24561 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iSeconds = v17::
24564 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v18 = v3.minutes::DD,24567:DD,25064
24567 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 85::CD,24569:CD,25064
24569 :: CALL :: call :: Lorg/joda/time/DurationField :: v20 = p0 $null .minutes()::JM,25064:CL,33803
24573 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iMinutes = v21::
24576 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v22 = v3.hours::DD,24579:DD,25065
24579 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 106::CD,24581:CD,25065
24581 :: CALL :: call :: Lorg/joda/time/DurationField :: v24 = p0 $null .hours()::JM,25065:CL,33815
24585 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iHours = v25::
24588 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v26 = v3.halfdays::DD,24591:DD,25066
24591 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 127::CD,24593:CD,25066
24593 :: CALL :: call :: Lorg/joda/time/DurationField :: v28 = p0 $null .halfdays()::JM,25066:CL,33827
24597 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iHalfdays = v29::
24600 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v30 = v3.days::DD,24603:DD,25067
24603 :: PRED :: IF :: Z :: if (v30 == #(null)) goto 148::CD,24605:CD,25067
24605 :: CALL :: call :: Lorg/joda/time/DurationField :: v32 = p0 $null .days()::JM,25067:CL,33839
24609 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDays = v33::
24612 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v34 = v3.weeks::DD,24615:DD,25068
24615 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 169::CD,24617:CD,25068
24617 :: CALL :: call :: Lorg/joda/time/DurationField :: v36 = p0 $null .weeks()::JM,25068:CL,33851
24621 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iWeeks = v37::
24624 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v38 = v3.weekyears::DD,24627:DD,25069
24627 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 190::CD,24629:CD,25069
24629 :: CALL :: call :: Lorg/joda/time/DurationField :: v40 = p0 $null .weekyears()::JM,25069:CL,33863
24633 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iWeekyears = v41::
24636 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v42 = v3.months::DD,24639:DD,25070
24639 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 211::CD,24641:CD,25070
24641 :: CALL :: call :: Lorg/joda/time/DurationField :: v44 = p0 $null .months()::JM,25070:CL,33875
24645 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iMonths = v45::
24648 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v46 = v3.years::DD,24651:DD,25071
24651 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 232::CD,24653:CD,25071
24653 :: CALL :: call :: Lorg/joda/time/DurationField :: v48 = p0 $null .years()::JM,25071:CL,33887
24657 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iYears = v49::
24660 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v50 = v3.centuries::DD,24663:DD,25072
24663 :: PRED :: IF :: Z :: if (v50 == #(null)) goto 253::CD,24665:CD,25072
24665 :: CALL :: call :: Lorg/joda/time/DurationField :: v52 = p0 $null .centuries()::JM,25072:CL,33899
24669 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iCenturies = v53::
24672 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v54 = v3.eras::DD,24675:DD,25073
24675 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 274::CD,24677:CD,25073
24677 :: CALL :: call :: Lorg/joda/time/DurationField :: v56 = p0 $null .eras()::JM,25073:CL,33911
24681 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iEras = v57::
24684 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v58 = v3.millisOfSecond::DD,24687:DD,25074
24687 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 295::CD,24689:CD,25074
24689 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v60 = p0 $null .millisOfSecond()::JM,25074:CL,33923
24693 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iMillisOfSecond = v61::
24696 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v62 = v3.millisOfDay::DD,24699:DD,25075
24699 :: PRED :: IF :: Z :: if (v62 == #(null)) goto 316::CD,24701:CD,25075
24701 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v64 = p0 $null .millisOfDay()::JM,25075:CL,33941
24705 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iMillisOfDay = v65::
24708 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v66 = v3.secondOfMinute::DD,24711:DD,25076
24711 :: PRED :: IF :: Z :: if (v66 == #(null)) goto 337::CD,24713:CD,25076
24713 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v68 = p0 $null .secondOfMinute()::JM,25076:CL,33959
24717 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iSecondOfMinute = v69::
24720 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v70 = v3.secondOfDay::DD,24723:DD,25077
24723 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 358::CD,24725:CD,25077
24725 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v72 = p0 $null .secondOfDay()::JM,25077:CL,33977
24729 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iSecondOfDay = v73::
24732 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v74 = v3.minuteOfHour::DD,24735:DD,25078
24735 :: PRED :: IF :: Z :: if (v74 == #(null)) goto 379::CD,24737:CD,25078
24737 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v76 = p0 $null .minuteOfHour()::JM,25078:CL,33995
24741 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iMinuteOfHour = v77::
24744 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v78 = v3.minuteOfDay::DD,24747:DD,25079
24747 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 400::CD,24749:CD,25079
24749 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v80 = p0 $null .minuteOfDay()::JM,25079:CL,34013
24753 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iMinuteOfDay = v81::
24756 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v82 = v3.hourOfDay::DD,24759:DD,25080
24759 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 421::CD,24761:CD,25080
24761 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v84 = p0 $null .hourOfDay()::JM,25080:CL,34031
24765 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iHourOfDay = v85::
24768 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v86 = v3.clockhourOfDay::DD,24771:DD,25081
24771 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 442::CD,24773:CD,25081
24773 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v88 = p0 $null .clockhourOfDay()::JM,25081:CL,34049
24777 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iClockhourOfDay = v89::
24780 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v90 = v3.hourOfHalfday::DD,24783:DD,25082
24783 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 463::CD,24785:CD,25082
24785 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v92 = p0 $null .hourOfHalfday()::JM,25082:CL,34067
24789 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iHourOfHalfday = v93::
24792 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v94 = v3.clockhourOfHalfday::DD,24795:DD,25083
24795 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 484::CD,24797:CD,25083
24797 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v96 = p0 $null .clockhourOfHalfday()::JM,25083:CL,34085
24801 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iClockhourOfHalfday = v97::
24804 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v98 = v3.halfdayOfDay::DD,24807:DD,25084
24807 :: PRED :: IF :: Z :: if (v98 == #(null)) goto 505::CD,24809:CD,25084
24809 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v100 = p0 $null .halfdayOfDay()::JM,25084:CL,34103
24813 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iHalfdayOfDay = v101::
24816 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v102 = v3.dayOfWeek::DD,24819:DD,25085
24819 :: PRED :: IF :: Z :: if (v102 == #(null)) goto 526::CD,24821:CD,25085
24821 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v104 = p0 $null .dayOfWeek()::JM,25085:CL,34121
24825 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iDayOfWeek = v105::
24828 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v106 = v3.dayOfMonth::DD,24831:DD,25086
24831 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 547::CD,24833:CD,25086
24833 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v108 = p0 $null .dayOfMonth()::JM,25086:CL,34139
24837 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iDayOfMonth = v109::
24840 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v110 = v3.dayOfYear::DD,24843:DD,25087
24843 :: PRED :: IF :: Z :: if (v110 == #(null)) goto 568::CD,24845:CD,25087
24845 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v112 = p0 $null .dayOfYear()::JM,25087:CL,34157
24849 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iDayOfYear = v113::
24852 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v114 = v3.weekOfWeekyear::DD,24855:DD,25088
24855 :: PRED :: IF :: Z :: if (v114 == #(null)) goto 589::CD,24857:CD,25088
24857 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v116 = p0 $null .weekOfWeekyear()::JM,25088:CL,34175
24861 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iWeekOfWeekyear = v117::
24864 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v118 = v3.weekyear::DD,24867:DD,25089
24867 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 610::CD,24869:CD,25089
24869 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v120 = p0 $null .weekyear()::JM,25089:CL,34193
24873 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iWeekyear = v121::
24876 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v122 = v3.weekyearOfCentury::DD,24879:DD,25090
24879 :: PRED :: IF :: Z :: if (v122 == #(null)) goto 631::CD,24881:CD,25090
24881 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v124 = p0 $null .weekyearOfCentury()::JM,25090:CL,34211
24885 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iWeekyearOfCentury = v125::
24888 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v126 = v3.monthOfYear::DD,24891:DD,25091
24891 :: PRED :: IF :: Z :: if (v126 == #(null)) goto 652::CD,24893:CD,25091
24893 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v128 = p0 $null .monthOfYear()::JM,25091:CL,34229
24897 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iMonthOfYear = v129::
24900 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v130 = v3.year::DD,24903:DD,25092
24903 :: PRED :: IF :: Z :: if (v130 == #(null)) goto 673::CD,24905:CD,25092
24905 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v132 = p0 $null .year()::JM,25092:CL,34247
24909 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iYear = v133::
24912 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v134 = v3.yearOfEra::DD,24915:DD,25093
24915 :: PRED :: IF :: Z :: if (v134 == #(null)) goto 694::CD,24917:CD,25093
24917 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v136 = p0 $null .yearOfEra()::JM,25093:CL,34265
24921 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iYearOfEra = v137::
24924 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v138 = v3.yearOfCentury::DD,24927:DD,25094
24927 :: PRED :: IF :: Z :: if (v138 == #(null)) goto 715::CD,24929:CD,25094
24929 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v140 = p0 $null .yearOfCentury()::JM,25094:CL,34283
24933 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iYearOfCentury = v141::
24936 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v142 = v3.centuryOfEra::DD,24939:DD,25095
24939 :: PRED :: IF :: Z :: if (v142 == #(null)) goto 736::CD,24941:CD,25095
24941 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v144 = p0 $null .centuryOfEra()::JM,25095:CL,34301
24945 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iCenturyOfEra = v145::
24948 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v146 = v3.era::DD,24951:DD,25096
24951 :: PRED :: IF :: Z :: if (v146 == #(null)) goto 757::CD,24953:CD,25096
24953 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v148 = p0 $null .era()::JM,25096:CL,34319
24957 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iEra = v149::
24960 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v150 = p0 $null .iBase::DD,24963
24963 :: PRED :: IF :: Z :: if (v150 != #(null)) goto 776::CD,24971:CD,24975:CD,25016:CD,25020:CD,25022:CD,25029:CD,25033:CD,25057:CD,25097:CD,25098:CD,25099:CD,25100
24965 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v151 = p0 $null .iHourOfDay::DD,24975
24971 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v154 = v152.hourOfDay()::JM,24975:CL,34337
24975 :: PRED :: IF :: Z :: if (v151 != v154) goto 837::CD,24982:CD,24986:CD,25097
24976 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v155 = p0 $null .iMinuteOfHour::DD,24986
24982 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v158 = v156.minuteOfHour()::JM,24986:CL,34346
24986 :: PRED :: IF :: Z :: if (v155 != v158) goto 837::CD,24993:CD,24997:CD,25097
24987 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v159 = p0 $null .iSecondOfMinute::DD,24997
24993 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v162 = v160.secondOfMinute()::JM,24997:CL,34355
24997 :: PRED :: IF :: Z :: if (v159 != v162) goto 837::CD,25004:CD,25008:CD,25097
24998 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v163 = p0 $null .iMillisOfSecond::DD,25008
25004 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v166 = v164.millisOfSecond()::JM,25008:CL,34364
25008 :: PRED :: IF :: Z :: if (v163 != v166) goto 837::CD,25097
25010 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v170 = p0 $null .iMillisOfDay::DD,25020
25016 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v173 = v171.millisOfDay()::JM,25020:CL,34373
25020 :: PRED :: IF :: Z :: if (v170 != v173) goto 855::CD,25098
25022 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v169 || v175::DD,25057
25023 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v177 = p0 $null .iYear::DD,25033
25029 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v180 = v178.year()::JM,25033:CL,9390
25033 :: PRED :: IF :: Z :: if (v177 != v180) goto 903::CD,25040:CD,25044:CD,25099
25034 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v181 = p0 $null .iMonthOfYear::DD,25044
25040 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v184 = v182.monthOfYear()::JM,25044:CL,34382
25044 :: PRED :: IF :: Z :: if (v181 != v184) goto 903::CD,25051:CD,25055:CD,25099
25045 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v185 = p0 $null .iDayOfMonth::DD,25055
25051 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v188 = v186.dayOfMonth()::JM,25055:CL,34391
25055 :: PRED :: IF :: Z :: if (v185 != v188) goto 903::CD,25099
25057 :: EXPR :: assign :: Ljava/lang/Object :: v191 = v176 || v190::DD,25100
25058 :: EXPR :: modify :: I :: p0 $null .iBaseFlags = v192::
25062 :: EXPR :: assign :: null :: PHI v13 = v10, v12::DD,24549
25063 :: EXPR :: assign :: null :: PHI v17 = v14, v16::DD,24561
25064 :: EXPR :: assign :: null :: PHI v21 = v18, v20::DD,24573
25065 :: EXPR :: assign :: null :: PHI v25 = v22, v24::DD,24585
25066 :: EXPR :: assign :: null :: PHI v29 = v26, v28::DD,24597
25067 :: EXPR :: assign :: null :: PHI v33 = v30, v32::DD,24609
25068 :: EXPR :: assign :: null :: PHI v37 = v34, v36::DD,24621
25069 :: EXPR :: assign :: null :: PHI v41 = v38, v40::DD,24633
25070 :: EXPR :: assign :: null :: PHI v45 = v42, v44::DD,24645
25071 :: EXPR :: assign :: null :: PHI v49 = v46, v48::DD,24657
25072 :: EXPR :: assign :: null :: PHI v53 = v50, v52::DD,24669
25073 :: EXPR :: assign :: null :: PHI v57 = v54, v56::DD,24681
25074 :: EXPR :: assign :: null :: PHI v61 = v58, v60::DD,24693
25075 :: EXPR :: assign :: null :: PHI v65 = v62, v64::DD,24705
25076 :: EXPR :: assign :: null :: PHI v69 = v66, v68::DD,24717
25077 :: EXPR :: assign :: null :: PHI v73 = v70, v72::DD,24729
25078 :: EXPR :: assign :: null :: PHI v77 = v74, v76::DD,24741
25079 :: EXPR :: assign :: null :: PHI v81 = v78, v80::DD,24753
25080 :: EXPR :: assign :: null :: PHI v85 = v82, v84::DD,24765
25081 :: EXPR :: assign :: null :: PHI v89 = v86, v88::DD,24777
25082 :: EXPR :: assign :: null :: PHI v93 = v90, v92::DD,24789
25083 :: EXPR :: assign :: null :: PHI v97 = v94, v96::DD,24801
25084 :: EXPR :: assign :: null :: PHI v101 = v98, v100::DD,24813
25085 :: EXPR :: assign :: null :: PHI v105 = v102, v104::DD,24825
25086 :: EXPR :: assign :: null :: PHI v109 = v106, v108::DD,24837
25087 :: EXPR :: assign :: null :: PHI v113 = v110, v112::DD,24849
25088 :: EXPR :: assign :: null :: PHI v117 = v114, v116::DD,24861
25089 :: EXPR :: assign :: null :: PHI v121 = v118, v120::DD,24873
25090 :: EXPR :: assign :: null :: PHI v125 = v122, v124::DD,24885
25091 :: EXPR :: assign :: null :: PHI v129 = v126, v128::DD,24897
25092 :: EXPR :: assign :: null :: PHI v133 = v130, v132::DD,24909
25093 :: EXPR :: assign :: null :: PHI v137 = v134, v136::DD,24921
25094 :: EXPR :: assign :: null :: PHI v141 = v138, v140::DD,24933
25095 :: EXPR :: assign :: null :: PHI v145 = v142, v144::DD,24945
25096 :: EXPR :: assign :: null :: PHI v149 = v146, v148::DD,24957
25097 :: EXPR :: assign :: null :: PHI v169 = #(1), #(0)::DD,25022
25098 :: EXPR :: assign :: null :: PHI v175 = #(2), #(0)::CF,25022
25099 :: EXPR :: assign :: null :: PHI v190 = #(4), #(0)::CF,25057
25100 :: EXPR :: assign :: null :: PHI v192 = #(0), v191::DD,25058
25381 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.hashCode()::CE,25382:CD,25385:CD,25389:CD,25393:CD,25394
25382 :: EXIT :: exit :: I :: org.joda.time.DateTimeZone.hashCode()::JM,18856:JM,18962:JM,25450
25385 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $null .getID()::JM,25393:CL,14897
25389 :: CALL :: call :: I :: v7 = v5.hashCode()::JM,25393
25393 :: EXPR :: assign :: Ljava/lang/Object :: v8 = #(57) + v7::CF,25394
25394 :: NORM :: compound :: I :: return v8::CF,25382
25397 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.hashCode()::CE,25398:CD,25401:CD,25405:CD,25409
25398 :: EXIT :: exit :: I :: org.joda.time.UTCDateTimeZone.hashCode()::JM,18856:JM,18962
25401 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $null .getID()::JM,25409:CL,14897
25405 :: CALL :: call :: I :: v6 = v4.hashCode()::JM,25409
25409 :: NORM :: compound :: I :: return v6::CF,25398
25411 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.hashCode()::CE,25412:CD,25415:CD,25419:CD,25426:CD,25427:CD,25431:CD,25432:CD,25433
25412 :: EXIT :: exit :: I :: org.joda.time.tz.FixedDateTimeZone.hashCode()::JM,18856:JM,18962
25415 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $null .getID()::JM,25427:CL,14897
25419 :: CALL :: call :: I :: v6 = v4.hashCode()::JM,25427
25423 :: EXPR :: reference :: I :: v8 = p0 $null .iStandardOffset::DD,25426
25426 :: EXPR :: assign :: Ljava/lang/Object :: v9 = #(37) * v8::CF,25427
25427 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 + v9::DD,25432
25428 :: EXPR :: reference :: I :: v12 = p0 $null .iWallOffset::DD,25431
25431 :: EXPR :: assign :: Ljava/lang/Object :: v13 = #(31) * v12::CF,25432
25432 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v10 + v13::CF,25433
25433 :: NORM :: compound :: I :: return v14::CF,25412
25439 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.hashCode()::CE,25440:CD,25446:CD,25450
25440 :: EXIT :: exit :: I :: org.joda.time.tz.CachedDateTimeZone.hashCode()::JM,18856:JM,18962
25446 :: CALL :: call :: I :: v5 = v3.hashCode()::JM,25450:CL,25381
25450 :: NORM :: compound :: I :: return v5::DD,25440
25464 :: ENTR :: entry :: null :: org.joda.time.base.BasePeriod.checkPeriodType(org.joda.time.PeriodType)::CE,25465:CD,25469:CD,25473
25465 :: EXIT :: exit :: Lorg/joda/time/PeriodType :: org.joda.time.base.BasePeriod.checkPeriodType(org.joda.time.PeriodType)::JM,16620
25469 :: CALL :: call :: Lorg/joda/time/PeriodType :: v5 = getPeriodType(p1 $null )::JM,25473:CL,34430
25473 :: NORM :: compound :: Lorg/joda/time/PeriodType :: return v5::DD,25465
25475 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.getChronology(org.joda.time.Chronology)::CD,25479
25479 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,25480
25480 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v5 = getInstance()::CL,34443
25488 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long)::CE,25489:CD,25494:CD,25498:CD,25499:CD,25500:CD,25535
25489 :: EXIT :: exit :: [I :: org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long)::JM,16629
25494 :: CALL :: call :: I :: v6 = p1 $null .size()::JM,25498:JM,25501:CL,34454
25498 :: NORM :: declaration :: [I :: v7 = new []::DD,25535:CF,25499
25499 :: EXPR :: assign :: Z :: v9 = p2 $null  == #(0 l)::DD,25500
25500 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 91::CD,25501:CD,25537:CF,25535
25501 :: PRED :: IF :: Z :: if (v25 >= v6) goto 91::CD,25507:CD,25512:CD,25516:CD,25533:CD,25537:CF,25535
25507 :: CALL :: call :: Lorg/joda/time/DurationField :: v14 = v12.getField(p0 $null )::CL,34485
25512 :: CALL :: call :: Z :: v16 = v14.isPrecise()::JM,25516:CL,16919:CL,16982:CL,16988:CL,16976:CL,16932:CL,16994
25516 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 83::CD,25517:CD,25523
25517 :: CALL :: call :: I :: v18 = v14.getDifference(p2 $null , v24)::JM,25529:CL,34578:CL,34646:CL,34694:CL,34598:CL,34676:CL,34665
25523 :: CALL :: call :: J :: v20 = v14.add(v24, v18)::CL,34719:CL,34793:CL,34730:CL,34815:CL,34764:CL,34749
25529 :: EXPR :: modify :: I :: v7[v25] = v18::
25533 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,25537
25535 :: NORM :: compound :: [I :: return v7::DD,25489
25537 :: EXPR :: assign :: null :: PHI v25 = v23, #(0)::DD,25501:DD,25533
25571 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getDefault()::CE,25572:CD,25574:CD,25576:CD,25580:CD,25581:CD,25620:CD,25628
25572 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.DateTimeZone.getDefault()::JM,16787:JM,34873:JM,35000:JM,47419:JM,47450:JM,47491:JM,47523
25574 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v2 = org.joda.time.DateTimeZone.cDefault::JM,25576:JM,25580
25576 :: CALL :: call :: Ljava/lang/Object :: v4 = v2.get()::JM,25576:JM,25580
25580 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::DD,25581:DD,25623:DD,25624:DD,25628
25581 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 78::CF,25628:CD,25582:CD,25586:CD,25592:CD,25601:CD,25604:CD,25606:CD,25612:CD,25623:CD,25624:CD,25625:CD,25626:CD,25627
25582 :: CALL :: call :: Ljava/lang/String :: v9 = getProperty(#(user.timezone))::JM,25586:JM,25582
25586 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 29::CF,25623:CD,25587
25587 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v11 = forID(v9)::JM,25623:CL,34865
25592 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 44::CF,25625:CD,25593:CD,25596
25593 :: CALL :: call :: Ljava/util/TimeZone :: v18 = getDefault()::
25596 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v20 = forTimeZone(v18)::JM,25625:CL,34992
25601 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 56::CF,25627:CD,25602
25602 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v26 = org.joda.time.DateTimeZone.UTC::DD,25627
25604 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v28 = org.joda.time.DateTimeZone.cDefault::JM,25606:JM,25612
25606 :: CALL :: call :: Z :: v30 = v28.compareAndSet(#(null), v27)::JM,25606:JM,25612
25612 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 78::CF,25628:CD,25613:CD,25615:CD,25619
25613 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v32 = org.joda.time.DateTimeZone.cDefault::JM,25619:JM,25615
25615 :: CALL :: call :: Ljava/lang/Object :: v34 = v32.get()::JM,25619:JM,25615
25619 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::DD,25628
25620 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v37::DD,25572
25623 :: EXPR :: assign :: null :: PHI v13 = v5, v11::DD,25624
25624 :: EXPR :: assign :: null :: PHI v15 = v13, v5::DD,25592:DD,25625:DD,25626
25625 :: EXPR :: assign :: null :: PHI v22 = v15, v20::DD,25626
25626 :: EXPR :: assign :: null :: PHI v24 = v22, v15::DD,25601:DD,25627
25627 :: EXPR :: assign :: null :: PHI v27 = v24, v26::JM,25606:JM,25612:DD,25628
25628 :: EXPR :: assign :: null :: PHI v37 = v5, v27, v35::CF,25620
25733 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)::JM,16402:JM,16405:JM,16408
25790 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v6 = new java.lang.IllegalArgumentException::JM,58577:JM,16850:JM,25796:JM,16856:JM,25790
25796 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iType = p1 $null ::
25805 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.isFixed()::CE,25806:CD,25812:CD,25816
25806 :: EXIT :: exit :: Z :: org.joda.time.tz.CachedDateTimeZone.isFixed()::JM,16963
25812 :: CALL :: call :: Z :: v5 = v3.isFixed()::JM,25816:CL,25830
25816 :: NORM :: compound :: Z :: return v5::DD,25806
25818 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.isFixed()::CF,25819:CD,25822
25819 :: EXIT :: exit :: Z :: org.joda.time.UTCDateTimeZone.isFixed()::JM,16963
25822 :: NORM :: compound :: Z :: return #(1)::CF,25819
25824 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.isFixed()::CF,25825:CD,25828
25825 :: EXIT :: exit :: Z :: org.joda.time.tz.FixedDateTimeZone.isFixed()::JM,16963
25828 :: NORM :: compound :: Z :: return #(1)::CF,25825
25830 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.isFixed()::CF,25831:CD,25834
25831 :: EXIT :: exit :: Z :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.isFixed()::JM,16963:JM,25816
25834 :: NORM :: compound :: Z :: return #(0)::CF,25831
25845 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.isSupported()::CF,25846:CD,25849
25846 :: EXIT :: exit :: Z :: org.joda.time.field.BaseDateTimeField.isSupported()::JM,25862:JM,41107:JM,41728
25849 :: NORM :: compound :: Z :: return #(1)::CF,25846
25851 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.isSupported()::CE,25852:CD,25858:CD,25862
25852 :: EXIT :: exit :: Z :: org.joda.time.field.DelegatedDateTimeField.isSupported()::JM,25862:JM,41107:JM,41728
25858 :: CALL :: call :: Z :: v5 = v3.isSupported()::JM,25862:CL,25851:CL,25864:CL,25845
25862 :: NORM :: compound :: Z :: return v5::CF,25852
25864 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.isSupported()::CF,25865:CD,25868
25865 :: EXIT :: exit :: Z :: org.joda.time.field.UnsupportedDateTimeField.isSupported()::JM,25862:JM,41107:JM,41728
25868 :: NORM :: compound :: Z :: return #(0)::CF,25865
25877 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)::CD,25885:CD,25894:CD,25899
25885 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v20 = new java.lang.IllegalArgumentException::
25894 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::
25899 :: PRED :: IF :: Z :: if (p2 $null  > #(1)) goto 58::JM,43045:JM,43048:JM,43051:CD,25907:JM,35331:CD,25921
25907 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v17 = p0 $null .append0(v14)::CL,26143
25921 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = p0 $null .append0(v10)::CL,26143
25950 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.getFormatter()::CD,25957
25954 :: EXPR :: reference :: Ljava/lang/Object :: v3 = p0 $null .iFormatter::DD,25957:DD,25999
25957 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 80::CD,25961:CD,25965:CD,25986:CD,25999
25958 :: EXPR :: reference :: Ljava/util/ArrayList :: v5 = p0 $null .iElementPairs::JM,25965
25961 :: CALL :: call :: I :: v7 = v5.size()::JM,25965
25965 :: PRED :: IF :: Z :: if (v7 != #(2)) goto 59::CF,25999:CD,25969:CD,25977:CD,25982
25966 :: EXPR :: reference :: Ljava/util/ArrayList :: v9 = p0 $null .iElementPairs::JM,25982:JM,25983:JM,25999
25969 :: CALL :: call :: Ljava/lang/Object :: v12 = v9.get(#(0))::JM,25982:JM,25983:JM,25999
25974 :: EXPR :: reference :: Ljava/util/ArrayList :: v13 = p0 $null .iElementPairs::JM,25984:JM,25983:JM,25999
25977 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(1))::JM,25984:JM,25983:JM,25999
25982 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 59::CD,25983:CD,25999
25983 :: PRED :: IF :: Z :: if (v12 == v16) goto 53::CD,25984:CD,25999
25984 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 59::CF,25999
25986 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 76::JM,35363:JM,35349:JM,35413:JM,35368:JM,35353:JM,35418:JM,35357
25999 :: EXPR :: assign :: null :: PHI v17 = v3, v3, v12, v16::DD,25986
26086 :: EXPR :: modify :: Lorg/joda/time/format/InternalPrinter :: p0 $null .iPrinter = p1 $null ::
26089 :: EXPR :: modify :: Lorg/joda/time/format/InternalParser :: p0 $null .iParser = p2 $null ::
26092 :: EXPR :: modify :: Ljava/util/Locale :: p0 $null .iLocale = #(null)::
26095 :: EXPR :: modify :: Z :: p0 $null .iOffsetParsed = #(0)::
26098 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iChrono = #(null)::
26101 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = #(null)::
26104 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $null .iPivotYear = #(null)::
26107 :: EXPR :: modify :: I :: p0 $null .iDefaultYear = #(2000)::
26136 :: EXPR :: modify :: C :: p0 $null .iValue = p1 $null ::
26143 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.append0(java.lang.Object)::CD,26154:CD,26162
26151 :: EXPR :: reference :: Ljava/util/ArrayList :: v5 = p0 $null .iElementPairs::
26154 :: CALL :: call :: Z :: v7 = v5.add(p1 $null )::
26159 :: EXPR :: reference :: Ljava/util/ArrayList :: v8 = p0 $null .iElementPairs::
26162 :: CALL :: call :: Z :: v10 = v8.add(p1 $null )::
26177 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)::CD,26185:CD,26194:CD,26199
26185 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v20 = new java.lang.IllegalArgumentException::
26194 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::
26199 :: PRED :: IF :: Z :: if (p2 $null  > #(1)) goto 58::JM,43045:JM,43048:JM,43051:CD,26207:JM,35331:CD,26221
26207 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v17 = p0 $null .append0(v14)::CL,26143
26221 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v13 = p0 $null .append0(v10)::CL,26143
26265 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iValue = p1 $null ::
26272 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)::CD,26280:CD,26289:JM,35584:JM,35585:JM,35592:JM,35581:CD,26301
26280 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v15 = new java.lang.IllegalArgumentException::
26289 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v13 = new java.lang.IllegalArgumentException::
26301 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v12 = p0 $null .append0(v9)::CL,26143
26334 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iZeroOffsetPrintText = p1 $null ::
26337 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iZeroOffsetParseText = p2 $null ::
26340 :: EXPR :: modify :: Z :: p0 $null .iShowSeparators = p3 $null ::
26345 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v13 = new java.lang.IllegalArgumentException::JM,26337:JM,26340:JM,26358:JM,26359:JM,26345:JM,26350:JM,26334
26350 :: PRED :: IF :: Z :: if (p4 $null  <= #(4)) goto 54::CF,26358:CD,26359
26351 :: EXPR :: modify :: I :: p0 $null .iMinFields = v11::
26354 :: EXPR :: modify :: I :: p0 $null .iMaxFields = v12::
26358 :: EXPR :: assign :: null :: PHI v11 = p4 $null , #(4)::CF,26359:DD,26351
26359 :: EXPR :: assign :: null :: PHI v12 = p5 $null , #(4)::DD,26354
26398 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.append0(org.joda.time.format.InternalPrinter,org.joda.time.format.InternalParser)::CD,26410:CD,26418
26407 :: EXPR :: reference :: Ljava/util/ArrayList :: v6 = p0 $null .iElementPairs::
26410 :: CALL :: call :: Z :: v8 = v6.add(p1 $null )::
26415 :: EXPR :: reference :: Ljava/util/ArrayList :: v9 = p0 $null .iElementPairs::
26418 :: CALL :: call :: Z :: v11 = v9.add(p2 $null )::
26474 :: ENTR :: entry :: null :: org.joda.time.format.InternalParserDateTimeParser.of(org.joda.time.format.InternalParser)::CD,26478:CD,26479:JM,26486:JM,26490
26478 :: EXPR :: assign :: Z :: v3=p1 $null  INSTANCEOF org.joda.time.format.DateTimeParserInternalParser::DD,26479
26479 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 16::CD,26486:CD,26487
26486 :: EXPR :: assign :: Z :: v5=p1 $null  INSTANCEOF org.joda.time.format.DateTimeParser::DD,26487
26487 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 28::CD,26490
26490 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 33::JM,35627
26509 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.checkParser(org.joda.time.format.DateTimeParser)::CF,26515
26515 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v5 = new java.lang.IllegalArgumentException::
26524 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserInternalParser.of(org.joda.time.format.DateTimeParser)::JM,26530:JM,26532:CE,26525:CD,26528:CD,26529
26525 :: EXIT :: exit :: Lorg/joda/time/format/InternalParser :: org.joda.time.format.DateTimeParserInternalParser.of(org.joda.time.format.DateTimeParser)::JM,17742:JM,17871:JM,17892
26528 :: EXPR :: assign :: Z :: v3=p1 $null  INSTANCEOF org.joda.time.format.InternalParserDateTimeParser::DD,26529
26529 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 13::CD,26530:CD,26531:CD,26532
26530 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST p1 $null ::CF,26531
26531 :: NORM :: compound :: Lorg/joda/time/format/InternalParser :: return v8::DD,26525
26532 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 18::CF,26534:CD,26533:JM,35642:CD,26539
26533 :: NORM :: compound :: Lorg/joda/time/format/InternalParser :: return #(null)::DD,26525
26534 :: NORM :: declaration :: Lorg/joda/time/format/DateTimeParserInternalParser :: v6 = new org.joda.time.format.DateTimeParserInternalParser::DD,26539
26539 :: NORM :: compound :: Lorg/joda/time/format/InternalParser :: return v6::DD,26525
26556 :: EXPR :: modify :: [Lorg/joda/time/format/InternalParser :: p0 $null .iParsers = p1 $null ::
26559 :: EXPR :: assign :: I :: v6 = p1 $null .length::DD,26578:CF,26577
26560 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v15 + #(-1)::DD,26561:DD,26578
26561 :: PRED :: IF :: Z :: if (v8 < #(0)) goto 54::CD,26560:CD,26566:CD,26577:CD,26578:CD,26579
26562 :: EXPR :: reference :: Ljava/lang/Object :: v9 = p1 $null [v8]::DD,26566
26566 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 49::CF,26579:CD,26567:CD,26571
26567 :: CALL :: call :: I :: v12 = v9.estimateParsedLength()::JM,26579:JM,26571:CL,35649:CL,35662
26571 :: PRED :: IF :: Z :: if (v12 <= v14) goto 49::CF,26579
26573 :: EXPR :: modify :: I :: p0 $null .iParsedLengthEstimate = v14::
26577 :: EXPR :: assign :: null :: PHI v14 = v13, #(0)::CF,26578:DD,26571:DD,26573:DD,26579
26578 :: EXPR :: assign :: null :: PHI v15 = v8, v6::DD,26560
26579 :: EXPR :: assign :: null :: PHI v13 = v14, v14, v12::DD,26577
26604 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.checkPrinter(org.joda.time.format.DateTimePrinter)::CF,26610
26610 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v5 = new java.lang.IllegalArgumentException::
26619 :: ENTR :: entry :: null :: org.joda.time.format.DateTimePrinterInternalPrinter.of(org.joda.time.format.DateTimePrinter)::JM,26627:CD,26623:CD,26624
26623 :: EXPR :: assign :: Z :: v3=p1 $null  INSTANCEOF org.joda.time.format.InternalPrinterDateTimePrinter::DD,26624
26624 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 13::CD,26627
26627 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 18::JM,35683
26643 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)::CD,26651
26648 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v4 = p0 $null .iZone::DD,26651
26651 :: PRED :: IF :: Z :: if (v4 != p1 $null ) goto 10::JM,27153:JM,27138:JM,27156:JM,27141:JM,27159:JM,27144:JM,27147:JM,27150
27138 :: EXPR :: modify :: Lorg/joda/time/format/InternalPrinter :: p0 $null .iPrinter = p1 $null ::
27141 :: EXPR :: modify :: Lorg/joda/time/format/InternalParser :: p0 $null .iParser = p2 $null ::
27144 :: EXPR :: modify :: Ljava/util/Locale :: p0 $null .iLocale = p3 $null ::
27147 :: EXPR :: modify :: Z :: p0 $null .iOffsetParsed = p4 $null ::
27150 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iChrono = p5 $null ::
27153 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = p6 $null ::
27156 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $null .iPivotYear = p7 $null ::
27159 :: EXPR :: modify :: I :: p0 $null .iDefaultYear = p8 $null ::
27288 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.1.run()::CE,27289:CD,27295:CD,27299
27289 :: EXIT :: exit :: Ljava/io/InputStream :: org.joda.time.tz.ZoneInfoProvider.1.run()::JM,18585
27295 :: CALL :: call :: Ljava/lang/ClassLoader :: v5 = access$000(v3)::JM,27299:CL,36097
27299 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 26::CD,27303:CD,27310:CD,27315:CD,27319:CD,27323
27303 :: CALL :: call :: Ljava/lang/ClassLoader :: v12 = access$000(v10)::JM,27315:CL,36097
27307 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $null .val$path::JM,27315
27310 :: CALL :: call :: Ljava/io/InputStream :: v15 = v12.getResourceAsStream(v13)::JM,27315
27315 :: NORM :: compound :: Ljava/io/InputStream :: return v15::DD,27289
27319 :: CALL :: call :: Ljava/io/InputStream :: v9 = getSystemResourceAsStream(v7)::JM,27323
27323 :: NORM :: compound :: Ljava/io/InputStream :: return v9::DD,27289
27341 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getDefaultProvider()::CD,27344:CD,27348:CD,27407
27344 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(org.joda.time.DateTim...))::JM,27344:JM,27348
27348 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 36::CD,27358:CD,27370:CD,27374
27358 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v12 = validateProvider(v10)::CL,36135
27370 :: CALL :: call :: Ljava/lang/String :: v21 = getProperty(#(org.joda.time.DateTim...))::JM,27370:JM,27374
27374 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 81::CD,27376:JM,36288:JM,36226:JM,36260:JM,36231:JM,36295:JM,36265:JM,36299:JM,36236:JM,36307:JM,36245:JM,36216:JM,36251:JM,36283:JM,36222:JM,36255:CD,27385:JM,44065:JM,44003:JM,44053:JM,44041:JM,44057:JM,44028:JM,44029:JM,43998:JM,44046:CD,27402
27376 :: NORM :: declaration :: Ljava/io/File :: v23 = new java.io.File::
27385 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v27 = validateProvider(v22)::CL,36135
27402 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v39 = validateProvider(v35)::CL,36135
27407 :: CALL :: call :: V :: v40.printStackTrace()::
27665 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.getName()::CE,27666:CD,27672:CD,27676
27666 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.UnsupportedDurationField.getName()::JM,18825:JM,19290:JM,19295:JM,19311
27672 :: CALL :: call :: Ljava/lang/String :: v5 = v3.getName()::JM,27676:CL,36419
27676 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,27666
27678 :: ENTR :: entry :: null :: org.joda.time.field.BaseDurationField.getType()::CE,27679:CD,27685
27679 :: EXIT :: exit :: Lorg/joda/time/DurationFieldType :: org.joda.time.field.BaseDurationField.getType()::JM,19117:JM,19164
27682 :: EXPR :: reference :: Lorg/joda/time/DurationFieldType :: v3 = p0 $null .iType::DD,27685
27685 :: NORM :: compound :: Lorg/joda/time/DurationFieldType :: return v3::CF,27679
29301 :: EXPR :: modify :: I :: p0 $null .iStandardOffset = p2 $null ::
29304 :: EXPR :: modify :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: p0 $null .iStartRecurrence = p3 $null ::
29307 :: EXPR :: modify :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: p0 $null .iEndRecurrence = p4 $null ::
29331 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iNameKey = p2 $null ::
29334 :: EXPR :: modify :: I :: p0 $null .iWallOffset = p3 $null ::
29337 :: EXPR :: modify :: I :: p0 $null .iStandardOffset = p4 $null ::
29523 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.getNameKey()::CE,29524:CD,29530
29524 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.getNameKey()::JM,22953
29527 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $null .iNameKey::DD,29530
29530 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,29524
29532 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.getSaveMillis()::CE,29533:CD,29539
29533 :: EXIT :: exit :: I :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.getSaveMillis()::JM,22646
29536 :: EXPR :: reference :: I :: v3 = p0 $null .iSaveMillis::DD,29539
29539 :: NORM :: compound :: I :: return v3::CF,29533
29595 :: EXPR :: modify :: [J :: p0 $null .iTransitions = p2 $null ::
29598 :: EXPR :: modify :: [I :: p0 $null .iWallOffsets = p3 $null ::
29601 :: EXPR :: modify :: [I :: p0 $null .iStandardOffsets = p4 $null ::
29604 :: EXPR :: modify :: [Ljava/lang/String :: p0 $null .iNameKeys = p5 $null ::
29607 :: EXPR :: modify :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: p0 $null .iTailZone = p6 $null ::
29636 :: EXPR :: reference :: I :: v7 = org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask::DD,29638
29638 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 + #(1)::CF,29639
29639 :: NORM :: declaration :: [Lorg/joda/time/tz/CachedDateTimeZone$Info :: v10 = new org.joda.time.tz.CachedDateTimeZone$Info[]::DD,29640
29640 :: EXPR :: modify :: [Lorg/joda/time/tz/CachedDateTimeZone$Info :: p0 $null .iInfoCache = v10::
29643 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = p1 $null ::
29654 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getMinYear()::CF,29655:CD,29658
29655 :: EXIT :: exit :: I :: org.joda.time.chrono.GregorianChronology.getMinYear()::JM,56841:JM,56882
29658 :: NORM :: compound :: I :: return #(-292275054)::CF,29655
29660 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getMaxYear()::CF,29661:CD,29664
29661 :: EXIT :: exit :: I :: org.joda.time.chrono.GregorianChronology.getMaxYear()::JM,24225:JM,24264
29664 :: NORM :: compound :: I :: return #(292278993)::CF,29661
29666 :: ENTR :: entry :: null :: org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)::JM,37893
29705 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.setYear(long,int)::CE,29706:CD,29711:CD,29716:CD,29722:CD,29749:CD,29756:CD,29757:CD,29758
29706 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicGJChronology.setYear(long,int)::JM,21690:JM,22526:JM,52163:JM,60307
29711 :: CALL :: call :: I :: v6 = p0 $null .getYear(p1 $null )::CL,16221
29716 :: CALL :: call :: I :: v8 = p0 $null .getDayOfYear(p1 $null , v6)::CL,24396
29722 :: CALL :: call :: I :: v10 = p0 $null .getMillisOfDay(p1 $null )::JM,29756:CL,30938
29749 :: CALL :: call :: J :: v25 = p0 $null .getYearMonthDayMillis(p2 $null , #(1), v23)::JM,29757:CL,30902
29756 :: EXPR :: assign :: J :: v26 = CONVERT I to J v10::CF,29757
29757 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 + v26::DD,29758
29758 :: NORM :: compound :: J :: return v27::DD,29706
29795 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.getRemainder(int)::
29826 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)::CE,29827:CD,29832:CD,29836:CD,29846:CD,29853:CD,29859
29827 :: EXIT :: exit :: J :: org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)::JM,21745:JM,22023:JM,22379:JM,29887
29832 :: CALL :: call :: I :: v7 = p0 $null .getMaximumValue()::CL,24318
29836 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , #(0), v7)::CL,29666
29846 :: CALL :: call :: I :: v12 = v10.get(p1 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,16137:CL,9744
29853 :: CALL :: call :: J :: v16 = p0 $null .set(p1 $null , v14)::JM,29859:CL,29872
29859 :: NORM :: compound :: J :: return v16::DD,29827
29872 :: ENTR :: entry :: null :: org.joda.time.field.DecoratedDateTimeField.set(long,int)::CE,29873:CD,29881:CD,29887
29873 :: EXIT :: exit :: J :: org.joda.time.field.DecoratedDateTimeField.set(long,int)::JM,21791:JM,21875:JM,29859
29881 :: CALL :: call :: J :: v7 = v5.set(p1 $null , p2 $null )::JM,29887:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,29826:CL,22306:CL,22490:CL,21805
29887 :: NORM :: compound :: J :: return v7::DD,29873
29891 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.getZone()::CE,29892:CD,29898
29892 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.chrono.AssembledChronology.getZone()::JM,29903:JM,33129:JM,37982:JM,47403:JM,47443:JM,48749
29895 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v3 = p0 $null .iBase::DD,29898
29898 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 15::CD,29899:CD,29903:CD,29904
29899 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = v3.getZone()::JM,29903:CL,29922:CL,29911:CL,29891
29903 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v6::CF,29892
29904 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return #(null)::CF,29892
29911 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.getZone()::CE,29912:CD,29915:CD,29919:CD,29920
29912 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.chrono.ZonedChronology.getZone()::JM,29903:JM,33129:JM,37982
29915 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $null .getParam()::JM,29919:CL,37960
29919 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::CF,29920
29920 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v5::CF,29912
29922 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.getZone()::CE,29923:CD,29926:CD,29930
29923 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.chrono.GregorianChronology.getZone()::JM,29903:JM,33129:JM,37982:JM,47516
29926 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v4 = p0 $null .getZone()::JM,29930:CL,37969
29930 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v4::CF,29923
29991 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getType()::CE,29992:CD,29998
29992 :: EXIT :: exit :: Lorg/joda/time/DateTimeFieldType :: org.joda.time.field.DelegatedDateTimeField.getType()::JM,62778
29995 :: EXPR :: reference :: Lorg/joda/time/DateTimeFieldType :: v3 = p0 $null .iType::DD,29998
29998 :: NORM :: compound :: Lorg/joda/time/DateTimeFieldType :: return v3::CF,29992
30026 :: ENTR :: entry :: null :: org.joda.time.DateTimeFieldType.StandardDateTimeFieldType.getField(org.joda.time.Chronology)::CD,30031:CD,30038
30031 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = getChronology(p1 $null )::CL,25475
30035 :: EXPR :: reference :: B :: v6 = p0 $null .iOrdinal::DD,30038
30038 :: PRED :: IF :: null :: switch v6::CD,30039:CD,30044:CD,30049:CD,30054:CD,30059:CD,30064:CD,30069:CD,30074:CD,30079:CD,30084:CD,30089:CD,30094:CD,30099:CD,30104:CD,30109:CD,30114:CD,30119:CD,30124:CD,30129:CD,30134:CD,30139:CD,30144:CD,30149
30039 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v54 = v5.era()::CL,38001:CL,34319
30044 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v52 = v5.yearOfEra()::CL,38010:CL,34265
30049 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v50 = v5.centuryOfEra()::CL,38019:CL,34301
30054 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v48 = v5.yearOfCentury()::CL,34283:CL,38028
30059 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v46 = v5.year()::CL,34247:CL,9390
30064 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v44 = v5.dayOfYear()::CL,38037:CL,34157
30069 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v42 = v5.monthOfYear()::CL,34382:CL,34229
30074 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v40 = v5.dayOfMonth()::CL,34139:CL,34391
30079 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v38 = v5.weekyearOfCentury()::CL,38046:CL,34211
30084 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v36 = v5.weekyear()::CL,38055:CL,34193
30089 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v34 = v5.weekOfWeekyear()::CL,38064:CL,34175
30094 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v32 = v5.dayOfWeek()::CL,30828:CL,34121
30099 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v30 = v5.halfdayOfDay()::CL,38073:CL,34103
30104 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v28 = v5.hourOfHalfday()::CL,34067:CL,38082
30109 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v26 = v5.clockhourOfHalfday()::CL,34085:CL,38091
30114 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v24 = v5.clockhourOfDay()::CL,34049:CL,38100
30119 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v22 = v5.hourOfDay()::CL,34337:CL,34031
30124 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v20 = v5.minuteOfDay()::CL,34013:CL,38109
30129 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v18 = v5.minuteOfHour()::CL,34346:CL,33995
30134 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v16 = v5.secondOfDay()::CL,38118:CL,33977
30139 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v14 = v5.secondOfMinute()::CL,34355:CL,33959
30144 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v12 = v5.millisOfDay()::CL,33941:CL,34373
30149 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v10 = v5.millisOfSecond()::CL,33923:CL,34364
30185 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)::CE,30186:CD,30191:CD,30192:CD,30193:CD,30194:CD,30298:CD,30299:CD,30303:CD,30308:CD,30313
30186 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)::JM,38503
30191 :: EXPR :: assign :: I :: v5 = CONVERT J to I p2 $null ::DD,30192
30192 :: EXPR :: assign :: J :: v6 = CONVERT I to J v5::DD,30193
30193 :: EXPR :: assign :: Z :: v7 = v6 == p2 $null ::DD,30194
30194 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 21::CD,30195:CD,30201:CD,30205:CD,30210:CD,30214:CD,30222:CD,30327:CD,30347:CD,30354:CD,30355
30195 :: CALL :: call :: J :: v92 = p0 $null .add(p1 $null , v5)::JM,30201:CL,38127
30201 :: NORM :: compound :: J :: return v92::DD,30186
30205 :: CALL :: call :: I :: v11 = v9.getMillisOfDay(p1 $null )::JM,30210:CL,30938
30210 :: EXPR :: assign :: J :: v12 = CONVERT I to J v11::DD,30354
30214 :: CALL :: call :: I :: v15 = v13.getYear(p1 $null )::CL,16221
30222 :: CALL :: call :: I :: v18 = v16.getMonthOfYear(p1 $null , v15)::CL,24016
30298 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v80 = new java.lang.IllegalArgumentException::
30299 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
30303 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(#(Magnitude of add amou...))::
30308 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v85.append(p2 $null )::JM,30191
30313 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
30327 :: CALL :: call :: I :: v71 = v69.getDayOfMonth(p1 $null , v15, v18)::CL,24472
30347 :: CALL :: call :: J :: v78 = v76.getYearMonthDayMillis(v67, v68, v75)::JM,30354:CL,30902
30354 :: EXPR :: assign :: Ljava/lang/Object :: v79 = v78 + v12::CF,30355
30355 :: NORM :: compound :: J :: return v79::DD,30186
30444 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.add(long,long)::CD,30450:CD,30454
30450 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .getDurationField()::CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38362:CL,38411
30454 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::CL,38532:CL,38432:CL,38488:CL,38507:CL,38521:CL,38457
30464 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.add(long,long)::CD,30470:CD,30476:CD,30487
30470 :: CALL :: call :: J :: v6 = p0 $null .add(p1 $null , p2 $null )::CL,30444
30476 :: CALL :: call :: I :: v8 = p0 $null .get(v6)::CL,9399
30487 :: CALL :: call :: V :: verifyValueBounds(p0 $null , v8, v9, v10)::CL,29666
30504 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.add(long,long)::CD,30513
30510 :: EXPR :: reference :: Z :: v5 = p0 $null .iTimeField::DD,30513
30513 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 37::CD,30514:CD,30524:CD,30536:CD,30544:CD,30553
30514 :: CALL :: call :: I :: v17 = p0 $null .getOffsetToAdd(p1 $null )::CL,38582
30524 :: CALL :: call :: J :: v22 = v18.add(v20, p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30536 :: CALL :: call :: J :: v9 = v7.convertUTCToLocal(p1 $null )::CL,15971
30544 :: CALL :: call :: J :: v12 = v10.add(v9, p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30553 :: CALL :: call :: J :: v15 = v13.convertLocalToUTC(v12, #(0), p1 $null )::CL,30729
30584 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.add(long,long)::CD,30594
30594 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::CL,38532:CL,38432:CL,38488:CL,38507:CL,38521:CL,38457
30604 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,long)::CE,30605:CD,30614:CD,30620
30605 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,long)::JM,38503
30614 :: CALL :: call :: J :: v8 = p0 $null .add(p1 $null , v6)::JM,30620:CL,38676
30620 :: NORM :: compound :: J :: return v8::DD,30605
30624 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.add(long,long)::CD,30633
30633 :: CALL :: call :: J :: v7 = v5.add(p1 $null , p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30643 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.add(long,long)::CE,30644:CD,30653:CD,30659
30644 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.add(long,long)::JM,38503
30653 :: CALL :: call :: J :: v8 = p0 $null .add(p1 $null , v6)::JM,30659:CL,38705
30659 :: NORM :: compound :: J :: return v8::DD,30644
30663 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.add(long,long)::CD,30678
30678 :: CALL :: call :: J :: v11 = v6.add(p1 $null , v9)::CL,30689:CL,30444:CL,30663:CL,30624:CL,38742:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30689 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.add(long,long)::CD,30699
30699 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,38742:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30709 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,long)::CD,30719
30719 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,38742:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
30729 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)::CE,30730:CD,30736:CD,30741:CD,30742:CD,30743:CD,30748
30730 :: EXIT :: exit :: J :: org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)::JM,21961:JM,22473:JM,44416:JM,48104:JM,51991
30736 :: CALL :: call :: I :: v7 = p0 $null .getOffset(p3 $null )::JM,30741:JM,30748:CL,22651:CL,22661:CL,22668:CL,22544
30741 :: EXPR :: assign :: J :: v8 = CONVERT I to J v7::CF,30742
30742 :: EXPR :: assign :: Ljava/lang/Object :: v9 = p1 $null  - v8::DD,30749
30743 :: CALL :: call :: I :: v11 = p0 $null .getOffset(v9)::JM,30748:CL,22651:CL,22661:CL,22668:CL,22544
30748 :: PRED :: IF :: Z :: if (v11 != v7) goto 36::CD,30749:CD,30750:CD,30756
30749 :: NORM :: compound :: J :: return v9::DD,30730
30750 :: CALL :: call :: J :: v13 = p0 $null .convertLocalToUTC(p1 $null , p2 $null )::JM,30756:CL,38762
30756 :: NORM :: compound :: J :: return v13::DD,30730
30798 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getWeeksInYear(int)::CE,30799:CD,30803:CD,30809:CD,30814:CD,30815:CD,30816:CD,30817
30799 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getWeeksInYear(int)::JM,24178
30803 :: CALL :: call :: J :: v5 = p0 $null .getFirstWeekOfYearMillis(p1 $null )::JM,30814:CL,31961
30809 :: CALL :: call :: J :: v9 = p0 $null .getFirstWeekOfYearMillis(v7)::JM,30814:CL,31961
30814 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v9 - v5::DD,30815
30815 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 / #(604800000 l)::CF,30816
30816 :: EXPR :: assign :: I :: v13 = CONVERT J to I v12::CF,30817
30817 :: NORM :: compound :: I :: return v13::DD,30799
30828 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.dayOfWeek()::CE,30829:CD,30835
30829 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.dayOfWeek()::JM,32421
30832 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iDayOfWeek::DD,30835
30835 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,30829
30837 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int)::CD,30843:CD,30849
30843 :: CALL :: call :: I :: v6 = p0 $null .getMonthOfYear(p1 $null , p2 $null )::CL,24016
30849 :: CALL :: call :: I :: v8 = p0 $null .getDayOfMonth(p1 $null , p2 $null , v6)::CL,24472
30865 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)::CE,30866:CD,30871:CD,30876:JM,30887:JM,30879
30866 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)::JM,50233
30871 :: CALL :: call :: Z :: v6 = p0 $null .isLeapYear(p1 $null )::JM,30876:CL,24447
30876 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,30877:CD,30879:CD,30884:CD,30885:CD,30887:CD,30892
30877 :: EXPR :: reference :: [I :: v12 = org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY::CF,30879
30879 :: EXPR :: assign :: Ljava/lang/Object :: v13 = p2 $null  - #(1)::
30880 :: EXPR :: reference :: I :: v14 = v12[v13]::DD,30884
30884 :: NORM :: compound :: I :: return v14::CF,30866
30885 :: EXPR :: reference :: [I :: v8 = org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY::CF,30887
30887 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p2 $null  - #(1)::
30888 :: EXPR :: reference :: I :: v11 = v8[v10]::DD,30892
30892 :: NORM :: compound :: I :: return v11::CF,30866
30902 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)::CE,30903:CD,30909:CD,30914:CD,30920:CD,30921:CD,30922:CD,30923:CD,30924:CD,30925
30903 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)::JM,22279:JM,29757:JM,30354:JM,38261
30909 :: CALL :: call :: J :: v7 = p0 $null .getYearMillis(p1 $null )::JM,30920:CL,24431
30914 :: CALL :: call :: J :: v9 = p0 $null .getTotalMillisByYearMonth(p1 $null , p2 $null )::JM,30920:CL,32076
30920 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::DD,30924:CF,30921
30921 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p3 $null  - #(1)::CF,30922
30922 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::DD,30923
30923 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 * #(86400000 l)::CF,30924
30924 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v10 + v15::CF,30925
30925 :: NORM :: compound :: J :: return v16::DD,30903
30938 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getMillisOfDay(long)::CF,30939:CD,30943:CD,30944:JM,30945:JM,30948
30939 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getMillisOfDay(long)::JM,22278:JM,29756:JM,30210:JM,38143
30943 :: EXPR :: assign :: Z :: v5 = p1 $null  == #(0 l)::DD,30944
30944 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 17::CD,30945:CD,30946:CD,30947:CD,30948:CD,30949:CD,30950:CD,30951:CD,30952
30945 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p1 $null  % #(86400000 l)::CF,30946
30946 :: EXPR :: assign :: I :: v15 = CONVERT J to I v14::CF,30947
30947 :: NORM :: compound :: I :: return v15::CF,30939
30948 :: EXPR :: assign :: Ljava/lang/Object :: v9 = p1 $null  + #(1 l)::DD,30949
30949 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 % #(86400000 l)::CF,30950
30950 :: EXPR :: assign :: I :: v12 = CONVERT J to I v11::CF,30951
30951 :: EXPR :: assign :: Ljava/lang/Object :: v13 = #(86399999) + v12::CF,30952
30952 :: NORM :: compound :: I :: return v13::CF,30939
30962 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMinimumValue()::CF,30963:CD,30966
30963 :: EXIT :: exit :: I :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
30966 :: NORM :: compound :: I :: return #(1)::CF,30963
30968 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()::CF,30969:CD,30972
30969 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
30972 :: NORM :: compound :: I :: return #(1)::CF,30969
30974 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMinimumValue()::CF,30975:CD,30978
30975 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
30978 :: NORM :: compound :: I :: return #(1)::CF,30975
30980 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMinimumValue()::CF,30981:CD,30984
30981 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
30984 :: NORM :: compound :: I :: return #(1)::CF,30981
30986 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)::CD,30995:CD,30999:CD,31000:JM,31001
30995 :: CALL :: call :: I :: v7 = v5.getDaysInYearMax()::JM,30999:CL,32008
30999 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 - #(1)::DD,31000
31000 :: PRED :: IF :: Z :: if (p2 $null  > v9) goto 24::CD,31001:CD,31002
31001 :: PRED :: IF :: Z :: if (p2 $null  >= #(1)) goto 32::CD,31002
31002 :: CALL :: call :: I :: v11 = p0 $null .getMaximumValue(p1 $null )::CL,38887
31020 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValueForSet(long,int)::CD,31026
31026 :: PRED :: IF :: Z :: if (p2 $null  <= #(52)) goto 16::CD,31027
31027 :: CALL :: call :: I :: v7 = p0 $null .getMaximumValue(p1 $null )::CL,38914
31040 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.getMaximumValueForSet(long,int)::CD,31046
31046 :: CALL :: call :: I :: v6 = p0 $null .getMaximumValue(p1 $null )::CL,38887:CL,38952:CL,38914
31054 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(long,int)::CD,31063
31063 :: CALL :: call :: I :: v7 = v5.getDaysInMonthMaxForSet(p1 $null , p2 $null )::CL,38968
31079 :: CALL :: call :: Ljava/lang/String :: v6 = createMessage(p1 $null , p2 $null )::CL,38991
31092 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getType()::CE,31093:CD,31099
31093 :: EXIT :: exit :: Lorg/joda/time/DateTimeFieldType :: org.joda.time.field.UnsupportedDateTimeField.getType()::JM,62778
31096 :: EXPR :: reference :: Lorg/joda/time/DateTimeFieldType :: v3 = p0 $null .iType::DD,31099
31099 :: NORM :: compound :: Lorg/joda/time/DateTimeFieldType :: return v3::DD,31093
31101 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getType()::CE,31102:CD,31108
31102 :: EXIT :: exit :: Lorg/joda/time/DateTimeFieldType :: org.joda.time.field.BaseDateTimeField.getType()::JM,62778
31105 :: EXPR :: reference :: Lorg/joda/time/DateTimeFieldType :: v3 = p0 $null .iType::DD,31108
31108 :: NORM :: compound :: Lorg/joda/time/DateTimeFieldType :: return v3::CF,31102
31121 :: CALL :: call :: Ljava/lang/String :: v10 = createMessage(v7, p2 $null , #(null), #(null), p3 $null )::CL,39084
31188 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.findMatchingRecurrence(long)::CD,31206:CD,31219
31206 :: CALL :: call :: J :: v10 = v5.next(p1 $null , v4, v8)::CL,31498
31219 :: CALL :: call :: J :: v18 = v6.next(p1 $null , v4, v16)::CL,31498
31258 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.getInfo(long)::CD,31263:CD,31264:CD,31268:CD,31270:CD,31275
31263 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $null  ? #(32)::CF,31264
31264 :: EXPR :: assign :: I :: v6 = CONVERT J to I v5::DD,31270:DD,31281
31265 :: EXPR :: reference :: [Lorg/joda/time/tz/CachedDateTimeZone$Info :: v7 = p0 $null .iInfoCache::
31268 :: EXPR :: reference :: I :: v8 = org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask::CF,31270
31270 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 && v8::
31271 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v7[v9]::DD,31275
31275 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 46::CD,31279:CD,31280:CD,31281:CD,31282
31276 :: EXPR :: reference :: J :: v12 = v10.iPeriodStart::DD,31279
31279 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v12 ? #(32)::CF,31280
31280 :: EXPR :: assign :: I :: v14 = CONVERT J to I v13::DD,31281
31281 :: PRED :: IF :: Z :: if (v14 == v6) goto 60::CD,31282
31282 :: CALL :: call :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v16 = p0 $null .createInfo(p1 $null )::JM,31287:CL,39231
31287 :: EXPR :: modify :: Ljava/lang/Object :: v7[v9] = v16::
31315 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.Info.getOffset(long)::CE,31316:CD,31323:JM,31330
31316 :: EXIT :: exit :: I :: org.joda.time.tz.CachedDateTimeZone.Info.getOffset(long)::JM,22683:JM,31362
31320 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v4 = p0 $null .iNextInfo::DD,31323
31323 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 20::CD,31330:CD,31331:CD,31335:CD,31353
31324 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v6 = p0 $null .iNextInfo::
31327 :: EXPR :: reference :: J :: v7 = v6.iPeriodStart::DD,31330
31330 :: EXPR :: assign :: Z :: v8 = p1 $null  == v7::DD,31331
31331 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 49::CD,31335:CD,31353:CD,31357:CD,31362
31332 :: EXPR :: reference :: I :: v13 = p0 $null .iOffset::DD,31335
31335 :: PRED :: IF :: Z :: if (v13 != #(-2147483648)) goto 44::CD,31342
31342 :: CALL :: call :: I :: v18 = v15.getOffset(v16)::JM,31347:CL,22544
31347 :: EXPR :: modify :: I :: p0 $null .iOffset = v18::
31350 :: EXPR :: reference :: I :: v19 = p0 $null .iOffset::DD,31353
31353 :: NORM :: compound :: I :: return v19::DD,31316
31357 :: CALL :: call :: I :: v12 = v10.getOffset(p1 $null )::JM,31362:CL,31315
31362 :: NORM :: compound :: I :: return v12::DD,31316
31376 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.Info.getStandardOffset(long)::CD,31384:JM,31391
31381 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v4 = p0 $null .iNextInfo::DD,31384
31384 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 20::CD,31391:CD,31392:CD,31396
31385 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v6 = p0 $null .iNextInfo::
31388 :: EXPR :: reference :: J :: v7 = v6.iPeriodStart::DD,31391
31391 :: EXPR :: assign :: Z :: v8 = p1 $null  == v7::DD,31392
31392 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 49::CD,31396:CD,31418
31393 :: EXPR :: reference :: I :: v13 = p0 $null .iStandardOffset::DD,31396
31396 :: PRED :: IF :: Z :: if (v13 != #(-2147483648)) goto 44::CD,31403
31403 :: CALL :: call :: I :: v18 = v15.getStandardOffset(v16)::JM,31408:CL,22687
31408 :: EXPR :: modify :: I :: p0 $null .iStandardOffset = v18::
31418 :: CALL :: call :: I :: v12 = v10.getStandardOffset(p1 $null )::CL,31376
31437 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.Info.getNameKey(long)::CE,31438:CD,31445:JM,31452
31438 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.CachedDateTimeZone.Info.getNameKey(long)::JM,22918:JM,31484
31442 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v4 = p0 $null .iNextInfo::DD,31445
31445 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 20::CD,31452:CD,31453:CD,31457:CD,31475
31446 :: EXPR :: reference :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v6 = p0 $null .iNextInfo::
31449 :: EXPR :: reference :: J :: v7 = v6.iPeriodStart::DD,31452
31452 :: EXPR :: assign :: Z :: v8 = p1 $null  == v7::DD,31453
31453 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 47::CD,31457:CD,31475:CD,31479:CD,31484
31454 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $null .iNameKey::DD,31457
31457 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 42::CD,31464
31464 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getNameKey(v15)::JM,31469:CL,22818
31469 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iNameKey = v17::
31472 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $null .iNameKey::DD,31475
31475 :: NORM :: compound :: Ljava/lang/String :: return v18::DD,31438
31479 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getNameKey(p1 $null )::JM,31484:CL,31437
31484 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,31438
31498 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.next(long,int,int)::CE,31499:CD,31508:CD,31515
31499 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.next(long,int,int)::JM,23089:JM,23118:JM,23120:JM,23106
31508 :: CALL :: call :: J :: v8 = v6.next(p1 $null , p2 $null , p3 $null )::JM,31515:CL,39305
31515 :: NORM :: compound :: J :: return v8::DD,31499
31529 :: CALL :: call :: Lorg/joda/time/Chronology :: v7 = p0 $null .checkChronology(p2 $null )::CL,39517
31549 :: CALL :: call :: V :: p0 $null .adjustForMinMax()::CL,39536
31562 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.previous(long,int,int)::CE,31563:CD,31572:CD,31579
31563 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.previous(long,int,int)::JM,23361:JM,23331:JM,23363:JM,23348
31572 :: CALL :: call :: J :: v8 = v6.previous(p1 $null , p2 $null , p3 $null )::JM,31579:CL,39569
31579 :: NORM :: compound :: J :: return v8::DD,31563
31681 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput,java.lang.String)::CE,31682:CD,31686:CD,31690:CD,31740
31682 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput,java.lang.String)::JM,23527:JM,23538
31686 :: CALL :: call :: I :: v5 = p1 $null .readUnsignedByte()::JM,31690
31690 :: PRED :: IF :: null :: switch v5::CF,31691:CD,31692:CD,31696:CD,31701:JM,29331:JM,29334:JM,16663:JM,29337:JM,16669:CD,31715:CD,31720:CD,31723:CD,31724:CD,31729:CD,31733:CD,31734:CD,31739:CD,31746
31691 :: NORM :: declaration :: Lorg/joda/time/tz/FixedDateTimeZone :: v15 = new org.joda.time.tz.FixedDateTimeZone::DD,31746:JM,31690
31692 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $null .readUTF()::JM,31690
31696 :: CALL :: call :: J :: v19 = readMillis(p1 $null )::CL,40175
31701 :: CALL :: call :: J :: v22 = readMillis(p1 $null )::CL,40175
31715 :: CALL :: call :: Z :: v27 = v15.equals(v25)::JM,31720:CL,23665
31720 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 80::CF,31746:CD,31721
31721 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v29 = org.joda.time.DateTimeZone.UTC::DD,31746
31723 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v30::DD,31682
31724 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone :: v12 = readFrom(p1 $null , p2 $null )::CL,40298
31729 :: CALL :: call :: Lorg/joda/time/tz/CachedDateTimeZone :: v14 = forZone(v12)::JM,31733:CL,21636
31733 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v14::DD,31682
31734 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone :: v10 = readFrom(p1 $null , p2 $null )::JM,31739:CL,40298
31739 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v10::DD,31682
31740 :: NORM :: declaration :: Ljava/io/IOException :: v6 = new java.io.IOException::
31746 :: EXPR :: assign :: null :: PHI v30 = v15, v29::CF,31723
31762 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.equals(java.lang.Object)::CE,31763:CD,31767:JM,31769:JM,31771
31763 :: EXIT :: exit :: Z :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.equals(java.lang.Object)::JM,23588:JM,23600
31767 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,31768:CD,31769:CD,31770
31768 :: NORM :: compound :: Z :: return #(1)::CF,31763
31769 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.DateTimeZoneBuilder$Recurrence::DD,31770
31770 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 65::CD,31771:CD,31778:CD,31804:CD,31805:CD,31806
31771 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
31772 :: EXPR :: reference :: I :: v7 = p0 $null .iSaveMillis::DD,31778
31775 :: EXPR :: reference :: I :: v8 = v6.iSaveMillis::DD,31778
31778 :: PRED :: IF :: Z :: if (v7 != v8) goto 63::CD,31785:CD,31790:CD,31806
31779 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $null .iNameKey::JM,31790
31782 :: EXPR :: reference :: Ljava/lang/String :: v10 = v6.iNameKey::JM,31790
31785 :: CALL :: call :: Z :: v12 = v9.equals(v10)::JM,31790
31790 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 63::CD,31797:CD,31802:CD,31806
31797 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,31802:CL,40468
31802 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 63::CD,31806
31804 :: NORM :: compound :: Z :: return v18::CF,31763
31805 :: NORM :: compound :: Z :: return #(0)::CF,31763
31806 :: EXPR :: assign :: null :: PHI v18 = #(1), #(0)::CF,31804
31838 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoLogger.1.initialValue()::CF,31839:CD,31842:CD,31846
31839 :: EXIT :: exit :: Ljava/lang/Object :: org.joda.time.tz.ZoneInfoLogger.1.initialValue()::
31842 :: CALL :: call :: Ljava/lang/Boolean :: v4 = p0 $null .initialValue()::JM,31846:CL,40603
31846 :: NORM :: compound :: Ljava/lang/Object :: return v4::CF,31839
31961 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)::CE,31962:CD,31966:CD,31971:CD,31979:CD,31980
31962 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)::JM,24170:JM,24188:JM,24185:JM,30814
31966 :: CALL :: call :: J :: v5 = p0 $null .getYearMillis(p1 $null )::JM,31984:JM,31989:CL,24431
31971 :: CALL :: call :: I :: v7 = p0 $null .getDayOfWeek(v5)::JM,31986:JM,31980:JM,31981:CL,16012
31976 :: EXPR :: reference :: I :: v9 = p0 $null .iMinDaysInFirstWeek::DD,31979
31979 :: EXPR :: assign :: Ljava/lang/Object :: v10 = #(8) - v9::CF,31980
31980 :: PRED :: IF :: Z :: if (v7 <= v10) goto 42::CD,31981:CD,31982:CD,31983:CD,31984:CD,31985:CD,31986:CD,31987:CD,31988:CD,31989:CD,31990
31981 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(8) - v7::CF,31982
31982 :: EXPR :: assign :: J :: v18 = CONVERT I to J v17::DD,31983
31983 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v18 * #(86400000 l)::CF,31984
31984 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v5 + v19::CF,31985
31985 :: NORM :: compound :: J :: return v20::DD,31962
31986 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v7 - #(1)::CF,31987
31987 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::DD,31988
31988 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 * #(86400000 l)::CF,31989
31989 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v5 - v15::CF,31990
31990 :: NORM :: compound :: J :: return v16::DD,31962
32008 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDaysInYearMax()::CF,32009:CD,32012
32009 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDaysInYearMax()::JM,24316:JM,30999
32012 :: NORM :: compound :: I :: return #(366)::CF,32009
32014 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDaysInMonthMax()::CF,32015:CD,32018
32015 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getDaysInMonthMax()::JM,24352
32018 :: NORM :: compound :: I :: return #(31)::CF,32015
32020 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getYearInfo(int)::CE,32021:CD,32028:CD,32033:CD,32057:CD,32058:JM,32052:JM,32037
32021 :: EXIT :: exit :: Lorg/joda/time/chrono/BasicChronology$YearInfo :: org.joda.time.chrono.BasicChronology.getYearInfo(int)::
32025 :: EXPR :: reference :: [Lorg/joda/time/chrono/BasicChronology$YearInfo :: v4 = p0 $null .iYearInfoCache::
32028 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $null  && #(1023)::
32029 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v4[v6]::DD,32033:DD,32058
32033 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 23::CF,32038:CD,32037:JM,40960:JM,40963:CD,32052:CD,32058
32034 :: EXPR :: reference :: I :: v9 = v7.iYear::DD,32037
32037 :: PRED :: IF :: Z :: if (v9 == p1 $null ) goto 49::CF,32058:CF,32038:JM,40960:JM,40963:CD,32052
32038 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicChronology$YearInfo :: v10 = new org.joda.time.chrono.BasicChronology$YearInfo::DD,32053:DD,32058
32049 :: EXPR :: reference :: [Lorg/joda/time/chrono/BasicChronology$YearInfo :: v14 = p0 $null .iYearInfoCache::
32052 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p1 $null  && #(1023)::
32053 :: EXPR :: modify :: Ljava/lang/Object :: v14[v15] = v10::
32057 :: NORM :: compound :: Lorg/joda/time/chrono/BasicChronology$YearInfo :: return v16::DD,32021
32058 :: EXPR :: assign :: null :: PHI v16 = v7, v10::CF,32057
32076 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)::CE,32077:CD,32082:CD,32087:JM,32098:JM,32090
32077 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)::JM,24490:JM,30920:JM,54644
32082 :: CALL :: call :: Z :: v6 = p0 $null .isLeapYear(p1 $null )::JM,32087:CL,24447
32087 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,32088:CD,32090:CD,32095:CD,32096:CD,32098:CD,32103
32088 :: EXPR :: reference :: [J :: v12 = org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY::CF,32090
32090 :: EXPR :: assign :: Ljava/lang/Object :: v13 = p2 $null  - #(1)::
32091 :: EXPR :: reference :: J :: v14 = v12[v13]::DD,32095
32095 :: NORM :: compound :: J :: return v14::CF,32077
32096 :: EXPR :: reference :: [J :: v8 = org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY::CF,32098
32098 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p2 $null  - #(1)::
32099 :: EXPR :: reference :: J :: v11 = v8[v10]::DD,32103
32103 :: NORM :: compound :: J :: return v11::CF,32077
32131 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.Fields.copyFieldsFrom(org.joda.time.Chronology)::CD,32136:CD,32140:CD,32144:CD,32148:CD,32152:CD,32156:CD,32160:CD,32164:CD,32168:CD,32172:CD,32176:CD,32180:CD,32184:CD,32188:CD,32192:CD,32196:CD,32200:CD,32204:CD,32208:CD,32212:CD,32216:CD,32220:CD,32224:CD,32228:CD,32232:CD,32236:CD,32240:CD,32244:CD,32248:CD,32252:CD,32256:CD,32260:CD,32264:CD,32268:CD,32272:CD,32276:CD,32280:CD,32284:CD,32288:CD,32292:CD,32296:CD,32300:CD,32304:CD,32308:CD,32312:CD,32316:CD,32320:CD,32324:CD,32328:CD,32332:CD,32336:CD,32340:CD,32344:CD,32348:CD,32352:CD,32356:CD,32360:CD,32364:CD,32368:CD,32372:CD,32376:CD,32380:CD,32384:CD,32388:CD,32392:CD,32396:CD,32400:CD,32404:CD,32408:CD,32412:CD,32416:CD,32420:CD,32424:CD,32428:CD,32432:CD,32436:CD,32440:CD,32444:CD,32448:CD,32452:CD,32456:CD,32460:CD,32464:CD,32468:CD,32472:CD,32476:CD,32480:CD,32484:CD,32488:CD,32492:CD,32496:CD,32500:CD,32504:CD,32508:CD,32512:CD,32516:CD,32520:CD,32524:CD,32528:CD,32532:CD,32536:CD,32540:CD,32544:CD,32548:CD,32552
32136 :: CALL :: call :: Lorg/joda/time/DurationField :: v5 = p1 $null .millis()::JM,32145:CL,40972
32140 :: CALL :: call :: Z :: v7 = isSupported(v5)::JM,32144:CL,40981
32144 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 18::
32145 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .millis = v5::
32148 :: CALL :: call :: Lorg/joda/time/DurationField :: v10 = p1 $null .seconds()::JM,32157:CL,40997
32152 :: CALL :: call :: Z :: v12 = isSupported(v10)::JM,32156:CL,40981
32156 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 35::
32157 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .seconds = v10::
32160 :: CALL :: call :: Lorg/joda/time/DurationField :: v14 = p1 $null .minutes()::JM,32169:CL,41006
32164 :: CALL :: call :: Z :: v16 = isSupported(v14)::JM,32168:CL,40981
32168 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 52::
32169 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .minutes = v14::
32172 :: CALL :: call :: Lorg/joda/time/DurationField :: v18 = p1 $null .hours()::JM,32181:CL,41015
32176 :: CALL :: call :: Z :: v20 = isSupported(v18)::JM,32180:CL,40981
32180 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 69::
32181 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .hours = v18::
32184 :: CALL :: call :: Lorg/joda/time/DurationField :: v22 = p1 $null .halfdays()::JM,32193:CL,41024
32188 :: CALL :: call :: Z :: v24 = isSupported(v22)::JM,32192:CL,40981
32192 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 86::
32193 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .halfdays = v22::
32196 :: CALL :: call :: Lorg/joda/time/DurationField :: v26 = p1 $null .days()::JM,32205:CL,41033
32200 :: CALL :: call :: Z :: v28 = isSupported(v26)::JM,32204:CL,40981
32204 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 103::
32205 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .days = v26::
32208 :: CALL :: call :: Lorg/joda/time/DurationField :: v30 = p1 $null .weeks()::JM,32217:CL,41042
32212 :: CALL :: call :: Z :: v32 = isSupported(v30)::JM,32216:CL,40981
32216 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 120::
32217 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .weeks = v30::
32220 :: CALL :: call :: Lorg/joda/time/DurationField :: v34 = p1 $null .weekyears()::JM,32229:CL,41051
32224 :: CALL :: call :: Z :: v36 = isSupported(v34)::JM,32228:CL,40981
32228 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 137::
32229 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .weekyears = v34::
32232 :: CALL :: call :: Lorg/joda/time/DurationField :: v38 = p1 $null .months()::JM,32241:CL,41060
32236 :: CALL :: call :: Z :: v40 = isSupported(v38)::JM,32240:CL,40981
32240 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 154::
32241 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .months = v38::
32244 :: CALL :: call :: Lorg/joda/time/DurationField :: v42 = p1 $null .years()::JM,32253:CL,41069
32248 :: CALL :: call :: Z :: v44 = isSupported(v42)::JM,32252:CL,40981
32252 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 171::
32253 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .years = v42::
32256 :: CALL :: call :: Lorg/joda/time/DurationField :: v46 = p1 $null .centuries()::JM,32265:CL,41078
32260 :: CALL :: call :: Z :: v48 = isSupported(v46)::JM,32264:CL,40981
32264 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 188::
32265 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .centuries = v46::
32268 :: CALL :: call :: Lorg/joda/time/DurationField :: v50 = p1 $null .eras()::JM,32277:CL,41087
32272 :: CALL :: call :: Z :: v52 = isSupported(v50)::JM,32276:CL,40981
32276 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 205::
32277 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .eras = v50::
32280 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v54 = p1 $null .millisOfSecond()::JM,32289:CL,34364
32284 :: CALL :: call :: Z :: v56 = isSupported(v54)::JM,32288:CL,41096
32288 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 222::
32289 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .millisOfSecond = v54::
32292 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v58 = p1 $null .millisOfDay()::JM,32301:CL,34373
32296 :: CALL :: call :: Z :: v60 = isSupported(v58)::JM,32300:CL,41096
32300 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 239::
32301 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .millisOfDay = v58::
32304 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v62 = p1 $null .secondOfMinute()::JM,32313:CL,34355
32308 :: CALL :: call :: Z :: v64 = isSupported(v62)::JM,32312:CL,41096
32312 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 256::
32313 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .secondOfMinute = v62::
32316 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v66 = p1 $null .secondOfDay()::JM,32325:CL,38118
32320 :: CALL :: call :: Z :: v68 = isSupported(v66)::JM,32324:CL,41096
32324 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 273::
32325 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .secondOfDay = v66::
32328 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v70 = p1 $null .minuteOfHour()::JM,32337:CL,34346
32332 :: CALL :: call :: Z :: v72 = isSupported(v70)::JM,32336:CL,41096
32336 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 290::
32337 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .minuteOfHour = v70::
32340 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v74 = p1 $null .minuteOfDay()::JM,32349:CL,38109
32344 :: CALL :: call :: Z :: v76 = isSupported(v74)::JM,32348:CL,41096
32348 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 307::
32349 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .minuteOfDay = v74::
32352 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v78 = p1 $null .hourOfDay()::JM,32361:CL,34337
32356 :: CALL :: call :: Z :: v80 = isSupported(v78)::JM,32360:CL,41096
32360 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 324::
32361 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .hourOfDay = v78::
32364 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v82 = p1 $null .clockhourOfDay()::JM,32373:CL,38100
32368 :: CALL :: call :: Z :: v84 = isSupported(v82)::JM,32372:CL,41096
32372 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::
32373 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .clockhourOfDay = v82::
32376 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v86 = p1 $null .hourOfHalfday()::JM,32385:CL,38082
32380 :: CALL :: call :: Z :: v88 = isSupported(v86)::JM,32384:CL,41096
32384 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 358::
32385 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .hourOfHalfday = v86::
32388 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v90 = p1 $null .clockhourOfHalfday()::JM,32397:CL,38091
32392 :: CALL :: call :: Z :: v92 = isSupported(v90)::JM,32396:CL,41096
32396 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 375::
32397 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .clockhourOfHalfday = v90::
32400 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v94 = p1 $null .halfdayOfDay()::JM,32409:CL,38073
32404 :: CALL :: call :: Z :: v96 = isSupported(v94)::JM,32408:CL,41096
32408 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 392::
32409 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .halfdayOfDay = v94::
32412 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v98 = p1 $null .dayOfWeek()::JM,32421:CL,30828
32416 :: CALL :: call :: Z :: v100 = isSupported(v98)::JM,32420:CL,41096
32420 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 409::
32421 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .dayOfWeek = v98::
32424 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v102 = p1 $null .dayOfMonth()::JM,32433:CL,34391
32428 :: CALL :: call :: Z :: v104 = isSupported(v102)::JM,32432:CL,41096
32432 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 426::
32433 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .dayOfMonth = v102::
32436 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v106 = p1 $null .dayOfYear()::JM,32445:CL,38037
32440 :: CALL :: call :: Z :: v108 = isSupported(v106)::JM,32444:CL,41096
32444 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 443::
32445 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .dayOfYear = v106::
32448 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v110 = p1 $null .weekOfWeekyear()::JM,32457:CL,38064
32452 :: CALL :: call :: Z :: v112 = isSupported(v110)::JM,32456:CL,41096
32456 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 460::
32457 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .weekOfWeekyear = v110::
32460 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v114 = p1 $null .weekyear()::JM,32469:CL,38055
32464 :: CALL :: call :: Z :: v116 = isSupported(v114)::JM,32468:CL,41096
32468 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 477::
32469 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .weekyear = v114::
32472 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v118 = p1 $null .weekyearOfCentury()::JM,32481:CL,38046
32476 :: CALL :: call :: Z :: v120 = isSupported(v118)::JM,32480:CL,41096
32480 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 494::
32481 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .weekyearOfCentury = v118::
32484 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v122 = p1 $null .monthOfYear()::JM,32493:CL,34382
32488 :: CALL :: call :: Z :: v124 = isSupported(v122)::JM,32492:CL,41096
32492 :: PRED :: IF :: Z :: if (v124 == #(0)) goto 511::
32493 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .monthOfYear = v122::
32496 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v126 = p1 $null .year()::JM,32505:CL,9390
32500 :: CALL :: call :: Z :: v128 = isSupported(v126)::JM,32504:CL,41096
32504 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 528::
32505 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .year = v126::
32508 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v130 = p1 $null .yearOfEra()::JM,32517:CL,38010
32512 :: CALL :: call :: Z :: v132 = isSupported(v130)::JM,32516:CL,41096
32516 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 545::
32517 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .yearOfEra = v130::
32520 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v134 = p1 $null .yearOfCentury()::JM,32529:CL,38028
32524 :: CALL :: call :: Z :: v136 = isSupported(v134)::JM,32528:CL,41096
32528 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 562::
32529 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .yearOfCentury = v134::
32532 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v138 = p1 $null .centuryOfEra()::JM,32541:CL,38019
32536 :: CALL :: call :: Z :: v140 = isSupported(v138)::JM,32540:CL,41096
32540 :: PRED :: IF :: Z :: if (v140 == #(0)) goto 579::
32541 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .centuryOfEra = v138::
32544 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v142 = p1 $null .era()::JM,32553:CL,38001
32548 :: CALL :: call :: Z :: v144 = isSupported(v142)::JM,32552:CL,41096
32552 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 595::
32553 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .era = v142::
32767 :: ENTR :: entry :: null :: org.joda.time.chrono.LenientChronology.assemble(org.joda.time.chrono.AssembledChronology.Fields)::CD,32775:CD,32786:CD,32797:CD,32808:CD,32819:CD,32830:CD,32841:CD,32852:CD,32863:CD,32874:CD,32885:CD,32896:CD,32907:CD,32918:CD,32929:CD,32940:CD,32951:CD,32962:CD,32973:CD,32984:CD,32995:CD,33006:CD,33017
32775 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v6 = p0 $null .convertField(v4)::JM,32780:CL,41112
32780 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .year = v6::
32786 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v9 = p0 $null .convertField(v7)::JM,32791:CL,41112
32791 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfEra = v9::
32797 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v12 = p0 $null .convertField(v10)::JM,32802:CL,41112
32802 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfCentury = v12::
32808 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v15 = p0 $null .convertField(v13)::JM,32813:CL,41112
32813 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .centuryOfEra = v15::
32819 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v18 = p0 $null .convertField(v16)::JM,32824:CL,41112
32824 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .era = v18::
32830 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v21 = p0 $null .convertField(v19)::JM,32835:CL,41112
32835 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfWeek = v21::
32841 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v24 = p0 $null .convertField(v22)::JM,32846:CL,41112
32846 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfMonth = v24::
32852 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v27 = p0 $null .convertField(v25)::JM,32857:CL,41112
32857 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfYear = v27::
32863 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v30 = p0 $null .convertField(v28)::JM,32868:CL,41112
32868 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .monthOfYear = v30::
32874 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v33 = p0 $null .convertField(v31)::JM,32879:CL,41112
32879 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekOfWeekyear = v33::
32885 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v36 = p0 $null .convertField(v34)::JM,32890:CL,41112
32890 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyear = v36::
32896 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v39 = p0 $null .convertField(v37)::JM,32901:CL,41112
32901 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyearOfCentury = v39::
32907 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v42 = p0 $null .convertField(v40)::JM,32912:CL,41112
32912 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfSecond = v42::
32918 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v45 = p0 $null .convertField(v43)::JM,32923:CL,41112
32923 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfDay = v45::
32929 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v48 = p0 $null .convertField(v46)::JM,32934:CL,41112
32934 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfMinute = v48::
32940 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v51 = p0 $null .convertField(v49)::JM,32945:CL,41112
32945 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfDay = v51::
32951 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v54 = p0 $null .convertField(v52)::JM,32956:CL,41112
32956 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfHour = v54::
32962 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v57 = p0 $null .convertField(v55)::JM,32967:CL,41112
32967 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfDay = v57::
32973 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v60 = p0 $null .convertField(v58)::JM,32978:CL,41112
32978 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfDay = v60::
32984 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v63 = p0 $null .convertField(v61)::JM,32989:CL,41112
32989 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfHalfday = v63::
32995 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v66 = p0 $null .convertField(v64)::JM,33000:CL,41112
33000 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfDay = v66::
33006 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v69 = p0 $null .convertField(v67)::JM,33011:CL,41112
33011 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfHalfday = v69::
33017 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v72 = p0 $null .convertField(v70)::JM,33022:CL,41112
33022 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .halfdayOfDay = v72::
33095 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.assemble(org.joda.time.chrono.AssembledChronology.Fields)::CD,33100:CD,33104
33100 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = p0 $null .getBase()::JM,33104:CL,37992
33104 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,33105
33105 :: CALL :: call :: V :: p0 $null .assemble(p1 $null )::CL,41129
33114 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.assemble(org.joda.time.chrono.AssembledChronology.Fields)::CD,33123:CD,33127:CD,33129
33123 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v7 = v5.getZone()::JM,33129:CL,29922:CL,29911:CL,29891
33127 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v8 = org.joda.time.DateTimeZone.UTC::CF,33129
33129 :: PRED :: IF :: Z :: if (v7 != v8) goto 89::CD,33130:JM,49472:JM,17088:JM,49505:JM,49506:JM,49475:JM,25796:JM,49478:JM,17094:JM,49449:JM,49482:JM,49483:JM,49453:JM,49486:JM,49488:JM,49492:JM,49493:JM,17077:JM,49496:JM,25790:CD,33148:CD,33155:JM,41636:JM,41592:CD,33171
33130 :: NORM :: declaration :: Lorg/joda/time/field/DividedDateTimeField :: v9 = new org.joda.time.field.DividedDateTimeField::DD,33142
33142 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .centuryOfEra = v9::
33148 :: CALL :: call :: Lorg/joda/time/DurationField :: v17 = v15.getDurationField()::JM,33152:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
33152 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .centuries = v17::
33155 :: NORM :: declaration :: Lorg/joda/time/field/RemainderDateTimeField :: v18 = new org.joda.time.field.RemainderDateTimeField::DD,33168
33168 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfCentury = v18::
33171 :: NORM :: declaration :: Lorg/joda/time/field/RemainderDateTimeField :: v24 = new org.joda.time.field.RemainderDateTimeField::DD,33188
33188 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyearOfCentury = v24::
33207 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.assemble(org.joda.time.chrono.AssembledChronology.Fields)::CD,33212:CD,33219:CD,33231:CD,33243:CD,33255:CD,33267:CD,33279:CD,33291:CD,33303:CD,33315:CD,33327:CD,33339:CD,33351:CD,33363:CD,33375:CD,33387:CD,33399:CD,33411:CD,33423:CD,33435:CD,33447:CD,33459:CD,33471:CD,33483:CD,33495:CD,33507:CD,33519:CD,33531:CD,33543:CD,33555:CD,33567:CD,33579:CD,33591:CD,33603:CD,33615:CD,33627
33212 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::
33219 :: CALL :: call :: Lorg/joda/time/DurationField :: v8 = p0 $null .convertField(v6, v4)::JM,33225:CL,41655
33225 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .eras = v8::
33231 :: CALL :: call :: Lorg/joda/time/DurationField :: v11 = p0 $null .convertField(v9, v4)::JM,33237:CL,41655
33237 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .centuries = v11::
33243 :: CALL :: call :: Lorg/joda/time/DurationField :: v14 = p0 $null .convertField(v12, v4)::JM,33249:CL,41655
33249 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .years = v14::
33255 :: CALL :: call :: Lorg/joda/time/DurationField :: v17 = p0 $null .convertField(v15, v4)::JM,33261:CL,41655
33261 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .months = v17::
33267 :: CALL :: call :: Lorg/joda/time/DurationField :: v20 = p0 $null .convertField(v18, v4)::JM,33273:CL,41655
33273 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .weekyears = v20::
33279 :: CALL :: call :: Lorg/joda/time/DurationField :: v23 = p0 $null .convertField(v21, v4)::JM,33285:CL,41655
33285 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .weeks = v23::
33291 :: CALL :: call :: Lorg/joda/time/DurationField :: v26 = p0 $null .convertField(v24, v4)::JM,33297:CL,41655
33297 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .days = v26::
33303 :: CALL :: call :: Lorg/joda/time/DurationField :: v29 = p0 $null .convertField(v27, v4)::JM,33309:CL,41655
33309 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .halfdays = v29::
33315 :: CALL :: call :: Lorg/joda/time/DurationField :: v32 = p0 $null .convertField(v30, v4)::JM,33321:CL,41655
33321 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .hours = v32::
33327 :: CALL :: call :: Lorg/joda/time/DurationField :: v35 = p0 $null .convertField(v33, v4)::JM,33333:CL,41655
33333 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .minutes = v35::
33339 :: CALL :: call :: Lorg/joda/time/DurationField :: v38 = p0 $null .convertField(v36, v4)::JM,33345:CL,41655
33345 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .seconds = v38::
33351 :: CALL :: call :: Lorg/joda/time/DurationField :: v41 = p0 $null .convertField(v39, v4)::JM,33357:CL,41655
33357 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .millis = v41::
33363 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v44 = p0 $null .convertField(v42, v4)::JM,33369:CL,41717
33369 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .year = v44::
33375 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v47 = p0 $null .convertField(v45, v4)::JM,33381:CL,41717
33381 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfEra = v47::
33387 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v50 = p0 $null .convertField(v48, v4)::JM,33393:CL,41717
33393 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfCentury = v50::
33399 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v53 = p0 $null .convertField(v51, v4)::JM,33405:CL,41717
33405 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .centuryOfEra = v53::
33411 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v56 = p0 $null .convertField(v54, v4)::JM,33417:CL,41717
33417 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .era = v56::
33423 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v59 = p0 $null .convertField(v57, v4)::JM,33429:CL,41717
33429 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfWeek = v59::
33435 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v62 = p0 $null .convertField(v60, v4)::JM,33441:CL,41717
33441 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfMonth = v62::
33447 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v65 = p0 $null .convertField(v63, v4)::JM,33453:CL,41717
33453 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfYear = v65::
33459 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v68 = p0 $null .convertField(v66, v4)::JM,33465:CL,41717
33465 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .monthOfYear = v68::
33471 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v71 = p0 $null .convertField(v69, v4)::JM,33477:CL,41717
33477 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekOfWeekyear = v71::
33483 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v74 = p0 $null .convertField(v72, v4)::JM,33489:CL,41717
33489 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyear = v74::
33495 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v77 = p0 $null .convertField(v75, v4)::JM,33501:CL,41717
33501 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyearOfCentury = v77::
33507 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v80 = p0 $null .convertField(v78, v4)::JM,33513:CL,41717
33513 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfSecond = v80::
33519 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v83 = p0 $null .convertField(v81, v4)::JM,33525:CL,41717
33525 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfDay = v83::
33531 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v86 = p0 $null .convertField(v84, v4)::JM,33537:CL,41717
33537 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfMinute = v86::
33543 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v89 = p0 $null .convertField(v87, v4)::JM,33549:CL,41717
33549 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfDay = v89::
33555 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v92 = p0 $null .convertField(v90, v4)::JM,33561:CL,41717
33561 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfHour = v92::
33567 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v95 = p0 $null .convertField(v93, v4)::JM,33573:CL,41717
33573 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfDay = v95::
33579 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v98 = p0 $null .convertField(v96, v4)::JM,33585:CL,41717
33585 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfDay = v98::
33591 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v101 = p0 $null .convertField(v99, v4)::JM,33597:CL,41717
33597 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfHalfday = v101::
33603 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v104 = p0 $null .convertField(v102, v4)::JM,33609:CL,41717
33609 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfDay = v104::
33615 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v107 = p0 $null .convertField(v105, v4)::JM,33621:CL,41717
33621 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfHalfday = v107::
33627 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v110 = p0 $null .convertField(v108, v4)::JM,33633:CL,41717
33633 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .halfdayOfDay = v110::
33779 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.millis()::CE,33780:CD,33786:CD,33790
33780 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.millis()::JM,25062
33786 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33790:CL,41821
33790 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33780
33791 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.seconds()::CE,33792:CD,33798:CD,33802
33792 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.seconds()::JM,25063
33798 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33802:CL,41821
33802 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33792
33803 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.minutes()::CE,33804:CD,33810:CD,33814
33804 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.minutes()::JM,25064
33810 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33814:CL,41821
33814 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33804
33815 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.hours()::CE,33816:CD,33822:CD,33826
33816 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.hours()::JM,25065
33822 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33826:CL,41821
33826 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33816
33827 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.halfdays()::CE,33828:CD,33834:CD,33838
33828 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.halfdays()::JM,25066
33834 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33838:CL,41821
33838 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33828
33839 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.days()::CE,33840:CD,33846:CD,33850
33840 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.days()::JM,25067
33846 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33850:CL,41821
33850 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33840
33851 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.weeks()::CE,33852:CD,33858:CD,33862
33852 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.weeks()::JM,25068
33858 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33862:CL,41821
33862 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33852
33863 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.weekyears()::CE,33864:CD,33870:CD,33874
33864 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.weekyears()::JM,25069
33870 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33874:CL,41821
33874 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33864
33875 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.months()::CE,33876:CD,33882:CD,33886
33876 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.months()::JM,25070
33882 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33886:CL,41821
33886 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33876
33887 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.years()::CE,33888:CD,33894:CD,33898
33888 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.years()::JM,25071
33894 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33898:CL,41821
33898 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33888
33899 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.centuries()::CE,33900:CD,33906:CD,33910
33900 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.centuries()::JM,25072
33906 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33910:CL,41821
33910 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33900
33911 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.eras()::CE,33912:CD,33918:CD,33922
33912 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.BaseChronology.eras()::JM,25073
33918 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,33922:CL,41821
33922 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,33912
33923 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.millisOfSecond()::CE,33924:CD,33930:CD,33934:CD,33939
33924 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.millisOfSecond()::JM,25074
33930 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .millis()::CL,33779:CL,40972
33934 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,33939:CL,41877
33939 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,33924
33941 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.millisOfDay()::CE,33942:CD,33948:CD,33952:CD,33957
33942 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.millisOfDay()::JM,25075
33948 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .millis()::CL,33779:CL,40972
33952 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,33957:CL,41877
33957 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,33942
33959 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.secondOfMinute()::CE,33960:CD,33966:CD,33970:CD,33975
33960 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.secondOfMinute()::JM,25076
33966 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .seconds()::CL,33791:CL,40997
33970 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,33975:CL,41877
33975 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,33960
33977 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.secondOfDay()::CE,33978:CD,33984:CD,33988:CD,33993
33978 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.secondOfDay()::JM,25077
33984 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .seconds()::CL,33791:CL,40997
33988 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,33993:CL,41877
33993 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,33978
33995 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.minuteOfHour()::CE,33996:CD,34002:CD,34006:CD,34011
33996 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.minuteOfHour()::JM,25078
34002 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .minutes()::CL,33803:CL,41006
34006 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34011:CL,41877
34011 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,33996
34013 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.minuteOfDay()::CE,34014:CD,34020:CD,34024:CD,34029
34014 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.minuteOfDay()::JM,25079
34020 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .minutes()::CL,33803:CL,41006
34024 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34029:CL,41877
34029 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34014
34031 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.hourOfDay()::CE,34032:CD,34038:CD,34042:CD,34047
34032 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.hourOfDay()::JM,25080
34038 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .hours()::CL,41015:CL,33815
34042 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34047:CL,41877
34047 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34032
34049 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.clockhourOfDay()::CE,34050:CD,34056:CD,34060:CD,34065
34050 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.clockhourOfDay()::JM,25081
34056 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .hours()::CL,41015:CL,33815
34060 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34065:CL,41877
34065 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34050
34067 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.hourOfHalfday()::CE,34068:CD,34074:CD,34078:CD,34083
34068 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.hourOfHalfday()::JM,25082
34074 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .hours()::CL,41015:CL,33815
34078 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34083:CL,41877
34083 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34068
34085 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.clockhourOfHalfday()::CE,34086:CD,34092:CD,34096:CD,34101
34086 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.clockhourOfHalfday()::JM,25083
34092 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .hours()::CL,41015:CL,33815
34096 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34101:CL,41877
34101 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34086
34103 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.halfdayOfDay()::CE,34104:CD,34110:CD,34114:CD,34119
34104 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.halfdayOfDay()::JM,25084
34110 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .halfdays()::CL,41024:CL,33827
34114 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34119:CL,41877
34119 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34104
34121 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.dayOfWeek()::CE,34122:CD,34128:CD,34132:CD,34137
34122 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.dayOfWeek()::JM,25085
34128 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .days()::CL,41033:CL,33839
34132 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34137:CL,41877
34137 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34122
34139 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.dayOfMonth()::CE,34140:CD,34146:CD,34150:CD,34155
34140 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.dayOfMonth()::JM,25086
34146 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .days()::CL,41033:CL,33839
34150 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34155:CL,41877
34155 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34140
34157 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.dayOfYear()::CE,34158:CD,34164:CD,34168:CD,34173
34158 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.dayOfYear()::JM,25087
34164 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .days()::CL,41033:CL,33839
34168 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34173:CL,41877
34173 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34158
34175 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.weekOfWeekyear()::CE,34176:CD,34182:CD,34186:CD,34191
34176 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.weekOfWeekyear()::JM,25088
34182 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .weeks()::CL,41042:CL,33851
34186 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34191:CL,41877
34191 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34176
34193 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.weekyear()::CE,34194:CD,34200:CD,34204:CD,34209
34194 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.weekyear()::JM,25089
34200 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .weekyears()::CL,33863:CL,41051
34204 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34209:CL,41877
34209 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34194
34211 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.weekyearOfCentury()::CE,34212:CD,34218:CD,34222:CD,34227
34212 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.weekyearOfCentury()::JM,25090
34218 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .weekyears()::CL,33863:CL,41051
34222 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34227:CL,41877
34227 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34212
34229 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.monthOfYear()::CE,34230:CD,34236:CD,34240:CD,34245
34230 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.monthOfYear()::JM,25091
34236 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .months()::CL,33875:CL,41060
34240 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34245:CL,41877
34245 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34230
34247 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.year()::CE,34248:CD,34254:CD,34258:CD,34263
34248 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.year()::JM,25092
34254 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .years()::CL,41069:CL,33887
34258 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34263:CL,41877
34263 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34248
34265 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.yearOfEra()::CE,34266:CD,34272:CD,34276:CD,34281
34266 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.yearOfEra()::JM,25093
34272 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .years()::CL,41069:CL,33887
34276 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34281:CL,41877
34281 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34266
34283 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.yearOfCentury()::CE,34284:CD,34290:CD,34294:CD,34299
34284 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.yearOfCentury()::JM,25094
34290 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .years()::CL,41069:CL,33887
34294 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34299:CL,41877
34299 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34284
34301 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.centuryOfEra()::CE,34302:CD,34308:CD,34312:CD,34317
34302 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.centuryOfEra()::JM,25095
34308 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .centuries()::CL,33899:CL,41078
34312 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34317:CL,41877
34317 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34302
34319 :: ENTR :: entry :: null :: org.joda.time.chrono.BaseChronology.era()::CE,34320:CD,34326:CD,34330:CD,34335
34320 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.BaseChronology.era()::JM,25096
34326 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .eras()::CL,33911:CL,41087
34330 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDateTimeField :: v8 = getInstance(v4, v6)::JM,34335:CL,41877
34335 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v8::DD,34320
34337 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.hourOfDay()::CE,34338:CD,34344
34338 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.hourOfDay()::JM,24975:JM,32361
34341 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iHourOfDay::DD,34344
34344 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34338
34346 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.minuteOfHour()::CE,34347:CD,34353
34347 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.minuteOfHour()::JM,24986:JM,32337
34350 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iMinuteOfHour::DD,34353
34353 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34347
34355 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.secondOfMinute()::CE,34356:CD,34362
34356 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.secondOfMinute()::JM,24997:JM,32313
34359 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iSecondOfMinute::DD,34362
34362 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34356
34364 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.millisOfSecond()::CE,34365:CD,34371
34365 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.millisOfSecond()::JM,25008:JM,32289
34368 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iMillisOfSecond::DD,34371
34371 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34365
34373 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.millisOfDay()::CE,34374:CD,34380
34374 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.millisOfDay()::JM,25020:JM,32301
34377 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iMillisOfDay::DD,34380
34380 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34374
34382 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.monthOfYear()::CE,34383:CD,34389
34383 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.monthOfYear()::JM,25044:JM,32493
34386 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iMonthOfYear::DD,34389
34389 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34383
34391 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.dayOfMonth()::CE,34392:CD,34398
34392 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.dayOfMonth()::JM,25055:JM,32433
34395 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iDayOfMonth::DD,34398
34398 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,34392
34430 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType)::CE,34431:CD,34434:JM,34439
34431 :: EXIT :: exit :: Lorg/joda/time/PeriodType :: org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType)::JM,25473
34434 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,34435:CD,34438:CD,34439
34435 :: CALL :: call :: Lorg/joda/time/PeriodType :: v5 = standard()::JM,34438:CL,41991
34438 :: NORM :: compound :: Lorg/joda/time/PeriodType :: return v5::DD,34431
34439 :: NORM :: compound :: Lorg/joda/time/PeriodType :: return p1 $null ::DD,34431
34443 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.getInstance()::CD,34446:CD,34449
34446 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v3 = getDefault()::CL,25571
34449 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v5 = getInstance(v3)::CL,42149
34454 :: ENTR :: entry :: null :: org.joda.time.base.AbstractPeriod.size()::CE,34455:CD,34462:CD,34466
34455 :: EXIT :: exit :: I :: org.joda.time.base.AbstractPeriod.size()::JM,25498:JM,25501
34462 :: CALL :: call :: I :: v6 = v4.size()::JM,34466:CL,42210
34466 :: NORM :: compound :: I :: return v6::CF,34455
34485 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.StandardDurationFieldType.getField(org.joda.time.Chronology)::CD,34490:CD,34497
34490 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = getChronology(p1 $null )::CL,25475
34494 :: EXPR :: reference :: B :: v6 = p0 $null .iOrdinal::DD,34497
34497 :: PRED :: IF :: null :: switch v6::CD,34498:CD,34503:CD,34508:CD,34513:CD,34518:CD,34523:CD,34528:CD,34533:CD,34538:CD,34543:CD,34548:CD,34553
34498 :: CALL :: call :: Lorg/joda/time/DurationField :: v32 = v5.eras()::CL,33911:CL,41087
34503 :: CALL :: call :: Lorg/joda/time/DurationField :: v30 = v5.centuries()::CL,33899:CL,41078
34508 :: CALL :: call :: Lorg/joda/time/DurationField :: v28 = v5.weekyears()::CL,33863:CL,41051
34513 :: CALL :: call :: Lorg/joda/time/DurationField :: v26 = v5.years()::CL,41069:CL,33887
34518 :: CALL :: call :: Lorg/joda/time/DurationField :: v24 = v5.months()::CL,33875:CL,41060
34523 :: CALL :: call :: Lorg/joda/time/DurationField :: v22 = v5.weeks()::CL,41042:CL,33851
34528 :: CALL :: call :: Lorg/joda/time/DurationField :: v20 = v5.days()::CL,41033:CL,33839
34533 :: CALL :: call :: Lorg/joda/time/DurationField :: v18 = v5.halfdays()::CL,41024:CL,33827
34538 :: CALL :: call :: Lorg/joda/time/DurationField :: v16 = v5.hours()::CL,41015:CL,33815
34543 :: CALL :: call :: Lorg/joda/time/DurationField :: v14 = v5.minutes()::CL,33803:CL,41006
34548 :: CALL :: call :: Lorg/joda/time/DurationField :: v12 = v5.seconds()::CL,33791:CL,40997
34553 :: CALL :: call :: Lorg/joda/time/DurationField :: v10 = v5.millis()::CL,33779:CL,40972
34578 :: ENTR :: entry :: null :: org.joda.time.field.BaseDurationField.getDifference(long,long)::CE,34579:CD,34584:CD,34590:CD,34594
34579 :: EXIT :: exit :: I :: org.joda.time.field.BaseDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34584 :: CALL :: call :: J :: v6 = p0 $null .getDifferenceAsLong(p1 $null , p2 $null )::CL,42302:CL,42235:CL,42283:CL,42323
34590 :: CALL :: call :: I :: v8 = safeToInt(v6)::JM,34594:CL,38635
34594 :: NORM :: compound :: I :: return v8::DD,34579
34598 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getDifference(long,long)::CE,34599:CD,34604:CD,34615:CD,34626:CD,34632
34599 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34604 :: CALL :: call :: I :: v6 = p0 $null .getOffsetToAdd(p2 $null )::CL,42349
34612 :: EXPR :: reference :: Z :: v8 = p0 $null .iTimeField::DD,34615
34615 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,34617
34617 :: CALL :: call :: I :: v11 = p0 $null .getOffsetToAdd(p1 $null )::CL,42349
34626 :: CALL :: call :: I :: v18 = v7.getDifference(v14, v16)::JM,34632:CL,34578:CL,34646:CL,34694:CL,34598:CL,34676:CL,34665
34632 :: NORM :: compound :: I :: return v18::DD,34599
34646 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.getDifference(long,long)::CE,34647:CD,34655:CD,34661
34647 :: EXIT :: exit :: I :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34655 :: CALL :: call :: I :: v7 = v5.getDifference(p1 $null , p2 $null )::JM,34661:CL,42393
34661 :: NORM :: compound :: I :: return v7::DD,34647
34665 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.getDifference(long,long)::CE,34666:CD,34671
34666 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34671 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,42413
34676 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.getDifference(long,long)::CE,34677:CD,34687:CD,34691
34677 :: EXIT :: exit :: I :: org.joda.time.field.MillisDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34687 :: CALL :: call :: I :: v8 = safeToInt(v6)::JM,34691:CL,38635
34691 :: NORM :: compound :: I :: return v8::DD,34677
34694 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.getDifference(long,long)::CE,34695:CD,34704:CD,34713:CD,34714
34695 :: EXIT :: exit :: I :: org.joda.time.field.ScaledDurationField.getDifference(long,long)::JM,25529:JM,34632:JM,34713
34704 :: CALL :: call :: I :: v8 = v6.getDifference(p1 $null , p2 $null )::JM,34713:CL,34578:CL,34646:CL,34694:CL,34598:CL,34676:CL,34665
34710 :: EXPR :: reference :: I :: v9 = p0 $null .iScalar::DD,34713
34713 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 / v9::CF,34714
34714 :: NORM :: compound :: I :: return v10::DD,34695
34719 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.add(long,int)::CE,34720:CD,34725
34720 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34725 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,42413
34730 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.add(long,int)::CE,34731:CD,34739:CD,34745
34731 :: EXIT :: exit :: J :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34739 :: CALL :: call :: J :: v7 = v5.add(p1 $null , p2 $null )::JM,34745:CL,38127:CL,38676:CL,38705
34745 :: NORM :: compound :: J :: return v7::DD,34731
34749 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.add(long,int)::CE,34750:CD,34756:CD,34761
34750 :: EXIT :: exit :: J :: org.joda.time.field.MillisDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34756 :: CALL :: call :: J :: v7 = safeAdd(p1 $null , v5)::JM,34761:CL,42448
34761 :: NORM :: compound :: J :: return v7::DD,34750
34764 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.add(long,int)::CE,34765:CD,34780:CD,34786
34765 :: EXIT :: exit :: J :: org.joda.time.field.ScaledDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34780 :: CALL :: call :: J :: v12 = v10.add(p1 $null , v8)::JM,34786:CL,38532:CL,38432:CL,38488:CL,38507:CL,38521:CL,38457
34786 :: NORM :: compound :: J :: return v12::DD,34765
34793 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.add(long,int)::CE,34794:CD,34804:CD,34809
34794 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34804 :: CALL :: call :: J :: v9 = safeAdd(p1 $null , v7)::JM,34809:CL,42448
34809 :: NORM :: compound :: J :: return v9::DD,34794
34815 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.add(long,int)::CE,34816:CD,34821:CD,34831:CD,34840:CD,34847:CD,34848:CD,34849:CD,34850
34816 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.add(long,int)::JM,34848:JM,47964:JM,47984
34821 :: CALL :: call :: I :: v6 = p0 $null .getOffsetToAdd(p1 $null )::JM,34850:CL,42349
34831 :: CALL :: call :: J :: v11 = v7.add(v9, p2 $null )::JM,34848:CL,34719:CL,34793:CL,34730:CL,34815:CL,34764:CL,34749
34837 :: EXPR :: reference :: Z :: v12 = p0 $null .iTimeField::DD,34840
34840 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 36::CD,34842:CD,34850
34842 :: CALL :: call :: I :: v15 = p0 $null .getOffsetFromLocalToSubtract(v11)::JM,34850:CL,42507
34847 :: EXPR :: assign :: J :: v17 = CONVERT I to J v16::CF,34848
34848 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v11 - v17::CF,34849
34849 :: NORM :: compound :: J :: return v18::DD,34816
34850 :: EXPR :: assign :: null :: PHI v16 = v6, v15::CF,34847
34865 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.forID(java.lang.String)::CE,34866:CD,34869:CD,34926:CD,34930:CD,34935:CD,34940:CD,34945:JM,34879
34866 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.DateTimeZone.forID(java.lang.String)::JM,25623
34869 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 11::CD,34870:CD,34873:CD,34874:CD,34879
34870 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v44 = getDefault()::JM,34873:CL,25571
34873 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v44::DD,34866
34874 :: CALL :: call :: Z :: v6 = p1 $null .equals(#(UTC))::JM,34879
34879 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 21::CD,34880:CD,34882:CD,34883:CD,34886:CD,34891
34880 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v42 = org.joda.time.DateTimeZone.UTC::CF,34882
34882 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v42::DD,34866
34883 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v9 = getProvider()::CL,18719
34886 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v11 = v9.getZone(p1 $null )::JM,34891:JM,34892:CL,42571:CL,42551
34891 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 40::CD,34892:CD,34905:CD,34909:CD,34910:CD,34911
34892 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v11::DD,34866
34905 :: CALL :: call :: I :: v33 = parseOffset(p1 $null )::JM,34909:CL,42650
34909 :: EXPR :: assign :: J :: v34 = CONVERT I to J v33::DD,34910
34910 :: EXPR :: assign :: Z :: v36 = v34 == #(0 l)::DD,34911
34911 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 72::CD,34912:CD,34914:CD,34915:CD,34919:CD,34924
34912 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v41 = org.joda.time.DateTimeZone.UTC::CF,34914
34914 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v41::DD,34866
34915 :: CALL :: call :: Ljava/lang/String :: v38 = printOffset(v33)::CL,42666
34919 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v40 = fixedOffsetZone(v38, v33)::JM,34924:CL,42809
34924 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v40::DD,34866
34926 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
34930 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(#(The datetime zone id '))::
34935 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v23.append(p1 $null )::JM,34879
34940 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(' is not recognised))::
34945 :: CALL :: call :: Ljava/lang/String :: v30 = v28.toString()::
34992 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)::CE,34993:CD,34996:CD,35101:CD,35105:CD,35110:CD,35115:CD,35120:JM,35075:JM,35012:JM,35060:JM,35064:JM,35001:JM,35017:JM,35065:JM,35070:JM,35055
34993 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)::JM,25625
34996 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,34997:CD,35000:CD,35001:CD,35012:CD,35017:JM,35075:JM,35060:JM,35064:JM,35065:JM,35070:JM,35055
34997 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v71 = getDefault()::JM,35000:CL,25571
35000 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v71::DD,34993
35001 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $null .getID()::JM,35075:JM,35012:JM,35060:JM,35064:JM,35001:JM,35017:JM,35065:JM,35070:JM,35055
35012 :: CALL :: call :: Z :: v8 = v5.equals(#(UTC))::JM,35075:JM,35012:JM,35060:JM,35064:JM,35017:JM,35065:JM,35070:JM,35055
35017 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 43::CD,35018:CD,35020:CD,35021:CD,35025:CD,35028:CD,35034:CD,35040:CD,35129:CD,35130
35018 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v66 = org.joda.time.DateTimeZone.UTC::CF,35020
35020 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v66::DD,34993
35021 :: CALL :: call :: Ljava/lang/String :: v11 = getConvertedId(v5)::JM,35028:CL,42876
35025 :: CALL :: call :: Lorg/joda/time/tz/Provider :: v13 = getProvider()::CL,18719
35028 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 66::CF,35129:CD,35029
35029 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v15 = v13.getZone(v11)::JM,35129:CL,42571:CL,42551
35034 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 79::CF,35130:CD,35035
35035 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v18 = v13.getZone(v5)::JM,35130:CL,42571:CL,42551
35040 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 85::CD,35041:CD,35055:CD,35060:CD,35064:CD,35080:CD,35084:CD,35085:CD,35086
35041 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v19::DD,34993
35055 :: CALL :: call :: Ljava/lang/String :: v43 = v5.substring(#(3))::JM,35075:JM,35012:JM,35060:JM,35064:JM,35017:JM,35065:JM,35070:JM,35055
35060 :: CALL :: call :: I :: v45 = v43.length()::JM,35075:JM,35060:JM,35064:JM,35065:JM,35070
35064 :: PRED :: IF :: Z :: if (v45 <= #(2)) goto 150::CD,35065:CD,35070:JM,35075:JM,35060:JM,35064
35065 :: CALL :: call :: C :: v49 = v43.charAt(#(1))::JM,35075:JM,35060:JM,35064:JM,35065:JM,35070
35070 :: PRED :: IF :: Z :: if (v49 <= #(57)) goto 150::CD,35071:CD,35075
35071 :: CALL :: call :: Z :: v52 = isDigit(v49)::JM,35075
35075 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 150::CD,35076
35076 :: CALL :: call :: Ljava/lang/String :: v54 = convertToAsciiNumber(v43)::CL,42891
35080 :: CALL :: call :: I :: v57 = parseOffset(v55)::JM,35084:CL,42650
35084 :: EXPR :: assign :: J :: v58 = CONVERT I to J v57::DD,35085
35085 :: EXPR :: assign :: Z :: v60 = v58 == #(0 l)::DD,35086
35086 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 169::CD,35087:CD,35089:CD,35090:CD,35094:CD,35099
35087 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v65 = org.joda.time.DateTimeZone.UTC::CF,35089
35089 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v65::DD,34993
35090 :: CALL :: call :: Ljava/lang/String :: v62 = printOffset(v57)::CL,42666
35094 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v64 = fixedOffsetZone(v62, v57)::JM,35099:CL,42809
35099 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v64::DD,34993
35101 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
35105 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(#(The datetime zone id '))::
35110 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(v5)::JM,35075:JM,35012:JM,35060:JM,35064:JM,35017:JM,35065:JM,35070:JM,35055
35115 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(#(' is not recognised))::JM,35075:JM,35060:JM,35064:JM,35065:JM,35070
35120 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,35075
35129 :: EXPR :: assign :: null :: PHI v16 = #(null), v15::DD,35034:DD,35130
35130 :: EXPR :: assign :: null :: PHI v19 = v16, v18::DD,35040:DD,35041
35331 :: EXPR :: modify :: I :: p0 $null .iMinPrintedDigits = p4 $null ::
35349 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,35368:JM,35373:JM,35385:JM,35389:JM,35395
35353 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,35418:JM,35423:JM,35435:JM,35439:JM,35445
35357 :: CALL :: call :: V :: p0 $null .decompose(p1 $null , v5, v7)::CL,43062
35363 :: CALL :: call :: Z :: v12 = v5.contains(#(null))::JM,35368
35368 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 48::CD,35369:CD,35373
35369 :: CALL :: call :: Z :: v15 = v5.isEmpty()::JM,35373
35373 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 60::CD,35381:CD,35385:CD,35389:CD,35464:CD,35465
35374 :: EXPR :: modify :: [Lorg/joda/time/format/InternalPrinter :: p0 $null .iPrinters = #(null)::
35377 :: EXPR :: modify :: I :: p0 $null .iPrintedLengthEstimate = #(0)::
35381 :: CALL :: call :: I :: v17 = v5.size()::JM,35385:JM,35389
35385 :: NORM :: declaration :: [Lorg/joda/time/format/InternalPrinter :: v18 = new org.joda.time.format.InternalPrinter[]::DD,35386
35386 :: EXPR :: modify :: [Lorg/joda/time/format/InternalPrinter :: p0 $null .iPrinters = v18::
35389 :: PRED :: IF :: Z :: if (v29 >= v17) goto 132::CD,35390:CD,35395:CD,35396:CD,35400:CD,35408:CD,35464:CD,35465
35390 :: CALL :: call :: Ljava/lang/Object :: v20 = v5.get(v29)::JM,35395
35395 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,35404
35396 :: CALL :: call :: I :: v23 = v21.estimatePrintedLength()::JM,35400:CL,43312:CL,43260:CL,43282:CL,43288:CL,43237:CL,43303:CL,43160:CL,43173:CL,43269:CL,43245:CL,43154:CL,43182
35400 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v28 + v23::DD,35464
35401 :: EXPR :: reference :: [Lorg/joda/time/format/InternalPrinter :: v25 = p0 $null .iPrinters::
35404 :: EXPR :: modify :: Ljava/lang/Object :: v25[v29] = v21::
35408 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v29 + #(1)::DD,35465
35410 :: EXPR :: modify :: I :: p0 $null .iPrintedLengthEstimate = v28::
35413 :: CALL :: call :: Z :: v31 = v7.contains(#(null))::JM,35418
35418 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 156::CD,35419:CD,35423
35419 :: CALL :: call :: Z :: v33 = v7.isEmpty()::JM,35423
35423 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 168::CD,35431:CD,35435:CD,35439:CD,35466:CD,35467
35424 :: EXPR :: modify :: [Lorg/joda/time/format/InternalParser :: p0 $null .iParsers = #(null)::
35427 :: EXPR :: modify :: I :: p0 $null .iParsedLengthEstimate = #(0)::
35431 :: CALL :: call :: I :: v35 = v7.size()::JM,35435:JM,35439
35435 :: NORM :: declaration :: [Lorg/joda/time/format/InternalParser :: v36 = new org.joda.time.format.InternalParser[]::DD,35436
35436 :: EXPR :: modify :: [Lorg/joda/time/format/InternalParser :: p0 $null .iParsers = v36::
35439 :: PRED :: IF :: Z :: if (v46 >= v35) goto 240::CD,35440:CD,35445:CD,35446:CD,35450:CD,35458:CD,35466:CD,35467
35440 :: CALL :: call :: Ljava/lang/Object :: v38 = v7.get(v46)::JM,35445
35445 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,35454
35446 :: CALL :: call :: I :: v41 = v39.estimateParsedLength()::JM,35450:CL,43410:CL,35649:CL,43330:CL,43321:CL,43373:CL,35662:CL,43345:CL,43355:CL,43392:CL,43401:CL,43419:CL,43363:CL,43386
35450 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v45 + v41::DD,35466
35451 :: EXPR :: reference :: [Lorg/joda/time/format/InternalParser :: v43 = p0 $null .iParsers::
35454 :: EXPR :: modify :: Ljava/lang/Object :: v43[v46] = v39::
35458 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,35467
35460 :: EXPR :: modify :: I :: p0 $null .iParsedLengthEstimate = v45::
35464 :: EXPR :: assign :: null :: PHI v28 = v24, #(0)::CF,35465:DD,35400:DD,35410
35465 :: EXPR :: assign :: null :: PHI v29 = v27, #(0)::DD,35389:JM,35395:DD,35408
35466 :: EXPR :: assign :: null :: PHI v45 = v42, #(0)::CF,35467:DD,35450:DD,35460
35467 :: EXPR :: assign :: null :: PHI v46 = v44, #(0)::DD,35439:JM,35445:DD,35458
35581 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iFieldType = p1 $null ::
35584 :: PRED :: IF :: Z :: if (p3 $null  <= #(18)) goto 20::CF,35592
35585 :: EXPR :: modify :: I :: p0 $null .iMinDigits = p2 $null ::
35588 :: EXPR :: modify :: I :: p0 $null .iMaxDigits = v8::
35592 :: EXPR :: assign :: null :: PHI v8 = p3 $null , #(18)::DD,35588
35627 :: EXPR :: modify :: Lorg/joda/time/format/InternalParser :: p0 $null .underlying = p1 $null ::
35642 :: EXPR :: modify :: Lorg/joda/time/format/DateTimeParser :: p0 $null .underlying = p1 $null ::
35649 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength()::CE,35650:CD,35656:CD,35660
35650 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength()::JM,26579:JM,26571:JM,35450:JM,35673
35656 :: CALL :: call :: I :: v5 = v3.estimateParsedLength()::JM,35660:CL,35662
35660 :: NORM :: compound :: I :: return v5::CF,35650
35662 :: ENTR :: entry :: null :: org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength()::CE,35663:CD,35669:CD,35673
35663 :: EXIT :: exit :: I :: org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength()::JM,26579:JM,26571:JM,35450:JM,35660:JM,35673
35669 :: CALL :: call :: I :: v5 = v3.estimateParsedLength()::JM,35673:CL,43410:CL,35649:CL,43330:CL,43321:CL,43373:CL,35662:CL,43345:CL,43355:CL,43392:CL,43401:CL,43419:CL,43363:CL,43386
35673 :: NORM :: compound :: I :: return v5::CF,35663
35683 :: EXPR :: modify :: Lorg/joda/time/format/DateTimePrinter :: p0 $null .underlying = p1 $null ::
36097 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.access$000(org.joda.time.tz.ZoneInfoProvider)::CE,36098:CD,36104
36098 :: EXIT :: exit :: Ljava/lang/ClassLoader :: org.joda.time.tz.ZoneInfoProvider.access$000(org.joda.time.tz.ZoneInfoProvider)::JM,27299:JM,27315
36101 :: EXPR :: reference :: Ljava/lang/ClassLoader :: v3 = p1 $null .iLoader::DD,36104
36104 :: NORM :: compound :: Ljava/lang/ClassLoader :: return v3::CF,36098
36135 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)::CD,36155:CD,36169
36155 :: CALL :: call :: Z :: v11 = v4.contains(#(UTC))::
36169 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v14 = p1 $null .getZone(#(UTC))::CL,42571
36216 :: CALL :: call :: Z :: v7 = p1 $null .exists()::
36222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
36226 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(#(File directory doesn'...))::
36231 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $null )::
36236 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
36245 :: CALL :: call :: Z :: v10 = p1 $null .isDirectory()::
36251 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
36255 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(#(File doesn't refer to...))::
36260 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(p1 $null )::
36265 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
36283 :: CALL :: call :: Ljava/io/InputStream :: v13 = p0 $null .openResource(#(ZoneInfoMap))::CL,43795
36288 :: CALL :: call :: Ljava/util/Map :: v15 = loadZoneInfoMap(v13)::JM,36292:CL,43905
36292 :: EXPR :: modify :: Ljava/util/Map :: p0 $null .iZoneInfoMap = v15::
36295 :: NORM :: declaration :: Ljava/util/TreeSet :: v16 = new java.util.TreeSet::JM,36307
36296 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $null .iZoneInfoMap::
36299 :: CALL :: call :: Ljava/util/Set :: v19 = v17.keySet()::
36307 :: CALL :: call :: Ljava/util/SortedSet :: v22 = unmodifiableSortedSet(v16)::JM,36307
36363 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.SavedField.compareTo(java.lang.Object)::CE,36364:CD,36369:CD,36374
36364 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserBucket.SavedField.compareTo(java.lang.Object)::
36369 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,36374:CL,44101
36374 :: NORM :: compound :: I :: return v6::DD,36364
36377 :: ENTR :: entry :: null :: org.joda.time.field.BaseDurationField.compareTo(java.lang.Object)::CE,36378:CD,36383:CD,36388
36378 :: EXIT :: exit :: I :: org.joda.time.field.BaseDurationField.compareTo(java.lang.Object)::JM,51528
36383 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,36388:CL,44154
36388 :: NORM :: compound :: I :: return v6::CF,36378
36391 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.compareTo(java.lang.Object)::CE,36392:CD,36397:CD,36402
36392 :: EXIT :: exit :: I :: org.joda.time.field.MillisDurationField.compareTo(java.lang.Object)::JM,51528
36397 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,36402:CL,44187
36402 :: NORM :: compound :: I :: return v6::CF,36392
36405 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.compareTo(java.lang.Object)::CF,36406:CD,36411:CD,36416
36406 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDurationField.compareTo(java.lang.Object)::JM,51528
36411 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,36416:CL,44220
36416 :: NORM :: compound :: I :: return v6::CF,36406
36419 :: ENTR :: entry :: null :: org.joda.time.DurationFieldType.getName()::CE,36420:CD,36426
36420 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DurationFieldType.getName()::JM,27676
36423 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $null .iName::DD,36426
36426 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,36420
37603 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonth(org.joda.time.Chronology,long)::CE,37604:CD,37612:CD,37660:CD,37661
37604 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonth(org.joda.time.Chronology,long)::JM,48721:JM,48841
37609 :: EXPR :: reference :: I :: v5 = p0 $null .iDayOfMonth::DD,37612
37612 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 24::CD,37620:CD,37631:CD,37641:CD,37654:CD,37661
37620 :: CALL :: call :: J :: v25 = v22.set(p2 $null , v23)::JM,37661:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
37631 :: CALL :: call :: J :: v11 = v8.set(p2 $null , #(1))::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
37641 :: CALL :: call :: J :: v15 = v13.add(v11, #(1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
37654 :: CALL :: call :: J :: v20 = v17.add(v15, v18)::JM,37661:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
37660 :: NORM :: compound :: J :: return v26::DD,37604
37661 :: EXPR :: assign :: null :: PHI v26 = v25, v20::CF,37660
37680 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfWeek(org.joda.time.Chronology,long)::CE,37681:CD,37690:CD,37698:CD,37699:CD,37719:CD,37721
37681 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfWeek(org.joda.time.Chronology,long)::JM,39440:JM,39399:JM,39704:JM,39663
37690 :: CALL :: call :: I :: v8 = v6.get(p2 $null )::JM,37698:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
37695 :: EXPR :: reference :: I :: v9 = p0 $null .iDayOfWeek::DD,37698
37698 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v9 - v8::DD,37699
37699 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 62::CF,37721:CD,37713
37713 :: CALL :: call :: J :: v21 = v19.add(p2 $null , v17)::JM,37721:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
37719 :: NORM :: compound :: J :: return v22::DD,37681
37721 :: EXPR :: assign :: null :: PHI v22 = p2 $null , v21::CF,37719
37755 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iName = p1 $null ::
37758 :: EXPR :: modify :: [Lorg/joda/time/DurationFieldType :: p0 $null .iTypes = p2 $null ::
37761 :: EXPR :: modify :: [I :: p0 $null .iIndices = p3 $null ::
37893 :: CALL :: call :: Ljava/lang/String :: v11 = createMessage(v8, p2 $null , p3 $null , p4 $null , #(null))::CL,39084
37960 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.getParam()::CE,37961:CD,37967
37961 :: EXIT :: exit :: Ljava/lang/Object :: org.joda.time.chrono.AssembledChronology.getParam()::JM,29919:JM,47470
37964 :: EXPR :: reference :: Ljava/lang/Object :: v3 = p0 $null .iParam::DD,37967
37967 :: NORM :: compound :: Ljava/lang/Object :: return v3::CF,37961
37969 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getZone()::CE,37970:CD,37973:CD,37977
37970 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.chrono.BasicChronology.getZone()::JM,29930
37973 :: CALL :: call :: Lorg/joda/time/Chronology :: v4 = p0 $null .getBase()::JM,37977:CL,37992
37977 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 14::CD,37978:CD,37982:CD,37983:CD,37985
37978 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v8 = v4.getZone()::JM,37982:CL,29922:CL,29911:CL,29891
37982 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v8::CF,37970
37983 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v6 = org.joda.time.DateTimeZone.UTC::CF,37985
37985 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v6::CF,37970
37992 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.getBase()::CE,37993:CD,37999
37993 :: EXIT :: exit :: Lorg/joda/time/Chronology :: org.joda.time.chrono.AssembledChronology.getBase()::JM,33104:JM,37977
37996 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v3 = p0 $null .iBase::DD,37999
37999 :: NORM :: compound :: Lorg/joda/time/Chronology :: return v3::CF,37993
38001 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.era()::CE,38002:CD,38008
38002 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.era()::JM,32553
38005 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iEra::DD,38008
38008 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38002
38010 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.yearOfEra()::CE,38011:CD,38017
38011 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.yearOfEra()::JM,32517
38014 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iYearOfEra::DD,38017
38017 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38011
38019 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.centuryOfEra()::CE,38020:CD,38026
38020 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.centuryOfEra()::JM,32541
38023 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iCenturyOfEra::DD,38026
38026 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38020
38028 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.yearOfCentury()::CE,38029:CD,38035
38029 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.yearOfCentury()::JM,32529
38032 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iYearOfCentury::DD,38035
38035 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38029
38037 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.dayOfYear()::CE,38038:CD,38044
38038 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.dayOfYear()::JM,32445
38041 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iDayOfYear::DD,38044
38044 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38038
38046 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.weekyearOfCentury()::CE,38047:CD,38053
38047 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.weekyearOfCentury()::JM,32481
38050 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iWeekyearOfCentury::DD,38053
38053 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38047
38055 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.weekyear()::CE,38056:CD,38062
38056 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.weekyear()::JM,32469
38059 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iWeekyear::DD,38062
38062 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38056
38064 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.weekOfWeekyear()::CE,38065:CD,38071
38065 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.weekOfWeekyear()::JM,32457
38068 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iWeekOfWeekyear::DD,38071
38071 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38065
38073 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.halfdayOfDay()::CE,38074:CD,38080
38074 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.halfdayOfDay()::JM,32409
38077 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iHalfdayOfDay::DD,38080
38080 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38074
38082 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.hourOfHalfday()::CE,38083:CD,38089
38083 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.hourOfHalfday()::JM,32385
38086 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iHourOfHalfday::DD,38089
38089 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38083
38091 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.clockhourOfHalfday()::CE,38092:CD,38098
38092 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.clockhourOfHalfday()::JM,32397
38095 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iClockhourOfHalfday::DD,38098
38098 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38092
38100 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.clockhourOfDay()::CE,38101:CD,38107
38101 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.clockhourOfDay()::JM,32373
38104 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iClockhourOfDay::DD,38107
38107 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38101
38109 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.minuteOfDay()::CE,38110:CD,38116
38110 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.minuteOfDay()::JM,32349
38113 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iMinuteOfDay::DD,38116
38116 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38110
38118 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.secondOfDay()::CE,38119:CD,38125
38119 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.AssembledChronology.secondOfDay()::JM,32325
38122 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v3 = p0 $null .iSecondOfDay::DD,38125
38125 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v3::CF,38119
38127 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)::CE,38128:CD,38133:JM,38134
38128 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)::JM,30201:JM,34745:JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
38133 :: PRED :: IF :: Z :: if (p2 $null  != #(0)) goto 7::CD,38134:CD,38138:CD,38143:CD,38147:CD,38155:CD,38234:CD,38254:CD,38261:CD,38262
38134 :: NORM :: compound :: J :: return p1 $null ::DD,38128
38138 :: CALL :: call :: I :: v8 = v6.getMillisOfDay(p1 $null )::JM,38143:CL,30938
38143 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::DD,38261
38147 :: CALL :: call :: I :: v12 = v10.getYear(p1 $null )::CL,16221
38155 :: CALL :: call :: I :: v15 = v13.getMonthOfYear(p1 $null , v12)::CL,24016
38234 :: CALL :: call :: I :: v66 = v64.getDayOfMonth(p1 $null , v12, v15)::CL,24472
38254 :: CALL :: call :: J :: v73 = v71.getYearMonthDayMillis(v62, v63, v70)::JM,38261:CL,30902
38261 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v73 + v9::CF,38262
38262 :: NORM :: compound :: J :: return v74::DD,38128
38362 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getDurationField()::CE,38363:CD,38369
38363 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38366 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDurationField::DD,38369
38369 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38363
38371 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.getDurationField()::CE,38372:CD,38378
38372 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.ImpreciseDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38375 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDurationField::DD,38378
38378 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38372
38380 :: ENTR :: entry :: null :: org.joda.time.field.DecoratedDateTimeField.getDurationField()::CE,38381:CD,38387:CD,38391
38381 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.DecoratedDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386:JM,49453
38387 :: CALL :: call :: Lorg/joda/time/DurationField :: v5 = v3.getDurationField()::JM,38391:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
38391 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v5::DD,38381
38393 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.getDurationField()::CE,38394:CD,38400
38394 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.RemainderDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38397 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDurationField::DD,38400
38400 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38394
38402 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.getDurationField()::CE,38403:CD,38409
38403 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.DividedDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38406 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDurationField::DD,38409
38409 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38403
38411 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.getDurationField()::CE,38412:CD,38418:CD,38422
38412 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.GJEraDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38418 :: CALL :: call :: Lorg/joda/time/field/UnsupportedDurationField :: v6 = getInstance(v4)::JM,38422:CL,41821
38422 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v6::DD,38412
38423 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.getDurationField()::CE,38424:CD,38430
38424 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.PreciseDurationDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
38427 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iUnitField::DD,38430
38430 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38424
38432 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.add(long,long)::CE,38433:CD,38446:CD,38451
38433 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38446 :: CALL :: call :: J :: v9 = safeAdd(p1 $null , v7)::JM,38451:CL,42448
38451 :: NORM :: compound :: J :: return v9::DD,38433
38457 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.add(long,long)::CE,38458:CD,38475:CD,38481
38458 :: EXIT :: exit :: J :: org.joda.time.field.ScaledDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38475 :: CALL :: call :: J :: v11 = v9.add(p1 $null , v7)::JM,38481:CL,38532:CL,38432:CL,38488:CL,38507:CL,38521:CL,38457
38481 :: NORM :: compound :: J :: return v11::DD,38458
38488 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.add(long,long)::CE,38489:CD,38497:CD,38503
38489 :: EXIT :: exit :: J :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38497 :: CALL :: call :: J :: v7 = v5.add(p1 $null , p2 $null )::JM,38503:CL,30604:CL,30185:CL,30643
38503 :: NORM :: compound :: J :: return v7::DD,38489
38507 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.add(long,long)::CE,38508:CD,38513:CD,38518
38508 :: EXIT :: exit :: J :: org.joda.time.field.MillisDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38513 :: CALL :: call :: J :: v6 = safeAdd(p1 $null , p2 $null )::JM,38518:CL,42448
38518 :: NORM :: compound :: J :: return v6::DD,38508
38521 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.add(long,long)::CE,38522:CD,38527
38522 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38527 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,42413
38532 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.add(long,long)::CE,38533:CD,38538:CD,38548:CD,38557:CD,38564:CD,38565:CD,38566:CD,38567
38533 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.add(long,long)::JM,34786:JM,38481:JM,38565
38538 :: CALL :: call :: I :: v6 = p0 $null .getOffsetToAdd(p1 $null )::JM,38567:CL,42349
38548 :: CALL :: call :: J :: v11 = v7.add(v9, p2 $null )::JM,38565:CL,38532:CL,38432:CL,38488:CL,38507:CL,38521:CL,38457
38554 :: EXPR :: reference :: Z :: v12 = p0 $null .iTimeField::DD,38557
38557 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 36::CD,38559:CD,38567
38559 :: CALL :: call :: I :: v15 = p0 $null .getOffsetFromLocalToSubtract(v11)::JM,38567:CL,42507
38564 :: EXPR :: assign :: J :: v17 = CONVERT I to J v16::CF,38565
38565 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v11 - v17::CF,38566
38566 :: NORM :: compound :: J :: return v18::DD,38533
38567 :: EXPR :: assign :: null :: PHI v16 = v6, v15::CF,38564
38582 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getOffsetToAdd(long)::CE,38583:CD,38590:CD,38610
38583 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getOffsetToAdd(long)::JM,48074:JM,51962
38590 :: CALL :: call :: I :: v6 = v4.getOffset(p1 $null )::JM,38610:CL,22651:CL,22661:CL,22668:CL,22544
38610 :: NORM :: compound :: I :: return v6::DD,38583
38626 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getDurationField()::CE,38627:CD,38633
38627 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.UnsupportedDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,41906:JM,49386
38630 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDurationField::DD,38633
38633 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,38627
38635 :: ENTR :: entry :: null :: org.joda.time.field.FieldUtils.safeToInt(long)::CF,38636:CD,38643:CD,38644
38636 :: EXIT :: exit :: I :: org.joda.time.field.FieldUtils.safeToInt(long)::JM,34594:JM,34691:JM,42409
38643 :: EXPR :: assign :: I :: v19 = CONVERT J to I p1 $null ::CF,38644
38644 :: NORM :: compound :: I :: return v19::CF,38636
38676 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)::CE,38677:CD,38682:JM,38683
38677 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)::JM,30620:JM,34745:JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
38682 :: PRED :: IF :: Z :: if (p2 $null  != #(0)) goto 10::CD,38683:CD,38684:CD,38690:CD,38696
38683 :: NORM :: compound :: J :: return p1 $null ::DD,38677
38684 :: CALL :: call :: I :: v7 = p0 $null .get(p1 $null )::CL,9492
38690 :: CALL :: call :: J :: v10 = p0 $null .set(p1 $null , v8)::JM,38696:CL,22038
38696 :: NORM :: compound :: J :: return v10::DD,38677
38705 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.add(long,int)::CE,38706:CD,38711:JM,38712
38706 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.add(long,int)::JM,30659:JM,34745:JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
38711 :: PRED :: IF :: Z :: if (p2 $null  != #(0)) goto 8::CD,38712:CD,38713:CD,38723:CD,38729
38712 :: NORM :: compound :: J :: return p1 $null ::DD,38706
38713 :: CALL :: call :: I :: v7 = p0 $null .get(p1 $null )::CL,9653
38723 :: CALL :: call :: J :: v11 = p0 $null .set(p1 $null , v9)::JM,38729:CL,21655
38729 :: NORM :: compound :: J :: return v11::DD,38706
38742 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,long)::CD,38752
38752 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::CL,30689:CL,30444:CL,30663:CL,30624:CL,38742:CL,30604:CL,30185:CL,30504:CL,30643:CL,30709:CL,30464:CL,30584
38762 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)::CE,38763:CD,38768:CD,38775:CD,38780:JM,31079:CD,38819:CD,38820:CD,38834:CD,38837:JM,38802:JM,38791:JM,38781
38763 :: EXIT :: exit :: J :: org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)::JM,30756
38768 :: CALL :: call :: I :: v6 = p0 $null .getOffset(p1 $null )::JM,38837:JM,38790:JM,38780:JM,38782:CL,22651:CL,22661:CL,22668:CL,22544
38775 :: CALL :: call :: I :: v10 = p0 $null .getOffset(v8)::JM,38801:JM,38837:JM,38780:CL,22651:CL,22661:CL,22668:CL,22544
38780 :: PRED :: IF :: Z :: if (v6 == v10) goto 120::CF,38837:CD,38781
38781 :: PRED :: IF :: Z :: if (p2 $null  != #(0)) goto 38::CD,38782:CD,38785:CD,38790:CD,38791:CD,38792:CD,38793:CD,38796:CD,38801:CD,38802:CD,38803:CD,38804:CD,38805:CD,38806:CD,38835:CD,38836:CD,38837
38782 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 120::CF,38837:CD,38785:CD,38790:CD,38791:CD,38792:CD,38793:CD,38796:CD,38801:CD,38802:CD,38803:CD,38804:CD,38805:CD,38806:CD,38835:CD,38836
38785 :: CALL :: call :: J :: v15 = p0 $null .nextTransition(v13)::JM,38835:JM,38792:CL,22986:CL,22972:CL,22956:CL,22979
38790 :: EXPR :: assign :: J :: v16 = CONVERT I to J v6::CF,38791
38791 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p1 $null  - v16::CF,38792
38792 :: EXPR :: assign :: Z :: v18 = v15 == v17::DD,38793
38793 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,38835
38796 :: CALL :: call :: J :: v24 = p0 $null .nextTransition(v22)::JM,38803:JM,38836:CL,22986:CL,22972:CL,22956:CL,22979
38801 :: EXPR :: assign :: J :: v25 = CONVERT I to J v10::CF,38802
38802 :: EXPR :: assign :: Ljava/lang/Object :: v26 = p1 $null  - v25::CF,38803
38803 :: EXPR :: assign :: Z :: v27 = v24 == v26::DD,38804
38804 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 92::CF,38836
38805 :: EXPR :: assign :: Z :: v29 = v20 == v28::DD,38806
38806 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 120::CF,38837
38819 :: EXPR :: assign :: J :: v31 = CONVERT I to J v30::CF,38820
38820 :: EXPR :: assign :: Ljava/lang/Object :: v32 = p1 $null  - v31::DD,38834
38834 :: NORM :: compound :: J :: return v32::DD,38763
38835 :: EXPR :: assign :: null :: PHI v20 = v15, #(9223372036854775807 l)::DD,38805
38836 :: EXPR :: assign :: null :: PHI v28 = v24, #(9223372036854775807 l)::DD,38805
38837 :: EXPR :: assign :: null :: PHI v30 = v10, v10, v10, v6::DD,38819
38887 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(long)::CD,38895
38895 :: CALL :: call :: I :: v6 = v4.getYear(p1 $null )::CL,16221
38914 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(long)::CD,38922:CD,38930
38922 :: CALL :: call :: I :: v6 = v4.getWeekyear(p1 $null )::CL,16077
38930 :: CALL :: call :: I :: v9 = v7.getWeeksInYear(v6)::CL,30798
38952 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(long)::CD,38960
38960 :: CALL :: call :: I :: v6 = v4.getDaysInMonthMax(p1 $null )::CL,48542
38968 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)::CD,38974:JM,38975
38974 :: PRED :: IF :: Z :: if (p2 $null  > #(28)) goto 13::CD,38975:CD,38976
38975 :: PRED :: IF :: Z :: if (p2 $null  >= #(1)) goto 21::CD,38976
38976 :: CALL :: call :: I :: v8 = p0 $null .getDaysInMonthMax(p1 $null )::CL,48542
38991 :: ENTR :: entry :: null :: org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)::CD,38996:CD,39005:CD,39010:CD,39035:CD,39039:CD,39044:CD,39049:CD,39054:CD,39059
38996 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v6 = forPattern(#(yyyy-MM-dd'T'HH:mm:ss.SSS))::CL,48575
39005 :: CALL :: call :: Ljava/lang/String :: v10 = v6.print(v7)::CL,48600
39010 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 52::CF,39011:CD,39015:CD,39020:CD,39025:CD,39030:CD,39059
39011 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::JM,39059
39015 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(#( ())::JM,39059
39020 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v17.append(p2 $null )::JM,39059
39025 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#()))::JM,39059
39030 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,39059
39035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
39039 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(#(Illegal instant due t...))::
39044 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(v10)::
39049 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(v25)::
39054 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
39059 :: EXPR :: assign :: null :: PHI v25 = v24, #()::CF,39035
39084 :: ENTR :: entry :: null :: org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String)::CD,39092:CD,39096:CD,39101:CD,39106:CD,39111:CD,39116:CD,39121:CD,39177:CD,39188:JM,39122:JM,39140
39092 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
39096 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(#(Value ))::
39101 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v11.append(p2 $null )::
39106 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#( for ))::
39111 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $null )::
39116 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(32))::
39121 :: PRED :: IF :: Z :: if (p3 $null  != #(null)) goto 67::CD,39122:CD,39140
39122 :: PRED :: IF :: Z :: if (p4 $null  != #(null)) goto 55::CD,39123:CD,39129:CD,39134
39123 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v21.append(#(is not supported))::
39129 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v21.append(#(must not be larger than ))::
39134 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v43.append(p4 $null )::
39140 :: PRED :: IF :: Z :: if (p4 $null  != #(null)) goto 89::CD,39141:CD,39146:CD,39152:CD,39157:CD,39162:CD,39167:CD,39172
39141 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v21.append(#(must not be smaller than ))::
39146 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v38.append(p3 $null )::
39152 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(must be in the range [))::
39157 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p3 $null )::
39162 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(44))::
39167 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(p4 $null )::
39172 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#(93))::
39177 :: PRED :: IF :: Z :: if (p5 $null  == #(null)) goto 131::CD,39178:CD,39183
39178 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v21.append(#(: ))::
39183 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(p5 $null )::
39188 :: CALL :: call :: Ljava/lang/String :: v55 = v21.toString()::
39231 :: ENTR :: entry :: null :: org.joda.time.tz.CachedDateTimeZone.createInfo(long)::CE,39232:CD,39236:CD,39237:JM,48652:JM,48655:CD,39246:CD,39250:CD,39255:CD,39256:CD,39273:CD,39274:CD,39275
39232 :: EXIT :: exit :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: org.joda.time.tz.CachedDateTimeZone.createInfo(long)::JM,31287
39236 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $null  && #(-4294967296 l)::DD,39246:DD,39274:CF,39237
39237 :: NORM :: declaration :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v6 = new org.joda.time.tz.CachedDateTimeZone$Info::DD,39273:DD,39275
39246 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v5 || #(4294967295 l)::DD,39257:CF,39274
39250 :: CALL :: call :: J :: v13 = v11.nextTransition(v20)::JM,39255:JM,39257:JM,39274:CL,22986
39255 :: EXPR :: assign :: Z :: v14 = v13 == v20::DD,39256
39256 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 87::CD,39257:CD,39258:CF,39273
39257 :: EXPR :: assign :: Z :: v16 = v13 == v10::DD,39258
39258 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 64::CD,39250:CD,39255:CD,39256:CD,39260:JM,48652:JM,48655:CD,39274:CD,39275
39260 :: NORM :: declaration :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v17 = new org.joda.time.tz.CachedDateTimeZone$Info::DD,39269:DD,39275
39269 :: EXPR :: modify :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: v21.iNextInfo = v17::
39273 :: NORM :: compound :: Lorg/joda/time/tz/CachedDateTimeZone$Info :: return v6::DD,39232
39274 :: EXPR :: assign :: null :: PHI v20 = v13, v5::CF,39275:DD,39255
39275 :: EXPR :: assign :: null :: PHI v21 = v17, v6::
39305 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.next(long,int,int)::CE,39306:CD,39315:CD,39323:CD,39324:CD,39335:CD,39345:CD,39358:CD,39364:CD,39373:CD,39436:CD,39437:CD,39438:CD,39439:CD,39440:JM,39316
39306 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.next(long,int,int)::JM,31515
39312 :: EXPR :: reference :: C :: v6 = p0 $null .iMode::DD,39315
39315 :: PRED :: IF :: Z :: if (v6 != #(119)) goto 19::CD,39316:CD,39321:CD,39439
39316 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p2 $null  + p3 $null ::DD,39439
39318 :: EXPR :: reference :: C :: v8 = p0 $null .iMode::DD,39321
39321 :: PRED :: IF :: Z :: if (v8 != #(115)) goto 39::CD,39439
39323 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::CF,39324
39324 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p1 $null  + v13::DD,39374:DD,39399
39335 :: CALL :: call :: J :: v21 = v18.set(v14, v19)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39345 :: CALL :: call :: J :: v25 = v23.set(v21, #(0))::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39358 :: CALL :: call :: J :: v30 = v27.add(v25, v28)::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39364 :: CALL :: call :: J :: v32 = p0 $null .setDayOfMonthNext(v16, v30)::JM,39440:JM,39374:CL,48668
39370 :: EXPR :: reference :: I :: v33 = p0 $null .iDayOfWeek::DD,39373
39373 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 146::CD,39374:CD,39375:CD,39393:CD,39399:CD,39400:CD,39440
39374 :: EXPR :: assign :: Z :: v51 = v32 == v14::DD,39375
39375 :: PRED :: IF :: Z :: if (v51 > #(0)) goto 211::CF,39440:CD,39380:CD,39386
39380 :: CALL :: call :: J :: v55 = v53.add(v32, #(1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39386 :: CALL :: call :: J :: v57 = p0 $null .setDayOfMonthNext(v16, v55)::JM,39440:CL,48668
39393 :: CALL :: call :: J :: v35 = p0 $null .setDayOfWeek(v16, v32)::JM,39440:JM,39399:CL,37680
39399 :: EXPR :: assign :: Z :: v36 = v35 == v14::DD,39400
39400 :: PRED :: IF :: Z :: if (v36 > #(0)) goto 211::CF,39440:CD,39405:CD,39418:CD,39424:CD,39430
39405 :: CALL :: call :: J :: v41 = v38.add(v35, #(1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39418 :: CALL :: call :: J :: v46 = v43.set(v41, v44)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39424 :: CALL :: call :: J :: v48 = p0 $null .setDayOfMonthNext(v16, v46)::CL,48668
39430 :: CALL :: call :: J :: v50 = p0 $null .setDayOfWeek(v16, v48)::JM,39440:CL,37680
39436 :: EXPR :: assign :: J :: v59 = CONVERT I to J v12::CF,39437
39437 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v58 - v59::CF,39438
39438 :: NORM :: compound :: J :: return v60::DD,39306
39439 :: EXPR :: assign :: null :: PHI v12 = v11, p2 $null , #(0)::DD,39323:DD,39436
39440 :: EXPR :: assign :: null :: PHI v58 = v32, v57, v35, v50::DD,39437:CF,39436
39517 :: ENTR :: entry :: null :: org.joda.time.base.BaseDateTime.checkChronology(org.joda.time.Chronology)::CD,39522
39522 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = getChronology(p1 $null )::CL,25475
39536 :: ENTR :: entry :: null :: org.joda.time.base.BaseDateTime.adjustForMinMax()::CD,39543:CD,39544
39540 :: EXPR :: reference :: J :: v3 = p0 $null .iMillis::DD,39543
39543 :: EXPR :: assign :: Z :: v5 = v3 == #(-9223372036854775808 l)::DD,39544
39544 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 24::CD,39548:CD,39549:CD,39553
39545 :: EXPR :: reference :: J :: v7 = p0 $null .iMillis::DD,39548
39548 :: EXPR :: assign :: Z :: v9 = v7 == #(9223372036854775807 l)::DD,39549
39549 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 33::CD,39553
39553 :: CALL :: call :: Lorg/joda/time/Chronology :: v12 = v10.withUTC()::CL,48735
39569 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.previous(long,int,int)::CE,39570:CD,39579:CD,39587:CD,39588:CD,39599:CD,39609:CD,39622:CD,39628:CD,39637:CD,39700:CD,39701:CD,39702:CD,39703:CD,39704:JM,39580
39570 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.previous(long,int,int)::JM,31579
39576 :: EXPR :: reference :: C :: v6 = p0 $null .iMode::DD,39579
39579 :: PRED :: IF :: Z :: if (v6 != #(119)) goto 19::CD,39580:CD,39585:CD,39703
39580 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p2 $null  + p3 $null ::DD,39703
39582 :: EXPR :: reference :: C :: v8 = p0 $null .iMode::DD,39585
39585 :: PRED :: IF :: Z :: if (v8 != #(115)) goto 39::CD,39703
39587 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::CF,39588
39588 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p1 $null  + v13::DD,39638:DD,39663
39599 :: CALL :: call :: J :: v21 = v18.set(v14, v19)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39609 :: CALL :: call :: J :: v25 = v23.set(v21, #(0))::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39622 :: CALL :: call :: J :: v30 = v27.add(v25, v28)::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39628 :: CALL :: call :: J :: v32 = p0 $null .setDayOfMonthPrevious(v16, v30)::JM,39638:JM,39704:CL,48788
39634 :: EXPR :: reference :: I :: v33 = p0 $null .iDayOfWeek::DD,39637
39637 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 146::CD,39638:CD,39639:CD,39657:CD,39663:CD,39664:CD,39704
39638 :: EXPR :: assign :: Z :: v51 = v32 == v14::DD,39639
39639 :: PRED :: IF :: Z :: if (v51 < #(0)) goto 211::CF,39704:CD,39644:CD,39650
39644 :: CALL :: call :: J :: v55 = v53.add(v32, #(-1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39650 :: CALL :: call :: J :: v57 = p0 $null .setDayOfMonthPrevious(v16, v55)::JM,39704:CL,48788
39657 :: CALL :: call :: J :: v35 = p0 $null .setDayOfWeek(v16, v32)::JM,39704:JM,39663:CL,37680
39663 :: EXPR :: assign :: Z :: v36 = v35 == v14::DD,39664
39664 :: PRED :: IF :: Z :: if (v36 < #(0)) goto 211::CF,39704:CD,39669:CD,39682:CD,39688:CD,39694
39669 :: CALL :: call :: J :: v41 = v38.add(v35, #(-1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
39682 :: CALL :: call :: J :: v46 = v43.set(v41, v44)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
39688 :: CALL :: call :: J :: v48 = p0 $null .setDayOfMonthPrevious(v16, v46)::CL,48788
39694 :: CALL :: call :: J :: v50 = p0 $null .setDayOfWeek(v16, v48)::JM,39704:CL,37680
39700 :: EXPR :: assign :: J :: v59 = CONVERT I to J v12::CF,39701
39701 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v58 - v59::CF,39702
39702 :: NORM :: compound :: J :: return v60::DD,39570
39703 :: EXPR :: assign :: null :: PHI v12 = v11, p2 $null , #(0)::DD,39587:DD,39700
39704 :: EXPR :: assign :: null :: PHI v58 = v32, v57, v35, v50::DD,39701:CF,39700
40175 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)::CE,40176:CD,40179:CD,40183:CD,40184:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40176 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)::JM,40332:JM,40340:JM,40349
40179 :: CALL :: call :: I :: v4 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40183 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 ? #(6)::CF,40184
40184 :: PRED :: IF :: null :: switch v6::CD,40185:CD,40186:CD,40187:CD,40188:CD,40189:CD,40190:CD,40191:CD,40192:CD,40196:CD,40197:CD,40198:CD,40202:CD,40203:CD,40204:CD,40208:CD,40209:CD,40210:CD,40211:CD,40212:CD,40213:CD,40214:CD,40215:CD,40219:CD,40220:CD,40221:CD,40222:CD,40226:CD,40227:CD,40228:CD,40229:CD,40233:CD,40234:CD,40235:CD,40236:CD,40240:CD,40241:CD,40242:CD,40243:CD,40244:CD,40248:JM,40183
40185 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v4 ? #(26)::DD,40186
40186 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 ? #(26)::DD,40187
40187 :: EXPR :: assign :: J :: v57 = CONVERT I to J v56::DD,40188
40188 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v57 * #(1800000 l)::CF,40189
40189 :: NORM :: compound :: J :: return v59::DD,40176
40190 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v4 ? #(26)::DD,40191
40191 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 ? #(2)::DD,40197:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40192 :: CALL :: call :: I :: v42 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40196 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 ? #(16)::CF,40197
40197 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 || v43::DD,40203:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40198 :: CALL :: call :: I :: v46 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40202 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v46 ? #(8)::CF,40203
40203 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v44 || v47::DD,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40204 :: CALL :: call :: I :: v50 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40208 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v48 || v50::DD,40209
40209 :: EXPR :: assign :: J :: v52 = CONVERT I to J v51::DD,40210
40210 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v52 * #(60000 l)::CF,40211
40211 :: NORM :: compound :: J :: return v54::DD,40176
40212 :: EXPR :: assign :: J :: v9 = CONVERT I to J v4::DD,40213
40213 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 ? #(58)::DD,40214
40214 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 ? #(26)::DD,40221:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40215 :: CALL :: call :: I :: v15 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40219 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 ? #(24)::CF,40220
40220 :: EXPR :: assign :: J :: v18 = CONVERT I to J v17::CF,40221
40221 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v13 || v18::DD,40228:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40222 :: CALL :: call :: I :: v21 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40226 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 ? #(16)::CF,40227
40227 :: EXPR :: assign :: J :: v24 = CONVERT I to J v23::CF,40228
40228 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v19 || v24::DD,40235:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40229 :: CALL :: call :: I :: v27 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40233 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 ? #(8)::CF,40234
40234 :: EXPR :: assign :: J :: v30 = CONVERT I to J v29::CF,40235
40235 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v25 || v30::DD,40241:JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40236 :: CALL :: call :: I :: v33 = p1 $null .readUnsignedByte()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40240 :: EXPR :: assign :: J :: v34 = CONVERT I to J v33::CF,40241
40241 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 || v34::DD,40242
40242 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v35 * #(1000 l)::CF,40243
40243 :: NORM :: compound :: J :: return v37::DD,40176
40244 :: CALL :: call :: J :: v8 = p1 $null .readLong()::JM,40208:JM,40240:JM,40226:JM,40212:JM,40196:JM,40183:JM,40248:JM,40185:JM,40233:JM,40202:JM,40219:JM,40190
40248 :: NORM :: compound :: J :: return v8::DD,40176
40298 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)::CE,40299:CD,40303:CD,40307:CD,40308:CD,40319:CD,40323:CD,40324:CD,40325:CD,40326:CD,40327:CD,40373:CD,40381:CD,40385:CD,40391:JM,29601:JM,29604:JM,29607:JM,16663:JM,29595:JM,16669:JM,29598:CD,40401:CD,40403:CD,40404:JM,40354:JM,40405:JM,40313
40299 :: EXIT :: exit :: Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone :: org.joda.time.tz.DateTimeZoneBuilder.PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)::JM,31739
40303 :: CALL :: call :: I :: v5 = p1 $null .readUnsignedShort()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40307 :: NORM :: declaration :: [Ljava/lang/String :: v6 = new java.lang.String[]::CF,40403
40308 :: PRED :: IF :: Z :: if (v12 >= v5) goto 38::CD,40309:CD,40317:CD,40403:JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40309 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $null .readUTF()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40313 :: EXPR :: modify :: Ljava/lang/Object :: v6[v12] = v9::
40317 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v12 + #(1)::DD,40403
40319 :: CALL :: call :: I :: v14 = p1 $null .readInt()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40323 :: NORM :: declaration :: [J :: v15 = new []::CF,40324
40324 :: NORM :: declaration :: [I :: v16 = new []::CF,40325
40325 :: NORM :: declaration :: [I :: v17 = new []::CF,40326
40326 :: NORM :: declaration :: [Ljava/lang/String :: v18 = new java.lang.String[]::CF,40404
40327 :: PRED :: IF :: Z :: if (v35 >= v14) goto 169::CD,40328:CD,40336:CD,40340:CD,40345:CD,40349:CD,40354:CD,40379:CD,40404:CD,40405:JM,40385:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40326:JM,40327:JM,40313
40328 :: CALL :: call :: J :: v20 = readMillis(p1 $null )::JM,40332:CL,40175
40332 :: EXPR :: modify :: J :: v15[v35] = v20::
40336 :: CALL :: call :: J :: v22 = readMillis(p1 $null )::JM,40340:CL,40175
40340 :: EXPR :: assign :: I :: v23 = CONVERT J to I v22::DD,40341
40341 :: EXPR :: modify :: I :: v16[v35] = v23::
40345 :: CALL :: call :: J :: v25 = readMillis(p1 $null )::JM,40349:CL,40175
40349 :: EXPR :: assign :: I :: v26 = CONVERT J to I v25::DD,40350
40350 :: EXPR :: modify :: I :: v17[v35] = v26::
40354 :: PRED :: IF :: Z :: if (v5 >= #(256)) goto 128::CD,40355:CD,40360:CD,40405:JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40326:JM,40327:JM,40313
40355 :: CALL :: call :: I :: v29 = p1 $null .readUnsignedByte()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40360 :: CALL :: call :: I :: v31 = p1 $null .readUnsignedShort()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40364 :: EXPR :: reference :: Ljava/lang/Object :: v33 = v6[v32]::DD,40368
40368 :: EXPR :: modify :: Ljava/lang/Object :: v18[v35] = v33::
40373 :: NORM :: declaration :: Ljava/io/IOException :: v45 = new java.io.IOException::
40379 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,40404
40381 :: CALL :: call :: Z :: v38 = p1 $null .readBoolean()::JM,40385:JM,40354:JM,40307:JM,40323:JM,40308:JM,40324:JM,40325:JM,40405:JM,40326:JM,40327:JM,40313
40385 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,40386
40386 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone :: v40 = readFrom(p1 $null , p2 $null )::CL,48880
40391 :: NORM :: declaration :: Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone :: v42 = new org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone::DD,40401
40401 :: NORM :: compound :: Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone :: return v42::DD,40299
40403 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::DD,40308:DD,40317
40404 :: EXPR :: assign :: null :: PHI v35 = v34, #(0)::DD,40327:DD,40379
40405 :: EXPR :: assign :: null :: PHI v32 = v29, v31::
40468 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.equals(java.lang.Object)::CE,40469:CD,40473:JM,40475:JM,40477
40469 :: EXIT :: exit :: Z :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.equals(java.lang.Object)::JM,31802
40473 :: PRED :: IF :: Z :: if (p0 $null  != p1 $null ) goto 8::CD,40474:CD,40475:CD,40476
40474 :: NORM :: compound :: Z :: return #(1)::CF,40469
40475 :: EXPR :: assign :: Z :: v4=p1 $null  INSTANCEOF org.joda.time.tz.DateTimeZoneBuilder$OfYear::DD,40476
40476 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 92::CD,40477:CD,40484:CD,40521:CD,40522:CD,40523
40477 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $null ::
40478 :: EXPR :: reference :: C :: v7 = p0 $null .iMode::DD,40484
40481 :: EXPR :: reference :: C :: v8 = v6.iMode::DD,40484
40484 :: PRED :: IF :: Z :: if (v7 != v8) goto 90::CD,40491:CD,40523
40485 :: EXPR :: reference :: I :: v9 = p0 $null .iMonthOfYear::DD,40491
40488 :: EXPR :: reference :: I :: v10 = v6.iMonthOfYear::DD,40491
40491 :: PRED :: IF :: Z :: if (v9 != v10) goto 90::CD,40498:CD,40523
40492 :: EXPR :: reference :: I :: v11 = p0 $null .iDayOfMonth::DD,40498
40495 :: EXPR :: reference :: I :: v12 = v6.iDayOfMonth::DD,40498
40498 :: PRED :: IF :: Z :: if (v11 != v12) goto 90::CD,40505:CD,40523
40499 :: EXPR :: reference :: I :: v13 = p0 $null .iDayOfWeek::DD,40505
40502 :: EXPR :: reference :: I :: v14 = v6.iDayOfWeek::DD,40505
40505 :: PRED :: IF :: Z :: if (v13 != v14) goto 90::CD,40512:CD,40523
40506 :: EXPR :: reference :: Z :: v15 = p0 $null .iAdvance::DD,40512
40509 :: EXPR :: reference :: Z :: v16 = v6.iAdvance::DD,40512
40512 :: PRED :: IF :: Z :: if (v15 != v16) goto 90::CD,40519:CD,40523
40513 :: EXPR :: reference :: I :: v17 = p0 $null .iMillisOfDay::DD,40519
40516 :: EXPR :: reference :: I :: v18 = v6.iMillisOfDay::DD,40519
40519 :: PRED :: IF :: Z :: if (v17 != v18) goto 90::CD,40523
40521 :: NORM :: compound :: Z :: return v20::CF,40469
40522 :: NORM :: compound :: Z :: return #(0)::CF,40469
40523 :: EXPR :: assign :: null :: PHI v20 = #(1), #(0)::CF,40521
40603 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoLogger.1.initialValue()::CF,40604:CD,40607:CD,40609
40604 :: EXIT :: exit :: Ljava/lang/Boolean :: org.joda.time.tz.ZoneInfoLogger.1.initialValue()::JM,31846
40607 :: EXPR :: reference :: Ljava/lang/Boolean :: v3 = java.lang.Boolean.FALSE::CF,40609
40609 :: NORM :: compound :: Ljava/lang/Boolean :: return v3::CF,40604
40960 :: EXPR :: modify :: I :: p0 $null .iYear = p1 $null ::
40963 :: EXPR :: modify :: J :: p0 $null .iFirstDayMillis = p2 $null ::
40972 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.millis()::CE,40973:CD,40979
40973 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.millis()::JM,32145
40976 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iMillis::DD,40979
40979 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,40973
40981 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.Fields.isSupported(org.joda.time.DurationField)::CF,40982:CD,40985:CD,40991:CD,40992
40982 :: EXIT :: exit :: Z :: org.joda.time.chrono.AssembledChronology.Fields.isSupported(org.joda.time.DurationField)::JM,32144:JM,32156:JM,32168:JM,32180:JM,32192:JM,32204:JM,32216:JM,32228:JM,32240:JM,32252:JM,32264:JM,32276
40985 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,40987:CD,40992
40987 :: CALL :: call :: Z :: v5 = p1 $null .isSupported()::JM,40992:CL,49044:CL,49050:CL,49038
40991 :: NORM :: compound :: Z :: return v7::CF,40982
40992 :: EXPR :: assign :: null :: PHI v7 = #(0), v5::CF,40991
40997 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.seconds()::CE,40998:CD,41004
40998 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.seconds()::JM,32157
41001 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iSeconds::DD,41004
41004 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,40998
41006 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.minutes()::CE,41007:CD,41013
41007 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.minutes()::JM,32169
41010 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iMinutes::DD,41013
41013 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41007
41015 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.hours()::CE,41016:CD,41022
41016 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.hours()::JM,32181
41019 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iHours::DD,41022
41022 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41016
41024 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.halfdays()::CE,41025:CD,41031
41025 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.halfdays()::JM,32193
41028 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iHalfdays::DD,41031
41031 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41025
41033 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.days()::CE,41034:CD,41040
41034 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.days()::JM,32205
41037 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iDays::DD,41040
41040 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41034
41042 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.weeks()::CE,41043:CD,41049
41043 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.weeks()::JM,32217
41046 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iWeeks::DD,41049
41049 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41043
41051 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.weekyears()::CE,41052:CD,41058
41052 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.weekyears()::JM,32229
41055 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iWeekyears::DD,41058
41058 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41052
41060 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.months()::CE,41061:CD,41067
41061 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.months()::JM,32241
41064 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iMonths::DD,41067
41067 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41061
41069 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.years()::CE,41070:CD,41076
41070 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.years()::JM,32253
41073 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iYears::DD,41076
41076 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41070
41078 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.centuries()::CE,41079:CD,41085
41079 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.centuries()::JM,32265
41082 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iCenturies::DD,41085
41085 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41079
41087 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.eras()::CE,41088:CD,41094
41088 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.AssembledChronology.eras()::JM,32277
41091 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v3 = p0 $null .iEras::DD,41094
41094 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v3::CF,41088
41096 :: ENTR :: entry :: null :: org.joda.time.chrono.AssembledChronology.Fields.isSupported(org.joda.time.DateTimeField)::CE,41097:CD,41100:CD,41106:CD,41107
41097 :: EXIT :: exit :: Z :: org.joda.time.chrono.AssembledChronology.Fields.isSupported(org.joda.time.DateTimeField)::JM,32288:JM,32300:JM,32312:JM,32324:JM,32336:JM,32348:JM,32360:JM,32372:JM,32384:JM,32396:JM,32408:JM,32420:JM,32432:JM,32444:JM,32456:JM,32468:JM,32480:JM,32492:JM,32504:JM,32516:JM,32528:JM,32540:JM,32552
41100 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,41102:CD,41107
41102 :: CALL :: call :: Z :: v5 = p1 $null .isSupported()::JM,41107:CL,25851:CL,25864:CL,25845
41106 :: NORM :: compound :: Z :: return v7::CF,41097
41107 :: EXPR :: assign :: null :: PHI v7 = #(0), v5::CF,41106
41112 :: ENTR :: entry :: null :: org.joda.time.chrono.LenientChronology.convertField(org.joda.time.DateTimeField)::CE,41113:CD,41121:CD,41126
41113 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.LenientChronology.convertField(org.joda.time.DateTimeField)::JM,32780:JM,32791:JM,32802:JM,32813:JM,32824:JM,32835:JM,32846:JM,32857:JM,32868:JM,32879:JM,32890:JM,32901:JM,32912:JM,32923:JM,32934:JM,32945:JM,32956:JM,32967:JM,32978:JM,32989:JM,33000:JM,33011:JM,33022
41121 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v7 = getInstance(p1 $null , v5)::JM,41126:CL,49056
41126 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v7::DD,41113
41129 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.assemble(org.joda.time.chrono.AssembledChronology.Fields)::CD,41134:CD,41139:CD,41144:CD,41149:CD,41154:CD,41159:CD,41164:CD,41169:CD,41174:CD,41179:CD,41184:CD,41189:CD,41194:CD,41199:CD,41204:CD,41209:CD,41214:CD,41219:CD,41224:JM,58577:JM,16850:JM,54260:JM,25796:JM,54263:JM,16856:JM,49113:JM,25790:CD,41232:JM,17088:JM,17077:JM,17094:JM,49135:JM,54337:JM,54306:JM,54309:JM,54342:JM,54313:JM,54314:JM,54319:JM,54324:JM,54327:JM,54331:JM,54332:JM,49149:CD,41253:JM,49472:JM,49505:JM,49506:JM,49475:JM,49478:JM,49449:JM,49482:JM,49483:JM,49453:JM,49486:JM,49488:JM,49492:JM,49493:JM,49496:CD,41269:JM,41636:JM,41592:CD,41285:CD,41298:JM,49225:CD,41306:JM,16880:JM,16898:JM,16886:JM,16904:JM,49246:CD,41318:JM,49268:CD,41330:JM,49290:CD,41342:JM,54400:JM,54387:JM,54393:CD,41350:JM,49329:CD,41358:JM,49351:JM,49379:JM,49382:JM,49373:JM,49389:CD,41387:CD,41403:CD,41413:CD,41423
41134 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v4 = org.joda.time.chrono.BasicChronology.cMillisField::DD,41136
41136 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .millis = v4::
41139 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v5 = org.joda.time.chrono.BasicChronology.cSecondsField::DD,41141
41141 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .seconds = v5::
41144 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v6 = org.joda.time.chrono.BasicChronology.cMinutesField::DD,41146
41146 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .minutes = v6::
41149 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v7 = org.joda.time.chrono.BasicChronology.cHoursField::DD,41151
41151 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .hours = v7::
41154 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v8 = org.joda.time.chrono.BasicChronology.cHalfdaysField::DD,41156
41156 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .halfdays = v8::
41159 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v9 = org.joda.time.chrono.BasicChronology.cDaysField::DD,41161
41161 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .days = v9::
41164 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v10 = org.joda.time.chrono.BasicChronology.cWeeksField::DD,41166
41166 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .weeks = v10::
41169 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v11 = org.joda.time.chrono.BasicChronology.cMillisOfSecondField::DD,41171
41171 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfSecond = v11::
41174 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v12 = org.joda.time.chrono.BasicChronology.cMillisOfDayField::DD,41176
41176 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .millisOfDay = v12::
41179 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v13 = org.joda.time.chrono.BasicChronology.cSecondOfMinuteField::DD,41181
41181 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfMinute = v13::
41184 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v14 = org.joda.time.chrono.BasicChronology.cSecondOfDayField::DD,41186
41186 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .secondOfDay = v14::
41189 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v15 = org.joda.time.chrono.BasicChronology.cMinuteOfHourField::DD,41191
41191 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfHour = v15::
41194 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v16 = org.joda.time.chrono.BasicChronology.cMinuteOfDayField::DD,41196
41196 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .minuteOfDay = v16::
41199 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v17 = org.joda.time.chrono.BasicChronology.cHourOfDayField::DD,41201
41201 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfDay = v17::
41204 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v18 = org.joda.time.chrono.BasicChronology.cHourOfHalfdayField::DD,41206
41206 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .hourOfHalfday = v18::
41209 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v19 = org.joda.time.chrono.BasicChronology.cClockhourOfDayField::DD,41211
41211 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfDay = v19::
41214 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v20 = org.joda.time.chrono.BasicChronology.cClockhourOfHalfdayField::DD,41216
41216 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .clockhourOfHalfday = v20::
41219 :: EXPR :: reference :: Lorg/joda/time/DateTimeField :: v21 = org.joda.time.chrono.BasicChronology.cHalfdayOfDayField::DD,41221
41221 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .halfdayOfDay = v21::
41224 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicYearDateTimeField :: v22 = new org.joda.time.chrono.BasicYearDateTimeField::DD,41229
41229 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .year = v22::
41232 :: NORM :: declaration :: Lorg/joda/time/chrono/GJYearOfEraDateTimeField :: v24 = new org.joda.time.chrono.GJYearOfEraDateTimeField::DD,41241
41241 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfEra = v24::
41253 :: NORM :: declaration :: Lorg/joda/time/field/DividedDateTimeField :: v31 = new org.joda.time.field.DividedDateTimeField::DD,41263
41263 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .centuryOfEra = v31::
41269 :: CALL :: call :: Lorg/joda/time/DurationField :: v38 = v36.getDurationField()::JM,41273:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41273 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .centuries = v38::
41285 :: NORM :: declaration :: Lorg/joda/time/field/OffsetDateTimeField :: v43 = new org.joda.time.field.OffsetDateTimeField::DD,41295
41295 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .yearOfCentury = v43::
41298 :: NORM :: declaration :: Lorg/joda/time/chrono/GJEraDateTimeField :: v48 = new org.joda.time.chrono.GJEraDateTimeField::DD,41303
41303 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .era = v48::
41306 :: NORM :: declaration :: Lorg/joda/time/chrono/GJDayOfWeekDateTimeField :: v50 = new org.joda.time.chrono.GJDayOfWeekDateTimeField::DD,41315
41315 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfWeek = v50::
41318 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicDayOfMonthDateTimeField :: v53 = new org.joda.time.chrono.BasicDayOfMonthDateTimeField::DD,41327
41327 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfMonth = v53::
41330 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicDayOfYearDateTimeField :: v56 = new org.joda.time.chrono.BasicDayOfYearDateTimeField::DD,41339
41339 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .dayOfYear = v56::
41342 :: NORM :: declaration :: Lorg/joda/time/chrono/GJMonthOfYearDateTimeField :: v59 = new org.joda.time.chrono.GJMonthOfYearDateTimeField::DD,41347
41347 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .monthOfYear = v59::
41350 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicWeekyearDateTimeField :: v61 = new org.joda.time.chrono.BasicWeekyearDateTimeField::DD,41355
41355 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyear = v61::
41358 :: NORM :: declaration :: Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField :: v63 = new org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField::DD,41367
41367 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekOfWeekyear = v63::
41387 :: NORM :: declaration :: Lorg/joda/time/field/OffsetDateTimeField :: v72 = new org.joda.time.field.OffsetDateTimeField::DD,41397
41397 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p1 $null .weekyearOfCentury = v72::
41403 :: CALL :: call :: Lorg/joda/time/DurationField :: v78 = v76.getDurationField()::JM,41407:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41407 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .years = v78::
41413 :: CALL :: call :: Lorg/joda/time/DurationField :: v81 = v79.getDurationField()::JM,41417:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41417 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .months = v81::
41423 :: CALL :: call :: Lorg/joda/time/DurationField :: v84 = v82.getDurationField()::JM,41427:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41427 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p1 $null .weekyears = v84::
41562 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getDurationField()::CE,41563:CD,41569:CD,41573
41563 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.field.DelegatedDateTimeField.getDurationField()::JM,33152:JM,38391:JM,41273:JM,41407:JM,41417:JM,41427:JM,41573:JM,49386
41569 :: CALL :: call :: Lorg/joda/time/DurationField :: v5 = v3.getDurationField()::JM,41573:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41573 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v5::DD,41563
41592 :: CALL :: call :: Lorg/joda/time/DurationField :: v8 = v6.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41630 :: EXPR :: reference :: I :: v9 = p1 $null .iDivisor::DD,41633
41633 :: EXPR :: modify :: I :: p0 $null .iDivisor = v9::
41636 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = p2 $null ::
41639 :: EXPR :: reference :: Lorg/joda/time/DurationField :: v10 = p1 $null .iDurationField::DD,41642
41642 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeField = v10::
41655 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)::CE,41656:CD,41661:JM,41667
41656 :: EXIT :: exit :: Lorg/joda/time/DurationField :: org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)::JM,33225:JM,33237:JM,33249:JM,33261:JM,33273:JM,33285:JM,33297:JM,33309:JM,33321:JM,33333:JM,33345:JM,33357
41661 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 12::CD,41662:CD,41666:CD,41667
41662 :: CALL :: call :: Z :: v7 = p1 $null .isSupported()::JM,41666:CL,49044:CL,49050:CL,49038
41666 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 15::CD,41667:CD,41668:CD,41673
41667 :: NORM :: compound :: Lorg/joda/time/DurationField :: return p1 $null ::DD,41656
41668 :: CALL :: call :: Z :: v10 = p2 $null .containsKey(p1 $null )::JM,41673
41673 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 30::CF,41681:CD,41674:CD,41679:CD,41680:JM,49585:JM,49570:JM,16850:JM,49575:JM,16856:JM,49578:CD,41691:CD,41697
41674 :: CALL :: call :: Ljava/lang/Object :: v18 = p2 $null .get(p1 $null )::JM,41679
41679 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::CF,41680
41680 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v19::DD,41656
41681 :: NORM :: declaration :: Lorg/joda/time/chrono/ZonedChronology$ZonedDurationField :: v11 = new org.joda.time.chrono.ZonedChronology$ZonedDurationField::DD,41697
41691 :: CALL :: call :: Ljava/lang/Object :: v16 = p2 $null .put(p1 $null , v11)::
41697 :: NORM :: compound :: Lorg/joda/time/DurationField :: return v11::DD,41656
41717 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)::CE,41718:CD,41723:JM,41729
41718 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)::JM,33369:JM,33381:JM,33393:JM,33405:JM,33417:JM,33429:JM,33441:JM,33453:JM,33465:JM,33477:JM,33489:JM,33501:JM,33513:JM,33525:JM,33537:JM,33549:JM,33561:JM,33573:JM,33585:JM,33597:JM,33609:JM,33621:JM,33633
41723 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 12::CD,41724:CD,41728:CD,41729
41724 :: CALL :: call :: Z :: v7 = p1 $null .isSupported()::JM,41728:CL,25851:CL,25864:CL,25845
41728 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 15::CD,41729:CD,41730:CD,41735
41729 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return p1 $null ::DD,41718
41730 :: CALL :: call :: Z :: v10 = p2 $null .containsKey(p1 $null )::JM,41735
41735 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 30::CF,41743:CD,41736:CD,41741:CD,41742:CD,41748:CD,41752:CD,41762:CD,41772:JM,49904:JM,49920:JM,49907:JM,25796:JM,49910:JM,49896:JM,49901:JM,49917:JM,25790:CD,41786:CD,41792
41736 :: CALL :: call :: Ljava/lang/Object :: v30 = p2 $null .get(p1 $null )::JM,41741
41741 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,41742
41742 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v31::DD,41718
41743 :: NORM :: declaration :: Lorg/joda/time/chrono/ZonedChronology$ZonedDateTimeField :: v11 = new org.joda.time.chrono.ZonedChronology$ZonedDateTimeField::DD,41792
41748 :: CALL :: call :: Lorg/joda/time/DurationField :: v15 = p1 $null .getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
41752 :: CALL :: call :: Lorg/joda/time/DurationField :: v17 = p0 $null .convertField(v15, p2 $null )::CL,41655
41762 :: CALL :: call :: Lorg/joda/time/DurationField :: v21 = p0 $null .convertField(v19, p2 $null )::CL,41655
41772 :: CALL :: call :: Lorg/joda/time/DurationField :: v25 = p0 $null .convertField(v23, p2 $null )::CL,41655
41786 :: CALL :: call :: Ljava/lang/Object :: v28 = p2 $null .put(p1 $null , v11)::
41792 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v11::DD,41718
41821 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType)::CE,41822:CD,41825:CD,41827:CD,41844:CD,41858:CD,41859:CD,41860
41822 :: EXIT :: exit :: Lorg/joda/time/field/UnsupportedDurationField :: org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType)::JM,33790:JM,33802:JM,33814:JM,33826:JM,33838:JM,33850:JM,33862:JM,33874:JM,33886:JM,33898:JM,33910:JM,33922:JM,38422
41825 :: EXPR :: reference :: Ljava/util/HashMap :: v3 = org.joda.time.field.UnsupportedDurationField.cCache::DD,41827
41827 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 23::CF,41828:CD,41838:CD,41843:CD,41859
41828 :: NORM :: declaration :: Ljava/util/HashMap :: v9 = new java.util.HashMap::
41838 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $null )::JM,41843
41843 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,41859
41844 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 57::CF,41860:CF,41845:JM,49948:CD,41852
41845 :: NORM :: declaration :: Lorg/joda/time/field/UnsupportedDurationField :: v13 = new org.joda.time.field.UnsupportedDurationField::DD,41860
41852 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.put(p1 $null , v13)::
41858 :: NORM :: compound :: Lorg/joda/time/field/UnsupportedDurationField :: return v18::DD,41822
41859 :: EXPR :: assign :: null :: PHI v12 = #(null), v8::DD,41844:DD,41860
41860 :: EXPR :: assign :: null :: PHI v18 = v12, v13::CF,41858
41877 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)::CE,41878:CD,41882:CD,41884:CD,41907:CD,41922:CD,41923:CD,41924:JM,41906
41878 :: EXIT :: exit :: Lorg/joda/time/field/UnsupportedDateTimeField :: org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)::JM,33939:JM,33957:JM,33975:JM,33993:JM,34011:JM,34029:JM,34047:JM,34065:JM,34083:JM,34101:JM,34119:JM,34137:JM,34155:JM,34173:JM,34191:JM,34209:JM,34227:JM,34245:JM,34263:JM,34281:JM,34299:JM,34317:JM,34335
41882 :: EXPR :: reference :: Ljava/util/HashMap :: v4 = org.joda.time.field.UnsupportedDateTimeField.cCache::DD,41884
41884 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 23::CF,41885:CD,41895:CD,41900:CD,41901:CD,41923
41885 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::
41895 :: CALL :: call :: Ljava/lang/Object :: v8 = v6.get(p1 $null )::JM,41900
41900 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,41901:DD,41923
41901 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 49::CF,41923:CD,41902:CD,41906
41902 :: CALL :: call :: Lorg/joda/time/DurationField :: v11 = v9.getDurationField()::JM,41906:CL,38626
41906 :: PRED :: IF :: Z :: if (v11 == p2 $null ) goto 49::CF,41923
41907 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 72::CF,41924:CF,41908:JM,49971:JM,49974:JM,49966:CD,41916
41908 :: NORM :: declaration :: Lorg/joda/time/field/UnsupportedDateTimeField :: v16 = new org.joda.time.field.UnsupportedDateTimeField::DD,41924
41916 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.put(p1 $null , v16)::
41922 :: NORM :: compound :: Lorg/joda/time/field/UnsupportedDateTimeField :: return v21::DD,41878
41923 :: EXPR :: assign :: null :: PHI v15 = #(null), v9, v9, #(null)::DD,41907:DD,41924
41924 :: EXPR :: assign :: null :: PHI v21 = v15, v16::CF,41922
41948 :: ENTR :: entry :: null :: org.joda.time.DateTimeFieldType.era()::CF,41949:CD,41951:CD,41953
41949 :: EXIT :: exit :: Lorg/joda/time/DateTimeFieldType :: org.joda.time.DateTimeFieldType.era()::JM,46472
41951 :: EXPR :: reference :: Lorg/joda/time/DateTimeFieldType :: v2 = org.joda.time.DateTimeFieldType.ERA_TYPE::CF,41953
41953 :: NORM :: compound :: Lorg/joda/time/DateTimeFieldType :: return v2::CF,41949
41991 :: ENTR :: entry :: null :: org.joda.time.PeriodType.standard()::CE,41992:CD,41994:CD,41996:CD,42096:CD,42097
41992 :: EXIT :: exit :: Lorg/joda/time/PeriodType :: org.joda.time.PeriodType.standard()::JM,34438
41994 :: EXPR :: reference :: Lorg/joda/time/PeriodType :: v2 = org.joda.time.PeriodType.cStandard::DD,41996:DD,42097
41996 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 118::CF,42097:CF,41997:CD,41998:CD,41999:CD,42006:CD,42013:CD,42020:CD,42027:CD,42034:CD,42041:CD,42048:CD,42055:JM,37761:JM,37755:JM,37758
41997 :: NORM :: declaration :: Lorg/joda/time/PeriodType :: v4 = new org.joda.time.PeriodType::DD,42097:CF,41998
41998 :: NORM :: declaration :: [Lorg/joda/time/DurationFieldType :: v7 = new org.joda.time.DurationFieldType[]::
41999 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v10 = years()::JM,42002:CL,10186
42002 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = v10::
42006 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v13 = months()::JM,42009:CL,10172
42009 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(1)] = v13::
42013 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v16 = weeks()::JM,42016:CL,9957
42016 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(2)] = v16::
42020 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v19 = days()::JM,42023:CL,9950
42023 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(3)] = v19::
42027 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v22 = hours()::JM,42030:CL,9936
42030 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(4)] = v22::
42034 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v25 = minutes()::JM,42037:CL,9929
42037 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(5)] = v25::
42041 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v28 = seconds()::JM,42044:CL,9904
42044 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(6)] = v28::
42048 :: CALL :: call :: Lorg/joda/time/DurationFieldType :: v31 = millis()::JM,42051:CL,10264
42051 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(7)] = v31::
42055 :: NORM :: declaration :: [I :: v32 = new []::
42056 :: EXPR :: modify :: I :: v32[#(0)] = #(0)::
42060 :: EXPR :: modify :: I :: v32[#(1)] = #(1)::
42064 :: EXPR :: modify :: I :: v32[#(2)] = #(2)::
42068 :: EXPR :: modify :: I :: v32[#(3)] = #(3)::
42072 :: EXPR :: modify :: I :: v32[#(4)] = #(4)::
42076 :: EXPR :: modify :: I :: v32[#(5)] = #(5)::
42080 :: EXPR :: modify :: I :: v32[#(6)] = #(6)::
42084 :: EXPR :: modify :: I :: v32[#(7)] = #(7)::
42096 :: NORM :: compound :: Lorg/joda/time/PeriodType :: return v34::DD,41992
42097 :: EXPR :: assign :: null :: PHI v34 = v2, v4::CF,42096
42149 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.getInstance(org.joda.time.DateTimeZone)::CD,42153:CD,42159:CD,42164:CD,42165
42153 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 8::CD,42154
42154 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v5 = getDefault()::CL,25571
42159 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,42164
42164 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,42165
42165 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 57::CD,42169:JM,16402:JM,16405:JM,16408:CD,42180
42169 :: CALL :: call :: Lorg/joda/time/chrono/ZonedChronology :: v14 = getInstance(v12, v6)::CL,25733
42180 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.putIfAbsent(v6, v11)::
42210 :: ENTR :: entry :: null :: org.joda.time.PeriodType.size()::CE,42211:CD,42217:CD,42218
42211 :: EXIT :: exit :: I :: org.joda.time.PeriodType.size()::JM,34466
42214 :: EXPR :: reference :: [Lorg/joda/time/DurationFieldType :: v3 = p0 $null .iTypes::DD,42217
42217 :: EXPR :: assign :: I :: v4 = v3.length::CF,42218
42218 :: NORM :: compound :: I :: return v4::CF,42211
42235 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getDifferenceAsLong(long,long)::CD,42241:CD,42252:CD,42263
42241 :: CALL :: call :: I :: v6 = p0 $null .getOffsetToAdd(p2 $null )::CL,42349
42249 :: EXPR :: reference :: Z :: v8 = p0 $null .iTimeField::DD,42252
42252 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,42254
42254 :: CALL :: call :: I :: v11 = p0 $null .getOffsetToAdd(p1 $null )::CL,42349
42263 :: CALL :: call :: J :: v18 = v7.getDifferenceAsLong(v14, v16)::CL,42302:CL,49997:CL,50011:CL,42235:CL,42283:CL,42323
42283 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.LinkedDurationField.getDifferenceAsLong(long,long)::CD,42292
42292 :: CALL :: call :: J :: v7 = v5.getDifferenceAsLong(p1 $null , p2 $null )::CL,50060:CL,50022:CL,50152
42302 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)::
42323 :: ENTR :: entry :: null :: org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)::CD,42333
42333 :: CALL :: call :: J :: v8 = v6.getDifferenceAsLong(p1 $null , p2 $null )::CL,42302:CL,49997:CL,50011:CL,42235:CL,42283:CL,42323
42349 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getOffsetToAdd(long)::CE,42350:CD,42357:CD,42377
42350 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getOffsetToAdd(long)::JM,34850:JM,38567
42357 :: CALL :: call :: I :: v6 = v4.getOffset(p1 $null )::JM,42377:CL,22651:CL,22661:CL,22668:CL,22544
42377 :: NORM :: compound :: I :: return v6::DD,42350
42393 :: ENTR :: entry :: null :: org.joda.time.field.ImpreciseDateTimeField.getDifference(long,long)::CE,42394:CD,42399:CD,42405:CD,42409
42394 :: EXIT :: exit :: I :: org.joda.time.field.ImpreciseDateTimeField.getDifference(long,long)::JM,34661
42399 :: CALL :: call :: J :: v6 = p0 $null .getDifferenceAsLong(p1 $null , p2 $null )::CL,50060:CL,50022:CL,50152
42405 :: CALL :: call :: I :: v8 = safeToInt(v6)::JM,42409:CL,38635
42409 :: NORM :: compound :: I :: return v8::DD,42394
42413 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.unsupported()::CD,42418:CD,42425:CD,42430:CD,42435
42418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
42425 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v4.append(v6)::
42430 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( field is unsupported))::
42435 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
42448 :: ENTR :: entry :: null :: org.joda.time.field.FieldUtils.safeAdd(long,long)::CF,42449:CD,42453:CD,42494
42449 :: EXIT :: exit :: J :: org.joda.time.field.FieldUtils.safeAdd(long,long)::JM,34761:JM,34809:JM,38451:JM,38518
42453 :: EXPR :: assign :: Ljava/lang/Object :: v4 = p1 $null  + p2 $null ::DD,42494
42494 :: NORM :: compound :: J :: return v4::CF,42449
42507 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getOffsetFromLocalToSubtract(long)::CE,42508:CD,42515:CD,42535
42508 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDurationField.getOffsetFromLocalToSubtract(long)::JM,34850:JM,38567
42515 :: CALL :: call :: I :: v6 = v4.getOffsetFromLocal(p1 $null )::JM,42535:CL,50466:CL,50345:CL,50476
42535 :: NORM :: compound :: I :: return v6::DD,42508
42551 :: ENTR :: entry :: null :: org.joda.time.tz.UTCProvider.getZone(java.lang.String)::CE,42552:CD,42556:CD,42561
42552 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.tz.UTCProvider.getZone(java.lang.String)::JM,34891:JM,34892:JM,35129:JM,35130
42556 :: CALL :: call :: Z :: v6 = #(UTC).equalsIgnoreCase(p1 $null )::JM,42561
42561 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,42562:CD,42564:CD,42565
42562 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v9 = org.joda.time.DateTimeZone.UTC::CF,42564
42564 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v9::CF,42552
42565 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return #(null)::CF,42552
42571 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.getZone(java.lang.String)::CE,42572:CD,42576:JM,42609
42572 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.tz.ZoneInfoProvider.getZone(java.lang.String)::JM,34891:JM,34892:JM,35129:JM,35130:JM,42622
42576 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 7::CD,42577:CD,42581:CD,42586
42577 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return #(null)::DD,42572
42581 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $null )::JM,42609:JM,42586:JM,42588:JM,42590
42586 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 24::CD,42587:CD,42588:CD,42589
42587 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return #(null)::DD,42572
42588 :: EXPR :: assign :: Z :: v8=v7 INSTANCEOF java.lang.ref.SoftReference::DD,42589
42589 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 60::CD,42590:CD,42591:CD,42595:CD,42596:CD,42604:CD,42609:JM,42576
42590 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v7::JM,42595
42591 :: CALL :: call :: Ljava/lang/Object :: v19 = v17.get()::JM,42595
42595 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,42596:DD,42597
42596 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 54::CD,42597:CD,42598:CD,42603
42597 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v20::DD,42572
42598 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v22 = p0 $null .loadZoneData(p1 $null )::JM,42603:CL,50483
42603 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v22::DD,42572
42604 :: CALL :: call :: Z :: v11 = p1 $null .equals(v7)::JM,42576:JM,42609
42609 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 74::CD,42610:CD,42615:CD,42617:CD,42622
42610 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v16 = p0 $null .loadZoneData(p1 $null )::JM,42615:CL,50483
42615 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v16::DD,42572
42617 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v14 = p0 $null .getZone(v12)::JM,42622:CL,42571
42622 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v14::DD,42572
42650 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.parseOffset(java.lang.String)::CE,42651:CD,42656:CD,42661:CD,42662:CD,42663
42651 :: EXIT :: exit :: I :: org.joda.time.DateTimeZone.parseOffset(java.lang.String)::JM,34909:JM,35084
42656 :: CALL :: call :: J :: v5 = v3.parseMillis(p1 $null )::JM,42661:CL,50568
42661 :: EXPR :: assign :: I :: v6 = CONVERT J to I v5::CF,42662
42662 :: EXPR :: assign :: Ljava/lang/Object :: v7 = -(v6)::CF,42663
42663 :: NORM :: compound :: I :: return v7::DD,42651
42666 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.printOffset(int)::CE,42667:CD,42670:CD,42674:CD,42687:CD,42688:CD,42693:CD,42694:CD,42695:CD,42696:CD,42701:CD,42706:CD,42707:CD,42708:CD,42748:JM,42686
42667 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DateTimeZone.printOffset(int)::JM,63638:JM,63732
42670 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::JM,42713:JM,42732:JM,42747
42674 :: PRED :: IF :: Z :: if (p1 $null  < #(0)) goto 25::CD,42675:CD,42681:CD,42686:CD,42748
42675 :: CALL :: call :: Ljava/lang/StringBuffer :: v12 = v3.append(#(43))::
42681 :: CALL :: call :: Ljava/lang/StringBuffer :: v8 = v3.append(#(45))::
42686 :: EXPR :: assign :: Ljava/lang/Object :: v9 = -(p1 $null )::DD,42748
42687 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 / #(3600000)::DD,42693
42688 :: CALL :: call :: V :: appendPaddedInteger(v3, v15, #(2))::CL,50625
42693 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 * #(3600000)::CF,42694
42694 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v13 - v18::DD,42695:DD,42707
42695 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 / #(60000)::DD,42706
42696 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = v3.append(#(58))::
42701 :: CALL :: call :: V :: appendPaddedInteger(v3, v21, #(2))::CL,50625
42706 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v21 * #(60000)::CF,42707
42707 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v19 - v26::DD,42708:DD,42714:DD,42726
42708 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 88::CD,42709:CD,42713:CD,42714:CD,42715:CD,42720:CD,42725:CD,42726:CD,42727
42709 :: CALL :: call :: Ljava/lang/String :: v45 = v3.toString()::JM,42713
42713 :: NORM :: compound :: Ljava/lang/String :: return v45::DD,42667
42714 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 / #(1000)::DD,42725
42715 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v3.append(#(58))::
42720 :: CALL :: call :: V :: appendPaddedInteger(v3, v29, #(2))::CL,50625
42725 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v29 * #(1000)::CF,42726
42726 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 - v33::DD,42727
42727 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 126::CD,42728:CD,42732:CD,42733:CD,42738:CD,42743:CD,42747
42728 :: CALL :: call :: Ljava/lang/String :: v43 = v3.toString()::JM,42732
42732 :: NORM :: compound :: Ljava/lang/String :: return v43::DD,42667
42733 :: CALL :: call :: Ljava/lang/StringBuffer :: v37 = v3.append(#(46))::
42738 :: CALL :: call :: V :: appendPaddedInteger(v3, v34, #(3))::CL,50625
42743 :: CALL :: call :: Ljava/lang/String :: v41 = v3.toString()::JM,42747
42747 :: NORM :: compound :: Ljava/lang/String :: return v41::DD,42667
42748 :: EXPR :: assign :: null :: PHI v13 = p1 $null , v9::DD,42687:DD,42694
42809 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.fixedOffsetZone(java.lang.String,int)::CE,42810:CD,42814
42810 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.DateTimeZone.fixedOffsetZone(java.lang.String,int)::JM,34924:JM,35099
42814 :: PRED :: IF :: Z :: if (p2 $null  != #(0)) goto 8::CF,42818:CD,42815:CD,42817:JM,29331:JM,29334:JM,16663:JM,29337:JM,16669:CD,42826
42815 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v8 = org.joda.time.DateTimeZone.UTC::CF,42817
42817 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v8::DD,42810
42818 :: NORM :: declaration :: Lorg/joda/time/tz/FixedDateTimeZone :: v5 = new org.joda.time.tz.FixedDateTimeZone::DD,42826
42826 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v5::DD,42810
42876 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getConvertedId(java.lang.String)::CE,42877:CD,42882:CD,42887:CD,42888
42877 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DateTimeZone.getConvertedId(java.lang.String)::JM,35028
42882 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $null )::JM,42887
42887 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,42888
42888 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,42877
42891 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.convertToAsciiNumber(java.lang.String)::CD,42895:CD,42900:CD,42904:CD,42925:CD,42930
42895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,42904:JM,42915:JM,42916
42900 :: CALL :: call :: I :: v7 = v3.length()::JM,42904
42904 :: PRED :: IF :: Z :: if (v19 >= v7) goto 56::CD,42900:CD,42905:CD,42910:CD,42915:CD,42923:CD,42930:JM,42916
42905 :: CALL :: call :: C :: v9 = v3.charAt(v19)::JM,42915:JM,42916
42910 :: CALL :: call :: I :: v12 = digit(v9, #(10))::JM,42915:JM,42916
42915 :: PRED :: IF :: Z :: if (v12 < #(0)) goto 49::CD,42916:CD,42917:CD,42918:CF,42923
42916 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(48) + v12::CF,42917
42917 :: EXPR :: assign :: C :: v15 = CONVERT I to C v14::
42918 :: CALL :: call :: V :: v3.setCharAt(v19, v15)::
42923 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,42930
42925 :: CALL :: call :: Ljava/lang/String :: v21 = v3.toString()::
42930 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::DD,42904:JM,42915:JM,42916:DD,42923
42990 :: NORM :: declaration :: [Lorg/joda/time/chrono/BasicChronology$YearInfo :: v8 = new org.joda.time.chrono.BasicChronology$YearInfo[]::DD,42991
42991 :: EXPR :: modify :: [Lorg/joda/time/chrono/BasicChronology$YearInfo :: p0 $null .iYearInfoCache = v8::
42997 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
43001 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(#(Invalid min days in f...))::
43006 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p3 $null )::JM,16402:JM,16405:JM,16408:JM,43020
43011 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
43020 :: EXPR :: modify :: I :: p0 $null .iMinDaysInFirstWeek = p3 $null ::
43045 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iFieldType = p1 $null ::
43048 :: EXPR :: modify :: I :: p0 $null .iMaxParsedDigits = p2 $null ::
43051 :: EXPR :: modify :: Z :: p0 $null .iSigned = p3 $null ::
43062 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.decompose(java.util.List,java.util.List,java.util.List)::CD,43069:CD,43073:CD,43122:JM,43079:JM,43102
43069 :: CALL :: call :: I :: v7 = p1 $null .size()::JM,43073:JM,43079:JM,43102
43073 :: PRED :: IF :: Z :: if (v29 >= v7) goto 112::CD,43074:CD,43079:CD,43080:CD,43096:CD,43097:CD,43102:CD,43103:CD,43119:CD,43122:JM,43073
43074 :: CALL :: call :: Ljava/lang/Object :: v10 = p1 $null .get(v29)::JM,43073:JM,43079:JM,43102
43079 :: EXPR :: assign :: Z :: v11=v10 INSTANCEOF org.joda.time.format.DateTimeFormatterBuilder$Composite::DD,43080
43080 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 55::CD,43085:CD,43091:JM,43073:JM,43079:JM,43102
43085 :: CALL :: call :: V :: p0 $null .addArrayToList(p2 $null , v13)::CL,50806
43091 :: CALL :: call :: Z :: v16 = p2 $null .add(v10)::JM,43073:JM,43079:JM,43102
43096 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v29 + #(1)::JM,43073:JM,43079:JM,43102
43097 :: CALL :: call :: Ljava/lang/Object :: v20 = p1 $null .get(v18)::JM,43073:JM,43079:JM,43102
43102 :: EXPR :: assign :: Z :: v21=v20 INSTANCEOF org.joda.time.format.DateTimeFormatterBuilder$Composite::DD,43103
43103 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 100::CD,43108:CD,43114:JM,43073:JM,43079:JM,43102
43108 :: CALL :: call :: V :: p0 $null .addArrayToList(p3 $null , v23)::CL,50806
43114 :: CALL :: call :: Z :: v26 = p3 $null .add(v20)::JM,43073:JM,43079:JM,43102
43119 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(2)::DD,43122
43122 :: EXPR :: assign :: null :: PHI v29 = v28, #(0)::DD,43073:JM,43079:JM,43102:DD,43096:DD,43119
43154 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.estimatePrintedLength()::CF,43155:CD,43158
43155 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.estimatePrintedLength()::JM,35400
43158 :: NORM :: compound :: I :: return #(1)::CF,43155
43160 :: ENTR :: entry :: null :: org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength()::CE,43161:CD,43167:CD,43171
43161 :: EXIT :: exit :: I :: org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength()::JM,35400
43164 :: EXPR :: reference :: Lorg/joda/time/format/DateTimePrinter :: v3 = p0 $null .underlying::JM,43171:JM,43167
43167 :: CALL :: call :: I :: v5 = v3.estimatePrintedLength()::JM,43171:JM,43167
43171 :: NORM :: compound :: I :: return v5::CF,43161
43173 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.estimatePrintedLength()::CE,43174:CD,43180
43174 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.estimatePrintedLength()::JM,35400
43177 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxDigits::DD,43180
43180 :: NORM :: compound :: I :: return v3::CF,43174
43182 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.estimatePrintedLength()::CE,43183:CD,43189:CD,43190:CD,43194:CD,43203:CD,43219:CD,43220:CD,43221
43183 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.estimatePrintedLength()::JM,35400:JM,43353
43186 :: EXPR :: reference :: I :: v4 = p0 $null .iMinFields::DD,43189
43189 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(1) + v4::DD,43190
43190 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v5 ? #(1)::DD,43199:DD,43220
43191 :: EXPR :: reference :: Z :: v7 = p0 $null .iShowSeparators::DD,43194
43194 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CF,43220:CD,43198:CD,43199
43195 :: EXPR :: reference :: I :: v9 = p0 $null .iMinFields::DD,43198
43198 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v9 - #(1)::CF,43199
43199 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v6 + v10::DD,43220
43200 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $null .iZeroOffsetPrintText::DD,43203
43203 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 52::CF,43221:CD,43207:CD,43211
43204 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $null .iZeroOffsetPrintText::JM,43211
43207 :: CALL :: call :: I :: v17 = v15.length()::JM,43211
43211 :: PRED :: IF :: Z :: if (v17 <= v12) goto 52::CF,43221:CD,43215
43212 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $null .iZeroOffsetPrintText::JM,43221
43215 :: CALL :: call :: I :: v20 = v18.length()::JM,43221
43219 :: NORM :: compound :: I :: return v21::CF,43183
43220 :: EXPR :: assign :: null :: PHI v12 = v6, v11::DD,43211:DD,43221
43221 :: EXPR :: assign :: null :: PHI v21 = v12, v12, v20::CF,43219
43237 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.estimatePrintedLength()::CF,43238:CD,43241:CD,43243
43238 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.estimatePrintedLength()::JM,35400
43241 :: EXPR :: reference :: I :: v3 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.MAX_LENGTH::CF,43243
43243 :: NORM :: compound :: I :: return v3::CF,43238
43245 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.estimatePrintedLength()::CE,43246:CD,43252:CD,43254:CD,43255
43246 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TextField.estimatePrintedLength()::JM,35400:JM,43371
43249 :: EXPR :: reference :: Z :: v3 = p0 $null .iShort::DD,43252
43252 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 14::CD,43255
43254 :: NORM :: compound :: I :: return v7::CF,43246
43255 :: EXPR :: assign :: null :: PHI v7 = #(6), #(20)::CF,43254
43260 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.UnpaddedNumber.estimatePrintedLength()::CE,43261:CD,43267
43261 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.UnpaddedNumber.estimatePrintedLength()::JM,35400
43264 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxParsedDigits::DD,43267
43267 :: NORM :: compound :: I :: return v3::CF,43261
43269 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.estimatePrintedLength()::CE,43270:CD,43276:CD,43280
43270 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.estimatePrintedLength()::JM,35400
43273 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $null .iValue::JM,43280
43276 :: CALL :: call :: I :: v5 = v3.length()::JM,43280
43280 :: NORM :: compound :: I :: return v5::CF,43270
43282 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.estimatePrintedLength()::CF,43283:CD,43286
43283 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.estimatePrintedLength()::JM,35400
43286 :: NORM :: compound :: I :: return #(2)::CF,43283
43288 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.estimatePrintedLength()::CE,43289:CD,43295:CD,43297:CD,43298
43289 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.estimatePrintedLength()::JM,35400
43292 :: EXPR :: reference :: I :: v3 = p0 $null .iType::DD,43295
43295 :: PRED :: IF :: Z :: if (v3 != #(1)) goto 14::CD,43298
43297 :: NORM :: compound :: I :: return v7::CF,43289
43298 :: EXPR :: assign :: null :: PHI v7 = #(4), #(20)::CF,43297
43303 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.estimatePrintedLength()::CE,43304:CD,43310
43304 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Composite.estimatePrintedLength()::JM,35400
43307 :: EXPR :: reference :: I :: v3 = p0 $null .iPrintedLengthEstimate::DD,43310
43310 :: NORM :: compound :: I :: return v3::CF,43304
43312 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.PaddedNumber.estimatePrintedLength()::CE,43313:CD,43319
43313 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.PaddedNumber.estimatePrintedLength()::JM,35400
43316 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxParsedDigits::DD,43319
43319 :: NORM :: compound :: I :: return v3::CF,43313
43321 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.MatchingParser.estimateParsedLength()::CE,43322:CD,43328
43322 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.MatchingParser.estimateParsedLength()::JM,35450:JM,35673
43325 :: EXPR :: reference :: I :: v3 = p0 $null .iParsedLengthEstimate::DD,43328
43328 :: NORM :: compound :: I :: return v3::CF,43322
43330 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.estimateParsedLength()::CE,43331:CD,43337:CD,43339:CD,43340
43331 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.estimateParsedLength()::JM,35450:JM,35673
43334 :: EXPR :: reference :: Z :: v3 = p0 $null .iLenientParse::DD,43337
43337 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 12::CD,43340
43339 :: NORM :: compound :: I :: return v7::CF,43331
43340 :: EXPR :: assign :: null :: PHI v7 = #(4), #(2)::CF,43339
43345 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.estimateParsedLength()::CE,43346:CD,43349:CD,43353
43346 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.estimateParsedLength()::JM,35450:JM,35673
43349 :: CALL :: call :: I :: v4 = p0 $null .estimatePrintedLength()::JM,43353:CL,43182
43353 :: NORM :: compound :: I :: return v4::CF,43346
43355 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.estimateParsedLength()::CF,43356:CD,43359:CD,43361
43356 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.estimateParsedLength()::JM,35450:JM,35673
43359 :: EXPR :: reference :: I :: v3 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.MAX_LENGTH::CF,43361
43361 :: NORM :: compound :: I :: return v3::CF,43356
43363 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.estimateParsedLength()::CE,43364:CD,43367:CD,43371
43364 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TextField.estimateParsedLength()::JM,35450:JM,35673
43367 :: CALL :: call :: I :: v4 = p0 $null .estimatePrintedLength()::JM,43371:CL,43245
43371 :: NORM :: compound :: I :: return v4::CF,43364
43373 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.estimateParsedLength()::CE,43374:CD,43380:CD,43384
43374 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.estimateParsedLength()::JM,35450:JM,35673
43377 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $null .iValue::JM,43384
43380 :: CALL :: call :: I :: v5 = v3.length()::JM,43384
43384 :: NORM :: compound :: I :: return v5::CF,43374
43386 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.estimateParsedLength()::CF,43387:CD,43390
43387 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.estimateParsedLength()::JM,35450:JM,35673
43390 :: NORM :: compound :: I :: return #(1)::CF,43387
43392 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.NumberFormatter.estimateParsedLength()::CE,43393:CD,43399
43393 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.NumberFormatter.estimateParsedLength()::JM,35450:JM,35673
43396 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxParsedDigits::DD,43399
43399 :: NORM :: compound :: I :: return v3::CF,43393
43401 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.estimateParsedLength()::CE,43402:CD,43408
43402 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.estimateParsedLength()::JM,35450:JM,35673
43405 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxDigits::DD,43408
43408 :: NORM :: compound :: I :: return v3::CF,43402
43410 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.estimateParsedLength()::CE,43411:CD,43417
43411 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Composite.estimateParsedLength()::JM,35450:JM,35673
43414 :: EXPR :: reference :: I :: v3 = p0 $null .iParsedLengthEstimate::DD,43417
43417 :: NORM :: compound :: I :: return v3::CF,43411
43419 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.estimateParsedLength()::CE,43420:CD,43426:CD,43428:CD,43429
43420 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.estimateParsedLength()::JM,35450:JM,35673
43423 :: EXPR :: reference :: I :: v3 = p0 $null .iType::DD,43426
43426 :: PRED :: IF :: Z :: if (v3 != #(1)) goto 14::CD,43429
43428 :: NORM :: compound :: I :: return v7::CF,43420
43429 :: EXPR :: assign :: null :: PHI v7 = #(4), #(20)::CF,43428
43795 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.openResource(java.lang.String)::CD,43803:CD,43839:CD,43844:CD,43849:CD,43854:CD,43866:CD,43871:CD,43877:CD,43887
43800 :: EXPR :: reference :: Ljava/io/File :: v4 = p0 $null .iFileDir::DD,43803
43803 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 31::CD,43822:CD,43833
43819 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $null .iResourcePath::
43822 :: CALL :: call :: Ljava/lang/String :: v8 = v6.concat(p1 $null )::
43833 :: CALL :: call :: Ljava/lang/Object :: v12 = doPrivileged(v9)::
43839 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
43844 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(#(Resource not found: '))::
43849 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v8)::
43854 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(' ClassLoader: ))::
43863 :: EXPR :: reference :: Ljava/lang/ClassLoader :: v27 = p0 $null .iLoader::JM,43887
43866 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,43887
43871 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v24.append(v30)::
43877 :: CALL :: call :: Ljava/lang/String :: v35 = v32.toString()::
43887 :: EXPR :: assign :: null :: PHI v30 = v29, #(system)::
43905 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(java.io.InputStream)::CE,43906:CD,43909:CD,43913:CD,43918:CD,43932:CD,43933:CD,43939:CD,43945
43906 :: EXIT :: exit :: Ljava/util/Map :: org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(java.io.InputStream)::JM,36292:JM,44050
43909 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v3 = new java.util.concurrent.ConcurrentHashMap::DD,43945
43913 :: NORM :: declaration :: Ljava/io/DataInputStream :: v5 = new java.io.DataInputStream::
43918 :: CALL :: call :: V :: readZoneInfoMap(v5, v3)::CL,51316
43932 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v15 = new java.lang.ref.SoftReference::
43933 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v16 = org.joda.time.DateTimeZone.UTC::
43939 :: CALL :: call :: Ljava/lang/Object :: v19 = v3.put(#(UTC), v15)::
43945 :: NORM :: compound :: Ljava/util/Map :: return v3::DD,43906
43998 :: CALL :: call :: Z :: v10 = p1 $null .endsWith(#(/))::JM,44003:JM,44028:JM,44029
44003 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 49::CF,44004:CD,44008:CD,44013:CD,44018
44004 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
44008 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p1 $null )::JM,44003:JM,44028:JM,44029
44013 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(47))::
44018 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
44028 :: PRED :: IF :: Z :: if (p2 $null  != #(null)) goto 75::CD,44029
44029 :: PRED :: IF :: Z :: if (p3 $null  != #(0)) goto 75::CD,44034
44034 :: CALL :: call :: Ljava/lang/ClassLoader :: v25 = v23.getClassLoader()::
44041 :: CALL :: call :: Ljava/io/InputStream :: v29 = p0 $null .openResource(#(ZoneInfoMap))::CL,43795
44046 :: CALL :: call :: Ljava/util/Map :: v31 = loadZoneInfoMap(v29)::JM,44050:CL,43905
44050 :: EXPR :: modify :: Ljava/util/Map :: p0 $null .iZoneInfoMap = v31::
44053 :: NORM :: declaration :: Ljava/util/TreeSet :: v32 = new java.util.TreeSet::JM,44065
44054 :: EXPR :: reference :: Ljava/util/Map :: v33 = p0 $null .iZoneInfoMap::
44057 :: CALL :: call :: Ljava/util/Set :: v35 = v33.keySet()::
44065 :: CALL :: call :: Ljava/util/SortedSet :: v38 = unmodifiableSortedSet(v32)::JM,44065
44101 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.SavedField.compareTo(org.joda.time.format.DateTimeParserBucket.SavedField)::CE,44102:CD,44120:CD,44125
44102 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserBucket.SavedField.compareTo(org.joda.time.format.DateTimeParserBucket.SavedField)::JM,36374:JM,57258
44120 :: CALL :: call :: I :: v11 = compareReverse(v7, v9)::JM,44125:JM,44126:CL,51497
44125 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 27::CD,44126:CD,44130:CD,44134:CD,44138:CD,44143
44126 :: NORM :: compound :: I :: return v11::DD,44102
44130 :: CALL :: call :: Lorg/joda/time/DurationField :: v15 = v13.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
44134 :: CALL :: call :: Lorg/joda/time/DurationField :: v17 = v4.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
44138 :: CALL :: call :: I :: v19 = compareReverse(v15, v17)::JM,44143:CL,51497
44143 :: NORM :: compound :: I :: return v19::DD,44102
44154 :: ENTR :: entry :: null :: org.joda.time.field.BaseDurationField.compareTo(org.joda.time.DurationField)::CE,44155:CD,44159:CD,44163:CD,44167:CD,44168
44155 :: EXIT :: exit :: I :: org.joda.time.field.BaseDurationField.compareTo(org.joda.time.DurationField)::JM,36388
44159 :: CALL :: call :: J :: v5 = p1 $null .getUnitMillis()::JM,44167:JM,44170:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
44163 :: CALL :: call :: J :: v7 = p0 $null .getUnitMillis()::JM,44167:JM,44170:CL,17035:CL,17000:CL,17054:CL,17015
44167 :: EXPR :: assign :: Z :: v8 = v7 == v5::DD,44168
44168 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,44169:CD,44170:CD,44171
44169 :: NORM :: compound :: I :: return #(0)::CF,44155
44170 :: EXPR :: assign :: Z :: v10 = v7 == v5::DD,44171
44171 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 30::CD,44172:CD,44173
44172 :: NORM :: compound :: I :: return #(-1)::CF,44155
44173 :: NORM :: compound :: I :: return #(1)::CF,44155
44187 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.compareTo(org.joda.time.DurationField)::CE,44188:CD,44192:CD,44196:CD,44200:CD,44201
44188 :: EXIT :: exit :: I :: org.joda.time.field.MillisDurationField.compareTo(org.joda.time.DurationField)::JM,36402
44192 :: CALL :: call :: J :: v5 = p1 $null .getUnitMillis()::JM,44200:JM,44203:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
44196 :: CALL :: call :: J :: v7 = p0 $null .getUnitMillis()::JM,44200:JM,44203:CL,17009
44200 :: EXPR :: assign :: Z :: v8 = v7 == v5::DD,44201
44201 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,44202:CD,44203:CD,44204
44202 :: NORM :: compound :: I :: return #(0)::CF,44188
44203 :: EXPR :: assign :: Z :: v10 = v7 == v5::DD,44204
44204 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 30::CD,44205:CD,44206
44205 :: NORM :: compound :: I :: return #(-1)::CF,44188
44206 :: NORM :: compound :: I :: return #(1)::CF,44188
44220 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)::CF,44221:CD,44225
44221 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDurationField.compareTo(org.joda.time.DurationField)::JM,36416
44225 :: NORM :: compound :: I :: return #(0)::CF,44221
44266 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.HalfdayField.set(long,java.lang.String,java.util.Locale)::CE,44267:CD,44273:CD,44277:CD,44282:CD,44288
44267 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicChronology.HalfdayField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44273 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v7 = forLocale(p3 $null )::CL,51547
44277 :: CALL :: call :: I :: v9 = v7.halfdayTextToValue(p2 $null )::CL,51600
44282 :: CALL :: call :: J :: v11 = p0 $null .set(p1 $null , v9)::JM,44288:CL,21805
44288 :: NORM :: compound :: J :: return v11::DD,44267
44293 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.set(long,java.lang.String,java.util.Locale)::CE,44294:CD,44300:CD,44306:CD,44312
44294 :: EXIT :: exit :: J :: org.joda.time.field.BaseDateTimeField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44300 :: CALL :: call :: I :: v7 = p0 $null .convertText(p2 $null , p3 $null )::CL,51664:CL,51646:CL,51688
44306 :: CALL :: call :: J :: v9 = p0 $null .set(p1 $null , v7)::JM,44312:CL,21759:CL,21847:CL,22352:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
44312 :: NORM :: compound :: J :: return v9::DD,44294
44320 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String,java.util.Locale)::CE,44321:CD,44330:CD,44337
44321 :: EXIT :: exit :: J :: org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44330 :: CALL :: call :: J :: v8 = v6.set(p1 $null , p2 $null , p3 $null )::JM,44337:CL,44293:CL,44354:CL,44266:CL,44342:CL,44381:CL,44320
44337 :: NORM :: compound :: J :: return v8::DD,44321
44342 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String,java.util.Locale)::CE,44343:CD,44349
44343 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44349 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v7 = p0 $null .unsupported()::CL,16323
44354 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.set(long,java.lang.String,java.util.Locale)::CE,44355:CD,44361:CD,44365:CD,44370:CD,44376
44355 :: EXIT :: exit :: J :: org.joda.time.chrono.GJEraDateTimeField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44361 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v7 = forLocale(p3 $null )::CL,51547
44365 :: CALL :: call :: I :: v9 = v7.eraTextToValue(p2 $null )::CL,51706
44370 :: CALL :: call :: J :: v11 = p0 $null .set(p1 $null , v9)::JM,44376:CL,22490
44376 :: NORM :: compound :: J :: return v11::DD,44355
44381 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.set(long,java.lang.String,java.util.Locale)::CE,44382:CD,44391:CD,44399:CD,44409:CD,44416
44382 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.set(long,java.lang.String,java.util.Locale)::JM,44337:JM,57369
44391 :: CALL :: call :: J :: v8 = v6.convertUTCToLocal(p1 $null )::CL,15971
44399 :: CALL :: call :: J :: v11 = v9.set(v8, p2 $null , p3 $null )::CL,44293:CL,44354:CL,44266:CL,44342:CL,44381:CL,44320
44409 :: CALL :: call :: J :: v15 = v12.convertLocalToUTC(v11, #(0), p1 $null )::JM,44416:CL,30729
44416 :: NORM :: compound :: J :: return v15::DD,44382
44547 :: ENTR :: entry :: null :: org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology)::CE,44548:CD,44558:JM,16402:JM,16405:JM,16408:CD,44563
44548 :: EXIT :: exit :: Lorg/joda/time/chrono/LenientChronology :: org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology)::JM,48766
44558 :: NORM :: declaration :: Lorg/joda/time/chrono/LenientChronology :: v4 = new org.joda.time.chrono.LenientChronology::DD,44563
44563 :: NORM :: compound :: Lorg/joda/time/chrono/LenientChronology :: return v4::DD,44548
44588 :: ENTR :: entry :: null :: org.joda.time.base.BaseDateTime.getChronology()::CE,44589:CD,44595
44589 :: EXIT :: exit :: Lorg/joda/time/Chronology :: org.joda.time.base.BaseDateTime.getChronology()::JM,58310
44592 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v3 = p0 $null .iChronology::DD,44595
44595 :: NORM :: compound :: Lorg/joda/time/Chronology :: return v3::CF,44589
44603 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.selectChronology(org.joda.time.Chronology)::CD,44608:CD,44622
44608 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = getChronology(p1 $null )::CL,25475
44619 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v10 = p0 $null .iZone::DD,44622
44622 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 34::CD,44626
44626 :: CALL :: call :: Lorg/joda/time/Chronology :: v13 = v9.withZone(v11)::CL,47503:CL,47430:CL,47457:CL,47382
44656 :: CALL :: call :: Lorg/joda/time/Chronology :: v10 = getChronology(p2 $null )::CL,25475
44670 :: CALL :: call :: Lorg/joda/time/Chronology :: v14 = v10.withUTC()::CL,48735
44677 :: PRED :: IF :: Z :: if (p3 $null  != #(null)) goto 44::CD,44678
44678 :: CALL :: call :: Ljava/util/Locale :: v17 = getDefault()::
44732 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,44733:CD,44739:CD,44743:CD,44747:JM,44960:JM,44802:JM,44773:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44733 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
44739 :: CALL :: call :: I :: v7 = p2 $null .length()::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44743 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v7 - p3 $null ::DD,44756:DD,44801:DD,44815
44744 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $null .iZeroOffsetParseText::DD,44747
44747 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 101::CD,44751:CD,44755:CD,44801
44748 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $null .iZeroOffsetParseText::JM,44755
44751 :: CALL :: call :: I :: v13 = v11.length()::JM,44755
44755 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 71::CD,44756:CD,44777:CD,44783
44756 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 60::CD,44757:CD,44762:CD,44765:CD,44773:JM,44960:JM,44802:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44763:JM,44799:JM,44927
44757 :: CALL :: call :: C :: v26 = p2 $null .charAt(p3 $null )::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44762 :: PRED :: IF :: Z :: if (v26 == #(45)) goto 101::CD,44763:CD,44801
44763 :: PRED :: IF :: Z :: if (v26 != #(43)) goto 60::CD,44765:CD,44773:CD,44801
44765 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(#(0))::
44773 :: NORM :: compound :: I :: return p3 $null ::DD,44733
44777 :: CALL :: call :: Z :: v17 = csStartsWithIgnoreCase(p2 $null , p3 $null , v15)::JM,44783:CL,52534
44783 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 101::CD,44784:CD,44795:CD,44799:CD,44800:CD,44801
44784 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(#(0))::
44792 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $null .iZeroOffsetParseText::JM,44799
44795 :: CALL :: call :: I :: v23 = v21.length()::JM,44799
44799 :: EXPR :: assign :: Ljava/lang/Object :: v24 = p3 $null  + v23::CF,44800
44800 :: NORM :: compound :: I :: return v24::DD,44733
44801 :: PRED :: IF :: Z :: if (v8 > #(1)) goto 110::CD,44802:CD,44803:CD,44804:CD,44809:JM,44960:JM,44773:JM,44743:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44802 :: EXPR :: assign :: Ljava/lang/Object :: v134 = p3 $null  ^ #(-1)::CF,44803
44803 :: NORM :: compound :: I :: return v134::DD,44733
44804 :: CALL :: call :: C :: v34 = p2 $null .charAt(p3 $null )::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44809 :: PRED :: IF :: Z :: if (v34 != #(45)) goto 134::CD,44811:CD,44815:CD,44816:CD,44817:CD,44824:CD,44984
44811 :: PRED :: IF :: Z :: if (v34 != #(43)) goto 145::CD,44813:CD,44814:CD,44815:CD,44816:CD,44817:CD,44824:CD,44984
44813 :: EXPR :: assign :: Ljava/lang/Object :: v36 = p3 $null  ^ #(-1)::CF,44814
44814 :: NORM :: compound :: I :: return v36::DD,44733
44815 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v8 + #(-1)::DD,44836:CF,44816
44816 :: EXPR :: assign :: Ljava/lang/Object :: v39 = p3 $null  + #(1)::DD,44825:DD,44833:DD,44837
44817 :: CALL :: call :: I :: v42 = p0 $null .digitCount(p2 $null , v39, #(2))::JM,44824:CL,52618
44824 :: PRED :: IF :: Z :: if (v42 >= #(2)) goto 170::CD,44825:CD,44826:CD,44827:CD,44832
44825 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v39 ^ #(-1)::CF,44826
44826 :: NORM :: compound :: I :: return v133::DD,44733
44827 :: CALL :: call :: I :: v44 = parseTwoDigits(p2 $null , v39)::JM,44832:JM,44835:CL,52673
44832 :: PRED :: IF :: Z :: if (v44 <= #(23)) goto 190::CD,44833:CD,44834:CD,44835:CD,44836:CD,44837:CD,44838
44833 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v39 ^ #(-1)::CF,44834
44834 :: NORM :: compound :: I :: return v132::DD,44733
44835 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v44 * #(3600000)::DD,44873:DD,44992:CF,44836
44836 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v38 + #(-2)::DD,44838:DD,44846:DD,44986:CF,44837
44837 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v39 + #(2)::JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44847:DD,44985:DD,44991:CF,44838
44838 :: PRED :: IF :: Z :: if (v49 > #(0)) goto 209::CD,44840:CD,44845:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993:JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44840 :: CALL :: call :: C :: v52 = p2 $null .charAt(v50)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44845 :: PRED :: IF :: Z :: if (v52 != #(58)) goto 239::CD,44846:CD,44847:CD,44849:CD,44851:CD,44858:CD,44985:CD,44986:CD,44987:CD,44991:CD,44992
44846 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v49 + #(-1)::DD,44986:CF,44847
44847 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v50 + #(1)::DD,44985
44849 :: PRED :: IF :: Z :: if (v52 < #(48)) goto 572::CF,44991:CD,44850:CD,44972:CD,44975:CD,44983:CD,44992:CD,44993
44850 :: PRED :: IF :: Z :: if (v52 > #(57)) goto 572::CF,44991:CD,44851:CD,44858:CD,44972:CD,44975:CD,44983:CD,44985:CD,44986:CD,44987:CD,44992:CD,44993
44851 :: CALL :: call :: I :: v62 = p0 $null .digitCount(p2 $null , v58, #(2))::JM,44858:JM,44861:CL,52618
44858 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 277::CD,44859:CD,44861
44859 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 277::CD,44861:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993
44861 :: PRED :: IF :: Z :: if (v62 >= #(2)) goto 286::CD,44862:CD,44863:CD,44864:CD,44869
44862 :: EXPR :: assign :: Ljava/lang/Object :: v122 = v58 ^ #(-1)::CF,44863
44863 :: NORM :: compound :: I :: return v122::DD,44733
44864 :: CALL :: call :: I :: v64 = parseTwoDigits(p2 $null , v58)::JM,44869:JM,44872:CL,52673
44869 :: PRED :: IF :: Z :: if (v64 <= #(59)) goto 308::CD,44870:CD,44871:CD,44872:CD,44873:CD,44874:CD,44875:CD,44876
44870 :: EXPR :: assign :: Ljava/lang/Object :: v121 = v58 ^ #(-1)::CF,44871
44871 :: NORM :: compound :: I :: return v121::DD,44733
44872 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v64 * #(60000)::CF,44873
44873 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v47 + v67::DD,44910:DD,44992:CF,44874
44874 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v59 + #(-2)::DD,44876:DD,44886:DD,44989:CF,44875
44875 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v58 + #(2)::JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44887:DD,44988:DD,44991:CF,44876
44876 :: PRED :: IF :: Z :: if (v69 > #(0)) goto 328::CD,44878:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993:CD,44988:CD,44989
44878 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 356::CF,44988:CD,44879:CD,44884:CD,44888:CD,44895:CD,44989:JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44879 :: CALL :: call :: C :: v72 = p2 $null .charAt(v70)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44884 :: PRED :: IF :: Z :: if (v72 == #(58)) goto 346::CD,44886:CD,44887:CD,44888:CD,44895:CD,44972:CD,44975:CD,44983:CD,44988:CD,44989:CD,44991:CD,44992:CD,44993
44886 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v69 + #(-1)::DD,44989:CF,44887
44887 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v70 + #(1)::DD,44988
44888 :: CALL :: call :: I :: v78 = p0 $null .digitCount(p2 $null , v75, #(2))::JM,44898:JM,44895:CL,52618
44895 :: PRED :: IF :: Z :: if (v78 != #(0)) goto 377::CD,44896:CD,44898
44896 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 377::CD,44898:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993
44898 :: PRED :: IF :: Z :: if (v78 >= #(2)) goto 386::CD,44899:CD,44900:CD,44901:CD,44906
44899 :: EXPR :: assign :: Ljava/lang/Object :: v120 = v75 ^ #(-1)::CF,44900
44900 :: NORM :: compound :: I :: return v120::DD,44733
44901 :: CALL :: call :: I :: v80 = parseTwoDigits(p2 $null , v75)::JM,44906:JM,44909:CL,52673
44906 :: PRED :: IF :: Z :: if (v80 <= #(59)) goto 409::CD,44907:CD,44908:CD,44909:CD,44910:CD,44911:CD,44912:CD,44913
44907 :: EXPR :: assign :: Ljava/lang/Object :: v119 = v75 ^ #(-1)::CF,44908
44908 :: NORM :: compound :: I :: return v119::DD,44733
44909 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 * #(1000)::CF,44910
44910 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v68 + v82::DD,44952:DD,44992:CF,44911
44911 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v76 + #(-2)::DD,44913:CF,44912
44912 :: EXPR :: assign :: Ljava/lang/Object :: v85 = v75 + #(2)::JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44930:DD,44990:DD,44991:CF,44913
44913 :: PRED :: IF :: Z :: if (v84 > #(0)) goto 429::CD,44915:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993:CD,44990
44915 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 469::CF,44990:CD,44916:CD,44921:CD,44931:CD,44938:JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44762:JM,44763:JM,44799:JM,44927
44916 :: CALL :: call :: C :: v87 = p2 $null .charAt(v85)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44921 :: PRED :: IF :: Z :: if (v87 == #(46)) goto 459::CD,44922:CD,44927:CD,44930:CD,44931:CD,44938:CD,44990:JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799
44922 :: CALL :: call :: C :: v90 = p2 $null .charAt(v85)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44927 :: PRED :: IF :: Z :: if (v90 == #(44)) goto 459::CD,44930:CD,44931:CD,44938:CD,44972:CD,44975:CD,44983:CD,44990:CD,44991:CD,44992:CD,44993
44930 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v85 + #(1)::DD,44990
44931 :: CALL :: call :: I :: v98 = p0 $null .digitCount(p2 $null , v94, #(3))::JM,44963:JM,44953:JM,44938:JM,44941:CL,52618
44938 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 490::CD,44939:CD,44941
44939 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 490::CD,44941:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993
44941 :: PRED :: IF :: Z :: if (v98 >= #(1)) goto 501::CD,44942:CD,44943:CD,44944:CD,44945:CD,44950:CD,44951:CD,44952:CD,44953:CD,44972:CD,44975:CD,44983:CD,44991:CD,44992:CD,44993
44942 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v94 ^ #(-1)::CF,44943
44943 :: NORM :: compound :: I :: return v118::DD,44733
44944 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v94 + #(1)::DD,44954:JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44991:JM,44802:JM,44773:JM,44813:JM,44816:JM,44799
44945 :: CALL :: call :: C :: v101 = p2 $null .charAt(v94)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44950 :: EXPR :: assign :: Ljava/lang/Object :: v102 = v101 - #(48)::DD,44951
44951 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v102 * #(100)::CF,44952
44952 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v83 + v104::DD,44962:DD,44992:CF,44953
44953 :: PRED :: IF :: Z :: if (v98 <= #(1)) goto 572::CF,44991:CD,44954:CD,44955:CD,44960:CD,44961:CD,44962:CD,44963:CD,44992
44954 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v99 + #(1)::DD,44964:JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44991:JM,44802:JM,44773:JM,44813:JM,44816:JM,44799
44955 :: CALL :: call :: C :: v108 = p2 $null .charAt(v99)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44960 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v108 - #(48)::DD,44961
44961 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v109 * #(10)::CF,44962
44962 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v105 + v111::DD,44971:DD,44992:CF,44963
44963 :: PRED :: IF :: Z :: if (v98 <= #(2)) goto 572::CF,44991:CD,44964:CD,44965:CD,44970:CD,44971:CD,44992
44964 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v106 + #(1)::DD,44991:JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44965 :: CALL :: call :: C :: v115 = p2 $null .charAt(v106)::JM,44960:JM,44802:JM,44773:JM,44743:JM,44809:JM,44970:JM,44811:JM,44813:JM,44845:JM,44816:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44799:JM,44927
44970 :: EXPR :: assign :: Ljava/lang/Object :: v116 = v115 - #(48)::CF,44971
44971 :: EXPR :: assign :: Ljava/lang/Object :: v117 = v112 + v116::DD,44992:CF,44991
44972 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 583::CD,44973:CD,44993
44973 :: EXPR :: assign :: Ljava/lang/Object :: v127 = -(v126)::DD,44993
44975 :: CALL :: call :: Ljava/lang/Integer :: v130 = valueOf(v128)::
44983 :: NORM :: compound :: I :: return v123::DD,44733
44984 :: EXPR :: assign :: null :: PHI v37 = #(1), #(0)::DD,44972:CF,44815
44985 :: EXPR :: assign :: null :: PHI v58 = v57, v50::CF,44986:DD,44862:DD,44870:DD,44875:DD,44991
44986 :: EXPR :: assign :: null :: PHI v59 = v56, v49::CF,44987:DD,44874
44987 :: EXPR :: assign :: null :: PHI v60 = #(1), #(0)::DD,44859:DD,44878:DD,44896:DD,44915:DD,44939
44988 :: EXPR :: assign :: null :: PHI v75 = v70, v74::CF,44989:DD,44899:DD,44907:DD,44912:DD,44991
44989 :: EXPR :: assign :: null :: PHI v76 = v69, v73::DD,44911
44990 :: EXPR :: assign :: null :: PHI v94 = v85, v93::DD,44942:DD,44944:JM,44960:JM,44743:JM,44809:JM,44970:JM,44811:JM,44845:JM,44849:JM,44850:JM,44884:JM,44950:JM,44921:JM,44762:JM,44763:JM,44927:DD,44991
44991 :: EXPR :: assign :: null :: PHI v123 = v50, v50, v50, v58, v70, v70, v75, v85, v85, v94, v99, v106, v113::CF,44992:DD,44983
44992 :: EXPR :: assign :: null :: PHI v126 = v47, v47, v47, v47, v68, v68, v68, v83, v83, v83, v105, v112, v117::DD,44973:DD,44993:CF,44972
44993 :: EXPR :: assign :: null :: PHI v128 = v127, v126::
45221 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45222:CD,45235:CD,45243:CD,45247:CD,45248:CD,45253:CD,45257:CD,45261:CD,45262:CD,45279:CD,45280:CD,45311:CD,45312:CD,45313:JM,45281:JM,45285:JM,45269:JM,45270:JM,45274:JM,45309:JM,45263
45222 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45235 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v10 = v6.getField(v8)::CL,30026
45240 :: EXPR :: reference :: I :: v11 = p0 $null .iMaxDigits::JM,45248:JM,45262
45243 :: CALL :: call :: I :: v13 = p2 $null .length()::JM,45281:JM,45285:JM,45269:JM,45270:JM,45274:JM,45309:JM,45247:JM,45263
45247 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v13 - p3 $null ::JM,45248:JM,45262
45248 :: CALL :: call :: I :: v16 = min(v11, v14)::JM,45248:JM,45262
45253 :: CALL :: call :: Lorg/joda/time/DurationField :: v19 = v10.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
45257 :: CALL :: call :: J :: v21 = v19.getUnitMillis()::JM,45261:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
45261 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 * #(10 l)::DD,45312:CF,45311
45262 :: PRED :: IF :: Z :: if (v39 >= v16) goto 123::CD,45263:CD,45264:CD,45269:CF,45279
45263 :: EXPR :: assign :: Ljava/lang/Object :: v25 = p3 $null  + v39::JM,45281:JM,45285:JM,45269:JM,45270:JM,45274:JM,45309:JM,45247:JM,45263
45264 :: CALL :: call :: C :: v27 = p2 $null .charAt(v25)::JM,45281:JM,45285:JM,45269:JM,45270:JM,45274:JM,45309:JM,45247:JM,45263
45269 :: PRED :: IF :: Z :: if (v27 < #(48)) goto 123::CD,45270:CF,45279
45270 :: PRED :: IF :: Z :: if (v27 <= #(57)) goto 86::CD,45262:CD,45272:CD,45273:CD,45274:CD,45275:CD,45276:CD,45277:CD,45311:CD,45312:CD,45313
45272 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v39 + #(1)::DD,45313:CF,45273
45273 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v38 / #(10 l)::DD,45276:DD,45312:CF,45274
45274 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v27 - #(48)::CF,45275
45275 :: EXPR :: assign :: J :: v34 = CONVERT I to J v33::DD,45276
45276 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 * v32::CF,45277
45277 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v37 + v35::DD,45311
45279 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v37 / #(10 l)::DD,45283:CF,45280
45280 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 140::CD,45281:CD,45282:CD,45283:CD,45284
45281 :: EXPR :: assign :: Ljava/lang/Object :: v55 = p3 $null  ^ #(-1)::CF,45282
45282 :: NORM :: compound :: I :: return v55::DD,45222
45283 :: EXPR :: assign :: Z :: v42 = v40 == #(2147483647 l)::DD,45284
45284 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,45285:CD,45286:CD,45293:JM,10017:JM,16898:JM,9988:JM,25796:JM,16904:JM,9994:JM,9998:JM,16880:JM,10002:JM,10003:JM,16886:JM,10011:JM,25790:CD,45304:CD,45309:CD,45310
45285 :: EXPR :: assign :: Ljava/lang/Object :: v54 = p3 $null  ^ #(-1)::CF,45286
45286 :: NORM :: compound :: I :: return v54::DD,45222
45293 :: CALL :: call :: Lorg/joda/time/DurationField :: v48 = v10.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
45304 :: CALL :: call :: V :: p1 $null .saveField(v43, v50)::CL,52717
45309 :: EXPR :: assign :: Ljava/lang/Object :: v52 = p3 $null  + v39::CF,45310
45310 :: NORM :: compound :: I :: return v52::DD,45222
45311 :: EXPR :: assign :: null :: PHI v37 = v36, #(0 l)::CF,45312:DD,45277:DD,45279
45312 :: EXPR :: assign :: null :: PHI v38 = v32, v23::CF,45313:DD,45273
45313 :: EXPR :: assign :: null :: PHI v39 = v31, #(0)::DD,45262:DD,45263:DD,45272:DD,45280:DD,45309
45371 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45372:CD,45378:CD,45385:JM,45401:JM,45402:JM,45390
45372 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45378 :: CALL :: call :: I :: v7 = p0 $null .parseInto(p1 $null , p2 $null , p3 $null )::JM,45408:JM,45409:JM,45411:JM,45385:JM,45386:JM,45404:JM,45391:CL,46727
45385 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 19::CD,45386:CD,45390:CD,45391
45386 :: NORM :: compound :: I :: return v7::DD,45372
45387 :: EXPR :: reference :: I :: v9 = p0 $null .iMaxParsedDigits::DD,45390
45390 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p3 $null  + v9::DD,45391:DD,45403:DD,45412
45391 :: PRED :: IF :: Z :: if (v7 == v10) goto 93::CD,45395:CD,45404:CD,45411:CD,45412
45392 :: EXPR :: reference :: Z :: v11 = p0 $null .iSigned::DD,45395
45395 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 69::CF,45412:CD,45396:CD,45401:JM,45402:JM,45390
45396 :: CALL :: call :: C :: v13 = p2 $null .charAt(p3 $null )::JM,45401:JM,45402:JM,45390
45401 :: PRED :: IF :: Z :: if (v13 == #(45)) goto 62::CD,45402:CD,45403:CD,45412
45402 :: PRED :: IF :: Z :: if (v13 != #(43)) goto 69::CF,45412:CD,45403
45403 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v10 + #(1)::DD,45412
45404 :: PRED :: IF :: Z :: if (v7 <= v18) goto 83::CD,45405:CD,45406:CD,45407:CD,45408
45405 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 + #(1)::DD,45406
45406 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 ^ #(-1)::CF,45407
45407 :: NORM :: compound :: I :: return v23::DD,45372
45408 :: PRED :: IF :: Z :: if (v7 >= v18) goto 93::CD,45409:CD,45410:CD,45411
45409 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v7 ^ #(-1)::CF,45410
45410 :: NORM :: compound :: I :: return v21::DD,45372
45411 :: NORM :: compound :: I :: return v7::DD,45372
45412 :: EXPR :: assign :: null :: PHI v18 = v10, v10, v17::DD,45404:DD,45405:DD,45408
45447 :: ENTR :: entry :: null :: org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45448:CD,45457:CD,45464
45448 :: EXIT :: exit :: I :: org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,45809:JM,45841:JM,45794:JM,45795:JM,45815:JM,45800:JM,45816:JM,52864
45457 :: CALL :: call :: I :: v8 = v6.parseInto(p1 $null , p2 $null , p3 $null )::JM,45464:CL,44732:CL,45469:CL,45737:CL,45922:CL,47002:CL,46270:CL,45763:CL,45371:CL,45681:CL,45221:CL,45541:CL,46727:CL,45645:CL,45447
45464 :: NORM :: compound :: I :: return v8::DD,45448
45469 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45470:CD,45476:CD,45480:JM,45491:JM,45509:JM,45510:JM,45512:JM,45481:JM,45500
45470 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45476 :: CALL :: call :: I :: v7 = p2 $null .length()::JM,45491:JM,45509:JM,45510:JM,45480:JM,45512:JM,45481:JM,45500
45480 :: PRED :: IF :: Z :: if (p3 $null  < v7) goto 16::CD,45481:CD,45482:CD,45483:CD,45491:JM,45509:JM,45510:JM,45480:JM,45512:JM,45500
45481 :: EXPR :: assign :: Ljava/lang/Object :: v25 = p3 $null  ^ #(-1)::CF,45482
45482 :: NORM :: compound :: I :: return v25::DD,45470
45483 :: CALL :: call :: C :: v9 = p2 $null .charAt(p3 $null )::JM,45491:JM,45509:JM,45510:JM,45480:JM,45512:JM,45481:JM,45500
45488 :: EXPR :: reference :: C :: v10 = p0 $null .iValue::DD,45491:JM,45509:JM,45500
45491 :: PRED :: IF :: Z :: if (v9 == v10) goto 84::CD,45492:CD,45496:CD,45500:CD,45512:CD,45513:JM,45509
45492 :: CALL :: call :: C :: v12 = toUpperCase(v9)::JM,45509:JM,45500
45496 :: CALL :: call :: C :: v14 = toUpperCase(v10)::JM,45509:JM,45500
45500 :: PRED :: IF :: Z :: if (v12 == v14) goto 84::CD,45501:CD,45505:CD,45509:CD,45512:CD,45513
45501 :: CALL :: call :: C :: v16 = toLowerCase(v12)::JM,45509
45505 :: CALL :: call :: C :: v18 = toLowerCase(v14)::JM,45509
45509 :: PRED :: IF :: Z :: if (v16 == v18) goto 84::CD,45510:CD,45511:CD,45512:CD,45513
45510 :: EXPR :: assign :: Ljava/lang/Object :: v24 = p3 $null  ^ #(-1)::CF,45511
45511 :: NORM :: compound :: I :: return v24::DD,45470
45512 :: EXPR :: assign :: Ljava/lang/Object :: v22 = p3 $null  + #(1)::CF,45513
45513 :: NORM :: compound :: I :: return v22::DD,45470
45541 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45542:CD,45551:CD,45556:CD,45560:CD,45564:CD,45568:CD,45592:CD,45611:CD,45612:JM,45607:JM,45609
45542 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45548 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $null .iParseLookup::DD,45551:DD,45611
45551 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 16::CD,45553:CD,45611
45553 :: CALL :: call :: Ljava/util/Map :: v9 = getDefaultTimeZoneNames()::JM,45611:CL,52736
45556 :: CALL :: call :: Ljava/util/Set :: v12 = v10.keySet()::JM,45568:JM,45573
45560 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,45568:JM,45573
45564 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,45568:JM,45573
45568 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 97::CD,45564:CD,45569:CD,45573:CD,45574:CD,45580:CD,45612:CD,45613:JM,45568:CF,45592
45569 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,45568:JM,45573
45573 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,45590:DD,45613
45574 :: CALL :: call :: Z :: v22 = csStartsWith(p2 $null , p3 $null , v20)::JM,45580:CL,52777
45580 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 92::CF,45613:CD,45581
45581 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 92::CD,45582:CD,45586:CD,45590:CD,45613
45582 :: CALL :: call :: I :: v24 = v20.length()::JM,45590
45586 :: CALL :: call :: I :: v26 = v28.length()::JM,45590
45590 :: PRED :: IF :: Z :: if (v24 <= v26) goto 92::CF,45613
45592 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 126::CD,45593:CD,45603:CD,45607:CD,45608:CD,45609:CD,45610
45593 :: CALL :: call :: Ljava/lang/Object :: v32 = v10.get(v28)::
45603 :: CALL :: call :: I :: v36 = v28.length()::JM,45607
45607 :: EXPR :: assign :: Ljava/lang/Object :: v37 = p3 $null  + v36::CF,45608
45608 :: NORM :: compound :: I :: return v37::DD,45542
45609 :: EXPR :: assign :: Ljava/lang/Object :: v30 = p3 $null  ^ #(-1)::CF,45610
45610 :: NORM :: compound :: I :: return v30::DD,45542
45611 :: EXPR :: assign :: null :: PHI v10 = v6, v9::JM,45568:JM,45573
45612 :: EXPR :: assign :: null :: PHI v28 = v27, #(null)::JM,45568:JM,45573:DD,45581:JM,45590:DD,45592:JM,45607:DD,45613
45613 :: EXPR :: assign :: null :: PHI v27 = v28, v28, v20::DD,45612
45645 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45646:CD,45655:CD,45661:JM,45669:JM,45671
45646 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45655 :: CALL :: call :: Z :: v8 = csStartsWithIgnoreCase(p2 $null , p3 $null , v6)::JM,45661:CL,52534
45661 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,45665:CD,45669:CD,45670:CD,45671:CD,45672
45662 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $null .iValue::JM,45669
45665 :: CALL :: call :: I :: v14 = v12.length()::JM,45669
45669 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p3 $null  + v14::CF,45670
45670 :: NORM :: compound :: I :: return v15::DD,45646
45671 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p3 $null  ^ #(-1)::CF,45672
45672 :: NORM :: compound :: I :: return v11::DD,45646
45681 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45682:CD,45697:CD,45698:CD,45713:CD,45714:CD,45715
45682 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45688 :: EXPR :: reference :: [Lorg/joda/time/format/InternalParser :: v6 = p0 $null .iParsers::DD,45697
45697 :: EXPR :: assign :: I :: v8 = v6.length::DD,45698:CF,45714
45698 :: PRED :: IF :: Z :: if (v16 >= v8) goto 59::CD,45699:CF,45713
45699 :: PRED :: IF :: Z :: if (v15 < #(0)) goto 59::CD,45698:CD,45704:CD,45711:CD,45714:CD,45715:CF,45713
45704 :: CALL :: call :: I :: v12 = v10.parseInto(p1 $null , p2 $null , v15)::JM,45714:CL,44732:CL,45469:CL,45737:CL,45922:CL,47002:CL,46270:CL,45763:CL,45371:CL,45681:CL,45221:CL,45541:CL,46727:CL,45645:CL,45447
45711 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v16 + #(1)::DD,45715
45713 :: NORM :: compound :: I :: return v15::DD,45682
45714 :: EXPR :: assign :: null :: PHI v15 = v12, p3 $null ::CF,45715:DD,45699:DD,45713
45715 :: EXPR :: assign :: null :: PHI v16 = v14, #(0)::DD,45698:DD,45711
45737 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserInternalParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45738:CD,45751:CD,45758
45738 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserInternalParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,45809:JM,45841:JM,45794:JM,45795:JM,45815:JM,45800:JM,45816:JM,52864
45751 :: CALL :: call :: I :: v10 = v6.parseInto(p1 $null , v8, p3 $null )::JM,45758:CL,52847
45758 :: NORM :: compound :: I :: return v10::DD,45738
45763 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45764:CD,45773:CD,45774:CD,45778:CD,45837:CD,45839:CD,45840:JM,45825:JM,45794:JM,45826:JM,45784:JM,45800:JM,45785:CD,45844
45764 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45770 :: EXPR :: reference :: [Lorg/joda/time/format/InternalParser :: v6 = p0 $null .iParsers::DD,45773
45773 :: EXPR :: assign :: I :: v7 = v6.length::DD,45778:DD,45802
45774 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $null .saveState()::CL,52869
45778 :: PRED :: IF :: Z :: if (v35 >= v7) goto 174::CF,45844:CD,45783:CD,45825
45779 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v6[v35]::DD,45783
45783 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 70::CD,45784:CD,45787:CD,45794
45784 :: PRED :: IF :: Z :: if (v32 > p3 $null ) goto 62::CD,45785:CD,45825:CD,45844
45785 :: NORM :: compound :: I :: return p3 $null ::DD,45764
45787 :: CALL :: call :: I :: v14 = v12.parseInto(p1 $null , p2 $null , p3 $null )::JM,45809:JM,45841:JM,45794:JM,45795:JM,45815:JM,45800:JM,45816:CL,45737:CL,45447
45794 :: PRED :: IF :: Z :: if (v14 < p3 $null ) goto 138::CD,45778:CD,45795:CD,45815:CD,45823:CD,45837:CD,45839:CD,45840:CD,45841:CD,45843:CD,45844
45795 :: PRED :: IF :: Z :: if (v14 <= v32) goto 161::CF,45841:CD,45778:CD,45796:CD,45800:CD,45823:CD,45837:CD,45839:CD,45840:CD,45843:CD,45844:JM,45825:JM,45794:JM,45826:JM,45784:JM,45785
45796 :: CALL :: call :: I :: v18 = p2 $null .length()::JM,45825:JM,45794:JM,45826:JM,45784:JM,45800:JM,45785:JM,45837:JM,45839
45800 :: PRED :: IF :: Z :: if (v14 >= v18) goto 122::CD,45801:CD,45802:CD,45809
45801 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v35 + #(1)::DD,45802
45802 :: PRED :: IF :: Z :: if (v20 >= v7) goto 122::CD,45803:CD,45808:CD,45809
45803 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v35 + #(1)::
45804 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[v21]::DD,45808
45808 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 128::CD,45778:CD,45809:CD,45810:CD,45823:CD,45837:CD,45839:CD,45840:CD,45841:CD,45843:CD,45844
45809 :: NORM :: compound :: I :: return v14::DD,45764
45810 :: CALL :: call :: Ljava/lang/Object :: v24 = p1 $null .saveState()::CL,52869
45815 :: PRED :: IF :: Z :: if (v14 >= #(0)) goto 161::CF,45841:CD,45816:CD,45817:CD,45843
45816 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 ^ #(-1)::DD,45817:DD,45843
45817 :: PRED :: IF :: Z :: if (v16 <= v34) goto 161::CF,45841:CD,45843
45823 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v35 + #(1)::DD,45840
45825 :: PRED :: IF :: Z :: if (v32 > p3 $null ) goto 190::CD,45826:CD,45834
45826 :: PRED :: IF :: Z :: if (v32 != p3 $null ) goto 206::CD,45827:CD,45835:CD,45836
45827 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 206::CD,45834:CD,45835:CD,45836
45834 :: NORM :: compound :: I :: return v32::DD,45764
45835 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v34 ^ #(-1)::CF,45836
45836 :: NORM :: compound :: I :: return v37::DD,45764
45837 :: EXPR :: assign :: null :: PHI v32 = v25, p3 $null ::DD,45784:DD,45795:DD,45825:DD,45826:DD,45834:DD,45841
45839 :: EXPR :: assign :: null :: PHI v34 = v27, p3 $null ::CF,45840:DD,45817:DD,45835:DD,45843
45840 :: EXPR :: assign :: null :: PHI v35 = v31, #(0)::DD,45778:DD,45801:DD,45803:DD,45823
45841 :: EXPR :: assign :: null :: PHI v25 = v32, v14, v32, v32, v32::DD,45837
45843 :: EXPR :: assign :: null :: PHI v27 = v34, v34, v34, v34, v16::DD,45839
45844 :: EXPR :: assign :: null :: PHI v36 = #(0), #(1)::DD,45827:CF,45825
45922 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,45923:CD,45929:CD,45933:CD,45937:CD,46001:CD,46002:JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45923 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
45929 :: CALL :: call :: I :: v7 = p2 $null .length()::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45933 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v7 - p3 $null ::JM,45938:JM,45943:DD,46093
45934 :: EXPR :: reference :: Z :: v9 = p0 $null .iLenientParse::DD,45937
45937 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 48::CD,45938:CD,45943:CD,45946:CD,45969:CD,46092:CD,46093:CD,46094:CD,46095:CD,46096:CD,46103
45938 :: CALL :: call :: I :: v66 = min(#(2), v8)::JM,45938:JM,45943
45943 :: PRED :: IF :: Z :: if (v66 >= #(2)) goto 295::CF,46103:CD,45944:CD,45945:CD,46028:CD,46033
45944 :: EXPR :: assign :: Ljava/lang/Object :: v107 = p3 $null  ^ #(-1)::CF,45945
45945 :: NORM :: compound :: I :: return v107::DD,45923
45946 :: PRED :: IF :: Z :: if (v21 >= v26) goto 144::CD,45947:CD,45948:CD,45953:CF,45969
45947 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v25 + v21::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45948 :: CALL :: call :: C :: v13 = p2 $null .charAt(v11)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45953 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 123::CD,45954:CD,45964
45954 :: PRED :: IF :: Z :: if (v13 == #(45)) goto 89::CD,45946:CD,45955:CD,45956:CD,45958:CD,46092:CD,46093:CD,46094:CD,46095:CD,46096:CD,46097
45955 :: PRED :: IF :: Z :: if (v13 != #(43)) goto 123::CD,45946:CD,45956:CD,45958:CD,45964:CD,46092:CD,46093:CD,46094:CD,46095:CD,46096:CD,46097
45956 :: PRED :: IF :: Z :: if (v13 != #(45)) goto 101::CD,46097
45958 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 110::CD,45959:CD,45961:CD,45962:CD,46092:CD,46093:CD,46094:CD,46095:CD,46096
45959 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v21 + #(1)::DD,46096
45961 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v25 + #(1)::DD,46092:CF,45962
45962 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(-1)::DD,46093
45964 :: PRED :: IF :: Z :: if (v13 < #(48)) goto 144::CD,45965:CF,45969
45965 :: PRED :: IF :: Z :: if (v13 <= #(57)) goto 136::CD,45946:CD,45967:CD,46092:CD,46093:CD,46094:CD,46095:CD,46096
45967 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v21 + #(1)::DD,46096
45969 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 153::CD,45970:CD,45971:CD,45972
45970 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v25 ^ #(-1)::CF,45971
45971 :: NORM :: compound :: I :: return v64::DD,45923
45972 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 166::CD,45973:CD,45974:CD,46022:CD,46027:CD,46101:CD,46103
45973 :: PRED :: IF :: Z :: if (v21 == #(2)) goto 295::CF,46103:CD,45974:CD,46022:CD,46027:CD,46028:CD,46033:CD,46101
45974 :: PRED :: IF :: Z :: if (v21 < #(9)) goto 200::CD,45975:CD,45976:CD,45982:CD,45986:CD,45991:CD,45993:CD,45994:CD,46003:CD,46004:CD,46017:CD,46098:CD,46100:CD,46101
45975 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v25 + v21::JM,46033:JM,45954:JM,46034:JM,45955:JM,45956:JM,45964:JM,46044:JM,45933:JM,45965:JM,46045:JM,45982:DD,46101:JM,46092:JM,46103:JM,45944
45976 :: CALL :: call :: Ljava/lang/CharSequence :: v55 = p2 $null .subSequence(v25, v53)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45982 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::JM,46033:JM,46034:JM,46044:JM,46045:JM,45982
45986 :: CALL :: call :: I :: v59 = parseInt(v57)::
45991 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 209::CF,46098:CD,45992
45992 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v25 + #(1)::DD,46098
45993 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v33 + #(1)::DD,46100:JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
45994 :: CALL :: call :: C :: v36 = p2 $null .charAt(v33)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46001 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v25 ^ #(-1)::DD,46002
46002 :: NORM :: compound :: I :: return v38::DD,45923
46003 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v25 + v21::DD,46004:DD,46101
46004 :: PRED :: IF :: Z :: if (v51 >= v40) goto 273::CD,46008:CD,46009:CD,46100:CF,46017
46008 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v51 + #(1)::DD,46100:JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46009 :: CALL :: call :: C :: v47 = p2 $null .charAt(v51)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46017 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 283::CF,46101
46022 :: CALL :: call :: V :: p1 $null .saveField(v62, v61)::CL,52923
46027 :: NORM :: compound :: I :: return v60::DD,45923
46028 :: CALL :: call :: C :: v70 = p2 $null .charAt(v67)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46033 :: PRED :: IF :: Z :: if (v70 < #(48)) goto 318::CD,46034:CD,46035:CD,46036
46034 :: PRED :: IF :: Z :: if (v70 <= #(57)) goto 324::CD,46035:CD,46036:CD,46038:CD,46039:CD,46044
46035 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v67 ^ #(-1)::CF,46036
46036 :: NORM :: compound :: I :: return v106::DD,45923
46038 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v67 + #(1)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46039 :: CALL :: call :: C :: v74 = p2 $null .charAt(v72)::JM,45954:JM,45955:JM,45956:JM,46092:JM,45964:JM,45933:JM,45965:JM,46033:JM,46034:JM,46103:JM,45944:JM,46044:JM,46045:JM,45982
46044 :: PRED :: IF :: Z :: if (v74 < #(48)) goto 354::CD,46045:CD,46046:CD,46047
46045 :: PRED :: IF :: Z :: if (v74 <= #(57)) goto 359::CD,46046:CD,46047:CD,46084:CD,46089:CD,46090
46046 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v67 ^ #(-1)::CF,46047
46047 :: NORM :: compound :: I :: return v105::DD,45923
46084 :: CALL :: call :: V :: p1 $null .saveField(v102, v101)::CL,52923
46089 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v67 + #(2)::CF,46090
46090 :: NORM :: compound :: I :: return v104::DD,45923
46092 :: EXPR :: assign :: null :: PHI v25 = v25, v22, v25, p3 $null ::CF,46093:DD,45947:DD,45961:DD,45970:DD,45975:JM,46033:JM,45954:JM,46034:JM,45955:JM,45956:JM,45964:JM,46044:JM,45933:JM,45965:JM,46045:JM,45982:DD,45992:DD,46001:DD,46003:DD,46092:DD,46098:DD,46103
46093 :: EXPR :: assign :: null :: PHI v26 = v26, v24, v26, v8::CF,46094:DD,45946:DD,45962:DD,46093
46094 :: EXPR :: assign :: null :: PHI v19 = #(1), #(1), v19, #(0)::CF,46095:DD,45972:DD,46094
46095 :: EXPR :: assign :: null :: PHI v20 = v17, v17, v20, #(0)::CF,46096:DD,45991:DD,46017:DD,46095
46096 :: EXPR :: assign :: null :: PHI v21 = v18, v21, v29, #(0)::DD,45946:DD,45947:DD,45953:DD,45959:DD,45967:DD,45969:DD,45973:DD,45974:DD,45975:DD,46003:DD,46096
46097 :: EXPR :: assign :: null :: PHI v17 = #(1), #(0)::DD,45958:DD,46095
46098 :: EXPR :: assign :: null :: PHI v33 = v25, v32::DD,45993:JM,46033:JM,45954:JM,46034:JM,45955:JM,45956:JM,45964:JM,46044:JM,45933:JM,45965:JM,46045:JM,45982
46100 :: EXPR :: assign :: null :: PHI v51 = v45, v34::DD,46004:DD,46008:JM,46033:JM,45954:JM,46034:JM,45955:JM,45956:JM,45964:JM,46044:JM,45933:JM,45965:JM,46045:JM,45982
46101 :: EXPR :: assign :: null :: PHI v60 = v53, v40, v40::DD,46027
46103 :: EXPR :: assign :: null :: PHI v67 = p3 $null , v25::JM,46033:JM,45954:JM,46034:JM,45955:JM,45956:JM,45964:JM,46044:JM,45933:JM,45965:JM,46045:JM,45982:DD,46035:DD,46038:DD,46046:DD,46089:JM,46092:JM,46103:JM,45944
46270 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,46271:CD,46277:CD,46283:CD,46288:CD,46289:CD,46305:CD,46310:CD,46311:JM,46546:JM,46547:JM,46581:JM,46343:JM,46552:JM,46588
46271 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
46277 :: CALL :: call :: Ljava/util/Locale :: v7 = p1 $null .getLocale()::JM,46465:CL,52960
46283 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(v7)::JM,46288
46288 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,46289
46289 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CF,46290:CD,46296
46290 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v14 = new java.util.concurrent.ConcurrentHashMap::
46296 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.put(v7, v14)::
46305 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(v20)::JM,46310
46310 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,46311
46311 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 417::CF,46312:JM,56741:JM,31529:JM,31549:CD,46328:CD,46333:CD,46337:CD,46341:CD,46342:CD,46537:CD,46538:CD,46542:CD,46546:CD,46547:CD,46552:CD,46587:CD,46588
46312 :: NORM :: declaration :: Ljava/util/concurrent/ConcurrentHashMap :: v31 = new java.util.concurrent.ConcurrentHashMap::DD,46506
46328 :: CALL :: call :: Lorg/joda/time/MutableDateTime$Property :: v40 = v34.property(v38)::CL,52984
46333 :: CALL :: call :: I :: v42 = v40.getMinimumValueOverall()::JM,46341:JM,46584:CL,53056
46337 :: CALL :: call :: I :: v44 = v40.getMaximumValueOverall()::JM,46341:JM,46350:CL,53070
46341 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v44 - v42::DD,46342
46342 :: PRED :: IF :: Z :: if (v45 <= #(32)) goto 142::CD,46343:CD,46344:CD,46345:CD,46350:CD,46456:CD,46460:CD,46465:CD,46505:CD,46510:CD,46521:CD,46542:CD,46546:CD,46547:CD,46552:CD,46584:CD,46585:CD,46587:CD,46588
46343 :: EXPR :: assign :: Ljava/lang/Object :: v144 = p3 $null  ^ #(-1)::CF,46344
46344 :: NORM :: compound :: I :: return v144::DD,46271
46345 :: CALL :: call :: I :: v47 = v40.getMaximumTextLength(v7)::JM,46585:CL,53084
46350 :: PRED :: IF :: Z :: if (v89 > v44) goto 304::CD,46351:CD,46356:CD,46363:CD,46369:CD,46374:CD,46381:CD,46387:CD,46392:CD,46399:CD,46405:CD,46412:CD,46418:CD,46423:CD,46430:CD,46436:CD,46441:CD,46448:CD,46454:CD,46584:JM,46465
46351 :: CALL :: call :: Lorg/joda/time/MutableDateTime :: v49 = v40.set(v89)::CL,53101
46356 :: CALL :: call :: Ljava/lang/String :: v51 = v40.getAsShortText(v7)::CL,53139
46363 :: CALL :: call :: Ljava/lang/Object :: v54 = v31.put(v51, v52)::
46369 :: CALL :: call :: Ljava/lang/String :: v56 = v40.getAsShortText(v7)::CL,53139
46374 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toLowerCase(v7)::JM,46465
46381 :: CALL :: call :: Ljava/lang/Object :: v61 = v31.put(v58, v59)::
46387 :: CALL :: call :: Ljava/lang/String :: v63 = v40.getAsShortText(v7)::CL,53139
46392 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toUpperCase(v7)::JM,46465
46399 :: CALL :: call :: Ljava/lang/Object :: v68 = v31.put(v65, v66)::
46405 :: CALL :: call :: Ljava/lang/String :: v70 = v40.getAsText(v7)::CL,53162
46412 :: CALL :: call :: Ljava/lang/Object :: v73 = v31.put(v70, v71)::
46418 :: CALL :: call :: Ljava/lang/String :: v75 = v40.getAsText(v7)::CL,53162
46423 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toLowerCase(v7)::JM,46465
46430 :: CALL :: call :: Ljava/lang/Object :: v80 = v31.put(v77, v78)::
46436 :: CALL :: call :: Ljava/lang/String :: v82 = v40.getAsText(v7)::CL,53162
46441 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toUpperCase(v7)::JM,46465
46448 :: CALL :: call :: Ljava/lang/Object :: v87 = v31.put(v84, v85)::
46454 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v89 + #(1)::DD,46584
46456 :: CALL :: call :: Ljava/lang/String :: v92 = v7.getLanguage()::JM,46465
46460 :: CALL :: call :: Z :: v94 = #(en).equals(v92)::JM,46465
46465 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 379::CF,46585:CD,46469:CD,46472
46466 :: EXPR :: reference :: Lorg/joda/time/DateTimeFieldType :: v95 = p0 $null .iFieldType::DD,46472
46469 :: CALL :: call :: Lorg/joda/time/DateTimeFieldType :: v97 = era()::JM,46472:CL,41948
46472 :: PRED :: IF :: Z :: if (v95 != v97) goto 379::CF,46585:CD,46475:CD,46483:CD,46491:CD,46499
46475 :: CALL :: call :: Ljava/lang/Object :: v101 = v31.put(#(BCE), v99)::
46483 :: CALL :: call :: Ljava/lang/Object :: v105 = v31.put(#(bce), v103)::
46491 :: CALL :: call :: Ljava/lang/Object :: v109 = v31.put(#(CE), v107)::
46499 :: CALL :: call :: Ljava/lang/Object :: v113 = v31.put(#(ce), v111)::
46505 :: NORM :: declaration :: [Ljava/lang/Object :: v117 = new java.lang.Object[]::
46506 :: EXPR :: modify :: Ljava/lang/Object :: v117[#(0)] = v31::
46510 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v115)::JM,46514
46514 :: EXPR :: modify :: Ljava/lang/Object :: v117[#(1)] = v119::
46521 :: CALL :: call :: Ljava/lang/Object :: v122 = v19.put(v120, v117)::
46533 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v23[#(1)]::DD,46537
46537 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,46587
46538 :: CALL :: call :: I :: v30 = v28.intValue()::JM,46587
46542 :: CALL :: call :: I :: v127 = p2 $null .length()::JM,46546:JM,46547:JM,46581:JM,46343:JM,46552:JM,46588
46546 :: EXPR :: assign :: Ljava/lang/Object :: v128 = p3 $null  + v124::JM,46547:JM,46588
46547 :: CALL :: call :: I :: v130 = min(v127, v128)::JM,46547:JM,46588
46552 :: PRED :: IF :: Z :: if (v139 <= p3 $null ) goto 511::CD,46553:CD,46563:CD,46568:CD,46581:CD,46582:JM,46546:JM,46547:JM,46343:JM,46552:JM,46588
46553 :: CALL :: call :: Ljava/lang/CharSequence :: v132 = p2 $null .subSequence(p3 $null , v139)::JM,46546:JM,46547:JM,46581:JM,46343:JM,46552:JM,46588
46563 :: CALL :: call :: Z :: v136 = v123.containsKey(v134)::JM,46568
46568 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 503::CD,46552:CD,46572:CD,46578:CD,46579:CD,46588
46572 :: CALL :: call :: V :: p1 $null .saveField(v142, v134, v7)::CL,53212
46578 :: NORM :: compound :: I :: return v139::DD,46271
46579 :: EXPR :: assign :: Ljava/lang/Object :: v138 = v139 + #(-1)::DD,46588
46581 :: EXPR :: assign :: Ljava/lang/Object :: v141 = p3 $null  ^ #(-1)::CF,46582
46582 :: NORM :: compound :: I :: return v141::DD,46271
46584 :: EXPR :: assign :: null :: PHI v89 = v88, v42::DD,46350:DD,46454
46585 :: EXPR :: assign :: null :: PHI v115 = v47, v47, #(3)::CF,46505:JM,46514:DD,46587
46587 :: EXPR :: assign :: null :: PHI v124 = v115, v30::JM,46547:JM,46581:JM,46343:JM,46552:JM,46588:DD,46546
46588 :: EXPR :: assign :: null :: PHI v139 = v138, v130::DD,46552:JM,46547:JM,46588:DD,46578:DD,46579
46727 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,46728:CD,46737:CD,46741:CD,46742:CD,46747:CD,46795:CD,46844:CD,46845:CD,46872:CD,46873:CD,46874:CD,46875:CD,46878:CD,46879:JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46774:JM,46775:JM,46808:JM,46748:JM,46846:JM,46783
46728 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45408:JM,45409:JM,45411:JM,45385:JM,45386:JM,45404:JM,45391:JM,45464:JM,45714:JM,52864
46734 :: EXPR :: reference :: I :: v6 = p0 $null .iMaxParsedDigits::JM,46742:JM,46872
46737 :: CALL :: call :: I :: v8 = p2 $null .length()::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46741 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v8 - p3 $null ::JM,46742:JM,46872
46742 :: CALL :: call :: I :: v11 = min(v6, v9)::JM,46742:JM,46872
46747 :: PRED :: IF :: Z :: if (v39 >= v36) goto 186::CF,46878:CD,46748:CD,46749:CD,46754
46748 :: EXPR :: assign :: Ljava/lang/Object :: v13 = p3 $null  + v39::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46749 :: CALL :: call :: C :: v15 = p2 $null .charAt(v13)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46754 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 165::CD,46755:CD,46790:CD,46878:CD,46879
46755 :: PRED :: IF :: Z :: if (v15 == #(45)) goto 65::CD,46756:CD,46760
46756 :: PRED :: IF :: Z :: if (v15 != #(43)) goto 165::CD,46760:CD,46790:CD,46878:CD,46879
46757 :: EXPR :: reference :: Z :: v18 = p0 $null .iSigned::DD,46760
46760 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 165::CD,46761:CD,46763:CD,46765:CD,46766:CD,46790:CD,46876:CD,46877:CD,46878:CD,46879
46761 :: PRED :: IF :: Z :: if (v15 != #(45)) goto 89::CD,46876
46763 :: PRED :: IF :: Z :: if (v15 != #(43)) goto 102::CD,46877
46765 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v39 + #(1)::DD,46766
46766 :: PRED :: IF :: Z :: if (v22 >= v36) goto 186::CF,46878:CD,46767:CD,46768:CD,46769:CD,46774:CD,46879
46767 :: EXPR :: assign :: Ljava/lang/Object :: v23 = p3 $null  + v39::DD,46768
46768 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v23 + #(1)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46769 :: CALL :: call :: C :: v26 = p2 $null .charAt(v24)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46774 :: PRED :: IF :: Z :: if (v26 < #(48)) goto 186::CF,46878:CD,46775
46775 :: PRED :: IF :: Z :: if (v26 <= #(57)) goto 138::CD,46747:CD,46777:CD,46778:CD,46779:CD,46783:CD,46784:CD,46872:CD,46873:CD,46874:CD,46875:CD,46878:CD,46879
46777 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v39 + #(1)::DD,46875:CF,46778
46778 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v36 + #(1)::JM,46784:JM,46872:JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46779 :: CALL :: call :: I :: v32 = p2 $null .length()::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46783 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 - p3 $null ::JM,46784:JM,46872
46784 :: CALL :: call :: I :: v35 = min(v30, v33)::JM,46784:JM,46872
46790 :: PRED :: IF :: Z :: if (v15 < #(48)) goto 186::CF,46878:CD,46791
46791 :: PRED :: IF :: Z :: if (v15 <= #(57)) goto 178::CD,46747:CD,46793:CD,46872:CD,46873:CD,46874:CD,46875:CD,46878:CD,46879
46793 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v39 + #(1)::DD,46875
46795 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 197::CD,46796:CD,46797:CD,46798:CD,46865:CD,46870:CD,46883
46796 :: EXPR :: assign :: Ljava/lang/Object :: v87 = p3 $null  ^ #(-1)::CF,46797
46797 :: NORM :: compound :: I :: return v87::DD,46728
46798 :: PRED :: IF :: Z :: if (v39 < #(9)) goto 264::CD,46799:CD,46833:CD,46836:CD,46837:CD,46846:CD,46847:CD,46860:CD,46880:CD,46882:CD,46883
46799 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 238::CD,46800:CD,46801:CD,46802:CD,46808:CD,46812:CD,46817:CD,46818:CD,46824:CD,46828:CD,46883
46800 :: EXPR :: assign :: Ljava/lang/Object :: v75 = p3 $null  + #(1)::JM,46755:JM,46756:JM,46741:JM,46790:JM,46774:JM,46791:JM,46775:JM,46808:JM,46824:JM,46761:JM,46763:JM,46783:CF,46801
46801 :: EXPR :: assign :: Ljava/lang/Object :: v76 = p3 $null  + v39::JM,46755:JM,46756:JM,46741:JM,46790:JM,46774:JM,46791:JM,46775:JM,46808:JM,46824:JM,46761:JM,46763:JM,46783:DD,46883:JM,46880:JM,46817:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46748:JM,46844:JM,46846
46802 :: CALL :: call :: Ljava/lang/CharSequence :: v78 = p2 $null .subSequence(v75, v76)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46808 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::JM,46808:JM,46824
46812 :: CALL :: call :: I :: v82 = parseInt(v80)::
46817 :: EXPR :: assign :: Ljava/lang/Object :: v68 = p3 $null  + v39::JM,46755:JM,46756:JM,46741:JM,46790:JM,46774:JM,46791:JM,46775:JM,46808:JM,46824:JM,46761:JM,46763:JM,46783:DD,46883:JM,46880:JM,46817:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46748:JM,46844:JM,46846
46818 :: CALL :: call :: Ljava/lang/CharSequence :: v70 = p2 $null .subSequence(p3 $null , v68)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46824 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::JM,46808:JM,46824
46828 :: CALL :: call :: I :: v74 = parseInt(v72)::
46833 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 272::CD,46834:CD,46835:CD,46880
46834 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 278::CF,46880:CD,46835
46835 :: EXPR :: assign :: Ljava/lang/Object :: v46 = p3 $null  + #(1)::DD,46880
46836 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v47 + #(1)::DD,46882:JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46837 :: CALL :: call :: C :: v50 = p2 $null .charAt(v47)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46844 :: EXPR :: assign :: Ljava/lang/Object :: v53 = p3 $null  ^ #(-1)::DD,46845
46845 :: NORM :: compound :: I :: return v53::DD,46728
46846 :: EXPR :: assign :: Ljava/lang/Object :: v55 = p3 $null  + v39::DD,46847:DD,46883
46847 :: PRED :: IF :: Z :: if (v66 >= v55) goto 342::CD,46851:CD,46852:CD,46882:CF,46860
46851 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v66 + #(1)::DD,46882:JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46852 :: CALL :: call :: C :: v62 = p2 $null .charAt(v66)::JM,46880:JM,46817:JM,46755:JM,46756:JM,46790:JM,46791:JM,46824:JM,46761:JM,46763:JM,46796:JM,46767:JM,46800:JM,46801:JM,46835:JM,46741:JM,46774:JM,46775:JM,46808:JM,46748:JM,46844:JM,46846:JM,46783
46860 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 352::CF,46883
46865 :: CALL :: call :: V :: p1 $null .saveField(v85, v84)::CL,52923
46870 :: NORM :: compound :: I :: return v83::DD,46728
46872 :: EXPR :: assign :: null :: PHI v36 = v35, v36, v11::CF,46873:DD,46747:DD,46766:DD,46778:DD,46872
46873 :: EXPR :: assign :: null :: PHI v37 = v20, v37, #(0)::CF,46874:DD,46873:DD,46878
46874 :: EXPR :: assign :: null :: PHI v38 = v21, v38, #(0)::CF,46875:DD,46874:DD,46879
46875 :: EXPR :: assign :: null :: PHI v39 = v29, v40, #(0)::DD,46747:DD,46748:DD,46754:DD,46765:DD,46767:DD,46777:DD,46793:DD,46795:DD,46798:DD,46801:DD,46817:DD,46846
46876 :: EXPR :: assign :: null :: PHI v20 = #(1), #(0)::DD,46873:DD,46878:CF,46763
46877 :: EXPR :: assign :: null :: PHI v21 = #(1), #(0)::DD,46874:DD,46879:CF,46765
46878 :: EXPR :: assign :: null :: PHI v42 = v37, v20, v20, v20, v37, v37::CF,46879:DD,46833:DD,46860
46879 :: EXPR :: assign :: null :: PHI v43 = v38, v21, v21, v21, v38, v38::DD,46799:DD,46834:CF,46795
46880 :: EXPR :: assign :: null :: PHI v47 = p3 $null , v46::DD,46836:JM,46755:JM,46756:JM,46741:JM,46790:JM,46774:JM,46791:JM,46775:JM,46808:JM,46824:JM,46761:JM,46763:JM,46783
46882 :: EXPR :: assign :: null :: PHI v66 = v60, v48::DD,46847:DD,46851:JM,46755:JM,46756:JM,46741:JM,46790:JM,46774:JM,46791:JM,46775:JM,46808:JM,46824:JM,46761:JM,46763:JM,46783
46883 :: EXPR :: assign :: null :: PHI v83 = v76, v68, v55, v55::DD,46870
47002 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::CE,47003:CD,47009:CD,47011:CD,47015:CD,47017:CD,47018:CD,47023:CD,47149:JM,47045:JM,47029:JM,47046:JM,47080:JM,47147:JM,47037:CD,47151:CD,47152:CD,47153
47003 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)::JM,45464:JM,45714:JM,52864
47009 :: EXPR :: reference :: Ljava/util/List :: v6 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.BASE_GROUPED_IDS::DD,47151:JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47011 :: CALL :: call :: I :: v8 = p2 $null .length()::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47015 :: EXPR :: reference :: I :: v9 = org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.MAX_PREFIX_LENGTH::CF,47017
47017 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p3 $null  + v9::JM,47153:JM,47029:JM,47045:JM,47046:JM,47018:JM,47037:JM,47023
47018 :: CALL :: call :: I :: v12 = min(v8, v10)::JM,47153:JM,47029:JM,47045:JM,47046:JM,47018:JM,47037:JM,47023
47023 :: PRED :: IF :: Z :: if (v19 >= v12) goto 166::CF,47151:CD,47024:CD,47029:CD,47084:CD,47088:CD,47114:CD,47152:CD,47153:CD,47154:CD,47155:JM,47045:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47024 :: CALL :: call :: C :: v15 = p2 $null .charAt(v19)::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47029 :: PRED :: IF :: Z :: if (v15 != #(47)) goto 150::CD,47023:CD,47030:CD,47031:CD,47037:CD,47041:CD,47045:CD,47046:CD,47073:CD,47078:CD,47079:CD,47082:CD,47149:CD,47151:CD,47152:CD,47153
47030 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 + #(1)::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47031 :: CALL :: call :: Ljava/lang/CharSequence :: v22 = p2 $null .subSequence(p3 $null , v20)::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47037 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,47153:JM,47045:JM,47018:JM,47037:JM,47023
47041 :: CALL :: call :: I :: v26 = v24.length()::JM,47153:JM,47045
47045 :: EXPR :: assign :: Ljava/lang/Object :: v27 = p3 $null  + v26::DD,47152:CF,47046
47046 :: PRED :: IF :: Z :: if (v19 >= v8) goto 126::CF,47047:CD,47051:CD,47056:CD,47057:CD,47062:CD,47067
47047 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
47051 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(v24)::JM,47153:JM,47045
47056 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v19 + #(1)::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47057 :: CALL :: call :: C :: v34 = p2 $null .charAt(v32)::JM,47152:JM,47153:JM,47045:JM,47029:JM,47046:JM,47080:JM,47017:JM,47018:JM,47147:JM,47149:JM,47037:JM,47023
47062 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v31.append(v34)::JM,47153:JM,47045:JM,47018:JM,47037:JM,47023
47067 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::JM,47045
47073 :: CALL :: call :: Ljava/lang/Object :: v42 = v40.get(v39)::JM,47078
47078 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,47079:DD,47151
47079 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 166::CF,47151:CD,47080:CD,47081:CD,47084:CD,47088:CD,47114:CD,47152:CD,47153:CD,47154:CD,47155
47080 :: EXPR :: assign :: Ljava/lang/Object :: v80 = p3 $null  ^ #(-1)::CF,47081
47081 :: NORM :: compound :: I :: return v80::DD,47003
47082 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,47149
47084 :: CALL :: call :: I :: v50 = v45.size()::JM,47088
47088 :: PRED :: IF :: Z :: if (v63 >= v50) goto 229::CD,47084:CD,47089:CD,47094:CD,47095:CD,47101:CD,47112:CD,47154:CD,47155:CD,47156:CF,47114
47089 :: CALL :: call :: Ljava/lang/Object :: v52 = v45.get(v63)::JM,47094
47094 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::JM,47111:DD,47156
47095 :: CALL :: call :: Z :: v55 = csStartsWith(p2 $null , v46, v53)::JM,47101:CL,52777
47101 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 221::CF,47156:CD,47102
47102 :: PRED :: IF :: Z :: if (v62 == #(null)) goto 221::CD,47103:CD,47107:CD,47111:CD,47156
47103 :: CALL :: call :: I :: v57 = v53.length()::JM,47111
47107 :: CALL :: call :: I :: v59 = v62.length()::JM,47111
47111 :: PRED :: IF :: Z :: if (v57 <= v59) goto 221::CF,47156
47112 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v63 + #(1)::DD,47155
47114 :: PRED :: IF :: Z :: if (v62 == #(null)) goto 270::CD,47115:CD,47119:CD,47124:CD,47129:CD,47133:CD,47141:CD,47145:CD,47146:CD,47147:CD,47148
47115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
47119 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v66.append(v47)::
47124 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(v62)::
47129 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
47133 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v75 = forID(v73)::CL,34865
47141 :: CALL :: call :: I :: v78 = v62.length()::JM,47145
47145 :: EXPR :: assign :: Ljava/lang/Object :: v79 = v46 + v78::CF,47146
47146 :: NORM :: compound :: I :: return v79::DD,47003
47147 :: EXPR :: assign :: Ljava/lang/Object :: v65 = p3 $null  ^ #(-1)::CF,47148
47148 :: NORM :: compound :: I :: return v65::DD,47003
47149 :: EXPR :: assign :: null :: PHI v19 = v18, p3 $null ::DD,47023:JM,47153:JM,47029:JM,47045:JM,47018:JM,47037:DD,47030:DD,47046:DD,47056:DD,47082
47151 :: EXPR :: assign :: null :: PHI v45 = v6, v43::CF,47152:JM,47088:JM,47094
47152 :: EXPR :: assign :: null :: PHI v46 = p3 $null , v27::CF,47153:DD,47145
47153 :: EXPR :: assign :: null :: PHI v47 = #(), v24::CF,47154
47154 :: EXPR :: assign :: null :: PHI v62 = v60, #(null)::CF,47155:DD,47102:JM,47111:DD,47114:JM,47145:DD,47156
47155 :: EXPR :: assign :: null :: PHI v63 = v61, #(0)::DD,47088:JM,47094:DD,47112
47156 :: EXPR :: assign :: null :: PHI v60 = v62, v62, v53::DD,47154:CF,47112
47382 :: ENTR :: entry :: null :: org.joda.time.chrono.LenientChronology.withZone(org.joda.time.DateTimeZone)::CD,47387:CD,47391:CD,47393:CD,47419
47387 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CF,47419:CD,47388
47388 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = getDefault()::JM,47419:CL,25571
47391 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v8 = org.joda.time.DateTimeZone.UTC::CF,47393
47393 :: PRED :: IF :: Z :: if (v7 != v8) goto 22::CD,47394:CD,47399:CD,47403
47394 :: CALL :: call :: Lorg/joda/time/Chronology :: v18 = p0 $null .withUTC()::CL,48735
47399 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v10 = p0 $null .getZone()::JM,47403:CL,29891
47403 :: PRED :: IF :: Z :: if (v7 != v10) goto 31::CD,47409:CD,47414
47409 :: CALL :: call :: Lorg/joda/time/Chronology :: v14 = v12.withZone(v7)::CL,47503:CL,47430:CL,47457
47414 :: CALL :: call :: Lorg/joda/time/chrono/LenientChronology :: v16 = getInstance(v14)::CL,44547
47419 :: EXPR :: assign :: null :: PHI v7 = p1 $null , v6::DD,47393:DD,47403
47430 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOChronology.withZone(org.joda.time.DateTimeZone)::CD,47435:CD,47439:CD,47443:CD,47450
47435 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 10::CF,47450:CD,47436
47436 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = getDefault()::JM,47450:CL,25571
47439 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v9 = p0 $null .getZone()::JM,47443:CL,29891
47443 :: PRED :: IF :: Z :: if (v7 != v9) goto 19::CD,47445
47445 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v11 = getInstance(v7)::CL,42149
47450 :: EXPR :: assign :: null :: PHI v7 = p1 $null , v6::DD,47443
47457 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.DateTimeZone)::CD,47462:CD,47466:CD,47470:CD,47491
47462 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 10::CF,47491:CD,47463
47463 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = getDefault()::JM,47491:CL,25571
47466 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $null .getParam()::JM,47470:CL,37960
47470 :: PRED :: IF :: Z :: if (v7 != v9) goto 19::CD,47472:CD,47474
47472 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v10 = org.joda.time.DateTimeZone.UTC::CF,47474
47474 :: PRED :: IF :: Z :: if (v7 != v10) goto 30::JM,16402:JM,16405:JM,16408
47491 :: EXPR :: assign :: null :: PHI v7 = p1 $null , v6::DD,47470:DD,47474
47503 :: ENTR :: entry :: null :: org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.DateTimeZone)::CD,47508:CD,47512:CD,47516:CD,47523
47508 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 10::CF,47523:CD,47509
47509 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = getDefault()::JM,47523:CL,25571
47512 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v9 = p0 $null .getZone()::JM,47516:CL,29922
47516 :: PRED :: IF :: Z :: if (v7 != v9) goto 19::CD,47518
47518 :: CALL :: call :: Lorg/joda/time/chrono/GregorianChronology :: v11 = getInstance(v7)::CL,9892
47523 :: EXPR :: assign :: null :: PHI v7 = p1 $null , v6::DD,47516
47800 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v13 = new java.lang.IllegalArgumentException::JM,47824:JM,47827:JM,47830:JM,47833:JM,47836:JM,47839
47801 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,47824:JM,47827:JM,47830:JM,47833:JM,47836:JM,47839
47805 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(#(Unknown mode: ))::
47810 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(p1 $null )::JM,47824:JM,47827:JM,47830:JM,47833:JM,47836:JM,47839
47815 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
47824 :: EXPR :: modify :: C :: p0 $null .iMode = p1 $null ::
47827 :: EXPR :: modify :: I :: p0 $null .iMonthOfYear = p2 $null ::
47830 :: EXPR :: modify :: I :: p0 $null .iDayOfMonth = p3 $null ::
47833 :: EXPR :: modify :: I :: p0 $null .iDayOfWeek = p4 $null ::
47836 :: EXPR :: modify :: Z :: p0 $null .iAdvance = p5 $null ::
47839 :: EXPR :: modify :: I :: p0 $null .iMillisOfDay = p6 $null ::
47904 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.add(long,int)::CE,47905:CD,47913:CD,47919
47905 :: EXIT :: exit :: J :: org.joda.time.field.DelegatedDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
47913 :: CALL :: call :: J :: v7 = v5.add(p1 $null , p2 $null )::JM,47919:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
47919 :: NORM :: compound :: J :: return v7::DD,47905
47923 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.add(long,int)::CE,47924:CD,47937:CD,47943
47924 :: EXIT :: exit :: J :: org.joda.time.field.DividedDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
47937 :: CALL :: call :: J :: v10 = v6.add(p1 $null , v8)::JM,47943:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,53716:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
47943 :: NORM :: compound :: J :: return v10::DD,47924
47948 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.add(long,int)::CE,47949:CD,47954:CD,47958:CD,47964
47949 :: EXIT :: exit :: J :: org.joda.time.field.BaseDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48037:JM,48075:JM,48144:JM,53732
47954 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p0 $null .getDurationField()::CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38362:CL,38411
47958 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::JM,47964:CL,34719:CL,34793:CL,34730:CL,34815:CL,34764:CL,34749
47964 :: NORM :: compound :: J :: return v8::DD,47949
47968 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.add(long,int)::CE,47969:CD,47978:CD,47984
47969 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
47978 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::JM,47984:CL,34719:CL,34793:CL,34730:CL,34815:CL,34764:CL,34749
47984 :: NORM :: compound :: J :: return v8::DD,47969
47988 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,int)::CE,47989:CD,47998:CD,48004
47989 :: EXIT :: exit :: J :: org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
47998 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::JM,48004:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,53716:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48004 :: NORM :: compound :: J :: return v8::DD,47989
48008 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.add(long,int)::CE,48009:CD,48014:CD,48020:CD,48031:CD,48037
48009 :: EXIT :: exit :: J :: org.joda.time.field.OffsetDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
48014 :: CALL :: call :: J :: v6 = p0 $null .add(p1 $null , p2 $null )::JM,48037:CL,47948
48020 :: CALL :: call :: I :: v8 = p0 $null .get(v6)::CL,9399
48031 :: CALL :: call :: V :: verifyValueBounds(p0 $null , v8, v9, v10)::CL,29666
48037 :: NORM :: compound :: J :: return v6::DD,48009
48048 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.add(long,int)::CE,48049:CD,48057
48049 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
48054 :: EXPR :: reference :: Z :: v5 = p0 $null .iTimeField::DD,48057
48057 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 37::CD,48058:CD,48068:CD,48074:CD,48075:CD,48076:CD,48080:CD,48088:CD,48097:CD,48104
48058 :: CALL :: call :: I :: v17 = p0 $null .getOffsetToAdd(p1 $null )::JM,48074:CL,38582
48068 :: CALL :: call :: J :: v22 = v18.add(v20, p2 $null )::JM,48075:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48074 :: EXPR :: assign :: J :: v23 = CONVERT I to J v17::CF,48075
48075 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v22 - v23::CF,48076
48076 :: NORM :: compound :: J :: return v24::DD,48049
48080 :: CALL :: call :: J :: v9 = v7.convertUTCToLocal(p1 $null )::CL,15971
48088 :: CALL :: call :: J :: v12 = v10.add(v9, p2 $null )::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48097 :: CALL :: call :: J :: v15 = v13.convertLocalToUTC(v12, #(0), p1 $null )::JM,48104:CL,30729
48104 :: NORM :: compound :: J :: return v15::DD,48049
48128 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.add(long,int)::CE,48129:CD,48138:CD,48144
48129 :: EXIT :: exit :: J :: org.joda.time.field.ZeroIsMaxDateTimeField.add(long,int)::JM,37661:JM,37721:JM,47919:JM,47943:JM,48004:JM,48075:JM,48144:JM,53732
48138 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::JM,48144:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,53716:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48144 :: NORM :: compound :: J :: return v8::DD,48129
48251 :: EXPR :: modify :: Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear :: p0 $null .iOfYear = p1 $null ::
48254 :: EXPR :: modify :: Ljava/lang/String :: p0 $null .iNameKey = p2 $null ::
48257 :: EXPR :: modify :: I :: p0 $null .iSaveMillis = p3 $null ::
48542 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getDaysInMonthMax(long)::CD,48547:CD,48552
48547 :: CALL :: call :: I :: v5 = p0 $null .getYear(p1 $null )::CL,16221
48552 :: CALL :: call :: I :: v7 = p0 $null .getMonthOfYear(p1 $null , v5)::CL,24016
48575 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)::CD,48579
48579 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v4 = createFormatterForPattern(p1 $null )::CL,53736
48600 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)::CE,48601:CD,48605:CD,48606:CD,48610:CD,48618:CD,48624:CD,48628
48601 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)::
48605 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,48628
48606 :: CALL :: call :: Lorg/joda/time/format/InternalPrinter :: v6 = p0 $null .requirePrinter()::CL,53815
48610 :: CALL :: call :: I :: v8 = v6.estimatePrintedLength()::CL,43312:CL,43260:CL,43282:CL,43288:CL,43237:CL,43303:CL,43160:CL,43173:CL,43269:CL,43245:CL,43154:CL,43182
48618 :: CALL :: call :: V :: p0 $null .printTo(v4, p1 $null )::CL,53835
48624 :: CALL :: call :: Ljava/lang/String :: v14 = v4.toString()::JM,48628
48628 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,48601
48646 :: EXPR :: modify :: I :: p0 $null .iOffset = #(-2147483648)::
48649 :: EXPR :: modify :: I :: p0 $null .iStandardOffset = #(-2147483648)::
48652 :: EXPR :: modify :: J :: p0 $null .iPeriodStart = p2 $null ::
48655 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZoneRef = p1 $null ::
48668 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)::CE,48669:CD,48674:CD,48693:CD,48703:CD,48710:CD,48718:CD,48721
48669 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)::JM,39440:JM,39374
48674 :: CALL :: call :: J :: v6 = p0 $null .setDayOfMonth(p1 $null , p2 $null )::JM,48721:CL,37603
48693 :: CALL :: call :: Z :: v15 = v13.isLeap(v22)::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
48703 :: CALL :: call :: J :: v21 = v18.add(v22, #(1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48710 :: CALL :: call :: J :: v24 = p0 $null .setDayOfMonth(p1 $null , v22)::JM,48721:CL,37603
48718 :: NORM :: compound :: J :: return v26::DD,48669
48721 :: EXPR :: assign :: null :: PHI v26 = v6, v24::CF,48718
48735 :: ENTR :: entry :: null :: org.joda.time.chrono.LenientChronology.withUTC()::CD,48742:JM,48750
48739 :: EXPR :: reference :: Lorg/joda/time/Chronology :: v3 = p0 $null .iWithUTC::DD,48742
48742 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 40::CD,48743:CD,48747:CD,48749
48743 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = p0 $null .getZone()::JM,48749:CL,29891
48747 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v7 = org.joda.time.DateTimeZone.UTC::CF,48749
48749 :: PRED :: IF :: Z :: if (v6 != v7) goto 27::CD,48762
48750 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iWithUTC = p0 $null ::
48762 :: CALL :: call :: Lorg/joda/time/chrono/LenientChronology :: v13 = getInstance(v11)::JM,48766:CL,44547
48766 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iWithUTC = v13::
48788 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)::CE,48789:CD,48794:CD,48813:CD,48823:CD,48830:CD,48838:CD,48841
48789 :: EXIT :: exit :: J :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)::JM,39638:JM,39704
48794 :: CALL :: call :: J :: v6 = p0 $null .setDayOfMonth(p1 $null , p2 $null )::JM,48841:CL,37603
48813 :: CALL :: call :: Z :: v15 = v13.isLeap(v22)::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
48823 :: CALL :: call :: J :: v21 = v18.add(v22, #(-1))::CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
48830 :: CALL :: call :: J :: v24 = p0 $null .setDayOfMonth(p1 $null , v22)::JM,48841:CL,37603
48838 :: NORM :: compound :: J :: return v26::DD,48789
48841 :: EXPR :: assign :: null :: PHI v26 = v6, v24::CF,48838
48880 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.DSTZone.readFrom(java.io.DataInput,java.lang.String)::CD,48886:CD,48891:CD,48895:JM,29301:JM,16663:JM,29304:JM,29307:JM,16669
48886 :: CALL :: call :: J :: v6 = readMillis(p1 $null )::CL,40175
48891 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: v9 = readFrom(p1 $null )::CL,54129
48895 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence :: v11 = readFrom(p1 $null )::CL,54129
49038 :: ENTR :: entry :: null :: org.joda.time.field.BaseDurationField.isSupported()::CF,49039:CD,49042
49039 :: EXIT :: exit :: Z :: org.joda.time.field.BaseDurationField.isSupported()::JM,40992:JM,41666:JM,51507:JM,51513:JM,51521
49042 :: NORM :: compound :: Z :: return #(1)::CF,49039
49044 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.isSupported()::CF,49045:CD,49048
49045 :: EXIT :: exit :: Z :: org.joda.time.field.UnsupportedDurationField.isSupported()::JM,40992:JM,41666:JM,51507:JM,51513:JM,51521
49048 :: NORM :: compound :: Z :: return #(0)::CF,49045
49050 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.isSupported()::CF,49051:CD,49054
49051 :: EXIT :: exit :: Z :: org.joda.time.field.MillisDurationField.isSupported()::JM,40992:JM,41666:JM,51507:JM,51513:JM,51521
49054 :: NORM :: compound :: Z :: return #(1)::CF,49051
49056 :: ENTR :: entry :: null :: org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)::CE,49057:CD,49061:JM,49063:JM,49065:JM,49083
49057 :: EXIT :: exit :: Lorg/joda/time/DateTimeField :: org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)::JM,41126
49061 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 7::CD,49062:CD,49063:CD,49064:CD,49070:CD,49074:CD,49083
49062 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return #(null)::DD,49057
49063 :: EXPR :: assign :: Z :: v5=p1 $null  INSTANCEOF org.joda.time.field.StrictDateTimeField::DD,49064
49064 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 22::CF,49083:CD,49065:CD,49066
49065 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST p1 $null ::JM,49066:JM,49083
49066 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v9 = v7.getWrappedField()::JM,49066:JM,49083
49070 :: CALL :: call :: Z :: v12 = v10.isLenient()::JM,49074:CL,54170:CL,54158:CL,54196:CL,54208:CL,54220:CL,54183:CL,54202:CL,54164:CL,54214
49074 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 30::CF,49076:CD,49075:JM,62768:JM,62778:JM,62762:JM,54236:JM,62765:CD,49082
49075 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v10::DD,49057
49076 :: NORM :: declaration :: Lorg/joda/time/field/LenientDateTimeField :: v13 = new org.joda.time.field.LenientDateTimeField::DD,49082
49082 :: NORM :: compound :: Lorg/joda/time/DateTimeField :: return v13::DD,49057
49083 :: EXPR :: assign :: null :: PHI v10 = p1 $null , v9::DD,49075
49113 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49135 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p2 $null ::
49149 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 11::CD,49151
49151 :: CALL :: call :: Lorg/joda/time/DateTimeFieldType :: v7 = p1 $null .getType()::CL,29991:CL,31092:CL,31101
49225 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49246 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49268 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49290 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49329 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49351 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
49373 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v11 = new java.lang.IllegalArgumentException::JM,17088:JM,49379:JM,25796:JM,17077:JM,17094:JM,49389:JM,25790
49379 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeField = p2 $null ::
49382 :: CALL :: call :: Lorg/joda/time/DurationField :: v10 = p1 $null .getDurationField()::JM,49386:CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
49386 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = v10::
49389 :: EXPR :: modify :: I :: p0 $null .iDivisor = p4 $null ::
49449 :: CALL :: call :: Lorg/joda/time/DurationField :: v10 = p1 $null .getDurationField()::JM,49453:CL,38380
49453 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,49458:JM,16850:JM,58629:JM,16856:JM,54441
49454 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = #(null)::
49458 :: NORM :: declaration :: Lorg/joda/time/field/ScaledDurationField :: v12 = new org.joda.time.field.ScaledDurationField::DD,49469
49469 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = v12::
49472 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeDurationField = p2 $null ::
49475 :: EXPR :: modify :: I :: p0 $null .iDivisor = p4 $null ::
49478 :: CALL :: call :: I :: v17 = p1 $null .getMinimumValue()::JM,49482:JM,49483:JM,49485:CL,54454:CL,54460
49482 :: PRED :: IF :: Z :: if (v17 < #(0)) goto 93::CD,49483:CD,49485:CD,49486:CD,49487:CD,49505
49483 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v17 / p4 $null ::DD,49505
49485 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v17 + #(1)::DD,49486
49486 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 / p4 $null ::DD,49487
49487 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 - #(1)::CF,49505
49488 :: CALL :: call :: I :: v26 = p1 $null .getMaximumValue()::JM,49492:JM,49493:JM,49495:CL,24318:CL,24378
49492 :: PRED :: IF :: Z :: if (v26 < #(0)) goto 123::CD,49493:CD,49495:CD,49496:CD,49497:CD,49506
49493 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v26 / p4 $null ::DD,49506
49495 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::DD,49496
49496 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v27 / p4 $null ::DD,49497
49497 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,49506
49498 :: EXPR :: modify :: I :: p0 $null .iMin = v24::
49501 :: EXPR :: modify :: I :: p0 $null .iMax = v31::
49505 :: EXPR :: assign :: null :: PHI v24 = v23, v22::DD,49498
49506 :: EXPR :: assign :: null :: PHI v31 = v30, v29::DD,49501
49570 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v13 = new java.lang.IllegalArgumentException::JM,49585:JM,16850:JM,49575:JM,16856
49575 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iField = p1 $null ::
49578 :: CALL :: call :: Z :: v12 = useTimeArithmetic(p1 $null )::JM,49582:CL,54486
49582 :: EXPR :: modify :: Z :: p0 $null .iTimeField = v12::
49585 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = p2 $null ::
49896 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::JM,49904:JM,49920:JM,49907:JM,25796:JM,49901:JM,49917:JM,25790
49901 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iField = p1 $null ::
49904 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = p2 $null ::
49907 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = p3 $null ::
49910 :: CALL :: call :: Z :: v15 = useTimeArithmetic(p3 $null )::JM,49914:CL,54486
49914 :: EXPR :: modify :: Z :: p0 $null .iTimeField = v15::
49917 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeDurationField = p4 $null ::
49920 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iLeapDurationField = p5 $null ::
49948 :: EXPR :: modify :: Lorg/joda/time/DurationFieldType :: p0 $null .iType = p1 $null ::
49966 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v7 = new java.lang.IllegalArgumentException::JM,49971:JM,49974:JM,49966
49971 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iType = p1 $null ::
49974 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = p2 $null ::
49997 :: ENTR :: entry :: null :: org.joda.time.field.MillisDurationField.getDifferenceAsLong(long,long)::
50011 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(long,long)::CD,50017
50017 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,42413
50022 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(long,long)::CD,50028:CD,50029
50028 :: EXPR :: assign :: Z :: v5 = p1 $null  == p2 $null ::DD,50029
50029 :: PRED :: IF :: Z :: if (v5 >= #(0)) goto 18::CD,50033:CD,50044
50033 :: CALL :: call :: J :: v12 = v10.getYearDifference(p2 $null , p1 $null )::CL,54507
50044 :: CALL :: call :: J :: v9 = v7.getYearDifference(p1 $null , p2 $null )::CL,54507
50060 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)::CD,50066:CD,50067
50066 :: EXPR :: assign :: Z :: v5 = p1 $null  == p2 $null ::DD,50067
50067 :: PRED :: IF :: Z :: if (v5 >= #(0)) goto 17::CD,50068:CD,50077:CD,50082:CD,50087:CD,50092:CD,50097:CD,50098
50068 :: CALL :: call :: I :: v31 = p0 $null .getDifference(p2 $null , p1 $null )::CL,42393
50077 :: CALL :: call :: I :: v8 = p0 $null .get(p1 $null )::CL,9492
50082 :: CALL :: call :: I :: v10 = p0 $null .get(p2 $null )::CL,9492
50087 :: CALL :: call :: J :: v12 = p0 $null .remainder(p1 $null )::CL,54612
50092 :: CALL :: call :: J :: v14 = p0 $null .remainder(p2 $null )::JM,50097:CL,54612
50097 :: EXPR :: assign :: Z :: v16 = v14 == #(31449600000 l)::DD,50098
50098 :: PRED :: IF :: Z :: if (v16 < #(0)) goto 78::CD,50102
50102 :: CALL :: call :: I :: v19 = v17.getWeeksInYear(v8)::CL,30798
50152 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)::CD,50158:CD,50159
50158 :: EXPR :: assign :: Z :: v5 = p1 $null  == p2 $null ::DD,50159
50159 :: PRED :: IF :: Z :: if (v5 >= #(0)) goto 16::CD,50160:CD,50172:CD,50180:CD,50189:CD,50197:CD,50217:CD,50227:CD,50233:CD,50261:CD,50271
50160 :: CALL :: call :: I :: v56 = p0 $null .getDifference(p2 $null , p1 $null )::CL,42393
50172 :: CALL :: call :: I :: v9 = v7.getYear(p1 $null )::CL,16221
50180 :: CALL :: call :: I :: v12 = v10.getMonthOfYear(p1 $null , v9)::CL,24016
50189 :: CALL :: call :: I :: v15 = v13.getYear(p2 $null )::CL,16221
50197 :: CALL :: call :: I :: v18 = v16.getMonthOfYear(p2 $null , v15)::CL,24016
50217 :: CALL :: call :: I :: v30 = v28.getDayOfMonth(p1 $null , v9, v12)::JM,50244:JM,50233:CL,24472
50227 :: CALL :: call :: I :: v33 = v31.getDaysInYearMonth(v9, v12)::JM,50233:CL,30865
50233 :: PRED :: IF :: Z :: if (v30 != v33) goto 148::CD,50237:CD,50244
50237 :: CALL :: call :: I :: v36 = v34.getDayOfMonth(p2 $null , v15, v18)::JM,50244:CL,24472
50244 :: PRED :: IF :: Z :: if (v36 <= v30) goto 148::CD,50252
50252 :: CALL :: call :: J :: v41 = v39.set(p2 $null , v30)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
50261 :: CALL :: call :: J :: v45 = v43.getYearMonthMillis(v9, v12)::CL,54627
50271 :: CALL :: call :: J :: v49 = v47.getYearMonthMillis(v15, v18)::CL,54627
50345 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getOffsetFromLocal(long)::CE,50346:CD,50350:CD,50355:CD,50356:CD,50357:CD,50362:JM,50371:JM,50382
50346 :: EXIT :: exit :: I :: org.joda.time.DateTimeZone.getOffsetFromLocal(long)::JM,42535:JM,53431
50350 :: CALL :: call :: I :: v5 = p0 $null .getOffset(p1 $null )::JM,50370:JM,50402:JM,50355:JM,50387:JM,50389:JM,50362:JM,50363:CL,22651:CL,22661:CL,22668:CL,22544
50355 :: EXPR :: assign :: J :: v6 = CONVERT I to J v5::CF,50356
50356 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $null  - v6::DD,50395:DD,50403
50357 :: CALL :: call :: I :: v9 = p0 $null .getOffset(v7)::JM,50408:JM,50362:JM,50363:JM,50381:CL,22651:CL,22661:CL,22668:CL,22544
50362 :: PRED :: IF :: Z :: if (v5 == v9) goto 97::CD,50363:CD,50364:CD,50389
50363 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v5 - v9::DD,50364
50364 :: PRED :: IF :: Z :: if (v20 >= #(0)) goto 147::CD,50365:CD,50370:CD,50371:CD,50372:CD,50373:CD,50376:CD,50381:CD,50382:CD,50383:CD,50384:CD,50385:CD,50386:CD,50408:CD,50409:CD,50410
50365 :: CALL :: call :: J :: v22 = p0 $null .nextTransition(v7)::JM,50372:JM,50409:CL,22986:CL,22972:CL,22956:CL,22979
50370 :: EXPR :: assign :: J :: v23 = CONVERT I to J v5::CF,50371
50371 :: EXPR :: assign :: Ljava/lang/Object :: v24 = p1 $null  - v23::CF,50372
50372 :: EXPR :: assign :: Z :: v25 = v22 == v24::DD,50373
50373 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 60::CF,50409
50376 :: CALL :: call :: J :: v31 = p0 $null .nextTransition(v29)::JM,50410:JM,50383:CL,22986:CL,22972:CL,22956:CL,22979
50381 :: EXPR :: assign :: J :: v32 = CONVERT I to J v9::CF,50382
50382 :: EXPR :: assign :: Ljava/lang/Object :: v33 = p1 $null  - v32::CF,50383
50383 :: EXPR :: assign :: Z :: v34 = v31 == v33::DD,50384
50384 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 87::CF,50410
50385 :: EXPR :: assign :: Z :: v36 = v27 == v35::DD,50386
50386 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 93::CD,50387:CD,50408
50387 :: NORM :: compound :: I :: return v5::DD,50346
50389 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 147::CD,50390:CD,50395:CD,50396:CD,50408
50390 :: CALL :: call :: J :: v12 = p0 $null .previousTransition(v7)::JM,50403:JM,50395:CL,23404:CL,23173:CL,23296:CL,23189
50395 :: EXPR :: assign :: Z :: v13 = v12 == v7::DD,50396
50396 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 147::CD,50397:CD,50402:CD,50403:CD,50404:CD,50405:CD,50406:CD,50408
50397 :: CALL :: call :: I :: v15 = p0 $null .getOffset(v12)::JM,50402:JM,50407:CL,22651:CL,22661:CL,22668:CL,22544
50402 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 - v5::DD,50404:CF,50403
50403 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v7 - v12::DD,50405:CF,50404
50404 :: EXPR :: assign :: J :: v18 = CONVERT I to J v16::CF,50405
50405 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,50406
50406 :: PRED :: IF :: Z :: if (v19 > #(0)) goto 147::CD,50407:CD,50408
50407 :: NORM :: compound :: I :: return v15::DD,50346
50408 :: NORM :: compound :: I :: return v9::DD,50346
50409 :: EXPR :: assign :: null :: PHI v27 = v22, #(9223372036854775807 l)::DD,50385
50410 :: EXPR :: assign :: null :: PHI v35 = v31, #(9223372036854775807 l)::DD,50385
50466 :: ENTR :: entry :: null :: org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(long)::CE,50467:CD,50474
50467 :: EXIT :: exit :: I :: org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(long)::JM,42535:JM,53431
50471 :: EXPR :: reference :: I :: v4 = p0 $null .iWallOffset::DD,50474
50474 :: NORM :: compound :: I :: return v4::CF,50467
50476 :: ENTR :: entry :: null :: org.joda.time.UTCDateTimeZone.getOffsetFromLocal(long)::CF,50477:CD,50481
50477 :: EXIT :: exit :: I :: org.joda.time.UTCDateTimeZone.getOffsetFromLocal(long)::JM,42535:JM,53431
50481 :: NORM :: compound :: I :: return #(0)::CF,50477
50483 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.loadZoneData(java.lang.String)::CE,50484:CD,50488:CD,50493:CD,50501:CD,50506:CD,50517:CD,50518:CD,50525:CD,50535
50484 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.tz.ZoneInfoProvider.loadZoneData(java.lang.String)::JM,42603:JM,42615
50488 :: CALL :: call :: Ljava/io/InputStream :: v6 = p0 $null .openResource(p1 $null )::CL,43795
50493 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v8 = readFrom(v6, p1 $null )::JM,50517:CL,23514
50501 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v18 = new java.lang.ref.SoftReference::
50506 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.put(p1 $null , v18)::
50517 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v8::DD,50484
50518 :: CALL :: call :: V :: p0 $null .uncaughtException(v9)::CL,54655
50525 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.remove(p1 $null )::
50535 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return #(null)::DD,50484
50568 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)::CE,50569:CD,50580:JM,44656:JM,44677:JM,44670:CD,50603:CD,50609
50569 :: EXIT :: exit :: J :: org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)::JM,42661
50580 :: CALL :: call :: Lorg/joda/time/Chronology :: v8 = p0 $null .selectChronology(v6)::CL,44603
50603 :: CALL :: call :: J :: v16 = v9.doParseMillis(v5, p1 $null )::JM,50609:CL,54694
50609 :: NORM :: compound :: J :: return v16::DD,50569
50625 :: ENTR :: entry :: null :: org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)::CD,50631
50631 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , p2 $null , p3 $null )::CL,54749
50806 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.addArrayToList(java.util.List,java.lang.Object[])::CD,50812:JM,50813
50812 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 28::CD,50813:CD,50814:CD,50827
50813 :: EXPR :: assign :: I :: v7 = p2 $null .length::CF,50814
50814 :: PRED :: IF :: Z :: if (v13 >= v7) goto 28::CD,50813:CD,50819:CD,50824:CD,50827
50815 :: EXPR :: reference :: Ljava/lang/Object :: v8 = p2 $null [v13]::
50819 :: CALL :: call :: Z :: v10 = p1 $null .add(v8)::JM,50812:JM,50813
50824 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(1)::DD,50827
50827 :: EXPR :: assign :: null :: PHI v13 = v12, #(0)::DD,50814:DD,50824:CF,50813
51316 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.readZoneInfoMap(java.io.DataInputStream,java.util.Map)::CD,51321:CD,51326:CD,51341:CD,51345:CD,51379:CD,51380
51321 :: CALL :: call :: I :: v5 = p1 $null .readUnsignedShort()::JM,51345:JM,51326
51326 :: PRED :: IF :: Z :: if (v14 >= v5) goto 37::CD,51327:CD,51339:CD,51379:JM,51345:JM,51326
51327 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $null .readUTF()::JM,51345:JM,51326
51339 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,51379
51341 :: CALL :: call :: I :: v16 = p1 $null .readUnsignedShort()::JM,51345:JM,51326
51345 :: PRED :: IF :: Z :: if (v26 >= v16) goto 90::CD,51362:CD,51375:CD,51380
51362 :: CALL :: call :: Ljava/lang/Object :: v24 = p2 $null .put(v19, v22)::
51375 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,51380
51379 :: EXPR :: assign :: null :: PHI v14 = v13, #(0)::DD,51326:DD,51339
51380 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::DD,51345:DD,51375
51497 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)::CE,51498:CD,51502:JM,51508:JM,51516
51498 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)::JM,44125:JM,44126:JM,44143:JM,53317:JM,53323
51502 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 12::CD,51503:CD,51507:CD,51508
51503 :: CALL :: call :: Z :: v6 = p1 $null .isSupported()::JM,51507:CL,49044:CL,49050:CL,49038
51507 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 27::CD,51508:CD,51516
51508 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 23::CD,51509:CD,51513:CD,51514
51509 :: CALL :: call :: Z :: v15 = p2 $null .isSupported()::JM,51513:CL,49044:CL,49050:CL,49038
51513 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 25::CD,51514:CD,51515
51514 :: NORM :: compound :: I :: return #(0)::CF,51498
51515 :: NORM :: compound :: I :: return #(-1)::CF,51498
51516 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 38::CD,51517:CD,51521:CD,51522
51517 :: CALL :: call :: Z :: v9 = p2 $null .isSupported()::JM,51521:CL,49044:CL,49050:CL,49038
51521 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 41::CD,51522:CD,51523:CD,51528:CD,51529
51522 :: NORM :: compound :: I :: return #(1)::CF,51498
51523 :: CALL :: call :: I :: v11 = p1 $null .compareTo(p2 $null )::JM,51528:CL,36391:CL,36405:CL,36377
51528 :: EXPR :: assign :: Ljava/lang/Object :: v12 = -(v11)::CF,51529
51529 :: NORM :: compound :: I :: return v12::CF,51498
51547 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.forLocale(java.util.Locale)::CD,51551:CD,51557:CD,51562:CD,51563
51551 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 8::CD,51552
51552 :: CALL :: call :: Ljava/util/Locale :: v5 = getDefault()::
51557 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,51562
51562 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,51563
51563 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 55::JM,55700:JM,55829:JM,55689:JM,55678:JM,55870:JM,55663:JM,55711:CD,51571
51571 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.putIfAbsent(v6, v11)::
51600 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(java.lang.String)::JM,56029
51646 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.convertText(java.lang.String,java.util.Locale)::CD,51652:CD,51656
51652 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
51656 :: CALL :: call :: I :: v8 = v6.dayOfWeekTextToValue(p1 $null )::CL,56090
51664 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.convertText(java.lang.String,java.util.Locale)::CD,51670:JM,56029
51670 :: CALL :: call :: I :: v6 = parseInt(p1 $null )::
51688 :: ENTR :: entry :: null :: org.joda.time.chrono.GJMonthOfYearDateTimeField.convertText(java.lang.String,java.util.Locale)::CD,51694:CD,51698
51694 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
51698 :: CALL :: call :: I :: v8 = v6.monthOfYearTextToValue(p1 $null )::CL,56126
51706 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(java.lang.String)::JM,56029
51921 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.roundFloor(long)::CE,51922:CD,51930:CD,51935
51922 :: EXIT :: exit :: J :: org.joda.time.field.OffsetDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
51930 :: CALL :: call :: J :: v7 = v5.roundFloor(p1 $null )::JM,51935:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
51935 :: NORM :: compound :: J :: return v7::DD,51922
51938 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.roundFloor(long)::CE,51939:CD,51946
51939 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
51943 :: EXPR :: reference :: Z :: v4 = p0 $null .iTimeField::DD,51946
51946 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 31::CD,51947:CD,51957:CD,51962:CD,51963:CD,51964:CD,51968:CD,51976:CD,51984:CD,51991
51947 :: CALL :: call :: I :: v16 = p0 $null .getOffsetToAdd(p1 $null )::JM,51962:CL,38582
51957 :: CALL :: call :: J :: v21 = v17.roundFloor(v19)::JM,51963:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,52189:CL,52013:CL,52172
51962 :: EXPR :: assign :: J :: v22 = CONVERT I to J v16::CF,51963
51963 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 - v22::CF,51964
51964 :: NORM :: compound :: J :: return v23::DD,51939
51968 :: CALL :: call :: J :: v8 = v6.convertUTCToLocal(p1 $null )::CL,15971
51976 :: CALL :: call :: J :: v11 = v9.roundFloor(v8)::CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,52189:CL,52013:CL,52172
51984 :: CALL :: call :: J :: v14 = v12.convertLocalToUTC(v11, #(0), p1 $null )::JM,51991:CL,30729
51991 :: NORM :: compound :: J :: return v14::DD,51939
52013 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(long)::CE,52014:CD,52021:CD,52029:CD,52038:CD,52044
52014 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238:JM,63410
52021 :: CALL :: call :: I :: v6 = v4.getYear(p1 $null )::CL,16221
52029 :: CALL :: call :: I :: v9 = v7.getMonthOfYear(p1 $null , v6)::CL,24016
52038 :: CALL :: call :: J :: v12 = v10.getYearMonthMillis(v6, v9)::JM,52044:CL,54627
52044 :: NORM :: compound :: J :: return v12::DD,52014
52055 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.roundFloor(long)::CE,52056:CD,52063:CD,52068
52056 :: EXIT :: exit :: J :: org.joda.time.field.DelegatedDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370
52063 :: CALL :: call :: J :: v6 = v4.roundFloor(p1 $null )::JM,52068:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,52189:CL,52013:CL,52172
52068 :: NORM :: compound :: J :: return v6::DD,52056
52071 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.roundFloor(long)::CE,52072:CD,52076
52072 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370
52076 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v5 = p0 $null .unsupported()::CL,16323
52081 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)::CE,52082:CD,52093:CD,52101:CD,52106:CD,52111:CD,52112
52082 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,54622:JM,56328:JM,57370:JM,63238
52093 :: CALL :: call :: J :: v8 = v6.roundFloor(p1 $null )::JM,52112:JM,52110:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,52189:CL,52013:CL,52172
52101 :: CALL :: call :: I :: v11 = v9.getWeekOfWeekyear(v8)::JM,52106:JM,52107:CL,16179
52106 :: PRED :: IF :: Z :: if (v11 <= #(1)) goto 38::CF,52112:CD,52107:CD,52108:CD,52109:CD,52110
52107 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v11 - #(1)::CF,52108
52108 :: EXPR :: assign :: J :: v15 = CONVERT I to J v14::CF,52109
52109 :: EXPR :: assign :: Ljava/lang/Object :: v16 = #(604800000 l) * v15::CF,52110
52110 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v8 - v16::DD,52112
52111 :: NORM :: compound :: J :: return v18::DD,52082
52112 :: EXPR :: assign :: null :: PHI v18 = v8, v17::CF,52111
52126 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.roundFloor(long)::CE,52127:CD,52135:CD,52140
52127 :: EXIT :: exit :: J :: org.joda.time.field.RemainderDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52135 :: CALL :: call :: J :: v7 = v5.roundFloor(p1 $null )::JM,52140:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
52140 :: NORM :: compound :: J :: return v7::DD,52127
52143 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.roundFloor(long)::CE,52144:CD,52148:CD,52153
52144 :: EXIT :: exit :: J :: org.joda.time.chrono.GJEraDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52148 :: CALL :: call :: I :: v5 = p0 $null .get(p1 $null )::JM,52153:CL,9632
52153 :: PRED :: IF :: Z :: if (v5 != #(1)) goto 22::CD,52157:CD,52163:CD,52164
52157 :: CALL :: call :: J :: v11 = v8.setYear(#(0 l), #(1))::JM,52163:CL,29705
52163 :: NORM :: compound :: J :: return v11::DD,52144
52164 :: NORM :: compound :: J :: return #(-9223372036854775808 l)::DD,52144
52172 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)::CE,52173:CD,52178:CD,52183:CD,52184
52173 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52178 :: CALL :: call :: J :: v7 = p0 $null .roundFloor(v5)::JM,52183:CL,52266
52183 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v7 - #(259200000 l)::CF,52184
52184 :: NORM :: compound :: J :: return v8::CF,52173
52189 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(long)::CE,52190:CD,52198:CD,52203
52190 :: EXIT :: exit :: J :: org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52198 :: CALL :: call :: J :: v7 = v5.roundFloor(p1 $null )::JM,52203:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
52203 :: NORM :: compound :: J :: return v7::DD,52190
52206 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.roundFloor(long)::CE,52207:CD,52215:CD,52224:CD,52230:CD,52235
52207 :: EXIT :: exit :: J :: org.joda.time.field.DividedDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52215 :: CALL :: call :: I :: v7 = p0 $null .get(p1 $null )::CL,9562
52224 :: CALL :: call :: J :: v11 = v5.set(p1 $null , v9)::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,29826:CL,22306:CL,22490:CL,21805
52230 :: CALL :: call :: J :: v13 = v5.roundFloor(v11)::JM,52235:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
52235 :: NORM :: compound :: J :: return v13::DD,52207
52244 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.roundFloor(long)::CE,52245:CD,52252:CD,52257:CD,52262
52245 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238:JM,63253
52252 :: CALL :: call :: I :: v6 = p0 $null .get(p1 $null )::CL,9653
52257 :: CALL :: call :: J :: v8 = v4.getYearMillis(v6)::JM,52262:CL,24431
52262 :: NORM :: compound :: J :: return v8::DD,52245
52266 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)::CE,52267:CD,52271:CD,52272:JM,52276:JM,52277:JM,52279
52267 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52183:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52271 :: EXPR :: assign :: Z :: v5 = p1 $null  == #(0 l)::DD,52272
52272 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 17::CD,52276:CD,52277:CD,52278:CD,52279:CD,52283:CD,52284:CD,52288:CD,52289
52273 :: EXPR :: reference :: J :: v14 = p0 $null .iUnitMillis::DD,52276
52276 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p1 $null  % v14::CF,52277
52277 :: EXPR :: assign :: Ljava/lang/Object :: v16 = p1 $null  - v15::CF,52278
52278 :: NORM :: compound :: J :: return v16::CF,52267
52279 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $null  + #(1 l)::DD,52283:DD,52284
52280 :: EXPR :: reference :: J :: v9 = p0 $null .iUnitMillis::DD,52283
52283 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 % v9::CF,52284
52284 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v8 - v10::DD,52288
52285 :: EXPR :: reference :: J :: v12 = p0 $null .iUnitMillis::DD,52288
52288 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 - v12::CF,52289
52289 :: NORM :: compound :: J :: return v13::CF,52267
52303 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(long)::CE,52304:CD,52312:CD,52317
52304 :: EXIT :: exit :: J :: org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(long)::JM,51935:JM,51963:JM,52068:JM,52112:JM,52110:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,57370:JM,63238
52312 :: CALL :: call :: J :: v7 = v5.roundFloor(p1 $null )::JM,52317:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
52317 :: NORM :: compound :: J :: return v7::DD,52304
52534 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)::CE,52535:CD,52540:CD,52544:CD,52548:CD,52549:JM,52563:JM,52581:JM,52551:JM,52552:JM,52572
52535 :: EXIT :: exit :: Z :: org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)::JM,44783:JM,45661
52540 :: CALL :: call :: I :: v6 = p3 $null .length()::JM,52563:JM,52548:JM,52549:JM,52581:JM,52551:JM,52572
52544 :: CALL :: call :: I :: v8 = p1 $null .length()::JM,52563:JM,52548:JM,52549:JM,52581:JM,52551:JM,52552:JM,52572
52548 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v8 - p2 $null ::DD,52549
52549 :: PRED :: IF :: Z :: if (v9 >= v6) goto 25::CD,52550:CD,52551:CD,52586
52550 :: NORM :: compound :: Z :: return #(0)::DD,52535
52551 :: PRED :: IF :: Z :: if (v26 >= v6) goto 98::CD,52552:CD,52553:CD,52558:CD,52563:CD,52585
52552 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p2 $null  + v26::JM,52563:JM,52548:JM,52549:JM,52581:JM,52551:JM,52552:JM,52572
52553 :: CALL :: call :: C :: v13 = p1 $null .charAt(v11)::JM,52563:JM,52548:JM,52549:JM,52581:JM,52551:JM,52552:JM,52572
52558 :: CALL :: call :: C :: v15 = p3 $null .charAt(v26)::JM,52563:JM,52548:JM,52549:JM,52581:JM,52551:JM,52572
52563 :: PRED :: IF :: Z :: if (v13 == v15) goto 91::CD,52551:CD,52564:CD,52568:CD,52572:CD,52583:CD,52586:JM,52563:JM,52549:JM,52581
52564 :: CALL :: call :: C :: v17 = toUpperCase(v13)::JM,52563:JM,52549:JM,52581:JM,52551:JM,52572
52568 :: CALL :: call :: C :: v19 = toUpperCase(v15)::JM,52581:JM,52572
52572 :: PRED :: IF :: Z :: if (v17 == v19) goto 91::CD,52551:CD,52573:CD,52577:CD,52581:CD,52583:CD,52586:JM,52572
52573 :: CALL :: call :: C :: v21 = toLowerCase(v17)::JM,52581:JM,52572
52577 :: CALL :: call :: C :: v23 = toLowerCase(v19)::JM,52581
52581 :: PRED :: IF :: Z :: if (v21 == v23) goto 91::CD,52551:CD,52582:CD,52583:CD,52586
52582 :: NORM :: compound :: Z :: return #(0)::DD,52535
52583 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,52586
52585 :: NORM :: compound :: Z :: return #(1)::DD,52535
52586 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::DD,52551:DD,52552:JM,52563:JM,52548:JM,52549:JM,52581:JM,52572:DD,52583
52618 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)::CE,52619:CD,52625:CD,52629:CD,52630:CD,52635:CD,52648:CD,52649:CD,52650:JM,52642:JM,52643:JM,52636
52619 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)::JM,44824:JM,44858:JM,44861:JM,44898:JM,44895:JM,44963:JM,44953:JM,44938:JM,44941
52625 :: CALL :: call :: I :: v7 = p1 $null .length()::JM,52642:JM,52643:JM,52629:JM,52630:JM,52650:JM,52636
52629 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v7 - p2 $null ::JM,52630:JM,52650
52630 :: CALL :: call :: I :: v10 = min(v8, p3 $null )::JM,52630:JM,52650:JM,52642:JM,52643:JM,52629
52635 :: PRED :: IF :: Z :: if (v22 <= #(0)) goto 59::CD,52636:CD,52637:CD,52642:CF,52648
52636 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p2 $null  + v21::JM,52642:JM,52643:JM,52629:JM,52630:JM,52650:JM,52636
52637 :: CALL :: call :: C :: v14 = p1 $null .charAt(v12)::JM,52642:JM,52643:JM,52629:JM,52630:JM,52650:JM,52636
52642 :: PRED :: IF :: Z :: if (v14 < #(48)) goto 59::CD,52643:CF,52648
52643 :: PRED :: IF :: Z :: if (v14 <= #(57)) goto 49::CD,52635:CD,52645:CD,52646:CD,52649:CD,52650
52645 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v21 + #(1)::DD,52649:CF,52646
52646 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v22 + #(-1)::DD,52650
52648 :: NORM :: compound :: I :: return v21::DD,52619
52649 :: EXPR :: assign :: null :: PHI v21 = v18, #(0)::CF,52650:DD,52636:DD,52645:DD,52648
52650 :: EXPR :: assign :: null :: PHI v22 = v20, v10::DD,52635:DD,52646
52673 :: ENTR :: entry :: null :: org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)::CE,52674:CD,52678:CD,52683:CD,52684:CD,52685:CD,52686:CD,52687:CD,52688:CD,52693:CD,52694:CD,52695
52674 :: EXIT :: exit :: I :: org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)::JM,44832:JM,44835:JM,44869:JM,44872:JM,44906:JM,44909
52678 :: CALL :: call :: C :: v5 = p1 $null .charAt(p2 $null )::JM,52693:JM,52683:JM,52687
52683 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(48)::DD,52684:DD,52685
52684 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 ? #(3)::DD,52686:CF,52685
52685 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v7 ? #(1)::CF,52686
52686 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v9 + v11::DD,52693:CF,52687
52687 :: EXPR :: assign :: Ljava/lang/Object :: v13 = p2 $null  + #(1)::JM,52693:JM,52683:JM,52687
52688 :: CALL :: call :: C :: v15 = p1 $null .charAt(v13)::JM,52693:JM,52683:JM,52687
52693 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v12 + v15::DD,52694
52694 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v16 - #(48)::CF,52695
52695 :: NORM :: compound :: I :: return v17::DD,52674
52717 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeField,int)::CD,52723
52723 :: CALL :: call :: Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v6 = p0 $null .obtainSaveField()::CL,56369
52736 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.getDefaultTimeZoneNames()::CE,52737:CD,52739:CD,52741:CD,52745:CD,52746:CD,52766:CD,52767
52737 :: EXIT :: exit :: Ljava/util/Map :: org.joda.time.DateTimeUtils.getDefaultTimeZoneNames()::JM,45611
52739 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v2 = org.joda.time.DateTimeUtils.cZoneNames::JM,52741:JM,52745
52741 :: CALL :: call :: Ljava/lang/Object :: v4 = v2.get()::JM,52741:JM,52745
52745 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::DD,52746:DD,52767
52746 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 40::CF,52767:CD,52747:CD,52750:CD,52752:CD,52758
52747 :: CALL :: call :: Ljava/util/Map :: v8 = buildDefaultTimeZoneNames()::JM,52752:JM,52758:JM,52767:CL,56494
52750 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v9 = org.joda.time.DateTimeUtils.cZoneNames::JM,52752:JM,52758
52752 :: CALL :: call :: Z :: v11 = v9.compareAndSet(#(null), v8)::JM,52752:JM,52758:JM,52767
52758 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 40::CF,52767:CD,52759:CD,52761:CD,52765
52759 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v13 = org.joda.time.DateTimeUtils.cZoneNames::JM,52761:JM,52765
52761 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.get()::JM,52761:JM,52765
52765 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::DD,52767
52766 :: NORM :: compound :: Ljava/util/Map :: return v17::DD,52737
52767 :: EXPR :: assign :: null :: PHI v17 = v5, v8, v16::CF,52766
52777 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)::CE,52778:CD,52783:CD,52787:CD,52791:CD,52792:JM,52806:JM,52794:JM,52795
52778 :: EXIT :: exit :: Z :: org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)::JM,45580:JM,47101
52783 :: CALL :: call :: I :: v6 = p3 $null .length()::JM,52806:JM,52791:JM,52792:JM,52794
52787 :: CALL :: call :: I :: v8 = p1 $null .length()::JM,52806:JM,52791:JM,52792:JM,52794:JM,52795
52791 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v8 - p2 $null ::DD,52792
52792 :: PRED :: IF :: Z :: if (v9 >= v6) goto 25::CD,52793:CD,52794:CD,52811
52793 :: NORM :: compound :: Z :: return #(0)::DD,52778
52794 :: PRED :: IF :: Z :: if (v18 >= v6) goto 56::CD,52795:CD,52796:CD,52801:CD,52806:CD,52810
52795 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p2 $null  + v18::JM,52806:JM,52791:JM,52792:JM,52794:JM,52795
52796 :: CALL :: call :: C :: v13 = p1 $null .charAt(v11)::JM,52806:JM,52791:JM,52792:JM,52794:JM,52795
52801 :: CALL :: call :: C :: v15 = p3 $null .charAt(v18)::JM,52806:JM,52791:JM,52792:JM,52794
52806 :: PRED :: IF :: Z :: if (v13 == v15) goto 49::CD,52794:CD,52807:CD,52808:CD,52811
52807 :: NORM :: compound :: Z :: return #(0)::DD,52778
52808 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,52811
52810 :: NORM :: compound :: Z :: return #(1)::DD,52778
52811 :: EXPR :: assign :: null :: PHI v18 = v17, #(0)::DD,52794:DD,52795:JM,52806:JM,52791:JM,52792:DD,52808
52847 :: ENTR :: entry :: null :: org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)::CE,52848:CD,52857:CD,52864
52848 :: EXIT :: exit :: I :: org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)::JM,45758
52857 :: CALL :: call :: I :: v8 = v6.parseInto(p1 $null , p2 $null , p3 $null )::JM,52864:CL,44732:CL,45469:CL,45737:CL,45922:CL,47002:CL,46270:CL,45763:CL,45371:CL,45681:CL,45221:CL,45541:CL,46727:CL,45645:CL,45447
52864 :: NORM :: compound :: I :: return v8::DD,52848
52869 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.saveState()::CD,52876
52873 :: EXPR :: reference :: Ljava/lang/Object :: v3 = p0 $null .iSavedState::DD,52876
52876 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 20::JM,56625:JM,56612:JM,56632:JM,56618:JM,56639
52923 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,int)::CD,52929:CD,52936
52929 :: CALL :: call :: Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v6 = p0 $null .obtainSaveField()::CL,56369
52936 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v9 = p1 $null .getField(v7)::CL,30026
52960 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.getLocale()::CE,52961:CD,52967
52961 :: EXIT :: exit :: Ljava/util/Locale :: org.joda.time.format.DateTimeParserBucket.getLocale()::JM,46465
52964 :: EXPR :: reference :: Ljava/util/Locale :: v3 = p0 $null .iLocale::DD,52967
52967 :: NORM :: compound :: Ljava/util/Locale :: return v3::CF,52961
52984 :: ENTR :: entry :: null :: org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)::CD,53000:CD,53011:CD,53015:CD,53020:CD,53025:CD,53030
53000 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v8 = p1 $null .getField(v6)::CL,30026
53011 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
53015 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(#(Field '))::
53020 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(p1 $null )::
53025 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(' is not supported))::
53030 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
53056 :: ENTR :: entry :: null :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()::CE,53057:CD,53064:CD,53068
53057 :: EXIT :: exit :: I :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()::JM,46341:JM,46584
53064 :: CALL :: call :: I :: v6 = v4.getMinimumValue()::JM,53068:CL,56843:CL,56830:CL,30980:CL,56856:CL,56817:CL,56871:CL,56784:CL,54460:CL,56790:CL,30962:CL,30968:CL,17106:CL,56796:CL,56811:CL,56865:CL,30974:CL,56802
53068 :: NORM :: compound :: I :: return v6::DD,53057
53070 :: ENTR :: entry :: null :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()::CE,53071:CD,53078:CD,53082
53071 :: EXIT :: exit :: I :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()::JM,46341:JM,46350
53078 :: CALL :: call :: I :: v6 = v4.getMaximumValue()::JM,53082:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
53082 :: NORM :: compound :: I :: return v6::DD,53071
53084 :: ENTR :: entry :: null :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)::CE,53085:CD,53093:CD,53098
53085 :: EXIT :: exit :: I :: org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)::JM,46585
53093 :: CALL :: call :: I :: v7 = v5.getMaximumTextLength(p1 $null )::JM,53098:CL,57015:CL,56884:CL,56983:CL,56968:CL,56999:CL,56938:CL,56953:CL,56923
53098 :: NORM :: compound :: I :: return v7::DD,53085
53101 :: ENTR :: entry :: null :: org.joda.time.MutableDateTime.Property.set(int)::CD,53120
53120 :: CALL :: call :: J :: v11 = v6.set(v9, p1 $null )::CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
53139 :: ENTR :: entry :: null :: org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)::CE,53140:CD,53152:CD,53158
53140 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)::
53152 :: CALL :: call :: Ljava/lang/String :: v9 = v5.getAsShortText(v7, p1 $null )::JM,53158:CL,57101:CL,57060:CL,57071:CL,57038
53158 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,53140
53162 :: ENTR :: entry :: null :: org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)::CE,53163:CD,53175:CD,53181
53163 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)::
53175 :: CALL :: call :: Ljava/lang/String :: v9 = v5.getAsText(v7, p1 $null )::JM,53181:CL,57139:CL,57161:CL,57191:CL,57120
53181 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,53163
53212 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale)::CD,53219:CD,53226
53219 :: CALL :: call :: Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v7 = p0 $null .obtainSaveField()::CL,56369
53226 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v10 = p1 $null .getField(v8)::CL,30026
53243 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)::CE,53244:CD,53274:CD,53278:CD,53377:CD,53381:CD,53386:CD,53391:CD,53396:CD,53400:CD,53442:CD,53446:CD,53454:CD,53459:CD,53464:CD,53469:CD,53473:CD,53478:CD,53483:CD,53488:CD,53493:JM,53358
53244 :: EXIT :: exit :: J :: org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)::JM,53341:JM,54719
53252 :: EXPR :: reference :: I :: v6 = p0 $null .iSavedFieldsCount::DD,53278:DD,53345:DD,53359
53274 :: CALL :: call :: V :: sort(v14, v6)::CL,57230
53278 :: PRED :: IF :: Z :: if (v6 <= #(0)) goto 127::CD,53285:CD,53296:CD,53308:CD,53312:CD,53317:CD,53345:CD,53358:CD,53408:CD,53503:CD,53506:CD,53507:CD,53511:CD,53513
53285 :: CALL :: call :: Lorg/joda/time/DurationField :: v20 = v17.getField(v18)::CL,34485
53296 :: CALL :: call :: Lorg/joda/time/DurationField :: v25 = v22.getField(v23)::CL,34485
53308 :: CALL :: call :: Lorg/joda/time/DurationField :: v29 = v27.getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
53312 :: CALL :: call :: I :: v31 = compareReverse(v29, v20)::JM,53317:CL,51497
53317 :: PRED :: IF :: Z :: if (v31 < #(0)) goto 127::CD,53318:CD,53323:CD,53345:CD,53358:CD,53408:CD,53503:CD,53506:CD,53507:CD,53511:CD,53513
53318 :: CALL :: call :: I :: v33 = compareReverse(v29, v25)::JM,53323:CL,51497
53323 :: PRED :: IF :: Z :: if (v33 > #(0)) goto 127::CD,53330:CD,53335:CD,53341:CD,53345:CD,53358:CD,53408:CD,53503:CD,53506:CD,53507:CD,53511:CD,53513
53330 :: CALL :: call :: V :: p0 $null .saveField(v116, v117)::CL,52923
53335 :: CALL :: call :: J :: v120 = p0 $null .computeMillis(p1 $null , p2 $null )::JM,53341:CL,53243
53341 :: NORM :: compound :: J :: return v120::DD,53244
53342 :: EXPR :: reference :: J :: v34 = p0 $null .iMillis::DD,53506
53345 :: PRED :: IF :: Z :: if (v41 >= v6) goto 161::CD,53350:CD,53356:CD,53506:CD,53507:CF,53358
53350 :: CALL :: call :: J :: v37 = v35.set(v40, p1 $null )::JM,53506:CL,57320
53356 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v41 + #(1)::DD,53507
53358 :: PRED :: IF :: Z :: if (p1 $null  == #(0)) goto 205::CF,53511:CD,53359:CD,53508:CD,53509
53359 :: PRED :: IF :: Z :: if (v49 >= v6) goto 205::CF,53511:CD,53367:CD,53373:CD,53508:CD,53509
53367 :: CALL :: call :: J :: v46 = v42.set(v48, v44)::JM,53508:CL,57320
53373 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,53509
53377 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v103 = new java.lang.StringBuilder::
53381 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v103.append(#(Cannot parse '))::
53386 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(p2 $null )::
53391 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v108.append(#(34))::
53396 :: CALL :: call :: Ljava/lang/String :: v113 = v111.toString()::
53400 :: CALL :: call :: V :: v100.prependMessage(v113)::CL,57386
53405 :: EXPR :: reference :: Ljava/lang/Integer :: v52 = p0 $null .iOffset::DD,53408
53408 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 270::CD,53412:CD,53416:CD,53417:CD,53422:CD,53513
53409 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $null .iOffset::JM,53416
53412 :: CALL :: call :: I :: v95 = v93.intValue()::JM,53416
53416 :: EXPR :: assign :: J :: v96 = CONVERT I to J v95::CF,53417
53417 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v50 - v96::DD,53513
53419 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v54 = p0 $null .iZone::DD,53422
53422 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 385::CF,53513:CD,53426:CD,53431:CD,53432:CD,53436
53426 :: CALL :: call :: I :: v57 = v55.getOffsetFromLocal(v50)::JM,53431:CL,50466:CL,50345:CL,50476
53431 :: EXPR :: assign :: J :: v58 = CONVERT I to J v57::CF,53432
53432 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v50 - v58::DD,53513
53436 :: CALL :: call :: I :: v62 = v60.getOffset(v59)::CL,22651:CL,22661:CL,22668:CL,22544
53442 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
53446 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(#(Illegal instant due t...))::
53454 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(v68)::
53459 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(#(41))::
53464 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
53469 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
53473 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(#(Cannot parse '))::
53478 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(p2 $null )::
53483 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(#(': ))::
53488 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v85.append(v75)::
53493 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
53503 :: NORM :: compound :: J :: return v98::DD,53244
53506 :: EXPR :: assign :: null :: PHI v40 = v37, v34::CF,53507:DD,53508:DD,53511
53507 :: EXPR :: assign :: null :: PHI v41 = v39, #(0)::DD,53345:DD,53356
53508 :: EXPR :: assign :: null :: PHI v48 = v46, v40::CF,53509:DD,53511
53509 :: EXPR :: assign :: null :: PHI v49 = v47, #(0)::DD,53359:DD,53373
53511 :: EXPR :: assign :: null :: PHI v50 = v40, v48::DD,53417:DD,53432:DD,53513
53513 :: EXPR :: assign :: null :: PHI v98 = v97, v50, v59::CF,53503
53716 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,int)::CE,53717:CD,53726:CD,53732
53717 :: EXIT :: exit :: J :: org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,int)::JM,47943:JM,48004:JM,48144:JM,53732
53726 :: CALL :: call :: J :: v8 = v6.add(p1 $null , p2 $null )::JM,53732:CL,47904:CL,48128:CL,48048:CL,47968:CL,47923:CL,53716:CL,38127:CL,47988:CL,48008:CL,38676:CL,38705:CL,47948
53732 :: NORM :: compound :: J :: return v8::DD,53717
53736 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)::CD,53754:CD,53759:CD,53760
53754 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(p1 $null )::JM,53759
53759 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,53760
53760 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 85::JM,17179:CD,53765:CD,53769:CD,53775:CD,53779
53765 :: CALL :: call :: V :: parsePatternTo(v11, p1 $null )::CL,57509
53769 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatter :: v15 = v11.toFormatter()::CL,17210
53775 :: CALL :: call :: I :: v18 = v16.size()::JM,53779
53779 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 85::CD,53782
53782 :: CALL :: call :: Ljava/lang/Object :: v22 = v20.putIfAbsent(p1 $null , v15)::
53815 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.requirePrinter()::CD,53823
53823 :: NORM :: declaration :: Ljava/lang/UnsupportedOperationException :: v5 = new java.lang.UnsupportedOperationException::
53835 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadableInstant)::CD,53845:CD,53849
53845 :: CALL :: call :: Lorg/joda/time/Chronology :: v8 = getInstantChronology(p2 $null )::CL,58297
53849 :: CALL :: call :: V :: p0 $null .printTo(p1 $null , v6, v8)::CL,58323
53864 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.isLeap(long)::CD,53872:CD,53880
53872 :: CALL :: call :: J :: v6 = v4.convertUTCToLocal(p1 $null )::CL,15971
53880 :: CALL :: call :: Z :: v9 = v7.isLeap(v6)::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
53891 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.isLeap(long)::CD,53900
53900 :: CALL :: call :: Z :: v7 = v5.isLeap(p1 $null )::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
53908 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(long)::CD,53916
53916 :: CALL :: call :: Z :: v6 = v4.isLeapDay(p1 $null )::CL,58412
53924 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(long)::CD,53932:CD,53940:CD,53945
53932 :: CALL :: call :: I :: v6 = v4.getYear(p1 $null )::CL,16221
53940 :: CALL :: call :: Z :: v9 = v7.isLeapYear(v6)::JM,53945:CL,24447
53945 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,53949
53949 :: CALL :: call :: I :: v13 = v11.getMonthOfYear(p1 $null , v6)::CL,24016
53976 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(long)::CD,53984
53984 :: CALL :: call :: Z :: v6 = v4.isLeapDay(p1 $null )::CL,58412
53992 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.isLeap(long)::CD,54000
54000 :: CALL :: call :: I :: v6 = p0 $null .get(p1 $null )::CL,9653
54014 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(long)::CD,54023
54023 :: CALL :: call :: Z :: v7 = v5.isLeap(p1 $null )::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
54031 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.isLeap(long)::CD,54036
54036 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v5 = p0 $null .unsupported()::CL,16323
54041 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(long)::CD,54052:CD,54057
54052 :: CALL :: call :: I :: v7 = v5.getWeekyear(p1 $null )::CL,16077
54057 :: CALL :: call :: I :: v9 = v4.getWeeksInYear(v7)::CL,30798
54079 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.isLeap(long)::CD,54087
54087 :: CALL :: call :: Z :: v6 = v4.isLeap(p1 $null )::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
54129 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.Recurrence.readFrom(java.io.DataInput)::CD,54134:CD,54138:CD,54142:JM,48257:JM,48251:JM,48254
54134 :: CALL :: call :: Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear :: v5 = readFrom(p1 $null )::CL,58509
54138 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $null .readUTF()::
54142 :: CALL :: call :: J :: v9 = readMillis(p1 $null )::CL,40175
54158 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.isLenient()::CF,54159:CD,54162
54159 :: EXIT :: exit :: Z :: org.joda.time.chrono.GJEraDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54162 :: NORM :: compound :: Z :: return #(0)::CF,54159
54164 :: ENTR :: entry :: null :: org.joda.time.field.LenientDateTimeField.isLenient()::CF,54165:CD,54168
54165 :: EXIT :: exit :: Z :: org.joda.time.field.LenientDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54168 :: NORM :: compound :: Z :: return #(1)::CF,54165
54170 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.isLenient()::CE,54171:CD,54177:CD,54181
54171 :: EXIT :: exit :: Z :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54177 :: CALL :: call :: Z :: v5 = v3.isLenient()::JM,54181:CL,54170:CL,54158:CL,54196:CL,54208:CL,54220:CL,54183:CL,54202:CL,54164:CL,54214
54181 :: NORM :: compound :: Z :: return v5::CF,54171
54183 :: ENTR :: entry :: null :: org.joda.time.field.DecoratedDateTimeField.isLenient()::CE,54184:CD,54190:CD,54194
54184 :: EXIT :: exit :: Z :: org.joda.time.field.DecoratedDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54190 :: CALL :: call :: Z :: v5 = v3.isLenient()::JM,54194:CL,54170:CL,54158:CL,54196:CL,54208:CL,54220:CL,54183:CL,54202:CL,54164:CL,54214
54194 :: NORM :: compound :: Z :: return v5::CF,54184
54196 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.isLenient()::CF,54197:CD,54200
54197 :: EXIT :: exit :: Z :: org.joda.time.chrono.BasicYearDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54200 :: NORM :: compound :: Z :: return #(0)::CF,54197
54202 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.isLenient()::CF,54203:CD,54206
54203 :: EXIT :: exit :: Z :: org.joda.time.field.PreciseDurationDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54206 :: NORM :: compound :: Z :: return #(0)::CF,54203
54208 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.isLenient()::CF,54209:CD,54212
54209 :: EXIT :: exit :: Z :: org.joda.time.field.UnsupportedDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54212 :: NORM :: compound :: Z :: return #(0)::CF,54209
54214 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLenient()::CF,54215:CD,54218
54215 :: EXIT :: exit :: Z :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54218 :: NORM :: compound :: Z :: return #(0)::CF,54215
54220 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.isLenient()::CF,54221:CD,54224
54221 :: EXIT :: exit :: Z :: org.joda.time.chrono.BasicWeekyearDateTimeField.isLenient()::JM,49074:JM,54181:JM,54194
54224 :: NORM :: compound :: Z :: return #(0)::CF,54221
54236 :: EXPR :: modify :: Lorg/joda/time/Chronology :: p0 $null .iBase = p2 $null ::
54260 :: EXPR :: modify :: J :: p0 $null .iUnitMillis = p2 $null ::
54263 :: NORM :: declaration :: Lorg/joda/time/field/ImpreciseDateTimeField$LinkedDurationField :: v6 = new org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField::DD,54273
54273 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iDurationField = v6::
54306 :: EXPR :: modify :: I :: p0 $null .iOffset = p3 $null ::
54309 :: CALL :: call :: I :: v11 = p1 $null .getMinimumValue()::JM,54313:CL,56843:CL,56830:CL,30980:CL,56856:CL,56817:CL,56871:CL,56784:CL,54460:CL,56790:CL,30962:CL,30968:CL,17106:CL,56796:CL,56811:CL,56865:CL,30974:CL,56802
54313 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v11 + p3 $null ::CF,54314
54314 :: PRED :: IF :: Z :: if (p4 $null  >= v12) goto 52::CD,54315:CD,54319
54315 :: CALL :: call :: I :: v14 = p1 $null .getMinimumValue()::JM,54319:CL,56843:CL,56830:CL,30980:CL,56856:CL,56817:CL,56871:CL,56784:CL,54460:CL,56790:CL,30962:CL,30968:CL,17106:CL,56796:CL,56811:CL,56865:CL,30974:CL,56802
54319 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 + p3 $null ::DD,54320
54320 :: EXPR :: modify :: I :: p0 $null .iMin = v15::
54324 :: EXPR :: modify :: I :: p0 $null .iMin = p4 $null ::
54327 :: CALL :: call :: I :: v17 = p1 $null .getMaximumValue()::JM,54331:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
54331 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 + p3 $null ::CF,54332
54332 :: PRED :: IF :: Z :: if (p5 $null  <= v18) goto 82::CD,54333:CD,54337
54333 :: CALL :: call :: I :: v20 = p1 $null .getMaximumValue()::JM,54337:CL,16163:CL,24305:CL,24280:CL,24365:CL,24387:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
54337 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 + p3 $null ::DD,54338
54338 :: EXPR :: modify :: I :: p0 $null .iMax = v21::
54342 :: EXPR :: modify :: I :: p0 $null .iMax = p5 $null ::
54387 :: EXPR :: modify :: Lorg/joda/time/chrono/BasicChronology :: p0 $null .iChronology = p1 $null ::
54393 :: CALL :: call :: I :: v12 = v10.getMaxMonth()::JM,54397:CL,58595
54397 :: EXPR :: modify :: I :: p0 $null .iMax = v12::
54400 :: EXPR :: modify :: I :: p0 $null .iLeapMonth = p2 $null ::
54441 :: EXPR :: modify :: I :: p0 $null .iScalar = p3 $null ::
54454 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.getMinimumValue()::CF,54455:CD,54458
54455 :: EXIT :: exit :: I :: org.joda.time.chrono.ISOYearOfEraDateTimeField.getMinimumValue()::JM,49482:JM,49483:JM,49485
54458 :: NORM :: compound :: I :: return #(0)::CF,54455
54460 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.getMinimumValue()::CE,54461:CD,54467
54461 :: EXIT :: exit :: I :: org.joda.time.field.OffsetDateTimeField.getMinimumValue()::JM,49482:JM,49483:JM,49485:JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
54464 :: EXPR :: reference :: I :: v3 = p0 $null .iMin::DD,54467
54467 :: NORM :: compound :: I :: return v3::CF,54461
54486 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)::CE,54487:CD,54490:CD,54498:CD,54499
54487 :: EXIT :: exit :: Z :: org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)::JM,49582:JM,49914
54490 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 20::CD,54491:CD,54495:CD,54496:CD,54499
54491 :: CALL :: call :: J :: v5 = p1 $null .getUnitMillis()::JM,54495:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
54495 :: EXPR :: assign :: Z :: v7 = v5 == #(43200000 l)::DD,54496
54496 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 20::CD,54499
54498 :: NORM :: compound :: Z :: return v10::CF,54487
54499 :: EXPR :: assign :: null :: PHI v10 = #(1), #(0)::CF,54498
54507 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)::CD,54513:CD,54518:CD,54523:CD,54529
54513 :: CALL :: call :: I :: v6 = p0 $null .getYear(p1 $null )::CL,16221
54518 :: CALL :: call :: I :: v8 = p0 $null .getYear(p2 $null )::CL,16221
54523 :: CALL :: call :: J :: v10 = p0 $null .getYearMillis(v6)::CL,24431
54529 :: CALL :: call :: J :: v13 = p0 $null .getYearMillis(v8)::CL,24431
54612 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)::CE,54613:CD,54617:CD,54622:CD,54623
54613 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)::JM,50097:JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
54617 :: CALL :: call :: J :: v5 = p0 $null .roundFloor(p1 $null )::JM,54622:CL,52081
54622 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $null  - v5::CF,54623
54623 :: NORM :: compound :: J :: return v6::DD,54613
54627 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getYearMonthMillis(int,int)::CE,54628:CD,54633:CD,54638:CD,54644:CD,54645
54628 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicChronology.getYearMonthMillis(int,int)::JM,52044
54633 :: CALL :: call :: J :: v6 = p0 $null .getYearMillis(p1 $null )::JM,54644:CL,24431
54638 :: CALL :: call :: J :: v8 = p0 $null .getTotalMillisByYearMonth(p1 $null , p2 $null )::JM,54644:CL,32076
54644 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 + v8::DD,54645
54645 :: NORM :: compound :: J :: return v9::DD,54628
54655 :: ENTR :: entry :: null :: org.joda.time.tz.ZoneInfoProvider.uncaughtException(java.lang.Exception)::CD,54660
54660 :: CALL :: call :: V :: p1 $null .printStackTrace()::
54694 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.doParseMillis(org.joda.time.format.InternalParser,java.lang.CharSequence)::CE,54695:CD,54700:CD,54713:CD,54719:CD,54726
54695 :: EXIT :: exit :: J :: org.joda.time.format.DateTimeParserBucket.doParseMillis(org.joda.time.format.InternalParser,java.lang.CharSequence)::JM,50609
54700 :: CALL :: call :: I :: v7 = p1 $null .parseInto(p0 $null , p2 $null , #(0))::CL,44732:CL,45469:CL,45737:CL,45922:CL,47002:CL,46270:CL,45763:CL,45371:CL,45681:CL,45221:CL,45541:CL,46727:CL,45645:CL,45447
54713 :: CALL :: call :: J :: v21 = p0 $null .computeMillis(#(1), p2 $null )::JM,54719:CL,53243
54719 :: NORM :: compound :: J :: return v21::DD,54695
54726 :: CALL :: call :: Ljava/lang/String :: v17 = createErrorMessage(v15, v12)::CL,58806
54749 :: ENTR :: entry :: null :: org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)::CD,54755:JM,54761:JM,54762:JM,54858:JM,54860:JM,54861:JM,54862:CD,54859
54755 :: PRED :: IF :: Z :: if (p2 $null  >= #(0)) goto 59::CF,54859:CD,54756:CD,54761:CD,54778:CD,54858:CD,54860:JM,54755:JM,54762:JM,54861:JM,54862
54756 :: CALL :: call :: Ljava/lang/Appendable :: v8 = p1 $null .append(#(45))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54761 :: PRED :: IF :: Z :: if (p2 $null  == #(-2147483648)) goto 28::CF,54858:CD,54762:CD,54764:CD,54772:CD,54778:CD,54859:CD,54860
54762 :: EXPR :: assign :: Ljava/lang/Object :: v20 = -(p2 $null )::DD,54859
54764 :: PRED :: IF :: Z :: if (v16 <= #(10)) goto 49::CD,54765:CD,54770:CD,54858:JM,54755:JM,54761:JM,54762:JM,54859:JM,54860:JM,54861:JM,54862
54765 :: CALL :: call :: Ljava/lang/Appendable :: v13 = p1 $null .append(#(48))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54770 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(-1)::DD,54858
54772 :: CALL :: call :: Ljava/lang/Appendable :: v19 = p1 $null .append(#(2147483648))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54778 :: PRED :: IF :: Z :: if (v21 >= #(10)) goto 100::CF,54860:CD,54779:CD,54787:CD,54788:CD,54789:CD,54795:CD,54861
54779 :: PRED :: IF :: Z :: if (v69 <= #(1)) goto 86::CD,54780:CD,54785:CD,54860:JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54861:JM,54862:CF,54787
54780 :: CALL :: call :: Ljava/lang/Appendable :: v67 = p1 $null .append(#(48))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54785 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v69 + #(-1)::DD,54860
54787 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v21 + #(48)::CF,54788
54788 :: EXPR :: assign :: C :: v71 = CONVERT I to C v70::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54789 :: CALL :: call :: Ljava/lang/Appendable :: v73 = p1 $null .append(v71)::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54795 :: PRED :: IF :: Z :: if (v21 >= #(100)) goto 172::CF,54861:CD,54796:CD,54804:CD,54805:CD,54806:CD,54807:CD,54808:CD,54809:CD,54814:CD,54815:CD,54816:CD,54817:CD,54818:CD,54819:CD,54820:CD,54826:CD,54840:CD,54848:CD,54852:CD,54862:CD,54863
54796 :: PRED :: IF :: Z :: if (v48 <= #(2)) goto 125::CD,54797:CD,54802:CD,54861:JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54862:CF,54804
54797 :: CALL :: call :: Ljava/lang/Appendable :: v46 = p1 $null .append(#(48))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54802 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v48 + #(-1)::DD,54861
54804 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v21 + #(1)::DD,54805
54805 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 * #(13421772)::DD,54806
54806 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v51 ? #(27)::DD,54807:DD,54814:DD,54816
54807 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v53 + #(48)::CF,54808
54808 :: EXPR :: assign :: C :: v55 = CONVERT I to C v54::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54809 :: CALL :: call :: Ljava/lang/Appendable :: v57 = p1 $null .append(v55)::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54814 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v53 ? #(3)::CF,54815
54815 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v21 - v58::DD,54817:CF,54816
54816 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v53 ? #(1)::CF,54817
54817 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v59 - v60::DD,54818
54818 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v61 + #(48)::CF,54819
54819 :: EXPR :: assign :: C :: v63 = CONVERT I to C v62::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54820 :: CALL :: call :: Ljava/lang/Appendable :: v65 = p1 $null .append(v63)::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54826 :: PRED :: IF :: Z :: if (v21 >= #(1000)) goto 184::CD,54828:CD,54862:CD,54863
54828 :: PRED :: IF :: Z :: if (v21 >= #(10000)) goto 193::CD,54830:CD,54831:CD,54835:CD,54837:CD,54838:CD,54839:CD,54862:CD,54863
54830 :: EXPR :: assign :: D :: v25 = CONVERT I to D v21::JM,54837:JM,54831
54831 :: CALL :: call :: D :: v27 = log(v25)::JM,54837:JM,54831
54835 :: EXPR :: reference :: D :: v28 = org.joda.time.format.FormatUtils.LOG_10::CF,54837
54837 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 / v28::CF,54838
54838 :: EXPR :: assign :: I :: v30 = CONVERT D to I v29::DD,54839
54839 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v30 + #(1)::DD,54863:CF,54862
54840 :: PRED :: IF :: Z :: if (v39 <= v35) goto 227::CD,54841:CD,54846:CD,54862:CD,54863:JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861
54841 :: CALL :: call :: Ljava/lang/Appendable :: v37 = p1 $null .append(#(48))::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54846 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v39 + #(-1)::DD,54862
54848 :: CALL :: call :: Ljava/lang/String :: v41 = toString(v21)::
54852 :: CALL :: call :: Ljava/lang/Appendable :: v43 = p1 $null .append(v41)::JM,54755:JM,54761:JM,54762:JM,54858:JM,54859:JM,54860:JM,54861:JM,54862
54858 :: EXPR :: assign :: null :: PHI v16 = p3 $null , v15::DD,54764:DD,54770
54859 :: EXPR :: assign :: null :: PHI v21 = p2 $null , v20::DD,54778:DD,54787:DD,54795:DD,54804:DD,54815:DD,54826:DD,54828:DD,54830
54860 :: EXPR :: assign :: null :: PHI v69 = v68, p3 $null ::DD,54779:DD,54785
54861 :: EXPR :: assign :: null :: PHI v48 = v47, p3 $null ::DD,54796:DD,54802
54862 :: EXPR :: assign :: null :: PHI v39 = p3 $null , p3 $null , v38, p3 $null ::CF,54863:DD,54840:DD,54846
54863 :: EXPR :: assign :: null :: PHI v35 = #(3), #(4), v35, v32::DD,54840:DD,54863
55122 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,55123:CD,55126:JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55123 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,55126
55126 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,55127:JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55127 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
55131 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55136 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,55395
55137 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,55396:CD,55138:CD,55139:CD,55144
55138 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55139 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55144 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,55136:CD,55137:CD,55395:CD,55396
55146 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,55396
55147 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,55148:CD,55153:JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55148 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55153 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,55146:CD,55147:CD,55396:JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55154 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55163 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,55397:CD,55164
55164 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,55397
55165 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55169 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,55398:CD,55170:CD,55175:JM,55169:JM,55395:JM,55204:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55170 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55175 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,55398
55177 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,55178:CD,55184:CD,55188:CD,55193:CD,55196:CD,55197:CD,55399:CD,55400:CD,55401:JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55163
55178 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55184 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,55401:JM,55193
55188 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55208:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163:JM,55401
55193 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,55400:CD,55194:CD,55401
55194 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,55400
55196 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,55399
55197 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,55400:CD,55198:CD,55401
55198 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,55400:CD,55199:CD,55204:CD,55401:JM,55169:JM,55395:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55199 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55204 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,55400:CD,55177
55208 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,55404:CD,55209
55209 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,55213:CD,55218:CD,55219:CD,55226:CD,55236:CD,55402:CD,55403:CD,55404
55210 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,55218
55213 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,55218
55218 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,55404:CD,55219:CD,55226:CD,55236:CD,55402:CD,55403
55219 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,55402
55220 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,55402
55223 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,55226
55226 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,55403:CD,55230:CD,55235
55227 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,55235:JM,55230
55230 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,55235:JM,55230
55235 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,55403
55236 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,55404
55284 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
55289 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55294 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,55344:JM,55345
55303 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,55307
55307 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
55313 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
55318 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
55321 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
55326 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
55338 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55344 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,55345:CD,55346
55345 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,55344:JM,55153:JM,55169:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55193:JM,55177:JM,55163:JM,55402:JM,55404:JM,55122:JM,55219
55346 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,55169:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55402:JM,55404:JM,55344:JM,55153:JM,55345:JM,55122:JM,55219:JM,55193:JM,55163
55395 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,55136:DD,55137:DD,55138:DD,55147:DD,55198:JM,55344:JM,55153:JM,55169:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55163
55396 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,55146:DD,55147:JM,55344:JM,55153:JM,55169:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55193:JM,55177:JM,55163:DD,55164:DD,55397
55397 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,55169:JM,55344:JM,55153:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55193:JM,55177:JM,55163:DD,55399:DD,55400:JM,55402:JM,55404:JM,55122:JM,55219
55398 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,55197
55399 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,55344:JM,55153:JM,55169:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55163:DD,55194:DD,55196:DD,55198:JM,55193:CF,55197
55400 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,55401:JM,55344:JM,55153:JM,55169:JM,55345:JM,55395:JM,55204:JM,55175:JM,55144:JM,55177:JM,55163
55401 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,55209:JM,55218:DD,55403
55402 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,55404
55403 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,55236
55404 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,55303
55663 :: CALL :: call :: Ljava/text/DateFormatSymbols :: v6 = getDateFormatSymbols(p1 $null )::CL,59427
55678 :: CALL :: call :: [Ljava/lang/String :: v12 = realignDaysOfWeek(v10)::CL,59475
55689 :: CALL :: call :: [Ljava/lang/String :: v16 = realignDaysOfWeek(v14)::CL,59475
55700 :: CALL :: call :: [Ljava/lang/String :: v20 = realignMonths(v18)::CL,59514
55711 :: CALL :: call :: [Ljava/lang/String :: v24 = realignMonths(v22)::CL,59514
55829 :: CALL :: call :: V :: addNumerals(v65, #(1), #(7), v28)::CL,59590
55870 :: CALL :: call :: V :: addNumerals(v77, #(1), #(12), v28)::CL,59590
56029 :: CALL :: call :: Ljava/lang/String :: v8 = createMessage(v6, p2 $null )::CL,59673
56090 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(java.lang.String)::JM,56029
56126 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(java.lang.String)::JM,56029
56314 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(long)::CE,56315:CD,56323:CD,56328
56315 :: EXIT :: exit :: J :: org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(long)::JM,51935:JM,52140:JM,52203:JM,52235:JM,52317:JM,56328:JM,63238
56323 :: CALL :: call :: J :: v7 = v5.roundFloor(p1 $null )::JM,56328:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,56314:CL,52189:CL,52013:CL,52172
56328 :: NORM :: compound :: J :: return v7::DD,56315
56369 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.obtainSaveField()::CD,56379:CD,56380:CD,56411:CD,56426
56373 :: EXPR :: reference :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v3 = p0 $null .iSavedFields::DD,56379:DD,56385:DD,56389:DD,56426
56376 :: EXPR :: reference :: I :: v4 = p0 $null .iSavedFieldsCount::DD,56380:DD,56386:DD,56387
56379 :: EXPR :: assign :: I :: v5 = v3.length::CF,56380
56380 :: PRED :: IF :: Z :: if (v4 == v5) goto 25::CD,56384:CD,56385:CD,56386:CD,56390:CD,56425:CD,56426
56381 :: EXPR :: reference :: Z :: v6 = p0 $null .iSavedFieldsShared::DD,56384
56384 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 63::CF,56426:CD,56385:CD,56386:CD,56390:CD,56425
56385 :: EXPR :: assign :: I :: v8 = v3.length::CF,56386
56386 :: PRED :: IF :: Z :: if (v4 != v8) goto 36::CD,56387:CD,56389:CD,56425
56387 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v4 * #(2)::DD,56425
56389 :: EXPR :: assign :: I :: v9 = v3.length::CF,56425
56390 :: NORM :: declaration :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v13 = new org.joda.time.format.DateTimeParserBucket$SavedField[]::DD,56426
56407 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v15[v4]::DD,56411
56411 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 89::CD,56412
56412 :: NORM :: declaration :: Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v18 = new org.joda.time.format.DateTimeParserBucket$SavedField::DD,56416
56416 :: EXPR :: modify :: Ljava/lang/Object :: v15[v4] = v18::
56425 :: EXPR :: assign :: null :: PHI v12 = v11, v9::CF,56390
56426 :: EXPR :: assign :: null :: PHI v15 = v3, v13::
56494 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.buildDefaultTimeZoneNames()::CE,56495:CD,56497:CD,56503:CD,56511:CD,56519:CD,56525:CD,56530:CD,56535:CD,56540:CD,56545:CD,56550:CD,56555:CD,56560:CD,56565:CD,56569
56495 :: EXIT :: exit :: Ljava/util/Map :: org.joda.time.DateTimeUtils.buildDefaultTimeZoneNames()::JM,52752:JM,52758:JM,52767
56497 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v2 = new java.util.LinkedHashMap::JM,56565:JM,56569
56503 :: CALL :: call :: Ljava/lang/Object :: v7 = v2.put(#(UT), v5)::
56511 :: CALL :: call :: Ljava/lang/Object :: v11 = v2.put(#(UTC), v9)::
56519 :: CALL :: call :: Ljava/lang/Object :: v15 = v2.put(#(GMT), v13)::
56525 :: CALL :: call :: V :: put(v2, #(EST), #(America/New_York))::CL,59877
56530 :: CALL :: call :: V :: put(v2, #(EDT), #(America/New_York))::CL,59877
56535 :: CALL :: call :: V :: put(v2, #(CST), #(America/Chicago))::CL,59877
56540 :: CALL :: call :: V :: put(v2, #(CDT), #(America/Chicago))::CL,59877
56545 :: CALL :: call :: V :: put(v2, #(MST), #(America/Denver))::CL,59877
56550 :: CALL :: call :: V :: put(v2, #(MDT), #(America/Denver))::CL,59877
56555 :: CALL :: call :: V :: put(v2, #(PST), #(America/Los_Angeles))::CL,59877
56560 :: CALL :: call :: V :: put(v2, #(PDT), #(America/Los_Angeles))::CL,59877
56565 :: CALL :: call :: Ljava/util/Map :: v37 = unmodifiableMap(v2)::JM,56565:JM,56569
56569 :: NORM :: compound :: Ljava/util/Map :: return v37::DD,56495
56612 :: EXPR :: modify :: Lorg/joda/time/format/DateTimeParserBucket :: p0 $null .this$0 = p1 $null ::
56618 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = access$000(p1 $null )::JM,56622:CL,59900
56622 :: EXPR :: modify :: Lorg/joda/time/DateTimeZone :: p0 $null .iZone = v6::
56625 :: CALL :: call :: Ljava/lang/Integer :: v8 = access$100(p1 $null )::JM,56629:CL,59909
56629 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $null .iOffset = v8::
56632 :: CALL :: call :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v10 = access$200(p1 $null )::JM,56636:CL,59918
56636 :: EXPR :: modify :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: p0 $null .iSavedFields = v10::
56639 :: CALL :: call :: I :: v12 = access$300(p1 $null )::JM,56643:CL,59927
56643 :: EXPR :: modify :: I :: p0 $null .iSavedFieldsCount = v12::
56741 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v6 = getInstance(p2 $null )::CL,42149
56784 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue()::CF,56785:CD,56788
56785 :: EXIT :: exit :: I :: org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56788 :: NORM :: compound :: I :: return #(1)::CF,56785
56790 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.getMinimumValue()::CF,56791:CD,56794
56791 :: EXIT :: exit :: I :: org.joda.time.chrono.GJYearOfEraDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56794 :: NORM :: compound :: I :: return #(1)::CF,56791
56796 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMinimumValue()::CF,56797:CD,56800
56797 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56800 :: NORM :: compound :: I :: return #(1)::CF,56797
56802 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getMinimumValue()::CE,56803:CD,56806
56803 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56806 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v4 = p0 $null .unsupported()::CL,16323
56811 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.getMinimumValue()::CF,56812:CD,56815
56812 :: EXIT :: exit :: I :: org.joda.time.field.RemainderDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56815 :: NORM :: compound :: I :: return #(0)::CF,56812
56817 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getMinimumValue()::CE,56818:CD,56824:CD,56828
56818 :: EXIT :: exit :: I :: org.joda.time.field.DelegatedDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56824 :: CALL :: call :: I :: v5 = v3.getMinimumValue()::JM,56828:CL,56843:CL,56830:CL,30980:CL,56856:CL,56817:CL,56871:CL,56784:CL,54460:CL,56790:CL,30962:CL,30968:CL,17106:CL,56796:CL,56811:CL,56865:CL,30974:CL,56802
56828 :: NORM :: compound :: I :: return v5::DD,56818
56830 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue()::CE,56831:CD,56837:CD,56841
56831 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56837 :: CALL :: call :: I :: v5 = v3.getMinYear()::JM,56841:CL,29654
56841 :: NORM :: compound :: I :: return v5::CF,56831
56843 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMinimumValue()::CE,56844:CD,56850:CD,56854
56844 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56850 :: CALL :: call :: I :: v5 = v3.getMinimumValue()::JM,56854:CL,56843:CL,56830:CL,30980:CL,56856:CL,56817:CL,56871:CL,56784:CL,54460:CL,56790:CL,30962:CL,30968:CL,17106:CL,56796:CL,56811:CL,56865:CL,30974:CL,56802
56854 :: NORM :: compound :: I :: return v5::DD,56844
56856 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.getMinimumValue()::CE,56857:CD,56863
56857 :: EXIT :: exit :: I :: org.joda.time.field.DividedDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56860 :: EXPR :: reference :: I :: v3 = p0 $null .iMin::DD,56863
56863 :: NORM :: compound :: I :: return v3::CF,56857
56865 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.getMinimumValue()::CF,56866:CD,56869
56866 :: EXIT :: exit :: I :: org.joda.time.chrono.GJEraDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56869 :: NORM :: compound :: I :: return #(0)::CF,56866
56871 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue()::CE,56872:CD,56878:CD,56882
56872 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue()::JM,53068:JM,54313:JM,54319:JM,56828:JM,56854
56878 :: CALL :: call :: I :: v5 = v3.getMinYear()::JM,56882:CL,29654
56882 :: NORM :: compound :: I :: return v5::CF,56872
56884 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getMaximumTextLength(java.util.Locale)::CE,56885:CD,56889:CD,56893
56885 :: EXIT :: exit :: I :: org.joda.time.field.BaseDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56889 :: CALL :: call :: I :: v5 = p0 $null .getMaximumValue()::JM,56896:JM,56898:JM,56908:JM,56893:JM,56894:CL,16163:CL,24305:CL,24280:CL,24299:CL,24244:CL,24341:CL,24238:CL,24253:CL,24227:CL,24293:CL,24354:CL,24378:CL,24332:CL,24214:CL,24266
56893 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 35::CD,56894:CD,56900:CD,56904:CD,56908
56894 :: PRED :: IF :: Z :: if (v5 >= #(10)) goto 20::CD,56895:CD,56896
56895 :: NORM :: compound :: I :: return #(1)::DD,56885
56896 :: PRED :: IF :: Z :: if (v5 >= #(100)) goto 29::CD,56897:CD,56898
56897 :: NORM :: compound :: I :: return #(2)::DD,56885
56898 :: PRED :: IF :: Z :: if (v5 >= #(1000)) goto 35::CD,56899:CD,56900:CD,56904:CD,56908
56899 :: NORM :: compound :: I :: return #(3)::DD,56885
56900 :: CALL :: call :: Ljava/lang/String :: v11 = toString(v5)::JM,56908
56904 :: CALL :: call :: I :: v13 = v11.length()::JM,56908
56908 :: NORM :: compound :: I :: return v13::DD,56885
56923 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.HalfdayField.getMaximumTextLength(java.util.Locale)::CE,56924:CD,56928:CD,56932:CD,56936
56924 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.HalfdayField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56928 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v5 = forLocale(p1 $null )::CL,51547
56932 :: CALL :: call :: I :: v7 = v5.getHalfdayMaxTextLength()::JM,56936:CL,60005
56936 :: NORM :: compound :: I :: return v7::DD,56924
56938 :: ENTR :: entry :: null :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(java.util.Locale)::CE,56939:CD,56943:CD,56947:CD,56951
56939 :: EXIT :: exit :: I :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56943 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v5 = forLocale(p1 $null )::CL,51547
56947 :: CALL :: call :: I :: v7 = v5.getMonthMaxTextLength()::JM,56951:CL,60014
56951 :: NORM :: compound :: I :: return v7::DD,56939
56953 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(java.util.Locale)::CE,56954:CD,56958:CD,56962:CD,56966
56954 :: EXIT :: exit :: I :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56958 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v5 = forLocale(p1 $null )::CL,51547
56962 :: CALL :: call :: I :: v7 = v5.getDayOfWeekMaxTextLength()::JM,56966:CL,60023
56966 :: NORM :: compound :: I :: return v7::DD,56954
56968 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(java.util.Locale)::CE,56969:CD,56973:CD,56977:CD,56981
56969 :: EXIT :: exit :: I :: org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56973 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v5 = forLocale(p1 $null )::CL,51547
56977 :: CALL :: call :: I :: v7 = v5.getEraMaxTextLength()::JM,56981:CL,60032
56981 :: NORM :: compound :: I :: return v7::DD,56969
56983 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(java.util.Locale)::CE,56984:CD,56991:CD,56996
56984 :: EXIT :: exit :: I :: org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
56991 :: CALL :: call :: I :: v6 = v4.getMaximumTextLength(p1 $null )::JM,56996:CL,57015:CL,56884:CL,56983:CL,56968:CL,56999:CL,56938:CL,56953:CL,56923
56996 :: NORM :: compound :: I :: return v6::DD,56984
56999 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMaximumTextLength(java.util.Locale)::CE,57000:CD,57007:CD,57012
57000 :: EXIT :: exit :: I :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
57007 :: CALL :: call :: I :: v6 = v4.getMaximumTextLength(p1 $null )::JM,57012:CL,57015:CL,56884:CL,56983:CL,56968:CL,56999:CL,56938:CL,56953:CL,56923
57012 :: NORM :: compound :: I :: return v6::DD,57000
57015 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(java.util.Locale)::CE,57016:CD,57020
57016 :: EXIT :: exit :: I :: org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(java.util.Locale)::JM,53098:JM,56996:JM,57012
57020 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v5 = p0 $null .unsupported()::CL,16323
57038 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getAsShortText(long,java.util.Locale)::CE,57039:CD,57044:CD,57049:CD,57055
57039 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.BaseDateTimeField.getAsShortText(long,java.util.Locale)::JM,53158:JM,57094:JM,57116:JM,62726
57044 :: CALL :: call :: I :: v6 = p0 $null .get(p1 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9653:CL,9417:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9744
57049 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .getAsShortText(v6, p2 $null )::JM,57055:CL,60057:CL,60076:CL,60041:CL,60094
57055 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,57039
57060 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long,java.util.Locale)::CE,57061:CD,57066
57061 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long,java.util.Locale)::JM,53158:JM,57094:JM,57116:JM,62726
57066 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,16323
57071 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsShortText(long,java.util.Locale)::CE,57072:CD,57080:CD,57088:CD,57094
57072 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsShortText(long,java.util.Locale)::JM,53158:JM,57094:JM,57116:JM,62726
57080 :: CALL :: call :: J :: v7 = v5.convertUTCToLocal(p1 $null )::CL,15971
57088 :: CALL :: call :: Ljava/lang/String :: v10 = v8.getAsShortText(v7, p2 $null )::JM,57094:CL,57101:CL,57060:CL,57071:CL,57038
57094 :: NORM :: compound :: Ljava/lang/String :: return v10::DD,57072
57101 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getAsShortText(long,java.util.Locale)::CE,57102:CD,57110:CD,57116
57102 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.DelegatedDateTimeField.getAsShortText(long,java.util.Locale)::JM,53158:JM,57094:JM,57116:JM,62726
57110 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsShortText(p1 $null , p2 $null )::JM,57116:CL,57101:CL,57060:CL,57071:CL,57038
57116 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,57102
57120 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getAsText(long,java.util.Locale)::CE,57121:CD,57129:CD,57135
57121 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.DelegatedDateTimeField.getAsText(long,java.util.Locale)::JM,53181:JM,57135:JM,57184:JM,62733
57129 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsText(p1 $null , p2 $null )::JM,57135:CL,57139:CL,57161:CL,57191:CL,57120
57135 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,57121
57139 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getAsText(long,java.util.Locale)::CE,57140:CD,57145:CD,57150:CD,57156
57140 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.BaseDateTimeField.getAsText(long,java.util.Locale)::JM,53181:JM,57135:JM,57184:JM,62733
57145 :: CALL :: call :: I :: v6 = p0 $null .get(p1 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9653:CL,9417:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9744
57150 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $null .getAsText(v6, p2 $null )::JM,57156:CL,60197:CL,60185:CL,60149:CL,60112:CL,60131:CL,60167
57156 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,57140
57161 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsText(long,java.util.Locale)::CE,57162:CD,57170:CD,57178:CD,57184
57162 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsText(long,java.util.Locale)::JM,53181:JM,57135:JM,57184:JM,62733
57170 :: CALL :: call :: J :: v7 = v5.convertUTCToLocal(p1 $null )::CL,15971
57178 :: CALL :: call :: Ljava/lang/String :: v10 = v8.getAsText(v7, p2 $null )::JM,57184:CL,57139:CL,57161:CL,57191:CL,57120
57184 :: NORM :: compound :: Ljava/lang/String :: return v10::DD,57162
57191 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getAsText(long,java.util.Locale)::CE,57192:CD,57197
57192 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.UnsupportedDateTimeField.getAsText(long,java.util.Locale)::JM,53181:JM,57135:JM,57184:JM,62733
57197 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,16323
57230 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int)::CD,57235:JM,57242
57235 :: PRED :: IF :: Z :: if (p2 $null  <= #(10)) goto 19::CD,57236:CD,57242:CD,57282
57236 :: CALL :: call :: V :: sort(p1 $null , #(0), p2 $null )::
57242 :: PRED :: IF :: Z :: if (v20 >= p2 $null ) goto 74::CD,57243:CD,57279:CD,57282:CD,57283:CD,57284
57243 :: PRED :: IF :: Z :: if (v18 <= #(0)) goto 68::CD,57253:CD,57258:CF,57279
57253 :: CALL :: call :: I :: v11 = v8.compareTo(v9)::JM,57258:CL,44101
57258 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 68::CD,57243:CD,57263:CD,57272:CD,57277:CD,57283:CD,57284:CF,57279
57259 :: EXPR :: reference :: Ljava/lang/Object :: v12 = p1 $null [v18]::DD,57273
57263 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v18 - #(1)::
57264 :: EXPR :: reference :: Ljava/lang/Object :: v14 = p1 $null [v13]::DD,57268
57268 :: EXPR :: modify :: Ljava/lang/Object :: p1 $null [v18] = v14::
57272 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 - #(1)::
57273 :: EXPR :: modify :: Ljava/lang/Object :: p1 $null [v15] = v12::
57277 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(-1)::DD,57284
57279 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,57282
57282 :: EXPR :: assign :: null :: PHI v20 = v19, #(0)::DD,57242:DD,57283:DD,57284
57283 :: EXPR :: assign :: null :: PHI v21 = v21, v20::CF,57284:DD,57279:DD,57283
57284 :: EXPR :: assign :: null :: PHI v18 = v17, v20::DD,57243:DD,57263:DD,57272:DD,57277
57320 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.SavedField.set(long,boolean)::CE,57321:CD,57329:CD,57359:CD,57368:CD,57369:CD,57370
57321 :: EXIT :: exit :: J :: org.joda.time.format.DateTimeParserBucket.SavedField.set(long,boolean)::JM,53506:JM,53508
57326 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $null .iText::DD,57329
57329 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 24::CD,57336:CD,57352:CD,57369
57336 :: CALL :: call :: J :: v15 = v12.setExtended(p1 $null , v13)::JM,57369:CL,60254:CL,60270
57352 :: CALL :: call :: J :: v11 = v7.set(p1 $null , v8, v9)::JM,57369:CL,44293:CL,44354:CL,44266:CL,44342:CL,44381:CL,44320
57359 :: PRED :: IF :: Z :: if (p2 $null  == #(0)) goto 54::CF,57370:CD,57363
57363 :: CALL :: call :: J :: v20 = v18.roundFloor(v16)::JM,57370:CL,52266:CL,52244:CL,52206:CL,52055:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,52071:CL,52126:CL,52189:CL,52013:CL,52172
57368 :: NORM :: compound :: J :: return v21::DD,57321
57369 :: EXPR :: assign :: null :: PHI v16 = v15, v11::DD,57370:CF,57359
57370 :: EXPR :: assign :: null :: PHI v21 = v16, v20::CF,57368
57386 :: ENTR :: entry :: null :: org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)::CD,57394:JM,57399
57391 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $null .iMessage::DD,57394
57394 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 16::CD,57399
57399 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 49::CD,57400:CD,57404:CD,57409:CD,57417:CD,57422
57400 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
57404 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v6.append(p1 $null )::
57409 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#(: ))::
57414 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $null .iMessage::
57417 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(v13)::
57422 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
57509 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)::CD,57514:CD,57518:CD,57519:CD,57846:CD,57850:CD,57855:CD,57860:CD,57872:JM,57622:JM,57559
57514 :: CALL :: call :: I :: v5 = p2 $null .length()::JM,57622:JM,57559:JM,57519
57518 :: NORM :: declaration :: [I :: v7 = new []::CF,57872
57519 :: PRED :: IF :: Z :: if (v126 >= v5) goto 1005::CD,57524:CD,57533:CD,57537
57520 :: EXPR :: modify :: I :: v7[#(0)] = v126::
57524 :: CALL :: call :: Ljava/lang/String :: v10 = parseToken(p2 $null , v7)::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822:CL,60317
57529 :: EXPR :: reference :: I :: v11 = v7[#(0)]::DD,57558:DD,57621:DD,57869
57533 :: CALL :: call :: I :: v13 = v10.length()::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
57537 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 53::CD,57519:CD,57539:CD,57544:CD,57869:CD,57872:JM,57537:JM,57797:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
57539 :: CALL :: call :: C :: v15 = v10.charAt(#(0))::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
57544 :: PRED :: IF :: null :: switch v15::CD,57545:CD,57550:CD,57557:CD,57673:CD,57691:CD,57697:CD,57702:CD,57708:CD,57714:CD,57720:CD,57726:CD,57732:CD,57738:CD,57745:CD,57751:CD,57762:CD,57768:CD,57774:CD,57786:CD,57813:CD,57818:CD,57822:JM,57537:JM,57797:JM,57544:JM,57674:JM,57834:JM,57651:JM,57588
57545 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v17 = p1 $null .appendEraText()::CL,60509
57550 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v19 = p1 $null .appendCenturyOfEra(v13, v13)::CL,60523
57557 :: PRED :: IF :: Z :: if (v13 != #(2)) goto 565::CD,57558:CD,57559:CD,57588:CD,57621:CD,57622:CD,57651
57558 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v11 + #(1)::DD,57559
57559 :: PRED :: IF :: Z :: if (v21 >= v5) goto 479::CD,57569:CD,57574
57569 :: CALL :: call :: Ljava/lang/String :: v25 = parseToken(p2 $null , v7)::CL,60317
57574 :: CALL :: call :: Z :: v27 = isNumericToken(v25)::CL,60543
57588 :: PRED :: IF :: null :: switch v15::JM,31529:JM,31549:JM,62206:CD,57593:CD,57598:CD,57609:CD,57614
57593 :: CALL :: call :: I :: v35 = v32.getWeekyear()::CL,60584
57598 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v39 = p1 $null .appendTwoDigitWeekyear(v37, v31)::CL,60608
57609 :: CALL :: call :: I :: v43 = v40.getYear()::CL,60634
57614 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v46 = p1 $null .appendTwoDigitYear(v44, v31)::CL,60658
57621 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v11 + #(1)::DD,57622
57622 :: PRED :: IF :: Z :: if (v48 >= v5) goto 601::CD,57632:CD,57637
57632 :: CALL :: call :: Ljava/lang/String :: v52 = parseToken(p2 $null , v7)::CL,60317
57637 :: CALL :: call :: Z :: v54 = isNumericToken(v52)::CL,60543
57651 :: PRED :: IF :: null :: switch v15::CD,57652:CD,57659:CD,57666
57652 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v60 = p1 $null .appendWeekyear(v13, v58)::CL,17327
57659 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v62 = p1 $null .appendYear(v13, v58)::CL,17190
57666 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v64 = p1 $null .appendYearOfEra(v13, v58)::CL,60684
57673 :: PRED :: IF :: Z :: if (v13 < #(3)) goto 703::CD,57674:CD,57685
57674 :: PRED :: IF :: Z :: if (v13 < #(4)) goto 693::CD,57675:CD,57680
57675 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v68 = p1 $null .appendMonthOfYearText()::CL,60704
57680 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v70 = p1 $null .appendMonthOfYearShortText()::CL,60718
57685 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v72 = p1 $null .appendMonthOfYear(v13)::CL,17289
57691 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v74 = p1 $null .appendDayOfMonth(v13)::CL,17308
57697 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v76 = p1 $null .appendHalfdayOfDayText()::CL,60732
57702 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v78 = p1 $null .appendClockhourOfHalfday(v13)::CL,60746
57708 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v80 = p1 $null .appendHourOfDay(v13)::CL,17460
57714 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v82 = p1 $null .appendClockhourOfDay(v13)::CL,60765
57720 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v84 = p1 $null .appendHourOfHalfday(v13)::CL,60784
57726 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v86 = p1 $null .appendMinuteOfHour(v13)::CL,17479
57732 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v88 = p1 $null .appendSecondOfMinute(v13)::CL,17498
57738 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v90 = p1 $null .appendFractionOfSecond(v13, v13)::CL,17517
57745 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v92 = p1 $null .appendDayOfWeek(v13)::CL,17422
57751 :: PRED :: IF :: Z :: if (v13 < #(4)) goto 825::CD,57752:CD,57757
57752 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v94 = p1 $null .appendDayOfWeekText()::CL,60803
57757 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v96 = p1 $null .appendDayOfWeekShortText()::CL,60817
57762 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v98 = p1 $null .appendDayOfYear(v13)::CL,17441
57768 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v100 = p1 $null .appendWeekOfWeekyear(v13)::CL,17403
57774 :: PRED :: IF :: Z :: if (v13 < #(4)) goto 868::CD,57775:CD,57780
57775 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v102 = p1 $null .appendTimeZoneName()::CL,60831
57780 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v105 = p1 $null .appendTimeZoneShortName(#(null))::CL,60853
57786 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 898::CD,57787:CD,57797
57787 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v108 = p1 $null .appendTimeZoneOffset(#(null), #(Z), #(0), #(2), #(2))::CL,60878
57797 :: PRED :: IF :: Z :: if (v13 != #(2)) goto 916::CD,57798:CD,57808
57798 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v110 = p1 $null .appendTimeZoneOffset(#(null), #(Z), #(1), #(2), #(2))::CL,60878
57808 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v112 = p1 $null .appendTimeZoneId()::CL,60909
57813 :: CALL :: call :: Ljava/lang/String :: v114 = v10.substring(#(1))::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
57818 :: CALL :: call :: I :: v116 = v114.length()::JM,57834:JM,57822
57822 :: PRED :: IF :: Z :: if (v116 != #(1)) goto 955::CD,57823:CD,57828:CD,57834:CD,57839:JM,57822
57823 :: CALL :: call :: C :: v118 = v114.charAt(#(0))::JM,57834:JM,57822
57828 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v120 = p1 $null .appendLiteral(v118)::CL,17270
57834 :: NORM :: declaration :: Ljava/lang/String :: v121 = new java.lang.String::JM,57834
57839 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v124 = p1 $null .appendLiteral(v121)::CL,17347
57846 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v128 = new java.lang.StringBuilder::
57850 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v128.append(#(Illegal pattern compo...))::
57855 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v132.append(v10)::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
57860 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::JM,57834:JM,57822
57869 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v11 + #(1)::DD,57872
57872 :: EXPR :: assign :: null :: PHI v126 = v125, #(0)::DD,57519:DD,57520
58297 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.getInstantChronology(org.joda.time.ReadableInstant)::CD,58301
58301 :: PRED :: IF :: Z :: if (p1 $null  != #(null)) goto 9::CD,58302:CD,58306:CD,58310
58302 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v9 = getInstance()::CL,34443
58306 :: CALL :: call :: Lorg/joda/time/Chronology :: v5 = p1 $null .getChronology()::JM,58310:CL,44588:CL,60935
58310 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 24::CD,58311
58311 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v7 = getInstance()::CL,34443
58323 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)::CD,58334:CD,58343:CD,58359:CD,58366
58334 :: CALL :: call :: Lorg/joda/time/Chronology :: v9 = p0 $null .selectChronology(p3 $null )::CL,44603
58343 :: CALL :: call :: I :: v13 = v11.getOffset(p2 $null )::CL,22651:CL,22661:CL,22668:CL,22544
58359 :: CALL :: call :: Lorg/joda/time/Chronology :: v28 = v9.withUTC()::CL,48735
58366 :: CALL :: call :: V :: v7.printTo(p1 $null , v26, v28, v25, v24, v29)::CL,60992:CL,61281:CL,61144:CL,61335:CL,61040:CL,61230:CL,61590:CL,60943:CL,61313:CL,61259:CL,61209:CL,61549
58412 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicGJChronology.isLeapDay(long)::CD,58421:CD,58426
58421 :: CALL :: call :: I :: v7 = v5.get(p1 $null )::JM,58426:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
58426 :: PRED :: IF :: Z :: if (v7 != #(29)) goto 29::CD,58431
58431 :: CALL :: call :: Z :: v12 = v10.isLeap(p1 $null )::CL,53992:CL,53976:CL,53924:CL,54014:CL,54079:CL,54041:CL,53864:CL,54031:CL,53891:CL,53908
58509 :: ENTR :: entry :: null :: org.joda.time.tz.DateTimeZoneBuilder.OfYear.readFrom(java.io.DataInput)::CD,58514:CD,58519:CD,58523:CD,58527:CD,58531:CD,58535:JM,47824:JM,47810:JM,47827:JM,47830:JM,47815:JM,47800:JM,47801:JM,47833:JM,47836:JM,47805:JM,47839
58514 :: CALL :: call :: I :: v5 = p1 $null .readUnsignedByte()::
58519 :: CALL :: call :: I :: v8 = p1 $null .readUnsignedByte()::
58523 :: CALL :: call :: B :: v10 = p1 $null .readByte()::
58527 :: CALL :: call :: I :: v12 = p1 $null .readUnsignedByte()::
58531 :: CALL :: call :: Z :: v14 = p1 $null .readBoolean()::
58535 :: CALL :: call :: J :: v16 = readMillis(p1 $null )::CL,40175
58577 :: EXPR :: modify :: Lorg/joda/time/field/ImpreciseDateTimeField :: p0 $null .this$0 = p1 $null ::
58595 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.getMaxMonth()::CF,58596:CD,58599
58596 :: EXIT :: exit :: I :: org.joda.time.chrono.BasicChronology.getMaxMonth()::JM,54397
58599 :: NORM :: compound :: I :: return #(12)::CF,58596
58629 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iField = p1 $null ::
58806 :: ENTR :: entry :: null :: org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)::CD,58811:CD,58812:CD,58816:CD,58817:CD,58830:CD,58923:JM,58859
58811 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p2 $null  + #(32)::DD,58816:JM,58817:JM,58859:JM,58923:JM,58811:JM,58830
58812 :: CALL :: call :: I :: v7 = p1 $null .length()::JM,58817:JM,58923:JM,58811:JM,58859:JM,58830
58816 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v5 + #(3)::CF,58817
58817 :: PRED :: IF :: Z :: if (v7 > v9) goto 23::CD,58819:CD,58825:CD,58923:JM,58817:JM,58811:JM,58859:JM,58830
58819 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $null .substring(#(0), v5)::JM,58817:JM,58923:JM,58811:JM,58859:JM,58830
58825 :: CALL :: call :: Ljava/lang/String :: v15 = v12.concat(#(...))::JM,58859:JM,58923
58830 :: PRED :: IF :: Z :: if (p2 $null  > #(0)) goto 63::CF,58831:CD,58835:CD,58840:CD,58845:CD,58850:CD,58855:CD,58859:JM,58817:JM,58923:JM,58811:JM,58830
58831 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
58835 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#(Invalid format: '))::
58840 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v52.append(v16)::
58845 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(#(34))::
58850 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
58855 :: CALL :: call :: I :: v18 = p1 $null .length()::JM,58817:JM,58923:JM,58811:JM,58859:JM,58830
58859 :: PRED :: IF :: Z :: if (p2 $null  < v18) goto 94::CF,58884:CF,58860:CD,58864:CD,58869:CD,58874:CD,58879:CD,58888:CD,58893:CD,58898:CD,58903:CD,58908:CD,58913:CD,58918
58860 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
58864 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(Invalid format: '))::
58869 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v41.append(v16)::
58874 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#(' is too short))::
58879 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
58884 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
58888 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(#(Invalid format: '))::
58893 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v23.append(v16)::
58898 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(' is malformed at '))::
58903 :: CALL :: call :: Ljava/lang/String :: v30 = v16.substring(p2 $null )::JM,58817:JM,58811:JM,58859:JM,58923
58908 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,58923
58913 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#(34))::
58918 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
58923 :: EXPR :: assign :: null :: PHI v16 = p1 $null , v15::CF,58830
59127 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
59141 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,59148
59143 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,59148:JM,59155:JM,59252:JM,59322:JM,59325
59148 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,59149:DD,59322
59149 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,59150:CD,59152:CD,59160:CD,59322
59150 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,59152
59152 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,59322:CD,59153:CD,59155
59153 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,59155:JM,59322
59155 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,59155:JM,59322:JM,59252:JM,59148:JM,59325
59160 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CD,59167:CD,59171:CD,59172:CD,59191:CD,59192:CD,59200:CD,59205:CD,59209:CD,59273:CD,59326
59167 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,59171
59171 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,59172
59172 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,59173:CD,59174:CD,59182:CD,59187
59173 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
59174 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
59182 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
59187 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
59191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
59192 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
59200 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
59205 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
59209 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,59278
59216 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
59220 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
59224 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,59252:JM,59325
59225 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
59233 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,59252:JM,59325
59238 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,59252:JM,59325:JM,59155:JM,59322:JM,59148
59243 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,59252:JM,59325
59248 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,59252:JM,59325
59252 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,59252:JM,59325
59257 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,59325
59261 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,59325:JM,59252
59266 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,59326:CD,59267:CD,59271
59267 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,59267:JM,59271
59271 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,59326
59273 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CD,59274:CD,59278
59274 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,59278
59278 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CD,59216:CD,59220:CD,59224:CD,59225:CD,59233:CD,59238:CD,59243:CD,59248:CD,59252:CD,59266:CD,59273:CD,59325:CD,59326
59322 :: EXPR :: assign :: null :: PHI v14 = v6, v12::DD,59160:DD,59326
59325 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,59266:JM,59267:JM,59271
59326 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,59273:DD,59326
59427 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale)::CE,59428:CD,59438:CD,59444:CD,59449:CD,59455:CD,59456:CD,59457:CD,59462
59428 :: EXIT :: exit :: Ljava/text/DateFormatSymbols :: org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale)::JM,64290:JM,64286:JM,64320:JM,64316:JM,64584:JM,64588:JM,64614:JM,64618
59438 :: CALL :: call :: Ljava/lang/reflect/Method :: v10 = v3.getMethod(#(getInstance), v6)::JM,59455
59444 :: NORM :: declaration :: [Ljava/lang/Object :: v12 = new java.lang.Object[]::JM,59455
59449 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.invoke(#(null), v12)::JM,59455
59455 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::CF,59456
59456 :: NORM :: compound :: Ljava/text/DateFormatSymbols :: return v15::DD,59428
59457 :: NORM :: declaration :: Ljava/text/DateFormatSymbols :: v17 = new java.text.DateFormatSymbols::DD,59462
59462 :: NORM :: compound :: Ljava/text/DateFormatSymbols :: return v17::DD,59428
59475 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])::CD,59479:CD,59480:CD,59495
59479 :: NORM :: declaration :: [Ljava/lang/String :: v4 = new java.lang.String[]::CF,59495
59480 :: PRED :: IF :: Z :: if (v11 >= #(8)) goto 39::CD,59481:CD,59492:CD,59495:CD,59496
59481 :: PRED :: IF :: Z :: if (v11 >= #(7)) goto 30::CD,59482:CD,59496
59482 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v11 + #(1)::DD,59496
59484 :: EXPR :: reference :: Ljava/lang/Object :: v9 = p1 $null [v8]::DD,59488
59488 :: EXPR :: modify :: Ljava/lang/Object :: v4[v11] = v9::
59492 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v11 + #(1)::DD,59495
59495 :: EXPR :: assign :: null :: PHI v11 = v10, #(1)::DD,59480:DD,59481:DD,59482:DD,59492
59496 :: EXPR :: assign :: null :: PHI v8 = v7, #(1)::
59514 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])::CD,59518:CD,59519:CD,59532
59518 :: NORM :: declaration :: [Ljava/lang/String :: v4 = new java.lang.String[]::CF,59532
59519 :: PRED :: IF :: Z :: if (v9 >= #(13)) goto 29::CD,59520:CD,59529:CD,59532
59520 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v9 - #(1)::
59521 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $null [v6]::DD,59525
59525 :: EXPR :: modify :: Ljava/lang/Object :: v4[v9] = v7::
59529 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v9 + #(1)::DD,59532
59532 :: EXPR :: assign :: null :: PHI v9 = v8, #(1)::DD,59519:DD,59520:DD,59529
59590 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])::CD,59597:CD,59619
59597 :: PRED :: IF :: Z :: if (v15 > p3 $null ) goto 32::CD,59598:CD,59602:CD,59610:CD,59616:CD,59619
59598 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v15)::JM,59602
59602 :: CALL :: call :: Ljava/lang/String :: v9 = v7.intern()::JM,59602
59606 :: EXPR :: reference :: Ljava/lang/Object :: v10 = p4 $null [v15]::JM,59619
59610 :: CALL :: call :: Ljava/lang/Object :: v12 = p1 $null .put(v9, v10)::JM,59619:JM,59597
59616 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,59619
59619 :: EXPR :: assign :: null :: PHI v15 = v14, p2 $null ::DD,59597:JM,59602:DD,59616
59673 :: ENTR :: entry :: null :: org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.String)::CD,59678:CD,59682:CD,59687:CD,59709:CD,59714:CD,59719:CD,59724:CD,59729
59678 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v4 = new java.lang.StringBuffer::
59682 :: CALL :: call :: Ljava/lang/StringBuffer :: v8 = v4.append(#(Value ))::
59687 :: PRED :: IF :: Z :: if (p2 $null  != #(null)) goto 30::CD,59688:CD,59694:CD,59699:CD,59704
59688 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(#(null))::
59694 :: CALL :: call :: Ljava/lang/StringBuffer :: v12 = v8.append(#(34))::
59699 :: CALL :: call :: Ljava/lang/StringBuffer :: v14 = v8.append(p2 $null )::
59704 :: CALL :: call :: Ljava/lang/StringBuffer :: v16 = v8.append(#(34))::
59709 :: CALL :: call :: Ljava/lang/StringBuffer :: v22 = v8.append(#( for ))::
59714 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = v22.append(p1 $null )::JM,59687:JM,59678
59719 :: CALL :: call :: Ljava/lang/StringBuffer :: v27 = v24.append(#(32))::
59724 :: CALL :: call :: Ljava/lang/StringBuffer :: v30 = v27.append(#(is not supported))::
59729 :: CALL :: call :: Ljava/lang/String :: v32 = v8.toString()::
59877 :: ENTR :: entry :: null :: org.joda.time.DateTimeUtils.put(java.util.Map,java.lang.String,java.lang.String)::CD,59883:CD,59887
59883 :: CALL :: call :: Lorg/joda/time/DateTimeZone :: v6 = forID(p3 $null )::CL,34865
59887 :: CALL :: call :: Ljava/lang/Object :: v8 = p1 $null .put(p2 $null , v6)::
59900 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.access$000(org.joda.time.format.DateTimeParserBucket)::CE,59901:CD,59907
59901 :: EXIT :: exit :: Lorg/joda/time/DateTimeZone :: org.joda.time.format.DateTimeParserBucket.access$000(org.joda.time.format.DateTimeParserBucket)::JM,56622
59904 :: EXPR :: reference :: Lorg/joda/time/DateTimeZone :: v3 = p1 $null .iZone::DD,59907
59907 :: NORM :: compound :: Lorg/joda/time/DateTimeZone :: return v3::CF,59901
59909 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.access$100(org.joda.time.format.DateTimeParserBucket)::CE,59910:CD,59916
59910 :: EXIT :: exit :: Ljava/lang/Integer :: org.joda.time.format.DateTimeParserBucket.access$100(org.joda.time.format.DateTimeParserBucket)::JM,56629
59913 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p1 $null .iOffset::DD,59916
59916 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,59910
59918 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.access$200(org.joda.time.format.DateTimeParserBucket)::CE,59919:CD,59925
59919 :: EXIT :: exit :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: org.joda.time.format.DateTimeParserBucket.access$200(org.joda.time.format.DateTimeParserBucket)::JM,56636
59922 :: EXPR :: reference :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: v3 = p1 $null .iSavedFields::DD,59925
59925 :: NORM :: compound :: [Lorg/joda/time/format/DateTimeParserBucket$SavedField :: return v3::CF,59919
59927 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeParserBucket.access$300(org.joda.time.format.DateTimeParserBucket)::CE,59928:CD,59934
59928 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeParserBucket.access$300(org.joda.time.format.DateTimeParserBucket)::JM,56643
59931 :: EXPR :: reference :: I :: v3 = p1 $null .iSavedFieldsCount::DD,59934
59934 :: NORM :: compound :: I :: return v3::CF,59928
60005 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength()::CE,60006:CD,60012
60006 :: EXIT :: exit :: I :: org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength()::JM,56936
60009 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxHalfdayLength::DD,60012
60012 :: NORM :: compound :: I :: return v3::CF,60006
60014 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength()::CE,60015:CD,60021
60015 :: EXIT :: exit :: I :: org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength()::JM,56951
60018 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxMonthLength::DD,60021
60021 :: NORM :: compound :: I :: return v3::CF,60015
60023 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength()::CE,60024:CD,60030
60024 :: EXIT :: exit :: I :: org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength()::JM,56966
60027 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxDayOfWeekLength::DD,60030
60030 :: NORM :: compound :: I :: return v3::CF,60024
60032 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength()::CE,60033:CD,60039
60033 :: EXIT :: exit :: I :: org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength()::JM,56981
60036 :: EXPR :: reference :: I :: v3 = p0 $null .iMaxEraLength::DD,60039
60039 :: NORM :: compound :: I :: return v3::CF,60033
60041 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getAsShortText(int,java.util.Locale)::CE,60042:CD,60047:CD,60053
60042 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.BaseDateTimeField.getAsShortText(int,java.util.Locale)::JM,57055:JM,60072:JM,62034
60047 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $null .getAsText(p1 $null , p2 $null )::JM,60053:CL,60197:CL,60185:CL,60149:CL,60112:CL,60131:CL,60167
60053 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,60042
60057 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsShortText(int,java.util.Locale)::CE,60058:CD,60066:CD,60072
60058 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsShortText(int,java.util.Locale)::JM,57055:JM,60072:JM,62034
60066 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsShortText(p1 $null , p2 $null )::JM,60072:CL,60057:CL,60076:CL,62019:CL,62038:CL,60041:CL,60094
60072 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,60058
60076 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(int,java.util.Locale)::CE,60077:CD,60082:CD,60086:CD,60091
60077 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(int,java.util.Locale)::JM,57055:JM,60072:JM,62034
60082 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60086 :: CALL :: call :: Ljava/lang/String :: v8 = v6.dayOfWeekValueToShortText(p1 $null )::JM,60091:CL,62049
60091 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60077
60094 :: ENTR :: entry :: null :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(int,java.util.Locale)::CE,60095:CD,60100:CD,60104:CD,60109
60095 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(int,java.util.Locale)::JM,57055:JM,60072:JM,62034
60100 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60104 :: CALL :: call :: Ljava/lang/String :: v8 = v6.monthOfYearValueToShortText(p1 $null )::JM,60109:CL,62064
60109 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60095
60112 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsText(int,java.util.Locale)::CE,60113:CD,60121:CD,60127
60113 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60121 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsText(p1 $null , p2 $null )::JM,60127:CL,60197:CL,60185:CL,60149:CL,60112:CL,60131:CL,62079:CL,60167:CL,62090
60127 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,60113
60131 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicChronology.HalfdayField.getAsText(int,java.util.Locale)::CE,60132:CD,60137:CD,60141:CD,60146
60132 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.BasicChronology.HalfdayField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60137 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60141 :: CALL :: call :: Ljava/lang/String :: v8 = v6.halfdayValueToText(p1 $null )::JM,60146:CL,62109
60146 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60132
60149 :: ENTR :: entry :: null :: org.joda.time.chrono.GJEraDateTimeField.getAsText(int,java.util.Locale)::CE,60150:CD,60155:CD,60159:CD,60164
60150 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJEraDateTimeField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60155 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60159 :: CALL :: call :: Ljava/lang/String :: v8 = v6.eraValueToText(p1 $null )::JM,60164:CL,62124
60164 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60150
60167 :: ENTR :: entry :: null :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(int,java.util.Locale)::CE,60168:CD,60173:CD,60177:CD,60182
60168 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60173 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60177 :: CALL :: call :: Ljava/lang/String :: v8 = v6.monthOfYearValueToText(p1 $null )::JM,60182:CL,62139
60182 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60168
60185 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.getAsText(int,java.util.Locale)::CE,60186:CD,60191:CD,60195
60186 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.BaseDateTimeField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60191 :: CALL :: call :: Ljava/lang/String :: v6 = toString(p1 $null )::JM,60195
60195 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,60186
60197 :: ENTR :: entry :: null :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(int,java.util.Locale)::CE,60198:CD,60203:CD,60207:CD,60212
60198 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(int,java.util.Locale)::JM,57156:JM,60053:JM,60127:JM,62105
60203 :: CALL :: call :: Lorg/joda/time/chrono/GJLocaleSymbols :: v6 = forLocale(p2 $null )::CL,51547
60207 :: CALL :: call :: Ljava/lang/String :: v8 = v6.dayOfWeekValueToText(p1 $null )::JM,60212:CL,62154
60212 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,60198
60254 :: ENTR :: entry :: null :: org.joda.time.DateTimeField.setExtended(long,int)::CE,60255:CD,60260:CD,60266
60255 :: EXIT :: exit :: J :: org.joda.time.DateTimeField.setExtended(long,int)::JM,57369
60260 :: CALL :: call :: J :: v6 = p0 $null .set(p1 $null , p2 $null )::JM,60266:CL,21895:CL,21759:CL,21847:CL,22352:CL,21884:CL,21978:CL,22393:CL,21698:CL,22038:CL,21655:CL,22218:CL,22306:CL,22490:CL,21805
60266 :: NORM :: compound :: J :: return v6::DD,60255
60270 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.setExtended(long,int)::CE,60271:CD,60292:CD,60301:CD,60307
60271 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.setExtended(long,int)::JM,57369
60292 :: CALL :: call :: V :: verifyValueBounds(p0 $null , p2 $null , v9, v13)::CL,29666
60301 :: CALL :: call :: J :: v17 = v15.setYear(p1 $null , p2 $null )::JM,60307:CL,29705
60307 :: NORM :: compound :: J :: return v17::DD,60271
60317 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,[])::CE,60318:CD,60322:CD,60330:CD,60334:CD,60339:CD,60413:CD,60417:CD,60424:JM,60384:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60318 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,[])::JM,57537:JM,57797:JM,57544:JM,57673:JM,57674:JM,57834:JM,57774:JM,57651:JM,57588:JM,57557:JM,57751:JM,57786:JM,57822
60322 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,60417
60326 :: EXPR :: reference :: I :: v7 = p2 $null [#(0)]::JM,60384:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349:DD,60418:DD,60419
60330 :: CALL :: call :: I :: v9 = p1 $null .length()::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60334 :: CALL :: call :: C :: v11 = p1 $null .charAt(v7)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60339 :: PRED :: IF :: Z :: if (v11 < #(65)) goto 43::CD,60340:CD,60341
60340 :: PRED :: IF :: Z :: if (v11 <= #(90)) goto 56::CD,60341:CD,60343:CD,60348:CD,60349:CD,60418:CD,60424
60341 :: PRED :: IF :: Z :: if (v11 < #(97)) goto 100::CD,60342:CD,60364:CD,60369:CD,60419:CD,60420:CD,60424
60342 :: PRED :: IF :: Z :: if (v11 > #(122)) goto 100::CD,60343:CD,60348:CD,60349:CD,60364:CD,60369:CD,60418:CD,60419:CD,60420:CD,60424
60343 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v4.append(v11)::JM,60384:JM,60356:JM,60375:JM,60396:JM,60397:JM,60398:JM,60399
60348 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v49 + #(1)::DD,60349
60349 :: PRED :: IF :: Z :: if (v42 >= v9) goto 230::CF,60424:CD,60350:CD,60351:CD,60356
60350 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v49 + #(1)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60351 :: CALL :: call :: C :: v45 = p1 $null .charAt(v43)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60356 :: PRED :: IF :: Z :: if (v45 != v11) goto 230::CF,60424:CD,60348:CD,60349:CD,60357:CD,60362:CD,60418
60357 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v4.append(v11)::JM,60384:JM,60356:JM,60375:JM,60396:JM,60397:JM,60398:JM,60399
60362 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v49 + #(1)::DD,60418
60364 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v4.append(#(39))::
60369 :: PRED :: IF :: Z :: if (v35 >= v9) goto 230::CF,60424:CD,60370:CD,60375:JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60377:JM,60349
60370 :: CALL :: call :: C :: v20 = p1 $null .charAt(v35)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60375 :: PRED :: IF :: Z :: if (v20 != #(39)) goto 177::CD,60369:CD,60376:CD,60377:CD,60395:CD,60407:CD,60419:CD,60420:CD,60422:CD,60423:CD,60424
60376 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v35 + #(1)::DD,60377
60377 :: PRED :: IF :: Z :: if (v22 >= v9) goto 162::CD,60378:CD,60379:CD,60384:CD,60392:CD,60421:CD,60422:CD,60423
60378 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v35 + #(1)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60379 :: CALL :: call :: C :: v25 = p1 $null .charAt(v23)::JM,60384:JM,60322:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60369:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349
60384 :: PRED :: IF :: Z :: if (v25 != #(39)) goto 162::CD,60385:CD,60386:CD,60392:CD,60421:CD,60422:CD,60423
60385 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v35 + #(1)::DD,60422
60386 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v4.append(v20)::JM,60384:JM,60396:JM,60397:JM,60398:JM,60399
60392 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 172::CD,60421
60395 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 217::CD,60369:CD,60396:CD,60402:CD,60407:CD,60419:CD,60420:CD,60422:CD,60423:CD,60424
60396 :: PRED :: IF :: Z :: if (v20 < #(65)) goto 198::CD,60397:CD,60398
60397 :: PRED :: IF :: Z :: if (v20 <= #(90)) goto 208::CD,60398:CD,60400:CD,60424
60398 :: PRED :: IF :: Z :: if (v20 < #(97)) goto 217::CD,60369:CD,60399:CD,60402:CD,60407:CD,60419:CD,60420:CD,60422:CD,60423:CD,60424
60399 :: PRED :: IF :: Z :: if (v20 > #(122)) goto 217::CD,60369:CD,60400:CD,60402:CD,60407:CD,60419:CD,60420:CD,60422:CD,60423:CD,60424
60400 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v35 + #(-1)::DD,60424
60402 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v4.append(v20)::JM,60384
60407 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,60419
60409 :: EXPR :: modify :: I :: p2 $null [#(0)] = v50::
60413 :: CALL :: call :: Ljava/lang/String :: v54 = v4.toString()::JM,60417
60417 :: NORM :: compound :: Ljava/lang/String :: return v54::DD,60318
60418 :: EXPR :: assign :: null :: PHI v49 = v48, v7::DD,60348:DD,60350:DD,60362:DD,60424
60419 :: EXPR :: assign :: null :: PHI v35 = v34, v7::CF,60420:DD,60369:JM,60384:JM,60356:JM,60396:JM,60397:JM,60398:JM,60399:JM,60339:JM,60340:JM,60341:JM,60342:JM,60375:JM,60377:JM,60349:DD,60376:DD,60378:DD,60385:DD,60400:DD,60422:DD,60424
60420 :: EXPR :: assign :: null :: PHI v37 = v33, #(0)::DD,60392:DD,60395:DD,60423:CF,60369
60421 :: EXPR :: assign :: null :: PHI v29 = #(1), #(0)::DD,60423
60422 :: EXPR :: assign :: null :: PHI v32 = v26, v35, v35::CF,60423:DD,60407
60423 :: EXPR :: assign :: null :: PHI v33 = v37, v29, v37::DD,60420:CF,60407
60424 :: EXPR :: assign :: null :: PHI v50 = v49, v49, v35, v39::DD,60409
60509 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendEraText()::CD,60516
60516 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendText(v4)::CL,62169
60523 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(int,int)::CD,60532
60532 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendSignedDecimal(v6, p1 $null , p2 $null )::CL,25877
60543 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormat.isNumericToken(java.lang.String)::CD,60547:CD,60551
60547 :: CALL :: call :: I :: v4 = p1 $null .length()::JM,60551
60551 :: PRED :: IF :: Z :: if (v4 <= #(0)) goto 262::CD,60552:JM,60551
60552 :: CALL :: call :: C :: v7 = p1 $null .charAt(#(0))::JM,60551
60584 :: ENTR :: entry :: null :: org.joda.time.base.AbstractDateTime.getWeekyear()::CD,60592:CD,60600
60592 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v6 = v4.weekyear()::CL,38055:CL,34193
60600 :: CALL :: call :: I :: v10 = v6.get(v8)::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
60608 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int,boolean)::JM,62226:JM,62229:JM,62232:CD,60624
60624 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v5)::CL,26143
60634 :: ENTR :: entry :: null :: org.joda.time.base.AbstractDateTime.getYear()::CD,60642:CD,60650
60642 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v6 = v4.year()::CL,34247:CL,9390
60650 :: CALL :: call :: I :: v10 = v6.get(v8)::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
60658 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int,boolean)::JM,62226:JM,62229:JM,62232:CD,60674
60674 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v10 = p0 $null .append0(v5)::CL,26143
60684 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(int,int)::CD,60693
60693 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v6, p1 $null , p2 $null )::CL,26177
60704 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText()::CD,60711
60711 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendText(v4)::CL,62169
60718 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText()::CD,60725
60725 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendShortText(v4)::CL,62243
60732 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText()::CD,60739
60739 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendText(v4)::CL,62169
60746 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(int)::CD,60754
60754 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
60765 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(int)::CD,60773
60773 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
60784 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(int)::CD,60792
60792 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .appendDecimal(v5, p1 $null , #(2))::CL,26177
60803 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText()::CD,60810
60810 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendText(v4)::CL,62169
60817 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText()::CD,60824
60824 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .appendShortText(v4)::CL,62243
60831 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName()::JM,62282:JM,62285:CD,60841
60841 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .append0(v3, #(null))::CL,26398
60853 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(java.util.Map)::JM,62282:JM,62285:CD,60864
60864 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v8 = p0 $null .append0(v4, v4)::CL,26398
60878 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)::JM,26337:JM,26340:JM,26358:JM,26359:JM,26345:JM,26350:JM,26334:CD,60896
60896 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v11 = p0 $null .append0(v8)::CL,26143
60909 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId()::CD,60917
60917 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v6 = p0 $null .append0(v3, v4)::CL,26398
60935 :: ENTR :: entry :: null :: org.joda.time.Instant.getChronology()::CF,60936:CD,60939:CD,60942
60936 :: EXIT :: exit :: Lorg/joda/time/Chronology :: org.joda.time.Instant.getChronology()::JM,58310
60939 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v4 = getInstanceUTC()::JM,60942:CL,9383
60942 :: NORM :: compound :: Lorg/joda/time/Chronology :: return v4::CF,60936
60943 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,60953:CD,60959
60953 :: CALL :: call :: I :: v10 = p0 $null .getTwoDigitYear(p2 $null , p3 $null )::JM,60959:CL,62294
60959 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 39::CD,60960:CD,60965:CD,60971
60960 :: CALL :: call :: Ljava/lang/Appendable :: v16 = p1 $null .append(#(65533))::
60965 :: CALL :: call :: Ljava/lang/Appendable :: v18 = p1 $null .append(#(65533))::
60971 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v10, #(2))::CL,54749
60992 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.PaddedNumber.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61005:CD,61010:CD,61018:CD,61027
61005 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v11 = v9.getField(p3 $null )::CL,30026
61010 :: CALL :: call :: I :: v13 = v11.get(p2 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
61018 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v13, v14)::CL,54749
61027 :: CALL :: call :: V :: appendUnknownString(p1 $null , v17)::CL,62329
61040 :: ENTR :: entry :: null :: org.joda.time.format.DateTimePrinterInternalPrinter.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61050:CD,61051:JM,61066
61050 :: EXPR :: assign :: Z :: v9=p1 $null  INSTANCEOF java.lang.StringBuffer::DD,61051
61051 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 37::CD,61066:CD,61067
61066 :: EXPR :: assign :: Z :: v11=p1 $null  INSTANCEOF java.io.Writer::DD,61067
61067 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 72::CF,61082:CD,61083:CD,61103
61082 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
61083 :: CALL :: call :: I :: v14 = p0 $null .estimatePrintedLength()::CL,43160
61103 :: CALL :: call :: Ljava/lang/Appendable :: v19 = p1 $null .append(v12)::
61144 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Composite.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61163:CD,61167:CD,61168:CD,61186
61154 :: EXPR :: reference :: [Lorg/joda/time/format/InternalPrinter :: v9 = p0 $null .iPrinters::DD,61167
61163 :: PRED :: IF :: Z :: if (p6 $null  != #(null)) goto 31::CD,61164
61164 :: CALL :: call :: Ljava/util/Locale :: v12 = getDefault()::
61167 :: EXPR :: assign :: I :: v14 = v9.length::DD,61168:CF,61186
61168 :: PRED :: IF :: Z :: if (v20 >= v14) goto 70::CD,61173:CD,61182:CD,61186
61173 :: CALL :: call :: V :: v16.printTo(p1 $null , p2 $null , p3 $null , p4 $null , p5 $null , v13)::CL,60992:CL,61281:CL,61144:CL,61335:CL,61040:CL,61230:CL,61590:CL,60943:CL,61313:CL,61259:CL,61209:CL,61549
61182 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,61186
61186 :: EXPR :: assign :: null :: PHI v20 = v19, #(0)::DD,61168:DD,61182
61209 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61219
61219 :: CALL :: call :: V :: p0 $null .printTo(p1 $null , p2 $null , p3 $null )::CL,62353
61230 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneId.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61240:CD,61246:CD,61252
61240 :: PRED :: IF :: Z :: if (p5 $null  == #(null)) goto 16::CD,61241:CD,61252
61241 :: CALL :: call :: Ljava/lang/String :: v12 = p5 $null .getID()::JM,61252:CL,14897
61246 :: CALL :: call :: Ljava/lang/Appendable :: v15 = p1 $null .append(v13)::
61252 :: EXPR :: assign :: null :: PHI v13 = v12, #()::
61259 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.CharacterLiteral.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61272
61269 :: EXPR :: reference :: C :: v9 = p0 $null .iValue::
61272 :: CALL :: call :: Ljava/lang/Appendable :: v11 = p1 $null .append(v9)::
61281 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61293:CD,61300
61293 :: CALL :: call :: Ljava/lang/String :: v12 = p0 $null .print(v10, p5 $null , p6 $null )::CL,62560
61300 :: CALL :: call :: Ljava/lang/Appendable :: v14 = p1 $null .append(v12)::
61313 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.StringLiteral.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61326
61323 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $null .iValue::
61326 :: CALL :: call :: Ljava/lang/Appendable :: v11 = p1 $null .append(v9)::
61335 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61345:JM,61361:JM,61347:JM,61464:JM,61373
61345 :: PRED :: IF :: Z :: if (p5 $null  != #(null)) goto 8::CD,61347
61347 :: PRED :: IF :: Z :: if (p4 $null  != #(0)) goto 32::CD,61351:CD,61361:CD,61374:CD,61375:CD,61383:CD,61464
61348 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $null .iZeroOffsetPrintText::DD,61351
61351 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 32::CD,61355:CD,61361:CD,61374:CD,61375:CD,61383:CD,61464
61352 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $null .iZeroOffsetPrintText::
61355 :: CALL :: call :: Ljava/lang/Appendable :: v58 = p1 $null .append(v56)::
61361 :: PRED :: IF :: Z :: if (p4 $null  < #(0)) goto 50::CD,61362:CD,61368:CD,61373:CD,61464
61362 :: CALL :: call :: Ljava/lang/Appendable :: v18 = p1 $null .append(#(43))::
61368 :: CALL :: call :: Ljava/lang/Appendable :: v14 = p1 $null .append(#(45))::
61373 :: EXPR :: assign :: Ljava/lang/Object :: v15 = -(p4 $null )::DD,61464
61374 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 / #(3600000)::DD,61385
61375 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v21, #(2))::CL,54749
61380 :: EXPR :: reference :: I :: v24 = p0 $null .iMaxFields::DD,61383
61383 :: PRED :: IF :: Z :: if (v24 != #(1)) goto 90::CD,61385:CD,61386:CD,61387
61385 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v21 * #(3600000)::CF,61386
61386 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v19 - v26::DD,61387:DD,61393:DD,61414
61387 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 112::CD,61391:CD,61393:CD,61397:CD,61403:CD,61411
61388 :: EXPR :: reference :: I :: v28 = p0 $null .iMinFields::DD,61391
61391 :: PRED :: IF :: Z :: if (v28 > #(1)) goto 112::CD,61393:CD,61397:CD,61403:CD,61411
61393 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v27 / #(60000)::DD,61413
61394 :: EXPR :: reference :: Z :: v31 = p0 $null .iShowSeparators::DD,61397
61397 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 135::CD,61398
61398 :: CALL :: call :: Ljava/lang/Appendable :: v34 = p1 $null .append(#(58))::
61403 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v30, #(2))::CL,54749
61408 :: EXPR :: reference :: I :: v36 = p0 $null .iMaxFields::DD,61411
61411 :: PRED :: IF :: Z :: if (v36 != #(2)) goto 153::CD,61413:CD,61414:CD,61415
61413 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v30 * #(60000)::CF,61414
61414 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v27 - v37::DD,61415:DD,61421:DD,61442
61415 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 176::CD,61419:CD,61421:CD,61425:CD,61431:CD,61439
61416 :: EXPR :: reference :: I :: v39 = p0 $null .iMinFields::DD,61419
61419 :: PRED :: IF :: Z :: if (v39 > #(2)) goto 176::CD,61421:CD,61425:CD,61431:CD,61439
61421 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v38 / #(1000)::DD,61441
61422 :: EXPR :: reference :: Z :: v42 = p0 $null .iShowSeparators::DD,61425
61425 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 199::CD,61426
61426 :: CALL :: call :: Ljava/lang/Appendable :: v44 = p1 $null .append(#(58))::
61431 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v41, #(2))::CL,54749
61436 :: EXPR :: reference :: I :: v46 = p0 $null .iMaxFields::DD,61439
61439 :: PRED :: IF :: Z :: if (v46 != #(3)) goto 218::CD,61441:CD,61442:CD,61443
61441 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v41 * #(1000)::CF,61442
61442 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v38 - v48::DD,61443
61443 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 237::CD,61447:CD,61452:CD,61458
61444 :: EXPR :: reference :: I :: v50 = p0 $null .iMinFields::DD,61447
61447 :: PRED :: IF :: Z :: if (v50 > #(3)) goto 237::CD,61452:CD,61458
61449 :: EXPR :: reference :: Z :: v51 = p0 $null .iShowSeparators::DD,61452
61452 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 256::CD,61453
61453 :: CALL :: call :: Ljava/lang/Appendable :: v54 = p1 $null .append(#(46))::
61458 :: CALL :: call :: V :: appendPaddedInteger(p1 $null , v49, #(3))::CL,54749
61464 :: EXPR :: assign :: null :: PHI v19 = p4 $null , v15::DD,61374:DD,61386
61549 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.UnpaddedNumber.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61562:CD,61567:CD,61572:CD,61577
61562 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v11 = v9.getField(p3 $null )::CL,30026
61567 :: CALL :: call :: I :: v13 = v11.get(p2 $null )::CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
61572 :: CALL :: call :: V :: appendUnpaddedInteger(p1 $null , v13)::CL,62599
61577 :: CALL :: call :: Ljava/lang/Appendable :: v18 = p1 $null .append(#(65533))::
61590 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)::CD,61600:CD,61607:CD,61613
61600 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $null .print(p2 $null , p3 $null , p6 $null )::CL,62701
61607 :: CALL :: call :: Ljava/lang/Appendable :: v12 = p1 $null .append(v10)::
61613 :: CALL :: call :: Ljava/lang/Appendable :: v16 = p1 $null .append(#(65533))::
62019 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getAsShortText(int,java.util.Locale)::CE,62020:CD,62028:CD,62034
62020 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.DelegatedDateTimeField.getAsShortText(int,java.util.Locale)::JM,60072:JM,62034
62028 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsShortText(p1 $null , p2 $null )::JM,62034:CL,60057:CL,60076:CL,62019:CL,62038:CL,60041:CL,60094
62034 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,62020
62038 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getAsShortText(int,java.util.Locale)::CE,62039:CD,62044
62039 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.UnsupportedDateTimeField.getAsShortText(int,java.util.Locale)::JM,60072:JM,62034
62044 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,16323
62049 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(int)::CE,62050:CD,62061
62050 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(int)::JM,60091
62054 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iShortDaysOfWeek::
62057 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62061
62061 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62050
62064 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(int)::CE,62065:CD,62076
62065 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(int)::JM,60109
62069 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iShortMonths::
62072 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62076
62076 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62065
62079 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.getAsText(int,java.util.Locale)::CE,62080:CD,62085
62080 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.UnsupportedDateTimeField.getAsText(int,java.util.Locale)::JM,60127:JM,62105
62085 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v6 = p0 $null .unsupported()::CL,16323
62090 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.getAsText(int,java.util.Locale)::CE,62091:CD,62099:CD,62105
62091 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.field.DelegatedDateTimeField.getAsText(int,java.util.Locale)::JM,60127:JM,62105
62099 :: CALL :: call :: Ljava/lang/String :: v7 = v5.getAsText(p1 $null , p2 $null )::JM,62105:CL,60197:CL,60185:CL,60149:CL,60112:CL,60131:CL,62079:CL,60167:CL,62090
62105 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,62091
62109 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(int)::CE,62110:CD,62121
62110 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(int)::JM,60146
62114 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iHalfday::
62117 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62121
62121 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62110
62124 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.eraValueToText(int)::CE,62125:CD,62136
62125 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.eraValueToText(int)::JM,60164
62129 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iEras::
62132 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62136
62136 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62125
62139 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(int)::CE,62140:CD,62151
62140 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(int)::JM,60182
62144 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iMonths::
62147 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62151
62151 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62140
62154 :: ENTR :: entry :: null :: org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(int)::CE,62155:CD,62166
62155 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(int)::JM,60212
62159 :: EXPR :: reference :: [Ljava/lang/String :: v4 = p0 $null .iDaysOfWeek::
62162 :: EXPR :: reference :: Ljava/lang/Object :: v5 = v4[p1 $null ]::DD,62166
62166 :: NORM :: compound :: Ljava/lang/String :: return v5::CF,62155
62169 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.DateTimeFieldType)::CD,62175:JM,63201:JM,63204:CD,62187
62175 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
62187 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = p0 $null .append0(v5)::CL,26143
62206 :: CALL :: call :: Lorg/joda/time/chrono/ISOChronology :: v6 = getInstance()::CL,34443
62226 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iType = p1 $null ::
62229 :: EXPR :: modify :: I :: p0 $null .iPivot = p2 $null ::
62232 :: EXPR :: modify :: Z :: p0 $null .iLenientParse = p3 $null ::
62243 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.DateTimeFieldType)::CD,62249:JM,63201:JM,63204:CD,62261
62249 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
62261 :: CALL :: call :: Lorg/joda/time/format/DateTimeFormatterBuilder :: v9 = p0 $null .append0(v5)::CL,26143
62282 :: EXPR :: modify :: I :: p0 $null .iType = p1 $null ::
62285 :: EXPR :: modify :: Ljava/util/Map :: p0 $null .iParseLookup = p2 $null ::
62294 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)::CE,62295:CD,62303:CD,62308:CD,62313:CD,62315:CD,62316:CD,62317:CD,62319
62295 :: EXIT :: exit :: I :: org.joda.time.format.DateTimeFormatterBuilder.TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)::JM,60959
62303 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v7 = v5.getField(p2 $null )::CL,30026
62308 :: CALL :: call :: I :: v9 = v7.get(p1 $null )::JM,62313:JM,62314:JM,62319:CL,9508:CL,9632:CL,9669:CL,9492:CL,9444:CL,9399:CL,9562:CL,9476:CL,9417:CL,9653:CL,9460:CL,9616:CL,9728:CL,9536:CL,9600:CL,9718:CL,9744
62313 :: PRED :: IF :: Z :: if (v9 >= #(0)) goto 28::CF,62319:CD,62314
62314 :: EXPR :: assign :: Ljava/lang/Object :: v11 = -(v9)::DD,62319
62315 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v12 % #(100)::CF,62316
62316 :: NORM :: compound :: I :: return v14::DD,62295
62317 :: NORM :: compound :: I :: return #(-1)::DD,62295
62319 :: EXPR :: assign :: null :: PHI v12 = v9, v11::DD,62315
62329 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.appendUnknownString(java.lang.Appendable,int)::CD,62334:CD,62335:CD,62343
62334 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v10 + #(-1)::DD,62335:DD,62343
62335 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 21::CD,62334:CD,62336:CD,62343
62336 :: CALL :: call :: Ljava/lang/Appendable :: v9 = p1 $null .append(#(65533))::JM,62343
62343 :: EXPR :: assign :: null :: PHI v10 = v5, p2 $null ::DD,62334
62353 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)::CD,62363:CD,62371:CD,62377:CD,62382:CD,62383:CD,62474
62363 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v8 = v6.getField(p3 $null )::CL,30026
62368 :: EXPR :: reference :: I :: v9 = p0 $null .iMinDigits::DD,62474:DD,62476
62371 :: CALL :: call :: J :: v11 = v8.remainder(p2 $null )::JM,62382:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373
62377 :: CALL :: call :: V :: appendUnknownString(p1 $null , v9)::CL,62329
62382 :: EXPR :: assign :: Z :: v15 = v11 == #(0 l)::DD,62383
62383 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 70::CF,62474:CD,62384:CD,62385:CD,62393:CD,62407:CD,62408:CD,62409:CD,62410:CD,62421:CD,62425:CD,62434:CD,62475:CD,62476:CD,62477:CD,62478:CD,62479
62384 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v64 + #(-1)::DD,62385:DD,62474
62385 :: PRED :: IF :: Z :: if (v61 < #(0)) goto 64::CD,62384:CD,62386:CD,62474
62386 :: CALL :: call :: Ljava/lang/Appendable :: v63 = p1 $null .append(#(48))::
62393 :: CALL :: call :: [J :: v18 = p0 $null .getFractionData(v11, v8)::CL,63458
62399 :: EXPR :: reference :: J :: v19 = v18[#(0)]::DD,62408:DD,62409:DD,62411:JM,62475
62403 :: EXPR :: reference :: J :: v21 = v18[#(1)]::DD,62407
62407 :: EXPR :: assign :: I :: v22 = CONVERT J to I v21::DD,62477:CF,62408
62408 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v19 && #(2147483647 l)::DD,62409
62409 :: EXPR :: assign :: Z :: v25 = v24 == v19::DD,62410
62410 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 113::CD,62411:CD,62412:CD,62417:CD,62475
62411 :: EXPR :: assign :: I :: v28 = CONVERT J to I v19::JM,62475
62412 :: CALL :: call :: Ljava/lang/String :: v30 = toString(v28)::JM,62475
62417 :: CALL :: call :: Ljava/lang/String :: v27 = toString(v19)::JM,62475
62421 :: CALL :: call :: I :: v33 = v31.length()::JM,62425:JM,62478
62425 :: PRED :: IF :: Z :: if (v33 >= v41) goto 158::CD,62426:CD,62431:CD,62432:CD,62476:CD,62477:CF,62434
62426 :: CALL :: call :: Ljava/lang/Appendable :: v36 = p1 $null .append(#(48))::
62431 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v40 + #(-1)::DD,62476:CF,62432
62432 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v41 + #(-1)::DD,62477
62434 :: PRED :: IF :: Z :: if (v40 >= v41) goto 244::CF,62478:CD,62435:CD,62448:CD,62452:CD,62467:CD,62479
62435 :: PRED :: IF :: Z :: if (v40 >= v48) goto 204::CD,62436:JM,62452
62436 :: PRED :: IF :: Z :: if (v47 <= #(1)) goto 204::CD,62437:CD,62438:CD,62443:JM,62452
62437 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v47 - #(1)::JM,62443
62438 :: CALL :: call :: C :: v44 = v31.charAt(v42)::JM,62443
62443 :: PRED :: IF :: Z :: if (v44 == #(48)) goto 191::CD,62435:CD,62445:CD,62446:CD,62478:CD,62479
62445 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v48 + #(-1)::DD,62479:CF,62446
62446 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(-1)::DD,62478
62448 :: CALL :: call :: I :: v50 = v31.length()::JM,62452
62452 :: PRED :: IF :: Z :: if (v47 >= v50) goto 244::CD,62453:CD,62467:CD,62480
62453 :: PRED :: IF :: Z :: if (v60 >= v47) goto 240::CD,62454:CD,62459:CD,62464:CD,62480
62454 :: CALL :: call :: C :: v56 = v31.charAt(v60)::
62459 :: CALL :: call :: Ljava/lang/Appendable :: v58 = p1 $null .append(v56)::
62464 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v60 + #(1)::DD,62480
62467 :: CALL :: call :: Ljava/lang/Appendable :: v54 = p1 $null .append(v31)::
62474 :: EXPR :: assign :: null :: PHI v64 = v61, v9::DD,62384
62475 :: EXPR :: assign :: null :: PHI v31 = v30, v27::JM,62425:JM,62478:JM,62443:JM,62452
62476 :: EXPR :: assign :: null :: PHI v40 = v38, v9::CF,62477:DD,62431:DD,62434:DD,62435
62477 :: EXPR :: assign :: null :: PHI v41 = v39, v22::DD,62425:DD,62432:DD,62434:DD,62479
62478 :: EXPR :: assign :: null :: PHI v47 = v46, v33::CF,62479:DD,62436:DD,62437:DD,62446:DD,62452:DD,62453
62479 :: EXPR :: assign :: null :: PHI v48 = v45, v41::DD,62435:DD,62445
62480 :: EXPR :: assign :: null :: PHI v60 = v59, #(0)::DD,62453:DD,62464
62560 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.print(long,org.joda.time.DateTimeZone,java.util.Locale)::CE,62561:CD,62567
62561 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.format.DateTimeFormatterBuilder.TimeZoneName.print(long,org.joda.time.DateTimeZone,java.util.Locale)::
62567 :: PRED :: IF :: Z :: if (p2 $null  != #(null)) goto 8::CD,62568:CD,62572
62568 :: NORM :: compound :: Ljava/lang/String :: return #()::DD,62561
62569 :: EXPR :: reference :: I :: v7 = p0 $null .iType::DD,62572
62572 :: PRED :: IF :: null :: switch v7::CD,62573:CD,62579:CD,62580:CD,62586:CD,62587
62573 :: CALL :: call :: Ljava/lang/String :: v12 = p2 $null .getName(p1 $null , p3 $null )::JM,62579:CL,63574
62579 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,62561
62580 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $null .getShortName(p1 $null , p3 $null )::JM,62586:CL,63668
62586 :: NORM :: compound :: Ljava/lang/String :: return v10::DD,62561
62587 :: NORM :: compound :: Ljava/lang/String :: return #()::DD,62561
62599 :: ENTR :: entry :: null :: org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)::CD,62604:JM,62610:JM,62611:CD,62661
62604 :: PRED :: IF :: Z :: if (p2 $null  >= #(0)) goto 38::CF,62661:CD,62605:CD,62610:CD,62619:JM,62611:JM,62604
62605 :: CALL :: call :: Ljava/lang/Appendable :: v7 = p1 $null .append(#(45))::JM,62610:JM,62611:JM,62661:JM,62604
62610 :: PRED :: IF :: Z :: if (p2 $null  == #(-2147483648)) goto 28::CD,62611:CD,62613:CD,62619:CD,62661:JM,62610:JM,62604
62611 :: EXPR :: assign :: Ljava/lang/Object :: v12 = -(p2 $null )::DD,62661
62613 :: CALL :: call :: Ljava/lang/Appendable :: v11 = p1 $null .append(#(2147483648))::JM,62610:JM,62611:JM,62661:JM,62604
62619 :: PRED :: IF :: Z :: if (v13 >= #(10)) goto 59::CD,62620:CD,62621:CD,62622:CD,62628
62620 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v13 + #(48)::CF,62621
62621 :: EXPR :: assign :: C :: v41 = CONVERT I to C v40::JM,62610:JM,62611:JM,62661:JM,62604
62622 :: CALL :: call :: Ljava/lang/Appendable :: v43 = p1 $null .append(v41)::JM,62610:JM,62611:JM,62661:JM,62604
62628 :: PRED :: IF :: Z :: if (v13 >= #(100)) goto 109::CD,62629:CD,62630:CD,62631:CD,62632:CD,62633:CD,62634:CD,62639:CD,62640:CD,62641:CD,62642:CD,62643:CD,62644:CD,62645:CD,62651:CD,62655
62629 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v13 + #(1)::DD,62630
62630 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 * #(13421772)::DD,62631
62631 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v23 ? #(27)::DD,62632:DD,62639:DD,62641
62632 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 + #(48)::CF,62633
62633 :: EXPR :: assign :: C :: v28 = CONVERT I to C v27::JM,62610:JM,62611:JM,62661:JM,62604
62634 :: CALL :: call :: Ljava/lang/Appendable :: v30 = p1 $null .append(v28)::JM,62610:JM,62611:JM,62661:JM,62604
62639 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v25 ? #(3)::CF,62640
62640 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v13 - v32::DD,62642:CF,62641
62641 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v25 ? #(1)::CF,62642
62642 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v33 - v34::DD,62643
62643 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v35 + #(48)::CF,62644
62644 :: EXPR :: assign :: C :: v37 = CONVERT I to C v36::JM,62610:JM,62611:JM,62661:JM,62604
62645 :: CALL :: call :: Ljava/lang/Appendable :: v39 = p1 $null .append(v37)::JM,62610:JM,62611:JM,62661:JM,62604
62651 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v13)::
62655 :: CALL :: call :: Ljava/lang/Appendable :: v19 = p1 $null .append(v17)::JM,62610:JM,62611:JM,62661:JM,62604
62661 :: EXPR :: assign :: null :: PHI v13 = p2 $null , v12::DD,62619:DD,62620:DD,62628:DD,62629:DD,62640
62701 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.TextField.print(long,org.joda.time.Chronology,java.util.Locale)::CE,62702:CD,62711:CD,62719
62702 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.format.DateTimeFormatterBuilder.TextField.print(long,org.joda.time.Chronology,java.util.Locale)::
62711 :: CALL :: call :: Lorg/joda/time/DateTimeField :: v8 = v6.getField(p2 $null )::CL,30026
62716 :: EXPR :: reference :: Z :: v9 = p0 $null .iShort::DD,62719
62719 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 31::CD,62720:CD,62726:CD,62727:CD,62733
62720 :: CALL :: call :: Ljava/lang/String :: v14 = v8.getAsShortText(p1 $null , p3 $null )::JM,62726:CL,57101:CL,57060:CL,57071:CL,57038
62726 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,62702
62727 :: CALL :: call :: Ljava/lang/String :: v12 = v8.getAsText(p1 $null , p3 $null )::JM,62733:CL,57139:CL,57161:CL,57191:CL,57120
62733 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,62702
62762 :: EXPR :: modify :: Lorg/joda/time/DateTimeField :: p0 $null .iField = p1 $null ::
62765 :: EXPR :: modify :: Lorg/joda/time/DurationField :: p0 $null .iRangeDurationField = p2 $null ::
62768 :: PRED :: IF :: Z :: if (p3 $null  != #(null)) goto 41::CD,62769:CD,62778
62769 :: CALL :: call :: Lorg/joda/time/DateTimeFieldType :: v9 = p1 $null .getType()::JM,62778:CL,29991:CL,31092:CL,31101
62774 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iType = v10::
62778 :: EXPR :: assign :: null :: PHI v10 = v9, p3 $null ::DD,62774
63201 :: EXPR :: modify :: Lorg/joda/time/DateTimeFieldType :: p0 $null .iFieldType = p1 $null ::
63204 :: EXPR :: modify :: Z :: p0 $null .iShort = p2 $null ::
63213 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)::CE,63214:CD,63219:CD,63224
63214 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63219 :: CALL :: call :: J :: v7 = p0 $null .remainder(v5)::JM,63224:CL,63306
63224 :: NORM :: compound :: J :: return v7::CF,63214
63228 :: ENTR :: entry :: null :: org.joda.time.field.BaseDateTimeField.remainder(long)::CE,63229:CD,63233:CD,63238:CD,63239
63229 :: EXIT :: exit :: J :: org.joda.time.field.BaseDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63233 :: CALL :: call :: J :: v5 = p0 $null .roundFloor(p1 $null )::JM,63238:CL,52266:CL,52244:CL,52206:CL,52081:CL,52143:CL,51921:CL,52303:CL,51938:CL,56314:CL,52126:CL,52189:CL,52013:CL,52172
63238 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $null  - v5::CF,63239
63239 :: NORM :: compound :: J :: return v6::DD,63229
63243 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicYearDateTimeField.remainder(long)::CE,63244:CD,63248:CD,63253:CD,63254
63244 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicYearDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63248 :: CALL :: call :: J :: v5 = p0 $null .roundFloor(p1 $null )::JM,63253:CL,52244
63253 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $null  - v5::CF,63254
63254 :: NORM :: compound :: J :: return v6::DD,63244
63258 :: ENTR :: entry :: null :: org.joda.time.field.DividedDateTimeField.remainder(long)::CE,63259:CD,63267:CD,63272:CD,63277:CD,63283
63259 :: EXIT :: exit :: J :: org.joda.time.field.DividedDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63267 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63272 :: CALL :: call :: I :: v9 = p0 $null .get(v7)::CL,9562
63277 :: CALL :: call :: J :: v11 = p0 $null .set(p1 $null , v9)::JM,63283:CL,21698
63283 :: NORM :: compound :: J :: return v11::DD,63259
63289 :: ENTR :: entry :: null :: org.joda.time.field.ZeroIsMaxDateTimeField.remainder(long)::CE,63290:CD,63298:CD,63303
63290 :: EXIT :: exit :: J :: org.joda.time.field.ZeroIsMaxDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63298 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::JM,63303:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63303 :: NORM :: compound :: J :: return v7::DD,63290
63306 :: ENTR :: entry :: null :: org.joda.time.field.PreciseDurationDateTimeField.remainder(long)::CE,63307:CD,63311:CD,63312:JM,63316:JM,63318
63307 :: EXIT :: exit :: J :: org.joda.time.field.PreciseDurationDateTimeField.remainder(long)::JM,62382:JM,63224:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63311 :: EXPR :: assign :: Z :: v5 = p1 $null  == #(0 l)::DD,63312
63312 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 15::CD,63316:CD,63317:CD,63318:CD,63322:CD,63326:CD,63327:CD,63328
63313 :: EXPR :: reference :: J :: v14 = p0 $null .iUnitMillis::DD,63316
63316 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p1 $null  % v14::CF,63317
63317 :: NORM :: compound :: J :: return v15::CF,63307
63318 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $null  + #(1 l)::DD,63322
63319 :: EXPR :: reference :: J :: v9 = p0 $null .iUnitMillis::DD,63322
63322 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 % v9::DD,63326
63323 :: EXPR :: reference :: J :: v11 = p0 $null .iUnitMillis::DD,63326
63326 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 + v11::DD,63327
63327 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v12 - #(1 l)::CF,63328
63328 :: NORM :: compound :: J :: return v13::CF,63307
63339 :: ENTR :: entry :: null :: org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(long)::CE,63340:CD,63348:CD,63353
63340 :: EXIT :: exit :: J :: org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63348 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::JM,63353:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63353 :: NORM :: compound :: J :: return v7::DD,63340
63356 :: ENTR :: entry :: null :: org.joda.time.field.OffsetDateTimeField.remainder(long)::CE,63357:CD,63365:CD,63370
63357 :: EXIT :: exit :: J :: org.joda.time.field.OffsetDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63365 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::JM,63370:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63370 :: NORM :: compound :: J :: return v7::DD,63357
63373 :: ENTR :: entry :: null :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.remainder(long)::CE,63374:CD,63381:CD,63389:CD,63394
63374 :: EXIT :: exit :: J :: org.joda.time.chrono.ZonedChronology.ZonedDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63381 :: CALL :: call :: J :: v6 = v4.convertUTCToLocal(p1 $null )::CL,15971
63389 :: CALL :: call :: J :: v9 = v7.remainder(v6)::JM,63394:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373
63394 :: NORM :: compound :: J :: return v9::DD,63374
63400 :: ENTR :: entry :: null :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)::CE,63401:CD,63405:CD,63410:CD,63411
63401 :: EXIT :: exit :: J :: org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63405 :: CALL :: call :: J :: v5 = p0 $null .roundFloor(p1 $null )::JM,63410:CL,52013
63410 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $null  - v5::CF,63411
63411 :: NORM :: compound :: J :: return v6::DD,63401
63415 :: ENTR :: entry :: null :: org.joda.time.field.DelegatedDateTimeField.remainder(long)::CE,63416:CD,63423:CD,63428
63416 :: EXIT :: exit :: J :: org.joda.time.field.DelegatedDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63423 :: CALL :: call :: J :: v6 = v4.remainder(p1 $null )::JM,63428:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373
63428 :: NORM :: compound :: J :: return v6::DD,63416
63431 :: ENTR :: entry :: null :: org.joda.time.field.RemainderDateTimeField.remainder(long)::CE,63432:CD,63440:CD,63445
63432 :: EXIT :: exit :: J :: org.joda.time.field.RemainderDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63440 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::JM,63445:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63445 :: NORM :: compound :: J :: return v7::DD,63432
63448 :: ENTR :: entry :: null :: org.joda.time.field.UnsupportedDateTimeField.remainder(long)::CE,63449:CD,63453
63449 :: EXIT :: exit :: J :: org.joda.time.field.UnsupportedDateTimeField.remainder(long)::JM,62382:JM,63303:JM,63353:JM,63370:JM,63394:JM,63428:JM,63445:JM,63967
63453 :: CALL :: call :: Ljava/lang/UnsupportedOperationException :: v5 = p0 $null .unsupported()::CL,16323
63458 :: ENTR :: entry :: null :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.getFractionData(long,org.joda.time.DateTimeField)::CE,63459:CD,63464:CD,63468:CD,63475:CD,63494:CD,63495:CD,63496:CD,63497:CD,63501:CD,63502:CD,63503:CD,63508:CD,63513:CD,63514:CD,63515
63459 :: EXIT :: exit :: [J :: org.joda.time.format.DateTimeFormatterBuilder.Fraction.getFractionData(long,org.joda.time.DateTimeField)::
63464 :: CALL :: call :: Lorg/joda/time/DurationField :: v6 = p2 $null .getDurationField()::CL,38411:CL,38371:CL,38393:CL,38423:CL,38380:CL,38402:CL,38626:CL,38362:CL,41562
63468 :: CALL :: call :: J :: v8 = v6.getUnitMillis()::JM,63494:JM,63496:JM,63503:CL,17035:CL,17000:CL,17009:CL,17048:CL,17054:CL,17015
63472 :: EXPR :: reference :: I :: v9 = p0 $null .iMaxDigits::DD,63514
63475 :: PRED :: IF :: null :: switch v36::CD,63515
63494 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v8 * v29::DD,63495
63495 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v30 / v29::DD,63496
63496 :: EXPR :: assign :: Z :: v32 = v31 == v8::DD,63497
63497 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 268::CD,63475:CD,63494:CD,63495:CD,63496:CD,63499:CD,63514:CD,63515
63499 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(-1)::DD,63514
63501 :: NORM :: declaration :: [J :: v38 = new []::DD,63513:CF,63502
63502 :: EXPR :: assign :: Ljava/lang/Object :: v39 = p1 $null  * v29::DD,63503
63503 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v39 / v8::DD,63504
63504 :: EXPR :: modify :: J :: v38[#(0)] = v40::
63508 :: EXPR :: assign :: J :: v42 = CONVERT I to J v36::DD,63509
63509 :: EXPR :: modify :: J :: v38[#(1)] = v42::
63513 :: NORM :: compound :: [J :: return v38::DD,63459
63514 :: EXPR :: assign :: null :: PHI v36 = v35, v9::CF,63475:DD,63499:DD,63508
63515 :: EXPR :: assign :: null :: PHI v29 = #(1 l), #(10 l), #(100 l), #(1000 l), #(10000 l), #(100000 l), #(1000000 l), #(10000000 l), #(100000000 l), #(1000000000 l), #(10000000000 l), #(100000000000 l), #(1000000000000 l), #(10000000000000 l), #(100000000000000 l), #(1000000000000000 l), #(10000000000000000 l), #(100000000000000000 l), #(1000000000000000000 l)::DD,63494:DD,63495:DD,63502
63574 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getName(long,java.util.Locale)::CE,63575:CD,63580:CD,63584:CD,63589
63575 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DateTimeZone.getName(long,java.util.Locale)::JM,62579
63580 :: PRED :: IF :: Z :: if (p2 $null  != #(null)) goto 10::CD,63581
63581 :: CALL :: call :: Ljava/util/Locale :: v7 = getDefault()::
63584 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $null .getNameKey(p1 $null )::JM,63589:CL,22922:CL,22929:CL,22818:CL,22903
63589 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 25::CD,63593:CD,63594:CD,63597:CD,63598:CD,63627:CD,63640
63590 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $null .iID::DD,63593
63593 :: NORM :: compound :: Ljava/lang/String :: return v29::DD,63575
63594 :: CALL :: call :: Lorg/joda/time/tz/NameProvider :: v12 = getNameProvider()::JM,63597:CL,63970
63597 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.joda.time.tz.DefaultNameProvider::DD,63598
63598 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 67::CD,63603:CD,63608:CD,63620:CD,63640
63603 :: CALL :: call :: Z :: v21 = p0 $null .isStandardOffset(p1 $null )::CL,64011
63608 :: CALL :: call :: Ljava/lang/String :: v23 = v18.getName(v8, v19, v10, v21)::JM,63640:CL,64036
63620 :: CALL :: call :: Ljava/lang/String :: v17 = v12.getName(v8, v15, v10)::JM,63640:CL,64071
63627 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 89::CD,63628:CD,63629:CD,63634:CD,63638
63628 :: NORM :: compound :: Ljava/lang/String :: return v24::DD,63575
63629 :: CALL :: call :: I :: v26 = p0 $null .getOffset(p1 $null )::CL,22651:CL,22661:CL,22668:CL,22544
63634 :: CALL :: call :: Ljava/lang/String :: v28 = printOffset(v26)::JM,63638:CL,42666
63638 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,63575
63640 :: EXPR :: assign :: null :: PHI v24 = v23, v17::DD,63627:DD,63628
63668 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)::CE,63669:CD,63674:CD,63678:CD,63683
63669 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)::JM,62586
63674 :: PRED :: IF :: Z :: if (p2 $null  != #(null)) goto 10::CD,63675
63675 :: CALL :: call :: Ljava/util/Locale :: v7 = getDefault()::
63678 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $null .getNameKey(p1 $null )::JM,63683:CL,22922:CL,22929:CL,22818:CL,22903
63683 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 25::CD,63687:CD,63688:CD,63691:CD,63692:CD,63721:CD,63734
63684 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $null .iID::DD,63687
63687 :: NORM :: compound :: Ljava/lang/String :: return v29::DD,63669
63688 :: CALL :: call :: Lorg/joda/time/tz/NameProvider :: v12 = getNameProvider()::JM,63691:CL,63970
63691 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.joda.time.tz.DefaultNameProvider::DD,63692
63692 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 67::CD,63697:CD,63702:CD,63714:CD,63734
63697 :: CALL :: call :: Z :: v21 = p0 $null .isStandardOffset(p1 $null )::CL,64011
63702 :: CALL :: call :: Ljava/lang/String :: v23 = v18.getShortName(v8, v19, v10, v21)::JM,63734:CL,64103
63714 :: CALL :: call :: Ljava/lang/String :: v17 = v12.getShortName(v8, v15, v10)::JM,63734:CL,64138
63721 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 89::CD,63722:CD,63723:CD,63728:CD,63732
63722 :: NORM :: compound :: Ljava/lang/String :: return v24::DD,63669
63723 :: CALL :: call :: I :: v26 = p0 $null .getOffset(p1 $null )::CL,22651:CL,22661:CL,22668:CL,22544
63728 :: CALL :: call :: Ljava/lang/String :: v28 = printOffset(v26)::JM,63732:CL,42666
63732 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,63669
63734 :: EXPR :: assign :: null :: PHI v24 = v23, v17::DD,63721:DD,63722
63953 :: ENTR :: entry :: null :: org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(long)::CE,63954:CD,63962:CD,63967
63954 :: EXIT :: exit :: J :: org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(long)::JM,63303:JM,63353:JM,63370:JM,63445:JM,63967
63962 :: CALL :: call :: J :: v7 = v5.remainder(p1 $null )::JM,63967:CL,63400:CL,63228:CL,63213:CL,63415:CL,63258:CL,63339:CL,63243:CL,63306:CL,63356:CL,63289:CL,54612:CL,63448:CL,63431:CL,63373:CL,63953
63967 :: NORM :: compound :: J :: return v7::DD,63954
63970 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getNameProvider()::CE,63971:CD,63973:CD,63975:CD,63979:CD,63980:CD,64000:CD,64001
63971 :: EXIT :: exit :: Lorg/joda/time/tz/NameProvider :: org.joda.time.DateTimeZone.getNameProvider()::JM,63597:JM,63691
63973 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v2 = org.joda.time.DateTimeZone.cNameProvider::JM,63975:JM,63979
63975 :: CALL :: call :: Ljava/lang/Object :: v4 = v2.get()::JM,63975:JM,63979
63979 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST v4::DD,63980:DD,64001
63980 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 40::CF,64001:CD,63981:CD,63984:CD,63986:CD,63992
63981 :: CALL :: call :: Lorg/joda/time/tz/NameProvider :: v8 = getDefaultNameProvider()::JM,64001:JM,63986:JM,63992:CL,64170
63984 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v9 = org.joda.time.DateTimeZone.cNameProvider::JM,63986:JM,63992
63986 :: CALL :: call :: Z :: v11 = v9.compareAndSet(#(null), v8)::JM,63986:JM,63992:JM,64001
63992 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 40::CF,64001:CD,63993:CD,63995:CD,63999
63993 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicReference :: v13 = org.joda.time.DateTimeZone.cNameProvider::JM,63995:JM,63999
63995 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.get()::JM,63995:JM,63999
63999 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::DD,64001
64000 :: NORM :: compound :: Lorg/joda/time/tz/NameProvider :: return v17::DD,63971
64001 :: EXPR :: assign :: null :: PHI v17 = v5, v8, v16::CF,64000
64011 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.isStandardOffset(long)::CD,64016:CD,64021
64016 :: CALL :: call :: I :: v5 = p0 $null .getOffset(p1 $null )::CL,22651:CL,22661:CL,22668:CL,22544
64021 :: CALL :: call :: I :: v7 = p0 $null .getStandardOffset(p1 $null )::CL,22687:CL,22782
64036 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String,boolean)::CE,64037:CD,64044:CD,64052:CD,64058:CD,64059
64037 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String,boolean)::JM,63640
64044 :: CALL :: call :: [Ljava/lang/String :: v8 = p0 $null .getNameSet(p1 $null , p2 $null , p3 $null , p4 $null )::JM,64052:CL,64217
64052 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 23::CD,64059
64054 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v8[#(1)]::DD,64059
64058 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,64037
64059 :: EXPR :: assign :: null :: PHI v12 = #(null), v11::CF,64058
64071 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)::CE,64072:CD,64078:CD,64085:CD,64091:CD,64092
64072 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)::JM,63640
64078 :: CALL :: call :: [Ljava/lang/String :: v7 = p0 $null .getNameSet(p1 $null , p2 $null , p3 $null )::JM,64085:CL,64527
64085 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 21::CD,64092
64087 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v7[#(1)]::DD,64092
64091 :: NORM :: compound :: Ljava/lang/String :: return v11::DD,64072
64092 :: EXPR :: assign :: null :: PHI v11 = #(null), v10::CF,64091
64103 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String,boolean)::CE,64104:CD,64111:CD,64119:CD,64125:CD,64126
64104 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String,boolean)::JM,63734
64111 :: CALL :: call :: [Ljava/lang/String :: v8 = p0 $null .getNameSet(p1 $null , p2 $null , p3 $null , p4 $null )::JM,64119:CL,64217
64119 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 23::CD,64126
64121 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v8[#(0)]::DD,64126
64125 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,64104
64126 :: EXPR :: assign :: null :: PHI v12 = #(null), v11::CF,64125
64138 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)::CE,64139:CD,64145:CD,64152:CD,64158:CD,64159
64139 :: EXIT :: exit :: Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)::JM,63734
64145 :: CALL :: call :: [Ljava/lang/String :: v7 = p0 $null .getNameSet(p1 $null , p2 $null , p3 $null )::JM,64152:CL,64527
64152 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 21::CD,64159
64154 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v7[#(0)]::DD,64159
64158 :: NORM :: compound :: Ljava/lang/String :: return v11::DD,64139
64159 :: EXPR :: assign :: null :: PHI v11 = #(null), v10::CF,64158
64170 :: ENTR :: entry :: null :: org.joda.time.DateTimeZone.getDefaultNameProvider()::CE,64171:CD,64173:CD,64177:CD,64195:CD,64200:CD,64203:CD,64204:CD,64205
64171 :: EXIT :: exit :: Lorg/joda/time/tz/NameProvider :: org.joda.time.DateTimeZone.getDefaultNameProvider()::JM,64001:JM,63986:JM,63992
64173 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(org.joda.time.DateTim...))::JM,64177:JM,64178:JM,64182:JM,64186:JM,64173
64177 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 36::CF,64203:CD,64178:CD,64182:CD,64186
64178 :: CALL :: call :: Ljava/lang/Class :: v7 = forName(v5)::JM,64178:JM,64182:JM,64186
64182 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.newInstance()::JM,64182:JM,64186
64186 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,64203
64195 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 53::CF,64205:CF,64196:JM,64915:JM,64908
64196 :: NORM :: declaration :: Lorg/joda/time/tz/DefaultNameProvider :: v19 = new org.joda.time.tz.DefaultNameProvider::DD,64205
64200 :: NORM :: compound :: Lorg/joda/time/tz/NameProvider :: return v21::DD,64171
64203 :: EXPR :: assign :: null :: PHI v15 = #(null), v10::DD,64204
64204 :: EXPR :: assign :: null :: PHI v17 = v15, #(null)::DD,64195:DD,64205
64205 :: EXPR :: assign :: null :: PHI v21 = v17, v19::CF,64200
64217 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)::CE,64218:CD,64225:JM,64226:JM,64227:JM,64406:JM,64234
64218 :: EXIT :: exit :: [Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)::JM,64052:JM,64119
64225 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 13::CD,64226:CD,64228
64226 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 13::CD,64227:CD,64228
64227 :: PRED :: IF :: Z :: if (p3 $null  != #(null)) goto 17::CD,64228:CD,64229:CD,64234:CD,64243:CD,64248:CD,64249:CD,64263:CD,64268:CD,64269:CD,64398:CD,64403:CD,64404:CD,64405:CD,64406:JM,64227
64228 :: NORM :: compound :: [Ljava/lang/String :: return #(null)::DD,64218
64229 :: CALL :: call :: Z :: v10 = p2 $null .startsWith(#(Etc/))::JM,64227:JM,64406:JM,64234
64234 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 30::CF,64406:CD,64235:JM,64227:JM,64234
64235 :: CALL :: call :: Ljava/lang/String :: v14 = p2 $null .substring(#(4))::JM,64227:JM,64406:JM,64234
64243 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get(p1 $null )::JM,64248
64248 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,64249
64249 :: PRED :: IF :: Z :: if (v19 != #(null)) goto 66::CD,64253:CD,64257
64253 :: CALL :: call :: Ljava/util/HashMap :: v22 = p0 $null .createCache()::CL,64928
64257 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.put(p1 $null , v22)::
64263 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v15)::JM,64268
64268 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,64269
64269 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 319::CD,64270:CD,64274:CD,64282:CD,64286:CD,64290:CD,64291:CD,64312:CD,64316:CD,64320:CD,64321:CD,64342:CD,64408:CD,64409:CD,64410:CD,64411
64270 :: CALL :: call :: Ljava/util/HashMap :: v30 = p0 $null .createCache()::CL,64928
64274 :: CALL :: call :: Ljava/lang/Object :: v32 = v25.put(v15, v30)::
64282 :: CALL :: call :: Ljava/text/DateFormatSymbols :: v35 = getDateFormatSymbols(v33)::JM,64290:JM,64286:CL,59427
64286 :: CALL :: call :: [[Ljava/lang/String :: v37 = v35.getZoneStrings()::JM,64290:JM,64286
64290 :: EXPR :: assign :: I :: v38 = v37.length::DD,64291:CF,64408
64291 :: PRED :: IF :: Z :: if (v47 >= v38) goto 174::CF,64409:CD,64296
64292 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v37[v47]::DD,64296:DD,64297:DD,64409
64296 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 167::CD,64291:CD,64297:CD,64298:CD,64310:CD,64408:CD,64409
64297 :: EXPR :: assign :: I :: v40 = v39.length::DD,64298
64298 :: PRED :: IF :: Z :: if (v40 < #(5)) goto 167::CD,64291:CD,64303:CD,64308:CD,64310:CD,64408:CD,64409
64299 :: EXPR :: reference :: Ljava/lang/Object :: v42 = v39[#(0)]::JM,64308
64303 :: CALL :: call :: Z :: v44 = v15.equals(v42)::JM,64308
64308 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 167::CD,64291:CD,64310:CD,64408:CD,64409
64310 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,64408
64312 :: CALL :: call :: Ljava/text/DateFormatSymbols :: v50 = getDateFormatSymbols(p1 $null )::JM,64320:JM,64316:CL,59427
64316 :: CALL :: call :: [[Ljava/lang/String :: v52 = v50.getZoneStrings()::JM,64320:JM,64316
64320 :: EXPR :: assign :: I :: v53 = v52.length::DD,64321:CF,64410
64321 :: PRED :: IF :: Z :: if (v60 >= v53) goto 249::CF,64411:CD,64326
64322 :: EXPR :: reference :: Ljava/lang/Object :: v54 = v52[v60]::DD,64326:DD,64327:DD,64411
64326 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 241::CD,64321:CD,64327:CD,64328:CD,64340:CD,64410:CD,64411
64327 :: EXPR :: assign :: I :: v55 = v54.length::DD,64328
64328 :: PRED :: IF :: Z :: if (v55 < #(5)) goto 241::CD,64321:CD,64333:CD,64338:CD,64340:CD,64410:CD,64411
64329 :: EXPR :: reference :: Ljava/lang/Object :: v56 = v54[#(0)]::JM,64338
64333 :: CALL :: call :: Z :: v58 = v15.equals(v56)::JM,64338
64338 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 241::CD,64321:CD,64340:CD,64410:CD,64411
64340 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v60 + #(1)::DD,64410
64342 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 319::CD,64343
64343 :: PRED :: IF :: Z :: if (v61 == #(null)) goto 319::CD,64346:CD,64363:CD,64371:CD,64388
64346 :: NORM :: declaration :: [Ljava/lang/String :: v64 = new java.lang.String[]::
64347 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v61[#(2)]::DD,64351
64351 :: EXPR :: modify :: Ljava/lang/Object :: v64[#(0)] = v65::
64355 :: EXPR :: reference :: Ljava/lang/Object :: v66 = v61[#(1)]::DD,64359
64359 :: EXPR :: modify :: Ljava/lang/Object :: v64[#(1)] = v66::
64363 :: CALL :: call :: Ljava/lang/Object :: v68 = v30.put(v62, v64)::
64371 :: NORM :: declaration :: [Ljava/lang/String :: v70 = new java.lang.String[]::
64372 :: EXPR :: reference :: Ljava/lang/Object :: v71 = v61[#(4)]::DD,64376
64376 :: EXPR :: modify :: Ljava/lang/Object :: v70[#(0)] = v71::
64380 :: EXPR :: reference :: Ljava/lang/Object :: v73 = v61[#(3)]::DD,64384
64384 :: EXPR :: modify :: Ljava/lang/Object :: v70[#(1)] = v73::
64388 :: CALL :: call :: Ljava/lang/Object :: v75 = v30.put(v69, v70)::
64398 :: CALL :: call :: Ljava/lang/Object :: v80 = v76.get(v78)::JM,64403
64403 :: EXPR :: assign :: Ljava/lang/Object :: v81 = CHECKCAST v80::CF,64404
64404 :: EXPR :: assign :: Ljava/lang/Object :: v82 = CHECKCAST v81::CF,64405
64405 :: NORM :: compound :: [Ljava/lang/String :: return v82::DD,64218
64406 :: EXPR :: assign :: null :: PHI v15 = p2 $null , v14::JM,64308:JM,64338
64408 :: EXPR :: assign :: null :: PHI v47 = v46, #(0)::DD,64291:DD,64310
64409 :: EXPR :: assign :: null :: PHI v48 = #(null), v39::DD,64342
64410 :: EXPR :: assign :: null :: PHI v60 = v59, #(0)::DD,64321:DD,64340
64411 :: EXPR :: assign :: null :: PHI v61 = #(null), v54::DD,64343:CF,64342
64527 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)::CE,64528:CD,64534:JM,64535:JM,64536:JM,64636:JM,64606
64528 :: EXIT :: exit :: [Ljava/lang/String :: org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)::JM,64085:JM,64152
64534 :: PRED :: IF :: Z :: if (p1 $null  == #(null)) goto 13::CD,64535:CD,64537
64535 :: PRED :: IF :: Z :: if (p2 $null  == #(null)) goto 13::CD,64536:CD,64537
64536 :: PRED :: IF :: Z :: if (p3 $null  != #(null)) goto 15::CD,64537:CD,64541:CD,64546:CD,64547:CD,64561:CD,64566:CD,64567:CD,64756:CD,64761:CD,64762:CD,64763
64537 :: NORM :: compound :: [Ljava/lang/String :: return #(null)::DD,64528
64541 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(p1 $null )::JM,64546
64546 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,64547
64547 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 51::CD,64551:CD,64555
64551 :: CALL :: call :: Ljava/util/HashMap :: v13 = p0 $null .createCache()::CL,64928
64555 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.put(p1 $null , v13)::
64561 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get(p2 $null )::JM,64566
64566 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,64567
64567 :: PRED :: IF :: Z :: if (v19 != #(null)) goto 370::CD,64568:CD,64572:CD,64580:CD,64584:CD,64588:CD,64589:CD,64610:CD,64614:CD,64618:CD,64619:CD,64640:CD,64765:CD,64766:CD,64767:CD,64768
64568 :: CALL :: call :: Ljava/util/HashMap :: v21 = p0 $null .createCache()::CL,64928
64572 :: CALL :: call :: Ljava/lang/Object :: v23 = v16.put(p2 $null , v21)::
64580 :: CALL :: call :: Ljava/text/DateFormatSymbols :: v26 = getDateFormatSymbols(v24)::JM,64584:JM,64588:CL,59427
64584 :: CALL :: call :: [[Ljava/lang/String :: v28 = v26.getZoneStrings()::JM,64584:JM,64588
64588 :: EXPR :: assign :: I :: v29 = v28.length::DD,64589:CF,64765
64589 :: PRED :: IF :: Z :: if (v39 >= v29) goto 159::CF,64766:CD,64594
64590 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v28[v39]::DD,64594:DD,64595:DD,64766
64594 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 152::CD,64589:CD,64595:CD,64596:CD,64608:CD,64765:CD,64766
64595 :: EXPR :: assign :: I :: v32 = v31.length::DD,64596
64596 :: PRED :: IF :: Z :: if (v32 < #(5)) goto 152::CD,64589:CD,64601:CD,64606:CD,64608:CD,64765:CD,64766
64597 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v31[#(0)]::JM,64636:JM,64606
64601 :: CALL :: call :: Z :: v36 = p2 $null .equals(v34)::JM,64536:JM,64636:JM,64606
64606 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 152::CD,64589:CD,64608:CD,64765:CD,64766
64608 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v39 + #(1)::DD,64765
64610 :: CALL :: call :: Ljava/text/DateFormatSymbols :: v42 = getDateFormatSymbols(p1 $null )::JM,64614:JM,64618:CL,59427
64614 :: CALL :: call :: [[Ljava/lang/String :: v44 = v42.getZoneStrings()::JM,64614:JM,64618
64618 :: EXPR :: assign :: I :: v45 = v44.length::DD,64619:CF,64767
64619 :: PRED :: IF :: Z :: if (v52 >= v45) goto 234::CF,64768:CD,64624
64620 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v44[v52]::DD,64624:DD,64625:DD,64768
64624 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 226::CD,64619:CD,64625:CD,64626:CD,64638:CD,64767:CD,64768
64625 :: EXPR :: assign :: I :: v47 = v46.length::DD,64626
64626 :: PRED :: IF :: Z :: if (v47 < #(5)) goto 226::CD,64619:CD,64631:CD,64636:CD,64638:CD,64767:CD,64768
64627 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v46[#(0)]::JM,64636:JM,64606
64631 :: CALL :: call :: Z :: v50 = p2 $null .equals(v48)::JM,64536:JM,64636:JM,64606
64636 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 226::CD,64619:CD,64638:CD,64767:CD,64768
64638 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v52 + #(1)::DD,64767
64640 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 370::CD,64641
64641 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 370::CD,64646:CD,64663:CD,64677:CD,64682
64646 :: NORM :: declaration :: [Ljava/lang/String :: v56 = new java.lang.String[]::
64647 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v53[#(2)]::DD,64651
64651 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(0)] = v57::
64655 :: EXPR :: reference :: Ljava/lang/Object :: v58 = v53[#(1)]::DD,64659
64659 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(1)] = v58::
64663 :: CALL :: call :: Ljava/lang/Object :: v60 = v21.put(v55, v56)::
64669 :: EXPR :: reference :: Ljava/lang/Object :: v61 = v40[#(2)]::JM,64677:JM,64682
64673 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v40[#(4)]::JM,64677:JM,64682
64677 :: CALL :: call :: Z :: v65 = v61.equals(v63)::JM,64677:JM,64682
64682 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 342::CD,64683:CD,64691:CD,64696:CD,64701:CD,64705:CD,64722:CD,64733:CD,64750
64683 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
64687 :: EXPR :: reference :: Ljava/lang/Object :: v75 = v40[#(4)]::
64691 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v75)::
64696 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(-Summer))::
64701 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
64705 :: NORM :: declaration :: [Ljava/lang/String :: v83 = new java.lang.String[]::
64706 :: EXPR :: reference :: Ljava/lang/Object :: v84 = v53[#(4)]::DD,64710
64710 :: EXPR :: modify :: Ljava/lang/Object :: v83[#(0)] = v84::
64714 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v53[#(3)]::DD,64718
64718 :: EXPR :: modify :: Ljava/lang/Object :: v83[#(1)] = v85::
64722 :: CALL :: call :: Ljava/lang/Object :: v87 = v21.put(v82, v83)::
64733 :: NORM :: declaration :: [Ljava/lang/String :: v67 = new java.lang.String[]::
64734 :: EXPR :: reference :: Ljava/lang/Object :: v68 = v53[#(4)]::DD,64738
64738 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
64742 :: EXPR :: reference :: Ljava/lang/Object :: v70 = v53[#(3)]::DD,64746
64746 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v70::
64750 :: CALL :: call :: Ljava/lang/Object :: v72 = v21.put(v66, v67)::
64756 :: CALL :: call :: Ljava/lang/Object :: v90 = v88.get(p3 $null )::JM,64761
64761 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::CF,64762
64762 :: EXPR :: assign :: Ljava/lang/Object :: v92 = CHECKCAST v91::CF,64763
64763 :: NORM :: compound :: [Ljava/lang/String :: return v92::DD,64528
64765 :: EXPR :: assign :: null :: PHI v39 = v38, #(0)::DD,64589:DD,64608
64766 :: EXPR :: assign :: null :: PHI v40 = #(null), v31::DD,64640
64767 :: EXPR :: assign :: null :: PHI v52 = v51, #(0)::DD,64619:DD,64638
64768 :: EXPR :: assign :: null :: PHI v53 = #(null), v46::DD,64641:CF,64640
64908 :: CALL :: call :: Ljava/util/HashMap :: v5 = p0 $null .createCache()::CL,64928
64915 :: CALL :: call :: Ljava/util/HashMap :: v7 = p0 $null .createCache()::CL,64928
64928 :: ENTR :: entry :: null :: org.joda.time.tz.DefaultNameProvider.createCache()::CD,64932
64932 :: NORM :: declaration :: Ljava/util/HashMap :: v3 = new java.util.HashMap::
