[704, 699]
1 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.expandPath(java.lang.String)::CD,6:JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
6 :: PRED :: IF :: Z :: if (p1 $s  == #(null)) goto 12::CD,7:CD,11:JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
7 :: CALL :: call :: I :: v6 = p1 $s .length()::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
11 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,13:CD,18:CD,20:CD,25:CD,305:JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,307:JM,308:JM,603:JM,541:JM,127
13 :: CALL :: call :: I :: v10 = p1 $s .indexOf(#(42))::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
18 :: PRED :: IF :: Z :: if (v10 < #(0)) goto 31::CD,305
20 :: CALL :: call :: I :: v15 = p1 $s .indexOf(#(123))::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
25 :: PRED :: IF :: Z :: if (v15 < #(0)) goto 528::CF,26:CD,30:CD,34:CD,40:CD,190:CD,194:CD,242:CD,292:CD,306:CD,307:CD,308:CD,313
26 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::DD,306
30 :: CALL :: call :: I :: v22 = p1 $s .length()::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
34 :: CALL :: call :: I :: v24 = p1 $s .indexOf(#(123), v88)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
40 :: PRED :: IF :: Z :: if (v24 < #(0)) goto 332::CD,34:CD,41:CD,48:CD,49:CD,55:CD,60:CD,64:CD,164:CD,306:CD,307:CD,308:CD,312:JM,194:JM,6:JM,71:JM,40:JM,521:JM,11:JM,18:JM,25:JM,603:JM,541:JM,127
41 :: CALL :: call :: I :: v27 = p1 $s .indexOf(#(125), v24)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
48 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v24 + #(1)::JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127:JM,6
49 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $s .substring(v28, v27)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
55 :: CALL :: call :: [Ljava/lang/String :: v33 = v30.split(#(,))::JM,194:JM,71:JM,521:JM,541:JM,127
60 :: CALL :: call :: Z :: v35 = v87.isEmpty()::JM,64
64 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 180::CD,65:CD,71:CD,72:CD,103:CD,109:CD,113:CD,117:CD,121:CD,309:CD,310:CD,312:JM,194:JM,164:JM,6:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
65 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $s .substring(#(0), v24)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
71 :: EXPR :: assign :: I :: v38 = v33.length::DD,72:CF,309
72 :: PRED :: IF :: Z :: if (v51 >= v38) goto 173::CD,77:CD,81:CD,86:CD,91:CD,95:CD,100:CD,309:CD,310
73 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v33[v51]::
77 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
81 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(v37)::JM,194:JM,71:JM,521:JM,541:JM,127
86 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v43.append(v39)::
91 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
95 :: CALL :: call :: Z :: v49 = v90.add(v47)::
100 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v51 + #(1)::DD,310
103 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $s .substring(v89, v24)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
109 :: NORM :: declaration :: Ljava/util/ArrayList :: v54 = new java.util.ArrayList::DD,312
113 :: CALL :: call :: Ljava/util/Iterator :: v57 = v87.iterator()::JM,121:JM,126
117 :: CALL :: call :: Z :: v59 = v57.hasNext()::JM,121:JM,126
121 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 296::CD,117:CD,122:CD,126:CD,127:CD,128:CD,311:JM,121:CF,312
122 :: CALL :: call :: Ljava/lang/Object :: v61 = v57.next()::JM,121:JM,126
126 :: EXPR :: assign :: Ljava/lang/Object :: v62 = CHECKCAST v61::CF,127
127 :: EXPR :: assign :: I :: v63 = v33.length::DD,128:CF,311
128 :: PRED :: IF :: Z :: if (v78 >= v63) goto 286::CD,133:CD,137:CD,142:CD,147:CD,152:CD,156:CD,161:CD,311
129 :: EXPR :: reference :: Ljava/lang/Object :: v64 = v33[v78]::
133 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
137 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(v62)::
142 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v53)::JM,194:JM,71:JM,521:JM,541:JM,127
147 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v64)::
152 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
156 :: CALL :: call :: Z :: v76 = v54.add(v74)::
161 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v78 + #(1)::DD,311
164 :: EXPR :: assign :: Ljava/lang/Object :: v85 = v27 + #(1)::DD,308
190 :: CALL :: call :: I :: v101 = p1 $s .length()::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
194 :: PRED :: IF :: Z :: if (v89 >= v101) goto 418::CF,313:CD,195:CD,200:CD,204:CD,208:CD,212:JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
195 :: CALL :: call :: Ljava/lang/String :: v103 = p1 $s .substring(v89)::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
200 :: NORM :: declaration :: Ljava/util/ArrayList :: v104 = new java.util.ArrayList::DD,313
204 :: CALL :: call :: Ljava/util/Iterator :: v107 = v87.iterator()::JM,212:JM,217
208 :: CALL :: call :: Z :: v109 = v107.hasNext()::JM,212:JM,217
212 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 418::CD,208:CD,213:CD,217:CD,218:CD,222:CD,227:CD,232:CD,236:JM,212:CF,313
213 :: CALL :: call :: Ljava/lang/Object :: v111 = v107.next()::JM,212:JM,217
217 :: EXPR :: assign :: Ljava/lang/Object :: v112 = CHECKCAST v111::CF,218
218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
222 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v113.append(v112)::
227 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v116.append(v103)::JM,71:JM,521:JM,541:JM,127
232 :: CALL :: call :: Ljava/lang/String :: v120 = v118.toString()::
236 :: CALL :: call :: Z :: v122 = v104.add(v120)::
242 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 514::CF,243:CD,247:CD,251:CD,255
243 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::
247 :: CALL :: call :: Ljava/util/Iterator :: v132 = v124.iterator()::JM,260:JM,255
251 :: CALL :: call :: Z :: v134 = v132.hasNext()::JM,260:JM,255
255 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 514::CD,251:CD,256:CD,260:CD,261:CD,266:CD,267:CD,314:JM,255
256 :: CALL :: call :: Ljava/lang/Object :: v136 = v132.next()::JM,260:JM,255
260 :: EXPR :: assign :: Ljava/lang/Object :: v137 = CHECKCAST v136::JM,521:JM,603:JM,541
261 :: CALL :: call :: [Ljava/lang/String :: v139 = p0 $this .expandWildcards(v137)::JM,521:JM,603:JM,541:JM,266:CL,511
266 :: EXPR :: assign :: I :: v140 = v139.length::DD,267:CF,314
267 :: PRED :: IF :: Z :: if (v145 >= v140) goto 503::CD,272:CD,277:CD,314
268 :: EXPR :: reference :: Ljava/lang/Object :: v141 = v139[v145]::
272 :: CALL :: call :: Z :: v143 = v129.add(v141)::
277 :: EXPR :: assign :: Ljava/lang/Object :: v144 = v145 + #(1)::DD,314
292 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 538::CD,293
293 :: CALL :: call :: [Ljava/lang/String :: v18 = p0 $this .expandWildcards(p1 $s )::JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127:CL,511
305 :: EXPR :: assign :: null :: PHI v12 = #(1), #(0)::DD,242:DD,292:JM,194:JM,164:JM,6:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
306 :: EXPR :: assign :: null :: PHI v87 = v79, v19::CF,307:JM,64:JM,121:JM,126:JM,212:JM,217:DD,309:DD,313
307 :: EXPR :: assign :: null :: PHI v88 = v27, #(0)::CF,308:JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,25:JM,603:JM,541:JM,127
308 :: EXPR :: assign :: null :: PHI v89 = v85, v22::JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127:DD,194:JM,6
309 :: EXPR :: assign :: null :: PHI v90 = v90, v87::CF,310:DD,309:DD,312
310 :: EXPR :: assign :: null :: PHI v51 = v50, #(0)::DD,72:DD,100
311 :: EXPR :: assign :: null :: PHI v78 = v77, #(0)::DD,128:DD,161
312 :: EXPR :: assign :: null :: PHI v79 = v90, v54::DD,306:CF,164
313 :: EXPR :: assign :: null :: PHI v124 = v87, v104::JM,260:JM,255:CF,242
314 :: EXPR :: assign :: null :: PHI v145 = v144, #(0)::DD,267:DD,277
511 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.expandWildcards(java.lang.String)::CE,512:CD,516:CD,521:JM,194:JM,164:JM,71:JM,40:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
512 :: EXIT :: exit :: [Ljava/lang/String :: gov.nasa.jpf.util.PathnameExpander.expandWildcards(java.lang.String)::JM,266
516 :: CALL :: call :: I :: v6 = p1 $s .indexOf(#(42))::JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
521 :: PRED :: IF :: Z :: if (v6 < #(0)) goto 149::CD,522:CD,527:CD,535:CD,541:CD,542:CD,602:CD,607:CD,609:JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,127
522 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $s .split(#(\/))::JM,194:JM,164:JM,71:JM,40:JM,521:JM,11:JM,48:JM,18:JM,307:JM,308:JM,25:JM,603:JM,541:JM,127
527 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::JM,673:JM,692:JM,698:JM,669
531 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v12[#(0)]::JM,673:JM,692:JM,698:JM,669
535 :: CALL :: call :: I :: v17 = p0 $this .initializeMatchList(v13, v15)::JM,673:JM,692:JM,698:JM,669:JM,609:CL,663
541 :: EXPR :: assign :: I :: v18 = v12.length::CF,542
542 :: PRED :: IF :: Z :: if (v36 >= v18) goto 144::CF,543:CD,551:CD,556:CD,587:CD,591:CD,596:CD,601
543 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,591
547 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v12[v36]::JM,556:JM,562
551 :: CALL :: call :: I :: v23 = v21.indexOf(#(42))::JM,556
556 :: PRED :: IF :: Z :: if (v23 < #(0)) goto 115::CD,557:CD,562:CD,581
557 :: CALL :: call :: Z :: v26 = v21.equals(#(**))::JM,562
562 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 99::CD,563:CD,569:CD,574
563 :: CALL :: call :: V :: p0 $this .collectDirs(v35, v19)::CL,744
569 :: CALL :: call :: Ljava/util/regex/Pattern :: v29 = p0 $this .getPattern(v21)::CL,795
574 :: CALL :: call :: V :: p0 $this .collectMatchingNames(v35, v19, v29)::CL,897
581 :: CALL :: call :: V :: p0 $this .collectExistingFile(v35, v19, v21)::CL,990
587 :: CALL :: call :: Z :: v33 = v19.isEmpty()::JM,591
591 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 135::CD,541:CD,542:CD,592:CD,593:CD,594:CD,609
592 :: NORM :: declaration :: [Ljava/lang/String :: v39 = new java.lang.String[]::CF,593
593 :: NORM :: compound :: [Ljava/lang/String :: return v39::DD,512
594 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v36 + #(1)::DD,609
596 :: CALL :: call :: [Ljava/lang/String :: v38 = p0 $this .getPaths(v35)::JM,601:CL,1051
601 :: NORM :: compound :: [Ljava/lang/String :: return v38::DD,512
602 :: NORM :: declaration :: [Ljava/lang/String :: v9 = new java.lang.String[]::DD,607
603 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(0)] = p1 $s ::
607 :: NORM :: compound :: [Ljava/lang/String :: return v9::DD,512
609 :: EXPR :: assign :: null :: PHI v36 = v34, v17::DD,542:DD,594:CF,541
663 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.initializeMatchList(java.util.ArrayList,java.lang.String)::CE,664:CD,669:CD,673:JM,692:JM,698
664 :: EXIT :: exit :: I :: gov.nasa.jpf.util.PathnameExpander.initializeMatchList(java.util.ArrayList,java.lang.String)::JM,609
669 :: CALL :: call :: Z :: v6 = p2 $path .isEmpty()::JM,673:JM,692:JM,698:JM,669
673 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 27::CD,674:CD,675:CD,681:CD,686:CD,687:CD,692:JM,673:JM,698:JM,669
674 :: NORM :: declaration :: Ljava/io/File :: v23 = new java.io.File::JM,673:JM,692:JM,698:JM,669
675 :: EXPR :: reference :: Ljava/lang/String :: v24 = java.io.File.separator::
681 :: CALL :: call :: Z :: v27 = p1 $list .add(v23)::JM,673:JM,692:JM,698:JM,669
686 :: NORM :: compound :: I :: return #(1)::DD,664
687 :: CALL :: call :: Z :: v10 = p2 $path .equals(#(..))::JM,673:JM,692:JM,698:JM,669
692 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 43::CD,693:CD,698:CD,699:CD,704:CD,709:JM,673:JM,692:JM,669
693 :: CALL :: call :: Z :: v13 = p2 $path .equals(#(.))::JM,673:JM,692:JM,698:JM,669
698 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 58::CD,699:CD,704:CD,709:CD,710:CD,715:CD,720
699 :: NORM :: declaration :: Ljava/io/File :: v18 = new java.io.File::JM,673:JM,692:JM,698:JM,669
704 :: CALL :: call :: Z :: v21 = p1 $list .add(v18)::JM,673:JM,692:JM,698:JM,669
709 :: NORM :: compound :: I :: return #(1)::DD,664
710 :: NORM :: declaration :: Ljava/io/File :: v14 = new java.io.File::JM,673:JM,692:JM,698:JM,669
715 :: CALL :: call :: Z :: v17 = p1 $list .add(v14)::JM,673:JM,692:JM,698:JM,669
720 :: NORM :: compound :: I :: return #(0)::DD,664
744 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.collectDirs(java.util.ArrayList,java.util.ArrayList)::CD,750:CD,754:CD,758:JM,763
750 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $list .iterator()::JM,758:JM,763
754 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,758:JM,763
758 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CD,754:CD,759:CD,763:CD,764:CD,768:JM,758
759 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,758:JM,763
763 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,768:JM,758:JM,763
764 :: CALL :: call :: Z :: v14 = v12.isDirectory()::JM,768
768 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 47::CD,769:CD,774:JM,758:JM,763
769 :: CALL :: call :: Z :: v16 = p2 $newList .add(v12)::JM,758:JM,763
774 :: CALL :: call :: V :: p0 $this .collectSubdirs(p2 $newList , v12)::CL,1143
795 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.getPattern(java.lang.String)::CD,800:CD,804:CD,808:CD,852:CD,856:CD,861:JM,814
800 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
804 :: CALL :: call :: I :: v7 = p1 $s .length()::JM,808:JM,814
808 :: PRED :: IF :: Z :: if (v30 >= v7) goto 148::CD,809:CD,814:CD,850:CD,861:JM,808
809 :: CALL :: call :: C :: v10 = p1 $s .charAt(v30)::JM,808:JM,814
814 :: PRED :: IF :: null :: switch v10::CD,815:CD,821:CD,827:CD,833:CD,839:CD,845
815 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(#(\.))::
821 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v4.append(#(\$))::
827 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v4.append(#(\[))::
833 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v4.append(#(\]))::
839 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v4.append(#(.*))::
845 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v4.append(v10)::
850 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,861
852 :: CALL :: call :: Ljava/lang/String :: v32 = v4.toString()::
856 :: CALL :: call :: Ljava/util/regex/Pattern :: v34 = compile(v32)::
861 :: EXPR :: assign :: null :: PHI v30 = v29, #(0)::DD,808:JM,814:DD,850
897 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.collectMatchingNames(java.util.ArrayList,java.util.ArrayList,java.util.regex.Pattern)::CD,904:CD,908:CD,912:JM,917:JM,942
904 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $list .iterator()::JM,912:JM,917:JM,942
908 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,912:JM,917:JM,942
912 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 106::CD,908:CD,913:CD,917:CD,918:CD,922:JM,912:JM,942
913 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,912:JM,917:JM,942
917 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,922:JM,927
918 :: CALL :: call :: Z :: v15 = v13.isDirectory()::JM,922
922 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 103::CD,923:CD,927:CD,928:CD,958
923 :: CALL :: call :: [Ljava/lang/String :: v17 = v13.list()::JM,927
927 :: EXPR :: assign :: I :: v18 = v17.length::DD,928:CF,958
928 :: PRED :: IF :: Z :: if (v30 >= v18) goto 103::CD,933:CD,938:CD,942:CD,954:CD,958
929 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v17[v30]::JM,912:JM,917:JM,942
933 :: CALL :: call :: Ljava/util/regex/Matcher :: v21 = p3 $pattern .matcher(v19)::JM,912:JM,917:JM,942
938 :: CALL :: call :: Z :: v23 = v21.matches()::JM,912:JM,917:JM,942
942 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 97::CD,943:CD,949:CF,954
943 :: NORM :: declaration :: Ljava/io/File :: v24 = new java.io.File::JM,912:JM,917:JM,942
949 :: CALL :: call :: Z :: v27 = p2 $newList .add(v24)::JM,912:JM,917:JM,942
954 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,958
958 :: EXPR :: assign :: null :: PHI v30 = v29, #(0)::DD,928:DD,954
990 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.collectExistingFile(java.util.ArrayList,java.util.ArrayList,java.lang.String)::CD,997:CD,1001:CD,1005:JM,1010
997 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $list .iterator()::JM,1010:JM,1005
1001 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,1010:JM,1005
1005 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,1001:CD,1006:CD,1010:CD,1011:CD,1015:JM,1005
1006 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,1010:JM,1005
1010 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,1015
1011 :: CALL :: call :: Z :: v15 = v13.isDirectory()::JM,1015
1015 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 63::CF,1016:CD,1022:CD,1026
1016 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::JM,1026:JM,1010:JM,1005
1022 :: CALL :: call :: Z :: v19 = v16.exists()::JM,1026
1026 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 63::CD,1027:JM,1010:JM,1005
1027 :: CALL :: call :: Z :: v21 = p2 $newList .add(v16)::JM,1010:JM,1005
1051 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.getPaths(java.util.ArrayList)::CE,1052:CD,1056:CD,1060:CD,1061:CD,1065:CD,1069:CD,1108:CD,1109:JM,1074
1052 :: EXIT :: exit :: [Ljava/lang/String :: gov.nasa.jpf.util.PathnameExpander.getPaths(java.util.ArrayList)::JM,601
1056 :: CALL :: call :: I :: v5 = p1 $list .size()::JM,1074:JM,1060:JM,1069
1060 :: NORM :: declaration :: [Ljava/lang/String :: v6 = new java.lang.String[]::DD,1108:JM,1074:JM,1060:JM,1069
1061 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $list .iterator()::JM,1074:JM,1060:JM,1069
1065 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,1074:JM,1069
1069 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 107::CD,1065:CD,1070:CD,1074:CD,1075:CD,1079:CD,1083:CD,1102:CD,1109:CD,1110:JM,1069:CF,1108
1070 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,1074:JM,1069
1074 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1075 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getPath()::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1079 :: CALL :: call :: I :: v18 = v16.length()::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1083 :: PRED :: IF :: Z :: if (v18 <= #(1)) goto 97::CF,1110:CD,1084:CD,1089:JM,1090:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083
1084 :: CALL :: call :: C :: v21 = v16.charAt(#(0))::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1089 :: PRED :: IF :: Z :: if (v21 != #(46)) goto 97::CF,1110:CD,1090:CD,1095:JM,1089:JM,1079:JM,1096:JM,1097:JM,1083:JM,1084
1090 :: CALL :: call :: C :: v24 = v16.charAt(#(1))::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1095 :: PRED :: IF :: Z :: if (v24 == #(92)) goto 90::CD,1096:CD,1097:CD,1110:JM,1089:JM,1090:JM,1079:JM,1095:JM,1083:JM,1084
1096 :: PRED :: IF :: Z :: if (v24 != #(47)) goto 97::CF,1110:CD,1097:JM,1089:JM,1090:JM,1079:JM,1095:JM,1096:JM,1083:JM,1084
1097 :: CALL :: call :: Ljava/lang/String :: v29 = v16.substring(#(2))::JM,1089:JM,1090:JM,1110:JM,1079:JM,1095:JM,1096:JM,1097:JM,1083:JM,1084
1102 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v32 + #(1)::DD,1109
1103 :: EXPR :: modify :: Ljava/lang/Object :: v6[v32] = v30::
1108 :: NORM :: compound :: [Ljava/lang/String :: return v6::DD,1052
1109 :: EXPR :: assign :: null :: PHI v32 = v31, #(0)::JM,1074:JM,1069:DD,1102
1110 :: EXPR :: assign :: null :: PHI v30 = v16, v16, v16, v29::DD,1103:CF,1102
1143 :: ENTR :: entry :: null :: gov.nasa.jpf.util.PathnameExpander.collectSubdirs(java.util.ArrayList,java.io.File)::CD,1149:CD,1153:CD,1154:CD,1177
1149 :: CALL :: call :: [Ljava/io/File :: v6 = p2 $dir .listFiles()::JM,1153
1153 :: EXPR :: assign :: I :: v7 = v6.length::DD,1154:CF,1177
1154 :: PRED :: IF :: Z :: if (v17 >= v7) goto 53::CD,1159:CD,1163:CD,1174:CD,1177
1155 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v17]::JM,1163:JM,1153
1159 :: CALL :: call :: Z :: v11 = v9.isDirectory()::JM,1163
1163 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 47::CD,1164:CD,1169:JM,1153:CF,1174
1164 :: CALL :: call :: Z :: v13 = p1 $newList .add(v9)::JM,1153
1169 :: CALL :: call :: V :: p0 $this .collectSubdirs(p1 $newList , v9)::CL,1143
1174 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,1177
1177 :: EXPR :: assign :: null :: PHI v17 = v16, #(0)::DD,1154:DD,1174
