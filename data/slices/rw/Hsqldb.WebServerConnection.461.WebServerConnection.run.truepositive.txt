[17322]
1 :: ENTR :: entry :: null :: org.hsqldb.server.WebServerConnection.run()::CD,5:CD,9:CD,20:CD,31:CD,35:CD,42:CD,46:CD,49:CD,55:CD,91:CD,97:CD,98:CD,101:CD,107:CD,115:CD,208:CD,209:CD,210:JM,17442:JM,17228
5 :: NORM :: declaration :: Ljava/io/DataInputStream :: v4 = new java.io.DataInputStream::
6 :: EXPR :: reference :: Ljava/net/Socket :: v5 = p0 $this .socket::JM,9
9 :: CALL :: call :: Ljava/io/InputStream :: v7 = v5.getInputStream()::JM,9
20 :: CALL :: call :: I :: v12 = readLine(v4, v10)::JM,46:JM,31:CL,16748
31 :: PRED :: IF :: Z :: if (v12 < #(2)) goto 24::CD,20
32 :: EXPR :: reference :: Lorg/hsqldb/rowio/RowOutputBinary :: v14 = p0 $this .rowOut::JM,35:JM,107
35 :: CALL :: call :: [B :: v16 = v14.toByteArray()::JM,35:JM,107
39 :: EXPR :: reference :: Lorg/hsqldb/rowio/RowOutputBinary :: v17 = p0 $this .rowOut::JM,42:JM,46
42 :: CALL :: call :: I :: v19 = v17.size()::JM,42:JM,46
46 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 - v12::DD,59:DD,73:DD,87:DD,209
49 :: CALL :: call :: Z :: v23 = containsAt(v16, v20, v21)::JM,55:CL,16780
55 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 100::CD,56:CD,58:CD,59:CD,63:CD,69:CD,208:CD,209
56 :: EXPR :: reference :: [B :: v38 = org.hsqldb.server.WebServerConnection.BYTES_POST::CF,58
58 :: EXPR :: assign :: I :: v39 = v38.length::CF,59
59 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v20 + v39::DD,209
63 :: CALL :: call :: Z :: v26 = containsAt(v16, v20, v24)::JM,69:CL,16780
69 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 128::CD,70:CD,72:CD,73:CD,77:CD,83:CD,208:CD,209
70 :: EXPR :: reference :: [B :: v34 = org.hsqldb.server.WebServerConnection.BYTES_GET::CF,72
72 :: EXPR :: assign :: I :: v35 = v34.length::CF,73
73 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v20 + v35::DD,209
77 :: CALL :: call :: Z :: v29 = containsAt(v16, v20, v27)::JM,83:CL,16780
83 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 159::CD,84:CD,86:CD,87:CD,208:CD,209
84 :: EXPR :: reference :: [B :: v30 = org.hsqldb.server.WebServerConnection.BYTES_HEAD::CF,86
86 :: EXPR :: assign :: I :: v31 = v30.length::CF,87
87 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v20 + v31::DD,209
91 :: CALL :: call :: I :: v45 = countStartElementsAt(v16, v42, v43)::JM,97:JM,98:CL,16802
97 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CF,210
98 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v42 + v45::JM,107
101 :: CALL :: call :: I :: v50 = countNonStartElementsAt(v16, v47, v48)::JM,107:CL,16856
107 :: NORM :: declaration :: Ljava/lang/String :: v51 = new java.lang.String::JM,107:JM,17442:JM,17228
115 :: PRED :: IF :: null :: switch v46::CD,127:CD,133:JM,17442:JM,17228
127 :: CALL :: call :: V :: p0 $this .processGet(v51, #(1))::JM,17442:JM,17228:CL,17217
133 :: CALL :: call :: V :: p0 $this .processGet(v51, #(0))::JM,17442:JM,17228:CL,17217
208 :: EXPR :: assign :: null :: PHI v41 = #(3), #(1), #(2), #(0)::CF,209:DD,210
209 :: EXPR :: assign :: null :: PHI v42 = v40, v36, v32, v20::DD,98
210 :: EXPR :: assign :: null :: PHI v46 = v41, #(0)::DD,115:CF,98
505 :: ENTR :: entry :: null :: org.hsqldb.server.WebServerConnection.<clinit>()::CD,508:CD,513:CD,515:CD,520:CD,522:CD,527:CD,529:CD,537:CD,543:CD,554
508 :: CALL :: call :: [B :: v5 = #(GET).getBytes(#(ISO-8859-1))::JM,513
513 :: EXPR :: modify :: [B :: org.hsqldb.server.WebServerConnection.BYTES_GET = v5::
515 :: CALL :: call :: [B :: v8 = #(HEAD).getBytes(#(ISO-8859-1))::JM,520
520 :: EXPR :: modify :: [B :: org.hsqldb.server.WebServerConnection.BYTES_HEAD = v8::
522 :: CALL :: call :: [B :: v11 = #(POST).getBytes(#(ISO-8859-1))::JM,527
527 :: EXPR :: modify :: [B :: org.hsqldb.server.WebServerConnection.BYTES_POST = v11::
529 :: CALL :: call :: [B :: v14 = #(Content-Length: ).getBytes(#(ISO-8859-1))::
537 :: CALL :: call :: Ljava/lang/RuntimeException :: v19 = runtimeError(#(201), #(RowOutputTextLog))::CL,17500
543 :: NORM :: declaration :: [B :: v21 = new []::
544 :: EXPR :: modify :: B :: v21[#(0)] = #(32)::
548 :: EXPR :: modify :: B :: v21[#(1)] = #(9)::
554 :: CALL :: call :: I :: v29 = getBundleHandle(#(webserver-content-types), #(null))::CL,17525
586 :: ENTR :: entry :: null :: org.hsqldb.error.Error.<clinit>()::CD,593
593 :: CALL :: call :: I :: v6 = getBundleHandle(#(sql-state-messages), #(null))::CL,17525
608 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.<clinit>()::CD,617:JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:JM,17796:CD,634
617 :: CALL :: call :: Ljava/util/Locale :: v5 = getDefault()::
634 :: CALL :: call :: Ljava/lang/reflect/Method :: v11 = getNewGetBundleMethod()::CL,17804
648 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.<clinit>()::JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:CD,661:CD,671:CD,681:CD,691:CD,701:CD,711:CD,721:CD,731:CD,740
661 :: CALL :: call :: Z :: v8 = v4.put(v5, #(66))::CL,17856
671 :: CALL :: call :: Z :: v13 = v9.put(v10, #(83))::CL,17856
681 :: CALL :: call :: Z :: v17 = v14.put(v15, #(83))::CL,17856
691 :: CALL :: call :: Z :: v22 = v18.put(v19, #(73))::CL,17856
701 :: CALL :: call :: Z :: v27 = v23.put(v24, #(74))::CL,17856
711 :: CALL :: call :: Z :: v32 = v28.put(v29, #(70))::CL,17856
721 :: CALL :: call :: Z :: v37 = v33.put(v34, #(68))::CL,17856
731 :: CALL :: call :: Z :: v42 = v38.put(v39, #(90))::CL,17856
740 :: CALL :: call :: Z :: v47 = v43.put(v44, #(76))::CL,17856
788 :: ENTR :: entry :: null :: org.hsqldb.server.WebServer.<clinit>()::CD,791
791 :: CALL :: call :: I :: v5 = getBundleHandle(#(webserver-pages), #(null))::CL,17525
802 :: ENTR :: entry :: null :: org.hsqldb.server.Server.<clinit>()::CD,805
805 :: CALL :: call :: I :: v5 = getBundleHandle(#(org_hsqldb_server_Ser...), #(null))::CL,17525
911 :: ENTR :: entry :: null :: org.hsqldb.DatabaseManager.<clinit>()::JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:JM,33456:JM,33426:JM,33427:JM,27156:JM,21766:JM,33446:JM,21783:JM,33431:JM,33436:JM,33452:JM,21789:JM,21775
963 :: ENTR :: entry :: null :: org.hsqldb.result.Result.<clinit>()::CD,979:CD,983:CD,1004:CD,1016:CD,1031:CD,1046:CD,1061:CD,1067:CD,1070:CD,1078:CD,1084:CD,1090:CD,1097
979 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v13 = newResultMetaData(#(4))::JM,983:CL,18036
983 :: EXPR :: modify :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.Result.sessionAttributesMetaData = v13::
986 :: EXPR :: reference :: Lorg/hsqldb/result/ResultMetaData :: v14 = org.hsqldb.result.Result.sessionAttributesMetaData::
988 :: EXPR :: reference :: [Lorg/hsqldb/ColumnBase :: v15 = v14.columns::
991 :: NORM :: declaration :: Lorg/hsqldb/ColumnBase :: v16 = new org.hsqldb.ColumnBase::DD,999
999 :: EXPR :: modify :: Ljava/lang/Object :: v15[v21] = v16::
1003 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,1097
1004 :: PRED :: IF :: Z :: if (v21 < #(4)) goto 33::CD,986:CD,991:JM,18069:JM,18072:JM,18075:JM,18078:CD,1003:CD,1097
1016 :: CALL :: call :: V :: v24.setType(v25)::CL,18093
1031 :: CALL :: call :: V :: v29.setType(v30)::CL,18093
1046 :: CALL :: call :: V :: v35.setType(v36)::CL,18093
1061 :: CALL :: call :: V :: v41.setType(v42)::CL,18093
1067 :: CALL :: call :: V :: v44.prepareData()::CL,18104
1070 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v47 = newResultMetaData(#(0))::CL,18036
1078 :: CALL :: call :: Lorg/hsqldb/result/Result :: v50 = newDataResult(v48)::CL,18161
1084 :: CALL :: call :: Lorg/hsqldb/result/Result :: v52 = newUpdateCountResult(#(0))::CL,18187
1090 :: CALL :: call :: Lorg/hsqldb/result/Result :: v54 = newUpdateCountResult(#(1))::CL,18187
1097 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,1003:DD,1004
1143 :: ENTR :: entry :: null :: org.hsqldb.HsqlException.<clinit>()::CD,1149
1149 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(1100))::CL,18247
1168 :: ENTR :: entry :: null :: org.hsqldb.SqlInvariants.<clinit>()::CD,1171:CD,1178:CD,1183:CD,1185:CD,1192:CD,1199:CD,1206:CD,1213:CD,1218:CD,1220:CD,1222:CD,1227:CD,1232:CD,1234:CD,1236:CD,1241:CD,1252
1171 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5 = newSystemObjectName(#(INFORMATION_SCHEMA), #(2))::CL,18263
1178 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v8 = newSystemObjectName(#(SYSTEM_SCHEMA), #(2))::JM,1183:CL,18263
1183 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.SYSTEM_SCHEMA_HSQLNAME = v8::
1185 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v11 = newSystemObjectName(#(SYSTEM_LOBS), #(2))::CL,18263
1192 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v14 = newSystemObjectName(#(SQLJ), #(2))::CL,18263
1199 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v18 = newSystemObjectName(#(SYSTEM_SUBQUERY), #(3))::CL,18263
1206 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v21 = newSystemObjectName(#(MODULE), #(2))::CL,18263
1213 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v24 = newSystemObjectName(#(DUAL), #(3))::JM,1218:CL,18263
1218 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME = v24::
1220 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v25 = org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME::
1222 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v26 = org.hsqldb.SqlInvariants.SYSTEM_SCHEMA_HSQLNAME::DD,1224
1224 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v25.schema = v26::
1227 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v30 = newSystemObjectName(#(DUMMY), #(9))::JM,1232:CL,18263
1232 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.DUAL_COLUMN_HSQLNAME = v30::
1234 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v31 = org.hsqldb.SqlInvariants.DUAL_COLUMN_HSQLNAME::
1236 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v32 = org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME::DD,1238
1238 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v31.parent = v32::
1241 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v36 = newSystemObjectName(#(IDX), #(20))::CL,18263
1252 :: CALL :: call :: V :: v37.setSchemaIfNull(v38)::CL,18286
1288 :: ENTR :: entry :: null :: org.hsqldb.types.Charset.<clinit>()::CD,1291:CD,1292:CD,1307:CD,1308:CD,1321:CD,1334:CD,1349:CD,1350:CD,1363:CD,1376:CD,1389:CD,1404:JM,18344:CD,1417:CD,1430:CD,1443:CD,1456:CD,1469:CD,1482:CD,1495:CD,1508:CD,1521:CD,1534
1291 :: NORM :: declaration :: [[I :: v3 = new [][]::CF,1292
1292 :: NORM :: declaration :: [I :: v6 = new []::DD,1301
1293 :: EXPR :: modify :: I :: v6[#(0)] = #(65)::
1297 :: EXPR :: modify :: I :: v6[#(1)] = #(90)::
1301 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = v6::
1307 :: NORM :: declaration :: [[I :: v10 = new [][]::CF,1308
1308 :: NORM :: declaration :: [I :: v11 = new []::DD,1317
1309 :: EXPR :: modify :: I :: v11[#(0)] = #(48)::
1313 :: EXPR :: modify :: I :: v11[#(1)] = #(57)::
1317 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = v11::
1321 :: NORM :: declaration :: [I :: v14 = new []::DD,1330
1322 :: EXPR :: modify :: I :: v14[#(0)] = #(65)::
1326 :: EXPR :: modify :: I :: v14[#(1)] = #(90)::
1330 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = v14::
1334 :: NORM :: declaration :: [I :: v15 = new []::DD,1343
1335 :: EXPR :: modify :: I :: v15[#(0)] = #(95)::
1339 :: EXPR :: modify :: I :: v15[#(1)] = #(95)::
1343 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = v15::
1349 :: NORM :: declaration :: [[I :: v18 = new [][]::CF,1350
1350 :: NORM :: declaration :: [I :: v19 = new []::DD,1359
1351 :: EXPR :: modify :: I :: v19[#(0)] = #(48)::
1355 :: EXPR :: modify :: I :: v19[#(1)] = #(57)::
1359 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
1363 :: NORM :: declaration :: [I :: v20 = new []::DD,1372
1364 :: EXPR :: modify :: I :: v20[#(0)] = #(65)::
1368 :: EXPR :: modify :: I :: v20[#(1)] = #(90)::
1372 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
1376 :: NORM :: declaration :: [I :: v21 = new []::DD,1385
1377 :: EXPR :: modify :: I :: v21[#(0)] = #(95)::
1381 :: EXPR :: modify :: I :: v21[#(1)] = #(95)::
1385 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
1389 :: NORM :: declaration :: [I :: v22 = new []::DD,1398
1390 :: EXPR :: modify :: I :: v22[#(0)] = #(97)::
1394 :: EXPR :: modify :: I :: v22[#(1)] = #(122)::
1398 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(3)] = v22::
1404 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v28 = newInfoSchemaObjectName(#(SQL_TEXT), #(0), #(14))::CL,18303
1417 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v33 = newInfoSchemaObjectName(#(SQL_IDENTIFIER), #(0), #(14))::CL,18303
1430 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v38 = newInfoSchemaObjectName(#(SQL_CHARACTER), #(0), #(14))::CL,18303
1443 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v43 = newInfoSchemaObjectName(#(LATIN1), #(0), #(14))::CL,18303
1456 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v48 = newInfoSchemaObjectName(#(ASCII_GRAPHIC), #(0), #(14))::CL,18303
1469 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v53 = newInfoSchemaObjectName(#(GRAPHIC_IRV), #(0), #(14))::CL,18303
1482 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v58 = newInfoSchemaObjectName(#(ASCII_FULL), #(0), #(14))::CL,18303
1495 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v63 = newInfoSchemaObjectName(#(ISO8BIT), #(0), #(14))::CL,18303
1508 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v68 = newInfoSchemaObjectName(#(UTF32), #(0), #(14))::CL,18303
1521 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v73 = newInfoSchemaObjectName(#(UTF16), #(0), #(14))::CL,18303
1534 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v78 = newInfoSchemaObjectName(#(UTF8), #(0), #(14))::CL,18303
1703 :: ENTR :: entry :: null :: org.hsqldb.types.Collation.<clinit>()::JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:CD,1733:CD,1741:CD,1749:CD,1757:CD,1765:CD,1773:CD,1781:CD,1789:CD,1797:CD,1805:CD,1813:CD,1821:CD,1829:CD,1837:CD,1845:CD,1853:CD,1861:CD,1869:CD,1877:CD,1885:CD,1893:CD,1901:CD,1909:CD,1917:CD,1925:CD,1933:CD,1941:CD,1949:CD,1957:CD,1965:CD,1973:CD,1981:CD,1989:CD,1997:CD,2005:CD,2013:CD,2021:CD,2029:CD,2037:CD,2045:CD,2053:CD,2061:CD,2069:CD,2077:CD,2085:CD,2093:CD,2101:CD,2109:CD,2117:CD,2125:CD,2133:CD,2141:CD,2149:CD,2157:CD,2165:CD,2173:CD,2181:CD,2189:CD,2197:CD,2205:CD,2213:CD,2221:CD,2229:CD,2237:CD,2245:CD,2253:CD,2261:CD,2269:CD,2277:CD,2285:CD,2293:CD,2301:CD,2309:CD,2317:CD,2325:CD,2333:CD,2341:CD,2349:CD,2357:CD,2365:CD,2373:CD,2381:CD,2389:CD,2397:CD,2405:CD,2413:CD,2421:CD,2429:CD,2437:CD,2445:CD,2453:CD,2461:CD,2469:CD,2477:CD,2485:CD,2493:CD,2497:CD,2528:CD,2532:CD,2533:JM,18608:JM,18617:JM,18603:CD,2538:CD,2540:CD,2545:CD,2547:CD,2549:CD,2554:CD,2556:CD,2567:CD,2579
1733 :: CALL :: call :: Ljava/lang/Object :: v16 = v12.put(#(Afrikaans), #(af-ZA))::CL,18369
1741 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.put(#(Amharic), #(am-ET))::CL,18369
1749 :: CALL :: call :: Ljava/lang/Object :: v26 = v22.put(#(Arabic), #(ar))::CL,18369
1757 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.put(#(Assamese), #(as-IN))::CL,18369
1765 :: CALL :: call :: Ljava/lang/Object :: v36 = v32.put(#(Azerbaijani_Latin), #(az-AZ))::CL,18369
1773 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(#(Azerbaijani_Cyrillic), #(az-cyrillic))::CL,18369
1781 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.put(#(Belarusian), #(be-BY))::CL,18369
1789 :: CALL :: call :: Ljava/lang/Object :: v51 = v47.put(#(Bulgarian), #(bg-BG))::CL,18369
1797 :: CALL :: call :: Ljava/lang/Object :: v56 = v52.put(#(Bengali), #(bn-IN))::CL,18369
1805 :: CALL :: call :: Ljava/lang/Object :: v61 = v57.put(#(Tibetan), #(bo-CN))::CL,18369
1813 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.put(#(Bosnian), #(bs-BA))::CL,18369
1821 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.put(#(Catalan), #(ca-ES))::CL,18369
1829 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.put(#(Czech), #(cs-CZ))::CL,18369
1837 :: CALL :: call :: Ljava/lang/Object :: v81 = v77.put(#(Welsh), #(cy-GB))::CL,18369
1845 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.put(#(Danish), #(da-DK))::CL,18369
1853 :: CALL :: call :: Ljava/lang/Object :: v91 = v87.put(#(German), #(de-DE))::CL,18369
1861 :: CALL :: call :: Ljava/lang/Object :: v96 = v92.put(#(Greek), #(el-GR))::CL,18369
1869 :: CALL :: call :: Ljava/lang/Object :: v101 = v97.put(#(Latin1_General), #(en-US))::CL,18369
1877 :: CALL :: call :: Ljava/lang/Object :: v105 = v102.put(#(English), #(en-US))::CL,18369
1885 :: CALL :: call :: Ljava/lang/Object :: v110 = v106.put(#(Spanish), #(es-ES))::CL,18369
1893 :: CALL :: call :: Ljava/lang/Object :: v115 = v111.put(#(Estonian), #(et-EE))::CL,18369
1901 :: CALL :: call :: Ljava/lang/Object :: v120 = v116.put(#(Basque), #(eu))::CL,18369
1909 :: CALL :: call :: Ljava/lang/Object :: v125 = v121.put(#(Finnish), #(fi-FI))::CL,18369
1917 :: CALL :: call :: Ljava/lang/Object :: v130 = v126.put(#(French), #(fr-FR))::CL,18369
1925 :: CALL :: call :: Ljava/lang/Object :: v135 = v131.put(#(Guarani), #(gn-PY))::CL,18369
1933 :: CALL :: call :: Ljava/lang/Object :: v140 = v136.put(#(Gujarati), #(gu-IN))::CL,18369
1941 :: CALL :: call :: Ljava/lang/Object :: v145 = v141.put(#(Hausa), #(ha-NG))::CL,18369
1949 :: CALL :: call :: Ljava/lang/Object :: v150 = v146.put(#(Hebrew), #(he-IL))::CL,18369
1957 :: CALL :: call :: Ljava/lang/Object :: v155 = v151.put(#(Hindi), #(hi-IN))::CL,18369
1965 :: CALL :: call :: Ljava/lang/Object :: v160 = v156.put(#(Croatian), #(hr-HR))::CL,18369
1973 :: CALL :: call :: Ljava/lang/Object :: v165 = v161.put(#(Hungarian), #(hu-HU))::CL,18369
1981 :: CALL :: call :: Ljava/lang/Object :: v170 = v166.put(#(Armenian), #(hy-AM))::CL,18369
1989 :: CALL :: call :: Ljava/lang/Object :: v175 = v171.put(#(Indonesian), #(id-ID))::CL,18369
1997 :: CALL :: call :: Ljava/lang/Object :: v180 = v176.put(#(Igbo), #(ig-NG))::CL,18369
2005 :: CALL :: call :: Ljava/lang/Object :: v185 = v181.put(#(Icelandic), #(is-IS))::CL,18369
2013 :: CALL :: call :: Ljava/lang/Object :: v190 = v186.put(#(Italian), #(it-IT))::CL,18369
2021 :: CALL :: call :: Ljava/lang/Object :: v195 = v191.put(#(Inuktitut), #(iu-CA))::CL,18369
2029 :: CALL :: call :: Ljava/lang/Object :: v200 = v196.put(#(Japanese), #(ja-JP))::CL,18369
2037 :: CALL :: call :: Ljava/lang/Object :: v205 = v201.put(#(Georgian), #(ka-GE))::CL,18369
2045 :: CALL :: call :: Ljava/lang/Object :: v210 = v206.put(#(Kazakh), #(kk-KZ))::CL,18369
2053 :: CALL :: call :: Ljava/lang/Object :: v215 = v211.put(#(Khmer), #(km-KH))::CL,18369
2061 :: CALL :: call :: Ljava/lang/Object :: v220 = v216.put(#(Kannada), #(kn-IN))::CL,18369
2069 :: CALL :: call :: Ljava/lang/Object :: v225 = v221.put(#(Korean), #(ko-KR))::CL,18369
2077 :: CALL :: call :: Ljava/lang/Object :: v230 = v226.put(#(Konkani), #(kok-IN))::CL,18369
2085 :: CALL :: call :: Ljava/lang/Object :: v235 = v231.put(#(Kashmiri), #(ks))::CL,18369
2093 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.put(#(Kirghiz), #(ky-KG))::CL,18369
2101 :: CALL :: call :: Ljava/lang/Object :: v245 = v241.put(#(Lao), #(lo-LA))::CL,18369
2109 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.put(#(Lithuanian), #(lt-LT))::CL,18369
2117 :: CALL :: call :: Ljava/lang/Object :: v255 = v251.put(#(Latvian), #(lv-LV))::CL,18369
2125 :: CALL :: call :: Ljava/lang/Object :: v260 = v256.put(#(Maori), #(mi-NZ))::CL,18369
2133 :: CALL :: call :: Ljava/lang/Object :: v265 = v261.put(#(Macedonian), #(mk-MK))::CL,18369
2141 :: CALL :: call :: Ljava/lang/Object :: v270 = v266.put(#(Malayalam), #(ml-IN))::CL,18369
2149 :: CALL :: call :: Ljava/lang/Object :: v275 = v271.put(#(Mongolian), #(mn-MN))::CL,18369
2157 :: CALL :: call :: Ljava/lang/Object :: v280 = v276.put(#(Manipuri), #(mni-IN))::CL,18369
2165 :: CALL :: call :: Ljava/lang/Object :: v285 = v281.put(#(Marathi), #(mr-IN))::CL,18369
2173 :: CALL :: call :: Ljava/lang/Object :: v290 = v286.put(#(Malay), #(ms-MY))::CL,18369
2181 :: CALL :: call :: Ljava/lang/Object :: v295 = v291.put(#(Maltese), #(mt-MT))::CL,18369
2189 :: CALL :: call :: Ljava/lang/Object :: v300 = v296.put(#(Burmese), #(my-MM))::CL,18369
2197 :: CALL :: call :: Ljava/lang/Object :: v305 = v301.put(#(Danish_Norwegian), #(nb-NO))::CL,18369
2205 :: CALL :: call :: Ljava/lang/Object :: v310 = v306.put(#(Nepali), #(ne-NP))::CL,18369
2213 :: CALL :: call :: Ljava/lang/Object :: v315 = v311.put(#(Dutch), #(nl-NL))::CL,18369
2221 :: CALL :: call :: Ljava/lang/Object :: v320 = v316.put(#(Norwegian), #(nn-NO))::CL,18369
2229 :: CALL :: call :: Ljava/lang/Object :: v325 = v321.put(#(Oriya), #(or-IN))::CL,18369
2237 :: CALL :: call :: Ljava/lang/Object :: v330 = v326.put(#(Punjabi), #(pa-IN))::CL,18369
2245 :: CALL :: call :: Ljava/lang/Object :: v335 = v331.put(#(Polish), #(pl-PL))::CL,18369
2253 :: CALL :: call :: Ljava/lang/Object :: v340 = v336.put(#(Pashto), #(ps-AF))::CL,18369
2261 :: CALL :: call :: Ljava/lang/Object :: v345 = v341.put(#(Portuguese), #(pt-PT))::CL,18369
2269 :: CALL :: call :: Ljava/lang/Object :: v350 = v346.put(#(Romanian), #(ro-RO))::CL,18369
2277 :: CALL :: call :: Ljava/lang/Object :: v355 = v351.put(#(Russian), #(ru-RU))::CL,18369
2285 :: CALL :: call :: Ljava/lang/Object :: v360 = v356.put(#(Sanskrit), #(sa-IN))::CL,18369
2293 :: CALL :: call :: Ljava/lang/Object :: v365 = v361.put(#(Sindhi), #(sd-IN))::CL,18369
2301 :: CALL :: call :: Ljava/lang/Object :: v370 = v366.put(#(Slovak), #(sk-SK))::CL,18369
2309 :: CALL :: call :: Ljava/lang/Object :: v375 = v371.put(#(Slovenian), #(sl-SI))::CL,18369
2317 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.put(#(Somali), #(so-SO))::CL,18369
2325 :: CALL :: call :: Ljava/lang/Object :: v385 = v381.put(#(Albanian), #(sq-AL))::CL,18369
2333 :: CALL :: call :: Ljava/lang/Object :: v390 = v386.put(#(Serbian_Cyrillic), #(sr-YU))::CL,18369
2341 :: CALL :: call :: Ljava/lang/Object :: v395 = v391.put(#(Serbian_Latin), #(sh-BA))::CL,18369
2349 :: CALL :: call :: Ljava/lang/Object :: v400 = v396.put(#(Swedish), #(sv-SE))::CL,18369
2357 :: CALL :: call :: Ljava/lang/Object :: v405 = v401.put(#(Swahili), #(sw-KE))::CL,18369
2365 :: CALL :: call :: Ljava/lang/Object :: v410 = v406.put(#(Tamil), #(ta-IN))::CL,18369
2373 :: CALL :: call :: Ljava/lang/Object :: v415 = v411.put(#(Telugu), #(te-IN))::CL,18369
2381 :: CALL :: call :: Ljava/lang/Object :: v420 = v416.put(#(Tajik), #(tg-TJ))::CL,18369
2389 :: CALL :: call :: Ljava/lang/Object :: v425 = v421.put(#(Thai), #(th-TH))::CL,18369
2397 :: CALL :: call :: Ljava/lang/Object :: v430 = v426.put(#(Turkmen), #(tk-TM))::CL,18369
2405 :: CALL :: call :: Ljava/lang/Object :: v435 = v431.put(#(Tswana), #(tn-BW))::CL,18369
2413 :: CALL :: call :: Ljava/lang/Object :: v440 = v436.put(#(Turkish), #(tr-TR))::CL,18369
2421 :: CALL :: call :: Ljava/lang/Object :: v445 = v441.put(#(Tatar), #(tt-RU))::CL,18369
2429 :: CALL :: call :: Ljava/lang/Object :: v450 = v446.put(#(Ukrainian), #(uk-UA))::CL,18369
2437 :: CALL :: call :: Ljava/lang/Object :: v455 = v451.put(#(Urdu), #(ur-PK))::CL,18369
2445 :: CALL :: call :: Ljava/lang/Object :: v460 = v456.put(#(Uzbek_Latin), #(uz-UZ))::CL,18369
2453 :: CALL :: call :: Ljava/lang/Object :: v465 = v461.put(#(Venda), #(ven-ZA))::CL,18369
2461 :: CALL :: call :: Ljava/lang/Object :: v470 = v466.put(#(Vietnamese), #(vi-VN))::CL,18369
2469 :: CALL :: call :: Ljava/lang/Object :: v475 = v471.put(#(Yoruba), #(yo-NG))::CL,18369
2477 :: CALL :: call :: Ljava/lang/Object :: v480 = v476.put(#(Chinese), #(zh-CN))::CL,18369
2485 :: CALL :: call :: Ljava/lang/Object :: v485 = v481.put(#(Zulu), #(zu-ZA))::CL,18369
2493 :: CALL :: call :: Lorg/hsqldb/lib/Collection :: v488 = v486.values()::CL,18391
2497 :: CALL :: call :: Lorg/hsqldb/lib/Iterator :: v490 = v488.iterator()::CL,18417
2502 :: CALL :: call :: Ljava/lang/Object :: v495 = v490.next()::JM,2506:CL,18440
2506 :: EXPR :: assign :: Ljava/lang/Object :: v496 = CHECKCAST v495::
2507 :: CALL :: call :: Ljava/lang/String :: v500 = v496.replace(#(45), #(95))::
2513 :: EXPR :: reference :: Ljava/util/Locale :: v501 = java.util.Locale.ENGLISH::
2515 :: CALL :: call :: Ljava/lang/String :: v503 = v500.toUpperCase(v501)::
2522 :: CALL :: call :: Ljava/lang/Object :: v506 = v504.put(v503, v496)::CL,18369
2528 :: CALL :: call :: Z :: v492 = v490.hasNext()::JM,2532:CL,18563
2532 :: PRED :: IF :: Z :: if (v492 != #(0)) goto 1197::CF,2533:CD,2502:CD,2506:CD,2507:CD,2513:CD,2515:CD,2522:CD,2528
2533 :: NORM :: declaration :: Lorg/hsqldb/types/Collation :: v507 = new org.hsqldb.types.Collation::DD,2538
2538 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.defaultCollation = v507::
2540 :: NORM :: declaration :: Lorg/hsqldb/types/Collation :: v510 = new org.hsqldb.types.Collation::DD,2545
2545 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.defaultIgnoreCaseCollation = v510::
2547 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v512 = org.hsqldb.types.Collation.defaultCollation::
2549 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v513 = org.hsqldb.types.Charset.SQL_TEXT::DD,2551
2551 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: v512.charset = v513::
2554 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v514 = org.hsqldb.types.Collation.defaultIgnoreCaseCollation::
2556 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v515 = org.hsqldb.types.Charset.SQL_TEXT::DD,2558
2558 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: v514.charset = v515::
2567 :: CALL :: call :: Ljava/lang/Object :: v520 = v516.put(v517, v518)::CL,18369
2579 :: CALL :: call :: Ljava/lang/Object :: v525 = v521.put(v522, v523)::CL,18369
2913 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.<clinit>()::CD,2916:CD,2922
2916 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v4 = newResultMetaData(#(0))::CL,18036
2922 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v6 = newParameterMetaData(#(0))::CL,18642
2933 :: ENTR :: entry :: null :: org.hsqldb.types.Type.<clinit>()::JM,18722:JM,22405:JM,18710:JM,22390:JM,22393:JM,18716:JM,22396:JM,22414:JM,22399:JM,18867:JM,18842:JM,18912:JM,22465:JM,22498:JM,18920:JM,22511:JM,22487:JM,18906:JM,18907:CD,3213:CD,3221:CD,3229:CD,3237:CD,3245:CD,3253:CD,3261:CD,3269:CD,3277:CD,3285:CD,3293:CD,3301:CD,3309:CD,3317:CD,3325:CD,3333:CD,3341:CD,3349:CD,3357:CD,3365:CD,3373:CD,3381:CD,3389:JM,18993:JM,18999:JM,19003:JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:CD,3416:CD,3424:CD,3432:CD,3440:CD,3448:CD,3456:CD,3464:CD,3472:CD,3480:CD,3488:CD,3496:CD,3504:CD,3512:CD,3520:CD,3528:CD,3536:CD,3544:CD,3552:CD,3560:CD,3568:CD,3576:CD,3584:CD,3592:CD,3600:CD,3608:CD,3623:CD,3631:CD,3639:CD,3647:CD,3655:CD,3663:CD,3671:CD,3688:CD,3698:CD,3708:CD,3718:CD,3728:CD,3738:CD,3748:CD,3758:CD,3768:CD,3778:CD,3788:CD,3798:CD,3808:CD,3818:CD,3828:CD,3838:CD,3848:CD,3858:CD,3868:CD,3878:CD,3888:CD,3898:CD,3908
3213 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v108 = newIntervalType(#(101), #(2 l), #(0))::CL,18935
3221 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v111 = newIntervalType(#(102), #(2 l), #(0))::CL,18935
3229 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v114 = newIntervalType(#(103), #(2 l), #(0))::CL,18935
3237 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v117 = newIntervalType(#(104), #(2 l), #(0))::CL,18935
3245 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v120 = newIntervalType(#(105), #(2 l), #(0))::CL,18935
3253 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v123 = newIntervalType(#(106), #(2 l), #(6))::CL,18935
3261 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v126 = newIntervalType(#(106), #(2 l), #(9))::CL,18935
3269 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v129 = newIntervalType(#(107), #(2 l), #(0))::CL,18935
3277 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v132 = newIntervalType(#(108), #(2 l), #(0))::CL,18935
3285 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v135 = newIntervalType(#(109), #(2 l), #(0))::CL,18935
3293 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v138 = newIntervalType(#(110), #(2 l), #(6))::CL,18935
3301 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v141 = newIntervalType(#(111), #(2 l), #(0))::CL,18935
3309 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v144 = newIntervalType(#(112), #(2 l), #(6))::CL,18935
3317 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v147 = newIntervalType(#(113), #(2 l), #(6))::CL,18935
3325 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v150 = newIntervalType(#(101), #(9 l), #(0))::CL,18935
3333 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v152 = newIntervalType(#(102), #(9 l), #(0))::CL,18935
3341 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v154 = newIntervalType(#(103), #(9 l), #(0))::CL,18935
3349 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v156 = newIntervalType(#(104), #(9 l), #(0))::CL,18935
3357 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v158 = newIntervalType(#(105), #(9 l), #(0))::CL,18935
3365 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v161 = newIntervalType(#(106), #(12 l), #(6))::CL,18935
3373 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v163 = newIntervalType(#(106), #(12 l), #(9))::CL,18935
3381 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v165 = newIntervalType(#(107), #(9 l), #(0))::CL,18935
3389 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v167 = newIntervalType(#(110), #(9 l), #(9))::CL,18935
3416 :: CALL :: call :: Z :: v177 = v174.put(#(CHARACTER), #(1))::CL,17856
3424 :: CALL :: call :: Z :: v181 = v178.put(#(VARCHAR), #(12))::CL,17856
3432 :: CALL :: call :: Z :: v186 = v182.put(#(VARCHAR_IGNORECASE), #(100))::CL,17856
3440 :: CALL :: call :: Z :: v190 = v187.put(#(NVARCHAR), #(12))::CL,17856
3448 :: CALL :: call :: Z :: v194 = v191.put(#(DATE), #(91))::CL,17856
3456 :: CALL :: call :: Z :: v198 = v195.put(#(TIME), #(92))::CL,17856
3464 :: CALL :: call :: Z :: v202 = v199.put(#(TIMESTAMP), #(93))::CL,17856
3472 :: CALL :: call :: Z :: v207 = v203.put(#(INTERVAL), #(10))::CL,17856
3480 :: CALL :: call :: Z :: v211 = v208.put(#(TINYINT), #(-6))::CL,17856
3488 :: CALL :: call :: Z :: v215 = v212.put(#(SMALLINT), #(5))::CL,17856
3496 :: CALL :: call :: Z :: v219 = v216.put(#(INTEGER), #(4))::CL,17856
3504 :: CALL :: call :: Z :: v223 = v220.put(#(BIGINT), #(25))::CL,17856
3512 :: CALL :: call :: Z :: v228 = v224.put(#(REAL), #(7))::CL,17856
3520 :: CALL :: call :: Z :: v232 = v229.put(#(FLOAT), #(6))::CL,17856
3528 :: CALL :: call :: Z :: v236 = v233.put(#(DOUBLE), #(8))::CL,17856
3536 :: CALL :: call :: Z :: v240 = v237.put(#(NUMERIC), #(2))::CL,17856
3544 :: CALL :: call :: Z :: v244 = v241.put(#(DECIMAL), #(3))::CL,17856
3552 :: CALL :: call :: Z :: v249 = v245.put(#(BOOLEAN), #(16))::CL,17856
3560 :: CALL :: call :: Z :: v253 = v250.put(#(BINARY), #(60))::CL,17856
3568 :: CALL :: call :: Z :: v257 = v254.put(#(VARBINARY), #(61))::CL,17856
3576 :: CALL :: call :: Z :: v262 = v258.put(#(CLOB), #(40))::CL,17856
3584 :: CALL :: call :: Z :: v267 = v263.put(#(BLOB), #(30))::CL,17856
3592 :: CALL :: call :: Z :: v271 = v268.put(#(BIT), #(14))::CL,17856
3600 :: CALL :: call :: Z :: v276 = v272.put(#(OTHER), #(1111))::CL,17856
3608 :: CALL :: call :: Z :: v281 = v277.put(#(UUID), #(-11))::CL,17856
3623 :: CALL :: call :: Z :: v288 = v285.put(#(CHAR), #(1))::CL,17856
3631 :: CALL :: call :: Z :: v292 = v289.put(#(INT), #(4))::CL,17856
3639 :: CALL :: call :: Z :: v296 = v293.put(#(DEC), #(3))::CL,17856
3647 :: CALL :: call :: Z :: v301 = v297.put(#(LONGVARCHAR), #(-1))::CL,17856
3655 :: CALL :: call :: Z :: v305 = v302.put(#(DATETIME), #(93))::CL,17856
3663 :: CALL :: call :: Z :: v310 = v306.put(#(LONGVARBINARY), #(-4))::CL,17856
3671 :: CALL :: call :: Z :: v314 = v311.put(#(OBJECT), #(1111))::CL,17856
3688 :: CALL :: call :: Ljava/lang/Object :: v321 = v317.put(#(956), v319)::CL,19052
3698 :: CALL :: call :: Ljava/lang/Object :: v326 = v322.put(#(979), v324)::CL,19052
3708 :: CALL :: call :: Ljava/lang/Object :: v331 = v327.put(#(966), v329)::CL,19052
3718 :: CALL :: call :: Ljava/lang/Object :: v336 = v332.put(#(970), v334)::CL,19052
3728 :: CALL :: call :: Ljava/lang/Object :: v341 = v337.put(#(958), v339)::CL,19052
3738 :: CALL :: call :: Ljava/lang/Object :: v346 = v342.put(#(975), v344)::CL,19052
3748 :: CALL :: call :: Ljava/lang/Object :: v351 = v347.put(#(976), v349)::CL,19052
3758 :: CALL :: call :: Ljava/lang/Object :: v356 = v352.put(#(977), v354)::CL,19052
3768 :: CALL :: call :: Ljava/lang/Object :: v361 = v357.put(#(974), v359)::CL,19052
3778 :: CALL :: call :: Ljava/lang/Object :: v366 = v362.put(#(963), v364)::CL,19052
3788 :: CALL :: call :: Ljava/lang/Object :: v371 = v367.put(#(951), v369)::CL,19052
3798 :: CALL :: call :: Ljava/lang/Object :: v376 = v372.put(#(971), v374)::CL,19052
3808 :: CALL :: call :: Ljava/lang/Object :: v381 = v377.put(#(962), v379)::CL,19052
3818 :: CALL :: call :: Ljava/lang/Object :: v386 = v382.put(#(961), v384)::CL,19052
3828 :: CALL :: call :: Ljava/lang/Object :: v391 = v387.put(#(969), v389)::CL,19052
3838 :: CALL :: call :: Ljava/lang/Object :: v396 = v392.put(#(959), v394)::CL,19052
3848 :: CALL :: call :: Ljava/lang/Object :: v401 = v397.put(#(955), v399)::CL,19052
3858 :: CALL :: call :: Ljava/lang/Object :: v406 = v402.put(#(952), v404)::CL,19052
3868 :: CALL :: call :: Ljava/lang/Object :: v411 = v407.put(#(978), v409)::CL,19052
3878 :: CALL :: call :: Ljava/lang/Object :: v416 = v412.put(#(964), v414)::CL,19052
3888 :: CALL :: call :: Ljava/lang/Object :: v421 = v417.put(#(957), v419)::CL,19052
3898 :: CALL :: call :: Ljava/lang/Object :: v426 = v422.put(#(954), v424)::CL,19052
3908 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.put(#(953), v429)::CL,19052
4323 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.<clinit>()::CD,4326:CD,4354:CD,4361:CD,4362:CD,4369:CD,4371:CD,4377:CD,4383:CD,4389:CD,4395:CD,4399:CD,4405:CD,4410:CD,4426
4326 :: NORM :: declaration :: [I :: v3 = new []::
4327 :: EXPR :: modify :: I :: v3[#(0)] = #(4096)::
4331 :: EXPR :: modify :: I :: v3[#(1)] = #(4096)::
4335 :: EXPR :: modify :: I :: v3[#(2)] = #(4096)::
4339 :: EXPR :: modify :: I :: v3[#(3)] = #(4096)::
4343 :: EXPR :: modify :: I :: v3[#(4)] = #(4096)::
4354 :: NORM :: declaration :: [C :: v13 = new []::JM,4362
4356 :: EXPR :: modify :: C :: v13[v16] = #(32)::
4360 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,4426
4361 :: PRED :: IF :: Z :: if (v16 < #(64)) goto 57::CF,4362:CD,4360:CD,4426
4362 :: NORM :: declaration :: Ljava/lang/String :: v17 = new java.lang.String::JM,4362
4369 :: CALL :: call :: V :: initPool()::CL,19073
4371 :: CALL :: call :: Ljava/lang/Integer :: v21 = getInt(#(0))::CL,19193
4377 :: CALL :: call :: Ljava/lang/Integer :: v23 = getInt(#(1))::CL,19193
4383 :: CALL :: call :: Ljava/lang/Integer :: v25 = getInt(#(2))::CL,19193
4389 :: CALL :: call :: Ljava/lang/Integer :: v28 = getInt(#(2147483647))::CL,19193
4395 :: CALL :: call :: Ljava/math/BigDecimal :: v31 = valueOf(#(0 l))::
4399 :: CALL :: call :: Ljava/math/BigDecimal :: v33 = getBigDecimal(v31)::CL,19217
4405 :: NORM :: declaration :: Ljava/math/BigDecimal :: v34 = new java.math.BigDecimal::
4410 :: CALL :: call :: Ljava/math/BigDecimal :: v37 = getBigDecimal(v34)::CL,19217
4426 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,4360:DD,4361
4488 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.<clinit>()::CD,4491:JM,19254:JM,19262:CD,4495:CD,4497:CD,4502:CD,4506:CD,4507:CD,4509:CD,4510:CD,4556:CD,4558:CD,4559:CD,4561
4491 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager :: v2 = new org.hsqldb.HsqlNameManager::DD,4495
4495 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager :: org.hsqldb.HsqlNameManager.staticManager = v2::
4497 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager :: v4 = org.hsqldb.HsqlNameManager.staticManager::
4499 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicLong :: v5 = v4.serialNumber::JM,4502
4502 :: CALL :: call :: V :: v5.set(#(-9223372036854775808 l))::JM,4502
4506 :: NORM :: declaration :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v9 = new org.hsqldb.HsqlNameManager$HsqlName[]::CF,4507
4507 :: EXPR :: modify :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.autoColumnNames = v9::
4509 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::CF,4510
4510 :: EXPR :: modify :: [Ljava/lang/String :: org.hsqldb.HsqlNameManager.autoNoNameColumnNames = v10::
4513 :: EXPR :: reference :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v14 = org.hsqldb.HsqlNameManager.autoColumnNames::CF,4515
4515 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v15 = new org.hsqldb.HsqlNameManager$HsqlName::DD,4541
4518 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
4523 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v32 + #(1)::
4524 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
4529 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
4541 :: EXPR :: modify :: Ljava/lang/Object :: v14[v32] = v15::
4545 :: EXPR :: reference :: [Ljava/lang/String :: v28 = org.hsqldb.HsqlNameManager.autoNoNameColumnNames::JM,4551
4547 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v32)::JM,4551
4551 :: EXPR :: modify :: Ljava/lang/Object :: v28[v32] = v30::
4555 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v32 + #(1)::DD,4561
4556 :: EXPR :: reference :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v12 = org.hsqldb.HsqlNameManager.autoColumnNames::CF,4558
4558 :: EXPR :: assign :: I :: v13 = v12.length::CF,4559
4559 :: PRED :: IF :: Z :: if (v32 < v13) goto 43::CD,4513:CD,4515:CD,4518:CD,4523:CD,4524:CD,4529:JM,27586:JM,23619:JM,27590:JM,23607:JM,27577:JM,23610:JM,27580:JM,23613:CD,4545:CD,4547:CD,4555:CD,4556:CD,4558:CD,4561
4561 :: EXPR :: assign :: null :: PHI v32 = #(0), v31::DD,4523:JM,4551:DD,4555:DD,4559
4588 :: ENTR :: entry :: null :: org.hsqldb.types.NullType.<clinit>()::JM,22405:JM,22390:JM,22393:JM,22396:JM,22414:JM,22399
4600 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.<clinit>()::CD,4603:CD,4604:CD,4621:CD,4623:CD,4624:CD,4626
4603 :: NORM :: declaration :: [Lorg/hsqldb/types/CharacterType :: v3 = new org.hsqldb.types.CharacterType[]::CF,4604
4604 :: EXPR :: modify :: [Lorg/hsqldb/types/CharacterType :: org.hsqldb.types.CharacterType.charArray = v3::
4607 :: EXPR :: reference :: [Lorg/hsqldb/types/CharacterType :: v7 = org.hsqldb.types.CharacterType.charArray::CF,4609
4609 :: NORM :: declaration :: Lorg/hsqldb/types/CharacterType :: v8 = new org.hsqldb.types.CharacterType::DD,4616
4616 :: EXPR :: modify :: Ljava/lang/Object :: v7[v13] = v8::
4620 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(1)::DD,4626
4621 :: EXPR :: reference :: [Lorg/hsqldb/types/CharacterType :: v5 = org.hsqldb.types.CharacterType.charArray::CF,4623
4623 :: EXPR :: assign :: I :: v6 = v5.length::CF,4624
4624 :: PRED :: IF :: Z :: if (v13 < v6) goto 13::CD,4607:CD,4609:JM,18722:JM,22405:JM,18710:JM,22390:JM,22393:JM,18716:JM,22396:JM,22414:JM,22399:CD,4620:CD,4621:CD,4623:CD,4626
4626 :: EXPR :: assign :: null :: PHI v13 = #(0), v12::DD,4620:DD,4624
4639 :: ENTR :: entry :: null :: org.hsqldb.types.OtherType.<clinit>()::JM,22405:JM,22390:JM,22393:JM,22396:JM,22414:JM,22399
4651 :: ENTR :: entry :: null :: org.hsqldb.types.BooleanType.<clinit>()::JM,22405:JM,22390:JM,22393:JM,22396:JM,22414:JM,22399
4663 :: ENTR :: entry :: null :: org.hsqldb.types.NumberType.<clinit>()::JM,18867:JM,22405:JM,22390:JM,22393:JM,18842:JM,22396:JM,22414:JM,22399:CD,4675:CD,4681:CD,4685:CD,4687:CD,4691:CD,4693:CD,4699:CD,4705:CD,4707:CD,4713:CD,4715
4675 :: CALL :: call :: Ljava/math/BigDecimal :: v9 = valueOf(#(1.7976931348623157E308 d))::
4681 :: CALL :: call :: Ljava/math/BigDecimal :: v12 = valueOf(#(9223372036854775807 l))::JM,4685
4685 :: EXPR :: modify :: Ljava/math/BigDecimal :: org.hsqldb.types.NumberType.MAX_LONG = v12::
4687 :: CALL :: call :: Ljava/math/BigDecimal :: v15 = valueOf(#(-9223372036854775808 l))::JM,4691
4691 :: EXPR :: modify :: Ljava/math/BigDecimal :: org.hsqldb.types.NumberType.MIN_LONG = v15::
4693 :: CALL :: call :: Ljava/math/BigDecimal :: v18 = valueOf(#(2147483647 l))::
4699 :: CALL :: call :: Ljava/math/BigDecimal :: v21 = valueOf(#(-2147483648 l))::
4705 :: EXPR :: reference :: Ljava/math/BigDecimal :: v22 = org.hsqldb.types.NumberType.MIN_LONG::
4707 :: CALL :: call :: Ljava/math/BigInteger :: v24 = v22.toBigInteger()::
4713 :: EXPR :: reference :: Ljava/math/BigDecimal :: v25 = org.hsqldb.types.NumberType.MAX_LONG::
4715 :: CALL :: call :: Ljava/math/BigInteger :: v27 = v25.toBigInteger()::
4741 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.<clinit>()::CD,4744:JM,19402:CD,4759
4744 :: CALL :: call :: J :: v4 = getDateSeconds(#(1-01-01))::CL,19356
4759 :: CALL :: call :: J :: v10 = getDateSeconds(#(10000-01-01))::CL,19356
4773 :: ENTR :: entry :: null :: org.hsqldb.types.DTIType.<clinit>()::CD,4776:CD,4803:CD,4830:CD,4853:CD,4908:CD,4947:CD,4990:CD,5017:CD,5018:CD,5031:CD,5040:CD,5061:CD,5078:CD,5091:JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,22135:JM,22105:JM,22138:JM,22045:CD,5110:CD,5118:CD,5126:CD,5134:CD,5142:CD,5150
4776 :: NORM :: declaration :: [B :: v3 = new []::
4777 :: EXPR :: modify :: B :: v3[#(0)] = #(45)::
4781 :: EXPR :: modify :: B :: v3[#(1)] = #(45)::
4785 :: EXPR :: modify :: B :: v3[#(2)] = #(32)::
4789 :: EXPR :: modify :: B :: v3[#(3)] = #(58)::
4793 :: EXPR :: modify :: B :: v3[#(4)] = #(58)::
4797 :: EXPR :: modify :: B :: v3[#(5)] = #(46)::
4803 :: NORM :: declaration :: [I :: v15 = new []::
4804 :: EXPR :: modify :: I :: v15[#(0)] = #(12)::
4808 :: EXPR :: modify :: I :: v15[#(1)] = #(1)::
4812 :: EXPR :: modify :: I :: v15[#(2)] = #(86400)::
4816 :: EXPR :: modify :: I :: v15[#(3)] = #(3600)::
4820 :: EXPR :: modify :: I :: v15[#(4)] = #(60)::
4824 :: EXPR :: modify :: I :: v15[#(5)] = #(1)::
4830 :: NORM :: declaration :: [I :: v20 = new []::
4831 :: EXPR :: modify :: I :: v20[#(1)] = #(12)::
4835 :: EXPR :: modify :: I :: v20[#(3)] = #(24)::
4839 :: EXPR :: modify :: I :: v20[#(4)] = #(60)::
4843 :: EXPR :: modify :: I :: v20[#(5)] = #(60)::
4847 :: EXPR :: modify :: I :: v20[#(6)] = #(1000000000)::
4853 :: NORM :: declaration :: [J :: v24 = new []::
4854 :: EXPR :: modify :: J :: v24[#(0)] = #(1 l)::
4858 :: EXPR :: modify :: J :: v24[#(1)] = #(10 l)::
4862 :: EXPR :: modify :: J :: v24[#(2)] = #(100 l)::
4866 :: EXPR :: modify :: J :: v24[#(3)] = #(1000 l)::
4870 :: EXPR :: modify :: J :: v24[#(4)] = #(10000 l)::
4874 :: EXPR :: modify :: J :: v24[#(5)] = #(100000 l)::
4878 :: EXPR :: modify :: J :: v24[#(6)] = #(1000000 l)::
4882 :: EXPR :: modify :: J :: v24[#(7)] = #(10000000 l)::
4886 :: EXPR :: modify :: J :: v24[#(8)] = #(100000000 l)::
4890 :: EXPR :: modify :: J :: v24[#(9)] = #(1000000000 l)::
4894 :: EXPR :: modify :: J :: v24[#(10)] = #(10000000000 l)::
4898 :: EXPR :: modify :: J :: v24[#(11)] = #(100000000000 l)::
4902 :: EXPR :: modify :: J :: v24[#(12)] = #(1000000000000 l)::
4908 :: NORM :: declaration :: [I :: v42 = new []::
4909 :: EXPR :: modify :: I :: v42[#(0)] = #(100000000)::
4913 :: EXPR :: modify :: I :: v42[#(1)] = #(10000000)::
4917 :: EXPR :: modify :: I :: v42[#(2)] = #(1000000)::
4921 :: EXPR :: modify :: I :: v42[#(3)] = #(100000)::
4925 :: EXPR :: modify :: I :: v42[#(4)] = #(10000)::
4929 :: EXPR :: modify :: I :: v42[#(5)] = #(1000)::
4933 :: EXPR :: modify :: I :: v42[#(6)] = #(100)::
4937 :: EXPR :: modify :: I :: v42[#(7)] = #(10)::
4941 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
4947 :: NORM :: declaration :: [I :: v50 = new []::
4948 :: EXPR :: modify :: I :: v50[#(0)] = #(1000000000)::
4952 :: EXPR :: modify :: I :: v50[#(1)] = #(100000000)::
4956 :: EXPR :: modify :: I :: v50[#(2)] = #(10000000)::
4960 :: EXPR :: modify :: I :: v50[#(3)] = #(1000000)::
4964 :: EXPR :: modify :: I :: v50[#(4)] = #(100000)::
4968 :: EXPR :: modify :: I :: v50[#(5)] = #(10000)::
4972 :: EXPR :: modify :: I :: v50[#(6)] = #(1000)::
4976 :: EXPR :: modify :: I :: v50[#(7)] = #(100)::
4980 :: EXPR :: modify :: I :: v50[#(8)] = #(10)::
4984 :: EXPR :: modify :: I :: v50[#(9)] = #(1)::
4990 :: NORM :: declaration :: [I :: v51 = new []::
4991 :: EXPR :: modify :: I :: v51[#(0)] = #(101)::
4995 :: EXPR :: modify :: I :: v51[#(1)] = #(102)::
4999 :: EXPR :: modify :: I :: v51[#(2)] = #(103)::
5003 :: EXPR :: modify :: I :: v51[#(3)] = #(104)::
5007 :: EXPR :: modify :: I :: v51[#(4)] = #(105)::
5011 :: EXPR :: modify :: I :: v51[#(5)] = #(106)::
5017 :: NORM :: declaration :: [[I :: v58 = new [][]::CF,5018
5018 :: NORM :: declaration :: [I :: v59 = new []::DD,5027
5019 :: EXPR :: modify :: I :: v59[#(0)] = #(101)::
5023 :: EXPR :: modify :: I :: v59[#(1)] = #(107)::
5027 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
5031 :: NORM :: declaration :: [I :: v61 = new []::DD,5036
5032 :: EXPR :: modify :: I :: v61[#(1)] = #(102)::
5036 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v61::
5040 :: NORM :: declaration :: [I :: v62 = new []::DD,5057
5041 :: EXPR :: modify :: I :: v62[#(2)] = #(103)::
5045 :: EXPR :: modify :: I :: v62[#(3)] = #(108)::
5049 :: EXPR :: modify :: I :: v62[#(4)] = #(109)::
5053 :: EXPR :: modify :: I :: v62[#(5)] = #(110)::
5057 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v62::
5061 :: NORM :: declaration :: [I :: v66 = new []::DD,5074
5062 :: EXPR :: modify :: I :: v66[#(3)] = #(104)::
5066 :: EXPR :: modify :: I :: v66[#(4)] = #(111)::
5070 :: EXPR :: modify :: I :: v66[#(5)] = #(112)::
5074 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v66::
5078 :: NORM :: declaration :: [I :: v69 = new []::DD,5087
5079 :: EXPR :: modify :: I :: v69[#(4)] = #(105)::
5083 :: EXPR :: modify :: I :: v69[#(5)] = #(113)::
5087 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v69::
5091 :: NORM :: declaration :: [I :: v71 = new []::DD,5096
5092 :: EXPR :: modify :: I :: v71[#(5)] = #(106)::
5096 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v71::
5110 :: CALL :: call :: Z :: v76 = v74.put(#(101), #(0))::CL,19430
5118 :: CALL :: call :: Z :: v79 = v77.put(#(102), #(1))::CL,19430
5126 :: CALL :: call :: Z :: v82 = v80.put(#(103), #(2))::CL,19430
5134 :: CALL :: call :: Z :: v85 = v83.put(#(104), #(3))::CL,19430
5142 :: CALL :: call :: Z :: v88 = v86.put(#(105), #(4))::CL,19430
5150 :: CALL :: call :: Z :: v91 = v89.put(#(106), #(5))::CL,19430
5416 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.<clinit>()::CD,5419
5419 :: CALL :: call :: Lorg/hsqldb/types/NumberType :: v6 = getNumberType(#(3), #(40 l), #(9))::CL,19471
5503 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
5511 :: NORM :: declaration :: [Ljava/math/BigDecimal :: v9 = new java.math.BigDecimal[]::CF,5512
5512 :: NORM :: declaration :: Ljava/math/BigDecimal :: v10 = new java.math.BigDecimal::DD,5521
5513 :: EXPR :: reference :: Ljava/math/BigInteger :: v11 = java.math.BigInteger.ZERO::
5521 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(0)] = v10::
5525 :: NORM :: declaration :: Ljava/math/BigDecimal :: v14 = new java.math.BigDecimal::DD,5534
5526 :: EXPR :: reference :: Ljava/math/BigInteger :: v15 = java.math.BigInteger.ONE::
5534 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(1)] = v14::
5538 :: NORM :: declaration :: Ljava/math/BigDecimal :: v19 = new java.math.BigDecimal::DD,5549
5539 :: CALL :: call :: Ljava/math/BigInteger :: v22 = valueOf(#(2 l))::
5549 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(2)] = v19::
5553 :: NORM :: declaration :: Ljava/math/BigDecimal :: v25 = new java.math.BigDecimal::DD,5564
5554 :: CALL :: call :: Ljava/math/BigInteger :: v28 = valueOf(#(3 l))::
5564 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(3)] = v25::
5568 :: NORM :: declaration :: Ljava/math/BigDecimal :: v31 = new java.math.BigDecimal::DD,5579
5569 :: CALL :: call :: Ljava/math/BigInteger :: v34 = valueOf(#(4 l))::
5579 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(4)] = v31::
5583 :: NORM :: declaration :: Ljava/math/BigDecimal :: v37 = new java.math.BigDecimal::DD,5594
5584 :: CALL :: call :: Ljava/math/BigInteger :: v40 = valueOf(#(5 l))::
5594 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(5)] = v37::
5598 :: NORM :: declaration :: Ljava/math/BigDecimal :: v43 = new java.math.BigDecimal::DD,5609
5599 :: CALL :: call :: Ljava/math/BigInteger :: v46 = valueOf(#(6 l))::
5609 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(6)] = v43::
5613 :: NORM :: declaration :: Ljava/math/BigDecimal :: v49 = new java.math.BigDecimal::DD,5624
5614 :: CALL :: call :: Ljava/math/BigInteger :: v52 = valueOf(#(7 l))::
5624 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(7)] = v49::
5628 :: NORM :: declaration :: Ljava/math/BigDecimal :: v55 = new java.math.BigDecimal::DD,5639
5629 :: CALL :: call :: Ljava/math/BigInteger :: v58 = valueOf(#(8 l))::
5639 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(8)] = v55::
5643 :: NORM :: declaration :: Ljava/math/BigDecimal :: v61 = new java.math.BigDecimal::DD,5654
5644 :: CALL :: call :: Ljava/math/BigInteger :: v64 = valueOf(#(9 l))::
5654 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(9)] = v61::
5658 :: NORM :: declaration :: Ljava/math/BigDecimal :: v67 = new java.math.BigDecimal::DD,5667
5659 :: EXPR :: reference :: Ljava/math/BigInteger :: v68 = java.math.BigInteger.TEN::
5667 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(10)] = v67::
5701 :: NORM :: declaration :: [Ljava/math/BigInteger :: v78 = new java.math.BigInteger[]::
5702 :: EXPR :: reference :: Ljava/math/BigInteger :: v79 = java.math.BigInteger.ONE::DD,5704
5704 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(0)] = v79::
5708 :: CALL :: call :: Ljava/math/BigInteger :: v81 = valueOf(#(10 l))::JM,5712
5712 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(1)] = v81::
5716 :: CALL :: call :: Ljava/math/BigInteger :: v84 = valueOf(#(100 l))::JM,5720
5720 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(2)] = v84::
5724 :: CALL :: call :: Ljava/math/BigInteger :: v87 = valueOf(#(1000 l))::JM,5728
5728 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(3)] = v87::
5732 :: CALL :: call :: Ljava/math/BigInteger :: v90 = valueOf(#(10000 l))::JM,5736
5736 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(4)] = v90::
5740 :: CALL :: call :: Ljava/math/BigInteger :: v93 = valueOf(#(100000 l))::JM,5744
5744 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(5)] = v93::
5748 :: CALL :: call :: Ljava/math/BigInteger :: v96 = valueOf(#(1000000 l))::JM,5752
5752 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(6)] = v96::
5756 :: CALL :: call :: Ljava/math/BigInteger :: v99 = valueOf(#(10000000 l))::JM,5760
5760 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(7)] = v99::
5764 :: CALL :: call :: Ljava/math/BigInteger :: v102 = valueOf(#(100000000 l))::JM,5768
5768 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(8)] = v102::
5772 :: CALL :: call :: Ljava/math/BigInteger :: v105 = valueOf(#(1000000000 l))::JM,5776
5776 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(9)] = v105::
5782 :: NORM :: declaration :: [[J :: v107 = new [][]::CF,5783
5783 :: NORM :: declaration :: [J :: v108 = new []::DD,5792
5784 :: EXPR :: modify :: J :: v108[#(0)] = #(9223372036854775807 l)::
5788 :: EXPR :: modify :: J :: v108[#(1)] = #(1 l)::
5792 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(0)] = v108::
5796 :: NORM :: declaration :: [J :: v110 = new []::DD,5805
5797 :: EXPR :: modify :: J :: v110[#(0)] = #(922337203685477580 l)::
5801 :: EXPR :: modify :: J :: v110[#(1)] = #(10 l)::
5805 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(1)] = v110::
5809 :: NORM :: declaration :: [J :: v112 = new []::DD,5818
5810 :: EXPR :: modify :: J :: v112[#(0)] = #(92233720368547758 l)::
5814 :: EXPR :: modify :: J :: v112[#(1)] = #(100 l)::
5818 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(2)] = v112::
5822 :: NORM :: declaration :: [J :: v114 = new []::DD,5831
5823 :: EXPR :: modify :: J :: v114[#(0)] = #(9223372036854775 l)::
5827 :: EXPR :: modify :: J :: v114[#(1)] = #(1000 l)::
5831 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(3)] = v114::
5835 :: NORM :: declaration :: [J :: v116 = new []::DD,5844
5836 :: EXPR :: modify :: J :: v116[#(0)] = #(922337203685477 l)::
5840 :: EXPR :: modify :: J :: v116[#(1)] = #(10000 l)::
5844 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(4)] = v116::
5848 :: NORM :: declaration :: [J :: v118 = new []::DD,5857
5849 :: EXPR :: modify :: J :: v118[#(0)] = #(92233720368547 l)::
5853 :: EXPR :: modify :: J :: v118[#(1)] = #(100000 l)::
5857 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(5)] = v118::
5861 :: NORM :: declaration :: [J :: v120 = new []::DD,5870
5862 :: EXPR :: modify :: J :: v120[#(0)] = #(9223372036854 l)::
5866 :: EXPR :: modify :: J :: v120[#(1)] = #(1000000 l)::
5870 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(6)] = v120::
5874 :: NORM :: declaration :: [J :: v122 = new []::DD,5883
5875 :: EXPR :: modify :: J :: v122[#(0)] = #(922337203685 l)::
5879 :: EXPR :: modify :: J :: v122[#(1)] = #(10000000 l)::
5883 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(7)] = v122::
5887 :: NORM :: declaration :: [J :: v124 = new []::DD,5896
5888 :: EXPR :: modify :: J :: v124[#(0)] = #(92233720368 l)::
5892 :: EXPR :: modify :: J :: v124[#(1)] = #(100000000 l)::
5896 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(8)] = v124::
5900 :: NORM :: declaration :: [J :: v126 = new []::DD,5909
5901 :: EXPR :: modify :: J :: v126[#(0)] = #(9223372036 l)::
5905 :: EXPR :: modify :: J :: v126[#(1)] = #(1000000000 l)::
5909 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(9)] = v126::
5913 :: NORM :: declaration :: [J :: v128 = new []::DD,5922
5914 :: EXPR :: modify :: J :: v128[#(0)] = #(922337203 l)::
5918 :: EXPR :: modify :: J :: v128[#(1)] = #(10000000000 l)::
5922 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(10)] = v128::
5926 :: NORM :: declaration :: [J :: v131 = new []::DD,5935
5927 :: EXPR :: modify :: J :: v131[#(0)] = #(92233720 l)::
5931 :: EXPR :: modify :: J :: v131[#(1)] = #(100000000000 l)::
5935 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(11)] = v131::
5939 :: NORM :: declaration :: [J :: v135 = new []::DD,5948
5940 :: EXPR :: modify :: J :: v135[#(0)] = #(9223372 l)::
5944 :: EXPR :: modify :: J :: v135[#(1)] = #(1000000000000 l)::
5948 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(12)] = v135::
5952 :: NORM :: declaration :: [J :: v139 = new []::DD,5961
5953 :: EXPR :: modify :: J :: v139[#(0)] = #(92233 l)::
5957 :: EXPR :: modify :: J :: v139[#(1)] = #(10000000000000 l)::
5961 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(13)] = v139::
5967 :: NORM :: declaration :: [I :: v142 = new []::
5968 :: EXPR :: modify :: I :: v142[#(1)] = #(9)::
5972 :: EXPR :: modify :: I :: v142[#(2)] = #(99)::
5976 :: EXPR :: modify :: I :: v142[#(3)] = #(999)::
5980 :: EXPR :: modify :: I :: v142[#(4)] = #(9999)::
5984 :: EXPR :: modify :: I :: v142[#(5)] = #(99999)::
5988 :: EXPR :: modify :: I :: v142[#(6)] = #(999999)::
5992 :: EXPR :: modify :: I :: v142[#(7)] = #(9999999)::
5996 :: EXPR :: modify :: I :: v142[#(8)] = #(99999999)::
6000 :: EXPR :: modify :: I :: v142[#(9)] = #(999999999)::
6004 :: EXPR :: modify :: I :: v142[#(10)] = #(2147483647)::
6286 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.HsqlName.<clinit>()::CD,6292
6292 :: NORM :: declaration :: [Ljava/lang/String :: v5 = new java.lang.String[]::
6293 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(0)] = #(SYS_IDX_)::
6297 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(1)] = #(SYS_PK_)::
6301 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(2)] = #(SYS_REF_)::
6305 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(3)] = #(SYS_CT_)::
6309 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(4)] = #(SYS_FK_)::
6335 :: ENTR :: entry :: null :: org.hsqldb.HsqlDateTime.<clinit>()::CD,6348:CD,6349:CD,6360:CD,6362:CD,6397:CD,6399:CD,6406:CD,6430:CD,6454:CD,6475:CD,6481:CD,6482:CD,6503:CD,6524:CD,6545:CD,6558:CD,6571:CD,6584:CD,6605:CD,6618:CD,6639:CD,6656:CD,6681:CD,6694:CD,6711:CD,6724:CD,6737:CD,6750:CD,6763:CD,6780:CD,6789:CD,6810:CD,6831:CD,6844:CD,6857:CD,6870:CD,6883:CD,6896:CD,6917:CD,6938:CD,6953:CD,7072
6348 :: NORM :: declaration :: Ljava/util/GregorianCalendar :: v5 = new java.util.GregorianCalendar::DD,6360
6349 :: CALL :: call :: Ljava/util/TimeZone :: v8 = getTimeZone(#(GMT))::
6360 :: EXPR :: modify :: Ljava/util/Calendar :: org.hsqldb.HsqlDateTime.tempCalGMT = v5::
6362 :: NORM :: declaration :: Ljava/util/Date :: v11 = new java.util.Date::
6397 :: EXPR :: reference :: Ljava/util/Calendar :: v26 = org.hsqldb.HsqlDateTime.tempCalGMT::JM,6399
6399 :: CALL :: call :: V :: v26.setLenient(#(0))::JM,6399
6406 :: CALL :: call :: Ljava/util/TimeZone :: v32 = getTimeZone(#(GMT))::
6430 :: CALL :: call :: Ljava/util/TimeZone :: v41 = getTimeZone(#(GMT))::
6454 :: CALL :: call :: Ljava/util/TimeZone :: v50 = getTimeZone(#(GMT))::
6475 :: NORM :: declaration :: Ljava/util/Date :: v56 = new java.util.Date::
6481 :: NORM :: declaration :: [[C :: v59 = new [][]::CF,6482
6482 :: NORM :: declaration :: [C :: v61 = new []::DD,6499
6483 :: EXPR :: modify :: C :: v61[#(0)] = #(82)::
6487 :: EXPR :: modify :: C :: v61[#(1)] = #(82)::
6491 :: EXPR :: modify :: C :: v61[#(2)] = #(82)::
6495 :: EXPR :: modify :: C :: v61[#(3)] = #(82)::
6499 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(0)] = v61::
6503 :: NORM :: declaration :: [C :: v66 = new []::DD,6520
6504 :: EXPR :: modify :: C :: v66[#(0)] = #(73)::
6508 :: EXPR :: modify :: C :: v66[#(1)] = #(89)::
6512 :: EXPR :: modify :: C :: v66[#(2)] = #(89)::
6516 :: EXPR :: modify :: C :: v66[#(3)] = #(89)::
6520 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(1)] = v66::
6524 :: NORM :: declaration :: [C :: v69 = new []::DD,6541
6525 :: EXPR :: modify :: C :: v69[#(0)] = #(89)::
6529 :: EXPR :: modify :: C :: v69[#(1)] = #(89)::
6533 :: EXPR :: modify :: C :: v69[#(2)] = #(89)::
6537 :: EXPR :: modify :: C :: v69[#(3)] = #(89)::
6541 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(2)] = v69::
6545 :: NORM :: declaration :: [C :: v70 = new []::DD,6554
6546 :: EXPR :: modify :: C :: v70[#(0)] = #(73)::
6550 :: EXPR :: modify :: C :: v70[#(1)] = #(89)::
6554 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(3)] = v70::
6558 :: NORM :: declaration :: [C :: v71 = new []::DD,6567
6559 :: EXPR :: modify :: C :: v71[#(0)] = #(89)::
6563 :: EXPR :: modify :: C :: v71[#(1)] = #(89)::
6567 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(4)] = v71::
6571 :: NORM :: declaration :: [C :: v73 = new []::DD,6580
6572 :: EXPR :: modify :: C :: v73[#(0)] = #(66)::
6576 :: EXPR :: modify :: C :: v73[#(1)] = #(67)::
6580 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(5)] = v73::
6584 :: NORM :: declaration :: [C :: v77 = new []::DD,6601
6585 :: EXPR :: modify :: C :: v77[#(0)] = #(66)::
6589 :: EXPR :: modify :: C :: v77[#(1)] = #(46)::
6593 :: EXPR :: modify :: C :: v77[#(2)] = #(67)::
6597 :: EXPR :: modify :: C :: v77[#(3)] = #(46)::
6601 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(6)] = v77::
6605 :: NORM :: declaration :: [C :: v80 = new []::DD,6614
6606 :: EXPR :: modify :: C :: v80[#(0)] = #(65)::
6610 :: EXPR :: modify :: C :: v80[#(1)] = #(68)::
6614 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(7)] = v80::
6618 :: NORM :: declaration :: [C :: v84 = new []::DD,6635
6619 :: EXPR :: modify :: C :: v84[#(0)] = #(65)::
6623 :: EXPR :: modify :: C :: v84[#(1)] = #(46)::
6627 :: EXPR :: modify :: C :: v84[#(2)] = #(68)::
6631 :: EXPR :: modify :: C :: v84[#(3)] = #(46)::
6635 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(8)] = v84::
6639 :: NORM :: declaration :: [C :: v86 = new []::DD,6652
6640 :: EXPR :: modify :: C :: v86[#(0)] = #(77)::
6644 :: EXPR :: modify :: C :: v86[#(1)] = #(79)::
6648 :: EXPR :: modify :: C :: v86[#(2)] = #(78)::
6652 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(9)] = v86::
6656 :: NORM :: declaration :: [C :: v91 = new []::DD,6677
6657 :: EXPR :: modify :: C :: v91[#(0)] = #(77)::
6661 :: EXPR :: modify :: C :: v91[#(1)] = #(79)::
6665 :: EXPR :: modify :: C :: v91[#(2)] = #(78)::
6669 :: EXPR :: modify :: C :: v91[#(3)] = #(84)::
6673 :: EXPR :: modify :: C :: v91[#(4)] = #(72)::
6677 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(10)] = v91::
6681 :: NORM :: declaration :: [C :: v95 = new []::DD,6690
6682 :: EXPR :: modify :: C :: v95[#(0)] = #(77)::
6686 :: EXPR :: modify :: C :: v95[#(1)] = #(77)::
6690 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(11)] = v95::
6694 :: NORM :: declaration :: [C :: v97 = new []::DD,6707
6695 :: EXPR :: modify :: C :: v97[#(0)] = #(68)::
6699 :: EXPR :: modify :: C :: v97[#(1)] = #(65)::
6703 :: EXPR :: modify :: C :: v97[#(2)] = #(89)::
6707 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(12)] = v97::
6711 :: NORM :: declaration :: [C :: v99 = new []::DD,6720
6712 :: EXPR :: modify :: C :: v99[#(0)] = #(68)::
6716 :: EXPR :: modify :: C :: v99[#(1)] = #(89)::
6720 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(13)] = v99::
6724 :: NORM :: declaration :: [C :: v101 = new []::DD,6733
6725 :: EXPR :: modify :: C :: v101[#(0)] = #(87)::
6729 :: EXPR :: modify :: C :: v101[#(1)] = #(87)::
6733 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(14)] = v101::
6737 :: NORM :: declaration :: [C :: v104 = new []::DD,6746
6738 :: EXPR :: modify :: C :: v104[#(0)] = #(73)::
6742 :: EXPR :: modify :: C :: v104[#(1)] = #(87)::
6746 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(15)] = v104::
6750 :: NORM :: declaration :: [C :: v106 = new []::DD,6759
6751 :: EXPR :: modify :: C :: v106[#(0)] = #(68)::
6755 :: EXPR :: modify :: C :: v106[#(1)] = #(68)::
6759 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(16)] = v106::
6763 :: NORM :: declaration :: [C :: v108 = new []::DD,6776
6764 :: EXPR :: modify :: C :: v108[#(0)] = #(68)::
6768 :: EXPR :: modify :: C :: v108[#(1)] = #(68)::
6772 :: EXPR :: modify :: C :: v108[#(2)] = #(68)::
6776 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(17)] = v108::
6780 :: NORM :: declaration :: [C :: v110 = new []::DD,6785
6781 :: EXPR :: modify :: C :: v110[#(0)] = #(87)::
6785 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(18)] = v110::
6789 :: NORM :: declaration :: [C :: v112 = new []::DD,6806
6790 :: EXPR :: modify :: C :: v112[#(0)] = #(72)::
6794 :: EXPR :: modify :: C :: v112[#(1)] = #(72)::
6798 :: EXPR :: modify :: C :: v112[#(2)] = #(50)::
6802 :: EXPR :: modify :: C :: v112[#(3)] = #(52)::
6806 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(19)] = v112::
6810 :: NORM :: declaration :: [C :: v116 = new []::DD,6827
6811 :: EXPR :: modify :: C :: v116[#(0)] = #(72)::
6815 :: EXPR :: modify :: C :: v116[#(1)] = #(72)::
6819 :: EXPR :: modify :: C :: v116[#(2)] = #(49)::
6823 :: EXPR :: modify :: C :: v116[#(3)] = #(50)::
6827 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(20)] = v116::
6831 :: NORM :: declaration :: [C :: v119 = new []::DD,6840
6832 :: EXPR :: modify :: C :: v119[#(0)] = #(72)::
6836 :: EXPR :: modify :: C :: v119[#(1)] = #(72)::
6840 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(21)] = v119::
6844 :: NORM :: declaration :: [C :: v121 = new []::DD,6853
6845 :: EXPR :: modify :: C :: v121[#(0)] = #(77)::
6849 :: EXPR :: modify :: C :: v121[#(1)] = #(73)::
6853 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(22)] = v121::
6857 :: NORM :: declaration :: [C :: v123 = new []::DD,6866
6858 :: EXPR :: modify :: C :: v123[#(0)] = #(83)::
6862 :: EXPR :: modify :: C :: v123[#(1)] = #(83)::
6866 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(23)] = v123::
6870 :: NORM :: declaration :: [C :: v126 = new []::DD,6879
6871 :: EXPR :: modify :: C :: v126[#(0)] = #(65)::
6875 :: EXPR :: modify :: C :: v126[#(1)] = #(77)::
6879 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(24)] = v126::
6883 :: NORM :: declaration :: [C :: v128 = new []::DD,6892
6884 :: EXPR :: modify :: C :: v128[#(0)] = #(80)::
6888 :: EXPR :: modify :: C :: v128[#(1)] = #(77)::
6892 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(25)] = v128::
6896 :: NORM :: declaration :: [C :: v131 = new []::DD,6913
6897 :: EXPR :: modify :: C :: v131[#(0)] = #(65)::
6901 :: EXPR :: modify :: C :: v131[#(1)] = #(46)::
6905 :: EXPR :: modify :: C :: v131[#(2)] = #(77)::
6909 :: EXPR :: modify :: C :: v131[#(3)] = #(46)::
6913 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(26)] = v131::
6917 :: NORM :: declaration :: [C :: v133 = new []::DD,6934
6918 :: EXPR :: modify :: C :: v133[#(0)] = #(80)::
6922 :: EXPR :: modify :: C :: v133[#(1)] = #(46)::
6926 :: EXPR :: modify :: C :: v133[#(2)] = #(77)::
6930 :: EXPR :: modify :: C :: v133[#(3)] = #(46)::
6934 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(27)] = v133::
6938 :: NORM :: declaration :: [C :: v135 = new []::DD,6947
6939 :: EXPR :: modify :: C :: v135[#(0)] = #(70)::
6943 :: EXPR :: modify :: C :: v135[#(1)] = #(70)::
6947 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(28)] = v135::
6953 :: NORM :: declaration :: [Ljava/lang/String :: v137 = new java.lang.String[]::
6954 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(0)] = #(yyyy)::
6958 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(1)] = #('*IYYY')::
6962 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(2)] = #(yyyy)::
6966 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(3)] = #('*IY')::
6970 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(4)] = #(yy)::
6974 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(5)] = #(G)::
6978 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(6)] = #(G)::
6982 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(7)] = #(G)::
6986 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(8)] = #(G)::
6990 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(9)] = #(MMM)::
6994 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(10)] = #(MMMMM)::
6998 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(11)] = #(MM)::
7002 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(12)] = #(EEEE)::
7006 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(13)] = #(EE)::
7010 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(14)] = #('*WW')::
7014 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(15)] = #('*IW')::
7018 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(16)] = #(dd)::
7022 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(17)] = #(D)::
7026 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(18)] = #('*W')::
7030 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(19)] = #(HH)::
7034 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(20)] = #(KK)::
7038 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(21)] = #(KK)::
7042 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(22)] = #(mm)::
7046 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(23)] = #(ss)::
7050 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(24)] = #(aaa)::
7054 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(25)] = #(aaa)::
7058 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(26)] = #(aaa)::
7062 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(27)] = #(aaa)::
7066 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(28)] = #(S)::
7072 :: NORM :: declaration :: [I :: v159 = new []::
7073 :: EXPR :: modify :: I :: v159[#(0)] = #(-1)::
7077 :: EXPR :: modify :: I :: v159[#(1)] = #(-1)::
7081 :: EXPR :: modify :: I :: v159[#(2)] = #(101)::
7085 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
7089 :: EXPR :: modify :: I :: v159[#(4)] = #(101)::
7093 :: EXPR :: modify :: I :: v159[#(5)] = #(-1)::
7097 :: EXPR :: modify :: I :: v159[#(6)] = #(-1)::
7101 :: EXPR :: modify :: I :: v159[#(7)] = #(-1)::
7105 :: EXPR :: modify :: I :: v159[#(8)] = #(-1)::
7109 :: EXPR :: modify :: I :: v159[#(9)] = #(102)::
7113 :: EXPR :: modify :: I :: v159[#(10)] = #(102)::
7117 :: EXPR :: modify :: I :: v159[#(11)] = #(102)::
7121 :: EXPR :: modify :: I :: v159[#(12)] = #(-1)::
7125 :: EXPR :: modify :: I :: v159[#(13)] = #(-1)::
7129 :: EXPR :: modify :: I :: v159[#(14)] = #(262)::
7133 :: EXPR :: modify :: I :: v159[#(15)] = #(-1)::
7137 :: EXPR :: modify :: I :: v159[#(16)] = #(103)::
7141 :: EXPR :: modify :: I :: v159[#(17)] = #(103)::
7145 :: EXPR :: modify :: I :: v159[#(18)] = #(-1)::
7149 :: EXPR :: modify :: I :: v159[#(19)] = #(104)::
7153 :: EXPR :: modify :: I :: v159[#(20)] = #(-1)::
7157 :: EXPR :: modify :: I :: v159[#(21)] = #(104)::
7161 :: EXPR :: modify :: I :: v159[#(22)] = #(105)::
7165 :: EXPR :: modify :: I :: v159[#(23)] = #(106)::
7169 :: EXPR :: modify :: I :: v159[#(24)] = #(-1)::
7173 :: EXPR :: modify :: I :: v159[#(25)] = #(-1)::
7177 :: EXPR :: modify :: I :: v159[#(26)] = #(-1)::
7181 :: EXPR :: modify :: I :: v159[#(27)] = #(-1)::
7185 :: EXPR :: modify :: I :: v159[#(28)] = #(-1)::
13065 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
13073 :: NORM :: declaration :: [J :: v9 = new []::
13074 :: EXPR :: modify :: J :: v9[#(2)] = #(1024 l)::
13078 :: EXPR :: modify :: J :: v9[#(3)] = #(1624 l)::
13082 :: EXPR :: modify :: J :: v9[#(4)] = #(2048 l)::
13086 :: EXPR :: modify :: J :: v9[#(5)] = #(2378 l)::
13090 :: EXPR :: modify :: J :: v9[#(6)] = #(2648 l)::
13094 :: EXPR :: modify :: J :: v9[#(7)] = #(2875 l)::
13098 :: EXPR :: modify :: J :: v9[#(8)] = #(3072 l)::
13102 :: EXPR :: modify :: J :: v9[#(9)] = #(3247 l)::
13106 :: EXPR :: modify :: J :: v9[#(10)] = #(3402 l)::
13110 :: EXPR :: modify :: J :: v9[#(11)] = #(3543 l)::
13114 :: EXPR :: modify :: J :: v9[#(12)] = #(3672 l)::
13118 :: EXPR :: modify :: J :: v9[#(13)] = #(3790 l)::
13122 :: EXPR :: modify :: J :: v9[#(14)] = #(3899 l)::
13126 :: EXPR :: modify :: J :: v9[#(15)] = #(4001 l)::
13130 :: EXPR :: modify :: J :: v9[#(16)] = #(4096 l)::
13134 :: EXPR :: modify :: J :: v9[#(17)] = #(4186 l)::
13138 :: EXPR :: modify :: J :: v9[#(18)] = #(4271 l)::
13142 :: EXPR :: modify :: J :: v9[#(19)] = #(4350 l)::
13146 :: EXPR :: modify :: J :: v9[#(20)] = #(4426 l)::
13150 :: EXPR :: modify :: J :: v9[#(21)] = #(4498 l)::
13154 :: EXPR :: modify :: J :: v9[#(22)] = #(4567 l)::
13158 :: EXPR :: modify :: J :: v9[#(23)] = #(4633 l)::
13162 :: EXPR :: modify :: J :: v9[#(24)] = #(4696 l)::
13166 :: EXPR :: modify :: J :: v9[#(25)] = #(4756 l)::
13170 :: EXPR :: modify :: J :: v9[#(26)] = #(4814 l)::
13174 :: EXPR :: modify :: J :: v9[#(27)] = #(4870 l)::
13178 :: EXPR :: modify :: J :: v9[#(28)] = #(4923 l)::
13182 :: EXPR :: modify :: J :: v9[#(29)] = #(4975 l)::
13186 :: EXPR :: modify :: J :: v9[#(30)] = #(5025 l)::
13190 :: EXPR :: modify :: J :: v9[#(31)] = #(5074 l)::
13194 :: EXPR :: modify :: J :: v9[#(32)] = #(5120 l)::
13198 :: EXPR :: modify :: J :: v9[#(33)] = #(5166 l)::
13202 :: EXPR :: modify :: J :: v9[#(34)] = #(5210 l)::
13206 :: EXPR :: modify :: J :: v9[#(35)] = #(5253 l)::
13210 :: EXPR :: modify :: J :: v9[#(36)] = #(5295 l)::
13216 :: CALL :: call :: Ljava/math/BigInteger :: v82 = valueOf(#(152125131763605 l))::
13222 :: NORM :: declaration :: [Ljava/math/BigInteger :: v83 = new java.math.BigInteger[]::CF,13223
13223 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.posConst = v83::
13225 :: NORM :: declaration :: [Ljava/math/BigInteger :: v84 = new java.math.BigInteger[]::CF,13226
13226 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.negConst = v84::
13229 :: NORM :: declaration :: [I :: v85 = new []::
13230 :: EXPR :: modify :: I :: v85[#(0)] = v94::
13234 :: EXPR :: reference :: [Ljava/math/BigInteger :: v86 = java.math.BigInteger.posConst::CF,13236
13236 :: NORM :: declaration :: Ljava/math/BigInteger :: v87 = new java.math.BigInteger::DD,13242
13242 :: EXPR :: modify :: Ljava/lang/Object :: v86[v94] = v87::
13246 :: EXPR :: reference :: [Ljava/math/BigInteger :: v89 = java.math.BigInteger.negConst::CF,13248
13248 :: NORM :: declaration :: Ljava/math/BigInteger :: v90 = new java.math.BigInteger::DD,13254
13254 :: EXPR :: modify :: Ljava/lang/Object :: v89[v94] = v90::
13258 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v94 + #(1)::DD,14651
13259 :: PRED :: IF :: Z :: if (v94 <= #(16)) goto 295::CF,13260:CD,13229:CD,13234:CD,13236:CD,13246:CD,13248:CD,13258:CD,14651
13260 :: NORM :: declaration :: Ljava/math/BigInteger :: v95 = new java.math.BigInteger::CF,13261
13261 :: NORM :: declaration :: [I :: v96 = new []::
13269 :: CALL :: call :: Ljava/math/BigInteger :: v100 = valueOf(#(1 l))::
13275 :: CALL :: call :: Ljava/math/BigInteger :: v103 = valueOf(#(2 l))::
13281 :: CALL :: call :: Ljava/math/BigInteger :: v106 = valueOf(#(10 l))::
13287 :: NORM :: declaration :: [I :: v107 = new []::
13288 :: EXPR :: modify :: I :: v107[#(0)] = #(7)::
13292 :: EXPR :: modify :: I :: v107[#(1)] = #(25)::
13296 :: EXPR :: modify :: I :: v107[#(2)] = #(81)::
13300 :: EXPR :: modify :: I :: v107[#(3)] = #(241)::
13304 :: EXPR :: modify :: I :: v107[#(4)] = #(673)::
13308 :: EXPR :: modify :: I :: v107[#(5)] = #(1793)::
13312 :: EXPR :: modify :: I :: v107[#(6)] = #(2147483647)::
13318 :: NORM :: declaration :: [B :: v114 = new []::
13319 :: EXPR :: modify :: B :: v114[#(0)] = #(-25)::
13323 :: EXPR :: modify :: B :: v114[#(2)] = #(1)::
13327 :: EXPR :: modify :: B :: v114[#(4)] = #(2)::
13331 :: EXPR :: modify :: B :: v114[#(6)] = #(1)::
13335 :: EXPR :: modify :: B :: v114[#(8)] = #(3)::
13339 :: EXPR :: modify :: B :: v114[#(10)] = #(1)::
13343 :: EXPR :: modify :: B :: v114[#(12)] = #(2)::
13347 :: EXPR :: modify :: B :: v114[#(14)] = #(1)::
13351 :: EXPR :: modify :: B :: v114[#(16)] = #(4)::
13355 :: EXPR :: modify :: B :: v114[#(18)] = #(1)::
13359 :: EXPR :: modify :: B :: v114[#(20)] = #(2)::
13363 :: EXPR :: modify :: B :: v114[#(22)] = #(1)::
13367 :: EXPR :: modify :: B :: v114[#(24)] = #(3)::
13371 :: EXPR :: modify :: B :: v114[#(26)] = #(1)::
13375 :: EXPR :: modify :: B :: v114[#(28)] = #(2)::
13379 :: EXPR :: modify :: B :: v114[#(30)] = #(1)::
13383 :: EXPR :: modify :: B :: v114[#(32)] = #(5)::
13387 :: EXPR :: modify :: B :: v114[#(34)] = #(1)::
13391 :: EXPR :: modify :: B :: v114[#(36)] = #(2)::
13395 :: EXPR :: modify :: B :: v114[#(38)] = #(1)::
13399 :: EXPR :: modify :: B :: v114[#(40)] = #(3)::
13403 :: EXPR :: modify :: B :: v114[#(42)] = #(1)::
13407 :: EXPR :: modify :: B :: v114[#(44)] = #(2)::
13411 :: EXPR :: modify :: B :: v114[#(46)] = #(1)::
13415 :: EXPR :: modify :: B :: v114[#(48)] = #(4)::
13419 :: EXPR :: modify :: B :: v114[#(50)] = #(1)::
13423 :: EXPR :: modify :: B :: v114[#(52)] = #(2)::
13427 :: EXPR :: modify :: B :: v114[#(54)] = #(1)::
13431 :: EXPR :: modify :: B :: v114[#(56)] = #(3)::
13435 :: EXPR :: modify :: B :: v114[#(58)] = #(1)::
13439 :: EXPR :: modify :: B :: v114[#(60)] = #(2)::
13443 :: EXPR :: modify :: B :: v114[#(62)] = #(1)::
13447 :: EXPR :: modify :: B :: v114[#(64)] = #(6)::
13451 :: EXPR :: modify :: B :: v114[#(66)] = #(1)::
13455 :: EXPR :: modify :: B :: v114[#(68)] = #(2)::
13459 :: EXPR :: modify :: B :: v114[#(70)] = #(1)::
13463 :: EXPR :: modify :: B :: v114[#(72)] = #(3)::
13467 :: EXPR :: modify :: B :: v114[#(74)] = #(1)::
13471 :: EXPR :: modify :: B :: v114[#(76)] = #(2)::
13475 :: EXPR :: modify :: B :: v114[#(78)] = #(1)::
13479 :: EXPR :: modify :: B :: v114[#(80)] = #(4)::
13483 :: EXPR :: modify :: B :: v114[#(82)] = #(1)::
13487 :: EXPR :: modify :: B :: v114[#(84)] = #(2)::
13491 :: EXPR :: modify :: B :: v114[#(86)] = #(1)::
13495 :: EXPR :: modify :: B :: v114[#(88)] = #(3)::
13499 :: EXPR :: modify :: B :: v114[#(90)] = #(1)::
13503 :: EXPR :: modify :: B :: v114[#(92)] = #(2)::
13507 :: EXPR :: modify :: B :: v114[#(94)] = #(1)::
13511 :: EXPR :: modify :: B :: v114[#(96)] = #(5)::
13515 :: EXPR :: modify :: B :: v114[#(98)] = #(1)::
13519 :: EXPR :: modify :: B :: v114[#(100)] = #(2)::
13523 :: EXPR :: modify :: B :: v114[#(102)] = #(1)::
13527 :: EXPR :: modify :: B :: v114[#(104)] = #(3)::
13531 :: EXPR :: modify :: B :: v114[#(106)] = #(1)::
13535 :: EXPR :: modify :: B :: v114[#(108)] = #(2)::
13539 :: EXPR :: modify :: B :: v114[#(110)] = #(1)::
13543 :: EXPR :: modify :: B :: v114[#(112)] = #(4)::
13547 :: EXPR :: modify :: B :: v114[#(114)] = #(1)::
13551 :: EXPR :: modify :: B :: v114[#(116)] = #(2)::
13555 :: EXPR :: modify :: B :: v114[#(118)] = #(1)::
13559 :: EXPR :: modify :: B :: v114[#(120)] = #(3)::
13563 :: EXPR :: modify :: B :: v114[#(122)] = #(1)::
13567 :: EXPR :: modify :: B :: v114[#(124)] = #(2)::
13571 :: EXPR :: modify :: B :: v114[#(126)] = #(1)::
13575 :: EXPR :: modify :: B :: v114[#(128)] = #(7)::
13579 :: EXPR :: modify :: B :: v114[#(130)] = #(1)::
13583 :: EXPR :: modify :: B :: v114[#(132)] = #(2)::
13587 :: EXPR :: modify :: B :: v114[#(134)] = #(1)::
13591 :: EXPR :: modify :: B :: v114[#(136)] = #(3)::
13595 :: EXPR :: modify :: B :: v114[#(138)] = #(1)::
13599 :: EXPR :: modify :: B :: v114[#(140)] = #(2)::
13603 :: EXPR :: modify :: B :: v114[#(142)] = #(1)::
13607 :: EXPR :: modify :: B :: v114[#(144)] = #(4)::
13611 :: EXPR :: modify :: B :: v114[#(146)] = #(1)::
13615 :: EXPR :: modify :: B :: v114[#(148)] = #(2)::
13619 :: EXPR :: modify :: B :: v114[#(150)] = #(1)::
13623 :: EXPR :: modify :: B :: v114[#(152)] = #(3)::
13627 :: EXPR :: modify :: B :: v114[#(154)] = #(1)::
13631 :: EXPR :: modify :: B :: v114[#(156)] = #(2)::
13635 :: EXPR :: modify :: B :: v114[#(158)] = #(1)::
13639 :: EXPR :: modify :: B :: v114[#(160)] = #(5)::
13643 :: EXPR :: modify :: B :: v114[#(162)] = #(1)::
13647 :: EXPR :: modify :: B :: v114[#(164)] = #(2)::
13651 :: EXPR :: modify :: B :: v114[#(166)] = #(1)::
13655 :: EXPR :: modify :: B :: v114[#(168)] = #(3)::
13659 :: EXPR :: modify :: B :: v114[#(170)] = #(1)::
13663 :: EXPR :: modify :: B :: v114[#(172)] = #(2)::
13667 :: EXPR :: modify :: B :: v114[#(174)] = #(1)::
13671 :: EXPR :: modify :: B :: v114[#(176)] = #(4)::
13675 :: EXPR :: modify :: B :: v114[#(178)] = #(1)::
13679 :: EXPR :: modify :: B :: v114[#(180)] = #(2)::
13683 :: EXPR :: modify :: B :: v114[#(182)] = #(1)::
13687 :: EXPR :: modify :: B :: v114[#(184)] = #(3)::
13691 :: EXPR :: modify :: B :: v114[#(186)] = #(1)::
13695 :: EXPR :: modify :: B :: v114[#(188)] = #(2)::
13699 :: EXPR :: modify :: B :: v114[#(190)] = #(1)::
13703 :: EXPR :: modify :: B :: v114[#(192)] = #(6)::
13707 :: EXPR :: modify :: B :: v114[#(194)] = #(1)::
13711 :: EXPR :: modify :: B :: v114[#(196)] = #(2)::
13715 :: EXPR :: modify :: B :: v114[#(198)] = #(1)::
13719 :: EXPR :: modify :: B :: v114[#(200)] = #(3)::
13723 :: EXPR :: modify :: B :: v114[#(202)] = #(1)::
13727 :: EXPR :: modify :: B :: v114[#(204)] = #(2)::
13731 :: EXPR :: modify :: B :: v114[#(206)] = #(1)::
13735 :: EXPR :: modify :: B :: v114[#(208)] = #(4)::
13739 :: EXPR :: modify :: B :: v114[#(210)] = #(1)::
13743 :: EXPR :: modify :: B :: v114[#(212)] = #(2)::
13747 :: EXPR :: modify :: B :: v114[#(214)] = #(1)::
13751 :: EXPR :: modify :: B :: v114[#(216)] = #(3)::
13755 :: EXPR :: modify :: B :: v114[#(218)] = #(1)::
13759 :: EXPR :: modify :: B :: v114[#(220)] = #(2)::
13763 :: EXPR :: modify :: B :: v114[#(222)] = #(1)::
13767 :: EXPR :: modify :: B :: v114[#(224)] = #(5)::
13771 :: EXPR :: modify :: B :: v114[#(226)] = #(1)::
13775 :: EXPR :: modify :: B :: v114[#(228)] = #(2)::
13779 :: EXPR :: modify :: B :: v114[#(230)] = #(1)::
13783 :: EXPR :: modify :: B :: v114[#(232)] = #(3)::
13787 :: EXPR :: modify :: B :: v114[#(234)] = #(1)::
13791 :: EXPR :: modify :: B :: v114[#(236)] = #(2)::
13795 :: EXPR :: modify :: B :: v114[#(238)] = #(1)::
13799 :: EXPR :: modify :: B :: v114[#(240)] = #(4)::
13803 :: EXPR :: modify :: B :: v114[#(242)] = #(1)::
13807 :: EXPR :: modify :: B :: v114[#(244)] = #(2)::
13811 :: EXPR :: modify :: B :: v114[#(246)] = #(1)::
13815 :: EXPR :: modify :: B :: v114[#(248)] = #(3)::
13819 :: EXPR :: modify :: B :: v114[#(250)] = #(1)::
13823 :: EXPR :: modify :: B :: v114[#(252)] = #(2)::
13827 :: EXPR :: modify :: B :: v114[#(254)] = #(1)::
13833 :: NORM :: declaration :: [Ljava/lang/String :: v225 = new java.lang.String[]::CF,13834
13834 :: EXPR :: modify :: [Ljava/lang/String :: java.math.BigInteger.zeros = v225::
13836 :: EXPR :: reference :: [Ljava/lang/String :: v226 = java.math.BigInteger.zeros::
13838 :: EXPR :: modify :: Ljava/lang/Object :: v226[#(63)] = #(000000000000000000000...)::
13843 :: EXPR :: reference :: [Ljava/lang/String :: v229 = java.math.BigInteger.zeros::
13845 :: EXPR :: reference :: [Ljava/lang/String :: v230 = java.math.BigInteger.zeros::
13847 :: EXPR :: reference :: Ljava/lang/Object :: v231 = v230[#(63)]::JM,13857
13851 :: CALL :: call :: Ljava/lang/String :: v233 = v231.substring(#(0), v235)::JM,13857
13857 :: EXPR :: modify :: Ljava/lang/Object :: v229[v235] = v233::
13861 :: EXPR :: assign :: Ljava/lang/Object :: v234 = v235 + #(1)::DD,14652
13862 :: PRED :: IF :: Z :: if (v235 < #(63)) goto 1158::CD,13843:CD,13845:CD,13851:CD,13861:CD,14652:CF,13863
13863 :: NORM :: declaration :: [I :: v236 = new []::
13864 :: EXPR :: modify :: I :: v236[#(2)] = #(62)::
13868 :: EXPR :: modify :: I :: v236[#(3)] = #(39)::
13872 :: EXPR :: modify :: I :: v236[#(4)] = #(31)::
13876 :: EXPR :: modify :: I :: v236[#(5)] = #(27)::
13880 :: EXPR :: modify :: I :: v236[#(6)] = #(24)::
13884 :: EXPR :: modify :: I :: v236[#(7)] = #(22)::
13888 :: EXPR :: modify :: I :: v236[#(8)] = #(20)::
13892 :: EXPR :: modify :: I :: v236[#(9)] = #(19)::
13896 :: EXPR :: modify :: I :: v236[#(10)] = #(18)::
13900 :: EXPR :: modify :: I :: v236[#(11)] = #(18)::
13904 :: EXPR :: modify :: I :: v236[#(12)] = #(17)::
13908 :: EXPR :: modify :: I :: v236[#(13)] = #(17)::
13912 :: EXPR :: modify :: I :: v236[#(14)] = #(16)::
13916 :: EXPR :: modify :: I :: v236[#(15)] = #(16)::
13920 :: EXPR :: modify :: I :: v236[#(16)] = #(15)::
13924 :: EXPR :: modify :: I :: v236[#(17)] = #(15)::
13928 :: EXPR :: modify :: I :: v236[#(18)] = #(15)::
13932 :: EXPR :: modify :: I :: v236[#(19)] = #(14)::
13936 :: EXPR :: modify :: I :: v236[#(20)] = #(14)::
13940 :: EXPR :: modify :: I :: v236[#(21)] = #(14)::
13944 :: EXPR :: modify :: I :: v236[#(22)] = #(14)::
13948 :: EXPR :: modify :: I :: v236[#(23)] = #(13)::
13952 :: EXPR :: modify :: I :: v236[#(24)] = #(13)::
13956 :: EXPR :: modify :: I :: v236[#(25)] = #(13)::
13960 :: EXPR :: modify :: I :: v236[#(26)] = #(13)::
13964 :: EXPR :: modify :: I :: v236[#(27)] = #(13)::
13968 :: EXPR :: modify :: I :: v236[#(28)] = #(13)::
13972 :: EXPR :: modify :: I :: v236[#(29)] = #(12)::
13976 :: EXPR :: modify :: I :: v236[#(30)] = #(12)::
13980 :: EXPR :: modify :: I :: v236[#(31)] = #(12)::
13984 :: EXPR :: modify :: I :: v236[#(32)] = #(12)::
13988 :: EXPR :: modify :: I :: v236[#(33)] = #(12)::
13992 :: EXPR :: modify :: I :: v236[#(34)] = #(12)::
13996 :: EXPR :: modify :: I :: v236[#(35)] = #(12)::
14000 :: EXPR :: modify :: I :: v236[#(36)] = #(12)::
14006 :: NORM :: declaration :: [Ljava/math/BigInteger :: v238 = new java.math.BigInteger[]::JM,14011
14007 :: CALL :: call :: Ljava/math/BigInteger :: v241 = valueOf(#(4611686018427387904 l))::JM,14011
14011 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(2)] = v241::
14015 :: CALL :: call :: Ljava/math/BigInteger :: v244 = valueOf(#(4052555153018976267 l))::JM,14019
14019 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(3)] = v244::
14023 :: CALL :: call :: Ljava/math/BigInteger :: v246 = valueOf(#(4611686018427387904 l))::JM,14027
14027 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(4)] = v246::
14031 :: CALL :: call :: Ljava/math/BigInteger :: v249 = valueOf(#(7450580596923828125 l))::JM,14035
14035 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(5)] = v249::
14039 :: CALL :: call :: Ljava/math/BigInteger :: v252 = valueOf(#(4738381338321616896 l))::JM,14043
14043 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(6)] = v252::
14047 :: CALL :: call :: Ljava/math/BigInteger :: v255 = valueOf(#(3909821048582988049 l))::JM,14051
14051 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(7)] = v255::
14055 :: CALL :: call :: Ljava/math/BigInteger :: v258 = valueOf(#(1152921504606846976 l))::JM,14059
14059 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(8)] = v258::
14063 :: CALL :: call :: Ljava/math/BigInteger :: v261 = valueOf(#(1350851717672992089 l))::JM,14067
14067 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(9)] = v261::
14071 :: CALL :: call :: Ljava/math/BigInteger :: v264 = valueOf(#(1000000000000000000 l))::JM,14075
14075 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(10)] = v264::
14079 :: CALL :: call :: Ljava/math/BigInteger :: v267 = valueOf(#(5559917313492231481 l))::JM,14083
14083 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(11)] = v267::
14087 :: CALL :: call :: Ljava/math/BigInteger :: v270 = valueOf(#(2218611106740436992 l))::JM,14091
14091 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(12)] = v270::
14095 :: CALL :: call :: Ljava/math/BigInteger :: v273 = valueOf(#(8650415919381337933 l))::JM,14099
14099 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(13)] = v273::
14103 :: CALL :: call :: Ljava/math/BigInteger :: v276 = valueOf(#(2177953337809371136 l))::JM,14107
14107 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(14)] = v276::
14111 :: CALL :: call :: Ljava/math/BigInteger :: v279 = valueOf(#(6568408355712890625 l))::JM,14115
14115 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(15)] = v279::
14119 :: CALL :: call :: Ljava/math/BigInteger :: v281 = valueOf(#(1152921504606846976 l))::JM,14123
14123 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(16)] = v281::
14127 :: CALL :: call :: Ljava/math/BigInteger :: v284 = valueOf(#(2862423051509815793 l))::JM,14131
14131 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(17)] = v284::
14135 :: CALL :: call :: Ljava/math/BigInteger :: v287 = valueOf(#(6746640616477458432 l))::JM,14139
14139 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(18)] = v287::
14143 :: CALL :: call :: Ljava/math/BigInteger :: v290 = valueOf(#(799006685782884121 l))::JM,14147
14147 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(19)] = v290::
14151 :: CALL :: call :: Ljava/math/BigInteger :: v293 = valueOf(#(1638400000000000000 l))::JM,14155
14155 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(20)] = v293::
14159 :: CALL :: call :: Ljava/math/BigInteger :: v296 = valueOf(#(3243919932521508681 l))::JM,14163
14163 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(21)] = v296::
14167 :: CALL :: call :: Ljava/math/BigInteger :: v299 = valueOf(#(6221821273427820544 l))::JM,14171
14171 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(22)] = v299::
14175 :: CALL :: call :: Ljava/math/BigInteger :: v302 = valueOf(#(504036361936467383 l))::JM,14179
14179 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(23)] = v302::
14183 :: CALL :: call :: Ljava/math/BigInteger :: v305 = valueOf(#(876488338465357824 l))::JM,14187
14187 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(24)] = v305::
14191 :: CALL :: call :: Ljava/math/BigInteger :: v308 = valueOf(#(1490116119384765625 l))::JM,14195
14195 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(25)] = v308::
14199 :: CALL :: call :: Ljava/math/BigInteger :: v311 = valueOf(#(2481152873203736576 l))::JM,14203
14203 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(26)] = v311::
14207 :: CALL :: call :: Ljava/math/BigInteger :: v313 = valueOf(#(4052555153018976267 l))::JM,14211
14211 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(27)] = v313::
14215 :: CALL :: call :: Ljava/math/BigInteger :: v316 = valueOf(#(6502111422497947648 l))::JM,14219
14219 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(28)] = v316::
14223 :: CALL :: call :: Ljava/math/BigInteger :: v319 = valueOf(#(353814783205469041 l))::JM,14227
14227 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(29)] = v319::
14231 :: CALL :: call :: Ljava/math/BigInteger :: v322 = valueOf(#(531441000000000000 l))::JM,14235
14235 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(30)] = v322::
14239 :: CALL :: call :: Ljava/math/BigInteger :: v325 = valueOf(#(787662783788549761 l))::JM,14243
14243 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(31)] = v325::
14247 :: CALL :: call :: Ljava/math/BigInteger :: v327 = valueOf(#(1152921504606846976 l))::JM,14251
14251 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(32)] = v327::
14255 :: CALL :: call :: Ljava/math/BigInteger :: v330 = valueOf(#(1667889514952984961 l))::JM,14259
14259 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(33)] = v330::
14263 :: CALL :: call :: Ljava/math/BigInteger :: v333 = valueOf(#(2386420683693101056 l))::JM,14267
14267 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(34)] = v333::
14271 :: CALL :: call :: Ljava/math/BigInteger :: v336 = valueOf(#(3379220508056640625 l))::JM,14275
14275 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(35)] = v336::
14279 :: CALL :: call :: Ljava/math/BigInteger :: v338 = valueOf(#(4738381338321616896 l))::JM,14283
14283 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(36)] = v338::
14289 :: NORM :: declaration :: [I :: v339 = new []::
14290 :: EXPR :: modify :: I :: v339[#(2)] = #(30)::
14294 :: EXPR :: modify :: I :: v339[#(3)] = #(19)::
14298 :: EXPR :: modify :: I :: v339[#(4)] = #(15)::
14302 :: EXPR :: modify :: I :: v339[#(5)] = #(13)::
14306 :: EXPR :: modify :: I :: v339[#(6)] = #(11)::
14310 :: EXPR :: modify :: I :: v339[#(7)] = #(11)::
14314 :: EXPR :: modify :: I :: v339[#(8)] = #(10)::
14318 :: EXPR :: modify :: I :: v339[#(9)] = #(9)::
14322 :: EXPR :: modify :: I :: v339[#(10)] = #(9)::
14326 :: EXPR :: modify :: I :: v339[#(11)] = #(8)::
14330 :: EXPR :: modify :: I :: v339[#(12)] = #(8)::
14334 :: EXPR :: modify :: I :: v339[#(13)] = #(8)::
14338 :: EXPR :: modify :: I :: v339[#(14)] = #(8)::
14342 :: EXPR :: modify :: I :: v339[#(15)] = #(7)::
14346 :: EXPR :: modify :: I :: v339[#(16)] = #(7)::
14350 :: EXPR :: modify :: I :: v339[#(17)] = #(7)::
14354 :: EXPR :: modify :: I :: v339[#(18)] = #(7)::
14358 :: EXPR :: modify :: I :: v339[#(19)] = #(7)::
14362 :: EXPR :: modify :: I :: v339[#(20)] = #(7)::
14366 :: EXPR :: modify :: I :: v339[#(21)] = #(7)::
14370 :: EXPR :: modify :: I :: v339[#(22)] = #(6)::
14374 :: EXPR :: modify :: I :: v339[#(23)] = #(6)::
14378 :: EXPR :: modify :: I :: v339[#(24)] = #(6)::
14382 :: EXPR :: modify :: I :: v339[#(25)] = #(6)::
14386 :: EXPR :: modify :: I :: v339[#(26)] = #(6)::
14390 :: EXPR :: modify :: I :: v339[#(27)] = #(6)::
14394 :: EXPR :: modify :: I :: v339[#(28)] = #(6)::
14398 :: EXPR :: modify :: I :: v339[#(29)] = #(6)::
14402 :: EXPR :: modify :: I :: v339[#(30)] = #(6)::
14406 :: EXPR :: modify :: I :: v339[#(31)] = #(6)::
14410 :: EXPR :: modify :: I :: v339[#(32)] = #(6)::
14414 :: EXPR :: modify :: I :: v339[#(33)] = #(6)::
14418 :: EXPR :: modify :: I :: v339[#(34)] = #(6)::
14422 :: EXPR :: modify :: I :: v339[#(35)] = #(6)::
14426 :: EXPR :: modify :: I :: v339[#(36)] = #(5)::
14432 :: NORM :: declaration :: [I :: v340 = new []::
14433 :: EXPR :: modify :: I :: v340[#(2)] = #(1073741824)::
14437 :: EXPR :: modify :: I :: v340[#(3)] = #(1162261467)::
14441 :: EXPR :: modify :: I :: v340[#(4)] = #(1073741824)::
14445 :: EXPR :: modify :: I :: v340[#(5)] = #(1220703125)::
14449 :: EXPR :: modify :: I :: v340[#(6)] = #(362797056)::
14453 :: EXPR :: modify :: I :: v340[#(7)] = #(1977326743)::
14457 :: EXPR :: modify :: I :: v340[#(8)] = #(1073741824)::
14461 :: EXPR :: modify :: I :: v340[#(9)] = #(387420489)::
14465 :: EXPR :: modify :: I :: v340[#(10)] = #(1000000000)::
14469 :: EXPR :: modify :: I :: v340[#(11)] = #(214358881)::
14473 :: EXPR :: modify :: I :: v340[#(12)] = #(429981696)::
14477 :: EXPR :: modify :: I :: v340[#(13)] = #(815730721)::
14481 :: EXPR :: modify :: I :: v340[#(14)] = #(1475789056)::
14485 :: EXPR :: modify :: I :: v340[#(15)] = #(170859375)::
14489 :: EXPR :: modify :: I :: v340[#(16)] = #(268435456)::
14493 :: EXPR :: modify :: I :: v340[#(17)] = #(410338673)::
14497 :: EXPR :: modify :: I :: v340[#(18)] = #(612220032)::
14501 :: EXPR :: modify :: I :: v340[#(19)] = #(893871739)::
14505 :: EXPR :: modify :: I :: v340[#(20)] = #(1280000000)::
14509 :: EXPR :: modify :: I :: v340[#(21)] = #(1801088541)::
14513 :: EXPR :: modify :: I :: v340[#(22)] = #(113379904)::
14517 :: EXPR :: modify :: I :: v340[#(23)] = #(148035889)::
14521 :: EXPR :: modify :: I :: v340[#(24)] = #(191102976)::
14525 :: EXPR :: modify :: I :: v340[#(25)] = #(244140625)::
14529 :: EXPR :: modify :: I :: v340[#(26)] = #(308915776)::
14533 :: EXPR :: modify :: I :: v340[#(27)] = #(387420489)::
14537 :: EXPR :: modify :: I :: v340[#(28)] = #(481890304)::
14541 :: EXPR :: modify :: I :: v340[#(29)] = #(594823321)::
14545 :: EXPR :: modify :: I :: v340[#(30)] = #(729000000)::
14549 :: EXPR :: modify :: I :: v340[#(31)] = #(887503681)::
14553 :: EXPR :: modify :: I :: v340[#(32)] = #(1073741824)::
14557 :: EXPR :: modify :: I :: v340[#(33)] = #(1291467969)::
14561 :: EXPR :: modify :: I :: v340[#(34)] = #(1544804416)::
14565 :: EXPR :: modify :: I :: v340[#(35)] = #(1838265625)::
14569 :: EXPR :: modify :: I :: v340[#(36)] = #(60466176)::
14575 :: NORM :: declaration :: [Ljava/io/ObjectStreamField :: v372 = new java.io.ObjectStreamField[]::CF,14576
14576 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v373 = new java.io.ObjectStreamField::DD,14584
14577 :: EXPR :: reference :: Ljava/lang/Class :: v375 = java.lang.Integer.TYPE::
14584 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(0)] = v373::
14588 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v377 = new java.io.ObjectStreamField::DD,14595:CF,14589
14589 :: EXPR :: assign :: Ljava/lang/Class :: v379 = metadata <Primordial,[B>-><Primordial,Ljava/lang/Class>::
14595 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(1)] = v377::
14599 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v381 = new java.io.ObjectStreamField::DD,14607
14600 :: EXPR :: reference :: Ljava/lang/Class :: v383 = java.lang.Integer.TYPE::
14607 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(2)] = v381::
14611 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v385 = new java.io.ObjectStreamField::DD,14619
14612 :: EXPR :: reference :: Ljava/lang/Class :: v387 = java.lang.Integer.TYPE::
14619 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(3)] = v385::
14623 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v389 = new java.io.ObjectStreamField::DD,14631
14624 :: EXPR :: reference :: Ljava/lang/Class :: v391 = java.lang.Integer.TYPE::
14631 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(4)] = v389::
14635 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v393 = new java.io.ObjectStreamField::DD,14643
14636 :: EXPR :: reference :: Ljava/lang/Class :: v395 = java.lang.Integer.TYPE::
14643 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(5)] = v393::
14651 :: EXPR :: assign :: null :: PHI v94 = #(1), v93::DD,13230:DD,13258:DD,13259
14652 :: EXPR :: assign :: null :: PHI v235 = #(0), v234::JM,13857:DD,13861:DD,13862
16422 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
16468 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.<clinit>()::CD,16471
16471 :: NORM :: declaration :: [B :: v3 = new []::
16472 :: EXPR :: modify :: B :: v3[#(0)] = #(48)::
16476 :: EXPR :: modify :: B :: v3[#(1)] = #(49)::
16480 :: EXPR :: modify :: B :: v3[#(2)] = #(50)::
16484 :: EXPR :: modify :: B :: v3[#(3)] = #(51)::
16488 :: EXPR :: modify :: B :: v3[#(4)] = #(52)::
16492 :: EXPR :: modify :: B :: v3[#(5)] = #(53)::
16496 :: EXPR :: modify :: B :: v3[#(6)] = #(54)::
16500 :: EXPR :: modify :: B :: v3[#(7)] = #(55)::
16504 :: EXPR :: modify :: B :: v3[#(8)] = #(56)::
16508 :: EXPR :: modify :: B :: v3[#(9)] = #(57)::
16512 :: EXPR :: modify :: B :: v3[#(10)] = #(97)::
16516 :: EXPR :: modify :: B :: v3[#(11)] = #(98)::
16520 :: EXPR :: modify :: B :: v3[#(12)] = #(99)::
16524 :: EXPR :: modify :: B :: v3[#(13)] = #(100)::
16528 :: EXPR :: modify :: B :: v3[#(14)] = #(101)::
16532 :: EXPR :: modify :: B :: v3[#(15)] = #(102)::
16748 :: ENTR :: entry :: null :: org.hsqldb.lib.InOutUtil.readLine(java.io.InputStream,java.io.OutputStream)::CE,16749:CD,16753:CD,16757:CD,16765:CD,16766:CD,16767:JM,16764
16749 :: EXIT :: exit :: I :: org.hsqldb.lib.InOutUtil.readLine(java.io.InputStream,java.io.OutputStream)::JM,46:JM,31
16753 :: CALL :: call :: I :: v6 = p1 $in .read()::JM,16757:JM,16764
16757 :: PRED :: IF :: Z :: if (v6 != #(-1)) goto 15::CD,16759:CD,16764:CD,16766:CD,16767
16759 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,16766:DD,16767
16764 :: PRED :: IF :: Z :: if (v6 != #(10)) goto 3::CF,16766:CF,16767:CD,16753:CD,16757
16765 :: NORM :: compound :: I :: return v13::CF,16749
16766 :: EXPR :: assign :: null :: PHI v12 = v9, #(0)::JM,16757:JM,16764:DD,16759:DD,16767
16767 :: EXPR :: assign :: null :: PHI v13 = v12, v9::CF,16765
16780 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.containsAt([],int,[])::CE,16781:CD,16786:CD,16792:CD,16793
16781 :: EXIT :: exit :: Z :: org.hsqldb.lib.ArrayUtil.containsAt([],int,[])::JM,55:JM,69:JM,83
16786 :: CALL :: call :: I :: v6 = countSameElements(p1 $arra , p2 $start , p3 $arrb )::JM,16793:CL,19771
16792 :: EXPR :: assign :: I :: v7 = p3 $arrb .length::CF,16793
16793 :: PRED :: IF :: Z :: if (v6 != v7) goto 14::CD,16794:CD,16795
16794 :: NORM :: compound :: Z :: return #(1)::CF,16781
16795 :: NORM :: compound :: Z :: return #(0)::CF,16781
16802 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.countStartElementsAt([],int,[])::CE,16803:CD,16826:CD,16827:CD,16828:CD,16832:CD,16833:CD,16834:JM,16822
16803 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayUtil.countStartElementsAt([],int,[])::JM,97:JM,98
16810 :: EXPR :: reference :: B :: v8 = p1 $arra [v18]::DD,16818
16814 :: EXPR :: reference :: B :: v9 = p3 $arrb [v12]::DD,16818
16818 :: PRED :: IF :: Z :: if (v8 != v9) goto 31::CD,16819:CD,16821:CD,16822:CD,16823:CD,16825:CD,16826:CD,16827:CD,16829:CD,16830:CD,16831:CD,16832:CD,16833:CD,16834
16819 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v17 + #(1)::DD,16832
16821 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v12 + #(1)::DD,16831:CF,16829
16822 :: EXPR :: assign :: I :: v7 = p3 $arrb .length::CF,16823
16823 :: PRED :: IF :: Z :: if (v12 < v7) goto 17::CD,16818:CD,16834
16825 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v18 + #(1)::DD,16833:CF,16832
16826 :: EXPR :: assign :: I :: v6 = p1 $arra .length::CF,16827
16827 :: PRED :: IF :: Z :: if (v16 < v6) goto 11::CF,16834:CD,16822:CD,16823:CD,16829:CD,16830:CD,16831
16828 :: NORM :: compound :: I :: return v19::CF,16803
16829 :: EXPR :: assign :: null :: PHI v17 = v15, v17::CF,16830:DD,16819:DD,16829:DD,16834
16830 :: EXPR :: assign :: null :: PHI v18 = v16, v18::CF,16831:DD,16825:DD,16830
16831 :: EXPR :: assign :: null :: PHI v12 = #(0), v11::DD,16821:DD,16823:CF,16822
16832 :: EXPR :: assign :: null :: PHI v15 = #(0), v13::CF,16833:DD,16829:DD,16834
16833 :: EXPR :: assign :: null :: PHI v16 = p2 $start , v14::DD,16827:DD,16830:CF,16826
16834 :: EXPR :: assign :: null :: PHI v19 = v17, v15::CF,16828
16856 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.countNonStartElementsAt([],int,[])::CE,16857:CD,16879:CD,16880:CD,16881:CD,16885:CD,16886:CD,16887:JM,16875
16857 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayUtil.countNonStartElementsAt([],int,[])::JM,107
16864 :: EXPR :: reference :: B :: v8 = p1 $arra [v18]::DD,16872
16868 :: EXPR :: reference :: B :: v9 = p3 $arrb [v12]::DD,16872
16872 :: PRED :: IF :: Z :: if (v8 != v9) goto 28::CD,16874:CD,16875:CD,16876:CD,16882:CD,16883:CD,16884:CD,16887
16874 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v12 + #(1)::DD,16884:CF,16882
16875 :: EXPR :: assign :: I :: v7 = p3 $arrb .length::CF,16876
16876 :: PRED :: IF :: Z :: if (v12 < v7) goto 17::CD,16872:CD,16877:CD,16878:CD,16879:CD,16880:CD,16885:CD,16886:CD,16887
16877 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v17 + #(1)::DD,16885:CF,16878
16878 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v18 + #(1)::DD,16886:CF,16885
16879 :: EXPR :: assign :: I :: v6 = p1 $arra .length::CF,16880
16880 :: PRED :: IF :: Z :: if (v16 < v6) goto 11::CF,16887:CD,16875:CD,16876:CD,16882:CD,16883:CD,16884
16881 :: NORM :: compound :: I :: return v19::CF,16857
16882 :: EXPR :: assign :: null :: PHI v17 = v15, v17::CF,16883:DD,16877:DD,16882:DD,16887
16883 :: EXPR :: assign :: null :: PHI v18 = v16, v18::CF,16884:DD,16878:DD,16883
16884 :: EXPR :: assign :: null :: PHI v12 = #(0), v11::DD,16874:DD,16876:CF,16875
16885 :: EXPR :: assign :: null :: PHI v15 = #(0), v13::CF,16886:DD,16882:DD,16887
16886 :: EXPR :: assign :: null :: PHI v16 = p2 $start , v14::DD,16880:DD,16883:CF,16879
16887 :: EXPR :: assign :: null :: PHI v19 = v17, v15::CF,16881
17217 :: ENTR :: entry :: null :: org.hsqldb.server.WebServerConnection.processGet(java.lang.String,boolean)::CD,17223:CD,17228:CD,17254:CD,17259:CD,17442
17223 :: CALL :: call :: Z :: v7 = p1 $name .endsWith(#(/))::JM,17442:JM,17228
17228 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 39::CF,17442:CF,17229:CD,17230:CD,17241:CD,17245:CD,17250
17229 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::JM,17442
17230 :: CALL :: call :: Ljava/lang/String :: v11 = valueOf(p1 $name )::
17238 :: EXPR :: reference :: Lorg/hsqldb/server/WebServer :: v13 = p0 $this .server::JM,17442:JM,17241
17241 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getDefaultWebPage()::JM,17442:JM,17241
17245 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v9.append(v15)::JM,17442
17250 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::JM,17442
17254 :: CALL :: call :: I :: v23 = v20.indexOf(#(..))::JM,17259
17259 :: PRED :: IF :: Z :: if (v23 == #(-1)) goto 54::CF,17265:CD,17273:CD,17281:CD,17286:CD,17290:CD,17292:CD,17304:CD,17309:CD,17314:CD,17322:CD,17443
17265 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::JM,17443
17273 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v28)::
17281 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v25.append(v20)::JM,17443
17286 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,17443
17290 :: EXPR :: reference :: C :: v36 = java.io.File.separatorChar::DD,17292
17292 :: PRED :: IF :: Z :: if (v36 == #(47)) goto 101::CF,17443:CD,17293:CD,17295
17293 :: EXPR :: reference :: C :: v38 = java.io.File.separatorChar::JM,17443
17295 :: CALL :: call :: Ljava/lang/String :: v40 = v35.replace(#(47), v38)::JM,17443
17304 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
17309 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v41)::
17314 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
17322 :: NORM :: declaration :: Ljava/io/File :: v52 = new java.io.File::
17442 :: EXPR :: assign :: null :: PHI v20 = p1 $name , v19::JM,17259:JM,17443
17443 :: EXPR :: assign :: null :: PHI v41 = v35, v40::
17500 :: ENTR :: entry :: null :: org.hsqldb.error.Error.runtimeError(int,java.lang.String)::CD,17505:CD,17510:CD,17511
17505 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v5 = error(p1 $code , p2 $add )::CL,20700
17510 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v6 = new java.lang.RuntimeException::
17511 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getMessage()::CL,20715
17525 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getBundleHandle(java.lang.String,java.lang.ClassLoader)::CD,17530:CD,17535:CD,17540:CD,17547:CD,17548:CD,17550:CD,17554:CD,17562:CD,17567:CD,17573:CD,17578:CD,17579
17530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
17535 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v4.append(p1 $name )::
17540 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::
17547 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
17548 :: EXPR :: reference :: Ljava/util/Locale :: v13 = org.hsqldb.resources.ResourceBundleHandler.locale::
17550 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
17554 :: CALL :: call :: Ljava/lang/String :: v17 = valueOf(v15)::
17562 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v12.append(v10)::
17567 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
17573 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(v22)::JM,17578:CL,20724
17578 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,17579
17579 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 109::CD,17582:CD,17590:CD,17597:CD,17601:CD,17602:CD,17608
17582 :: CALL :: call :: Ljava/util/ResourceBundle :: v30 = getBundle(v10, v28, p2 $cl )::CL,20760
17590 :: CALL :: call :: Z :: v33 = v31.add(v30)::CL,20831
17597 :: CALL :: call :: I :: v36 = v34.size()::JM,17601:CL,20875
17601 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v36 - #(1)::
17602 :: CALL :: call :: Ljava/lang/Integer :: v40 = valueOf(v38)::
17608 :: CALL :: call :: Ljava/lang/Object :: v43 = v41.put(v22, v40)::CL,18369
17796 :: NORM :: declaration :: [Ljava/lang/Object :: v5 = new java.lang.Object[]::DD,17797
17797 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .elementData = v5::
17804 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getNewGetBundleMethod()::CD,17824
17824 :: CALL :: call :: Ljava/lang/reflect/Method :: v13 = v2.getMethod(#(getBundle), v4)::
17856 :: ENTR :: entry :: null :: org.hsqldb.lib.IntValueHashMap.put(java.lang.Object,int)::CD,17863:CD,17873
17863 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v16 = new java.util.NoSuchElementException::
17873 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .addOrRemove(#(0 l), v9, p1 $key , #(null), #(0))::CL,20978
18022 :: ENTR :: entry :: null :: org.hsqldb.types.Charset.getDefaultInstance()::CF,18023:CD,18025:CD,18027
18023 :: EXIT :: exit :: Lorg/hsqldb/types/Charset :: org.hsqldb.types.Charset.getDefaultInstance()::JM,18719
18025 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v2 = org.hsqldb.types.Charset.SQL_TEXT::CF,18027
18027 :: NORM :: compound :: Lorg/hsqldb/types/Charset :: return v2::CF,18023
18029 :: ENTR :: entry :: null :: org.hsqldb.types.Collation.getDefaultInstance()::CF,18030:CD,18032:CD,18034
18030 :: EXIT :: exit :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.getDefaultInstance()::JM,18713
18032 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v2 = org.hsqldb.types.Collation.defaultCollation::CF,18034
18034 :: NORM :: compound :: Lorg/hsqldb/types/Collation :: return v2::CF,18030
18036 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newResultMetaData(int)::CE,18037:CD,18041:CD,18048
18037 :: EXIT :: exit :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.ResultMetaData.newResultMetaData(int)::JM,983
18041 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v6 = newResultMetaData(v3, #(null), p1 $colCount , p1 $colCount )::JM,18048:CL,21803
18048 :: NORM :: compound :: Lorg/hsqldb/result/ResultMetaData :: return v6::DD,18037
18066 :: EXPR :: modify :: B :: p0 $this .nullability = #(1)::
18069 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .catalog = p1 $catalog ::
18072 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schema = p2 $schema ::
18075 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .table = p3 $table ::
18078 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p4 $name ::
18093 :: ENTR :: entry :: null :: org.hsqldb.ColumnBase.setType(org.hsqldb.types.Type)::JM,18098
18098 :: EXPR :: modify :: Lorg/hsqldb/types/Type :: p0 $this .dataType = p1 $type ::
18104 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.prepareData()::CD,18111
18108 :: EXPR :: reference :: [Lorg/hsqldb/ColumnBase :: v3 = p0 $this .columns::DD,18111
18111 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,18143:CD,18145
18113 :: EXPR :: reference :: [Lorg/hsqldb/types/Type :: v7 = p0 $this .columnTypes::
18116 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v7[v16]::DD,18120
18120 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 36::CD,18131:CF,18139
18121 :: EXPR :: reference :: [Lorg/hsqldb/types/Type :: v9 = p0 $this .columnTypes::
18131 :: CALL :: call :: Lorg/hsqldb/types/Type :: v13 = v11.getDataType()::JM,18135:CL,21852
18135 :: EXPR :: modify :: Ljava/lang/Object :: v9[v16] = v13::
18139 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,18145
18140 :: EXPR :: reference :: I :: v6 = p0 $this .columnCount::DD,18143
18143 :: PRED :: IF :: Z :: if (v16 < v6) goto 13::CD,18120:CD,18139:CD,18145
18145 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,18139:DD,18143
18161 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newDataResult(org.hsqldb.result.ResultMetaData)::CD,18165:CD,18169:JM,21929:JM,18176
18165 :: CALL :: call :: Lorg/hsqldb/result/Result :: v5 = newResult(#(3))::CL,21861
18169 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v6 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,18173
18173 :: EXPR :: modify :: Lorg/hsqldb/navigator/RowSetNavigator :: v5.navigator = v6::
18176 :: EXPR :: modify :: Lorg/hsqldb/result/ResultMetaData :: v5.metaData = p1 $md ::
18187 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newUpdateCountResult(int)::JM,21947:JM,21951
18247 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(int)::CD,18251
18251 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(null), p1 $code , #(0), #(null))::CL,21974
18263 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.newSystemObjectName(java.lang.String,int)::CE,18264:CD,18268:JM,27586:JM,23619:JM,27590:JM,23607:JM,27577:JM,23610:JM,27580:JM,23613:CD,18279
18264 :: EXIT :: exit :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.newSystemObjectName(java.lang.String,int)::JM,1183:JM,1218:JM,1232
18268 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v4 = new org.hsqldb.HsqlNameManager$HsqlName::DD,18279
18279 :: NORM :: compound :: Lorg/hsqldb/HsqlNameManager$HsqlName :: return v4::DD,18264
18286 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.HsqlName.setSchemaIfNull(org.hsqldb.HsqlNameManager.HsqlName)::CD,18294:JM,18295
18291 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v4 = p0 $this .schema::DD,18294
18294 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 12::
18295 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .schema = p1 $schema ::
18303 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.newInfoSchemaObjectName(java.lang.String,boolean,int)::CE,18304:CD,18309:JM,27586:JM,23619:JM,27590:JM,23607:JM,27577:JM,23610:JM,27580:JM,23613:CD,18320:CD,18325
18304 :: EXIT :: exit :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.newInfoSchemaObjectName(java.lang.String,boolean,int)::JM,18614
18309 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5 = new org.hsqldb.HsqlNameManager$HsqlName::DD,18325
18320 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v9 = org.hsqldb.SqlInvariants.INFORMATION_SCHEMA_HSQLNAME::DD,18322
18322 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5.schema = v9::
18325 :: NORM :: compound :: Lorg/hsqldb/HsqlNameManager$HsqlName :: return v5::DD,18304
18344 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .name = p1 $name ::
18369 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.put(java.lang.Object,java.lang.Object)::CD,18375
18375 :: CALL :: call :: Ljava/lang/Object :: v8 = p0 $this .addOrRemove(#(0 l), #(0 l), p1 $key , p2 $value , #(0))::CL,20978
18391 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.values()::CD,18398
18395 :: EXPR :: reference :: Lorg/hsqldb/lib/Collection :: v3 = p0 $this .values::DD,18398
18398 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 20::CD,18399:JM,22222
18399 :: NORM :: declaration :: Lorg/hsqldb/lib/HashMap$Values :: v5 = new org.hsqldb.lib.HashMap$Values::DD,18404
18404 :: EXPR :: modify :: Lorg/hsqldb/lib/Collection :: p0 $this .values = v5::
18417 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.Values.iterator()::
18440 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.next()::CE,18441:CD,18466:CD,18475:CD,18493:CD,18504:CD,18533
18441 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.map.BaseHashMap.BaseHashIterator.next()::JM,2506
18466 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v31 = new java.util.NoSuchElementException::
18475 :: CALL :: call :: Z :: v11 = p0 $this .hasNext()::CL,18563
18493 :: CALL :: call :: I :: v21 = v18.nextLookup(v19)::JM,18498:CL,22258
18498 :: EXPR :: modify :: I :: p0 $this .lookup = v21::
18501 :: EXPR :: reference :: Z :: v22 = p0 $this .keys::DD,18504
18504 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 102::CD,18518:CD,18532
18505 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v27 = p0 $this .this$0::
18508 :: EXPR :: reference :: [Ljava/lang/Object :: v28 = v27.objectKeyTable::
18511 :: EXPR :: reference :: I :: v29 = p0 $this .lookup::
18514 :: EXPR :: reference :: Ljava/lang/Object :: v30 = v28[v29]::DD,18518
18518 :: NORM :: compound :: Ljava/lang/Object :: return v30::DD,18441
18519 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v23 = p0 $this .this$0::
18522 :: EXPR :: reference :: [Ljava/lang/Object :: v24 = v23.objectValueTable::
18525 :: EXPR :: reference :: I :: v25 = p0 $this .lookup::
18528 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v24[v25]::DD,18532
18532 :: NORM :: compound :: Ljava/lang/Object :: return v26::DD,18441
18533 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v12 = new java.util.NoSuchElementException::
18563 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.hasNext()::CE,18564:CD,18579
18564 :: EXIT :: exit :: Z :: org.hsqldb.map.BaseHashMap.BaseHashIterator.hasNext()::JM,2532
18567 :: EXPR :: reference :: I :: v3 = p0 $this .counter::DD,18579
18570 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v4 = p0 $this .this$0::
18573 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v5 = v4.hashIndex::
18576 :: EXPR :: reference :: I :: v6 = v5.elementCount::DD,18579
18579 :: PRED :: IF :: Z :: if (v3 >= v6) goto 20::CD,18580:CD,18581
18580 :: NORM :: compound :: Z :: return #(1)::DD,18564
18581 :: NORM :: compound :: Z :: return #(0)::DD,18564
18594 :: EXPR :: modify :: Z :: p0 $this .padSpace = #(1)::
18603 :: EXPR :: reference :: Ljava/util/Locale :: v10 = java.util.Locale.ENGLISH::DD,18605
18605 :: EXPR :: modify :: Ljava/util/Locale :: p0 $this .locale = v10::
18608 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v13 = newInfoSchemaObjectName(v9, #(0), #(15))::JM,18614:CL,18303
18614 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .name = v13::
18617 :: EXPR :: modify :: Z :: p0 $this .isUnicodeSimple = p1 $simple ::
18620 :: EXPR :: modify :: Z :: p0 $this .isFinal = #(1)::
18642 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newParameterMetaData(int)::JM,18667:JM,18670:CD,18646:JM,22372:CD,18651:CD,18655:CD,18659:CD,18663
18646 :: NORM :: declaration :: Lorg/hsqldb/result/ResultMetaData :: v3 = new org.hsqldb.result.ResultMetaData::
18651 :: NORM :: declaration :: [Lorg/hsqldb/types/Type :: v6 = new org.hsqldb.types.Type[]::DD,18652
18652 :: EXPR :: modify :: [Lorg/hsqldb/types/Type :: v3.columnTypes = v6::
18655 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::DD,18656
18656 :: EXPR :: modify :: [Ljava/lang/String :: v3.columnLabels = v7::
18659 :: NORM :: declaration :: [B :: v8 = new []::DD,18660
18660 :: EXPR :: modify :: [B :: v3.paramModes = v8::
18663 :: NORM :: declaration :: [B :: v9 = new []::DD,18664
18664 :: EXPR :: modify :: [B :: v3.paramNullable = v9::
18667 :: EXPR :: modify :: I :: v3.columnCount = p1 $colCount ::
18670 :: EXPR :: modify :: I :: v3.extendedColumnCount = p1 $colCount ::
18710 :: CALL :: call :: Lorg/hsqldb/types/Collation :: v9 = getDefaultInstance()::JM,18713:CL,18029
18713 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: p0 $this .collation = v9::
18716 :: CALL :: call :: Lorg/hsqldb/types/Charset :: v11 = getDefaultInstance()::JM,18719:CL,18022
18719 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: p0 $this .charset = v11::
18722 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .getNameStringPrivate()::JM,18726:CL,22429
18726 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .nameString = v13::
18842 :: PRED :: IF :: null :: switch p1 $type ::
18843 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(8)::
18847 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(16)::
18851 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(32)::
18855 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(64)::
18859 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(128)::
18863 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(256)::
18867 :: CALL :: call :: Ljava/lang/RuntimeException :: v11 = runtimeError(#(201), #(NumberType))::CL,17500
18906 :: PRED :: IF :: Z :: if (p2 $type  == #(94)) goto 26::CD,18907:CD,18920
18907 :: PRED :: IF :: Z :: if (p2 $type  == #(95)) goto 26::CD,18920
18909 :: EXPR :: modify :: Z :: p0 $this .withTimeZone = v12::
18912 :: CALL :: call :: Ljava/lang/String :: v14 = p0 $this .getNameStringPrivate()::JM,18916:CL,22543
18916 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .nameString = v14::
18920 :: EXPR :: assign :: null :: PHI v12 = #(0), #(1)::DD,18909
18935 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.newIntervalType(int,long,int)::CD,18941:CD,18945:JM,22688:JM,27424:JM,22405:JM,27406:JM,22414:JM,27409:JM,22675:JM,27414:JM,22390:JM,22680:JM,22393:JM,22396:JM,22399
18941 :: CALL :: call :: I :: v6 = getStartIntervalType(p1 $type )::CL,22568
18945 :: CALL :: call :: I :: v8 = getEndIntervalType(p1 $type )::CL,22600
18993 :: PRED :: IF :: Z :: if (p1 $dataType  != #(null)) goto 20::CF,19003:CD,18994
18994 :: EXPR :: reference :: Lorg/hsqldb/types/Type :: v10 = org.hsqldb.types.Type.SQL_ALL_TYPES::DD,19003
18996 :: EXPR :: modify :: Lorg/hsqldb/types/Type :: p0 $this .dataType = v11::
18999 :: EXPR :: modify :: I :: p0 $this .maxCardinality = p2 $cardinality ::
19003 :: EXPR :: assign :: null :: PHI v11 = p1 $dataType , v10::DD,18996
19052 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyHashMap.put(int,java.lang.Object)::CD,19059
19059 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .addOrRemove(v5, p2 $value , #(null), #(0))::CL,22710
19073 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.initPool()::CD,19082:CD,19084:CD,19085:CD,19107:CD,19109:CD,19156
19082 :: EXPR :: reference :: I :: v6 = org.hsqldb.map.ValuePool.POOLS_COUNT::CF,19084
19084 :: NORM :: declaration :: [Lorg/hsqldb/map/ValuePoolHashMap :: v7 = new org.hsqldb.map.ValuePoolHashMap[]::CF,19085
19085 :: EXPR :: modify :: [Lorg/hsqldb/map/ValuePoolHashMap :: org.hsqldb.map.ValuePool.poolList = v7::
19092 :: EXPR :: reference :: [Lorg/hsqldb/map/ValuePoolHashMap :: v11 = org.hsqldb.map.ValuePool.poolList::CF,19094
19094 :: NORM :: declaration :: Lorg/hsqldb/map/ValuePoolHashMap :: v12 = new org.hsqldb.map.ValuePoolHashMap::DD,19102
19102 :: EXPR :: modify :: Ljava/lang/Object :: v11[v17] = v12::
19106 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,19156
19107 :: EXPR :: reference :: I :: v9 = org.hsqldb.map.ValuePool.POOLS_COUNT::CF,19109
19109 :: PRED :: IF :: Z :: if (v17 < v9) goto 32::CD,19092:CD,19094:JM,22080:JM,22144:JM,22050:JM,22114:JM,22089:JM,27337:JM,22123:JM,27342:JM,22067:JM,23191:JM,22135:JM,22105:JM,23194:JM,22138:JM,22045:CD,19106:CD,19107:CD,19156
19156 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,19106:DD,19109
19193 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.getInt(int)::CD,19202
19202 :: CALL :: call :: Ljava/lang/Integer :: v6 = v4.getOrAddInteger(p1 $val )::CL,23207
19217 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.getBigDecimal(java.math.BigDecimal)::CD,19221
19221 :: PRED :: IF :: Z :: if (p1 $val  != #(null)) goto 6::CD,19228
19228 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.getOrAddObject(p1 $val )::CL,23409
19254 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicLong :: v4 = new java.util.concurrent.atomic.AtomicLong::DD,19259
19259 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicLong :: p0 $this .serialNumber = v4::
19262 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicLong :: v7 = new java.util.concurrent.atomic.AtomicLong::DD,19267
19267 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicLong :: p0 $this .sysNumber = v7::
19270 :: EXPR :: modify :: Z :: p0 $this .sqlRegularNames = #(1)::
19356 :: ENTR :: entry :: null :: org.hsqldb.HsqlDateTime.getDateSeconds(java.lang.String)::CD,19379
19379 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v15 = error(#(3407))::CL,18247
19402 :: EXPR :: modify :: J :: p0 $this .seconds = p1 $seconds ::
19405 :: EXPR :: modify :: I :: p0 $this .nanos = #(0)::
19408 :: EXPR :: modify :: I :: p0 $this .zone = #(0)::
19430 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyIntValueHashMap.put(int,int)::CD,19442
19442 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .addOrRemove(v7, v8, #(null), #(null), #(0))::CL,20978
19471 :: ENTR :: entry :: null :: org.hsqldb.types.NumberType.getNumberType(int,long,int)::CD,19477:CD,19501
19477 :: PRED :: IF :: null :: switch p1 $type ::JM,18867:JM,22405:JM,22390:JM,22393:JM,18842:JM,22396:JM,22414:JM,22399
19501 :: CALL :: call :: Ljava/lang/RuntimeException :: v8 = runtimeError(#(201), #(NumberType))::CL,17500
19771 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.countSameElements([],int,[])::CE,19772:CD,19777:CD,19778:CD,19779:CD,19780:CD,19795:CD,19796:CD,19797:CD,19798:CD,19799:JM,19781:JM,19783
19772 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayUtil.countSameElements([],int,[])::JM,16793
19777 :: EXPR :: assign :: I :: v6 = p1 $arra .length::DD,19778
19778 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v6 - p2 $start ::DD,19780:DD,19797:CF,19779
19779 :: EXPR :: assign :: I :: v8 = p3 $arrb .length::CF,19780
19780 :: PRED :: IF :: Z :: if (v7 <= v8) goto 22::CF,19797:CD,19781
19781 :: EXPR :: assign :: I :: v9 = p3 $arrb .length::DD,19797
19783 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v18 + p2 $start ::
19784 :: EXPR :: reference :: B :: v12 = p1 $arra [v11]::DD,19792
19788 :: EXPR :: reference :: B :: v13 = p3 $arrb [v18]::DD,19792
19792 :: PRED :: IF :: Z :: if (v12 != v13) goto 52::CD,19793:CD,19794:CD,19795:CD,19798:CD,19799:CF,19796
19793 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,19798:CF,19794
19794 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,19799:CF,19798
19795 :: PRED :: IF :: Z :: if (v18 < v10) goto 29::CD,19783:CD,19792:CF,19796
19796 :: NORM :: compound :: I :: return v17::CF,19772
19797 :: EXPR :: assign :: null :: PHI v10 = v7, v9::DD,19795
19798 :: EXPR :: assign :: null :: PHI v17 = #(0), v15::CF,19799:DD,19793:DD,19796
19799 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::DD,19783:DD,19794:DD,19795
20305 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getString(int,java.lang.String)::CE,20306:CD,20313:CD,20335:CD,20343:CD,20346:CD,20347:JM,20320:JM,20321
20306 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.resources.ResourceBundleHandler.getString(int,java.lang.String)::JM,33520:JM,33522
20313 :: PRED :: IF :: Z :: if (p1 $handle  < #(0)) goto 27::CD,20316:CD,20320:CD,20346
20316 :: CALL :: call :: I :: v8 = v6.size()::JM,20320:CL,20875
20320 :: PRED :: IF :: Z :: if (p1 $handle  >= v8) goto 27::CD,20321:CD,20346
20321 :: PRED :: IF :: Z :: if (p2 $key  != #(null)) goto 30::CD,20325:CD,20330:CD,20346
20325 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $handle )::JM,20330:CL,25958
20330 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,20346
20335 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 62::CD,20337:CD,20347
20337 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getString(p2 $key )::JM,20347
20343 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,20306
20346 :: EXPR :: assign :: null :: PHI v14 = #(null), v13::DD,20335:JM,20347
20347 :: EXPR :: assign :: null :: PHI v20 = #(null), v17, #(null)::CF,20343
20700 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(int,java.lang.String)::CD,20705
20705 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(null), p1 $code , p2 $add )::CL,26186
20715 :: ENTR :: entry :: null :: org.hsqldb.HsqlException.getMessage()::CE,20716:CD,20722
20716 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.HsqlException.getMessage()::
20719 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .message::DD,20722
20722 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,20716
20724 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.get(java.lang.Object)::CE,20725:CD,20733:CD,20739
20725 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.HashMap.get(java.lang.Object)::JM,17578
20733 :: CALL :: call :: I :: v7 = p0 $this .getLookup(p1 $key , v5)::JM,20739:CL,26259
20739 :: PRED :: IF :: Z :: if (v7 == #(-1)) goto 25::CD,20747:CD,20748
20740 :: EXPR :: reference :: [Ljava/lang/Object :: v10 = p0 $this .objectValueTable::
20743 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v7]::DD,20747
20747 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,20725
20748 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,20725
20760 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)::CD,20766:CD,20805
20766 :: PRED :: IF :: Z :: if (p3 $cl  != #(null)) goto 10::CD,20767:CD,20773:CD,20775
20767 :: CALL :: call :: Ljava/util/ResourceBundle :: v22 = getBundle(p1 $name , p2 $locale )::
20773 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v6 = org.hsqldb.resources.ResourceBundleHandler.newGetBundleMethod::DD,20775
20775 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 22::CD,20776:CD,20782:CD,20784:CD,20797
20776 :: CALL :: call :: Ljava/util/ResourceBundle :: v20 = getBundle(p1 $name , p2 $locale )::
20782 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v7 = org.hsqldb.resources.ResourceBundleHandler.newGetBundleMethod::CF,20784
20784 :: NORM :: declaration :: [Ljava/lang/Object :: v9 = new java.lang.Object[]::
20797 :: CALL :: call :: Ljava/lang/Object :: v14 = v7.invoke(#(null), v9)::
20805 :: CALL :: call :: Ljava/util/ResourceBundle :: v18 = getBundle(p1 $name , p2 $locale )::
20831 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.add(java.lang.Object)::CD,20842:CD,20843:CD,20860:JM,20853
20836 :: EXPR :: reference :: I :: v4 = p0 $this .elementCount::DD,20843
20839 :: EXPR :: reference :: [Ljava/lang/Object :: v5 = p0 $this .elementData::DD,20842
20842 :: EXPR :: assign :: I :: v6 = v5.length::CF,20843
20843 :: PRED :: IF :: Z :: if (v4 < v6) goto 17::CD,20844
20844 :: CALL :: call :: V :: p0 $this .increaseCapacity()::CL,26330
20847 :: EXPR :: reference :: [Ljava/lang/Object :: v8 = p0 $this .elementData::
20850 :: EXPR :: reference :: I :: v9 = p0 $this .elementCount::
20853 :: EXPR :: modify :: Ljava/lang/Object :: v8[v9] = p1 $element ::
20857 :: EXPR :: reference :: I :: v10 = p0 $this .elementCount::DD,20860
20860 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 + #(1)::DD,20861
20861 :: EXPR :: modify :: I :: p0 $this .elementCount = v12::
20875 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.size()::CE,20876:CD,20882
20876 :: EXIT :: exit :: I :: org.hsqldb.lib.HsqlArrayList.size()::JM,17601:JM,20320
20879 :: EXPR :: reference :: I :: v3 = p0 $this .elementCount::DD,20882
20882 :: NORM :: compound :: I :: return v3::CF,20876
20978 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)::CD,20991:CD,21347:JM,21280:JM,20992:JM,21122:JM,21381:JM,21446:JM,21062:JM,21255:JM,21096:JM,21320:JM,21386:JM,21068:JM,21421:JM,21267:JM,21109:JM,21433:JM,21369:JM,21082:JM,21402:JM,21050:JM,21406
20988 :: EXPR :: reference :: Z :: v9 = p0 $this .isObjectKey::DD,20991
20991 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 49::CD,20992:CD,21014:CD,21107:CD,21108:CD,21482
20992 :: PRED :: IF :: Z :: if (p3 $longValue  != #(null)) goto 19::CD,21014:CD,21107:CD,21108:CD,21482
21014 :: CALL :: call :: I :: v21 = v19.getHashIndex(v18)::CL,26463
21019 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v22 = p0 $this .hashIndex::
21022 :: EXPR :: reference :: [I :: v23 = v22.hashTable::
21025 :: EXPR :: reference :: I :: v24 = v23[v21]::DD,21482
21030 :: EXPR :: reference :: Z :: v26 = p0 $this .isObjectKey::DD,21033
21033 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 137::CD,21037:CD,21073
21034 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v27 = p0 $this .comparator::DD,21037
21037 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 113::CD,21045:CD,21050:CD,21062:CD,21068
21038 :: EXPR :: reference :: [Ljava/lang/Object :: v28 = p0 $this .objectKeyTable::
21041 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v28[v49]::JM,21050
21045 :: CALL :: call :: Z :: v31 = v29.equals(p3 $longValue )::JM,21050:JM,21109:JM,21062:JM,21255:JM,21320:JM,21369:JM,21068:JM,21421
21050 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 186::CD,21102:CD,21107:CD,21482
21052 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v32 = p0 $this .comparator::JM,21062:JM,21068
21055 :: EXPR :: reference :: [Ljava/lang/Object :: v33 = p0 $this .objectKeyTable::
21058 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[v49]::JM,21062:JM,21068
21062 :: CALL :: call :: I :: v36 = v32.compare(v34, p3 $longValue )::JM,21062:JM,21068:JM,21109:JM,21255:JM,21320:JM,21369:JM,21050:JM,21421
21068 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 186::CD,21102:CD,21107:CD,21482
21070 :: EXPR :: reference :: Z :: v37 = p0 $this .isIntKey::DD,21073
21073 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 160::CD,21081:CD,21082:CD,21083:CD,21088
21074 :: EXPR :: reference :: [I :: v38 = p0 $this .intKeyTable::
21077 :: EXPR :: reference :: I :: v39 = v38[v49]::DD,21081
21081 :: EXPR :: assign :: J :: v40 = CONVERT I to J v39::CF,21082
21082 :: EXPR :: assign :: Z :: v41 = p1 $longKey  == v40::DD,21083
21083 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 186::CD,21102:CD,21107:CD,21482
21085 :: EXPR :: reference :: Z :: v42 = p0 $this .isLongKey::DD,21088
21088 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 186::CD,21096:CD,21097:CD,21102:CD,21107:CD,21482
21089 :: EXPR :: reference :: [J :: v43 = p0 $this .longKeyTable::
21092 :: EXPR :: reference :: J :: v44 = v43[v49]::DD,21096
21096 :: EXPR :: assign :: Z :: v45 = p1 $longKey  == v44::DD,21097
21097 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 186::CD,21102:CD,21107:CD,21482
21102 :: CALL :: call :: I :: v48 = v46.getNextLookup(v49)::JM,21482:CL,26478
21107 :: PRED :: IF :: Z :: if (v49 >= #(0)) goto 81::CD,21033:CF,21108
21108 :: PRED :: IF :: Z :: if (v49 < #(0)) goto 516::CD,21109:CD,21320
21109 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 388::CD,21113:CD,21152:CD,21194:CD,21203:CD,21214:CD,21244:CD,21287
21110 :: EXPR :: reference :: Z :: v110 = p0 $this .isObjectKey::DD,21113
21113 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 231::CD,21122:CD,21123:CD,21133
21114 :: EXPR :: reference :: [Ljava/lang/Object :: v115 = p0 $this .objectKeyTable::
21117 :: EXPR :: modify :: Ljava/lang/Object :: v115[v49] = #(null)::
21122 :: EXPR :: assign :: Z :: v111 = p1 $longKey  == #(0 l)::DD,21123
21123 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 246::
21124 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
21127 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
21130 :: EXPR :: reference :: Z :: v112 = p0 $this .isIntKey::DD,21133
21133 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 264::
21134 :: EXPR :: reference :: [I :: v114 = p0 $this .intKeyTable::
21137 :: EXPR :: modify :: I :: v114[v49] = #(0)::
21142 :: EXPR :: reference :: [J :: v113 = p0 $this .longKeyTable::
21145 :: EXPR :: modify :: J :: v113[v49] = #(0 l)::
21149 :: EXPR :: reference :: Z :: v116 = p0 $this .isObjectValue::DD,21152
21152 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 299::CD,21171
21160 :: EXPR :: reference :: [Ljava/lang/Object :: v123 = p0 $this .objectValueTable::
21163 :: EXPR :: modify :: Ljava/lang/Object :: v123[v49] = #(null)::
21168 :: EXPR :: reference :: Z :: v117 = p0 $this .isIntValue::DD,21171
21171 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 317::CD,21183
21172 :: EXPR :: reference :: [I :: v120 = p0 $this .intValueTable::
21175 :: EXPR :: modify :: I :: v120[v49] = #(0)::
21180 :: EXPR :: reference :: Z :: v118 = p0 $this .isLongValue::DD,21183
21183 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 332::
21184 :: EXPR :: reference :: [J :: v119 = p0 $this .longValueTable::
21187 :: EXPR :: modify :: J :: v119[v49] = #(0 l)::
21194 :: CALL :: call :: V :: v125.unlinkNode(v21, v50, v49)::CL,26493
21200 :: EXPR :: reference :: [I :: v127 = p0 $this .accessTable::DD,21203
21203 :: PRED :: IF :: Z :: if (v127 == #(null)) goto 360::
21204 :: EXPR :: reference :: [I :: v128 = p0 $this .accessTable::
21207 :: EXPR :: modify :: I :: v128[v49] = #(0)::
21211 :: EXPR :: reference :: Z :: v129 = p0 $this .minimizeOnEmpty::DD,21214
21214 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 386::CD,21221
21215 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v130 = p0 $this .hashIndex::
21218 :: EXPR :: reference :: I :: v131 = v130.elementCount::DD,21221
21221 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 386::CD,21225
21225 :: CALL :: call :: V :: p0 $this .rehash(v132)::CL,26595
21241 :: EXPR :: reference :: Z :: v92 = p0 $this .isObjectValue::DD,21244
21244 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 432::CD,21263
21252 :: EXPR :: reference :: [Ljava/lang/Object :: v100 = p0 $this .objectValueTable::
21255 :: EXPR :: modify :: Ljava/lang/Object :: v100[v49] = p4 $null ::
21260 :: EXPR :: reference :: Z :: v93 = p0 $this .isIntValue::DD,21263
21263 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 451::CD,21267:CD,21276
21264 :: EXPR :: reference :: [I :: v96 = p0 $this .intValueTable::
21267 :: EXPR :: assign :: I :: v97 = CONVERT J to I p2 $null ::DD,21268
21268 :: EXPR :: modify :: I :: v96[v49] = v97::
21273 :: EXPR :: reference :: Z :: v94 = p0 $this .isLongValue::DD,21276
21276 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 466::
21277 :: EXPR :: reference :: [J :: v95 = p0 $this .longValueTable::
21280 :: EXPR :: modify :: J :: v95[v49] = p2 $null ::
21284 :: EXPR :: reference :: Z :: v102 = p0 $this .isLastAccessCount::DD,21287
21287 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 494::CD,21294:CD,21306
21288 :: EXPR :: reference :: [I :: v107 = p0 $this .accessTable::
21291 :: EXPR :: reference :: I :: v108 = p0 $this .accessCount::DD,21294
21294 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v108 + #(1)::DD,21295:DD,21298
21295 :: EXPR :: modify :: I :: p0 $this .accessCount = v109::
21298 :: EXPR :: modify :: I :: v107[v49] = v109::
21303 :: EXPR :: reference :: Z :: v103 = p0 $this .isAccessCount::DD,21306
21306 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 513::CD,21314
21307 :: EXPR :: reference :: [I :: v104 = p0 $this .accessTable::
21310 :: EXPR :: reference :: I :: v105 = v104[v49]::DD,21314
21314 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::DD,21315
21315 :: EXPR :: modify :: I :: v104[v49] = v106::
21320 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 522::CD,21331
21322 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v51 = p0 $this .hashIndex::
21325 :: EXPR :: reference :: I :: v52 = v51.elementCount::DD,21331
21328 :: EXPR :: reference :: I :: v53 = p0 $this .threshold::DD,21331
21331 :: PRED :: IF :: Z :: if (v52 < v53) goto 566::CD,21332:CD,21337:CD,21356:CD,21365:CD,21417:CD,21453
21332 :: CALL :: call :: Z :: v82 = p0 $this .reset()::CL,26905
21337 :: CALL :: call :: Ljava/lang/Object :: v87 = p0 $this .addOrRemove(p1 $longKey , p2 $null , p3 $longValue , p4 $null , p5 $objectKey )::CL,20978
21347 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v83 = new java.util.NoSuchElementException::
21356 :: CALL :: call :: I :: v56 = v54.linkNode(v21, v50)::JM,21411:JM,21391:CL,27015
21362 :: EXPR :: reference :: Z :: v57 = p0 $this .isObjectKey::DD,21365
21365 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 598::CD,21377
21366 :: EXPR :: reference :: [Ljava/lang/Object :: v67 = p0 $this .objectKeyTable::
21369 :: EXPR :: modify :: Ljava/lang/Object :: v67[v56] = p3 $longValue ::
21374 :: EXPR :: reference :: Z :: v58 = p0 $this .isIntKey::DD,21377
21377 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 634::CD,21381:CD,21386:CD,21387:CD,21398
21378 :: EXPR :: reference :: [I :: v64 = p0 $this .intKeyTable::
21381 :: EXPR :: assign :: I :: v65 = CONVERT J to I p1 $longKey ::DD,21382
21382 :: EXPR :: modify :: I :: v64[v56] = v65::
21386 :: EXPR :: assign :: Z :: v66 = p1 $longKey  == #(0 l)::DD,21387
21387 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 666::
21388 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
21391 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v56::
21395 :: EXPR :: reference :: Z :: v59 = p0 $this .isLongKey::DD,21398
21398 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 666::CD,21406:CD,21407
21399 :: EXPR :: reference :: [J :: v60 = p0 $this .longKeyTable::
21402 :: EXPR :: modify :: J :: v60[v56] = p1 $longKey ::
21406 :: EXPR :: assign :: Z :: v62 = p1 $longKey  == #(0 l)::DD,21407
21407 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 666::
21408 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
21411 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v56::
21414 :: EXPR :: reference :: Z :: v68 = p0 $this .isObjectValue::DD,21417
21417 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 685::CD,21429
21418 :: EXPR :: reference :: [Ljava/lang/Object :: v74 = p0 $this .objectValueTable::
21421 :: EXPR :: modify :: Ljava/lang/Object :: v74[v56] = p4 $null ::
21426 :: EXPR :: reference :: Z :: v69 = p0 $this .isIntValue::DD,21429
21429 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 704::CD,21433:CD,21442
21430 :: EXPR :: reference :: [I :: v72 = p0 $this .intValueTable::
21433 :: EXPR :: assign :: I :: v73 = CONVERT J to I p2 $null ::DD,21434
21434 :: EXPR :: modify :: I :: v72[v56] = v73::
21439 :: EXPR :: reference :: Z :: v70 = p0 $this .isLongValue::DD,21442
21442 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 719::
21443 :: EXPR :: reference :: [J :: v71 = p0 $this .longValueTable::
21446 :: EXPR :: modify :: J :: v71[v56] = p2 $null ::
21450 :: EXPR :: reference :: Z :: v75 = p0 $this .isLastAccessCount::DD,21453
21453 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 747::CD,21460:CD,21472
21454 :: EXPR :: reference :: [I :: v78 = p0 $this .accessTable::
21457 :: EXPR :: reference :: I :: v79 = p0 $this .accessCount::DD,21460
21460 :: EXPR :: assign :: Ljava/lang/Object :: v80 = v79 + #(1)::DD,21461:DD,21464
21461 :: EXPR :: modify :: I :: p0 $this .accessCount = v80::
21464 :: EXPR :: modify :: I :: v78[v56] = v80::
21469 :: EXPR :: reference :: Z :: v76 = p0 $this .isAccessCount::DD,21472
21472 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 763::
21473 :: EXPR :: reference :: [I :: v77 = p0 $this .accessTable::
21476 :: EXPR :: modify :: I :: v77[v56] = #(1)::
21482 :: EXPR :: assign :: null :: PHI v49 = v24, v48::DD,21107:DD,21108
21766 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlTimer$TaskQueue :: v5 = new org.hsqldb.lib.HsqlTimer$TaskQueue::DD,21772
21772 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer$TaskQueue :: p0 $this .taskQueue = v5::
21775 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlTimer$TaskRunner :: v8 = new org.hsqldb.lib.HsqlTimer$TaskRunner::DD,21780
21780 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer$TaskRunner :: p0 $this .taskRunner = v8::
21783 :: PRED :: IF :: Z :: if (p1 $threadFactory  != #(null)) goto 40::CD,21789
21785 :: EXPR :: modify :: Lorg/hsqldb/lib/ThreadFactory :: p0 $this .threadFactory = v11::
21789 :: EXPR :: assign :: null :: PHI v11 = p0 $this , p1 $threadFactory ::DD,21785
21803 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newResultMetaData(org.hsqldb.types.Type[],[],int,int)::JM,21826:JM,21829:JM,21832:JM,21823:CE,21804:CD,21810:JM,22372:CD,21815:CD,21819:CD,21835
21804 :: EXIT :: exit :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.ResultMetaData.newResultMetaData(org.hsqldb.types.Type[],[],int,int)::JM,18048
21810 :: NORM :: declaration :: Lorg/hsqldb/result/ResultMetaData :: v6 = new org.hsqldb.result.ResultMetaData::DD,21835
21815 :: NORM :: declaration :: [Ljava/lang/String :: v9 = new java.lang.String[]::DD,21816
21816 :: EXPR :: modify :: [Ljava/lang/String :: v6.columnLabels = v9::
21819 :: NORM :: declaration :: [Lorg/hsqldb/ColumnBase :: v10 = new org.hsqldb.ColumnBase[]::DD,21820
21820 :: EXPR :: modify :: [Lorg/hsqldb/ColumnBase :: v6.columns = v10::
21823 :: EXPR :: modify :: [Lorg/hsqldb/types/Type :: v6.columnTypes = p1 $types ::
21826 :: EXPR :: modify :: [I :: v6.colIndexes = p2 $baseColumnIndexes ::
21829 :: EXPR :: modify :: I :: v6.columnCount = p3 $colCount ::
21832 :: EXPR :: modify :: I :: v6.extendedColumnCount = p4 $extColCount ::
21835 :: NORM :: compound :: Lorg/hsqldb/result/ResultMetaData :: return v6::DD,21804
21852 :: ENTR :: entry :: null :: org.hsqldb.ColumnBase.getDataType()::CE,21853:CD,21859
21853 :: EXIT :: exit :: Lorg/hsqldb/types/Type :: org.hsqldb.ColumnBase.getDataType()::JM,18135
21856 :: EXPR :: reference :: Lorg/hsqldb/types/Type :: v3 = p0 $this .dataType::DD,21859
21859 :: NORM :: compound :: Lorg/hsqldb/types/Type :: return v3::CF,21853
21861 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newResult(int)::CE,21862:CD,21865:CD,21886:CD,21892:JM,27190:CD,21900:CD,21901
21862 :: EXIT :: exit :: Lorg/hsqldb/result/Result :: org.hsqldb.result.Result.newResult(int)::
21865 :: PRED :: IF :: null :: switch p1 $type ::CF,21867:CF,21873:CF,21879:CF,21901:JM,27174
21867 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v14 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,21901
21873 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v11 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,21901
21879 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v8 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,21901
21886 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(Result))::CL,17500
21892 :: NORM :: declaration :: Lorg/hsqldb/result/Result :: v17 = new org.hsqldb.result.Result::DD,21900
21897 :: EXPR :: modify :: Lorg/hsqldb/navigator/RowSetNavigator :: v17.navigator = v16::
21900 :: NORM :: compound :: Lorg/hsqldb/result/Result :: return v17::DD,21862
21901 :: EXPR :: assign :: null :: PHI v16 = #(null), #(null), v14, v11, v8, #(null)::CF,21892:DD,21897
21929 :: EXPR :: reference :: [[Ljava/lang/Object :: v4 = org.hsqldb.navigator.RowSetNavigatorClient.emptyTable::DD,21931
21931 :: EXPR :: modify :: [[Ljava/lang/Object :: p0 $this .table = v4::
21947 :: EXPR :: assign :: B :: v6 = CONVERT I to B p1 $mode ::DD,21948
21948 :: EXPR :: modify :: B :: p0 $this .mode = v6::
21951 :: EXPR :: modify :: I :: p0 $this .updateCount = p2 $count ::
21974 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(java.lang.Throwable,int,int,java.lang.Object[])::CD,21981:CD,21990:CD,21995:JM,27305:JM,27308:JM,27311
21981 :: CALL :: call :: Ljava/lang/String :: v7 = getMessage(p2 $code , p3 $subCode , p4 $add )::CL,27239
21990 :: CALL :: call :: Ljava/lang/String :: v13 = v7.substring(#(6))::
21995 :: CALL :: call :: Ljava/lang/String :: v17 = v7.substring(#(0), #(5))::
22038 :: EXPR :: modify :: I :: p0 $this .purgePolicy = #(0)::
22041 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
22045 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v30 = new java.lang.IllegalArgumentException::JM,22144:JM,22080:JM,22050:JM,22114:JM,22135:JM,22089:JM,22105:JM,27337:JM,22138:JM,22123:JM,27342
22050 :: PRED :: IF :: Z :: if (p1 $initialCapacity  >= #(3)) goto 35::CF,22144
22051 :: EXPR :: modify :: F :: p0 $this .loadFactor = #(1.0 f)::
22054 :: EXPR :: modify :: I :: p0 $this .initialCapacity = v11::
22057 :: EXPR :: modify :: I :: p0 $this .threshold = v11::
22067 :: NORM :: declaration :: Lorg/hsqldb/map/HashIndex :: v18 = new org.hsqldb.map.HashIndex::DD,22074
22074 :: EXPR :: modify :: Lorg/hsqldb/map/HashIndex :: p0 $this .hashIndex = v18::
22077 :: EXPR :: reference :: I :: v21 = p0 $this .threshold::DD,22084:DD,22093:DD,22101:DD,22109:DD,22118:DD,22127:DD,22139
22080 :: PRED :: IF :: Z :: if (p2 $keyType  != #(1)) goto 111::CD,22084:CD,22089
22081 :: EXPR :: modify :: Z :: p0 $this .isIntKey = #(1)::
22084 :: NORM :: declaration :: [I :: v24 = new []::DD,22085
22085 :: EXPR :: modify :: [I :: p0 $this .intKeyTable = v24::
22089 :: PRED :: IF :: Z :: if (p2 $keyType  != #(3)) goto 133::CD,22093:CD,22101
22090 :: EXPR :: modify :: Z :: p0 $this .isObjectKey = #(1)::
22093 :: NORM :: declaration :: [Ljava/lang/Object :: v23 = new java.lang.Object[]::DD,22094
22094 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectKeyTable = v23::
22098 :: EXPR :: modify :: Z :: p0 $this .isLongKey = #(1)::
22101 :: NORM :: declaration :: [J :: v22 = new []::DD,22102
22102 :: EXPR :: modify :: [J :: p0 $this .longKeyTable = v22::
22105 :: PRED :: IF :: Z :: if (p3 $valueType  != #(1)) goto 167::CD,22109:CD,22114
22106 :: EXPR :: modify :: Z :: p0 $this .isIntValue = #(1)::
22109 :: NORM :: declaration :: [I :: v28 = new []::DD,22110
22110 :: EXPR :: modify :: [I :: p0 $this .intValueTable = v28::
22114 :: PRED :: IF :: Z :: if (p3 $valueType  != #(3)) goto 189::CD,22118:CD,22123
22115 :: EXPR :: modify :: Z :: p0 $this .isObjectValue = #(1)::
22118 :: NORM :: declaration :: [Ljava/lang/Object :: v27 = new java.lang.Object[]::DD,22119
22119 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable = v27::
22123 :: PRED :: IF :: Z :: if (p3 $valueType  != #(2)) goto 210::CD,22127
22124 :: EXPR :: modify :: Z :: p0 $this .isLongValue = #(1)::
22127 :: NORM :: declaration :: [J :: v26 = new []::DD,22128
22128 :: EXPR :: modify :: [J :: p0 $this .longValueTable = v26::
22132 :: EXPR :: modify :: Z :: p0 $this .isNoValue = #(1)::
22135 :: EXPR :: modify :: Z :: p0 $this .isLastAccessCount = p4 $hasAccessCount ::
22138 :: PRED :: IF :: Z :: if (p4 $hasAccessCount  == #(0)) goto 232::CD,22139
22139 :: NORM :: declaration :: [I :: v29 = new []::DD,22140
22140 :: EXPR :: modify :: [I :: p0 $this .accessTable = v29::
22144 :: EXPR :: assign :: null :: PHI v11 = p1 $initialCapacity , #(3)::DD,22054:DD,22057
22222 :: EXPR :: modify :: Lorg/hsqldb/lib/HashMap :: p0 $this .this$0 = p1 $null ::
22258 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.nextLookup(int)::CE,22259:CD,22263:CD,22326:CD,22328
22259 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.nextLookup(int)::JM,18498
22263 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $lookup  + #(1)::DD,22328
22265 :: EXPR :: reference :: Z :: v8 = p0 $this .isObjectKey::DD,22268
22268 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 25::CD,22276:CD,22281
22269 :: EXPR :: reference :: [Ljava/lang/Object :: v10 = p0 $this .objectKeyTable::
22272 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v25]::DD,22276
22276 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 89::CD,22277:CD,22319:CD,22326:CD,22328
22277 :: NORM :: compound :: I :: return v25::CF,22259
22278 :: EXPR :: reference :: Z :: v13 = p0 $this .isIntKey::DD,22281
22281 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 60::CD,22289:CD,22307:CD,22308
22282 :: EXPR :: reference :: [I :: v14 = p0 $this .intKeyTable::
22285 :: EXPR :: reference :: I :: v15 = v14[v25]::DD,22289
22289 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,22290:CD,22294
22290 :: NORM :: compound :: I :: return v25::CF,22259
22291 :: EXPR :: reference :: Z :: v16 = p0 $this .hasZeroKey::DD,22294
22294 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 89::CD,22298:CD,22319:CD,22326:CD,22328
22295 :: EXPR :: reference :: I :: v17 = p0 $this .zeroKeyIndex::DD,22298
22298 :: PRED :: IF :: Z :: if (v25 != v17) goto 89::CD,22299:CD,22319:CD,22326:CD,22328
22299 :: NORM :: compound :: I :: return v25::CF,22259
22300 :: EXPR :: reference :: [J :: v18 = p0 $this .longKeyTable::
22303 :: EXPR :: reference :: J :: v19 = v18[v25]::DD,22307
22307 :: EXPR :: assign :: Z :: v21 = v19 == #(0 l)::DD,22308
22308 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 73::CD,22309:CD,22313
22309 :: NORM :: compound :: I :: return v25::CF,22259
22310 :: EXPR :: reference :: Z :: v22 = p0 $this .hasZeroKey::DD,22313
22313 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 89::CD,22317:CD,22319:CD,22326:CD,22328
22314 :: EXPR :: reference :: I :: v23 = p0 $this .zeroKeyIndex::DD,22317
22317 :: PRED :: IF :: Z :: if (v25 != v23) goto 89::CD,22318:CD,22319:CD,22326:CD,22328
22318 :: NORM :: compound :: I :: return v25::CF,22259
22319 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,22328
22320 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v6 = p0 $this .hashIndex::
22323 :: EXPR :: reference :: I :: v7 = v6.newNodePointer::DD,22326
22326 :: PRED :: IF :: Z :: if (v25 < v7) goto 7::CD,22268:CD,22327
22327 :: NORM :: compound :: I :: return #(-1)::CF,22259
22328 :: EXPR :: assign :: null :: PHI v25 = v5, v24::DD,22277:DD,22290:DD,22298:DD,22299:DD,22309:DD,22317:DD,22318:DD,22319:DD,22326
22372 :: EXPR :: modify :: I :: p0 $this .type = p1 $type ::
22390 :: EXPR :: modify :: I :: p0 $this .typeComparisonGroup = p1 $typeGroup ::
22393 :: EXPR :: modify :: I :: p0 $this .typeCode = p2 $type ::
22396 :: EXPR :: modify :: J :: p0 $this .precision = p3 $precision ::
22399 :: EXPR :: modify :: I :: p0 $this .scale = p4 $null ::
22402 :: EXPR :: reference :: I :: v8 = p0 $this .typeCode::DD,22405
22405 :: PRED :: IF :: Z :: if (v8 != #(1)) goto 40::CD,22414
22407 :: EXPR :: reference :: I :: v10 = p0 $this .typeCode::DD,22414
22410 :: EXPR :: modify :: I :: p0 $this .typeDataGroup = v12::
22414 :: EXPR :: assign :: null :: PHI v12 = #(12), v10::DD,22410
22429 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.getNameStringPrivate()::CE,22430:CD,22436:CD,22440
22430 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.types.CharacterType.getNameStringPrivate()::JM,18726
22433 :: EXPR :: reference :: I :: v3 = p0 $this .typeCode::DD,22436
22436 :: PRED :: IF :: null :: switch v3::CD,22437:CD,22438:CD,22439
22437 :: NORM :: compound :: Ljava/lang/String :: return #(CHARACTER)::DD,22430
22438 :: NORM :: compound :: Ljava/lang/String :: return #(VARCHAR)::DD,22430
22439 :: NORM :: compound :: Ljava/lang/String :: return #(CLOB)::DD,22430
22440 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(CharacterType))::CL,17500
22465 :: PRED :: IF :: null :: switch p2 $type ::
22466 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(101)::
22469 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(103)::
22473 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(104)::
22476 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(106)::
22480 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(101)::
22483 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(106)::
22487 :: CALL :: call :: Ljava/lang/RuntimeException :: v11 = runtimeError(#(201), #(DTIType))::CL,17500
22498 :: CALL :: call :: I :: v19 = v16.get(v17)::JM,22503:CL,27358
22503 :: EXPR :: modify :: I :: p0 $this .startPartIndex = v19::
22511 :: CALL :: call :: I :: v23 = v20.get(v21)::JM,22516:CL,27358
22516 :: EXPR :: modify :: I :: p0 $this .endPartIndex = v23::
22543 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.getNameStringPrivate()::CE,22544:CD,22550:CD,22556
22544 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.types.DateTimeType.getNameStringPrivate()::JM,18916
22547 :: EXPR :: reference :: I :: v3 = p0 $this .typeCode::DD,22550
22550 :: PRED :: IF :: null :: switch v3::CD,22551:CD,22552:CD,22553:CD,22554:CD,22555
22551 :: NORM :: compound :: Ljava/lang/String :: return #(DATE)::DD,22544
22552 :: NORM :: compound :: Ljava/lang/String :: return #(TIME)::DD,22544
22553 :: NORM :: compound :: Ljava/lang/String :: return #(TIME WITH TIME ZONE)::DD,22544
22554 :: NORM :: compound :: Ljava/lang/String :: return #(TIMESTAMP)::DD,22544
22555 :: NORM :: compound :: Ljava/lang/String :: return #(TIMESTAMP WITH TIME ZONE)::DD,22544
22556 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(DateTimeType))::CL,17500
22568 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.getStartIntervalType(int)::CD,22579
22579 :: CALL :: call :: Ljava/lang/RuntimeException :: v6 = runtimeError(#(201), #(IntervalType))::CL,17500
22600 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.getEndIntervalType(int)::CD,22618
22618 :: CALL :: call :: Ljava/lang/RuntimeException :: v6 = runtimeError(#(201), #(IntervalType))::CL,17500
22675 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v16 = error(#(3406))::CL,18247
22680 :: PRED :: IF :: null :: switch p5 $scale ::
22681 :: EXPR :: modify :: Z :: p0 $this .isYearMonth = #(1)::
22685 :: EXPR :: modify :: Z :: p0 $this .isYearMonth = #(0)::
22688 :: EXPR :: modify :: Z :: p0 $this .defaultPrecision = p7 $endIntervalType ::
22710 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemove(long,java.lang.Object,java.lang.Object,boolean)::CD,22722:CD,22771:CD,22772:CD,23025:JM,22912:JM,22979:JM,22964:JM,22773:JM,22774:JM,22760:JM,22968:JM,22872:JM,22955:JM,22861:JM,22750:JM,22990
22722 :: CALL :: call :: I :: v10 = v8.getHashIndex(v7)::CL,26463
22727 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v11 = p0 $this .hashIndex::
22730 :: EXPR :: reference :: [I :: v12 = v11.hashTable::
22733 :: EXPR :: reference :: I :: v13 = v12[v10]::DD,23025
22738 :: EXPR :: reference :: Z :: v17 = p0 $this .isIntKey::DD,22741
22741 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 61::CD,22749:CD,22750:CD,22751:CD,22760:CD,22761
22742 :: EXPR :: reference :: [I :: v18 = p0 $this .intKeyTable::
22745 :: EXPR :: reference :: I :: v19 = v18[v28]::DD,22749
22749 :: EXPR :: assign :: J :: v20 = CONVERT I to J v19::CF,22750
22750 :: EXPR :: assign :: Z :: v21 = p1 $longKey  == v20::DD,22751
22751 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 79::CD,22766:CD,22771:CD,23025
22753 :: EXPR :: reference :: [J :: v22 = p0 $this .longKeyTable::
22756 :: EXPR :: reference :: J :: v23 = v22[v28]::DD,22760
22760 :: EXPR :: assign :: Z :: v24 = p1 $longKey  == v23::DD,22761
22761 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 79::CD,22766:CD,22771:CD,23025
22766 :: CALL :: call :: I :: v27 = v25.getNextLookup(v28)::JM,23025:CL,26478
22771 :: PRED :: IF :: Z :: if (v28 >= #(0)) goto 37::CD,22741:CF,22772
22772 :: PRED :: IF :: Z :: if (v28 < #(0)) goto 300::CD,22773:CD,22912
22773 :: PRED :: IF :: Z :: if (p4 $objectValueTwo  == #(0)) goto 210::CD,22774:CD,22775:CD,22785:CD,22818:CD,22827:CD,22838:CD,22850:CD,22868:CD,22879
22774 :: EXPR :: assign :: Z :: v71 = p1 $longKey  == #(0 l)::DD,22775
22775 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 121::
22776 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
22779 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
22782 :: EXPR :: reference :: Z :: v72 = p0 $this .isIntKey::DD,22785
22785 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 139::
22786 :: EXPR :: reference :: [I :: v74 = p0 $this .intKeyTable::
22789 :: EXPR :: modify :: I :: v74[v28] = #(0)::
22794 :: EXPR :: reference :: [J :: v73 = p0 $this .longKeyTable::
22797 :: EXPR :: modify :: J :: v73[v28] = #(0 l)::
22808 :: EXPR :: reference :: [Ljava/lang/Object :: v77 = p0 $this .objectValueTable::
22811 :: EXPR :: modify :: Ljava/lang/Object :: v77[v28] = #(null)::
22818 :: CALL :: call :: V :: v78.unlinkNode(v10, v29, v28)::CL,26493
22824 :: EXPR :: reference :: Z :: v80 = p0 $this .isTwoObjectValue::DD,22827
22827 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 192::
22828 :: EXPR :: reference :: [Ljava/lang/Object :: v81 = p0 $this .objectKeyTable::
22831 :: EXPR :: modify :: Ljava/lang/Object :: v81[v28] = #(null)::
22835 :: EXPR :: reference :: [I :: v82 = p0 $this .accessTable::DD,22838
22838 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 208::
22839 :: EXPR :: reference :: [I :: v83 = p0 $this .accessTable::
22842 :: EXPR :: modify :: I :: v83[v28] = #(0)::
22847 :: EXPR :: reference :: Z :: v56 = p0 $this .isObjectValue::DD,22850
22850 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 234::
22858 :: EXPR :: reference :: [Ljava/lang/Object :: v59 = p0 $this .objectValueTable::
22861 :: EXPR :: modify :: Ljava/lang/Object :: v59[v28] = p2 $null ::
22865 :: EXPR :: reference :: Z :: v61 = p0 $this .isTwoObjectValue::DD,22868
22868 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 250::
22869 :: EXPR :: reference :: [Ljava/lang/Object :: v62 = p0 $this .objectKeyTable::
22872 :: EXPR :: modify :: Ljava/lang/Object :: v62[v28] = p3 $objectValue ::
22876 :: EXPR :: reference :: Z :: v63 = p0 $this .isLastAccessCount::DD,22879
22879 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 278::CD,22886:CD,22898
22880 :: EXPR :: reference :: [I :: v68 = p0 $this .accessTable::
22883 :: EXPR :: reference :: I :: v69 = p0 $this .accessCount::DD,22886
22886 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v69 + #(1)::DD,22887:DD,22890
22887 :: EXPR :: modify :: I :: p0 $this .accessCount = v70::
22890 :: EXPR :: modify :: I :: v68[v28] = v70::
22895 :: EXPR :: reference :: Z :: v64 = p0 $this .isAccessCount::DD,22898
22898 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 297::CD,22906
22899 :: EXPR :: reference :: [I :: v65 = p0 $this .accessTable::
22902 :: EXPR :: reference :: I :: v66 = v65[v28]::DD,22906
22906 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v66 + #(1)::DD,22907
22907 :: EXPR :: modify :: I :: v65[v28] = v67::
22912 :: PRED :: IF :: Z :: if (p4 $objectValueTwo  == #(0)) goto 307::CD,22923
22914 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v30 = p0 $this .hashIndex::
22917 :: EXPR :: reference :: I :: v31 = v30.elementCount::DD,22923
22920 :: EXPR :: reference :: I :: v32 = p0 $this .threshold::DD,22923
22923 :: PRED :: IF :: Z :: if (v31 < v32) goto 341::CD,22924:CD,22928:CD,22942:CD,22951:CD,22968:CD,22969:CD,22986:CD,22997
22924 :: CALL :: call :: Z :: v53 = p0 $this .reset()::JM,22928:CL,26905
22928 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 339::CD,22929
22929 :: CALL :: call :: Ljava/lang/Object :: v55 = p0 $this .addOrRemove(p1 $longKey , p2 $null , p3 $objectValue , p4 $objectValueTwo )::CL,22710
22942 :: CALL :: call :: I :: v35 = v33.linkNode(v10, v29)::JM,22973:CL,27015
22948 :: EXPR :: reference :: Z :: v36 = p0 $this .isIntKey::DD,22951
22951 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 373::CD,22955
22952 :: EXPR :: reference :: [I :: v38 = p0 $this .intKeyTable::
22955 :: EXPR :: assign :: I :: v39 = CONVERT J to I p1 $longKey ::DD,22956
22956 :: EXPR :: modify :: I :: v38[v35] = v39::
22961 :: EXPR :: reference :: [J :: v37 = p0 $this .longKeyTable::
22964 :: EXPR :: modify :: J :: v37[v35] = p1 $longKey ::
22968 :: EXPR :: assign :: Z :: v41 = p1 $longKey  == #(0 l)::DD,22969
22969 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 398::
22970 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
22973 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v35::
22976 :: EXPR :: reference :: [Ljava/lang/Object :: v43 = p0 $this .objectValueTable::
22979 :: EXPR :: modify :: Ljava/lang/Object :: v43[v35] = p2 $null ::
22983 :: EXPR :: reference :: Z :: v44 = p0 $this .isTwoObjectValue::DD,22986
22986 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 422::
22987 :: EXPR :: reference :: [Ljava/lang/Object :: v45 = p0 $this .objectKeyTable::
22990 :: EXPR :: modify :: Ljava/lang/Object :: v45[v35] = p3 $objectValue ::
22994 :: EXPR :: reference :: Z :: v46 = p0 $this .isLastAccessCount::DD,22997
22997 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 450::CD,23004:CD,23016
22998 :: EXPR :: reference :: [I :: v49 = p0 $this .accessTable::
23001 :: EXPR :: reference :: I :: v50 = p0 $this .accessCount::DD,23004
23004 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v50 + #(1)::DD,23005:DD,23008
23005 :: EXPR :: modify :: I :: p0 $this .accessCount = v51::
23008 :: EXPR :: modify :: I :: v49[v35] = v51::
23013 :: EXPR :: reference :: Z :: v47 = p0 $this .isAccessCount::DD,23016
23016 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 466::
23017 :: EXPR :: reference :: [I :: v48 = p0 $this .accessTable::
23020 :: EXPR :: modify :: I :: v48[v35] = #(1)::
23025 :: EXPR :: assign :: null :: PHI v28 = v13, v27::DD,22771:DD,22772
23191 :: EXPR :: modify :: I :: p0 $this .maxCapacity = p2 $maxCapacity ::
23194 :: EXPR :: modify :: I :: p0 $this .purgePolicy = p3 $purgePolicy ::
23207 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePoolHashMap.getOrAddInteger(int)::CD,23215:CD,23283:CD,23346:JM,23320:JM,23273:JM,23243
23215 :: CALL :: call :: I :: v6 = v4.getHashIndex(p1 $intKey )::CL,26463
23220 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v7 = p0 $this .hashIndex::
23223 :: EXPR :: reference :: [I :: v8 = v7.hashTable::
23226 :: EXPR :: reference :: I :: v9 = v8[v6]::DD,23346
23231 :: EXPR :: reference :: [Ljava/lang/Object :: v12 = p0 $this .objectKeyTable::
23234 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v12[v20]::DD,23238
23238 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,23273:JM,23243
23239 :: CALL :: call :: I :: v16 = v14.intValue()::JM,23273:JM,23243
23243 :: PRED :: IF :: Z :: if (v16 != p1 $intKey ) goto 95::CD,23247:CD,23257:CD,23268:CD,23273
23244 :: EXPR :: reference :: I :: v42 = p0 $this .accessCount::DD,23247
23247 :: PRED :: IF :: Z :: if (v42 <= #(2146435071)) goto 63::CD,23248
23248 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,27447
23251 :: EXPR :: reference :: [I :: v44 = p0 $this .accessTable::
23254 :: EXPR :: reference :: I :: v45 = p0 $this .accessCount::DD,23257:DD,23261
23257 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v45 + #(1)::DD,23258
23258 :: EXPR :: modify :: I :: p0 $this .accessCount = v46::
23261 :: EXPR :: modify :: I :: v44[v20] = v45::
23265 :: EXPR :: reference :: J :: v47 = p0 $this .hits::DD,23268
23268 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v47 + #(1 l)::DD,23269
23269 :: EXPR :: modify :: J :: p0 $this .hits = v49::
23273 :: PRED :: IF :: Z :: if (v16 <= p1 $intKey ) goto 106::CD,23278:CD,23283:CD,23293:CD,23346
23278 :: CALL :: call :: I :: v19 = v17.getNextLookup(v20)::JM,23346:CL,26478
23283 :: PRED :: IF :: Z :: if (v20 >= #(0)) goto 27::CD,23238:CD,23239:CD,23243:CD,23293
23284 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v22 = p0 $this .hashIndex::
23287 :: EXPR :: reference :: I :: v23 = v22.elementCount::DD,23293
23290 :: EXPR :: reference :: I :: v24 = p0 $this .threshold::DD,23293
23293 :: PRED :: IF :: Z :: if (v23 < v24) goto 147::CD,23294:CD,23298:CD,23307:CD,23313:CD,23327:CD,23337
23294 :: CALL :: call :: Z :: v39 = p0 $this .reset()::CL,26905
23298 :: CALL :: call :: Ljava/lang/Integer :: v41 = p0 $this .getOrAddInteger(p1 $intKey )::CL,23207
23307 :: CALL :: call :: I :: v27 = v25.linkNode(v6, v21)::CL,27015
23313 :: CALL :: call :: Ljava/lang/Integer :: v29 = valueOf(p1 $intKey )::JM,23320
23317 :: EXPR :: reference :: [Ljava/lang/Object :: v30 = p0 $this .objectKeyTable::
23320 :: EXPR :: modify :: Ljava/lang/Object :: v30[v27] = v29::
23324 :: EXPR :: reference :: I :: v31 = p0 $this .accessCount::DD,23327
23327 :: PRED :: IF :: Z :: if (v31 <= #(2146435071)) goto 185::CD,23328
23328 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,27447
23331 :: EXPR :: reference :: [I :: v34 = p0 $this .accessTable::
23334 :: EXPR :: reference :: I :: v35 = p0 $this .accessCount::DD,23337:DD,23341
23337 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v35 + #(1)::DD,23338
23338 :: EXPR :: modify :: I :: p0 $this .accessCount = v37::
23341 :: EXPR :: modify :: I :: v34[v27] = v35::
23346 :: EXPR :: assign :: null :: PHI v20 = v9, v19::DD,23283
23409 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePoolHashMap.getOrAddObject(java.lang.Object)::CD,23421:CD,23480:CD,23539:JM,23513:JM,23449
23421 :: CALL :: call :: I :: v8 = v4.getHashIndex(v6)::CL,26463
23426 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v9 = p0 $this .hashIndex::
23429 :: EXPR :: reference :: [I :: v10 = v9.hashTable::
23432 :: EXPR :: reference :: I :: v11 = v10[v8]::DD,23539
23437 :: EXPR :: reference :: [Ljava/lang/Object :: v14 = p0 $this .objectKeyTable::
23440 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v14[v21]::JM,23449
23444 :: CALL :: call :: Z :: v17 = v15.equals(p1 $key )::JM,23449:JM,23513
23449 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 83::CD,23453:CD,23463:CD,23475:CD,23480:CD,23539
23450 :: EXPR :: reference :: I :: v41 = p0 $this .accessCount::DD,23453
23453 :: PRED :: IF :: Z :: if (v41 <= #(2146435071)) goto 59::CD,23454
23454 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,27447
23457 :: EXPR :: reference :: [I :: v43 = p0 $this .accessTable::
23460 :: EXPR :: reference :: I :: v44 = p0 $this .accessCount::DD,23463:DD,23467
23463 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v44 + #(1)::DD,23464
23464 :: EXPR :: modify :: I :: p0 $this .accessCount = v45::
23467 :: EXPR :: modify :: I :: v43[v21] = v44::
23475 :: CALL :: call :: I :: v20 = v18.getNextLookup(v21)::JM,23539:CL,26478
23480 :: PRED :: IF :: Z :: if (v21 >= #(0)) goto 30::CD,23444:CD,23449:CD,23490
23481 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v23 = p0 $this .hashIndex::
23484 :: EXPR :: reference :: I :: v24 = v23.elementCount::DD,23490
23487 :: EXPR :: reference :: I :: v25 = p0 $this .threshold::DD,23490
23490 :: PRED :: IF :: Z :: if (v24 < v25) goto 124::CD,23491:CD,23495:CD,23504:CD,23520:CD,23530
23491 :: CALL :: call :: Z :: v38 = p0 $this .reset()::CL,26905
23495 :: CALL :: call :: Ljava/lang/Object :: v40 = p0 $this .getOrAddObject(p1 $key )::CL,23409
23504 :: CALL :: call :: I :: v28 = v26.linkNode(v8, v22)::CL,27015
23510 :: EXPR :: reference :: [Ljava/lang/Object :: v29 = p0 $this .objectKeyTable::
23513 :: EXPR :: modify :: Ljava/lang/Object :: v29[v28] = p1 $key ::
23517 :: EXPR :: reference :: I :: v30 = p0 $this .accessCount::DD,23520
23520 :: PRED :: IF :: Z :: if (v30 <= #(2146435071)) goto 157::CD,23521
23521 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,27447
23524 :: EXPR :: reference :: [I :: v33 = p0 $this .accessTable::
23527 :: EXPR :: reference :: I :: v34 = p0 $this .accessCount::DD,23530:DD,23534
23530 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 + #(1)::DD,23531
23531 :: EXPR :: modify :: I :: p0 $this .accessCount = v36::
23534 :: EXPR :: modify :: I :: v33[v28] = v34::
23539 :: EXPR :: assign :: null :: PHI v21 = v11, v20::DD,23480
23607 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p2 $name ::
23610 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .statementName = p2 $name ::
23613 :: EXPR :: modify :: Z :: p0 $this .isNameQuoted = p4 $isQuoted ::
23616 :: EXPR :: reference :: Z :: v8 = p0 $this .isNameQuoted::DD,23619
23619 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 40::CD,23620
23620 :: CALL :: call :: Ljava/lang/String :: v13 = toQuotedString(p2 $name , #(34), #(1))::JM,23626:CL,27606
23626 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .statementName = v13::
25958 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.get(int)::CE,25959:CD,25967:CD,25968:CD,25973:CD,25978:CD,25986:CD,25991:CD,26001:CD,26002:CD,26007:CD,26012:CD,26017:CD,26033
25959 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.HsqlArrayList.get(int)::JM,20330
25967 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
25968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
25973 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p1 $index )::
25978 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#( >= ))::
25983 :: EXPR :: reference :: I :: v28 = p0 $this .elementCount::
25986 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
25991 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
26001 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v8 = new java.lang.IndexOutOfBoundsException::
26002 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
26007 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $index )::
26012 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#( < 0))::
26017 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
26026 :: EXPR :: reference :: [Ljava/lang/Object :: v6 = p0 $this .elementData::
26029 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $index ]::DD,26033
26033 :: NORM :: compound :: Ljava/lang/Object :: return v7::DD,25959
26186 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(java.lang.Throwable,int,java.lang.String)::CD,26192:CD,26196:CD,26221:CD,26226:JM,27305:JM,27308:JM,27311:CD,26241
26192 :: CALL :: call :: Ljava/lang/String :: v6 = getMessage(p2 $code )::JM,26241:CL,31128
26196 :: PRED :: IF :: Z :: if (p3 $add  == #(null)) goto 33::CF,26241:CF,26197:CD,26198:CD,26206:CD,26211:CD,26216
26197 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,26241
26198 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
26206 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(#(: ))::JM,26241
26211 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(p3 $add )::JM,26241
26216 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::JM,26241
26221 :: CALL :: call :: Ljava/lang/String :: v23 = v19.substring(#(6))::
26226 :: CALL :: call :: Ljava/lang/String :: v27 = v19.substring(#(0), #(5))::
26241 :: EXPR :: assign :: null :: PHI v19 = v6, v18::
26259 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getLookup(java.lang.Object,int)::CE,26260:CD,26268:CD,26296:CD,26297:CD,26298:JM,26286
26260 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getLookup(java.lang.Object,int)::JM,20739
26268 :: CALL :: call :: I :: v7 = v5.getLookup(p2 $hash )::JM,26298:CL,31142
26274 :: EXPR :: reference :: [Ljava/lang/Object :: v9 = p0 $this .objectKeyTable::
26277 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v9[v16]::JM,26286
26281 :: CALL :: call :: Z :: v12 = p1 $key .equals(v10)::JM,26286
26286 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 33::CD,26291:CD,26296:CD,26298
26291 :: CALL :: call :: I :: v15 = v13.getNextLookup(v16)::JM,26298:CL,26478
26296 :: PRED :: IF :: Z :: if (v16 >= #(0)) goto 13::CD,26281:CD,26286:CF,26297
26297 :: NORM :: compound :: I :: return v16::DD,26260
26298 :: EXPR :: assign :: null :: PHI v16 = v7, v15::DD,26296:DD,26297
26330 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.increaseCapacity()::CD,26347
26347 :: CALL :: call :: V :: p0 $this .resize(v13)::CL,31584
26463 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getHashIndex(int)::CE,26464:CD,26468:CD,26472:CD,26473:CD,26474
26464 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getHashIndex(int)::
26468 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $hash  && #(2147483647)::DD,26473
26469 :: EXPR :: reference :: [I :: v6 = p0 $this .hashTable::DD,26472
26472 :: EXPR :: assign :: I :: v7 = v6.length::CF,26473
26473 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 % v7::CF,26474
26474 :: NORM :: compound :: I :: return v8::CF,26464
26478 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getNextLookup(int)::CE,26479:CD,26490
26479 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getNextLookup(int)::JM,21482:JM,23025:JM,23346:JM,23539:JM,26298:JM,32517:JM,38618
26483 :: EXPR :: reference :: [I :: v4 = p0 $this .linkTable::
26486 :: EXPR :: reference :: I :: v5 = v4[p1 $lookup ]::DD,26490
26490 :: NORM :: compound :: I :: return v5::DD,26479
26493 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.unlinkNode(int,int,int)::CD,26500:CD,26546:CD,26553:JM,26540
26500 :: PRED :: IF :: Z :: if (p2 $lastLookup  != #(-1)) goto 21::
26501 :: EXPR :: reference :: [I :: v10 = p0 $this .hashTable::
26504 :: EXPR :: reference :: [I :: v11 = p0 $this .linkTable::
26507 :: EXPR :: reference :: I :: v12 = v11[p3 $lookup ]::DD,26511
26511 :: EXPR :: modify :: I :: v10[p1 $index ] = v12::
26516 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
26519 :: EXPR :: reference :: [I :: v8 = p0 $this .linkTable::
26522 :: EXPR :: reference :: I :: v9 = v8[p3 $lookup ]::DD,26526
26526 :: EXPR :: modify :: I :: v7[p2 $lastLookup ] = v9::
26530 :: EXPR :: reference :: [I :: v13 = p0 $this .linkTable::
26533 :: EXPR :: reference :: I :: v14 = p0 $this .reclaimedNodePointer::DD,26536
26536 :: EXPR :: modify :: I :: v13[p3 $lookup ] = v14::
26540 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = p3 $lookup ::
26543 :: EXPR :: reference :: I :: v15 = p0 $this .elementCount::DD,26546
26546 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 - #(1)::DD,26547
26547 :: EXPR :: modify :: I :: p0 $this .elementCount = v17::
26550 :: EXPR :: reference :: I :: v18 = p0 $this .elementCount::DD,26553
26553 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 81::CD,26560:CD,26566
26554 :: EXPR :: reference :: [I :: v20 = p0 $this .linkTable::
26557 :: EXPR :: reference :: I :: v21 = p0 $this .newNodePointer::
26560 :: CALL :: call :: V :: fill(v20, #(0), v21, #(0))::
26566 :: CALL :: call :: V :: p0 $this .resetTables()::CL,31883
26595 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.rehash(int)::CD,26618:JM,26658
26600 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v4 = p0 $this .hashIndex::
26603 :: EXPR :: reference :: I :: v5 = v4.newNodePointer::DD,26787
26612 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v8 = p0 $this .hashIndex::
26615 :: EXPR :: reference :: I :: v9 = v8.elementCount::DD,26618
26618 :: PRED :: IF :: Z :: if (p1 $newCapacity  >= v9) goto 32::CD,26629:CD,26637:CD,26779:CD,26787:CD,26794
26629 :: CALL :: call :: V :: v10.reset(v14, p1 $newCapacity )::CL,31908
26634 :: EXPR :: reference :: [Z :: v16 = p0 $this .multiValueTable::DD,26637
26637 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 82::CD,26641:CD,26650:CD,26651:CD,26800
26638 :: EXPR :: reference :: [Z :: v18 = p0 $this .multiValueTable::DD,26641
26641 :: EXPR :: assign :: I :: v19 = v18.length::DD,26800
26643 :: EXPR :: reference :: [Z :: v23 = p0 $this .multiValueTable::
26646 :: EXPR :: modify :: B :: v23[v21] = #(0)::
26650 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v24 + #(-1)::DD,26651:DD,26800
26651 :: PRED :: IF :: Z :: if (v21 >= #(0)) goto 65::CD,26650:CD,26800
26652 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
26655 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
26658 :: EXPR :: modify :: I :: p0 $this .threshold = p1 $newCapacity ::
26730 :: EXPR :: reference :: [Z :: v51 = p0 $this .multiValueTable::DD,26733
26733 :: PRED :: IF :: Z :: if (v51 != #(null)) goto 251::CD,26734:CD,26744
26734 :: CALL :: call :: Ljava/lang/Object :: v53 = p0 $this .addOrRemove(v37, v49, v38, v50, #(0))::CL,20978
26744 :: CALL :: call :: Ljava/lang/Object :: v55 = p0 $this .addOrRemoveMultiVal(v37, v49, v38, v50, #(0), #(0))::CL,31944
26754 :: EXPR :: reference :: [I :: v56 = p0 $this .accessTable::DD,26757
26757 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 290::CD,26767
26758 :: EXPR :: reference :: [I :: v58 = p0 $this .accessTable::
26761 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v59 = p0 $this .hashIndex::
26764 :: EXPR :: reference :: I :: v60 = v59.elementCount::DD,26767
26767 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v60 - #(1)::
26768 :: EXPR :: reference :: [I :: v63 = p0 $this .accessTable::
26771 :: EXPR :: reference :: I :: v64 = v63[v26]::DD,26775
26775 :: EXPR :: modify :: I :: v58[v62] = v64::
26779 :: CALL :: call :: I :: v26 = p0 $this .nextLookup(v57, v5, v6, v7)::JM,26787:CL,32790
26787 :: PRED :: IF :: Z :: if (v26 < v5) goto 114::CD,26733:CD,26757:CD,26779
26794 :: CALL :: call :: V :: p0 $this .resizeElementArrays(v66, p1 $newCapacity )::CL,32881
26800 :: EXPR :: assign :: null :: PHI v24 = v19, v21::DD,26650
26905 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.reset()::CE,26906:CD,26912
26906 :: EXIT :: exit :: Z :: org.hsqldb.map.BaseHashMap.reset()::JM,22928
26909 :: EXPR :: reference :: I :: v3 = p0 $this .maxCapacity::DD,26912
26912 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 20::CD,26919:CD,26928:CD,26932
26913 :: EXPR :: reference :: I :: v5 = p0 $this .maxCapacity::DD,26919
26916 :: EXPR :: reference :: I :: v6 = p0 $this .threshold::DD,26919
26919 :: PRED :: IF :: Z :: if (v5 <= v6) goto 35::CD,26928:CD,26932:CD,26936
26928 :: CALL :: call :: V :: p0 $this .rehash(v30)::CL,26595
26932 :: NORM :: compound :: Z :: return #(1)::DD,26906
26933 :: EXPR :: reference :: I :: v7 = p0 $this .purgePolicy::DD,26936
26936 :: PRED :: IF :: Z :: if (v7 != #(1)) goto 49::CD,26937:CD,26940:CD,26944
26937 :: CALL :: call :: V :: p0 $this .clear()::CL,33183
26940 :: NORM :: compound :: Z :: return #(1)::DD,26906
26941 :: EXPR :: reference :: I :: v9 = p0 $this .purgePolicy::DD,26944
26944 :: PRED :: IF :: Z :: if (v9 != #(3)) goto 76::CD,26953:CD,26958:CD,26962
26953 :: CALL :: call :: V :: p0 $this .clear(v22, v24)::CL,33257
26958 :: NORM :: compound :: Z :: return #(1)::DD,26906
26959 :: EXPR :: reference :: I :: v11 = p0 $this .purgePolicy::DD,26962
26962 :: PRED :: IF :: Z :: if (v11 != #(2)) goto 103::CD,26971:CD,26976:CD,26980
26971 :: CALL :: call :: V :: p0 $this .clear(v15, v18)::CL,33257
26976 :: NORM :: compound :: Z :: return #(1)::DD,26906
26977 :: EXPR :: reference :: I :: v13 = p0 $this .purgePolicy::DD,26980
26980 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 112::CD,26981:CD,26982
26981 :: NORM :: compound :: Z :: return #(0)::DD,26906
26982 :: NORM :: compound :: Z :: return #(0)::DD,26906
27015 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.linkNode(int,int)::CE,27016:CD,27024:CD,27043:CD,27083:CD,27090:CD,27091:CD,27092
27016 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.linkNode(int,int)::JM,21411:JM,21391:JM,22973:JM,32434:JM,32414
27021 :: EXPR :: reference :: I :: v5 = p0 $this .reclaimedNodePointer::DD,27024:DD,27091
27024 :: PRED :: IF :: Z :: if (v5 != #(-1)) goto 27::CD,27028:CD,27091
27025 :: EXPR :: reference :: I :: v9 = p0 $this .newNodePointer::DD,27028:DD,27091
27028 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 + #(1)::DD,27029
27029 :: EXPR :: modify :: I :: p0 $this .newNodePointer = v11::
27033 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
27036 :: EXPR :: reference :: I :: v8 = v7[v5]::DD,27040
27040 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = v8::
27043 :: PRED :: IF :: Z :: if (p2 $lastLookup  != #(-1)) goto 59::CD,27092
27044 :: EXPR :: reference :: [I :: v16 = p0 $this .hashTable::
27047 :: EXPR :: reference :: I :: v17 = v16[p1 $index ]::DD,27092
27051 :: EXPR :: reference :: [I :: v18 = p0 $this .hashTable::
27054 :: EXPR :: modify :: I :: v18[p1 $index ] = v12::
27059 :: EXPR :: reference :: [I :: v13 = p0 $this .linkTable::
27062 :: EXPR :: reference :: I :: v14 = v13[p2 $lastLookup ]::DD,27092
27066 :: EXPR :: reference :: [I :: v15 = p0 $this .linkTable::
27069 :: EXPR :: modify :: I :: v15[p2 $lastLookup ] = v12::
27073 :: EXPR :: reference :: [I :: v20 = p0 $this .linkTable::
27076 :: EXPR :: modify :: I :: v20[v12] = v19::
27080 :: EXPR :: reference :: I :: v21 = p0 $this .elementCount::DD,27083
27083 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 + #(1)::DD,27084
27084 :: EXPR :: modify :: I :: p0 $this .elementCount = v22::
27087 :: EXPR :: modify :: Z :: p0 $this .modified = #(1)::
27090 :: NORM :: compound :: I :: return v12::DD,27016
27091 :: EXPR :: assign :: null :: PHI v12 = v9, v5::DD,27054:DD,27069:DD,27090:CF,27043
27092 :: EXPR :: assign :: null :: PHI v19 = v17, v14::DD,27076
27156 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer :: p0 $this .this$0 = p1 $null ::
27174 :: NORM :: declaration :: [[Ljava/lang/Object :: v5 = new java.lang.Object[][]::DD,27175
27175 :: EXPR :: modify :: [[Ljava/lang/Object :: p0 $this .table = v5::
27190 :: EXPR :: assign :: B :: v5 = CONVERT I to B p1 $mode ::DD,27191
27191 :: EXPR :: modify :: B :: p0 $this .mode = v5::
27205 :: EXPR :: modify :: I :: p0 $this .currentPos = #(-1)::
27239 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getMessage(int,int,java.lang.Object[])::CE,27240:CD,27245:CD,27249:CD,27272:CD,27278:CD,27279:CD,27280
27240 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getMessage(int,int,java.lang.Object[])::JM,31138
27245 :: CALL :: call :: Ljava/lang/String :: v6 = getResourceString(p1 $code )::JM,27279:CL,33502
27249 :: PRED :: IF :: Z :: if (p2 $subCode  == #(0)) goto 32::CF,27279:CF,27250:CD,27251:CD,27259:CD,27263:CD,27268
27250 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,27279
27251 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
27259 :: CALL :: call :: Ljava/lang/String :: v13 = getResourceString(p2 $subCode )::JM,27279:CL,33502
27263 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v8.append(v13)::JM,27279
27268 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,27279
27272 :: PRED :: IF :: Z :: if (p3 $add  == #(null)) goto 42::CF,27280:CD,27273
27273 :: CALL :: call :: Ljava/lang/String :: v21 = insertStrings(v18, p3 $add )::JM,27280:CL,33534
27278 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,27240
27279 :: EXPR :: assign :: null :: PHI v18 = v6, v17::DD,27280:CF,27272
27280 :: EXPR :: assign :: null :: PHI v22 = v18, v21::CF,27278
27305 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .message = p2 $message ::
27308 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .state = p3 $state ::
27311 :: EXPR :: modify :: I :: p0 $this .code = p4 $code ::
27333 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = #(-1)::
27337 :: CALL :: call :: V :: p0 $this .reset(p1 $hashTableSize , v8)::CL,31908
27342 :: EXPR :: modify :: Z :: p0 $this .fixedSize = p3 $fixedSize ::
27358 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyIntValueHashMap.get(int)::CE,27359:CD,27363:CD,27376
27359 :: EXIT :: exit :: I :: org.hsqldb.lib.IntKeyIntValueHashMap.get(int)::JM,22503:JM,22516:JM,27419:JM,27429
27363 :: CALL :: call :: I :: v5 = p0 $this .getLookup(p1 $key )::CL,33667
27369 :: EXPR :: reference :: [I :: v9 = p0 $this .intValueTable::
27372 :: EXPR :: reference :: I :: v10 = v9[v5]::DD,27376
27376 :: NORM :: compound :: I :: return v10::DD,27359
27406 :: EXPR :: modify :: I :: p0 $this .startIntervalType = p5 $scale ::
27409 :: EXPR :: modify :: I :: p0 $this .endIntervalType = p6 $startIntervalType ::
27414 :: CALL :: call :: I :: v12 = v10.get(p5 $scale )::JM,27419:CL,27358
27419 :: EXPR :: modify :: I :: p0 $this .startPartIndex = v12::
27424 :: CALL :: call :: I :: v15 = v13.get(p6 $startIntervalType )::JM,27429:CL,27358
27429 :: EXPR :: modify :: I :: p0 $this .endPartIndex = v15::
27447 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.resetAccessCount()::CD,27454
27451 :: EXPR :: reference :: I :: v3 = p0 $this .accessCount::DD,27454
27454 :: PRED :: IF :: Z :: if (v3 >= #(2146435071)) goto 11::CD,27459:CD,27463:CD,27467:CD,27468:CD,27469:CD,27470:CD,27512:CD,27513:CD,27520:CD,27521:CD,27522:CD,27523:CD,27531:CD,27532
27456 :: EXPR :: reference :: [I :: v5 = p0 $this .accessTable::DD,27459
27459 :: EXPR :: assign :: I :: v6 = v5.length::DD,27531
27460 :: EXPR :: reference :: I :: v7 = p0 $this .accessMin::DD,27463
27463 :: EXPR :: assign :: D :: v8 = CONVERT I to D v7::DD,27468
27464 :: EXPR :: reference :: I :: v9 = p0 $this .accessCount::DD,27467
27467 :: EXPR :: assign :: D :: v10 = CONVERT I to D v9::CF,27468
27468 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v8 / v10::DD,27469:DD,27532
27469 :: EXPR :: assign :: Z :: v13 = v11 > #(0.5 d)::DD,27470
27470 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 87::CF,27531:CD,27532
27472 :: EXPR :: reference :: [I :: v18 = p0 $this .accessTable::
27475 :: EXPR :: reference :: I :: v19 = v18[v17]::DD,27482
27479 :: EXPR :: reference :: I :: v20 = p0 $this .accessMin::DD,27482
27482 :: PRED :: IF :: Z :: if (v19 >= v20) goto 67::CD,27504:CD,27505:CD,27506:CD,27507:CD,27531:CD,27532
27483 :: EXPR :: reference :: [I :: v21 = p0 $this .accessTable::
27486 :: EXPR :: modify :: I :: v21[v17] = #(0)::
27491 :: EXPR :: reference :: [I :: v23 = p0 $this .accessTable::
27494 :: EXPR :: reference :: [I :: v24 = p0 $this .accessTable::
27497 :: EXPR :: reference :: I :: v25 = v24[v17]::DD,27504
27501 :: EXPR :: reference :: I :: v26 = p0 $this .accessMin::DD,27504
27504 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 - v26::CF,27505
27505 :: EXPR :: assign :: D :: v28 = CONVERT I to D v27::DD,27506
27506 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 * v15::CF,27507
27507 :: EXPR :: assign :: I :: v30 = CONVERT D to I v29::DD,27508
27508 :: EXPR :: modify :: I :: v23[v17] = v30::
27512 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v22 + #(-1)::DD,27513:DD,27531
27513 :: PRED :: IF :: Z :: if (v17 >= #(0)) goto 44::CD,27482:CD,27512:CD,27531:CD,27532
27514 :: EXPR :: reference :: I :: v31 = p0 $this .accessCount::DD,27520
27517 :: EXPR :: reference :: I :: v32 = p0 $this .accessMin::DD,27520
27520 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v31 - v32::CF,27521
27521 :: EXPR :: assign :: D :: v34 = CONVERT I to D v33::DD,27522
27522 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 * v15::CF,27523
27523 :: EXPR :: assign :: I :: v36 = CONVERT D to I v35::DD,27524
27524 :: EXPR :: modify :: I :: p0 $this .accessCount = v36::
27527 :: EXPR :: modify :: I :: p0 $this .accessMin = #(0)::
27531 :: EXPR :: assign :: null :: PHI v22 = v6, v6, v17, v17::CF,27532:DD,27512
27532 :: EXPR :: assign :: null :: PHI v15 = v11, #(0.5 d), v15, v15::DD,27506:DD,27522:DD,27532:CF,27512
27577 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager :: p0 $this .manager = p1 $man ::
27580 :: EXPR :: modify :: I :: p0 $this .type = p2 $type ::
27586 :: CALL :: call :: Ljava/util/concurrent/atomic/AtomicLong :: v9 = access$0(v7)::JM,27594:CL,33726
27590 :: CALL :: call :: J :: v11 = v9.getAndIncrement()::JM,27594
27594 :: EXPR :: modify :: J :: p0 $this .hashCode = v11::
27606 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.toQuotedString(java.lang.String,char,boolean)::CE,27607:CD,27612:JM,27652:JM,27653:JM,27640:JM,27626:JM,27644:JM,27629:JM,27645:JM,27614:JM,27647
27607 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.lib.StringConverter.toQuotedString(java.lang.String,char,boolean)::JM,23626
27612 :: PRED :: IF :: Z :: if (p1 $s  != #(null)) goto 7::CD,27613:CD,27614:CD,27621:CD,27625:CD,27626:CD,27627:CD,27628:CD,27652:CD,27657:CD,27662:CD,27663:CD,27665:CD,27666
27613 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,27607
27614 :: PRED :: IF :: Z :: if (p3 $extraQuote  == #(0)) goto 21::CD,27615:CD,27663
27615 :: CALL :: call :: I :: v8 = count(p1 $s , p2 $quoteChar )::JM,27663:CL,33735
27621 :: CALL :: call :: I :: v11 = p1 $s .length()::JM,27652:JM,27653:JM,27640:JM,27626:JM,27644:JM,27612:JM,27629:JM,27645:JM,27614:JM,27647
27625 :: EXPR :: assign :: Ljava/lang/Object :: v13 = #(2) + v9::DD,27626
27626 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v13 + v11::CF,27627
27627 :: NORM :: declaration :: [C :: v15 = new []::JM,27657:CF,27628
27628 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(0) + #(1)::DD,27666
27629 :: EXPR :: modify :: C :: v15[#(0)] = p2 $quoteChar ::
27634 :: CALL :: call :: C :: v19 = p1 $s .charAt(v24)::JM,27652:JM,27653:JM,27640:JM,27626:JM,27644:JM,27612:JM,27629:JM,27645:JM,27614:JM,27647
27639 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v25 + #(1)::DD,27646:DD,27664
27640 :: EXPR :: modify :: C :: v15[v25] = v19::
27644 :: PRED :: IF :: Z :: if (p3 $extraQuote  == #(0)) goto 92::CF,27664:CD,27645
27645 :: PRED :: IF :: Z :: if (v19 != p2 $quoteChar ) goto 92::CF,27664:CD,27646
27646 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 + #(1)::DD,27664
27647 :: EXPR :: modify :: C :: v15[v20] = v19::
27651 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,27665
27652 :: PRED :: IF :: Z :: if (v24 < v11) goto 57::CD,27634:CD,27639:CD,27644:CD,27651:CD,27664:CD,27665:CD,27666:JM,27652:JM,27653:JM,27640:JM,27626:JM,27612:JM,27629:JM,27645:JM,27614:JM,27647
27653 :: EXPR :: modify :: C :: v15[v25] = p2 $quoteChar ::
27657 :: NORM :: declaration :: Ljava/lang/String :: v26 = new java.lang.String::JM,27657:DD,27662
27662 :: NORM :: compound :: Ljava/lang/String :: return v26::DD,27607
27663 :: EXPR :: assign :: null :: PHI v9 = v8, #(0)::DD,27625:JM,27652:JM,27653:JM,27640:JM,27626:JM,27644:JM,27612:JM,27629:JM,27645:JM,27614:JM,27647
27664 :: EXPR :: assign :: null :: PHI v22 = v20, v20, v21::DD,27666:CF,27651
27665 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::CF,27666:JM,27640:JM,27626:JM,27644:JM,27612:JM,27645:JM,27614:JM,27647:DD,27651:DD,27652
27666 :: EXPR :: assign :: null :: PHI v25 = v17, v22::DD,27639:CF,27652
31128 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getMessage(int)::CE,31129:CD,31132:CD,31138
31129 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getMessage(int)::JM,26241
31132 :: CALL :: call :: Ljava/lang/String :: v6 = getMessage(p1 $errorCode , #(0), #(null))::JM,31138:CL,27239
31138 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,31129
31142 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getLookup(int)::CE,31143:CD,31150:JM,31152
31143 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getLookup(int)::JM,26298:JM,33702
31147 :: EXPR :: reference :: I :: v4 = p0 $this .elementCount::DD,31150
31150 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 12::CD,31151:CD,31152:CD,31156:CD,31157:CD,31165
31151 :: NORM :: compound :: I :: return #(-1)::DD,31143
31152 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $hash  && #(2147483647)::DD,31157
31153 :: EXPR :: reference :: [I :: v8 = p0 $this .hashTable::DD,31156
31156 :: EXPR :: assign :: I :: v9 = v8.length::CF,31157
31157 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 % v9::
31158 :: EXPR :: reference :: [I :: v11 = p0 $this .hashTable::
31161 :: EXPR :: reference :: I :: v12 = v11[v10]::DD,31165
31165 :: NORM :: compound :: I :: return v12::DD,31143
31584 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.resize(int)::CD,31592:CD,31593:JM,31606:JM,31611
31589 :: EXPR :: reference :: [Ljava/lang/Object :: v4 = p0 $this .elementData::DD,31592
31592 :: EXPR :: assign :: I :: v5 = v4.length::CF,31593
31593 :: PRED :: IF :: Z :: if (p1 $baseSize  != v5) goto 11::CD,31598:CD,31602:CD,31606:CD,31611:CD,31637
31595 :: EXPR :: reference :: [Ljava/lang/Object :: v6 = p0 $this .elementData::JM,31602:JM,31606:JM,31611:JM,31598
31598 :: CALL :: call :: Ljava/lang/Class :: v8 = v6.getClass()::JM,31602:JM,31606:JM,31611:JM,31598
31602 :: CALL :: call :: Ljava/lang/Class :: v10 = v8.getComponentType()::JM,31602:JM,31606:JM,31611
31606 :: CALL :: call :: Ljava/lang/Object :: v12 = newInstance(v10, p1 $baseSize )::JM,31606:JM,31611
31611 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,31661
31634 :: EXPR :: reference :: Z :: v24 = p0 $this .minimizeOnClear::DD,31637
31637 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 99::CD,31641
31638 :: EXPR :: reference :: [Ljava/lang/Object :: v25 = p0 $this .reserveElementData::DD,31641
31641 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 99::CD,31649
31649 :: CALL :: call :: V :: clearArray(#(76), v28, #(0), v30)::CL,37913
31655 :: EXPR :: reference :: [Ljava/lang/Object :: v32 = p0 $this .elementData::DD,31658
31658 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .reserveElementData = v32::
31661 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .elementData = v13::
31883 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.resetTables()::
31887 :: EXPR :: modify :: I :: p0 $this .newNodePointer = #(0)::
31890 :: EXPR :: modify :: I :: p0 $this .elementCount = #(0)::
31893 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = #(-1)::
31896 :: EXPR :: modify :: Z :: p0 $this .modified = #(0)::
31908 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.reset(int,int)::CD,31914:CD,31915:CD,31925:CD,31929
31914 :: NORM :: declaration :: [I :: v5 = new []::DD,31916:CF,31915
31915 :: NORM :: declaration :: [I :: v6 = new []::DD,31919
31916 :: EXPR :: modify :: [I :: p0 $this .hashTable = v5::
31919 :: EXPR :: modify :: [I :: p0 $this .linkTable = v6::
31922 :: EXPR :: reference :: [I :: v7 = p0 $this .hashTable::
31925 :: CALL :: call :: V :: fill(v7, #(-1))::
31929 :: CALL :: call :: V :: p0 $this .resetTables()::CL,31883
31944 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)::CD,31958:CD,32370:JM,32259:JM,32261:JM,32262:JM,32456:JM,32392:JM,32329:JM,32017:JM,32404:JM,32469:JM,32341:JM,32342:JM,31959:JM,32409:JM,32029:JM,32098:JM,32035:JM,32037:JM,32233:JM,32425:JM,32173:JM,32429:JM,32175:JM,32176:JM,32113:JM,32244:JM,32444:JM,32318
31955 :: EXPR :: reference :: Z :: v10 = p0 $this .isObjectKey::DD,31958
31958 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 49::CD,31959:CD,31981:CD,32340:CD,32517:CD,32519
31959 :: PRED :: IF :: Z :: if (p3 $longValue  != #(null)) goto 19::CD,31981:CD,32340:CD,32517:CD,32519
31981 :: CALL :: call :: I :: v22 = v20.getHashIndex(v19)::CL,26463
31986 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v23 = p0 $this .hashIndex::
31989 :: EXPR :: reference :: [I :: v24 = v23.hashTable::
31992 :: EXPR :: reference :: I :: v25 = v24[v22]::DD,32517
31997 :: EXPR :: reference :: Z :: v27 = p0 $this .isObjectKey::DD,32000
32000 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 313::CD,32004:CD,32164
32001 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v37 = p0 $this .comparator::DD,32004
32004 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 116::CD,32012:CD,32017:CD,32029:CD,32035
32005 :: EXPR :: reference :: [Ljava/lang/Object :: v38 = p0 $this .objectKeyTable::
32008 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v38[v64]::JM,32017
32012 :: CALL :: call :: Z :: v41 = v39.equals(p3 $longValue )::JM,32017:JM,32113:JM,32098:JM,32035:JM,32037:JM,32261:JM,32341:JM,32342:JM,32392:JM,32444:JM,32029:JM,32175
32017 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 141::CD,32037:CD,32335:CD,32340:CD,32516:CD,32517:CD,32519:CD,32513
32019 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v42 = p0 $this .comparator::JM,32035:JM,32029
32022 :: EXPR :: reference :: [Ljava/lang/Object :: v43 = p0 $this .objectKeyTable::
32025 :: EXPR :: reference :: Ljava/lang/Object :: v44 = v43[v64]::JM,32035:JM,32029
32029 :: CALL :: call :: I :: v46 = v42.compare(v44, p3 $longValue )::JM,32035:JM,32029:JM,32113:JM,32017:JM,32098:JM,32037:JM,32261:JM,32341:JM,32342:JM,32392:JM,32444:JM,32175
32035 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 141::CD,32037:CD,32335:CD,32340:CD,32516:CD,32517:CD,32519:CD,32513
32037 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 226::CF,32513:CD,32062:CD,32085:CD,32107:CD,32112
32038 :: EXPR :: reference :: [Ljava/lang/Object :: v140 = p0 $this .objectKeyTable::
32041 :: EXPR :: modify :: Ljava/lang/Object :: v140[v154] = #(null)::
32052 :: EXPR :: reference :: [Ljava/lang/Object :: v143 = p0 $this .objectValueTable::
32055 :: EXPR :: modify :: Ljava/lang/Object :: v143[v154] = #(null)::
32062 :: CALL :: call :: V :: v144.unlinkNode(v22, v65, v154)::CL,26493
32068 :: EXPR :: reference :: [Z :: v146 = p0 $this .multiValueTable::
32071 :: EXPR :: modify :: B :: v146[v154] = #(0)::
32075 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v147 = p0 $this .hashIndex::
32078 :: EXPR :: reference :: [I :: v148 = v147.hashTable::
32081 :: EXPR :: reference :: I :: v149 = v148[v22]::DD,32085:DD,32513
32085 :: PRED :: IF :: Z :: if (v149 < #(0)) goto 224::CD,32093:CD,32098:CD,32513
32086 :: EXPR :: reference :: [Ljava/lang/Object :: v150 = p0 $this .objectKeyTable::
32089 :: EXPR :: reference :: Ljava/lang/Object :: v151 = v150[v149]::JM,32098
32093 :: CALL :: call :: Z :: v153 = v151.equals(p3 $longValue )::JM,32098:JM,32113:JM,32017:JM,32035:JM,32037:JM,32261:JM,32341:JM,32342:JM,32392:JM,32444:JM,32029:JM,32175
32098 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 145::CF,32513:CD,32062:CD,32085
32107 :: CALL :: call :: Z :: v50 = v48.equals(p4 $null )::JM,32112:CL,38093:CL,38145:CL,38132
32112 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 309::CD,32113:CD,32335:CD,32340:CD,32516:CD,32517:CD,32519
32113 :: PRED :: IF :: Z :: if (p6 $objectValue  == #(0)) goto 299::CD,32138
32114 :: EXPR :: reference :: [Ljava/lang/Object :: v133 = p0 $this .objectKeyTable::
32117 :: EXPR :: modify :: Ljava/lang/Object :: v133[v64] = #(null)::
32128 :: EXPR :: reference :: [Ljava/lang/Object :: v136 = p0 $this .objectValueTable::
32131 :: EXPR :: modify :: Ljava/lang/Object :: v136[v64] = #(null)::
32138 :: CALL :: call :: V :: v137.unlinkNode(v22, v65, v64)::CL,26493
32144 :: EXPR :: reference :: [Z :: v139 = p0 $this .multiValueTable::
32147 :: EXPR :: modify :: B :: v139[v64] = #(0)::
32161 :: EXPR :: reference :: Z :: v28 = p0 $this .isIntKey::DD,32164
32164 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 444::CD,32172:CD,32173:CD,32174:CD,32251:CD,32516
32165 :: EXPR :: reference :: [I :: v29 = p0 $this .intKeyTable::
32168 :: EXPR :: reference :: I :: v30 = v29[v64]::DD,32172
32172 :: EXPR :: assign :: J :: v31 = CONVERT I to J v30::CF,32173
32173 :: EXPR :: assign :: Z :: v32 = p1 $longKey  == v31::DD,32174
32174 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 574::CF,32516:CD,32175:CD,32335:CD,32340:CD,32517:CD,32519:CD,32514
32175 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 423::CF,32514:CD,32176:CD,32177:CD,32201:CD,32224:CD,32243:CD,32244:CD,32245
32176 :: EXPR :: assign :: Z :: v117 = p1 $longKey  == #(0 l)::DD,32177
32177 :: PRED :: IF :: Z :: if (v117 != #(0)) goto 354::
32178 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
32181 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
32184 :: EXPR :: reference :: [I :: v118 = p0 $this .intKeyTable::
32187 :: EXPR :: modify :: I :: v118[v130] = #(0)::
32191 :: EXPR :: reference :: [I :: v119 = p0 $this .intValueTable::
32194 :: EXPR :: modify :: I :: v119[v130] = #(0)::
32201 :: CALL :: call :: V :: v120.unlinkNode(v22, v65, v130)::CL,26493
32207 :: EXPR :: reference :: [Z :: v122 = p0 $this .multiValueTable::
32210 :: EXPR :: modify :: B :: v122[v130] = #(0)::
32214 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v123 = p0 $this .hashIndex::
32217 :: EXPR :: reference :: [I :: v124 = v123.hashTable::
32220 :: EXPR :: reference :: I :: v125 = v124[v22]::DD,32224:DD,32514
32224 :: PRED :: IF :: Z :: if (v125 < #(0)) goto 421::CD,32232:CD,32233:CD,32234:CD,32514
32225 :: EXPR :: reference :: [I :: v126 = p0 $this .intKeyTable::
32228 :: EXPR :: reference :: I :: v127 = v126[v125]::DD,32232
32232 :: EXPR :: assign :: J :: v128 = CONVERT I to J v127::CF,32233
32233 :: EXPR :: assign :: Z :: v129 = p1 $longKey  == v128::DD,32234
32234 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 339::CF,32514:CD,32176:CD,32177:CD,32201:CD,32224
32236 :: EXPR :: reference :: [I :: v52 = p0 $this .intValueTable::
32239 :: EXPR :: reference :: I :: v53 = v52[v64]::DD,32243
32243 :: EXPR :: assign :: J :: v54 = CONVERT I to J v53::DD,32244
32244 :: EXPR :: assign :: Z :: v55 = v54 == p2 $null ::DD,32245
32245 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 440::CD,32335:CD,32340:CD,32516:CD,32517:CD,32519
32248 :: EXPR :: reference :: Z :: v33 = p0 $this .isLongKey::DD,32251
32251 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 574::CF,32516:CD,32259:CD,32260:CD,32335:CD,32340:CD,32517:CD,32519
32252 :: EXPR :: reference :: [J :: v34 = p0 $this .longKeyTable::
32255 :: EXPR :: reference :: J :: v35 = v34[v64]::DD,32259
32259 :: EXPR :: assign :: Z :: v36 = p1 $longKey  == v35::DD,32260
32260 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 574::CF,32516:CD,32261:CD,32335:CD,32340:CD,32517:CD,32519:CD,32515
32261 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 552::CF,32515:CD,32262:CD,32263:CD,32287:CD,32310:CD,32328:CD,32329:CD,32330
32262 :: EXPR :: assign :: Z :: v104 = p1 $longKey  == #(0 l)::DD,32263
32263 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 484::
32264 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
32267 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
32270 :: EXPR :: reference :: [J :: v105 = p0 $this .longKeyTable::
32273 :: EXPR :: modify :: J :: v105[v116] = #(0 l)::
32277 :: EXPR :: reference :: [J :: v106 = p0 $this .longValueTable::
32280 :: EXPR :: modify :: J :: v106[v116] = #(0 l)::
32287 :: CALL :: call :: V :: v107.unlinkNode(v22, v65, v116)::CL,26493
32293 :: EXPR :: reference :: [Z :: v109 = p0 $this .multiValueTable::
32296 :: EXPR :: modify :: B :: v109[v116] = #(0)::
32300 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v110 = p0 $this .hashIndex::
32303 :: EXPR :: reference :: [I :: v111 = v110.hashTable::
32306 :: EXPR :: reference :: I :: v112 = v111[v22]::DD,32310:DD,32515
32310 :: PRED :: IF :: Z :: if (v112 < #(0)) goto 550::CD,32318:CD,32319:CD,32515
32311 :: EXPR :: reference :: [J :: v113 = p0 $this .longKeyTable::
32314 :: EXPR :: reference :: J :: v114 = v113[v112]::DD,32318
32318 :: EXPR :: assign :: Z :: v115 = p1 $longKey  == v114::DD,32319
32319 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 469::CF,32515:CD,32262:CD,32263:CD,32287:CD,32310
32321 :: EXPR :: reference :: [I :: v56 = p0 $this .intValueTable::
32324 :: EXPR :: reference :: I :: v57 = v56[v64]::DD,32328
32328 :: EXPR :: assign :: J :: v58 = CONVERT I to J v57::DD,32329
32329 :: EXPR :: assign :: Z :: v59 = v58 == p2 $null ::DD,32330
32330 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 574::CD,32335:CD,32340:CD,32516:CD,32517:CD,32519
32335 :: CALL :: call :: I :: v63 = v61.getNextLookup(v64)::JM,32517:CL,26478
32340 :: PRED :: IF :: Z :: if (v64 >= #(0)) goto 84::CD,32000:CD,32341
32341 :: PRED :: IF :: Z :: if (p5 $objectKey  != #(0)) goto 601::CD,32342
32342 :: PRED :: IF :: Z :: if (p6 $objectValue  == #(0)) goto 603::CD,32353
32344 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v67 = p0 $this .hashIndex::
32347 :: EXPR :: reference :: I :: v68 = v67.elementCount::DD,32353
32350 :: EXPR :: reference :: I :: v69 = p0 $this .threshold::DD,32353
32353 :: PRED :: IF :: Z :: if (v68 < v69) goto 649::CD,32354:CD,32359:CD,32379:CD,32388:CD,32440:CD,32473:CD,32484
32354 :: CALL :: call :: Z :: v98 = p0 $this .reset()::CL,26905
32359 :: CALL :: call :: Ljava/lang/Object :: v103 = p0 $this .addOrRemoveMultiVal(p1 $longKey , p2 $null , p3 $longValue , p4 $null , p5 $objectKey , p6 $objectValue )::CL,31944
32370 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v99 = new java.util.NoSuchElementException::
32379 :: CALL :: call :: I :: v72 = v70.linkNode(v22, v65)::JM,32434:JM,32414:CL,27015
32385 :: EXPR :: reference :: Z :: v73 = p0 $this .isObjectKey::DD,32388
32388 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 681::CD,32400
32389 :: EXPR :: reference :: [Ljava/lang/Object :: v82 = p0 $this .objectKeyTable::
32392 :: EXPR :: modify :: Ljava/lang/Object :: v82[v72] = p3 $longValue ::
32397 :: EXPR :: reference :: Z :: v74 = p0 $this .isIntKey::DD,32400
32400 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 717::CD,32404:CD,32409:CD,32410:CD,32421
32401 :: EXPR :: reference :: [I :: v79 = p0 $this .intKeyTable::
32404 :: EXPR :: assign :: I :: v80 = CONVERT J to I p1 $longKey ::DD,32405
32405 :: EXPR :: modify :: I :: v79[v72] = v80::
32409 :: EXPR :: assign :: Z :: v81 = p1 $longKey  == #(0 l)::DD,32410
32410 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 749::
32411 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
32414 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v72::
32418 :: EXPR :: reference :: Z :: v75 = p0 $this .isLongKey::DD,32421
32421 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 749::CD,32429:CD,32430
32422 :: EXPR :: reference :: [J :: v76 = p0 $this .longKeyTable::
32425 :: EXPR :: modify :: J :: v76[v72] = p1 $longKey ::
32429 :: EXPR :: assign :: Z :: v78 = p1 $longKey  == #(0 l)::DD,32430
32430 :: PRED :: IF :: Z :: if (v78 != #(0)) goto 749::
32431 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
32434 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v72::
32437 :: EXPR :: reference :: Z :: v83 = p0 $this .isObjectValue::DD,32440
32440 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 768::CD,32452
32441 :: EXPR :: reference :: [Ljava/lang/Object :: v89 = p0 $this .objectValueTable::
32444 :: EXPR :: modify :: Ljava/lang/Object :: v89[v72] = p4 $null ::
32449 :: EXPR :: reference :: Z :: v84 = p0 $this .isIntValue::DD,32452
32452 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 787::CD,32456:CD,32465
32453 :: EXPR :: reference :: [I :: v87 = p0 $this .intValueTable::
32456 :: EXPR :: assign :: I :: v88 = CONVERT J to I p2 $null ::DD,32457
32457 :: EXPR :: modify :: I :: v87[v72] = v88::
32462 :: EXPR :: reference :: Z :: v85 = p0 $this .isLongValue::DD,32465
32465 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 803::CF,32473
32466 :: EXPR :: reference :: [J :: v86 = p0 $this .longValueTable::
32469 :: EXPR :: modify :: J :: v86[v72] = p2 $null ::
32473 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 815::
32474 :: EXPR :: reference :: [Z :: v90 = p0 $this .multiValueTable::
32477 :: EXPR :: modify :: B :: v90[v72] = #(1)::
32481 :: EXPR :: reference :: Z :: v91 = p0 $this .isLastAccessCount::DD,32484
32484 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 843::CD,32491:CD,32503
32485 :: EXPR :: reference :: [I :: v94 = p0 $this .accessTable::
32488 :: EXPR :: reference :: I :: v95 = p0 $this .accessCount::DD,32491
32491 :: EXPR :: assign :: Ljava/lang/Object :: v96 = v95 + #(1)::DD,32492:DD,32495
32492 :: EXPR :: modify :: I :: p0 $this .accessCount = v96::
32495 :: EXPR :: modify :: I :: v94[v72] = v96::
32500 :: EXPR :: reference :: Z :: v92 = p0 $this .isAccessCount::DD,32503
32503 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 859::
32504 :: EXPR :: reference :: [I :: v93 = p0 $this .accessTable::
32507 :: EXPR :: modify :: I :: v93[v72] = #(1)::
32513 :: EXPR :: assign :: null :: PHI v154 = v149, v64::
32514 :: EXPR :: assign :: null :: PHI v130 = v125, v64::CF,32176
32515 :: EXPR :: assign :: null :: PHI v116 = v112, v64::CF,32262
32516 :: EXPR :: assign :: null :: PHI v60 = v66, v66, #(1), v66, #(1), v66, v66, #(1)::DD,32519
32517 :: EXPR :: assign :: null :: PHI v64 = v25, v63::DD,32340:DD,32513:DD,32514:DD,32515
32519 :: EXPR :: assign :: null :: PHI v66 = #(0), v60::DD,32473:DD,32516:CF,32340
32790 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.nextLookup(int,int,boolean,int)::CE,32791:CD,32798:CD,32843:CD,32845:JM,32839:JM,32840:JM,32826:JM,32827
32791 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.nextLookup(int,int,boolean,int)::JM,26787
32798 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $lookup  + #(1)::DD,32845
32800 :: EXPR :: reference :: Z :: v9 = p0 $this .isObjectKey::DD,32803
32803 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 25::CD,32811:CD,32816
32804 :: EXPR :: reference :: [Ljava/lang/Object :: v11 = p0 $this .objectKeyTable::
32807 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v11[v22]::DD,32811
32811 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 79::CD,32812:CD,32842:CD,32843:CD,32845
32812 :: NORM :: compound :: I :: return v22::CF,32791
32813 :: EXPR :: reference :: Z :: v14 = p0 $this .isIntKey::DD,32816
32816 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 55::CD,32824:CD,32836:CD,32837
32817 :: EXPR :: reference :: [I :: v15 = p0 $this .intKeyTable::
32820 :: EXPR :: reference :: I :: v16 = v15[v22]::DD,32824
32824 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 43::CD,32825:CD,32826
32825 :: NORM :: compound :: I :: return v22::CF,32791
32826 :: PRED :: IF :: Z :: if (p3 $hasZeroKey  == #(0)) goto 79::CD,32827:CD,32842:CD,32843:CD,32845
32827 :: PRED :: IF :: Z :: if (v22 != p4 $zeroKeyIndex ) goto 79::CD,32828:CD,32842:CD,32843:CD,32845
32828 :: NORM :: compound :: I :: return v22::CF,32791
32829 :: EXPR :: reference :: [J :: v17 = p0 $this .longKeyTable::
32832 :: EXPR :: reference :: J :: v18 = v17[v22]::DD,32836
32836 :: EXPR :: assign :: Z :: v20 = v18 == #(0 l)::DD,32837
32837 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 68::CD,32838:CD,32839
32838 :: NORM :: compound :: I :: return v22::CF,32791
32839 :: PRED :: IF :: Z :: if (p3 $hasZeroKey  == #(0)) goto 79::CD,32840:CD,32842:CD,32843:CD,32845
32840 :: PRED :: IF :: Z :: if (v22 != p4 $zeroKeyIndex ) goto 79::CD,32841:CD,32842:CD,32843:CD,32845
32841 :: NORM :: compound :: I :: return v22::CF,32791
32842 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,32845
32843 :: PRED :: IF :: Z :: if (v22 < p2 $limitLookup ) goto 7::CD,32803:CD,32844
32844 :: NORM :: compound :: I :: return v22::CF,32791
32845 :: EXPR :: assign :: null :: PHI v22 = v8, v21::DD,32812:DD,32825:DD,32827:DD,32828:DD,32838:DD,32840:DD,32841:DD,32842:DD,32843:DD,32844
32881 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.resizeElementArrays(int,int)::CD,32892:CD,32913:CD,32934:CD,32955:CD,32976:CD,32997:CD,33018:CD,33039:CD,33060:JM,32896:JM,33043:JM,32980:JM,32917:JM,33064:JM,33001:JM,32938:JM,33022:JM,32959
32889 :: EXPR :: reference :: Z :: v6 = p0 $this .isIntKey::DD,32892
32892 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 44::CD,32896
32896 :: NORM :: declaration :: [I :: v9 = new []::DD,32897
32897 :: EXPR :: modify :: [I :: p0 $this .intKeyTable = v9::
32910 :: EXPR :: reference :: Z :: v12 = p0 $this .isIntValue::DD,32913
32913 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 75::CD,32917
32917 :: NORM :: declaration :: [I :: v14 = new []::DD,32918
32918 :: EXPR :: modify :: [I :: p0 $this .intValueTable = v14::
32931 :: EXPR :: reference :: Z :: v18 = p0 $this .isLongKey::DD,32934
32934 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 106::CD,32938
32938 :: NORM :: declaration :: [J :: v20 = new []::DD,32939
32939 :: EXPR :: modify :: [J :: p0 $this .longKeyTable = v20::
32952 :: EXPR :: reference :: Z :: v24 = p0 $this .isLongValue::DD,32955
32955 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 137::CD,32959
32959 :: NORM :: declaration :: [J :: v26 = new []::DD,32960
32960 :: EXPR :: modify :: [J :: p0 $this .longValueTable = v26::
32973 :: EXPR :: reference :: [Ljava/lang/Object :: v30 = p0 $this .objectKeyTable::DD,32976
32976 :: PRED :: IF :: Z :: if (v30 == #(null)) goto 169::CD,32980
32980 :: NORM :: declaration :: [Ljava/lang/Object :: v33 = new java.lang.Object[]::DD,32981
32981 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectKeyTable = v33::
32994 :: EXPR :: reference :: Z :: v37 = p0 $this .isObjectValue::DD,32997
32997 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 201::CD,33001
33001 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::DD,33002
33002 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable = v39::
33015 :: EXPR :: reference :: [Ljava/lang/Object :: v43 = p0 $this .objectValueTable2::DD,33018
33018 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 233::CD,33022
33022 :: NORM :: declaration :: [Ljava/lang/Object :: v45 = new java.lang.Object[]::DD,33023
33023 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable2 = v45::
33036 :: EXPR :: reference :: [I :: v49 = p0 $this .accessTable::DD,33039
33039 :: PRED :: IF :: Z :: if (v49 == #(null)) goto 264::CD,33043
33043 :: NORM :: declaration :: [I :: v51 = new []::DD,33044
33044 :: EXPR :: modify :: [I :: p0 $this .accessTable = v51::
33057 :: EXPR :: reference :: [Z :: v55 = p0 $this .multiValueTable::DD,33060
33060 :: PRED :: IF :: Z :: if (v55 == #(null)) goto 294::CD,33064
33064 :: NORM :: declaration :: [Z :: v57 = new []::DD,33065
33065 :: EXPR :: modify :: [Z :: p0 $this .multiValueTable = v57::
33183 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clear()::CD,33193
33187 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v3 = p0 $this .hashIndex::
33190 :: EXPR :: reference :: Z :: v4 = v3.modified::DD,33193
33193 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 68::CD,33216:CD,33224:CD,33230
33194 :: EXPR :: modify :: I :: p0 $this .accessCount = #(0)::
33197 :: EXPR :: reference :: I :: v6 = p0 $this .accessCount::DD,33200
33200 :: EXPR :: modify :: I :: p0 $this .accessMin = v6::
33203 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
33206 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
33216 :: CALL :: call :: V :: p0 $this .clearElementArrays(#(0), v10)::CL,38220
33224 :: CALL :: call :: V :: v12.clear()::CL,38445
33227 :: EXPR :: reference :: Z :: v14 = p0 $this .minimizeOnEmpty::DD,33230
33230 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 68::CD,33234
33234 :: CALL :: call :: V :: p0 $this .rehash(v15)::CL,26595
33257 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clear(int,int)::CD,33270:CD,33300:CD,33306
33264 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v7 = p0 $this .hashIndex::
33267 :: EXPR :: reference :: I :: v8 = v7.newNodePointer::DD,33300
33270 :: CALL :: call :: I :: v10 = p0 $this .getAccessCountCeiling(p1 $count , v6)::JM,33301:JM,33292:CL,38479
33277 :: EXPR :: reference :: [Ljava/lang/Object :: v12 = p0 $this .objectKeyTable::
33280 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v12[v21]::DD,33284
33284 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 65::CD,33292:CF,33299
33285 :: EXPR :: reference :: [I :: v15 = p0 $this .accessTable::
33288 :: EXPR :: reference :: I :: v16 = v15[v21]::DD,33292
33292 :: PRED :: IF :: Z :: if (v16 >= v10) goto 65::CD,33293:CF,33299
33293 :: CALL :: call :: Ljava/lang/Object :: v18 = p0 $this .removeObject(v13, #(0))::CL,38516
33299 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,33306
33300 :: PRED :: IF :: Z :: if (v21 < v8) goto 32::CD,33284:CD,33299:CD,33306
33301 :: EXPR :: modify :: I :: p0 $this .accessMin = v10::
33306 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,33299:DD,33300
33426 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v12 = new java.lang.IllegalArgumentException::JM,33456:JM,33452
33427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::JM,33456:JM,33452
33431 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(p1 $capacity )::JM,33456:JM,33452
33436 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
33446 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::JM,33456:JM,33452
33452 :: NORM :: declaration :: [Ljava/lang/Object :: v8 = new java.lang.Object[]::DD,33453
33453 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .heap = v8::
33456 :: EXPR :: modify :: Ljava/util/Comparator :: p0 $this .oc = p2 $comparator ::
33502 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getResourceString(int)::CE,33503:CD,33507:CD,33515:CD,33520:CD,33521:CD,33522
33503 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getResourceString(int)::JM,27279
33507 :: CALL :: call :: Ljava/lang/String :: v6 = toZeroPaddedString(v3, #(4), #(4))::CL,38944
33515 :: CALL :: call :: Ljava/lang/String :: v9 = getString(v7, v6)::JM,33520:JM,33522:CL,20305
33520 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 24::CF,33522
33521 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,33503
33522 :: EXPR :: assign :: null :: PHI v12 = v9, #(S1000 General error)::CF,33521
33534 :: ENTR :: entry :: null :: org.hsqldb.error.Error.insertStrings(java.lang.String,java.lang.Object[])::CE,33535:CD,33539:CD,33540:CD,33544:CD,33598:CD,33599:CD,33600:CD,33604:CD,33610:CD,33615:CD,33619:CD,33621:CD,33622:JM,33560:JM,33596
33535 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.insertStrings(java.lang.String,java.lang.Object[])::JM,27280
33539 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v4 = new java.lang.StringBuffer::JM,33619:JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33540 :: CALL :: call :: I :: v6 = p1 $message .length()::JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33544 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(32)::
33554 :: CALL :: call :: I :: v16 = p1 $message .indexOf(#($$), v36)::JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33560 :: PRED :: IF :: Z :: if (v16 != #(-1)) goto 52::CD,33562:CD,33568:CD,33577:CD,33587:CD,33592:CD,33596:CD,33597:CD,33598:CD,33599:CD,33620:CD,33621:CD,33622:JM,33539:JM,33544:JM,33560
33562 :: CALL :: call :: Ljava/lang/String :: v19 = p1 $message .substring(v36, v16)::JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33568 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v4.append(v19)::
33573 :: EXPR :: reference :: Ljava/lang/Object :: v22 = p2 $add [v38]::DD,33577
33577 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 75::CD,33583:CD,33620
33579 :: EXPR :: reference :: Ljava/lang/Object :: v25 = p2 $add [v38]::JM,33620:JM,33583
33583 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,33620:JM,33583
33587 :: CALL :: call :: Ljava/lang/StringBuffer :: v30 = v4.append(v28)::
33592 :: CALL :: call :: I :: v32 = #($$).length()::JM,33596
33596 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v16 + v32::DD,33621:CF,33597
33597 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v38 + #(1)::DD,33622:CF,33621
33598 :: EXPR :: assign :: I :: v13 = p2 $add .length::CF,33599
33599 :: PRED :: IF :: Z :: if (v38 < v13) goto 33::CD,33554:CD,33560:JM,33539:JM,33544:JM,33596:JM,33598
33600 :: CALL :: call :: I :: v41 = p1 $message .length()::JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33604 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $message .substring(v36, v41)::JM,33539:JM,33544:JM,33560:JM,33596:JM,33598
33610 :: CALL :: call :: Ljava/lang/StringBuffer :: v45 = v4.append(v43)::
33615 :: CALL :: call :: Ljava/lang/String :: v47 = v4.toString()::JM,33619
33619 :: NORM :: compound :: Ljava/lang/String :: return v47::DD,33535
33620 :: EXPR :: assign :: null :: PHI v28 = #(null exception message), v27::
33621 :: EXPR :: assign :: null :: PHI v36 = #(0), v33::CF,33622:JM,33544:JM,33560:JM,33596
33622 :: EXPR :: assign :: null :: PHI v38 = #(0), v35::DD,33597:DD,33599:CF,33598
33667 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getLookup(int)::CE,33668:CD,33675:CD,33700:CD,33701:CD,33702:JM,33688
33668 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getLookup(int)::
33675 :: CALL :: call :: I :: v6 = v4.getLookup(p1 $key )::JM,33702:CL,31142
33681 :: EXPR :: reference :: [I :: v8 = p0 $this .intKeyTable::
33684 :: EXPR :: reference :: I :: v9 = v8[v13]::DD,33688
33688 :: PRED :: IF :: Z :: if (p1 $key  != v9) goto 28::CD,33700:CD,33702
33690 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v10 = p0 $this .hashIndex::
33693 :: EXPR :: reference :: [I :: v11 = v10.linkTable::
33696 :: EXPR :: reference :: I :: v12 = v11[v13]::DD,33702
33700 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 13::CD,33688:CF,33701
33701 :: NORM :: compound :: I :: return v13::DD,33668
33702 :: EXPR :: assign :: null :: PHI v13 = v6, v12::DD,33700:DD,33701
33726 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.access$0(org.hsqldb.HsqlNameManager)::CE,33727:CD,33733
33727 :: EXIT :: exit :: Ljava/util/concurrent/atomic/AtomicLong :: org.hsqldb.HsqlNameManager.access$0(org.hsqldb.HsqlNameManager)::JM,27594
33730 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicLong :: v3 = p1 $null .serialNumber::DD,33733
33733 :: NORM :: compound :: Ljava/util/concurrent/atomic/AtomicLong :: return v3::CF,33727
33735 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.count(java.lang.String,char)::CE,33736:CD,33740:CD,33751:CD,33754:JM,33750:JM,33743
33736 :: EXIT :: exit :: I :: org.hsqldb.lib.StringConverter.count(java.lang.String,char)::JM,27663
33740 :: PRED :: IF :: Z :: if (p1 $s  == #(null)) goto 30::CF,33754:CD,33744:CD,33750:CD,33752:CD,33753
33742 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v13 + #(1)::DD,33753:CF,33743
33743 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v7 + #(1)::DD,33752
33744 :: CALL :: call :: I :: v7 = p1 $s .indexOf(p2 $c , v12)::JM,33750:JM,33740:JM,33743
33750 :: PRED :: IF :: Z :: if (v7 > #(-1)) goto 11::CF,33754:CD,33742:CD,33743:CD,33744:CD,33752:CD,33753
33751 :: NORM :: compound :: I :: return v15::CF,33736
33752 :: EXPR :: assign :: null :: PHI v12 = #(0), v11::CF,33753:JM,33750:JM,33743
33753 :: EXPR :: assign :: null :: PHI v13 = #(0), v10::DD,33742:DD,33754:JM,33750:JM,33740:JM,33743
33754 :: EXPR :: assign :: null :: PHI v15 = #(0), v13::CF,33751
37913 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.clearArray(int,java.lang.Object,int,int)::JM,38000:JM,37993:JM,38010:CD,37920
37920 :: PRED :: IF :: null :: switch p1 $type ::CD,37993:CD,37999:CD,38000:CD,38010
37993 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p2 $data ::
37995 :: EXPR :: modify :: Ljava/lang/Object :: v6[v8] = #(null)::
37999 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v10 + #(-1)::DD,38000:DD,38010
38000 :: PRED :: IF :: Z :: if (v8 >= p3 $from ) goto 273::CD,37999:CD,38010
38010 :: EXPR :: assign :: null :: PHI v10 = p4 $to , v8::DD,37999
38093 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.equals(java.lang.Object)::CE,38094:CD,38098:JM,38100:JM,38108
38094 :: EXIT :: exit :: Z :: org.hsqldb.types.DateTimeType.equals(java.lang.Object)::JM,32112
38098 :: PRED :: IF :: Z :: if (p1 $other  != p0 $this ) goto 8::CD,38099:CD,38100:CD,38101
38099 :: NORM :: compound :: Z :: return #(1)::CF,38094
38100 :: EXPR :: assign :: Z :: v4=p1 $other  INSTANCEOF org.hsqldb.types.DateTimeType::DD,38101
38101 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 41::CD,38102:CD,38107:CD,38118
38102 :: CALL :: call :: Z :: v7 = p0 $this .equals(p1 $other )::JM,38107:CL,38145
38107 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 39::CD,38108:CD,38115:CD,38117
38108 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST p1 $other ::
38109 :: EXPR :: reference :: Z :: v9 = v8.withTimeZone::DD,38115
38112 :: EXPR :: reference :: Z :: v10 = p0 $this .withTimeZone::DD,38115
38115 :: PRED :: IF :: Z :: if (v9 != v10) goto 39::CD,38116:CD,38117
38116 :: NORM :: compound :: Z :: return #(1)::CF,38094
38117 :: NORM :: compound :: Z :: return #(0)::CF,38094
38118 :: NORM :: compound :: Z :: return #(0)::CF,38094
38132 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.equals(java.lang.Object)::CE,38133:CD,38137:CD,38142
38133 :: EXIT :: exit :: Z :: org.hsqldb.types.CharacterType.equals(java.lang.Object)::JM,32112
38137 :: CALL :: call :: Z :: v5 = p0 $this .equals(p1 $other )::JM,38142:CL,38145
38142 :: NORM :: compound :: Z :: return v5::CF,38133
38145 :: ENTR :: entry :: null :: org.hsqldb.types.Type.equals(java.lang.Object)::CE,38146:CD,38150:JM,38162:JM,38164:JM,38181:JM,38152:JM,38154:JM,38172:JM,38189:JM,38158
38146 :: EXIT :: exit :: Z :: org.hsqldb.types.Type.equals(java.lang.Object)::JM,32112:JM,38107:JM,38142
38150 :: PRED :: IF :: Z :: if (p1 $other  != p0 $this ) goto 8::CD,38151:CD,38152:CD,38153
38151 :: NORM :: compound :: Z :: return #(1)::CF,38146
38152 :: EXPR :: assign :: Z :: v4=p1 $other  INSTANCEOF org.hsqldb.types.Type::DD,38153
38153 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 89::CD,38154:CD,38158:CD,38162:CD,38199:JM,38164:JM,38181:JM,38150:JM,38152:JM,38172:JM,38189
38154 :: CALL :: call :: Ljava/lang/Class :: v7 = p0 $this .getClass()::JM,38162:JM,38164:JM,38181:JM,38150:JM,38152:JM,38154:JM,38172:JM,38189:JM,38158
38158 :: CALL :: call :: Ljava/lang/Class :: v9 = p1 $other .getClass()::JM,38162:JM,38164:JM,38181:JM,38150:JM,38154:JM,38172:JM,38189:JM,38158
38162 :: PRED :: IF :: Z :: if (v7 == v9) goto 28::CD,38163:CD,38164:CD,38171
38163 :: NORM :: compound :: Z :: return #(0)::CF,38146
38164 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST p1 $other ::
38165 :: EXPR :: reference :: I :: v11 = v10.typeCode::DD,38171
38168 :: EXPR :: reference :: I :: v12 = p0 $this .typeCode::DD,38171
38171 :: PRED :: IF :: Z :: if (v11 != v12) goto 87::CD,38172:CD,38179:CD,38180:CD,38198
38172 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST p1 $other ::
38173 :: EXPR :: reference :: J :: v14 = v13.precision::DD,38179
38176 :: EXPR :: reference :: J :: v15 = p0 $this .precision::DD,38179
38179 :: EXPR :: assign :: Z :: v16 = v14 == v15::DD,38180
38180 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 87::CD,38181:CD,38188:CD,38198
38181 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST p1 $other ::
38182 :: EXPR :: reference :: I :: v18 = v17.scale::DD,38188
38185 :: EXPR :: reference :: I :: v19 = p0 $this .scale::DD,38188
38188 :: PRED :: IF :: Z :: if (v18 != v19) goto 87::CD,38189:CD,38196:CD,38198
38189 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST p1 $other ::
38190 :: EXPR :: reference :: Lorg/hsqldb/types/UserTypeModifier :: v21 = v20.userTypeModifier::DD,38196
38193 :: EXPR :: reference :: Lorg/hsqldb/types/UserTypeModifier :: v22 = p0 $this .userTypeModifier::DD,38196
38196 :: PRED :: IF :: Z :: if (v21 != v22) goto 87::CD,38197:CD,38198
38197 :: NORM :: compound :: Z :: return #(1)::CF,38146
38198 :: NORM :: compound :: Z :: return #(0)::CF,38146
38199 :: NORM :: compound :: Z :: return #(0)::CF,38146
38220 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clearElementArrays(int,int)::CD,38229:CD,38277:CD,38321:CD,38335:JM,38273:JM,38345:JM,38347:JM,38348:JM,38317:JM,38349:JM,38254:JM,38350:JM,38287:JM,38351:JM,38352:JM,38353:JM,38354:JM,38331:JM,38302:JM,38239
38226 :: EXPR :: reference :: Z :: v5 = p0 $this .isIntKey::DD,38229
38229 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 31::CD,38238:CD,38239:CD,38244:CD,38347
38231 :: EXPR :: reference :: [I :: v20 = p0 $this .intKeyTable::
38234 :: EXPR :: modify :: I :: v20[v19] = #(0)::
38238 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(-1)::DD,38239:DD,38347
38239 :: PRED :: IF :: Z :: if (v19 >= p1 $from ) goto 13::CD,38238:CD,38347
38241 :: EXPR :: reference :: Z :: v7 = p0 $this .isLongKey::DD,38244
38244 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 61::CD,38253:CD,38254:CD,38259:CD,38348
38246 :: EXPR :: reference :: [J :: v16 = p0 $this .longKeyTable::
38249 :: EXPR :: modify :: J :: v16[v15] = #(0 l)::
38253 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(-1)::DD,38254:DD,38348
38254 :: PRED :: IF :: Z :: if (v15 >= p1 $from ) goto 43::CD,38253:CD,38348
38256 :: EXPR :: reference :: Z :: v8 = p0 $this .isObjectKey::DD,38259
38259 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 76::CD,38263:CD,38272:CD,38273:CD,38349
38260 :: EXPR :: reference :: [Ljava/lang/Object :: v9 = p0 $this .objectKeyTable::DD,38263
38263 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 95::CD,38272:CD,38273:CD,38349
38265 :: EXPR :: reference :: [Ljava/lang/Object :: v13 = p0 $this .objectKeyTable::
38268 :: EXPR :: modify :: Ljava/lang/Object :: v13[v12] = #(null)::
38272 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v14 + #(-1)::DD,38273:DD,38349
38273 :: PRED :: IF :: Z :: if (v12 >= p1 $from ) goto 80::CD,38272:CD,38349
38274 :: EXPR :: reference :: Z :: v23 = p0 $this .isIntValue::DD,38277
38277 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 125::CD,38286:CD,38287:CD,38292:CD,38350
38279 :: EXPR :: reference :: [I :: v33 = p0 $this .intValueTable::
38282 :: EXPR :: modify :: I :: v33[v32] = #(0)::
38286 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v34 + #(-1)::DD,38287:DD,38350
38287 :: PRED :: IF :: Z :: if (v32 >= p1 $from ) goto 107::CD,38286:CD,38350
38289 :: EXPR :: reference :: Z :: v24 = p0 $this .isLongValue::DD,38292
38292 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 155::CD,38301:CD,38302:CD,38307:CD,38351
38294 :: EXPR :: reference :: [J :: v30 = p0 $this .longValueTable::
38297 :: EXPR :: modify :: J :: v30[v29] = #(0 l)::
38301 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v31 + #(-1)::DD,38302:DD,38351
38302 :: PRED :: IF :: Z :: if (v29 >= p1 $from ) goto 137::CD,38301:CD,38351
38304 :: EXPR :: reference :: Z :: v25 = p0 $this .isObjectValue::DD,38307
38307 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 182::CD,38316:CD,38317:CD,38352
38309 :: EXPR :: reference :: [Ljava/lang/Object :: v27 = p0 $this .objectValueTable::
38312 :: EXPR :: modify :: Ljava/lang/Object :: v27[v26] = #(null)::
38316 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v28 + #(-1)::DD,38317:DD,38352
38317 :: PRED :: IF :: Z :: if (v26 >= p1 $from ) goto 167::CD,38316:CD,38352
38318 :: EXPR :: reference :: [I :: v36 = p0 $this .accessTable::DD,38321
38321 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 209::CD,38330:CD,38331:CD,38353
38323 :: EXPR :: reference :: [I :: v38 = p0 $this .accessTable::
38326 :: EXPR :: modify :: I :: v38[v37] = #(0)::
38330 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v39 + #(-1)::DD,38331:DD,38353
38331 :: PRED :: IF :: Z :: if (v37 >= p1 $from ) goto 194::CD,38330:CD,38353
38332 :: EXPR :: reference :: [Z :: v41 = p0 $this .multiValueTable::DD,38335
38335 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 235::CD,38344:CD,38345:CD,38354
38337 :: EXPR :: reference :: [Z :: v43 = p0 $this .multiValueTable::
38340 :: EXPR :: modify :: B :: v43[v42] = #(0)::
38344 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(-1)::DD,38345:DD,38354
38345 :: PRED :: IF :: Z :: if (v42 >= p1 $from ) goto 221::CD,38344:CD,38354
38347 :: EXPR :: assign :: null :: PHI v21 = p2 $to , v19::DD,38238
38348 :: EXPR :: assign :: null :: PHI v18 = p2 $to , v15::DD,38253
38349 :: EXPR :: assign :: null :: PHI v14 = p2 $to , v12::DD,38272
38350 :: EXPR :: assign :: null :: PHI v34 = p2 $to , v32::DD,38286
38351 :: EXPR :: assign :: null :: PHI v31 = p2 $to , v29::DD,38301
38352 :: EXPR :: assign :: null :: PHI v28 = p2 $to , v26::DD,38316
38353 :: EXPR :: assign :: null :: PHI v39 = p2 $to , v37::DD,38330
38354 :: EXPR :: assign :: null :: PHI v44 = p2 $to , v42::DD,38344
38445 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.clear()::CD,38455:CD,38464:CD,38468
38449 :: EXPR :: reference :: [I :: v3 = p0 $this .linkTable::
38452 :: EXPR :: reference :: I :: v5 = p0 $this .newNodePointer::
38455 :: CALL :: call :: V :: fill(v3, #(0), v5, #(0))::
38461 :: EXPR :: reference :: [I :: v7 = p0 $this .hashTable::
38464 :: CALL :: call :: V :: fill(v7, #(-1))::
38468 :: CALL :: call :: V :: p0 $this .resetTables()::CL,31883
38479 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getAccessCountCeiling(int,int)::CE,38480:CD,38500:CD,38509
38480 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getAccessCountCeiling(int,int)::JM,33301:JM,33292
38500 :: CALL :: call :: I :: v11 = rank(v5, v7, p1 $count , v8, v9, p2 $margin )::JM,38509:CL,40269
38509 :: NORM :: compound :: I :: return v11::CF,38480
38516 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeObject(java.lang.Object,boolean)::CD,38522:JM,38601:JM,38559
38522 :: PRED :: IF :: Z :: if (p1 $objectKey  != #(null)) goto 7::CD,38531:CD,38615:CD,38618
38531 :: CALL :: call :: I :: v10 = v8.getHashIndex(v7)::CL,26463
38536 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v11 = p0 $this .hashIndex::
38539 :: EXPR :: reference :: [I :: v12 = v11.hashTable::
38542 :: EXPR :: reference :: I :: v13 = v12[v10]::DD,38618
38547 :: EXPR :: reference :: [Ljava/lang/Object :: v16 = p0 $this .objectKeyTable::
38550 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v16[v23]::JM,38559
38554 :: CALL :: call :: Z :: v19 = v17.equals(p1 $objectKey )::JM,38559:JM,38601:JM,38522
38559 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 128::CD,38577:CD,38586:CD,38601:CD,38610:CD,38615:CD,38618
38567 :: EXPR :: reference :: [Ljava/lang/Object :: v27 = p0 $this .objectKeyTable::
38570 :: EXPR :: modify :: Ljava/lang/Object :: v27[v23] = #(null)::
38577 :: CALL :: call :: V :: v28.unlinkNode(v10, v24, v23)::CL,26493
38583 :: EXPR :: reference :: Z :: v30 = p0 $this .isObjectValue::DD,38586
38586 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 111::
38594 :: EXPR :: reference :: [Ljava/lang/Object :: v33 = p0 $this .objectValueTable::
38597 :: EXPR :: modify :: Ljava/lang/Object :: v33[v23] = #(null)::
38601 :: PRED :: IF :: Z :: if (p2 $removeRow  == #(0)) goto 122::CD,38602
38602 :: CALL :: call :: V :: p0 $this .removeRow(v23)::CL,40372
38610 :: CALL :: call :: I :: v22 = v20.getNextLookup(v23)::JM,38618:CL,26478
38615 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 43::CD,38554:CD,38559
38618 :: EXPR :: assign :: null :: PHI v23 = v13, v22::DD,38615
38944 :: ENTR :: entry :: null :: org.hsqldb.lib.StringUtil.toZeroPaddedString(long,int,int)::CD,38950:CD,38954:CD,38955:CD,38957:CD,38961:CD,38965:CD,38971:CD,38982:CD,38983:CD,38988:CD,38993:CD,38998:CD,38999:CD,39000:JM,38956
38950 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::
38954 :: EXPR :: assign :: Z :: v8 = p1 $value  == #(0 l)::DD,38955
38955 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 19::CF,38998:CD,38956
38956 :: EXPR :: assign :: Ljava/lang/Object :: v10 = -(p1 $value )::DD,38998
38957 :: CALL :: call :: Ljava/lang/String :: v13 = toString(v11)::JM,38965:JM,38999
38961 :: CALL :: call :: I :: v15 = v13.length()::JM,38965:JM,38999
38965 :: PRED :: IF :: Z :: if (v15 <= p2 $null ) goto 43::CF,38999:CD,38966:JM,38965
38966 :: CALL :: call :: Ljava/lang/String :: v17 = v13.substring(p2 $null )::JM,38965:JM,38999:JM,38982:JM,38950:JM,38988
38971 :: CALL :: call :: I :: v20 = v18.length()::JM,39000
38976 :: CALL :: call :: Ljava/lang/StringBuffer :: v23 = v5.append(#(48))::
38981 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,39000
38982 :: PRED :: IF :: Z :: if (v26 < p2 $null ) goto 55::CD,38976:CD,38981:CD,39000
38983 :: CALL :: call :: Ljava/lang/StringBuffer :: v28 = v5.append(v18)::
38988 :: PRED :: IF :: Z :: if (p3 $precision  >= p2 $null ) goto 89::CD,38989
38989 :: CALL :: call :: V :: v5.setLength(p3 $precision )::JM,38999
38993 :: CALL :: call :: Ljava/lang/String :: v31 = v5.toString()::
38998 :: EXPR :: assign :: null :: PHI v11 = p1 $value , v10::JM,38965:JM,38999
38999 :: EXPR :: assign :: null :: PHI v18 = v13, v17::JM,39000
39000 :: EXPR :: assign :: null :: PHI v26 = v20, v25::DD,38981:DD,38982
40269 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.rank([],int,int,int,int,int)::CE,40270:CD,40278:CD,40284:CD,40307:CD,40308:CD,40309:CD,40310:CD,40319:CD,40320:CD,40322:CD,40323:CD,40324:JM,40299
40270 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayCounter.rank([],int,int,int,int,int)::JM,38509
40278 :: CALL :: call :: I :: v11 = calcInterval(#(256), v29, v31)::JM,40305:JM,40312:CL,41260
40284 :: CALL :: call :: [I :: v13 = countSegments(p1 $array , p2 $elements , #(256), v11, v29, v31)::JM,40307:CL,41290
40294 :: EXPR :: reference :: I :: v15 = v13[v24]::DD,40298
40298 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v23 + v15::DD,40299
40299 :: PRED :: IF :: Z :: if (v16 >= p3 $target ) goto 86::CD,40304:CD,40305:CD,40306:CD,40307:CD,40308:CD,40322:CD,40323:CD,40324:CF,40309
40300 :: EXPR :: reference :: I :: v17 = v13[v24]::DD,40304
40304 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v23 + v17::DD,40323:CF,40305
40305 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v22 + v11::DD,40322:CF,40306
40306 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v24 + #(1)::DD,40324:CF,40322
40307 :: EXPR :: assign :: I :: v14 = v13.length::CF,40308
40308 :: PRED :: IF :: Z :: if (v24 < v14) goto 50::CD,40298:CD,40299:CF,40309
40309 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v23 + p6 $margin ::DD,40310
40310 :: PRED :: IF :: Z :: if (v25 < p3 $target ) goto 96::CD,40311:CD,40312
40311 :: NORM :: compound :: I :: return v22::CF,40270
40312 :: PRED :: IF :: Z :: if (v11 > #(1)) goto 104::CD,40278:CD,40284:CD,40307:CD,40308:CD,40309:CD,40310:CD,40313:CD,40319:CD,40320:CD,40322:CD,40323:CD,40324
40313 :: NORM :: compound :: I :: return v22::CF,40270
40319 :: EXPR :: assign :: null :: PHI v29 = v22, p4 $start ::CF,40320:DD,40322
40320 :: EXPR :: assign :: null :: PHI v30 = v23, #(0)::DD,40323
40322 :: EXPR :: assign :: null :: PHI v22 = v29, v19::CF,40323:DD,40305:DD,40311:DD,40313:DD,40319
40323 :: EXPR :: assign :: null :: PHI v23 = v30, v18::CF,40324:DD,40298:DD,40304:DD,40309:DD,40320
40324 :: EXPR :: assign :: null :: PHI v24 = #(0), v21::DD,40306:DD,40308:CF,40307
40372 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeRow(int)::CD,40380:CD,40385
40380 :: CALL :: call :: Z :: v6 = v4.removeEmptyNode(p1 $lookup )::CL,41352
40385 :: CALL :: call :: V :: p0 $this .removeFromElementArrays(p1 $lookup )::CL,41564
41260 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.calcInterval(int,int,int)::JM,41269:JM,41272:CF,41261:CD,41266:CD,41267
41261 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayCounter.calcInterval(int,int,int)::JM,40305:JM,40312
41266 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p3 $limit  - p2 $start ::DD,41267:DD,41269:DD,41272
41267 :: PRED :: IF :: Z :: if (v5 > #(0)) goto 12::CD,41268:CD,41269:CD,41270:CD,41272:CD,41273:CD,41274:CD,41275
41268 :: NORM :: compound :: I :: return #(0)::CF,41261
41269 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 % p1 $segments ::DD,41270
41270 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 25::CD,41275
41272 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v5 / p1 $segments ::DD,41273
41273 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 + v9::CF,41274
41274 :: NORM :: compound :: I :: return v11::CF,41261
41275 :: EXPR :: assign :: null :: PHI v9 = #(0), #(1)::DD,41273:CF,41272
41290 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.countSegments([],int,int,int,int,int)::CE,41291:CD,41299:CD,41300:JM,41322:JM,41307:JM,41308:JM,41310:JM,41311
41291 :: EXIT :: exit :: [I :: org.hsqldb.lib.ArrayCounter.countSegments([],int,int,int,int,int)::JM,40307
41299 :: NORM :: declaration :: [I :: v8 = new []::DD,41301:DD,41323:CF,41300
41300 :: PRED :: IF :: Z :: if (p4 $interval  > #(0)) goto 15::CD,41301:CD,41322:CD,41323:CD,41324
41301 :: NORM :: compound :: [I :: return v8::DD,41291
41303 :: EXPR :: reference :: I :: v10 = p1 $array [v17]::DD,41307:DD,41308:DD,41310
41307 :: PRED :: IF :: Z :: if (v10 < p5 $start ) goto 59::CD,41308:CF,41321
41308 :: PRED :: IF :: Z :: if (v10 < p6 $limit ) goto 45::CD,41310:CD,41311:CD,41316
41310 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - p5 $start ::DD,41311
41311 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v11 / p4 $interval ::
41312 :: EXPR :: reference :: I :: v13 = v8[v12]::DD,41316
41316 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 + #(1)::DD,41317
41317 :: EXPR :: modify :: I :: v8[v12] = v15::
41321 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,41324
41322 :: PRED :: IF :: Z :: if (v17 < p2 $elementCount ) goto 21::CD,41307:CD,41321:CD,41324:CF,41323
41323 :: NORM :: compound :: [I :: return v8::DD,41291
41324 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,41321:DD,41322
41352 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.removeEmptyNode(int)::CD,41396:CD,41397:CD,41490:CD,41491:CD,41492:JM,41361:JM,41470:JM,41407
41357 :: EXPR :: reference :: I :: v6 = p0 $this .reclaimedNodePointer::DD,41491
41361 :: PRED :: IF :: Z :: if (v10 != p1 $lookup ) goto 58::CD,41362:CD,41396:CD,41490:CD,41491:CD,41492
41362 :: PRED :: IF :: Z :: if (v9 != #(-1)) goto 38::
41363 :: EXPR :: reference :: [I :: v14 = p0 $this .linkTable::
41366 :: EXPR :: reference :: I :: v15 = v14[p1 $lookup ]::DD,41370
41370 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = v15::
41374 :: EXPR :: reference :: [I :: v11 = p0 $this .linkTable::
41377 :: EXPR :: reference :: [I :: v12 = p0 $this .linkTable::
41380 :: EXPR :: reference :: I :: v13 = v12[p1 $lookup ]::DD,41384
41384 :: EXPR :: modify :: I :: v11[v9] = v13::
41389 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
41392 :: EXPR :: reference :: I :: v8 = v7[v10]::DD,41491
41396 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 16::CF,41492:CD,41361
41397 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 80::CD,41424:CD,41450:CD,41458:CD,41487:CD,41488:CD,41493:CD,41494
41400 :: EXPR :: reference :: [I :: v19 = p0 $this .linkTable::
41403 :: EXPR :: reference :: I :: v20 = v19[v25]::DD,41407
41407 :: PRED :: IF :: Z :: if (v20 <= p1 $lookup ) goto 105::CD,41415:CF,41420
41408 :: EXPR :: reference :: [I :: v21 = p0 $this .linkTable::
41411 :: EXPR :: reference :: I :: v22 = v21[v25]::DD,41415
41415 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::DD,41416
41416 :: EXPR :: modify :: I :: v21[v25] = v23::
41420 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,41493
41421 :: EXPR :: reference :: I :: v18 = p0 $this .newNodePointer::DD,41424
41424 :: PRED :: IF :: Z :: if (v25 < v18) goto 84::CD,41407:CD,41420:CD,41493
41444 :: EXPR :: reference :: [I :: v33 = p0 $this .linkTable::
41447 :: EXPR :: reference :: I :: v34 = p0 $this .newNodePointer::DD,41450
41450 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 - #(1)::
41451 :: EXPR :: modify :: I :: v33[v35] = #(0)::
41455 :: EXPR :: reference :: I :: v36 = p0 $this .newNodePointer::DD,41458
41458 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v36 - #(1)::DD,41459
41459 :: EXPR :: modify :: I :: p0 $this .newNodePointer = v37::
41463 :: EXPR :: reference :: [I :: v40 = p0 $this .hashTable::
41466 :: EXPR :: reference :: I :: v41 = v40[v46]::DD,41470
41470 :: PRED :: IF :: Z :: if (v41 <= p1 $lookup ) goto 190::CD,41478:CF,41483
41471 :: EXPR :: reference :: [I :: v42 = p0 $this .hashTable::
41474 :: EXPR :: reference :: I :: v43 = v42[v46]::DD,41478
41478 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v43 - #(1)::DD,41479
41479 :: EXPR :: modify :: I :: v42[v46] = v44::
41483 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v46 + #(1)::DD,41494
41484 :: EXPR :: reference :: [I :: v38 = p0 $this .hashTable::DD,41487
41487 :: EXPR :: assign :: I :: v39 = v38.length::CF,41488
41488 :: PRED :: IF :: Z :: if (v46 < v39) goto 169::CD,41470:CD,41483:CD,41487:CD,41494
41490 :: EXPR :: assign :: null :: PHI v9 = #(-1), v10::CF,41491:DD,41362
41491 :: EXPR :: assign :: null :: PHI v10 = v6, v8::DD,41361:DD,41396:DD,41490
41492 :: EXPR :: assign :: null :: PHI v17 = #(1), #(0)::DD,41397
41493 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,41420:DD,41424
41494 :: EXPR :: assign :: null :: PHI v46 = #(0), v45::DD,41483:DD,41488
41564 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeFromElementArrays(int)::CD,41578:CD,41601:CD,41624:CD,41651:CD,41674:CD,41697
41569 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v4 = p0 $this .hashIndex::
41572 :: EXPR :: reference :: I :: v5 = v4.newNodePointer::
41575 :: EXPR :: reference :: Z :: v6 = p0 $this .isIntKey::DD,41578
41578 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 40::
41591 :: EXPR :: reference :: [I :: v13 = p0 $this .intKeyTable::
41594 :: EXPR :: modify :: I :: v13[v5] = #(0)::
41598 :: EXPR :: reference :: Z :: v14 = p0 $this .isLongKey::DD,41601
41601 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::
41614 :: EXPR :: reference :: [J :: v19 = p0 $this .longKeyTable::
41617 :: EXPR :: modify :: J :: v19[v5] = #(0 l)::
41621 :: EXPR :: reference :: Z :: v21 = p0 $this .isObjectKey::DD,41624
41624 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 85::CD,41628
41625 :: EXPR :: reference :: [Ljava/lang/Object :: v22 = p0 $this .objectKeyTable::DD,41628
41628 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 109::
41641 :: EXPR :: reference :: [Ljava/lang/Object :: v28 = p0 $this .objectKeyTable::
41644 :: EXPR :: modify :: Ljava/lang/Object :: v28[v5] = #(null)::
41648 :: EXPR :: reference :: Z :: v29 = p0 $this .isIntValue::DD,41651
41651 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 140::
41664 :: EXPR :: reference :: [I :: v34 = p0 $this .intValueTable::
41667 :: EXPR :: modify :: I :: v34[v5] = #(0)::
41671 :: EXPR :: reference :: Z :: v35 = p0 $this .isLongValue::DD,41674
41674 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 171::
41687 :: EXPR :: reference :: [J :: v40 = p0 $this .longValueTable::
41690 :: EXPR :: modify :: J :: v40[v5] = #(0 l)::
41694 :: EXPR :: reference :: Z :: v41 = p0 $this .isObjectValue::DD,41697
41697 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 201::
41710 :: EXPR :: reference :: [Ljava/lang/Object :: v46 = p0 $this .objectValueTable::
41713 :: EXPR :: modify :: Ljava/lang/Object :: v46[v5] = #(null)::
41925 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,41926:CD,41929:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41926 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,41929
41929 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,41930:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41930 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
41934 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41939 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,42198
41940 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,42199:CD,41941:CD,41942:CD,41947
41941 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41942 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41947 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,41939:CD,41940:CD,42198:CD,42199
41949 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,42199
41950 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,41951:CD,41956:JM,42147:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41951 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41956 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,41949:CD,41950:CD,42199:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41957 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41966 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,42200:CD,41967
41967 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,42200
41968 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41972 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,42201:CD,41973:CD,41978:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41947:JM,41980:JM,42205:JM,42207
41973 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41978 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,42201
41980 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,41981:CD,41987:CD,41991:CD,41996:CD,41999:CD,42000:CD,42202:CD,42203:CD,42204:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41981 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
41987 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,42204:JM,41996
41991 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,42011:JM,41947:JM,41980:JM,42205:JM,42207:JM,42204
41996 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,42203:CD,41997:CD,42204
41997 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,42203
41999 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,42202
42000 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,42203:CD,42001:CD,42204
42001 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,42203:CD,42002:CD,42007:CD,42204:JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
42002 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
42007 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,42203:CD,41980
42011 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,42207:CD,42012
42012 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,42016:CD,42021:CD,42022:CD,42029:CD,42039:CD,42205:CD,42206:CD,42207
42013 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,42021
42016 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,42021
42021 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,42207:CD,42022:CD,42029:CD,42039:CD,42205:CD,42206
42022 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,42205
42023 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,42205
42026 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,42029
42029 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,42206:CD,42033:CD,42038
42030 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,42033:JM,42038
42033 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,42033:JM,42038
42038 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,42206
42039 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,42207
42086 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
42087 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
42092 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
42097 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,42147:JM,42148
42106 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,42110
42110 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
42115 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
42116 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
42121 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
42124 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
42129 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
42141 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
42147 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,42148:CD,42149
42148 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,42147:JM,41956:JM,41972:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41996:JM,41980:JM,41966:JM,41925:JM,42022:JM,42205:JM,42207
42149 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,42147:JM,41956:JM,42148:JM,41925:JM,42022:JM,41996:JM,41966:JM,41972:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,42205:JM,42207
42185 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
42186 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
42197 :: EXPR :: assign :: Ljava/lang/Exception :: v108 = catch <exc>::
42198 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,41939:DD,41940:DD,41941:DD,41950:DD,42001:JM,42147:JM,41956:JM,41972:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,41966
42199 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,41949:DD,41950:JM,42147:JM,41956:JM,41972:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41996:JM,41980:JM,41966:DD,41967:DD,42200
42200 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,41972:JM,42147:JM,41956:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41996:JM,41980:JM,41966:DD,42202:DD,42203:JM,41925:JM,42022:JM,42205:JM,42207
42201 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,42000
42202 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,42147:JM,41956:JM,41972:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,41966:DD,41997:DD,41999:DD,42001:JM,41996:CF,42000
42203 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,42204:JM,42147:JM,41956:JM,41972:JM,42148:JM,42198:JM,42007:JM,41978:JM,41947:JM,41980:JM,41966
42204 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,42012:JM,42021:DD,42206
42205 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,42207
42206 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,42039
42207 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,42106
42863 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
42873 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,42880
42875 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,42880:JM,43057:JM,43060:JM,42887:JM,43031:JM,42984:JM,43021:JM,43054
42880 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,42881:DD,43054
42881 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,42882:CD,42884:CD,42892:CD,43014:CD,43016:CD,43021:CD,43022:CD,43054:CD,43055:CD,43059
42882 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,42884
42884 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,43054:CD,42885:CD,42887:CD,43055
42885 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,42887:JM,43054
42887 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,42887:JM,43054:JM,42880:JM,43057:JM,43060:JM,43031:JM,42984:JM,43021
42892 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,43059:CD,42899:CD,42903:CD,42904:CD,42923:CD,42924:CD,42932:CD,42937:CD,42941:CD,43005:CD,43058
42899 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,42903
42903 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,42904
42904 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,42905:CD,42906:CD,42914:CD,42919
42905 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
42906 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
42914 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
42919 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
42923 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
42924 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
42932 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
42937 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
42941 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,43010
42948 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
42952 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
42956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,43057:JM,42984
42957 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
42965 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,43057:JM,42984
42970 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,43057:JM,42984:JM,42880:JM,43060:JM,42887:JM,43031:JM,43021:JM,43054
42975 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,43057:JM,43060:JM,42984:JM,43021
42980 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,43057:JM,42984
42984 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,43057:JM,42984
42989 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,43057
42993 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,43057:JM,42984
42998 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,43058:CD,42999:CD,43003
42999 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,42999:JM,43003
43003 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,43058
43005 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,43059:CD,43006:CD,43010
43006 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,43010
43010 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,43059:CD,42948:CD,42952:CD,42956:CD,42957:CD,42965:CD,42970:CD,42975:CD,42980:CD,42984:CD,42998:CD,43005:CD,43057:CD,43058
43014 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,43021
43016 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,43021:JM,42880:JM,43057:JM,43060:JM,42887:JM,43031:JM,42984:JM,43054
43021 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,43022:DD,43060
43022 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,43025:CD,43036:CD,43037:CD,43060:CD,43061
43025 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,43060:CD,43026:CD,43028
43026 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,43028
43028 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,43060:CD,43029:CD,43031
43029 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,43060:JM,43031
43031 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,43060:JM,43031:JM,42880:JM,43057:JM,42887:JM,42984:JM,43021:JM,43054
43036 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,43061
43037 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,43038:CD,43040
43038 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
43040 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,42880:JM,43057:JM,43060:JM,42887:JM,43031:JM,42984:JM,43021:JM,43054
43054 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,43055:DD,42892:DD,43058:DD,43059
43055 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,43025:CF,42892
43057 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,42998:JM,42999:JM,43003
43058 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,43005:DD,43058:DD,43059
43059 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,43061
43060 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,43036:DD,43061
43061 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,43037:JM,42880:JM,43057:JM,43060:JM,42984:JM,43021:JM,43054
