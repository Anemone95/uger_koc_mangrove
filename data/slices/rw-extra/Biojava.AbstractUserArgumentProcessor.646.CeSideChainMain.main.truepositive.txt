[48147]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeSideChainMain.main(java.lang.String[])::CD,9:JM,36226:JM,36290
9 :: CALL :: call :: V :: v3.process(p1 $args )::JM,36226:JM,36290:CL,36131
410 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.<clinit>()::CD,414:CD,422:CD,426:CD,428
414 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
422 :: CALL :: call :: Ljava/lang/String :: v10 = getProperty(#(line.separator))::JM,422:JM,426
426 :: EXPR :: modify :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.newline = v10::
428 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
588 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,591:CD,597:CD,599:CD,605:CD,607:CD,613:CD,615:CD,621:CD,623:CD,629:CD,631:CD,632:CD,638:CD,644:CD,650:CD,656
591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,597
597 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
599 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,605
605 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
607 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,613
613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
615 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,621
621 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
623 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,629
629 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
631 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
632 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,634
634 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
638 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,640
640 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
644 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,646
646 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,652
652 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
656 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,658
658 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,717:CD,725:CD,729:CD,737:CD,741:CD,749:CD,753:CD,761:CD,765:CD,773:CD,777:CD,785:CD,789:CD,797:CD,801:CD,809:CD,813:CD,821:CD,825:CD,833:CD,837:CD,845:CD,849:CD,857:CD,861:CD,869:CD,873:CD,881:CD,885:CD,893:CD,897:CD,905:CD,909:CD,917:CD,921:CD,929:CD,933:CD,941:CD,945:CD,953:CD,957:CD,965:CD,969:CD,977:CD,981:CD,989:CD,993:CD,1001:CD,1005:CD,1013:CD,1017:CD,1025:CD,1029:CD,1035:CD,1041:CD,1090:CD,1119:CD,1120:CD,1128:CD,1132:CD,1140:CD,1144:CD,1152:CD,1156:CD,1164:CD,1168:CD,1176:CD,1180:CD,1188:CD,1192:CD,1200:CD,1204:CD,1212:CD,1216:CD,1224:CD,1228:CD,1236:CD,1240:CD,1248:CD,1252:CD,1260:CD,1264:CD,1272:CD,1276:CD,1284:CD,1288:CD,1296:CD,1300:CD,1308:CD,1312:CD,1320:CD,1324:CD,1332:CD,1336:CD,1344:CD,1348:CD,1356:CD,1360:CD,1368:CD,1372:CD,1380:CD,1384:CD,1392:CD,1396:CD,1404:CD,1408:CD,1416:CD,1420:CD,1426:CD,1436:CD,1445:CD,1454:CD,1460
717 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
725 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
729 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
737 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
741 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
749 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
753 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
761 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
765 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
773 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
777 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
785 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
789 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
797 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
801 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
809 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
813 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
821 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
825 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
833 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
837 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
845 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
849 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
857 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
861 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
869 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
873 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
881 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
885 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
893 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
897 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
905 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
909 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
917 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
921 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
929 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
933 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
941 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
945 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
953 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
957 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
965 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
969 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
977 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
981 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
989 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
993 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
1001 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
1005 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
1013 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
1017 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
1025 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
1029 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
1035 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
1041 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1090
1042 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
1046 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
1050 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
1054 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
1058 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
1062 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
1066 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
1070 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
1074 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
1078 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
1082 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1086 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1090 :: EXPR :: assign :: I :: v193 = v173.length::DD,1119
1092 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1102
1098 :: CALL :: call :: I :: v197 = v194.length()::JM,1102
1102 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1103 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1108 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1112 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1118 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1460
1119 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1120:CD,1098:CD,1102:CD,1103:CD,1108:CD,1112:CD,1118:CD,1460
1120 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1128 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1132 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1140 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1144 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1152 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1156 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1164 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1168 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1176 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1180 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1188 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1192 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1200 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1204 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1212 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1216 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1224 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1228 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1236 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1240 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1248 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1252 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1260 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1264 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1272 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1276 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1284 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1288 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1296 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1300 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1308 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1312 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1320 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1324 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1332 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1336 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1344 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1348 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1356 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1360 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1368 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1372 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1380 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1384 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1392 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1396 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1404 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1408 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1416 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1420 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1426 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1436 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1445 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1454 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1460 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1118:DD,1119
1689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,1692:CD,1698:CD,1700:CD,1706:CD,1708:CD,1714:CD,1716:CD,1717:CD,1723:CD,1729
1692 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1698
1698 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
1700 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1706
1706 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
1708 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1714
1714 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
1716 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
1717 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,1719
1719 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1723 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,1725
1725 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1729 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,1731
1731 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,1781:CD,1800
1781 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
1782 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
1786 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
1790 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
1794 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
1800 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
1801 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
1805 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
1809 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
1813 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
1848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,1852:CD,1887:CD,1892:CD,1896:CD,1901:CD,1918
1852 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1887 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
1892 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
1896 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
1901 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
1918 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
1944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,1947:CD,1948:JM,36896:JM,36899:JM,36902:JM,36905:JM,36908:JM,36911:JM,36881:JM,36914:JM,36884:JM,36917:JM,36887:JM,36920:JM,36890:JM,36923:JM,36893:CD,1976:CD,1978:CD,1979:CD,2035:CD,2037:CD,2038:CD,2094:CD,2096:CD,2097:CD,2137:CD,2139:CD,2140:CD,2168:CD,2170:CD,2171:CD,2199:CD,2201:CD,2226:CD,2228:CD,2229:CD,2257:CD,2259:CD,2260:CD,2292:CD,2294:CD,2295:CD,2331:CD,2333:CD,2334:CD,2366:CD,2368:CD,2393:CD,2395:CD,2396:CD,2428:CD,2430:CD,2431:CD,2463:CD,2465:CD,2466:CD,2502:CD,2504:CD,2505:CD,2561:CD,2563:CD,2564:CD,2620:CD,2622:CD,2623:CD,2679:CD,2681:CD,2682:CD,2738:CD,2740:CD,2765:CD,2767:CD,2768:CD,2800:CD,2802:CD,2803:CD,2835:CD,2837:CD,2838:CD,2874:CD,2876:CD,2877:CD,2921:CD,2923:CD,2924:CD,2972:CD,2974:CD,2975:CD,3031:CD,3033:CD,3034:CD,3098:CD,3100:CD,3101:CD,3157:CD,3159:CD,3160:CD,3208:CD,3210:CD,3211:CD,3255:CD,3257:CD,3258:CD,3298:CD,3300:CD,3301:CD,3333:CD,3335:CD,3336:CD,3372:CD,3374:CD,3375:CD,3431:CD,3433:CD,3434:CD,3478:CD,3480:CD,3481:CD,3525:CD,3527:CD,3528:CD,3580:CD,3582:CD,3583:CD,3611:CD,3613:CD,3614:CD,3646:CD,3648:CD,3649:CD,3681:CD,3683:CD,3684:CD,3720:CD,3722:CD,3723:CD,3763:CD,3765:CD,3766:CD,3814:CD,3816:CD,3817:CD,3873:CD,3875:CD,3876:CD,3936:CD,3938:CD,3939:CD,3999:CD,4001:CD,4002:CD,4054:CD,4056:CD,4057:CD,4093:CD,4095:CD,4096:CD,4136:CD,4138:CD,4139:CD,4171:CD,4173:CD,4174:CD,4210:CD,4212:CD,4213:CD,4249:CD,4251:CD,4252:CD,4288:CD,4290:CD,4291:CD,4335:CD,4337:CD,4338:CD,4386:CD,4388:CD,4389:CD,4433:CD,4435:CD,4436:CD,4468:CD,4470:CD,4471:CD,4499:CD,4501:CD,4502:CD,4534:CD,4536:CD,4537:CD,4573:CD,4575:CD,4576:CD,4612:CD,4614:CD,4615:CD,4651:CD,4653:CD,4654:CD,4686:CD,4688:CD,4689:CD,4721:CD,4723:CD,4724:CD,4756:CD,4758:CD,4759:CD,4795:CD,4797:CD,4798:CD,4838:CD,4840:CD,4841:CD,4877:CD,4879:CD,4880:CD,4912:CD,4914:CD,4915:CD,4947:CD,4949:CD,4950:CD,4986:CD,4988:CD,4989:CD,5021:CD,5023:CD,5024:CD,5052:CD,5054:CD,5055:CD,5091:CD,5093:CD,5094:CD,5138:CD,5140:CD,5141:CD,5197:CD,5199:CD,5200:CD,5260:CD,5262:CD,5263:CD,5327:CD,5329:CD,5330:CD,5390:CD,5392:CD,5393:CD,5449:CD,5451:CD,5452:CD,5496:CD,5498:CD,5499:CD,5535:CD,5537:CD,5538:CD,5574:CD,5576:CD,5577:CD,5613:CD,5615:CD,5616:CD,5656:CD,5658:CD,5659:CD,5703:CD,5705:CD,5706:CD,5750:CD,5752:CD,5753:CD,5785:CD,5787:CD,5788:CD,5816:CD,5818:CD,5819:CD,5847:CD,5849:CD,5850:CD,5882:CD,5884:CD,5885:CD,5921:CD,5923:CD,5924:CD,5964:CD,5966:CD,5967:CD,6011:CD,6013:CD,6014:CD,6058:CD,6060:CD,6061:CD,6109:CD,6111:CD,6112:CD,6160:CD,6162:CD,6163:CD,6195:CD,6197:CD,6198:CD,6234:CD,6236:CD,6237:CD,6273:CD,6275:CD,6276:CD,6308:CD,6310:CD,6311:CD,6343:CD,6345:CD,6346:CD,6378:CD,6380:CD,6381:CD,6413:CD,6415:CD,6416:CD,6444:CD,6446:CD,6470:CD,6472:CD,6473:CD,6479:CD,6485:CD,6491:CD,6497:CD,6503:CD,6509:CD,6515:CD,6521:CD,6527:CD,6533:CD,6539:CD,6545:CD,6551:CD,6557:CD,6563:CD,6569:CD,6575:CD,6581:CD,6587:CD,6593:CD,6599:CD,6605:CD,6611:CD,6617:CD,6623:CD,6629:CD,6635:CD,6641:CD,6647:CD,6653:CD,6659:CD,6665:CD,6671:CD,6677:CD,6683:CD,6689:CD,6695:CD,6701:CD,6707:CD,6713:CD,6719:CD,6725:CD,6731:CD,6737:CD,6743:CD,6749:CD,6755:CD,6761:CD,6767:CD,6773:CD,6779:CD,6785:CD,6791:CD,6797:CD,6803:CD,6809:CD,6815:CD,6821:CD,6827:CD,6833:CD,6839:CD,6845:CD,6851:CD,6857:CD,6863:CD,6869:CD,6875:CD,6881:CD,6887:CD,6893:CD,6899:CD,6905:CD,6911:CD,6917:CD,6923:CD,6929:CD,6935:CD,6941:CD,6947:CD,6953:CD,6959:CD,6965:CD,6971:CD,6977:CD,6983:CD,6989:CD,6995:CD,7001:CD,7007:CD,7013:CD,7019:CD,7025:CD,7031:CD,7037:CD,7043:CD,7049:CD,7055:CD,7061:CD,7067:CD,7073:CD,7079:CD,7085:CD,7091:CD,7097:CD,7103:CD,7111:CD,7117:CD,7120:CD,7143:CD,7145
1947 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,1976:CF,1948
1948 :: NORM :: declaration :: [I :: v10 = new []::
1949 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
1976 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
1978 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,2035:CF,1979
1979 :: NORM :: declaration :: [I :: v24 = new []::
1980 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
1984 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
1988 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
1992 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
1996 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
2000 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
2004 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
2008 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
2035 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
2037 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,2094:CF,2038
2038 :: NORM :: declaration :: [I :: v41 = new []::
2039 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
2043 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
2047 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
2051 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
2055 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
2059 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
2063 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
2067 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
2094 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
2096 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,2137:CF,2097
2097 :: NORM :: declaration :: [I :: v51 = new []::
2098 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
2102 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
2106 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
2110 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
2137 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
2139 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,2168:CF,2140
2140 :: NORM :: declaration :: [I :: v58 = new []::
2141 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
2168 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
2170 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,2199:CF,2171
2171 :: NORM :: declaration :: [I :: v64 = new []::
2172 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
2199 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
2201 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,2226
2226 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
2228 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,2257:CF,2229
2229 :: NORM :: declaration :: [I :: v83 = new []::
2230 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
2257 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
2259 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,2292:CF,2260
2260 :: NORM :: declaration :: [I :: v92 = new []::
2261 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
2265 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
2292 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
2294 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,2331:CF,2295
2295 :: NORM :: declaration :: [I :: v101 = new []::
2296 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
2300 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
2304 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
2331 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
2333 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,2366:CF,2334
2334 :: NORM :: declaration :: [I :: v111 = new []::
2335 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
2339 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
2366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
2368 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,2393
2393 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
2395 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,2428:CF,2396
2396 :: NORM :: declaration :: [I :: v130 = new []::
2397 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
2401 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
2428 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
2430 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,2463:CF,2431
2431 :: NORM :: declaration :: [I :: v140 = new []::
2432 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
2436 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
2463 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
2465 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,2502:CF,2466
2466 :: NORM :: declaration :: [I :: v149 = new []::
2467 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
2471 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
2475 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
2502 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
2504 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,2561:CF,2505
2505 :: NORM :: declaration :: [I :: v159 = new []::
2506 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
2510 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
2514 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
2518 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
2522 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
2526 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
2530 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
2534 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
2561 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
2563 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,2620:CF,2564
2564 :: NORM :: declaration :: [I :: v170 = new []::
2565 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
2569 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
2573 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
2577 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
2581 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
2585 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
2589 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
2593 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
2620 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
2622 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,2679:CF,2623
2623 :: NORM :: declaration :: [I :: v181 = new []::
2624 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
2628 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
2632 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
2636 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
2640 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
2644 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
2648 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
2652 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
2679 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
2681 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,2738:CF,2682
2682 :: NORM :: declaration :: [I :: v192 = new []::
2683 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
2687 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
2691 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
2695 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
2699 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
2703 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
2707 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
2711 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
2738 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
2740 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,2765
2765 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
2767 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,2800:CF,2768
2768 :: NORM :: declaration :: [I :: v211 = new []::
2769 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
2773 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
2800 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
2802 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,2835:CF,2803
2803 :: NORM :: declaration :: [I :: v219 = new []::
2804 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
2808 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
2835 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
2837 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,2874:CF,2838
2838 :: NORM :: declaration :: [I :: v230 = new []::
2839 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
2843 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
2847 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
2874 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
2876 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,2921:CF,2877
2877 :: NORM :: declaration :: [I :: v239 = new []::
2878 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
2882 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
2886 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
2890 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
2894 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
2921 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
2923 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,2972:CF,2924
2924 :: NORM :: declaration :: [I :: v248 = new []::
2925 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
2929 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
2933 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
2937 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
2941 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
2945 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
2972 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
2974 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,3031:CF,2975
2975 :: NORM :: declaration :: [I :: v258 = new []::
2976 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
2980 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
2984 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
2988 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
2992 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
2996 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
3000 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
3004 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
3031 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
3033 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,3098:CF,3034
3034 :: NORM :: declaration :: [I :: v269 = new []::
3035 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
3039 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
3043 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
3047 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
3051 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
3055 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
3059 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
3063 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
3067 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
3071 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
3098 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
3100 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,3157:CF,3101
3101 :: NORM :: declaration :: [I :: v276 = new []::
3102 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
3106 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
3110 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
3114 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
3118 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
3122 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
3126 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
3130 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
3157 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
3159 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,3208:CF,3160
3160 :: NORM :: declaration :: [I :: v285 = new []::
3161 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
3165 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
3169 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
3173 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
3177 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
3181 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
3208 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
3210 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,3255:CF,3211
3211 :: NORM :: declaration :: [I :: v295 = new []::
3212 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
3216 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
3220 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
3224 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
3228 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
3255 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
3257 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,3298:CF,3258
3258 :: NORM :: declaration :: [I :: v305 = new []::
3259 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
3263 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
3267 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
3271 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
3298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
3300 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,3333:CF,3301
3301 :: NORM :: declaration :: [I :: v313 = new []::
3302 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
3306 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
3333 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
3335 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,3372:CF,3336
3336 :: NORM :: declaration :: [I :: v321 = new []::
3337 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
3341 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
3345 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
3372 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
3374 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,3431:CF,3375
3375 :: NORM :: declaration :: [I :: v329 = new []::
3376 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
3380 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
3384 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
3388 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
3392 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
3396 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
3400 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
3404 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
3431 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
3433 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,3478:CF,3434
3434 :: NORM :: declaration :: [I :: v338 = new []::
3435 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
3439 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
3443 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
3447 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
3451 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
3478 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
3480 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,3525:CF,3481
3481 :: NORM :: declaration :: [I :: v348 = new []::
3482 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
3486 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
3490 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
3494 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
3498 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
3525 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
3527 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,3580:CF,3528
3528 :: NORM :: declaration :: [I :: v355 = new []::
3529 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
3533 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
3537 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
3541 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
3545 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
3549 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
3553 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
3580 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
3582 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,3611:CF,3583
3583 :: NORM :: declaration :: [I :: v364 = new []::
3584 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
3611 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
3613 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,3646:CF,3614
3614 :: NORM :: declaration :: [I :: v374 = new []::
3615 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
3619 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
3646 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
3648 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,3681:CF,3649
3649 :: NORM :: declaration :: [I :: v382 = new []::
3650 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
3654 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
3681 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
3683 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,3720:CF,3684
3684 :: NORM :: declaration :: [I :: v391 = new []::
3685 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
3689 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
3693 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
3720 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
3722 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,3763:CF,3723
3723 :: NORM :: declaration :: [I :: v401 = new []::
3724 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
3728 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
3732 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
3736 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
3763 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
3765 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,3814:CF,3766
3766 :: NORM :: declaration :: [I :: v411 = new []::
3767 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
3771 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
3775 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
3779 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
3783 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
3787 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
3814 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
3816 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,3873:CF,3817
3817 :: NORM :: declaration :: [I :: v420 = new []::
3818 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
3822 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
3826 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
3830 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
3834 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
3838 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
3842 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
3846 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
3873 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
3875 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,3936:CF,3876
3876 :: NORM :: declaration :: [I :: v431 = new []::
3877 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
3881 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
3885 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
3889 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
3893 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
3897 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
3901 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
3905 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
3909 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
3936 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
3938 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,3999:CF,3939
3939 :: NORM :: declaration :: [I :: v440 = new []::
3940 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
3944 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
3948 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
3952 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
3956 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
3960 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
3964 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
3968 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
3972 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
3999 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
4001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,4054:CF,4002
4002 :: NORM :: declaration :: [I :: v448 = new []::
4003 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
4007 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
4011 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
4015 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
4019 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
4023 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
4027 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
4054 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
4056 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,4093:CF,4057
4057 :: NORM :: declaration :: [I :: v456 = new []::
4058 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
4062 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
4066 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
4093 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
4095 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,4136:CF,4096
4096 :: NORM :: declaration :: [I :: v463 = new []::
4097 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
4101 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
4105 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
4109 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
4136 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
4138 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,4171:CF,4139
4139 :: NORM :: declaration :: [I :: v471 = new []::
4140 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
4144 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
4171 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
4173 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,4210:CF,4174
4174 :: NORM :: declaration :: [I :: v479 = new []::
4175 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
4179 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
4183 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
4210 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
4212 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,4249:CF,4213
4213 :: NORM :: declaration :: [I :: v490 = new []::
4214 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
4218 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
4222 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
4249 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
4251 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,4288:CF,4252
4252 :: NORM :: declaration :: [I :: v498 = new []::
4253 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
4257 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
4261 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
4288 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
4290 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,4335:CF,4291
4291 :: NORM :: declaration :: [I :: v507 = new []::
4292 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
4296 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
4300 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
4304 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
4308 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
4335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
4337 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,4386:CF,4338
4338 :: NORM :: declaration :: [I :: v515 = new []::
4339 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
4343 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
4347 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
4351 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
4355 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
4359 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
4386 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
4388 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,4433:CF,4389
4389 :: NORM :: declaration :: [I :: v524 = new []::
4390 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
4394 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
4398 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
4402 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
4406 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
4433 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
4435 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,4468:CF,4436
4436 :: NORM :: declaration :: [I :: v533 = new []::
4437 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
4441 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
4468 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
4470 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,4499:CF,4471
4471 :: NORM :: declaration :: [I :: v542 = new []::
4472 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
4499 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
4501 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,4534:CF,4502
4502 :: NORM :: declaration :: [I :: v549 = new []::
4503 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
4507 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
4534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
4536 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,4573:CF,4537
4537 :: NORM :: declaration :: [I :: v557 = new []::
4538 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
4542 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
4546 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
4573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
4575 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,4612:CF,4576
4576 :: NORM :: declaration :: [I :: v565 = new []::
4577 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
4581 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
4585 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
4612 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
4614 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,4651:CF,4615
4615 :: NORM :: declaration :: [I :: v572 = new []::
4616 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
4620 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
4624 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
4651 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
4653 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,4686:CF,4654
4654 :: NORM :: declaration :: [I :: v580 = new []::
4655 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
4659 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
4686 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
4688 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,4721:CF,4689
4689 :: NORM :: declaration :: [I :: v589 = new []::
4690 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
4694 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
4721 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
4723 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,4756:CF,4724
4724 :: NORM :: declaration :: [I :: v598 = new []::
4725 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
4729 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
4756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
4758 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,4795:CF,4759
4759 :: NORM :: declaration :: [I :: v605 = new []::
4760 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
4764 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
4768 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
4795 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
4797 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,4838:CF,4798
4798 :: NORM :: declaration :: [I :: v614 = new []::
4799 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
4803 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
4807 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
4811 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
4838 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
4840 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,4877:CF,4841
4841 :: NORM :: declaration :: [I :: v621 = new []::
4842 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
4846 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
4850 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
4877 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
4879 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,4912:CF,4880
4880 :: NORM :: declaration :: [I :: v628 = new []::
4881 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
4885 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
4912 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
4914 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,4947:CF,4915
4915 :: NORM :: declaration :: [I :: v638 = new []::
4916 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
4920 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
4947 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
4949 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,4986:CF,4950
4950 :: NORM :: declaration :: [I :: v646 = new []::
4951 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
4955 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
4959 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
4986 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
4988 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,5021:CF,4989
4989 :: NORM :: declaration :: [I :: v654 = new []::
4990 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
4994 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
5021 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
5023 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,5052:CF,5024
5024 :: NORM :: declaration :: [I :: v662 = new []::
5025 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
5052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
5054 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,5091:CF,5055
5055 :: NORM :: declaration :: [I :: v669 = new []::
5056 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
5060 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
5064 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
5091 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
5093 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,5138:CF,5094
5094 :: NORM :: declaration :: [I :: v677 = new []::
5095 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
5099 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
5103 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
5107 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
5111 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
5138 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
5140 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,5197:CF,5141
5141 :: NORM :: declaration :: [I :: v685 = new []::
5142 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
5146 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
5150 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
5154 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
5158 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
5162 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
5166 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
5170 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
5197 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
5199 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,5260:CF,5200
5200 :: NORM :: declaration :: [I :: v694 = new []::
5201 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
5205 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
5209 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
5213 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
5217 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
5221 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
5225 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
5229 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
5233 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
5260 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
5262 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,5327:CF,5263
5263 :: NORM :: declaration :: [I :: v701 = new []::
5264 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
5268 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
5272 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
5276 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
5280 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
5284 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
5288 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
5292 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
5296 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
5300 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
5327 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
5329 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,5390:CF,5330
5330 :: NORM :: declaration :: [I :: v707 = new []::
5331 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
5335 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
5339 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
5343 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
5347 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
5351 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
5355 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
5359 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
5363 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
5390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
5392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,5449:CF,5393
5393 :: NORM :: declaration :: [I :: v713 = new []::
5394 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
5398 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
5402 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
5406 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
5410 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
5414 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
5418 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
5422 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
5449 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
5451 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,5496:CF,5452
5452 :: NORM :: declaration :: [I :: v720 = new []::
5453 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
5457 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
5461 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
5465 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
5469 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
5496 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
5498 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,5535:CF,5499
5499 :: NORM :: declaration :: [I :: v727 = new []::
5500 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
5504 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
5508 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
5535 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
5537 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,5574:CF,5538
5538 :: NORM :: declaration :: [I :: v735 = new []::
5539 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
5543 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
5547 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
5574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
5576 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,5613:CF,5577
5577 :: NORM :: declaration :: [I :: v742 = new []::
5578 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
5582 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
5586 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
5613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
5615 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,5656:CF,5616
5616 :: NORM :: declaration :: [I :: v750 = new []::
5617 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
5621 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
5625 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
5629 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
5656 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
5658 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,5703:CF,5659
5659 :: NORM :: declaration :: [I :: v757 = new []::
5660 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
5664 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
5668 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
5672 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
5676 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
5703 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
5705 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,5750:CF,5706
5706 :: NORM :: declaration :: [I :: v764 = new []::
5707 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
5711 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
5715 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
5719 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
5723 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
5750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
5752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,5785:CF,5753
5753 :: NORM :: declaration :: [I :: v771 = new []::
5754 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
5758 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
5785 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
5787 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,5816:CF,5788
5788 :: NORM :: declaration :: [I :: v778 = new []::
5789 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
5816 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
5818 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,5847:CF,5819
5819 :: NORM :: declaration :: [I :: v787 = new []::
5820 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
5847 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
5849 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,5882:CF,5850
5850 :: NORM :: declaration :: [I :: v794 = new []::
5851 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
5855 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
5882 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
5884 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,5921:CF,5885
5885 :: NORM :: declaration :: [I :: v802 = new []::
5886 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
5890 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
5894 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
5921 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
5923 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,5964:CF,5924
5924 :: NORM :: declaration :: [I :: v808 = new []::
5925 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
5929 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
5933 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
5937 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
5964 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
5966 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,6011:CF,5967
5967 :: NORM :: declaration :: [I :: v816 = new []::
5968 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
5972 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
5976 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
5980 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
5984 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
6011 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
6013 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,6058:CF,6014
6014 :: NORM :: declaration :: [I :: v823 = new []::
6015 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
6019 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
6023 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
6027 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
6031 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
6058 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
6060 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,6109:CF,6061
6061 :: NORM :: declaration :: [I :: v829 = new []::
6062 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
6066 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
6070 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
6074 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
6078 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
6082 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
6109 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
6111 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,6160:CF,6112
6112 :: NORM :: declaration :: [I :: v835 = new []::
6113 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
6117 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
6121 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
6125 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
6129 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
6133 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
6160 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
6162 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,6195:CF,6163
6163 :: NORM :: declaration :: [I :: v841 = new []::
6164 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
6168 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
6195 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
6197 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,6234:CF,6198
6198 :: NORM :: declaration :: [I :: v848 = new []::
6199 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
6203 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
6207 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
6234 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
6236 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,6273:CF,6237
6237 :: NORM :: declaration :: [I :: v854 = new []::
6238 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
6242 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
6246 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
6273 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
6275 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,6308:CF,6276
6276 :: NORM :: declaration :: [I :: v860 = new []::
6277 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
6281 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
6308 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
6310 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,6343:CF,6311
6311 :: NORM :: declaration :: [I :: v866 = new []::
6312 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
6316 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
6343 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
6345 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,6378:CF,6346
6346 :: NORM :: declaration :: [I :: v872 = new []::
6347 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
6351 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
6378 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
6380 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,6413:CF,6381
6381 :: NORM :: declaration :: [I :: v877 = new []::
6382 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
6386 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
6413 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
6415 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,6444:CF,6416
6416 :: NORM :: declaration :: [I :: v883 = new []::
6417 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
6444 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
6446 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,6470
6470 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
6472 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
6473 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,6475
6475 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
6479 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,6481
6481 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
6485 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,6487
6487 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
6491 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,6493
6493 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
6497 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,6499
6499 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
6503 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,6505
6505 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
6509 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,6511
6511 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
6515 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,6517
6517 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
6521 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,6523
6523 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
6527 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,6529
6529 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
6533 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,6535
6535 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
6539 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,6541
6541 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
6545 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,6547
6547 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
6551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,6553
6553 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
6557 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,6559
6559 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
6563 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,6565
6565 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
6569 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,6571
6571 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
6575 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,6577
6577 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
6581 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,6583
6583 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
6587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,6589
6589 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
6593 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,6595
6595 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
6599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,6601
6601 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
6605 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,6607
6607 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
6611 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,6613
6613 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
6617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,6619
6619 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
6623 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,6625
6625 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
6629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,6631
6631 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
6635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,6637
6637 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
6641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,6643
6643 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
6647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,6649
6649 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
6653 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,6655
6655 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
6659 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,6661
6661 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
6665 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,6667
6667 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
6671 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,6673
6673 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
6677 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,6679
6679 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
6683 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,6685
6685 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
6689 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,6691
6691 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
6695 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,6697
6697 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
6701 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,6703
6703 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
6707 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,6709
6709 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
6713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,6715
6715 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
6719 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,6721
6721 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
6725 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,6727
6727 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
6731 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,6733
6733 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
6737 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,6739
6739 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
6743 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,6745
6745 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
6749 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,6751
6751 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
6755 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,6757
6757 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
6761 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,6763
6763 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
6767 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,6769
6769 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
6773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,6775
6775 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
6779 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,6781
6781 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
6785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,6787
6787 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
6791 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,6793
6793 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
6797 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,6799
6799 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
6803 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,6805
6805 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
6809 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,6811
6811 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
6815 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,6817
6817 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
6821 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,6823
6823 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
6827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,6829
6829 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
6833 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,6835
6835 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
6839 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,6841
6841 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
6845 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,6847
6847 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
6851 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,6853
6853 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
6857 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,6859
6859 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
6863 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,6865
6865 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
6869 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,6871
6871 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
6875 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,6877
6877 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
6881 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,6883
6883 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
6887 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,6889
6889 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
6893 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,6895
6895 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
6899 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,6901
6901 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
6905 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,6907
6907 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
6911 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,6913
6913 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
6917 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,6919
6919 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
6923 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,6925
6925 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
6929 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,6931
6931 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
6935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,6937
6937 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
6941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,6943
6943 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
6947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,6949
6949 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
6953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,6955
6955 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
6959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,6961
6961 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
6965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,6967
6967 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
6971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,6973
6973 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
6977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,6979
6979 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
6983 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,6985
6985 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
6989 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,6991
6991 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
6995 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,6997
6997 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
7001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,7003
7003 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
7007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,7009
7009 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
7013 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,7015
7015 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
7019 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,7021
7021 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
7025 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,7027
7027 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
7031 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,7033
7033 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
7037 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,7039
7039 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
7043 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,7045
7045 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
7049 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,7051
7051 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
7055 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,7057
7057 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
7061 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,7063
7063 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
7067 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,7069
7069 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
7073 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,7075
7075 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
7079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,7081
7081 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
7085 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,7087
7087 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
7091 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,7093
7093 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
7097 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,7099
7099 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
7103 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,7105
7105 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
7111 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
7117 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,7120:CL,36960
7120 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,7143
7136 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
7142 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,7145
7143 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,7136:CD,7142:CD,7145
7145 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,7142:DD,7143
10757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.ScoringStrategy.<clinit>()::CD,10760:JM,36999:CD,10767:CD,10769:CD,10776:CD,10778:CD,10785:CD,10787:CD,10794:CD,10796:CD,10803:CD,10805:CD,10806:CD,10812:CD,10818:CD,10824:CD,10830
10760 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v2 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,10767
10767 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING = v2::
10769 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,10776
10776 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING = v7::
10778 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v12 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,10785
10785 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING = v12::
10787 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v17 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,10794
10794 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING = v17::
10796 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v22 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,10803
10803 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION = v22::
10805 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy[]::
10806 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::DD,10808
10808 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(0)] = v29::
10812 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v30 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::DD,10814
10814 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(1)] = v30::
10818 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v31 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::DD,10820
10820 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(2)] = v31::
10824 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::DD,10826
10826 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(3)] = v32::
10830 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::DD,10832
10832 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(4)] = v33::
10886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.<clinit>()::CD,10890:CD,10898:CD,10981:CD,11064:CD,11147:CD,11230:CD,11313:CD,11396:CD,11479:CD,11562:CD,12165
10890 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
10898 :: NORM :: declaration :: [D :: v9 = new []::
10899 :: EXPR :: modify :: D :: v9[#(0)] = #(2.54 d)::
10903 :: EXPR :: modify :: D :: v9[#(1)] = #(2.51 d)::
10907 :: EXPR :: modify :: D :: v9[#(2)] = #(2.72 d)::
10911 :: EXPR :: modify :: D :: v9[#(3)] = #(3.01 d)::
10915 :: EXPR :: modify :: D :: v9[#(4)] = #(3.31 d)::
10919 :: EXPR :: modify :: D :: v9[#(5)] = #(3.61 d)::
10923 :: EXPR :: modify :: D :: v9[#(6)] = #(3.9 d)::
10927 :: EXPR :: modify :: D :: v9[#(7)] = #(4.19 d)::
10931 :: EXPR :: modify :: D :: v9[#(8)] = #(4.47 d)::
10935 :: EXPR :: modify :: D :: v9[#(9)] = #(4.74 d)::
10939 :: EXPR :: modify :: D :: v9[#(10)] = #(4.99 d)::
10943 :: EXPR :: modify :: D :: v9[#(11)] = #(5.22 d)::
10947 :: EXPR :: modify :: D :: v9[#(12)] = #(5.46 d)::
10951 :: EXPR :: modify :: D :: v9[#(13)] = #(5.7 d)::
10955 :: EXPR :: modify :: D :: v9[#(14)] = #(5.94 d)::
10959 :: EXPR :: modify :: D :: v9[#(15)] = #(6.13 d)::
10963 :: EXPR :: modify :: D :: v9[#(16)] = #(6.36 d)::
10967 :: EXPR :: modify :: D :: v9[#(17)] = #(6.52 d)::
10971 :: EXPR :: modify :: D :: v9[#(18)] = #(6.68 d)::
10975 :: EXPR :: modify :: D :: v9[#(19)] = #(6.91 d)::
10981 :: NORM :: declaration :: [D :: v48 = new []::
10982 :: EXPR :: modify :: D :: v48[#(0)] = #(1.33 d)::
10986 :: EXPR :: modify :: D :: v48[#(1)] = #(0.88 d)::
10990 :: EXPR :: modify :: D :: v48[#(2)] = #(0.73 d)::
10994 :: EXPR :: modify :: D :: v48[#(3)] = #(0.71 d)::
10998 :: EXPR :: modify :: D :: v48[#(4)] = #(0.74 d)::
11002 :: EXPR :: modify :: D :: v48[#(5)] = #(0.8 d)::
11006 :: EXPR :: modify :: D :: v48[#(6)] = #(0.86 d)::
11010 :: EXPR :: modify :: D :: v48[#(7)] = #(0.92 d)::
11014 :: EXPR :: modify :: D :: v48[#(8)] = #(0.98 d)::
11018 :: EXPR :: modify :: D :: v48[#(9)] = #(1.04 d)::
11022 :: EXPR :: modify :: D :: v48[#(10)] = #(1.08 d)::
11026 :: EXPR :: modify :: D :: v48[#(11)] = #(1.1 d)::
11030 :: EXPR :: modify :: D :: v48[#(12)] = #(1.15 d)::
11034 :: EXPR :: modify :: D :: v48[#(13)] = #(1.19 d)::
11038 :: EXPR :: modify :: D :: v48[#(14)] = #(1.23 d)::
11042 :: EXPR :: modify :: D :: v48[#(15)] = #(1.25 d)::
11046 :: EXPR :: modify :: D :: v48[#(16)] = #(1.32 d)::
11050 :: EXPR :: modify :: D :: v48[#(17)] = #(1.34 d)::
11054 :: EXPR :: modify :: D :: v48[#(18)] = #(1.36 d)::
11058 :: EXPR :: modify :: D :: v48[#(19)] = #(1.45 d)::
11064 :: NORM :: declaration :: [D :: v69 = new []::
11065 :: EXPR :: modify :: D :: v69[#(0)] = #(0.0 d)::
11069 :: EXPR :: modify :: D :: v69[#(1)] = #(11.5 d)::
11073 :: EXPR :: modify :: D :: v69[#(2)] = #(23.32 d)::
11077 :: EXPR :: modify :: D :: v69[#(3)] = #(35.95 d)::
11081 :: EXPR :: modify :: D :: v69[#(4)] = #(49.02 d)::
11085 :: EXPR :: modify :: D :: v69[#(5)] = #(62.44 d)::
11089 :: EXPR :: modify :: D :: v69[#(6)] = #(76.28 d)::
11093 :: EXPR :: modify :: D :: v69[#(7)] = #(90.26 d)::
11097 :: EXPR :: modify :: D :: v69[#(8)] = #(104.86 d)::
11101 :: EXPR :: modify :: D :: v69[#(9)] = #(119.97 d)::
11105 :: EXPR :: modify :: D :: v69[#(10)] = #(134.86 d)::
11109 :: EXPR :: modify :: D :: v69[#(11)] = #(150.54 d)::
11113 :: EXPR :: modify :: D :: v69[#(12)] = #(164.86 d)::
11117 :: EXPR :: modify :: D :: v69[#(13)] = #(179.57 d)::
11121 :: EXPR :: modify :: D :: v69[#(14)] = #(194.39 d)::
11125 :: EXPR :: modify :: D :: v69[#(15)] = #(209.38 d)::
11129 :: EXPR :: modify :: D :: v69[#(16)] = #(224.74 d)::
11133 :: EXPR :: modify :: D :: v69[#(17)] = #(238.96 d)::
11137 :: EXPR :: modify :: D :: v69[#(18)] = #(253.72 d)::
11141 :: EXPR :: modify :: D :: v69[#(19)] = #(270.79 d)::
11147 :: NORM :: declaration :: [D :: v90 = new []::
11148 :: EXPR :: modify :: D :: v90[#(0)] = #(0.0 d)::
11152 :: EXPR :: modify :: D :: v90[#(1)] = #(9.88 d)::
11156 :: EXPR :: modify :: D :: v90[#(2)] = #(14.34 d)::
11160 :: EXPR :: modify :: D :: v90[#(3)] = #(17.99 d)::
11164 :: EXPR :: modify :: D :: v90[#(4)] = #(21.1 d)::
11168 :: EXPR :: modify :: D :: v90[#(5)] = #(23.89 d)::
11172 :: EXPR :: modify :: D :: v90[#(6)] = #(26.55 d)::
11176 :: EXPR :: modify :: D :: v90[#(7)] = #(29.0 d)::
11180 :: EXPR :: modify :: D :: v90[#(8)] = #(31.11 d)::
11184 :: EXPR :: modify :: D :: v90[#(9)] = #(33.1 d)::
11188 :: EXPR :: modify :: D :: v90[#(10)] = #(35.02 d)::
11192 :: EXPR :: modify :: D :: v90[#(11)] = #(36.03 d)::
11196 :: EXPR :: modify :: D :: v90[#(12)] = #(37.19 d)::
11200 :: EXPR :: modify :: D :: v90[#(13)] = #(38.82 d)::
11204 :: EXPR :: modify :: D :: v90[#(14)] = #(41.04 d)::
11208 :: EXPR :: modify :: D :: v90[#(15)] = #(43.35 d)::
11212 :: EXPR :: modify :: D :: v90[#(16)] = #(45.45 d)::
11216 :: EXPR :: modify :: D :: v90[#(17)] = #(48.41 d)::
11220 :: EXPR :: modify :: D :: v90[#(18)] = #(50.87 d)::
11224 :: EXPR :: modify :: D :: v90[#(19)] = #(52.27 d)::
11230 :: NORM :: declaration :: [D :: v110 = new []::
11231 :: EXPR :: modify :: D :: v110[#(0)] = #(1.98 d)::
11235 :: EXPR :: modify :: D :: v110[#(1)] = #(1.97 d)::
11239 :: EXPR :: modify :: D :: v110[#(2)] = #(2.22 d)::
11243 :: EXPR :: modify :: D :: v110[#(3)] = #(2.54 d)::
11247 :: EXPR :: modify :: D :: v110[#(4)] = #(2.87 d)::
11251 :: EXPR :: modify :: D :: v110[#(5)] = #(3.18 d)::
11255 :: EXPR :: modify :: D :: v110[#(6)] = #(3.48 d)::
11259 :: EXPR :: modify :: D :: v110[#(7)] = #(3.77 d)::
11263 :: EXPR :: modify :: D :: v110[#(8)] = #(4.05 d)::
11267 :: EXPR :: modify :: D :: v110[#(9)] = #(4.31 d)::
11271 :: EXPR :: modify :: D :: v110[#(10)] = #(4.57 d)::
11275 :: EXPR :: modify :: D :: v110[#(11)] = #(4.82 d)::
11279 :: EXPR :: modify :: D :: v110[#(12)] = #(5.03 d)::
11283 :: EXPR :: modify :: D :: v110[#(13)] = #(5.24 d)::
11287 :: EXPR :: modify :: D :: v110[#(14)] = #(5.43 d)::
11291 :: EXPR :: modify :: D :: v110[#(15)] = #(5.64 d)::
11295 :: EXPR :: modify :: D :: v110[#(16)] = #(5.82 d)::
11299 :: EXPR :: modify :: D :: v110[#(17)] = #(6.02 d)::
11303 :: EXPR :: modify :: D :: v110[#(18)] = #(6.21 d)::
11307 :: EXPR :: modify :: D :: v110[#(19)] = #(6.42 d)::
11313 :: NORM :: declaration :: [D :: v130 = new []::
11314 :: EXPR :: modify :: D :: v130[#(0)] = #(1.15 d)::
11318 :: EXPR :: modify :: D :: v130[#(1)] = #(0.73 d)::
11322 :: EXPR :: modify :: D :: v130[#(2)] = #(0.63 d)::
11326 :: EXPR :: modify :: D :: v130[#(3)] = #(0.64 d)::
11330 :: EXPR :: modify :: D :: v130[#(4)] = #(0.71 d)::
11334 :: EXPR :: modify :: D :: v130[#(5)] = #(0.8 d)::
11338 :: EXPR :: modify :: D :: v130[#(6)] = #(0.87 d)::
11342 :: EXPR :: modify :: D :: v130[#(7)] = #(0.95 d)::
11346 :: EXPR :: modify :: D :: v130[#(8)] = #(1.01 d)::
11350 :: EXPR :: modify :: D :: v130[#(9)] = #(1.07 d)::
11354 :: EXPR :: modify :: D :: v130[#(10)] = #(1.13 d)::
11358 :: EXPR :: modify :: D :: v130[#(11)] = #(1.19 d)::
11362 :: EXPR :: modify :: D :: v130[#(12)] = #(1.22 d)::
11366 :: EXPR :: modify :: D :: v130[#(13)] = #(1.25 d)::
11370 :: EXPR :: modify :: D :: v130[#(14)] = #(1.28 d)::
11374 :: EXPR :: modify :: D :: v130[#(15)] = #(1.32 d)::
11378 :: EXPR :: modify :: D :: v130[#(16)] = #(1.35 d)::
11382 :: EXPR :: modify :: D :: v130[#(17)] = #(1.39 d)::
11386 :: EXPR :: modify :: D :: v130[#(18)] = #(1.45 d)::
11390 :: EXPR :: modify :: D :: v130[#(19)] = #(1.5 d)::
11396 :: NORM :: declaration :: [D :: v143 = new []::
11397 :: EXPR :: modify :: D :: v143[#(0)] = #(0.0 d)::
11401 :: EXPR :: modify :: D :: v143[#(1)] = #(10.12 d)::
11405 :: EXPR :: modify :: D :: v143[#(2)] = #(20.25 d)::
11409 :: EXPR :: modify :: D :: v143[#(3)] = #(31.29 d)::
11413 :: EXPR :: modify :: D :: v143[#(4)] = #(42.95 d)::
11417 :: EXPR :: modify :: D :: v143[#(5)] = #(55.2 d)::
11421 :: EXPR :: modify :: D :: v143[#(6)] = #(67.53 d)::
11425 :: EXPR :: modify :: D :: v143[#(7)] = #(80.15 d)::
11429 :: EXPR :: modify :: D :: v143[#(8)] = #(93.3 d)::
11433 :: EXPR :: modify :: D :: v143[#(9)] = #(106.47 d)::
11437 :: EXPR :: modify :: D :: v143[#(10)] = #(120.52 d)::
11441 :: EXPR :: modify :: D :: v143[#(11)] = #(134.38 d)::
11445 :: EXPR :: modify :: D :: v143[#(12)] = #(148.59 d)::
11449 :: EXPR :: modify :: D :: v143[#(13)] = #(162.58 d)::
11453 :: EXPR :: modify :: D :: v143[#(14)] = #(176.64 d)::
11457 :: EXPR :: modify :: D :: v143[#(15)] = #(191.23 d)::
11461 :: EXPR :: modify :: D :: v143[#(16)] = #(204.12 d)::
11465 :: EXPR :: modify :: D :: v143[#(17)] = #(218.64 d)::
11469 :: EXPR :: modify :: D :: v143[#(18)] = #(231.82 d)::
11473 :: EXPR :: modify :: D :: v143[#(19)] = #(243.43 d)::
11479 :: NORM :: declaration :: [D :: v163 = new []::
11480 :: EXPR :: modify :: D :: v163[#(0)] = #(0.0 d)::
11484 :: EXPR :: modify :: D :: v163[#(1)] = #(9.8 d)::
11488 :: EXPR :: modify :: D :: v163[#(2)] = #(14.44 d)::
11492 :: EXPR :: modify :: D :: v163[#(3)] = #(18.14 d)::
11496 :: EXPR :: modify :: D :: v163[#(4)] = #(21.35 d)::
11500 :: EXPR :: modify :: D :: v163[#(5)] = #(24.37 d)::
11504 :: EXPR :: modify :: D :: v163[#(6)] = #(27.0 d)::
11508 :: EXPR :: modify :: D :: v163[#(7)] = #(29.68 d)::
11512 :: EXPR :: modify :: D :: v163[#(8)] = #(32.22 d)::
11516 :: EXPR :: modify :: D :: v163[#(9)] = #(34.37 d)::
11520 :: EXPR :: modify :: D :: v163[#(10)] = #(36.65 d)::
11524 :: EXPR :: modify :: D :: v163[#(11)] = #(38.63 d)::
11528 :: EXPR :: modify :: D :: v163[#(12)] = #(40.31 d)::
11532 :: EXPR :: modify :: D :: v163[#(13)] = #(42.16 d)::
11536 :: EXPR :: modify :: D :: v163[#(14)] = #(43.78 d)::
11540 :: EXPR :: modify :: D :: v163[#(15)] = #(44.98 d)::
11544 :: EXPR :: modify :: D :: v163[#(16)] = #(47.08 d)::
11548 :: EXPR :: modify :: D :: v163[#(17)] = #(49.09 d)::
11552 :: EXPR :: modify :: D :: v163[#(18)] = #(50.78 d)::
11556 :: EXPR :: modify :: D :: v163[#(19)] = #(52.15 d)::
11562 :: NORM :: declaration :: [D :: v184 = new []::
11563 :: EXPR :: modify :: D :: v184[#(0)] = #(1.0 d)::
11567 :: EXPR :: modify :: D :: v184[#(1)] = #(0.92 d)::
11571 :: EXPR :: modify :: D :: v184[#(2)] = #(0.841 d)::
11575 :: EXPR :: modify :: D :: v184[#(3)] = #(0.764 d)::
11579 :: EXPR :: modify :: D :: v184[#(4)] = #(0.689 d)::
11583 :: EXPR :: modify :: D :: v184[#(5)] = #(0.617 d)::
11587 :: EXPR :: modify :: D :: v184[#(6)] = #(0.549 d)::
11591 :: EXPR :: modify :: D :: v184[#(7)] = #(0.484 d)::
11595 :: EXPR :: modify :: D :: v184[#(8)] = #(0.424 d)::
11599 :: EXPR :: modify :: D :: v184[#(9)] = #(0.368 d)::
11603 :: EXPR :: modify :: D :: v184[#(10)] = #(0.317 d)::
11607 :: EXPR :: modify :: D :: v184[#(11)] = #(0.271 d)::
11611 :: EXPR :: modify :: D :: v184[#(12)] = #(0.23 d)::
11615 :: EXPR :: modify :: D :: v184[#(13)] = #(0.194 d)::
11619 :: EXPR :: modify :: D :: v184[#(14)] = #(0.162 d)::
11623 :: EXPR :: modify :: D :: v184[#(15)] = #(0.134 d)::
11627 :: EXPR :: modify :: D :: v184[#(16)] = #(0.11 d)::
11631 :: EXPR :: modify :: D :: v184[#(17)] = #(0.0891 d)::
11635 :: EXPR :: modify :: D :: v184[#(18)] = #(0.0719 d)::
11639 :: EXPR :: modify :: D :: v184[#(19)] = #(0.0574 d)::
11643 :: EXPR :: modify :: D :: v184[#(20)] = #(0.0455 d)::
11647 :: EXPR :: modify :: D :: v184[#(21)] = #(0.0357 d)::
11651 :: EXPR :: modify :: D :: v184[#(22)] = #(0.0278 d)::
11655 :: EXPR :: modify :: D :: v184[#(23)] = #(0.0214 d)::
11659 :: EXPR :: modify :: D :: v184[#(24)] = #(0.0164 d)::
11663 :: EXPR :: modify :: D :: v184[#(25)] = #(0.0124 d)::
11667 :: EXPR :: modify :: D :: v184[#(26)] = #(0.00932 d)::
11671 :: EXPR :: modify :: D :: v184[#(27)] = #(0.00693 d)::
11675 :: EXPR :: modify :: D :: v184[#(28)] = #(0.00511 d)::
11679 :: EXPR :: modify :: D :: v184[#(29)] = #(0.00373 d)::
11683 :: EXPR :: modify :: D :: v184[#(30)] = #(0.0027 d)::
11687 :: EXPR :: modify :: D :: v184[#(31)] = #(0.00194 d)::
11691 :: EXPR :: modify :: D :: v184[#(32)] = #(0.00137 d)::
11695 :: EXPR :: modify :: D :: v184[#(33)] = #(9.67E-4 d)::
11699 :: EXPR :: modify :: D :: v184[#(34)] = #(6.74E-4 d)::
11703 :: EXPR :: modify :: D :: v184[#(35)] = #(4.65E-4 d)::
11707 :: EXPR :: modify :: D :: v184[#(36)] = #(3.18E-4 d)::
11711 :: EXPR :: modify :: D :: v184[#(37)] = #(2.16E-4 d)::
11715 :: EXPR :: modify :: D :: v184[#(38)] = #(1.45E-4 d)::
11719 :: EXPR :: modify :: D :: v184[#(39)] = #(9.62E-5 d)::
11723 :: EXPR :: modify :: D :: v184[#(40)] = #(6.33E-5 d)::
11727 :: EXPR :: modify :: D :: v184[#(41)] = #(4.13E-5 d)::
11731 :: EXPR :: modify :: D :: v184[#(42)] = #(2.67E-5 d)::
11735 :: EXPR :: modify :: D :: v184[#(43)] = #(1.71E-5 d)::
11739 :: EXPR :: modify :: D :: v184[#(44)] = #(1.08E-5 d)::
11743 :: EXPR :: modify :: D :: v184[#(45)] = #(6.8E-6 d)::
11747 :: EXPR :: modify :: D :: v184[#(46)] = #(4.22E-6 d)::
11751 :: EXPR :: modify :: D :: v184[#(47)] = #(2.6E-6 d)::
11755 :: EXPR :: modify :: D :: v184[#(48)] = #(1.59E-6 d)::
11759 :: EXPR :: modify :: D :: v184[#(49)] = #(9.58E-7 d)::
11763 :: EXPR :: modify :: D :: v184[#(50)] = #(5.73E-7 d)::
11767 :: EXPR :: modify :: D :: v184[#(51)] = #(3.4E-7 d)::
11771 :: EXPR :: modify :: D :: v184[#(52)] = #(1.99E-7 d)::
11775 :: EXPR :: modify :: D :: v184[#(53)] = #(1.16E-7 d)::
11779 :: EXPR :: modify :: D :: v184[#(54)] = #(6.66E-8 d)::
11783 :: EXPR :: modify :: D :: v184[#(55)] = #(3.8E-8 d)::
11787 :: EXPR :: modify :: D :: v184[#(56)] = #(2.14E-8 d)::
11791 :: EXPR :: modify :: D :: v184[#(57)] = #(1.2E-8 d)::
11795 :: EXPR :: modify :: D :: v184[#(58)] = #(6.63E-9 d)::
11799 :: EXPR :: modify :: D :: v184[#(59)] = #(3.64E-9 d)::
11803 :: EXPR :: modify :: D :: v184[#(60)] = #(1.97E-9 d)::
11807 :: EXPR :: modify :: D :: v184[#(61)] = #(1.06E-9 d)::
11811 :: EXPR :: modify :: D :: v184[#(62)] = #(5.65E-10 d)::
11815 :: EXPR :: modify :: D :: v184[#(63)] = #(2.98E-10 d)::
11819 :: EXPR :: modify :: D :: v184[#(64)] = #(1.55E-10 d)::
11823 :: EXPR :: modify :: D :: v184[#(65)] = #(8.03E-11 d)::
11827 :: EXPR :: modify :: D :: v184[#(66)] = #(4.11E-11 d)::
11831 :: EXPR :: modify :: D :: v184[#(67)] = #(2.08E-11 d)::
11835 :: EXPR :: modify :: D :: v184[#(68)] = #(1.05E-11 d)::
11839 :: EXPR :: modify :: D :: v184[#(69)] = #(5.2E-12 d)::
11843 :: EXPR :: modify :: D :: v184[#(70)] = #(2.56E-12 d)::
11847 :: EXPR :: modify :: D :: v184[#(71)] = #(1.25E-12 d)::
11851 :: EXPR :: modify :: D :: v184[#(72)] = #(6.02E-13 d)::
11855 :: EXPR :: modify :: D :: v184[#(73)] = #(2.88E-13 d)::
11859 :: EXPR :: modify :: D :: v184[#(74)] = #(1.36E-13 d)::
11863 :: EXPR :: modify :: D :: v184[#(75)] = #(6.38E-14 d)::
11867 :: EXPR :: modify :: D :: v184[#(76)] = #(2.96E-14 d)::
11871 :: EXPR :: modify :: D :: v184[#(77)] = #(1.36E-14 d)::
11875 :: EXPR :: modify :: D :: v184[#(78)] = #(6.19E-15 d)::
11879 :: EXPR :: modify :: D :: v184[#(79)] = #(2.79E-15 d)::
11883 :: EXPR :: modify :: D :: v184[#(80)] = #(1.24E-15 d)::
11887 :: EXPR :: modify :: D :: v184[#(81)] = #(5.5E-16 d)::
11891 :: EXPR :: modify :: D :: v184[#(82)] = #(2.4E-16 d)::
11895 :: EXPR :: modify :: D :: v184[#(83)] = #(1.04E-16 d)::
11899 :: EXPR :: modify :: D :: v184[#(84)] = #(4.46E-17 d)::
11903 :: EXPR :: modify :: D :: v184[#(85)] = #(1.9E-17 d)::
11907 :: EXPR :: modify :: D :: v184[#(86)] = #(7.97E-18 d)::
11911 :: EXPR :: modify :: D :: v184[#(87)] = #(3.32E-18 d)::
11915 :: EXPR :: modify :: D :: v184[#(88)] = #(1.37E-18 d)::
11919 :: EXPR :: modify :: D :: v184[#(89)] = #(5.58E-19 d)::
11923 :: EXPR :: modify :: D :: v184[#(90)] = #(2.26E-19 d)::
11927 :: EXPR :: modify :: D :: v184[#(91)] = #(9.03E-20 d)::
11931 :: EXPR :: modify :: D :: v184[#(92)] = #(3.58E-20 d)::
11935 :: EXPR :: modify :: D :: v184[#(93)] = #(1.4E-20 d)::
11939 :: EXPR :: modify :: D :: v184[#(94)] = #(5.46E-21 d)::
11943 :: EXPR :: modify :: D :: v184[#(95)] = #(2.1E-21 d)::
11947 :: EXPR :: modify :: D :: v184[#(96)] = #(7.99E-22 d)::
11951 :: EXPR :: modify :: D :: v184[#(97)] = #(3.02E-22 d)::
11955 :: EXPR :: modify :: D :: v184[#(98)] = #(1.13E-22 d)::
11959 :: EXPR :: modify :: D :: v184[#(99)] = #(4.16E-23 d)::
11963 :: EXPR :: modify :: D :: v184[#(100)] = #(1.52E-23 d)::
11967 :: EXPR :: modify :: D :: v184[#(101)] = #(5.52E-24 d)::
11971 :: EXPR :: modify :: D :: v184[#(102)] = #(1.98E-24 d)::
11975 :: EXPR :: modify :: D :: v184[#(103)] = #(7.05E-25 d)::
11979 :: EXPR :: modify :: D :: v184[#(104)] = #(2.48E-25 d)::
11983 :: EXPR :: modify :: D :: v184[#(105)] = #(8.64E-26 d)::
11987 :: EXPR :: modify :: D :: v184[#(106)] = #(2.98E-26 d)::
11991 :: EXPR :: modify :: D :: v184[#(107)] = #(1.02E-26 d)::
11995 :: EXPR :: modify :: D :: v184[#(108)] = #(3.44E-27 d)::
11999 :: EXPR :: modify :: D :: v184[#(109)] = #(1.15E-27 d)::
12003 :: EXPR :: modify :: D :: v184[#(110)] = #(3.82E-28 d)::
12007 :: EXPR :: modify :: D :: v184[#(111)] = #(1.25E-28 d)::
12011 :: EXPR :: modify :: D :: v184[#(112)] = #(4.08E-29 d)::
12015 :: EXPR :: modify :: D :: v184[#(113)] = #(1.31E-29 d)::
12019 :: EXPR :: modify :: D :: v184[#(114)] = #(4.18E-30 d)::
12023 :: EXPR :: modify :: D :: v184[#(115)] = #(1.32E-30 d)::
12027 :: EXPR :: modify :: D :: v184[#(116)] = #(4.12E-31 d)::
12031 :: EXPR :: modify :: D :: v184[#(117)] = #(1.27E-31 d)::
12035 :: EXPR :: modify :: D :: v184[#(118)] = #(3.9E-32 d)::
12039 :: EXPR :: modify :: D :: v184[#(119)] = #(1.18E-32 d)::
12043 :: EXPR :: modify :: D :: v184[#(120)] = #(3.55E-33 d)::
12047 :: EXPR :: modify :: D :: v184[#(121)] = #(1.06E-33 d)::
12051 :: EXPR :: modify :: D :: v184[#(122)] = #(3.11E-34 d)::
12055 :: EXPR :: modify :: D :: v184[#(123)] = #(9.06E-35 d)::
12059 :: EXPR :: modify :: D :: v184[#(124)] = #(2.61E-35 d)::
12063 :: EXPR :: modify :: D :: v184[#(125)] = #(7.47E-36 d)::
12067 :: EXPR :: modify :: D :: v184[#(126)] = #(2.11E-36 d)::
12071 :: EXPR :: modify :: D :: v184[#(127)] = #(5.91E-37 d)::
12075 :: EXPR :: modify :: D :: v184[#(128)] = #(1.64E-37 d)::
12079 :: EXPR :: modify :: D :: v184[#(129)] = #(4.5E-38 d)::
12083 :: EXPR :: modify :: D :: v184[#(130)] = #(1.22E-38 d)::
12087 :: EXPR :: modify :: D :: v184[#(131)] = #(3.29E-39 d)::
12091 :: EXPR :: modify :: D :: v184[#(132)] = #(8.77E-40 d)::
12095 :: EXPR :: modify :: D :: v184[#(133)] = #(2.31E-40 d)::
12099 :: EXPR :: modify :: D :: v184[#(134)] = #(6.05E-41 d)::
12103 :: EXPR :: modify :: D :: v184[#(135)] = #(1.56E-41 d)::
12107 :: EXPR :: modify :: D :: v184[#(136)] = #(4.0E-42 d)::
12111 :: EXPR :: modify :: D :: v184[#(137)] = #(1.02E-42 d)::
12115 :: EXPR :: modify :: D :: v184[#(138)] = #(2.55E-43 d)::
12119 :: EXPR :: modify :: D :: v184[#(139)] = #(6.33E-44 d)::
12123 :: EXPR :: modify :: D :: v184[#(140)] = #(1.56E-44 d)::
12127 :: EXPR :: modify :: D :: v184[#(141)] = #(3.8E-45 d)::
12131 :: EXPR :: modify :: D :: v184[#(142)] = #(9.16E-46 d)::
12135 :: EXPR :: modify :: D :: v184[#(143)] = #(2.19E-46 d)::
12139 :: EXPR :: modify :: D :: v184[#(144)] = #(5.17E-47 d)::
12143 :: EXPR :: modify :: D :: v184[#(145)] = #(1.21E-47 d)::
12147 :: EXPR :: modify :: D :: v184[#(146)] = #(2.81E-48 d)::
12151 :: EXPR :: modify :: D :: v184[#(147)] = #(6.45E-49 d)::
12155 :: EXPR :: modify :: D :: v184[#(148)] = #(1.46E-49 d)::
12159 :: EXPR :: modify :: D :: v184[#(149)] = #(3.3E-50 d)::
12165 :: NORM :: declaration :: [D :: v463 = new []::
12166 :: EXPR :: modify :: D :: v463[#(0)] = #(0.0 d)::
12170 :: EXPR :: modify :: D :: v463[#(1)] = #(0.73 d)::
12174 :: EXPR :: modify :: D :: v463[#(2)] = #(1.24 d)::
12178 :: EXPR :: modify :: D :: v463[#(3)] = #(1.64 d)::
12182 :: EXPR :: modify :: D :: v463[#(4)] = #(1.99 d)::
12186 :: EXPR :: modify :: D :: v463[#(5)] = #(2.3 d)::
12190 :: EXPR :: modify :: D :: v463[#(6)] = #(2.58 d)::
12194 :: EXPR :: modify :: D :: v463[#(7)] = #(2.83 d)::
12198 :: EXPR :: modify :: D :: v463[#(8)] = #(3.07 d)::
12202 :: EXPR :: modify :: D :: v463[#(9)] = #(3.29 d)::
12206 :: EXPR :: modify :: D :: v463[#(10)] = #(3.5 d)::
12210 :: EXPR :: modify :: D :: v463[#(11)] = #(3.7 d)::
12214 :: EXPR :: modify :: D :: v463[#(12)] = #(3.89 d)::
12218 :: EXPR :: modify :: D :: v463[#(13)] = #(4.07 d)::
12222 :: EXPR :: modify :: D :: v463[#(14)] = #(4.25 d)::
12226 :: EXPR :: modify :: D :: v463[#(15)] = #(4.42 d)::
12230 :: EXPR :: modify :: D :: v463[#(16)] = #(4.58 d)::
12234 :: EXPR :: modify :: D :: v463[#(17)] = #(4.74 d)::
12238 :: EXPR :: modify :: D :: v463[#(18)] = #(4.89 d)::
12242 :: EXPR :: modify :: D :: v463[#(19)] = #(5.04 d)::
12246 :: EXPR :: modify :: D :: v463[#(20)] = #(5.19 d)::
12250 :: EXPR :: modify :: D :: v463[#(21)] = #(5.33 d)::
12254 :: EXPR :: modify :: D :: v463[#(22)] = #(5.46 d)::
12258 :: EXPR :: modify :: D :: v463[#(23)] = #(5.6 d)::
12262 :: EXPR :: modify :: D :: v463[#(24)] = #(5.73 d)::
12266 :: EXPR :: modify :: D :: v463[#(25)] = #(5.86 d)::
12270 :: EXPR :: modify :: D :: v463[#(26)] = #(5.99 d)::
12274 :: EXPR :: modify :: D :: v463[#(27)] = #(6.11 d)::
12278 :: EXPR :: modify :: D :: v463[#(28)] = #(6.23 d)::
12282 :: EXPR :: modify :: D :: v463[#(29)] = #(6.35 d)::
12286 :: EXPR :: modify :: D :: v463[#(30)] = #(6.47 d)::
12290 :: EXPR :: modify :: D :: v463[#(31)] = #(6.58 d)::
12294 :: EXPR :: modify :: D :: v463[#(32)] = #(6.7 d)::
12298 :: EXPR :: modify :: D :: v463[#(33)] = #(6.81 d)::
12302 :: EXPR :: modify :: D :: v463[#(34)] = #(6.92 d)::
12306 :: EXPR :: modify :: D :: v463[#(35)] = #(7.02 d)::
12310 :: EXPR :: modify :: D :: v463[#(36)] = #(7.13 d)::
12314 :: EXPR :: modify :: D :: v463[#(37)] = #(7.24 d)::
12318 :: EXPR :: modify :: D :: v463[#(38)] = #(7.34 d)::
12322 :: EXPR :: modify :: D :: v463[#(39)] = #(7.44 d)::
12326 :: EXPR :: modify :: D :: v463[#(40)] = #(7.54 d)::
12330 :: EXPR :: modify :: D :: v463[#(41)] = #(7.64 d)::
12334 :: EXPR :: modify :: D :: v463[#(42)] = #(7.74 d)::
12338 :: EXPR :: modify :: D :: v463[#(43)] = #(7.84 d)::
12342 :: EXPR :: modify :: D :: v463[#(44)] = #(7.93 d)::
12346 :: EXPR :: modify :: D :: v463[#(45)] = #(8.03 d)::
12350 :: EXPR :: modify :: D :: v463[#(46)] = #(8.12 d)::
12354 :: EXPR :: modify :: D :: v463[#(47)] = #(8.21 d)::
12358 :: EXPR :: modify :: D :: v463[#(48)] = #(8.3 d)::
12362 :: EXPR :: modify :: D :: v463[#(49)] = #(8.4 d)::
12366 :: EXPR :: modify :: D :: v463[#(50)] = #(8.49 d)::
12370 :: EXPR :: modify :: D :: v463[#(51)] = #(8.57 d)::
12374 :: EXPR :: modify :: D :: v463[#(52)] = #(8.66 d)::
12378 :: EXPR :: modify :: D :: v463[#(53)] = #(8.75 d)::
12382 :: EXPR :: modify :: D :: v463[#(54)] = #(8.84 d)::
12386 :: EXPR :: modify :: D :: v463[#(55)] = #(8.92 d)::
12390 :: EXPR :: modify :: D :: v463[#(56)] = #(9.01 d)::
12394 :: EXPR :: modify :: D :: v463[#(57)] = #(9.09 d)::
12398 :: EXPR :: modify :: D :: v463[#(58)] = #(9.17 d)::
12402 :: EXPR :: modify :: D :: v463[#(59)] = #(9.25 d)::
12406 :: EXPR :: modify :: D :: v463[#(60)] = #(9.34 d)::
12410 :: EXPR :: modify :: D :: v463[#(61)] = #(9.42 d)::
12414 :: EXPR :: modify :: D :: v463[#(62)] = #(9.5 d)::
12418 :: EXPR :: modify :: D :: v463[#(63)] = #(9.58 d)::
12422 :: EXPR :: modify :: D :: v463[#(64)] = #(9.66 d)::
12426 :: EXPR :: modify :: D :: v463[#(65)] = #(9.73 d)::
12430 :: EXPR :: modify :: D :: v463[#(66)] = #(9.81 d)::
12434 :: EXPR :: modify :: D :: v463[#(67)] = #(9.89 d)::
12438 :: EXPR :: modify :: D :: v463[#(68)] = #(9.97 d)::
12442 :: EXPR :: modify :: D :: v463[#(69)] = #(10.04 d)::
12446 :: EXPR :: modify :: D :: v463[#(70)] = #(10.12 d)::
12450 :: EXPR :: modify :: D :: v463[#(71)] = #(10.19 d)::
12454 :: EXPR :: modify :: D :: v463[#(72)] = #(10.27 d)::
12458 :: EXPR :: modify :: D :: v463[#(73)] = #(10.34 d)::
12462 :: EXPR :: modify :: D :: v463[#(74)] = #(10.41 d)::
12466 :: EXPR :: modify :: D :: v463[#(75)] = #(10.49 d)::
12470 :: EXPR :: modify :: D :: v463[#(76)] = #(10.56 d)::
12474 :: EXPR :: modify :: D :: v463[#(77)] = #(10.63 d)::
12478 :: EXPR :: modify :: D :: v463[#(78)] = #(10.7 d)::
12482 :: EXPR :: modify :: D :: v463[#(79)] = #(10.77 d)::
12486 :: EXPR :: modify :: D :: v463[#(80)] = #(10.84 d)::
12490 :: EXPR :: modify :: D :: v463[#(81)] = #(10.91 d)::
12494 :: EXPR :: modify :: D :: v463[#(82)] = #(10.98 d)::
12498 :: EXPR :: modify :: D :: v463[#(83)] = #(11.05 d)::
12502 :: EXPR :: modify :: D :: v463[#(84)] = #(11.12 d)::
12506 :: EXPR :: modify :: D :: v463[#(85)] = #(11.19 d)::
12510 :: EXPR :: modify :: D :: v463[#(86)] = #(11.26 d)::
12514 :: EXPR :: modify :: D :: v463[#(87)] = #(11.32 d)::
12518 :: EXPR :: modify :: D :: v463[#(88)] = #(11.39 d)::
12522 :: EXPR :: modify :: D :: v463[#(89)] = #(11.46 d)::
12526 :: EXPR :: modify :: D :: v463[#(90)] = #(11.52 d)::
12530 :: EXPR :: modify :: D :: v463[#(91)] = #(11.59 d)::
12534 :: EXPR :: modify :: D :: v463[#(92)] = #(11.66 d)::
12538 :: EXPR :: modify :: D :: v463[#(93)] = #(11.72 d)::
12542 :: EXPR :: modify :: D :: v463[#(94)] = #(11.79 d)::
12546 :: EXPR :: modify :: D :: v463[#(95)] = #(11.85 d)::
12550 :: EXPR :: modify :: D :: v463[#(96)] = #(11.91 d)::
12554 :: EXPR :: modify :: D :: v463[#(97)] = #(11.98 d)::
12558 :: EXPR :: modify :: D :: v463[#(98)] = #(12.04 d)::
12562 :: EXPR :: modify :: D :: v463[#(99)] = #(12.1 d)::
12566 :: EXPR :: modify :: D :: v463[#(100)] = #(12.17 d)::
12570 :: EXPR :: modify :: D :: v463[#(101)] = #(12.23 d)::
12574 :: EXPR :: modify :: D :: v463[#(102)] = #(12.29 d)::
12578 :: EXPR :: modify :: D :: v463[#(103)] = #(12.35 d)::
12582 :: EXPR :: modify :: D :: v463[#(104)] = #(12.42 d)::
12586 :: EXPR :: modify :: D :: v463[#(105)] = #(12.48 d)::
12590 :: EXPR :: modify :: D :: v463[#(106)] = #(12.54 d)::
12594 :: EXPR :: modify :: D :: v463[#(107)] = #(12.6 d)::
12598 :: EXPR :: modify :: D :: v463[#(108)] = #(12.66 d)::
12602 :: EXPR :: modify :: D :: v463[#(109)] = #(12.72 d)::
12606 :: EXPR :: modify :: D :: v463[#(110)] = #(12.78 d)::
12610 :: EXPR :: modify :: D :: v463[#(111)] = #(12.84 d)::
12614 :: EXPR :: modify :: D :: v463[#(112)] = #(12.9 d)::
12618 :: EXPR :: modify :: D :: v463[#(113)] = #(12.96 d)::
12622 :: EXPR :: modify :: D :: v463[#(114)] = #(13.02 d)::
12626 :: EXPR :: modify :: D :: v463[#(115)] = #(13.07 d)::
12630 :: EXPR :: modify :: D :: v463[#(116)] = #(13.13 d)::
12634 :: EXPR :: modify :: D :: v463[#(117)] = #(13.19 d)::
12638 :: EXPR :: modify :: D :: v463[#(118)] = #(13.25 d)::
12642 :: EXPR :: modify :: D :: v463[#(119)] = #(13.31 d)::
12646 :: EXPR :: modify :: D :: v463[#(120)] = #(13.36 d)::
12650 :: EXPR :: modify :: D :: v463[#(121)] = #(13.42 d)::
12654 :: EXPR :: modify :: D :: v463[#(122)] = #(13.48 d)::
12658 :: EXPR :: modify :: D :: v463[#(123)] = #(13.53 d)::
12662 :: EXPR :: modify :: D :: v463[#(124)] = #(13.59 d)::
12666 :: EXPR :: modify :: D :: v463[#(125)] = #(13.65 d)::
12670 :: EXPR :: modify :: D :: v463[#(126)] = #(13.7 d)::
12674 :: EXPR :: modify :: D :: v463[#(127)] = #(13.76 d)::
12678 :: EXPR :: modify :: D :: v463[#(128)] = #(13.81 d)::
12682 :: EXPR :: modify :: D :: v463[#(129)] = #(13.87 d)::
12686 :: EXPR :: modify :: D :: v463[#(130)] = #(13.92 d)::
12690 :: EXPR :: modify :: D :: v463[#(131)] = #(13.98 d)::
12694 :: EXPR :: modify :: D :: v463[#(132)] = #(14.03 d)::
12698 :: EXPR :: modify :: D :: v463[#(133)] = #(14.09 d)::
12702 :: EXPR :: modify :: D :: v463[#(134)] = #(14.14 d)::
12706 :: EXPR :: modify :: D :: v463[#(135)] = #(14.19 d)::
12710 :: EXPR :: modify :: D :: v463[#(136)] = #(14.25 d)::
12714 :: EXPR :: modify :: D :: v463[#(137)] = #(14.3 d)::
12718 :: EXPR :: modify :: D :: v463[#(138)] = #(14.35 d)::
12722 :: EXPR :: modify :: D :: v463[#(139)] = #(14.41 d)::
12726 :: EXPR :: modify :: D :: v463[#(140)] = #(14.46 d)::
12730 :: EXPR :: modify :: D :: v463[#(141)] = #(14.51 d)::
12734 :: EXPR :: modify :: D :: v463[#(142)] = #(14.57 d)::
12738 :: EXPR :: modify :: D :: v463[#(143)] = #(14.62 d)::
12742 :: EXPR :: modify :: D :: v463[#(144)] = #(14.67 d)::
12746 :: EXPR :: modify :: D :: v463[#(145)] = #(14.72 d)::
12750 :: EXPR :: modify :: D :: v463[#(146)] = #(14.77 d)::
12754 :: EXPR :: modify :: D :: v463[#(147)] = #(14.83 d)::
12758 :: EXPR :: modify :: D :: v463[#(148)] = #(14.88 d)::
12762 :: EXPR :: modify :: D :: v463[#(149)] = #(14.93 d)::
14186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.<clinit>()::CD,14196:CD,14197:CD,14274:CD,14347:CD,14436:CD,14521:CD,14598:CD,14667:CD,14748:CD,14813:CD,14886:CD,14955:CD,15036:CD,15113:CD,15190:CD,15271:CD,15356:CD,15441:CD,15522:CD,15599:CD,15688:CD,15777:CD,15868:CD,15869:CD,15877:CD,15885:CD,15893:CD,15901:CD,15909:CD,15917:CD,15925:CD,15933:CD,15941:CD,15949:CD,15957:CD,15965:CD,15973:CD,15981:CD,15989:CD,15997:CD,16005:CD,16013:CD,16021:CD,16029:CD,16037:CD,16039:CD,16041
14196 :: NORM :: declaration :: [[I :: v6 = new [][]::CF,14197
14197 :: NORM :: declaration :: [I :: v8 = new []::DD,14270
14198 :: EXPR :: modify :: I :: v8[#(0)] = #(6)::
14202 :: EXPR :: modify :: I :: v8[#(2)] = #(-2)::
14206 :: EXPR :: modify :: I :: v8[#(3)] = #(-3)::
14210 :: EXPR :: modify :: I :: v8[#(4)] = #(-2)::
14214 :: EXPR :: modify :: I :: v8[#(6)] = #(-1)::
14218 :: EXPR :: modify :: I :: v8[#(8)] = #(-2)::
14222 :: EXPR :: modify :: I :: v8[#(9)] = #(-2)::
14226 :: EXPR :: modify :: I :: v8[#(10)] = #(-2)::
14230 :: EXPR :: modify :: I :: v8[#(11)] = #(-2)::
14234 :: EXPR :: modify :: I :: v8[#(12)] = #(-2)::
14238 :: EXPR :: modify :: I :: v8[#(13)] = #(-3)::
14242 :: EXPR :: modify :: I :: v8[#(14)] = #(-4)::
14246 :: EXPR :: modify :: I :: v8[#(15)] = #(-4)::
14250 :: EXPR :: modify :: I :: v8[#(16)] = #(-3)::
14254 :: EXPR :: modify :: I :: v8[#(17)] = #(-3)::
14258 :: EXPR :: modify :: I :: v8[#(18)] = #(-3)::
14262 :: EXPR :: modify :: I :: v8[#(19)] = #(-2)::
14266 :: EXPR :: modify :: I :: v8[#(20)] = #(-4)::
14270 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
14274 :: NORM :: declaration :: [I :: v31 = new []::DD,14343
14275 :: EXPR :: modify :: I :: v31[#(1)] = #(4)::
14279 :: EXPR :: modify :: I :: v31[#(2)] = #(-1)::
14283 :: EXPR :: modify :: I :: v31[#(5)] = #(1)::
14287 :: EXPR :: modify :: I :: v31[#(6)] = #(-2)::
14291 :: EXPR :: modify :: I :: v31[#(7)] = #(-2)::
14295 :: EXPR :: modify :: I :: v31[#(8)] = #(-1)::
14299 :: EXPR :: modify :: I :: v31[#(9)] = #(-1)::
14303 :: EXPR :: modify :: I :: v31[#(10)] = #(-1)::
14307 :: EXPR :: modify :: I :: v31[#(11)] = #(-2)::
14311 :: EXPR :: modify :: I :: v31[#(12)] = #(-1)::
14315 :: EXPR :: modify :: I :: v31[#(14)] = #(-1)::
14319 :: EXPR :: modify :: I :: v31[#(15)] = #(-1)::
14323 :: EXPR :: modify :: I :: v31[#(16)] = #(-1)::
14327 :: EXPR :: modify :: I :: v31[#(17)] = #(-2)::
14331 :: EXPR :: modify :: I :: v31[#(18)] = #(-2)::
14335 :: EXPR :: modify :: I :: v31[#(19)] = #(-3)::
14339 :: EXPR :: modify :: I :: v31[#(20)] = #(-4)::
14343 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v31::
14347 :: NORM :: declaration :: [I :: v34 = new []::DD,14432
14348 :: EXPR :: modify :: I :: v34[#(0)] = #(-2)::
14352 :: EXPR :: modify :: I :: v34[#(1)] = #(-1)::
14356 :: EXPR :: modify :: I :: v34[#(2)] = #(7)::
14360 :: EXPR :: modify :: I :: v34[#(3)] = #(-3)::
14364 :: EXPR :: modify :: I :: v34[#(4)] = #(-1)::
14368 :: EXPR :: modify :: I :: v34[#(5)] = #(-1)::
14372 :: EXPR :: modify :: I :: v34[#(6)] = #(-1)::
14376 :: EXPR :: modify :: I :: v34[#(7)] = #(-2)::
14380 :: EXPR :: modify :: I :: v34[#(8)] = #(-1)::
14384 :: EXPR :: modify :: I :: v34[#(9)] = #(-1)::
14388 :: EXPR :: modify :: I :: v34[#(10)] = #(-1)::
14392 :: EXPR :: modify :: I :: v34[#(11)] = #(-2)::
14396 :: EXPR :: modify :: I :: v34[#(12)] = #(-2)::
14400 :: EXPR :: modify :: I :: v34[#(13)] = #(-2)::
14404 :: EXPR :: modify :: I :: v34[#(14)] = #(-3)::
14408 :: EXPR :: modify :: I :: v34[#(15)] = #(-3)::
14412 :: EXPR :: modify :: I :: v34[#(16)] = #(-2)::
14416 :: EXPR :: modify :: I :: v34[#(17)] = #(-4)::
14420 :: EXPR :: modify :: I :: v34[#(18)] = #(-3)::
14424 :: EXPR :: modify :: I :: v34[#(19)] = #(-4)::
14428 :: EXPR :: modify :: I :: v34[#(20)] = #(-4)::
14432 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = v34::
14436 :: NORM :: declaration :: [I :: v35 = new []::DD,14517
14437 :: EXPR :: modify :: I :: v35[#(0)] = #(-3)::
14441 :: EXPR :: modify :: I :: v35[#(2)] = #(-3)::
14445 :: EXPR :: modify :: I :: v35[#(3)] = #(9)::
14449 :: EXPR :: modify :: I :: v35[#(4)] = #(-1)::
14453 :: EXPR :: modify :: I :: v35[#(5)] = #(-1)::
14457 :: EXPR :: modify :: I :: v35[#(6)] = #(-3)::
14461 :: EXPR :: modify :: I :: v35[#(7)] = #(-3)::
14465 :: EXPR :: modify :: I :: v35[#(8)] = #(-4)::
14469 :: EXPR :: modify :: I :: v35[#(9)] = #(-3)::
14473 :: EXPR :: modify :: I :: v35[#(10)] = #(-3)::
14477 :: EXPR :: modify :: I :: v35[#(11)] = #(-3)::
14481 :: EXPR :: modify :: I :: v35[#(12)] = #(-3)::
14485 :: EXPR :: modify :: I :: v35[#(13)] = #(-1)::
14489 :: EXPR :: modify :: I :: v35[#(14)] = #(-1)::
14493 :: EXPR :: modify :: I :: v35[#(15)] = #(-1)::
14497 :: EXPR :: modify :: I :: v35[#(16)] = #(-1)::
14501 :: EXPR :: modify :: I :: v35[#(17)] = #(-2)::
14505 :: EXPR :: modify :: I :: v35[#(18)] = #(-2)::
14509 :: EXPR :: modify :: I :: v35[#(19)] = #(-2)::
14513 :: EXPR :: modify :: I :: v35[#(20)] = #(-4)::
14517 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(3)] = v35::
14521 :: NORM :: declaration :: [I :: v36 = new []::DD,14594
14522 :: EXPR :: modify :: I :: v36[#(0)] = #(-2)::
14526 :: EXPR :: modify :: I :: v36[#(2)] = #(-1)::
14530 :: EXPR :: modify :: I :: v36[#(3)] = #(-1)::
14534 :: EXPR :: modify :: I :: v36[#(4)] = #(5)::
14538 :: EXPR :: modify :: I :: v36[#(5)] = #(1)::
14542 :: EXPR :: modify :: I :: v36[#(6)] = #(-1)::
14546 :: EXPR :: modify :: I :: v36[#(8)] = #(-1)::
14550 :: EXPR :: modify :: I :: v36[#(9)] = #(-1)::
14554 :: EXPR :: modify :: I :: v36[#(10)] = #(-1)::
14558 :: EXPR :: modify :: I :: v36[#(11)] = #(-2)::
14562 :: EXPR :: modify :: I :: v36[#(12)] = #(-1)::
14566 :: EXPR :: modify :: I :: v36[#(14)] = #(-1)::
14570 :: EXPR :: modify :: I :: v36[#(15)] = #(-1)::
14574 :: EXPR :: modify :: I :: v36[#(16)] = #(-1)::
14578 :: EXPR :: modify :: I :: v36[#(17)] = #(-2)::
14582 :: EXPR :: modify :: I :: v36[#(18)] = #(-2)::
14586 :: EXPR :: modify :: I :: v36[#(19)] = #(-2)::
14590 :: EXPR :: modify :: I :: v36[#(20)] = #(-4)::
14594 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v36::
14598 :: NORM :: declaration :: [I :: v37 = new []::DD,14663
14599 :: EXPR :: modify :: I :: v37[#(1)] = #(1)::
14603 :: EXPR :: modify :: I :: v37[#(2)] = #(-1)::
14607 :: EXPR :: modify :: I :: v37[#(3)] = #(-1)::
14611 :: EXPR :: modify :: I :: v37[#(4)] = #(1)::
14615 :: EXPR :: modify :: I :: v37[#(5)] = #(4)::
14619 :: EXPR :: modify :: I :: v37[#(7)] = #(1)::
14623 :: EXPR :: modify :: I :: v37[#(11)] = #(-1)::
14627 :: EXPR :: modify :: I :: v37[#(12)] = #(-1)::
14631 :: EXPR :: modify :: I :: v37[#(13)] = #(-2)::
14635 :: EXPR :: modify :: I :: v37[#(14)] = #(-2)::
14639 :: EXPR :: modify :: I :: v37[#(15)] = #(-2)::
14643 :: EXPR :: modify :: I :: v37[#(16)] = #(-1)::
14647 :: EXPR :: modify :: I :: v37[#(17)] = #(-2)::
14651 :: EXPR :: modify :: I :: v37[#(18)] = #(-2)::
14655 :: EXPR :: modify :: I :: v37[#(19)] = #(-3)::
14659 :: EXPR :: modify :: I :: v37[#(20)] = #(-4)::
14663 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(5)] = v37::
14667 :: NORM :: declaration :: [I :: v38 = new []::DD,14744
14668 :: EXPR :: modify :: I :: v38[#(0)] = #(-1)::
14672 :: EXPR :: modify :: I :: v38[#(1)] = #(-2)::
14676 :: EXPR :: modify :: I :: v38[#(2)] = #(-1)::
14680 :: EXPR :: modify :: I :: v38[#(3)] = #(-3)::
14684 :: EXPR :: modify :: I :: v38[#(4)] = #(-1)::
14688 :: EXPR :: modify :: I :: v38[#(6)] = #(6)::
14692 :: EXPR :: modify :: I :: v38[#(7)] = #(1)::
14696 :: EXPR :: modify :: I :: v38[#(8)] = #(2)::
14700 :: EXPR :: modify :: I :: v38[#(10)] = #(-1)::
14704 :: EXPR :: modify :: I :: v38[#(11)] = #(-1)::
14708 :: EXPR :: modify :: I :: v38[#(12)] = #(-2)::
14712 :: EXPR :: modify :: I :: v38[#(13)] = #(-3)::
14716 :: EXPR :: modify :: I :: v38[#(14)] = #(-3)::
14720 :: EXPR :: modify :: I :: v38[#(15)] = #(-4)::
14724 :: EXPR :: modify :: I :: v38[#(16)] = #(-3)::
14728 :: EXPR :: modify :: I :: v38[#(17)] = #(-3)::
14732 :: EXPR :: modify :: I :: v38[#(18)] = #(-3)::
14736 :: EXPR :: modify :: I :: v38[#(19)] = #(-4)::
14740 :: EXPR :: modify :: I :: v38[#(20)] = #(-4)::
14744 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(6)] = v38::
14748 :: NORM :: declaration :: [I :: v39 = new []::DD,14809
14749 :: EXPR :: modify :: I :: v39[#(1)] = #(-2)::
14753 :: EXPR :: modify :: I :: v39[#(2)] = #(-2)::
14757 :: EXPR :: modify :: I :: v39[#(3)] = #(-3)::
14761 :: EXPR :: modify :: I :: v39[#(5)] = #(1)::
14765 :: EXPR :: modify :: I :: v39[#(6)] = #(1)::
14769 :: EXPR :: modify :: I :: v39[#(7)] = #(6)::
14773 :: EXPR :: modify :: I :: v39[#(11)] = #(1)::
14777 :: EXPR :: modify :: I :: v39[#(13)] = #(-3)::
14781 :: EXPR :: modify :: I :: v39[#(14)] = #(-3)::
14785 :: EXPR :: modify :: I :: v39[#(15)] = #(-3)::
14789 :: EXPR :: modify :: I :: v39[#(16)] = #(-2)::
14793 :: EXPR :: modify :: I :: v39[#(17)] = #(-3)::
14797 :: EXPR :: modify :: I :: v39[#(18)] = #(-2)::
14801 :: EXPR :: modify :: I :: v39[#(19)] = #(-4)::
14805 :: EXPR :: modify :: I :: v39[#(20)] = #(-4)::
14809 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(7)] = v39::
14813 :: NORM :: declaration :: [I :: v40 = new []::DD,14882
14814 :: EXPR :: modify :: I :: v40[#(0)] = #(-2)::
14818 :: EXPR :: modify :: I :: v40[#(1)] = #(-1)::
14822 :: EXPR :: modify :: I :: v40[#(2)] = #(-1)::
14826 :: EXPR :: modify :: I :: v40[#(3)] = #(-4)::
14830 :: EXPR :: modify :: I :: v40[#(4)] = #(-1)::
14834 :: EXPR :: modify :: I :: v40[#(6)] = #(2)::
14838 :: EXPR :: modify :: I :: v40[#(8)] = #(5)::
14842 :: EXPR :: modify :: I :: v40[#(9)] = #(2)::
14846 :: EXPR :: modify :: I :: v40[#(10)] = #(1)::
14850 :: EXPR :: modify :: I :: v40[#(13)] = #(-2)::
14854 :: EXPR :: modify :: I :: v40[#(14)] = #(-3)::
14858 :: EXPR :: modify :: I :: v40[#(15)] = #(-3)::
14862 :: EXPR :: modify :: I :: v40[#(16)] = #(-2)::
14866 :: EXPR :: modify :: I :: v40[#(17)] = #(-3)::
14870 :: EXPR :: modify :: I :: v40[#(18)] = #(-2)::
14874 :: EXPR :: modify :: I :: v40[#(19)] = #(-3)::
14878 :: EXPR :: modify :: I :: v40[#(20)] = #(-4)::
14882 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(8)] = v40::
14886 :: NORM :: declaration :: [I :: v41 = new []::DD,14951
14887 :: EXPR :: modify :: I :: v41[#(0)] = #(-2)::
14891 :: EXPR :: modify :: I :: v41[#(1)] = #(-1)::
14895 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
14899 :: EXPR :: modify :: I :: v41[#(3)] = #(-3)::
14903 :: EXPR :: modify :: I :: v41[#(4)] = #(-1)::
14907 :: EXPR :: modify :: I :: v41[#(8)] = #(2)::
14911 :: EXPR :: modify :: I :: v41[#(9)] = #(5)::
14915 :: EXPR :: modify :: I :: v41[#(10)] = #(1)::
14919 :: EXPR :: modify :: I :: v41[#(12)] = #(1)::
14923 :: EXPR :: modify :: I :: v41[#(13)] = #(-2)::
14927 :: EXPR :: modify :: I :: v41[#(14)] = #(-3)::
14931 :: EXPR :: modify :: I :: v41[#(15)] = #(-2)::
14935 :: EXPR :: modify :: I :: v41[#(17)] = #(-3)::
14939 :: EXPR :: modify :: I :: v41[#(18)] = #(-1)::
14943 :: EXPR :: modify :: I :: v41[#(19)] = #(-2)::
14947 :: EXPR :: modify :: I :: v41[#(20)] = #(-4)::
14951 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(9)] = v41::
14955 :: NORM :: declaration :: [I :: v42 = new []::DD,15032
14956 :: EXPR :: modify :: I :: v42[#(0)] = #(-2)::
14960 :: EXPR :: modify :: I :: v42[#(1)] = #(-1)::
14964 :: EXPR :: modify :: I :: v42[#(2)] = #(-1)::
14968 :: EXPR :: modify :: I :: v42[#(3)] = #(-3)::
14972 :: EXPR :: modify :: I :: v42[#(4)] = #(-1)::
14976 :: EXPR :: modify :: I :: v42[#(6)] = #(-1)::
14980 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
14984 :: EXPR :: modify :: I :: v42[#(9)] = #(1)::
14988 :: EXPR :: modify :: I :: v42[#(10)] = #(5)::
14992 :: EXPR :: modify :: I :: v42[#(11)] = #(-1)::
14996 :: EXPR :: modify :: I :: v42[#(12)] = #(2)::
15000 :: EXPR :: modify :: I :: v42[#(13)] = #(-2)::
15004 :: EXPR :: modify :: I :: v42[#(14)] = #(-3)::
15008 :: EXPR :: modify :: I :: v42[#(15)] = #(-2)::
15012 :: EXPR :: modify :: I :: v42[#(16)] = #(-1)::
15016 :: EXPR :: modify :: I :: v42[#(17)] = #(-3)::
15020 :: EXPR :: modify :: I :: v42[#(18)] = #(-2)::
15024 :: EXPR :: modify :: I :: v42[#(19)] = #(-3)::
15028 :: EXPR :: modify :: I :: v42[#(20)] = #(-4)::
15032 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(10)] = v42::
15036 :: NORM :: declaration :: [I :: v43 = new []::DD,15109
15037 :: EXPR :: modify :: I :: v43[#(0)] = #(-2)::
15041 :: EXPR :: modify :: I :: v43[#(1)] = #(-2)::
15045 :: EXPR :: modify :: I :: v43[#(2)] = #(-2)::
15049 :: EXPR :: modify :: I :: v43[#(3)] = #(-3)::
15053 :: EXPR :: modify :: I :: v43[#(4)] = #(-2)::
15057 :: EXPR :: modify :: I :: v43[#(5)] = #(-1)::
15061 :: EXPR :: modify :: I :: v43[#(6)] = #(-1)::
15065 :: EXPR :: modify :: I :: v43[#(7)] = #(1)::
15069 :: EXPR :: modify :: I :: v43[#(10)] = #(-1)::
15073 :: EXPR :: modify :: I :: v43[#(11)] = #(8)::
15077 :: EXPR :: modify :: I :: v43[#(13)] = #(-3)::
15081 :: EXPR :: modify :: I :: v43[#(14)] = #(-3)::
15085 :: EXPR :: modify :: I :: v43[#(15)] = #(-3)::
15089 :: EXPR :: modify :: I :: v43[#(16)] = #(-2)::
15093 :: EXPR :: modify :: I :: v43[#(17)] = #(-1)::
15097 :: EXPR :: modify :: I :: v43[#(18)] = #(2)::
15101 :: EXPR :: modify :: I :: v43[#(19)] = #(-2)::
15105 :: EXPR :: modify :: I :: v43[#(20)] = #(-4)::
15109 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(11)] = v43::
15113 :: NORM :: declaration :: [I :: v44 = new []::DD,15186
15114 :: EXPR :: modify :: I :: v44[#(0)] = #(-2)::
15118 :: EXPR :: modify :: I :: v44[#(1)] = #(-1)::
15122 :: EXPR :: modify :: I :: v44[#(2)] = #(-2)::
15126 :: EXPR :: modify :: I :: v44[#(3)] = #(-3)::
15130 :: EXPR :: modify :: I :: v44[#(4)] = #(-1)::
15134 :: EXPR :: modify :: I :: v44[#(5)] = #(-1)::
15138 :: EXPR :: modify :: I :: v44[#(6)] = #(-2)::
15142 :: EXPR :: modify :: I :: v44[#(9)] = #(1)::
15146 :: EXPR :: modify :: I :: v44[#(10)] = #(2)::
15150 :: EXPR :: modify :: I :: v44[#(12)] = #(5)::
15154 :: EXPR :: modify :: I :: v44[#(13)] = #(-3)::
15158 :: EXPR :: modify :: I :: v44[#(14)] = #(-3)::
15162 :: EXPR :: modify :: I :: v44[#(15)] = #(-2)::
15166 :: EXPR :: modify :: I :: v44[#(16)] = #(-1)::
15170 :: EXPR :: modify :: I :: v44[#(17)] = #(-3)::
15174 :: EXPR :: modify :: I :: v44[#(18)] = #(-2)::
15178 :: EXPR :: modify :: I :: v44[#(19)] = #(-3)::
15182 :: EXPR :: modify :: I :: v44[#(20)] = #(-4)::
15186 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(12)] = v44::
15190 :: NORM :: declaration :: [I :: v45 = new []::DD,15267
15191 :: EXPR :: modify :: I :: v45[#(0)] = #(-3)::
15195 :: EXPR :: modify :: I :: v45[#(2)] = #(-2)::
15199 :: EXPR :: modify :: I :: v45[#(3)] = #(-1)::
15203 :: EXPR :: modify :: I :: v45[#(5)] = #(-2)::
15207 :: EXPR :: modify :: I :: v45[#(6)] = #(-3)::
15211 :: EXPR :: modify :: I :: v45[#(7)] = #(-3)::
15215 :: EXPR :: modify :: I :: v45[#(8)] = #(-2)::
15219 :: EXPR :: modify :: I :: v45[#(9)] = #(-2)::
15223 :: EXPR :: modify :: I :: v45[#(10)] = #(-2)::
15227 :: EXPR :: modify :: I :: v45[#(11)] = #(-3)::
15231 :: EXPR :: modify :: I :: v45[#(12)] = #(-3)::
15235 :: EXPR :: modify :: I :: v45[#(13)] = #(4)::
15239 :: EXPR :: modify :: I :: v45[#(14)] = #(3)::
15243 :: EXPR :: modify :: I :: v45[#(15)] = #(1)::
15247 :: EXPR :: modify :: I :: v45[#(16)] = #(1)::
15251 :: EXPR :: modify :: I :: v45[#(17)] = #(-1)::
15255 :: EXPR :: modify :: I :: v45[#(18)] = #(-1)::
15259 :: EXPR :: modify :: I :: v45[#(19)] = #(-3)::
15263 :: EXPR :: modify :: I :: v45[#(20)] = #(-4)::
15267 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(13)] = v45::
15271 :: NORM :: declaration :: [I :: v46 = new []::DD,15352
15272 :: EXPR :: modify :: I :: v46[#(0)] = #(-4)::
15276 :: EXPR :: modify :: I :: v46[#(1)] = #(-1)::
15280 :: EXPR :: modify :: I :: v46[#(2)] = #(-3)::
15284 :: EXPR :: modify :: I :: v46[#(3)] = #(-1)::
15288 :: EXPR :: modify :: I :: v46[#(4)] = #(-1)::
15292 :: EXPR :: modify :: I :: v46[#(5)] = #(-2)::
15296 :: EXPR :: modify :: I :: v46[#(6)] = #(-3)::
15300 :: EXPR :: modify :: I :: v46[#(7)] = #(-3)::
15304 :: EXPR :: modify :: I :: v46[#(8)] = #(-3)::
15308 :: EXPR :: modify :: I :: v46[#(9)] = #(-3)::
15312 :: EXPR :: modify :: I :: v46[#(10)] = #(-3)::
15316 :: EXPR :: modify :: I :: v46[#(11)] = #(-3)::
15320 :: EXPR :: modify :: I :: v46[#(12)] = #(-3)::
15324 :: EXPR :: modify :: I :: v46[#(13)] = #(3)::
15328 :: EXPR :: modify :: I :: v46[#(14)] = #(4)::
15332 :: EXPR :: modify :: I :: v46[#(15)] = #(2)::
15336 :: EXPR :: modify :: I :: v46[#(16)] = #(1)::
15340 :: EXPR :: modify :: I :: v46[#(18)] = #(-1)::
15344 :: EXPR :: modify :: I :: v46[#(19)] = #(-3)::
15348 :: EXPR :: modify :: I :: v46[#(20)] = #(-4)::
15352 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(14)] = v46::
15356 :: NORM :: declaration :: [I :: v47 = new []::DD,15437
15357 :: EXPR :: modify :: I :: v47[#(0)] = #(-4)::
15361 :: EXPR :: modify :: I :: v47[#(1)] = #(-1)::
15365 :: EXPR :: modify :: I :: v47[#(2)] = #(-3)::
15369 :: EXPR :: modify :: I :: v47[#(3)] = #(-1)::
15373 :: EXPR :: modify :: I :: v47[#(4)] = #(-1)::
15377 :: EXPR :: modify :: I :: v47[#(5)] = #(-2)::
15381 :: EXPR :: modify :: I :: v47[#(6)] = #(-4)::
15385 :: EXPR :: modify :: I :: v47[#(7)] = #(-3)::
15389 :: EXPR :: modify :: I :: v47[#(8)] = #(-3)::
15393 :: EXPR :: modify :: I :: v47[#(9)] = #(-2)::
15397 :: EXPR :: modify :: I :: v47[#(10)] = #(-2)::
15401 :: EXPR :: modify :: I :: v47[#(11)] = #(-3)::
15405 :: EXPR :: modify :: I :: v47[#(12)] = #(-2)::
15409 :: EXPR :: modify :: I :: v47[#(13)] = #(1)::
15413 :: EXPR :: modify :: I :: v47[#(14)] = #(2)::
15417 :: EXPR :: modify :: I :: v47[#(15)] = #(4)::
15421 :: EXPR :: modify :: I :: v47[#(16)] = #(2)::
15425 :: EXPR :: modify :: I :: v47[#(18)] = #(-1)::
15429 :: EXPR :: modify :: I :: v47[#(19)] = #(-2)::
15433 :: EXPR :: modify :: I :: v47[#(20)] = #(-4)::
15437 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(15)] = v47::
15441 :: NORM :: declaration :: [I :: v48 = new []::DD,15518
15442 :: EXPR :: modify :: I :: v48[#(0)] = #(-3)::
15446 :: EXPR :: modify :: I :: v48[#(1)] = #(-1)::
15450 :: EXPR :: modify :: I :: v48[#(2)] = #(-2)::
15454 :: EXPR :: modify :: I :: v48[#(3)] = #(-1)::
15458 :: EXPR :: modify :: I :: v48[#(4)] = #(-1)::
15462 :: EXPR :: modify :: I :: v48[#(5)] = #(-1)::
15466 :: EXPR :: modify :: I :: v48[#(6)] = #(-3)::
15470 :: EXPR :: modify :: I :: v48[#(7)] = #(-2)::
15474 :: EXPR :: modify :: I :: v48[#(8)] = #(-2)::
15478 :: EXPR :: modify :: I :: v48[#(10)] = #(-1)::
15482 :: EXPR :: modify :: I :: v48[#(11)] = #(-2)::
15486 :: EXPR :: modify :: I :: v48[#(12)] = #(-1)::
15490 :: EXPR :: modify :: I :: v48[#(13)] = #(1)::
15494 :: EXPR :: modify :: I :: v48[#(14)] = #(1)::
15498 :: EXPR :: modify :: I :: v48[#(15)] = #(2)::
15502 :: EXPR :: modify :: I :: v48[#(16)] = #(5)::
15506 :: EXPR :: modify :: I :: v48[#(18)] = #(-1)::
15510 :: EXPR :: modify :: I :: v48[#(19)] = #(-1)::
15514 :: EXPR :: modify :: I :: v48[#(20)] = #(-4)::
15518 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(16)] = v48::
15522 :: NORM :: declaration :: [I :: v49 = new []::DD,15595
15523 :: EXPR :: modify :: I :: v49[#(0)] = #(-3)::
15527 :: EXPR :: modify :: I :: v49[#(1)] = #(-2)::
15531 :: EXPR :: modify :: I :: v49[#(2)] = #(-4)::
15535 :: EXPR :: modify :: I :: v49[#(3)] = #(-2)::
15539 :: EXPR :: modify :: I :: v49[#(4)] = #(-2)::
15543 :: EXPR :: modify :: I :: v49[#(5)] = #(-2)::
15547 :: EXPR :: modify :: I :: v49[#(6)] = #(-3)::
15551 :: EXPR :: modify :: I :: v49[#(7)] = #(-3)::
15555 :: EXPR :: modify :: I :: v49[#(8)] = #(-3)::
15559 :: EXPR :: modify :: I :: v49[#(9)] = #(-3)::
15563 :: EXPR :: modify :: I :: v49[#(10)] = #(-3)::
15567 :: EXPR :: modify :: I :: v49[#(11)] = #(-1)::
15571 :: EXPR :: modify :: I :: v49[#(12)] = #(-3)::
15575 :: EXPR :: modify :: I :: v49[#(13)] = #(-1)::
15579 :: EXPR :: modify :: I :: v49[#(17)] = #(6)::
15583 :: EXPR :: modify :: I :: v49[#(18)] = #(3)::
15587 :: EXPR :: modify :: I :: v49[#(19)] = #(1)::
15591 :: EXPR :: modify :: I :: v49[#(20)] = #(-4)::
15595 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(17)] = v49::
15599 :: NORM :: declaration :: [I :: v50 = new []::DD,15684
15600 :: EXPR :: modify :: I :: v50[#(0)] = #(-3)::
15604 :: EXPR :: modify :: I :: v50[#(1)] = #(-2)::
15608 :: EXPR :: modify :: I :: v50[#(2)] = #(-3)::
15612 :: EXPR :: modify :: I :: v50[#(3)] = #(-2)::
15616 :: EXPR :: modify :: I :: v50[#(4)] = #(-2)::
15620 :: EXPR :: modify :: I :: v50[#(5)] = #(-2)::
15624 :: EXPR :: modify :: I :: v50[#(6)] = #(-3)::
15628 :: EXPR :: modify :: I :: v50[#(7)] = #(-2)::
15632 :: EXPR :: modify :: I :: v50[#(8)] = #(-2)::
15636 :: EXPR :: modify :: I :: v50[#(9)] = #(-1)::
15640 :: EXPR :: modify :: I :: v50[#(10)] = #(-2)::
15644 :: EXPR :: modify :: I :: v50[#(11)] = #(2)::
15648 :: EXPR :: modify :: I :: v50[#(12)] = #(-2)::
15652 :: EXPR :: modify :: I :: v50[#(13)] = #(-1)::
15656 :: EXPR :: modify :: I :: v50[#(14)] = #(-1)::
15660 :: EXPR :: modify :: I :: v50[#(15)] = #(-1)::
15664 :: EXPR :: modify :: I :: v50[#(16)] = #(-1)::
15668 :: EXPR :: modify :: I :: v50[#(17)] = #(3)::
15672 :: EXPR :: modify :: I :: v50[#(18)] = #(7)::
15676 :: EXPR :: modify :: I :: v50[#(19)] = #(2)::
15680 :: EXPR :: modify :: I :: v50[#(20)] = #(-4)::
15684 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(18)] = v50::
15688 :: NORM :: declaration :: [I :: v51 = new []::DD,15773
15689 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
15693 :: EXPR :: modify :: I :: v51[#(1)] = #(-3)::
15697 :: EXPR :: modify :: I :: v51[#(2)] = #(-4)::
15701 :: EXPR :: modify :: I :: v51[#(3)] = #(-2)::
15705 :: EXPR :: modify :: I :: v51[#(4)] = #(-2)::
15709 :: EXPR :: modify :: I :: v51[#(5)] = #(-3)::
15713 :: EXPR :: modify :: I :: v51[#(6)] = #(-4)::
15717 :: EXPR :: modify :: I :: v51[#(7)] = #(-4)::
15721 :: EXPR :: modify :: I :: v51[#(8)] = #(-3)::
15725 :: EXPR :: modify :: I :: v51[#(9)] = #(-2)::
15729 :: EXPR :: modify :: I :: v51[#(10)] = #(-3)::
15733 :: EXPR :: modify :: I :: v51[#(11)] = #(-2)::
15737 :: EXPR :: modify :: I :: v51[#(12)] = #(-3)::
15741 :: EXPR :: modify :: I :: v51[#(13)] = #(-3)::
15745 :: EXPR :: modify :: I :: v51[#(14)] = #(-3)::
15749 :: EXPR :: modify :: I :: v51[#(15)] = #(-2)::
15753 :: EXPR :: modify :: I :: v51[#(16)] = #(-1)::
15757 :: EXPR :: modify :: I :: v51[#(17)] = #(1)::
15761 :: EXPR :: modify :: I :: v51[#(18)] = #(2)::
15765 :: EXPR :: modify :: I :: v51[#(19)] = #(11)::
15769 :: EXPR :: modify :: I :: v51[#(20)] = #(-4)::
15773 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(19)] = v51::
15777 :: NORM :: declaration :: [I :: v52 = new []::DD,15862
15778 :: EXPR :: modify :: I :: v52[#(0)] = #(-4)::
15782 :: EXPR :: modify :: I :: v52[#(1)] = #(-4)::
15786 :: EXPR :: modify :: I :: v52[#(2)] = #(-4)::
15790 :: EXPR :: modify :: I :: v52[#(3)] = #(-4)::
15794 :: EXPR :: modify :: I :: v52[#(4)] = #(-4)::
15798 :: EXPR :: modify :: I :: v52[#(5)] = #(-4)::
15802 :: EXPR :: modify :: I :: v52[#(6)] = #(-4)::
15806 :: EXPR :: modify :: I :: v52[#(7)] = #(-4)::
15810 :: EXPR :: modify :: I :: v52[#(8)] = #(-4)::
15814 :: EXPR :: modify :: I :: v52[#(9)] = #(-4)::
15818 :: EXPR :: modify :: I :: v52[#(10)] = #(-4)::
15822 :: EXPR :: modify :: I :: v52[#(11)] = #(-4)::
15826 :: EXPR :: modify :: I :: v52[#(12)] = #(-4)::
15830 :: EXPR :: modify :: I :: v52[#(13)] = #(-4)::
15834 :: EXPR :: modify :: I :: v52[#(14)] = #(-4)::
15838 :: EXPR :: modify :: I :: v52[#(15)] = #(-4)::
15842 :: EXPR :: modify :: I :: v52[#(16)] = #(-4)::
15846 :: EXPR :: modify :: I :: v52[#(17)] = #(-4)::
15850 :: EXPR :: modify :: I :: v52[#(18)] = #(-4)::
15854 :: EXPR :: modify :: I :: v52[#(19)] = #(-4)::
15858 :: EXPR :: modify :: I :: v52[#(20)] = #(1)::
15862 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(20)] = v52::
15868 :: NORM :: declaration :: [Ljava/lang/Character :: v53 = new java.lang.Character[]::DD,16037:JM,15873
15869 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(71))::JM,15873
15873 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(0)] = v56::
15877 :: CALL :: call :: Ljava/lang/Character :: v59 = valueOf(#(65))::JM,15881
15881 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(1)] = v59::
15885 :: CALL :: call :: Ljava/lang/Character :: v62 = valueOf(#(80))::JM,15889
15889 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(2)] = v62::
15893 :: CALL :: call :: Ljava/lang/Character :: v65 = valueOf(#(67))::JM,15897
15897 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(3)] = v65::
15901 :: CALL :: call :: Ljava/lang/Character :: v68 = valueOf(#(84))::JM,15905
15905 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(4)] = v68::
15909 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(83))::JM,15913
15913 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(5)] = v71::
15917 :: CALL :: call :: Ljava/lang/Character :: v74 = valueOf(#(68))::JM,15921
15921 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(6)] = v74::
15925 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(78))::JM,15929
15929 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(7)] = v77::
15933 :: CALL :: call :: Ljava/lang/Character :: v80 = valueOf(#(69))::JM,15937
15937 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(8)] = v80::
15941 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(81))::JM,15945
15945 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(9)] = v83::
15949 :: CALL :: call :: Ljava/lang/Character :: v86 = valueOf(#(75))::JM,15953
15953 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(10)] = v86::
15957 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(72))::JM,15961
15961 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(11)] = v89::
15965 :: CALL :: call :: Ljava/lang/Character :: v92 = valueOf(#(82))::JM,15969
15969 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(12)] = v92::
15973 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(86))::JM,15977
15977 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(13)] = v95::
15981 :: CALL :: call :: Ljava/lang/Character :: v98 = valueOf(#(73))::JM,15985
15985 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(14)] = v98::
15989 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(76))::JM,15993
15993 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(15)] = v101::
15997 :: CALL :: call :: Ljava/lang/Character :: v104 = valueOf(#(77))::JM,16001
16001 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(16)] = v104::
16005 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(70))::JM,16009
16009 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(17)] = v107::
16013 :: CALL :: call :: Ljava/lang/Character :: v110 = valueOf(#(89))::JM,16017
16017 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(18)] = v110::
16021 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(87))::JM,16025
16025 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(19)] = v113::
16029 :: CALL :: call :: Ljava/lang/Character :: v116 = valueOf(#(45))::JM,16033
16033 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(20)] = v116::
16037 :: EXPR :: modify :: [Ljava/lang/Character :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1 = v53::
16039 :: EXPR :: reference :: [Ljava/lang/Character :: v117 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1::JM,16041
16041 :: CALL :: call :: Ljava/util/List :: v119 = asList(v117)::JM,16041
17445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,17455:CD,17462:CD,17469
17455 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
17462 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
17469 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
17487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,17490:JM,37035:CD,17497:CD,17499:CD,17506:CD,17508:CD,17515:CD,17517:CD,17524:CD,17526:CD,17533:CD,17535:CD,17542:CD,17544:CD,17551:CD,17553:CD,17560:CD,17562:CD,17569:CD,17571:CD,17578:CD,17580:CD,17587:CD,17589:CD,17590:CD,17596:CD,17602:CD,17608:CD,17614:CD,17620:CD,17626:CD,17632:CD,17638:CD,17644:CD,17650
17490 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,17497
17497 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
17499 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,17506
17506 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
17508 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,17515
17515 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
17517 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,17524
17524 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
17526 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,17533
17533 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
17535 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,17542
17542 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
17544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,17551
17551 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
17553 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,17560
17560 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
17562 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,17569
17569 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
17571 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,17578
17578 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
17580 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,17587
17587 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
17589 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
17590 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,17592
17592 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
17596 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,17598
17598 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
17602 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,17604
17604 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
17608 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,17610
17610 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
17614 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,17616
17616 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
17620 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,17622
17622 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
17626 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,17628
17628 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
17632 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,17634
17634 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
17638 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,17640
17640 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
17644 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,17646
17646 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
17650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,17652
17652 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
17749 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,17752:CD,17755:JM,37120:JM,37117:CD,17766:CD,17768:CD,17771:CD,17782:CD,17784:CD,17785:CD,17795:CD,17797:CD,17798:CD,17804:CD,17810:CD,17818:CD,17831
17752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,17766
17755 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,37044
17766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
17768 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,17782
17771 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,37044
17782 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
17784 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,17795
17785 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,37131
17795 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
17797 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
17798 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,17800
17800 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
17804 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,17806
17806 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
17810 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,17812
17812 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
17818 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,17831
17819 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
17823 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
17827 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
17831 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,17831
17913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.FarmJobParameters.<clinit>()::CD,17916:CD,17924
17916 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(jfatcat))::CL,37262
17924 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getString(#(server.url))::CL,37274
17937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,17947:CD,17963
17947 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,37262
17963 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
18076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,18092:CD,18093:CD,18134:CD,18144:CD,18145:CD,18166:CD,18176:CD,18177:CD,18314
18092 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,18093
18093 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,18134
18094 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
18098 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
18102 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
18106 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
18110 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
18114 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
18118 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
18122 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
18126 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
18130 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
18134 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,18134
18144 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,18145
18145 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,18166
18146 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
18150 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
18154 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
18158 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
18162 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
18166 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,18166
18176 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,18177
18177 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,18314
18178 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
18182 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
18186 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
18190 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
18194 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
18198 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
18202 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
18206 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
18210 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
18214 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
18218 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
18222 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
18226 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
18230 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
18234 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
18238 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
18242 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
18246 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
18250 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
18254 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
18258 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
18262 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
18266 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
18270 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
18274 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
18278 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
18282 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
18286 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
18290 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
18294 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
18298 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
18302 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
18306 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
18310 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
18314 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,18314
18518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,18521:JM,37338:CD,18528:CD,18530:CD,18537:CD,18539:CD,18546:CD,18548:CD,18555:CD,18557:CD,18564:CD,18566:CD,18573:CD,18575:CD,18582:CD,18584:CD,18591:CD,18593:CD,18600:CD,18602:CD,18609:CD,18611:CD,18618:CD,18620:CD,18621:CD,18627:CD,18633:CD,18639:CD,18645:CD,18651:CD,18657:CD,18663:CD,18669:CD,18675:CD,18681:CD,18689:CD,18695:CD,18700:CD,18706:CD,18712:CD,18717:CD,18723:CD,18729:CD,18734:CD,18740:CD,18746:CD,18753:CD,18760:CD,18772:CD,18775
18521 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18528
18528 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
18530 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18537
18537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
18539 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18546
18546 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
18548 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18555
18555 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
18557 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18564
18564 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
18566 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18573
18573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
18575 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18582
18582 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
18584 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18591
18591 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
18593 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18600
18600 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
18602 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18609
18609 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
18611 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18618
18618 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
18620 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
18621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,18623
18623 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
18627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,18629
18629 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
18633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,18635
18635 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
18639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,18641
18641 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
18645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,18647
18647 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
18651 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,18653
18653 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
18657 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,18659
18659 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
18663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,18665
18665 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
18669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,18671
18671 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
18675 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,18677
18677 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
18681 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,18683
18683 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
18689 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,18700
18695 :: CALL :: call :: Z :: v74 = v70.add(v72)::
18700 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,18700
18706 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,18717
18712 :: CALL :: call :: Z :: v81 = v77.add(v79)::
18717 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,18717
18723 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,18734
18729 :: CALL :: call :: Z :: v88 = v84.add(v86)::
18734 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,18734
18740 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
18746 :: CALL :: call :: Z :: v95 = v91.add(v93)::
18753 :: CALL :: call :: Z :: v98 = v91.add(v96)::
18760 :: CALL :: call :: Z :: v101 = v91.add(v99)::
18772 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,18775:CL,37347
18775 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,18775
18910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AlignmentTools.<clinit>()::CD,18914
18914 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
24315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,24318:CD,24324:CD,24326:CD,24332:CD,24334:CD,24340:CD,24342:CD,24348:CD,24350:CD,24356:CD,24358:CD,24364:CD,24366:CD,24372:CD,24374:CD,24380:CD,24382:CD,24383:CD,24389:CD,24395:CD,24401:CD,24407:CD,24413:CD,24419:CD,24425
24318 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24324
24324 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
24326 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24332
24332 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
24334 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24340
24340 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
24342 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24348
24348 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
24350 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24356
24356 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
24358 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24364
24364 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
24366 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24372
24372 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
24374 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24380
24380 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
24382 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
24383 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,24385
24385 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
24389 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,24391
24391 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
24395 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,24397
24397 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
24401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,24403
24403 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
24407 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,24409
24409 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
24413 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,24415
24415 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
24419 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,24421
24421 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
24425 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,24427
24427 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
24583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,24586:JM,37548:JM,37551:CD,24594:CD,24596:CD,24606:CD,24608:CD,24618:CD,24620:CD,24630:CD,24632:CD,24642:CD,24644:CD,24654:CD,24656:CD,24666:CD,24668:CD,24678:CD,24680:CD,24690:CD,24692:CD,24702:CD,24704:CD,24714:CD,24716:CD,24726:CD,24728:CD,24738:CD,24740:CD,24750:CD,24752:CD,24762:CD,24764:CD,24774:CD,24776:CD,24786:CD,24788:CD,24798:CD,24800:CD,24810:CD,24812:CD,24822:CD,24824:CD,24834:CD,24836:CD,24846:CD,24848:CD,24858:CD,24860:CD,24870:CD,24872:CD,24882:CD,24884:CD,24894:CD,24896:CD,24906:CD,24908:CD,24918:CD,24920:CD,24928:CD,24930:CD,24938:CD,24940:CD,24941:CD,24947:CD,24953:CD,24959:CD,24965:CD,24971:CD,24977:CD,24983:CD,24989:CD,24995:CD,25001:CD,25007:CD,25013:CD,25019:CD,25025:CD,25031:CD,25037:CD,25043:CD,25049:CD,25055:CD,25061:CD,25067:CD,25073:CD,25079:CD,25085:CD,25091:CD,25097:CD,25103:CD,25109:CD,25115
24586 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24594
24594 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
24596 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24606
24606 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
24608 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24618
24618 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
24620 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24630
24630 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
24632 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24642
24642 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
24644 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24654
24654 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
24656 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24666
24666 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
24668 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24678
24678 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
24680 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24690
24690 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
24692 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24702
24702 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
24704 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24714
24714 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
24716 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24726
24726 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
24728 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24738
24738 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
24740 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24750
24750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
24752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24762
24762 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
24764 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24774
24774 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
24776 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24786
24786 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
24788 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24798
24798 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
24800 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24810
24810 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
24812 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24822
24822 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
24824 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24834
24834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
24836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24846
24846 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
24848 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24858
24858 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
24860 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24870
24870 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
24872 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24882
24882 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
24884 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24894
24894 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
24896 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24906
24906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
24908 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24918
24918 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
24920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24928
24928 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
24930 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24938
24938 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
24940 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
24941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,24943
24943 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
24947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,24949
24949 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
24953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,24955
24955 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
24959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,24961
24961 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
24965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,24967
24967 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
24971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,24973
24973 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
24977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,24979
24979 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
24983 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,24985
24985 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
24989 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,24991
24991 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
24995 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,24997
24997 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
25001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,25003
25003 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
25007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,25009
25009 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
25013 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,25015
25015 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
25019 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,25021
25021 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
25025 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,25027
25027 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
25031 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,25033
25033 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
25037 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,25039
25039 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
25043 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,25045
25045 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
25049 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,25051
25051 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
25055 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,25057
25057 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
25061 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,25063
25063 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
25067 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,25069
25069 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
25073 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,25075
25075 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
25079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,25081
25081 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
25085 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,25087
25087 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
25091 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,25093
25093 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
25097 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,25099
25099 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
25103 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,25105
25105 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
25109 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,25111
25111 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
25115 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,25117
25117 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
25376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,25386
25386 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
25428 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,25431
25431 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
25442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,25445
25445 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
25468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,25478
25478 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
25490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,25493
25493 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
25502 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,25512:CD,25516
25512 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,25516
25516 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,25516
25530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,25533:CD,25539
25533 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
25539 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
25650 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,25666:CD,25672
25666 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
25672 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,37595
25732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,25742:CD,25750:CD,25757:CD,25764:CD,25771:CD,25778:CD,25785
25742 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
25750 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
25757 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
25764 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
25771 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
25778 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
25785 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
25819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,25822:CD,25823:JM,37786:JM,37789:CD,25834:CD,25836:CD,25837:CD,25848:CD,25850:CD,25851:CD,25862:CD,25864:CD,25865:CD,25876:CD,25878:CD,25879:CD,25890:CD,25892:CD,25893:CD,25904:CD,25906:CD,25907:CD,25918:CD,25920:CD,25921:CD,25932:CD,25934:CD,25935:CD,25941:CD,25947:CD,25953:CD,25959:CD,25965:CD,25971:CD,25977
25822 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25834
25823 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
25834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
25836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25848
25837 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
25848 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
25850 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25862
25851 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
25862 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
25864 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25876
25865 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
25876 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
25878 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25890
25879 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
25890 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
25892 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25904
25893 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
25904 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
25906 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25918
25907 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
25918 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
25920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25932
25921 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
25932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
25934 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
25935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,25937
25937 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
25941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,25943
25943 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
25947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,25949
25949 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
25953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,25955
25955 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
25959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,25961
25961 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
25965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,25967
25967 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
25971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,25973
25973 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
25977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,25979
25979 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
26092 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
26153 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
26159 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
26179 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
26185 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
26209 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
26218 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
26227 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
26236 :: CALL :: call :: J :: v74 = highMask(#(;/))::
26243 :: CALL :: call :: J :: v78 = lowMask(#(-))::
26249 :: CALL :: call :: J :: v80 = highMask(#(-))::
26255 :: CALL :: call :: J :: v83 = lowMask(#(.))::
26261 :: CALL :: call :: J :: v85 = highMask(#(.))::
26270 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
26279 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
26289 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
26298 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
26313 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
26328 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
26337 :: CALL :: call :: J :: v126 = lowMask(#(%))::
26346 :: CALL :: call :: J :: v130 = highMask(#(%))::
26353 :: CALL :: call :: J :: v134 = lowMask(#([))::
26359 :: CALL :: call :: J :: v136 = highMask(#([))::
26367 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
26376 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
26386 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
26395 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
26402 :: NORM :: declaration :: [C :: v157 = new []::
26403 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
26407 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
26411 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
26415 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
26419 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
26423 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
26427 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
26431 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
26435 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
26439 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
26443 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
26447 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
26451 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
26455 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
26459 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
26463 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
26778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,26782:CD,26797
26782 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
26797 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
26812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,26815:CD,26821:CD,26823:CD,26829:CD,26831:CD,26837:CD,26839:CD,26845:CD,26847:CD,26853:CD,26855:CD,26861:CD,26863:CD,26869:CD,26871:CD,26877:CD,26879:CD,26885:CD,26887:CD,26893:CD,26895:CD,26901:CD,26903:CD,26909:CD,26911:CD,26917:CD,26919:CD,26920:CD,26926:CD,26932:CD,26938:CD,26944:CD,26950:CD,26956:CD,26962:CD,26968:CD,26974:CD,26980:CD,26986:CD,26992
26815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26821
26821 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
26823 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26829
26829 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
26831 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26837
26837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
26839 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26845
26845 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
26847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26853
26853 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
26855 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26861
26861 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
26863 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26869
26869 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
26871 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26877
26877 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
26879 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26885
26885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
26887 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26893
26893 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
26895 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26901
26901 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
26903 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26909
26909 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
26911 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26917
26917 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
26919 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
26920 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,26922
26922 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
26926 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,26928
26928 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
26932 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,26934
26934 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
26938 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,26940
26940 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
26944 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,26946
26946 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
26950 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,26952
26952 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
26956 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,26958
26958 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
26962 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,26964
26964 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
26968 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,26970
26970 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
26974 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,26976
26976 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
26980 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,26982
26982 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
26986 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,26988
26988 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
26992 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,26994
26994 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
27236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,37831
27310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,27313:JM,37856:JM,37859:JM,37853:CD,27322:CD,27324:CD,27333:CD,27335:CD,27344:CD,27346:CD,27355:CD,27357:CD,27366:CD,27368:CD,27377:CD,27379:CD,27388:CD,27390:CD,27399:CD,27401:CD,27410:CD,27412:CD,27421:CD,27423:CD,27432:CD,27434:CD,27435:CD,27441:CD,27447:CD,27453:CD,27459:CD,27465:CD,27471:CD,27477:CD,27483:CD,27489:CD,27495:CD,27503
27313 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27322
27322 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
27324 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27333
27333 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
27335 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27344
27344 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
27346 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27355
27355 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
27357 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27366
27366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
27368 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27377
27377 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
27379 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27388
27388 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
27390 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27399
27399 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
27401 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27410
27410 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
27412 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27421
27421 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
27423 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27432
27432 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
27434 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
27435 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,27437
27437 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
27441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,27443
27443 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
27447 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,27449
27449 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
27453 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,27455
27455 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
27459 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,27461
27461 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
27465 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,27467
27467 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
27471 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,27473
27473 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
27477 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,27479
27479 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
27483 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,27485
27485 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
27489 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,27491
27491 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
27495 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,27497
27497 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
27503 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,37872
27665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,27675
27675 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
27791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,27794:CD,27802:CD,27807:CD,27815:CD,27820:CD,27828:CD,27833
27794 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
27802 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
27803 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
27807 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
27815 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
27816 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
27820 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
27828 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
27829 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
27833 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
27889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,27905:CD,27912:CD,27916:CD,27918:CD,27920:CD,27925:CD,27927:CD,27932:CD,27934:CD,27939:CD,27941
27905 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
27912 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,27916
27916 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
27918 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27920 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
27925 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27927 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
27932 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27934 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
27939 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27941 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
27964 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,27967:CD,27973:CD,27975:CD,27981:CD,27983:CD,27984:CD,27990
27967 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27973
27973 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
27975 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27981
27981 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
27983 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
27984 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,27986
27986 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
27990 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,27992
27992 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
34112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,34115:CD,34121:CD,34127:CD,34131:CD,34135:CD,34141:CD,34145:CD,34151:CD,34155:CD,34161:CD,34165:CD,34171:CD,34175:CD,34181:CD,34185:CD,34191:CD,34195:CD,34201:CD,34205:CD,34211:CD,34215:CD,34221:CD,34225:CD,34231:CD,34235:CD,34241:CD,34245:CD,34251:CD,34255:CD,34261:CD,34265:CD,34271:CD,34275:CD,34281:CD,34285:CD,34291:CD,34295:CD,34301:CD,34305:CD,34311:CD,34315:CD,34321:CD,34325:CD,34331:CD,34335:CD,34341:CD,34345:CD,34351:CD,34355:CD,34359:CD,34361:CD,34365:CD,34369:CD,34375:CD,34379:CD,34385:CD,34389:CD,34395:CD,34399:CD,34405:CD,34409:CD,34415:CD,34419:CD,34425:CD,34429:CD,34435:CD,34439:CD,34445:CD,34449:CD,34455:CD,34459:CD,34465:CD,34469:CD,34475:CD,34479:CD,34485:CD,34489:CD,34495:CD,34499:CD,34505:CD,34509:CD,34515:CD,34519:CD,34525:CD,34529:CD,34535:CD,34539:CD,34545:CD,34549:CD,34555:CD,34559:CD,34565:CD,34569:CD,34575:CD,34579:CD,34585:CD,34589:CD,34595:CD,34599:CD,34603:CD,34609:CD,34613:CD,34619:CD,34623:CD,34629:CD,34633:CD,34639:CD,34643:CD,34649:CD,34653:CD,34659:CD,34663:CD,34667:CD,34669:CD,34673:CD,34677:CD,34683:CD,34687:CD,34693:CD,34697:CD,34703:CD,34707:CD,34713:CD,34717:CD,34723:CD,34727:CD,34733:CD,34737:CD,34743:CD,34747:CD,34749:CD,34753:CD,34758:CD,34760:CD,34764
34115 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
34121 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
34127 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,34355:JM,34359:JM,34351
34131 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
34135 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
34141 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
34145 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
34151 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
34155 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
34161 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
34165 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
34171 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
34175 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
34181 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
34185 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
34191 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
34195 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
34201 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
34205 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
34211 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
34215 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
34221 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
34225 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
34231 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
34235 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
34241 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
34245 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
34251 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
34255 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
34261 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
34265 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
34271 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
34275 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
34281 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
34285 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
34291 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
34295 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
34301 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
34305 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
34311 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
34315 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
34321 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
34325 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
34331 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
34335 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
34341 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
34345 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
34351 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,34355:JM,34359:JM,34351
34355 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,34355:JM,34359
34359 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
34361 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,34585:JM,34589
34365 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
34369 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
34375 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
34379 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
34385 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
34389 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
34395 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
34399 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
34405 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
34409 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
34415 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
34419 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
34425 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
34429 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
34435 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
34439 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
34445 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
34449 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
34455 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
34459 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
34465 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
34469 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
34475 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
34479 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
34485 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
34489 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
34495 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
34499 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
34505 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
34509 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
34515 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
34519 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
34525 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
34529 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
34535 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
34539 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
34545 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
34549 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
34555 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
34559 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
34565 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
34569 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
34575 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
34579 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
34585 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,34585:JM,34589
34589 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,34589
34595 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,34659:JM,34663:JM,34667
34599 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
34603 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
34609 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
34613 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
34619 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
34623 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
34629 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
34633 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
34639 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
34643 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
34649 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
34653 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
34659 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,34659:JM,34663:JM,34667
34663 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,34663:JM,34667
34667 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
34669 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,34737:JM,34733
34673 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
34677 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
34683 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
34687 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
34693 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
34697 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
34703 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
34707 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
34713 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
34717 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
34723 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
34727 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
34733 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,34737:JM,34733
34737 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,34737
34743 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
34747 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
34749 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
34753 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
34758 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
34760 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
34764 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
35156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,35159:JM,50401:JM,50465:JM,45800:JM,45804:JM,52046:JM,50415:JM,50479:JM,45808:JM,50451:JM,45812:JM,45816:JM,50459:JM,45820:JM,38073:CD,35174:CD,35176:JM,45856:JM,45860:JM,45848:JM,45852:CD,35191:CD,35193:CD,35203:CD,35205:CD,35206:CD,35212:CD,35218
35159 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35174
35174 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
35176 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35191
35191 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
35193 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35203
35203 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
35205 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
35206 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,35208
35208 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
35212 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,35214
35214 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
35218 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,35220
35220 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
35344 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,35347:CD,35366
35347 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
35348 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
35352 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
35356 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
35360 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
35366 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
35367 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
35371 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
35375 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
35379 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
36131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.process(java.lang.String[])::CD,36136:CD,36290:CD,36291:CD,36481:JM,36226
36136 :: CALL :: call :: V :: printAboutMe()::CL,38102
36139 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $argv [v42]::JM,36148:JM,36154:JM,36160:JM,36177:JM,36183
36143 :: CALL :: call :: Z :: v10 = v7.equalsIgnoreCase(#(-h))::JM,36148
36148 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 39::CD,36149:CD,36154
36149 :: CALL :: call :: Z :: v13 = v7.equalsIgnoreCase(#(-help))::JM,36154
36154 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 39::CD,36155:CD,36160
36155 :: CALL :: call :: Z :: v16 = v7.equalsIgnoreCase(#(--help))::JM,36160
36160 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 53::CD,36172:CD,36177
36172 :: CALL :: call :: Z :: v19 = v7.equalsIgnoreCase(#(-version))::JM,36177
36177 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 69::CD,36178:CD,36183
36178 :: CALL :: call :: Z :: v22 = v7.equalsIgnoreCase(#(--version))::JM,36183
36183 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 121::CD,36226:CD,36227:CD,36228:CD,36234:CD,36255:CD,36289:CD,36290:CD,36291:CD,36478:CD,36479:CD,36481
36226 :: EXPR :: assign :: I :: v24 = p1 $argv .length::DD,36227
36227 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v24 - #(1)::CF,36228
36228 :: PRED :: IF :: Z :: if (v42 >= v26) goto 136::CF,36478:CD,36229
36229 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v42 + #(1)::
36230 :: EXPR :: reference :: Ljava/lang/Object :: v28 = p1 $argv [v27]::DD,36478
36234 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 155::CD,36235:CD,36240:CD,36242:CD,36479
36235 :: CALL :: call :: Z :: v32 = v29.startsWith(#(-))::JM,36240
36240 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 155::CD,36242:CD,36479
36242 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v42 + #(1)::DD,36479
36255 :: CALL :: call :: [Ljava/lang/String :: v40 = configureBean(v38, v37)::CL,39147
36289 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v34 + #(1)::DD,36481
36290 :: EXPR :: assign :: I :: v6 = p1 $argv .length::CF,36291
36291 :: PRED :: IF :: Z :: if (v42 < v6) goto 10::CD,36143:CD,36148:CD,36295:CD,36299:CD,36315:CD,36319:CD,36335:CD,36339:CD,36365:CD,36369:CD,36399:CD,36406:CD,36410
36295 :: CALL :: call :: Ljava/lang/String :: v45 = v43.getPdbFilePath()::JM,36299:CL,40635
36299 :: PRED :: IF :: Z :: if (v45 == #(null)) goto 252::CD,36307
36307 :: CALL :: call :: Ljava/lang/String :: v51 = setProperty(#(PDB_DIR), v49)::
36315 :: CALL :: call :: Ljava/lang/String :: v54 = v52.getCacheFilePath()::JM,36319:CL,40686
36319 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 275::CD,36327
36327 :: CALL :: call :: Ljava/lang/String :: v60 = setProperty(#(PDB_CACHE_DIR), v58)::
36335 :: CALL :: call :: Z :: v63 = v61.isShowMenu()::JM,36339:CL,40695
36339 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 314::CD,36342:CD,36346
36342 :: CALL :: call :: V :: v64.println(#(showing menu...))::
36346 :: CALL :: call :: V :: showAlignmentGUI()::CL,40704
36365 :: CALL :: call :: Ljava/lang/String :: v78 = v76.getShowDBresult()::JM,36369:CL,40780
36369 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 357::CD,36372:CD,36379
36372 :: CALL :: call :: V :: v79.println(#(showing DB results...))::
36379 :: CALL :: call :: V :: showDBResults(v82)::CL,40789
36399 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getPdb1()::JM,36410:CL,40886
36406 :: CALL :: call :: Ljava/lang/String :: v97 = v95.getFile1()::JM,36411:CL,40895
36410 :: PRED :: IF :: Z :: if (v94 != #(null)) goto 381::CD,36411:CD,36412
36411 :: PRED :: IF :: Z :: if (v97 == #(null)) goto 386::CD,36412:CD,36419:CD,36423
36412 :: CALL :: call :: V :: p0 $this .runPairwise()::CL,40904
36419 :: CALL :: call :: Ljava/lang/String :: v100 = v98.getAlignPairs()::JM,36423:CL,41446
36423 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 401::CD,36424:CD,36431:CD,36435
36424 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,41455
36431 :: CALL :: call :: Ljava/lang/String :: v103 = v101.getSearchFile()::JM,36435:CL,41707
36435 :: PRED :: IF :: Z :: if (v103 == #(null)) goto 433::CD,36436
36436 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,41455
36478 :: EXPR :: assign :: null :: PHI v29 = #(null), v28::DD,36234:JM,36240
36479 :: EXPR :: assign :: null :: PHI v34 = v42, v33::DD,36289
36481 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,36228:DD,36229:DD,36242:DD,36291:DD,36479:CF,36290
36881 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
36884 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
36887 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
36890 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
36893 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
36896 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
36899 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
36902 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
36905 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
36908 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
36911 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
36914 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
36917 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
36920 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
36923 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
36960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,36961:CD,36963:CD,36965:CD,36966:CD,36974
36961 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,7120
36963 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,36965
36965 :: EXPR :: assign :: I :: v4 = v2.length::DD,36966
36966 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,36974
36974 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,36961
36999 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37035 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
37044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,37048:CD,37052:CD,37055:CD,37076:CD,37082
37048 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
37052 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,37055:CL,44829
37055 :: EXPR :: assign :: I :: v7 = v6.length::DD,37076
37064 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,37069
37069 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,37070:CF,37075
37070 :: CALL :: call :: Z :: v14 = v3.add(v9)::
37075 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,37082
37076 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,37064:CD,37069:CD,37075:CD,37082
37082 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,37075:DD,37076
37117 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37120 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
37131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,37134:CD,37138:CD,37141:CD,37177:CD,37183
37134 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
37138 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,37141:CL,44829
37141 :: EXPR :: assign :: I :: v6 = v5.length::DD,37177
37153 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,37158
37158 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,37165:CD,37170:CF,37176
37165 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,37170
37170 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,37171:CF,37176
37171 :: CALL :: call :: Z :: v20 = v2.add(v8)::
37176 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,37183
37177 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,37153:CD,37158:CD,37176:CD,37183
37183 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,37176:DD,37177
37262 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,45137:JM,45129
37274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::CE,37275:CD,37282:CD,37287:CD,37294:CD,37298:CD,37299:CD,37307:CD,37312:CD,37317:CD,37321
37275 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::
37282 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getString(p1 $key )::JM,37287
37287 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,37275
37294 :: CALL :: call :: V :: v8.println(v10)::
37298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::JM,37321
37299 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(#(33))::
37307 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v12.append(p1 $key )::JM,37321
37312 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(#(33))::JM,37321
37317 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::JM,37321
37321 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,37275
37338 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
37347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,37348:CD,37350:CD,37352:CD,37353:CD,37361
37348 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,18775
37350 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,37352
37352 :: EXPR :: assign :: I :: v4 = v2.length::DD,37353
37353 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,37361
37361 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,37348
37548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
37551 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
37595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,37599:CD,37603:CD,37608:CD,37618:CD,37622:CD,37629:CD,37634:CD,37638:CD,37643:CD,37651:CD,37657:CD,37662:CD,37666:CD,37671:CD,37679:CD,37682:CD,37688:CD,37692:CD,37734:CD,37738:CD,37740:CD,37741:CD,37742
37599 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,37608
37603 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,37608
37608 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,37618:CD,37615
37615 :: CALL :: call :: V :: exit(#(1))::
37618 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,37742
37622 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,37742:CL,45713
37629 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
37634 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
37638 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
37643 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
37651 :: CALL :: call :: V :: exit(#(1))::
37657 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
37662 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
37666 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
37671 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
37679 :: CALL :: call :: V :: exit(#(1))::
37682 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
37688 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,37701:JM,37738
37692 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,37701:JM,37738
37697 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,37701:JM,37738
37701 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,37717:JM,37721
37711 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
37717 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,37717:JM,37721
37721 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,37728:JM,37701:JM,37738
37728 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
37734 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,37701:JM,37738
37738 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,37697:CD,37701:CD,37711:CD,37717:CD,37721:CD,37734:JM,37738
37740 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
37741 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
37742 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,37682:JM,37701:JM,37738
37786 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37789 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
37822 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
37831 :: CALL :: call :: V :: initPath()::CL,45735
37853 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37856 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
37859 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
37872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,37875:CD,37879:CD,37882:CD,37899:CD,37901
37875 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
37879 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,37882:CL,45764
37882 :: EXPR :: assign :: I :: v6 = v5.length::DD,37899
37892 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
37898 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,37901
37899 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,37892:CD,37898:CD,37901
37901 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,37898:DD,37899
38048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,38049:CD,38055:CD,38059
38049 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,117497:JM,117453
38052 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,38055:JM,38059
38055 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,38055:JM,38059
38059 :: NORM :: compound :: Ljava/util/List :: return v5::DD,38049
38073 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
38102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.printAboutMe()::CD,38105:CD,38109:CD,38114:CD,38121:CD,38126:CD,38131:CD,38136:CD,38141:CD,38145:CD,38150
38105 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(about))::CL,37262
38109 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getString(#(project_version))::CL,37274
38114 :: CALL :: call :: Ljava/lang/String :: v10 = v4.getString(#(build))::CL,37274
38121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
38126 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v7)::
38131 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#( ))::
38136 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v10)::
38141 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
38145 :: CALL :: call :: V :: v11.println(v23)::
38150 :: CALL :: call :: V :: v25.printStackTrace()::
39121 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeSideChainUserArgumentProcessor.getAlgorithm()::JM,53120:JM,53124:JM,53110:JM,53128:JM,46138:JM,53114:JM,53131:JM,50782
39131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeSideChainMain.getAlgorithmName()::CF,39132:CD,39135
39132 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.CeSideChainMain.getAlgorithmName()::
39135 :: NORM :: compound :: Ljava/lang/String :: return #(jCE-sidechain)::CF,39132
39147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CliTools.configureBean(java.lang.Object,java.lang.String[])::CD,39152:CD,39156:CD,39162:CD,39167:CD,39171:CD,39176:CD,39185:CD,39189:CD,39193:CD,39210:CD,39211:CD,39215:CD,39219:CD,39276:CD,39281:CD,39286:CD,39291:CD,39296:CD,39301:CD,39321:CD,39326:CD,39331:CD,39336:CD,39346:CD,39351:CD,39356:CD,39361:CD,39398:CD,39403:CD,39408:CD,39413:CD,39439:CD,39444:CD,39449:CD,39454:CD,39514:CD,39519:CD,39524:CD,39529:CD,39601:CD,39606:CD,39611:CD,39616:CD,39665:CD,39670:CD,39675:CD,39680:CD,39734:CD,39739:CD,39744:CD,39749:CD,39798:CD,39803:CD,39808:CD,39813:CD,39838:CD,39842:CD,39848:CD,39852:CD,39857:CD,39862:CD,39867:CD,39871:CD,39876:CD,39881:CD,39891:CD,39892:CD,39896:CD,39901:CD,39906:CD,39909:CD,39982:CD,39987:CD,39991:CD,39996:CD,40022:CD,40027:CD,40031:CD,40036:CD,40041:CD,40051:CD,40056:CD,40060:CD,40065:CD,40070:CD,40091:CD,40092:CD,40093:CD,40097:CD,40147:CD,40152:CD,40156:CD,40161:CD,40166:CD,40207:CD,40212:CD,40216:CD,40221:CD,40226:CD,40236:CD,40241:CD,40245:CD,40250:CD,40255:CD,40264:CD,40268:CD,40269:CD,40273:CD,40274:CD,40281:CD,40294:CD,40297:CD,40310
39152 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $bean .getClass()::JM,39152:JM,39156:JM,39189:JM,39193:JM,40091
39156 :: CALL :: call :: Ljava/beans/BeanInfo :: v7 = getBeanInfo(v5)::JM,39156:JM,39189:JM,39193
39162 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
39167 :: CALL :: call :: Ljava/lang/String :: v14 = v8.getMessage()::
39171 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
39176 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
39185 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::
39189 :: CALL :: call :: [Ljava/beans/PropertyDescriptor :: v23 = v7.getPropertyDescriptors()::JM,39189:JM,39193
39193 :: EXPR :: assign :: I :: v24 = v23.length::DD,39210
39203 :: CALL :: call :: Ljava/lang/Object :: v30 = v20.put(v28, v26)::
39209 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,40294
39210 :: PRED :: IF :: Z :: if (v33 < v24) goto 69::CF,39211:CD,39203:CD,39209:CD,40294
39211 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::JM,40273
39215 :: NORM :: declaration :: Ljava/util/HashMap :: v36 = new java.util.HashMap::JM,40106:JM,40268
39219 :: NORM :: declaration :: Ljava/util/HashSet :: v38 = new java.util.HashSet::
39224 :: EXPR :: reference :: Ljava/lang/Object :: v41 = p2 $args [v232]::DD,39228:JM,39234:JM,39240:JM,39264
39228 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 151::CD,39230:CD,39234:CD,40307
39230 :: CALL :: call :: I :: v44 = v41.length()::JM,39234
39234 :: PRED :: IF :: Z :: if (v44 <= #(0)) goto 1538::CD,39235:CD,39240:CD,40085:CD,40307
39235 :: CALL :: call :: C :: v46 = v41.charAt(#(0))::JM,39240
39240 :: PRED :: IF :: Z :: if (v46 != #(45)) goto 1538::CD,39241:CD,39246:CD,39251:CD,39252:CD,39951:CD,40085:CD,40300:CD,40301:CD,40302:CD,40303:CD,40307
39241 :: CALL :: call :: Ljava/lang/String :: v49 = v41.substring(#(1))::
39246 :: CALL :: call :: Ljava/lang/Object :: v51 = v20.get(v49)::JM,39251
39251 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,39252:JM,39378:JM,39379:JM,40296:JM,39370:JM,39374:DD,40301
39252 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 361::CD,39259:CD,39264:CD,39268:CD,39273:CD,39317:CD,39370:CD,39374:CD,39378:CD,39383:CD,39385:CD,40295:CD,40296:CD,40300:CD,40301:CD,40302:CD,40303:JM,39379
39259 :: CALL :: call :: Ljava/lang/String :: v58 = v41.substring(#(3))::JM,39264
39264 :: CALL :: call :: Ljava/lang/String :: v60 = decapitalize(v58)::JM,39264
39268 :: CALL :: call :: Ljava/lang/Object :: v62 = v20.get(v60)::JM,39273
39273 :: EXPR :: assign :: Ljava/lang/Object :: v63 = CHECKCAST v62::DD,40301
39276 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v510 = new java.lang.StringBuilder::
39281 :: CALL :: call :: Ljava/lang/String :: v513 = v41.substring(#(1))::
39286 :: CALL :: call :: Ljava/lang/StringBuilder :: v515 = v510.append(v513)::
39291 :: CALL :: call :: Ljava/lang/StringBuilder :: v518 = v515.append(#( or ))::
39296 :: CALL :: call :: Ljava/lang/StringBuilder :: v520 = v518.append(v60)::
39301 :: CALL :: call :: Ljava/lang/String :: v522 = v520.toString()::
39317 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = java.lang.Boolean.FALSE::DD,40303
39321 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v461 = new java.lang.StringBuilder::
39326 :: CALL :: call :: Ljava/lang/StringBuilder :: v465 = v461.append(v41)::
39331 :: CALL :: call :: Ljava/lang/StringBuilder :: v468 = v465.append(#( does not refer to a ...))::
39336 :: CALL :: call :: Ljava/lang/String :: v470 = v468.toString()::
39346 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v450 = new java.lang.StringBuilder::
39351 :: CALL :: call :: Ljava/lang/String :: v454 = v41.substring(#(1))::
39356 :: CALL :: call :: Ljava/lang/StringBuilder :: v456 = v450.append(v454)::
39361 :: CALL :: call :: Ljava/lang/String :: v458 = v456.toString()::
39370 :: CALL :: call :: Ljava/lang/Class :: v69 = v52.getPropertyType()::JM,39378:JM,39379:JM,40296:JM,39370:JM,39374
39374 :: CALL :: call :: Z :: v71 = v69.isArray()::JM,39378:JM,39379:JM,40296:JM,39374
39378 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 386::CF,40295:CD,39379:CD,40296:JM,39378:JM,39374
39379 :: CALL :: call :: Ljava/lang/Class :: v73 = v69.getComponentType()::JM,39378:JM,39379:JM,40296:JM,39374
39383 :: EXPR :: reference :: Ljava/lang/Class :: v76 = java.lang.Integer.TYPE::CF,39385
39385 :: PRED :: IF :: Z :: if (v75 != v76) goto 445::CF,39386:CD,39387:CD,39422:CD,39424:CD,40300:CD,40301:CD,40302:CD,40303
39386 :: NORM :: declaration :: Ljava/lang/Integer :: v77 = new java.lang.Integer::JM,39386:DD,40303:CF,39387
39387 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v232 + #(1)::DD,40300
39388 :: EXPR :: reference :: Ljava/lang/Object :: v79 = p2 $args [v78]::JM,39386
39398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v439 = new java.lang.StringBuilder::
39403 :: CALL :: call :: Ljava/lang/StringBuilder :: v442 = v439.append(v41)::
39408 :: CALL :: call :: Ljava/lang/StringBuilder :: v445 = v442.append(#( requires an integer ...))::
39413 :: CALL :: call :: Ljava/lang/String :: v447 = v445.toString()::
39422 :: EXPR :: reference :: Ljava/lang/Class :: v81 = java.lang.Double.TYPE::CF,39424
39424 :: PRED :: IF :: Z :: if (v75 == v81) goto 458::CF,39427:CD,39425:CD,39426:CD,39428:CD,40300:CD,40301:CD,40302:CD,40303
39425 :: EXPR :: assign :: Ljava/lang/Class :: v82 = metadata <Application,Ljava/lang/Double>-><Primordial,Ljava/lang/Class>::CF,39426
39426 :: PRED :: IF :: Z :: if (v75 != v82) goto 511::CF,39427:CD,39428:CD,39463:CD,39464:CD,40300:CD,40301:CD,40302:CD,40303
39427 :: NORM :: declaration :: Ljava/lang/Double :: v83 = new java.lang.Double::DD,40303:CF,39428
39428 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v232 + #(1)::DD,40300
39429 :: EXPR :: reference :: Ljava/lang/Object :: v85 = p2 $args [v84]::
39439 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v427 = new java.lang.StringBuilder::
39444 :: CALL :: call :: Ljava/lang/StringBuilder :: v430 = v427.append(v41)::
39449 :: CALL :: call :: Ljava/lang/StringBuilder :: v433 = v430.append(#( requires a numerical...))::
39454 :: CALL :: call :: Ljava/lang/String :: v435 = v433.toString()::
39463 :: EXPR :: assign :: Ljava/lang/Class :: v87 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::CF,39464
39464 :: PRED :: IF :: Z :: if (v75 != v87) goto 530::CD,39465:CD,39471:CD,39473:CD,40300:CD,40301:CD,40302:CD,40303
39465 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v232 + #(1)::DD,40300
39466 :: EXPR :: reference :: Ljava/lang/Object :: v89 = p2 $args [v88]::DD,40303
39471 :: EXPR :: reference :: Ljava/lang/Class :: v90 = java.lang.Boolean.TYPE::CF,39473
39473 :: PRED :: IF :: Z :: if (v75 != v90) goto 644::CF,39538:CD,39474:CD,39479:CD,39539:CD,39544
39474 :: EXPR :: assign :: Ljava/lang/Object :: v91 = v232 + #(1)::DD,40300
39475 :: EXPR :: reference :: Ljava/lang/Object :: v92 = p2 $args [v91]::DD,39479:JM,39488:JM,39494
39479 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 562::CD,39480:CD,39483:CD,39488:CD,40300:CD,40301:CD,40302:CD,40303
39480 :: EXPR :: reference :: Ljava/lang/Boolean :: v93 = java.lang.Boolean.TRUE::DD,40303
39483 :: CALL :: call :: Z :: v96 = v92.equalsIgnoreCase(#(true))::JM,39488
39488 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 578::CD,39489:CD,39494:CD,39495:CD,40300:CD,40301:CD,40302:CD,40303
39489 :: CALL :: call :: Z :: v99 = v92.equalsIgnoreCase(#(t))::JM,39494
39494 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 590::CD,39495:CD,39510:CD,40300:CD,40301:CD,40302:CD,40303
39495 :: EXPR :: reference :: Ljava/lang/Boolean :: v100 = java.lang.Boolean.TRUE::DD,40303
39510 :: EXPR :: reference :: Ljava/lang/Boolean :: v107 = java.lang.Boolean.FALSE::DD,40303
39514 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v415 = new java.lang.StringBuilder::
39519 :: CALL :: call :: Ljava/lang/StringBuilder :: v418 = v415.append(v41)::
39524 :: CALL :: call :: Ljava/lang/StringBuilder :: v421 = v418.append(#( requires a boolean p...))::
39529 :: CALL :: call :: Ljava/lang/String :: v423 = v421.toString()::
39538 :: EXPR :: assign :: Ljava/lang/Class :: v108 = metadata <Application,Ljava/io/File>-><Primordial,Ljava/lang/Class>::JM,39539:JM,39544
39539 :: CALL :: call :: Z :: v110 = v108.isAssignableFrom(v75)::JM,39539:JM,39544
39544 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 673::CF,39556:CF,39545:CD,39546:CD,39557:CD,39562:CD,40300:CD,40301:CD,40302:CD,40303
39545 :: NORM :: declaration :: Ljava/io/File :: v111 = new java.io.File::DD,40303:CF,39546
39546 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v232 + #(1)::DD,40300
39547 :: EXPR :: reference :: Ljava/lang/Object :: v113 = p2 $args [v112]::
39556 :: EXPR :: assign :: Ljava/lang/Class :: v115 = metadata <Application,Ljava/io/Reader>-><Primordial,Ljava/lang/Class>::JM,39557:JM,39562
39557 :: CALL :: call :: Z :: v117 = v115.isAssignableFrom(v75)::JM,39557:JM,39562
39562 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 788::CF,39625:CD,39563:CD,39568:CD,39573:CD,39626:CD,39631
39563 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v232 + #(1)::DD,40300
39564 :: EXPR :: reference :: Ljava/lang/Object :: v119 = p2 $args [v118]::JM,39573
39568 :: CALL :: call :: Z :: v122 = #(-).equals(v119)::JM,39573
39573 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 735::CF,39589:CD,39581:CD,39590:CD,40300:CD,40301:CD,40302:CD,40303
39581 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v123 = new java.io.InputStreamReader::DD,40303
39589 :: NORM :: declaration :: Ljava/io/FileReader :: v126 = new java.io.FileReader::DD,40303:CF,39590
39590 :: NORM :: declaration :: Ljava/io/File :: v127 = new java.io.File::
39601 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v403 = new java.lang.StringBuilder::
39606 :: CALL :: call :: Ljava/lang/StringBuilder :: v406 = v403.append(v119)::
39611 :: CALL :: call :: Ljava/lang/StringBuilder :: v408 = v406.append(#( for input))::
39616 :: CALL :: call :: Ljava/lang/String :: v410 = v408.toString()::
39625 :: EXPR :: assign :: Ljava/lang/Class :: v130 = metadata <Application,Ljava/io/InputStream>-><Primordial,Ljava/lang/Class>::JM,39626:JM,39631
39626 :: CALL :: call :: Z :: v132 = v130.isAssignableFrom(v75)::JM,39626:JM,39631
39631 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 896::CF,39689:CD,39632:CD,39637:CD,39642:CD,39690:CD,39695
39632 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v232 + #(1)::DD,40300
39633 :: EXPR :: reference :: Ljava/lang/Object :: v134 = p2 $args [v133]::JM,39642
39637 :: CALL :: call :: Z :: v136 = #(-).equals(v134)::JM,39642
39642 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 843::CF,39653:CD,39650:CD,39654:CD,40300:CD,40301:CD,40302:CD,40303
39650 :: EXPR :: reference :: Ljava/io/InputStream :: v137 = java.lang.System.in::DD,40303
39653 :: NORM :: declaration :: Ljava/io/FileInputStream :: v138 = new java.io.FileInputStream::DD,40303:CF,39654
39654 :: NORM :: declaration :: Ljava/io/File :: v139 = new java.io.File::
39665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v388 = new java.lang.StringBuilder::
39670 :: CALL :: call :: Ljava/lang/StringBuilder :: v391 = v388.append(v134)::
39675 :: CALL :: call :: Ljava/lang/StringBuilder :: v394 = v391.append(#( for input))::
39680 :: CALL :: call :: Ljava/lang/String :: v396 = v394.toString()::
39689 :: EXPR :: assign :: Ljava/lang/Class :: v142 = metadata <Application,Ljava/io/Writer>-><Primordial,Ljava/lang/Class>::JM,39690:JM,39695
39690 :: CALL :: call :: Z :: v144 = v142.isAssignableFrom(v75)::JM,39690:JM,39695
39695 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 1011::CF,39758:CD,39696:CD,39701:CD,39706:CD,39759:CD,39764
39696 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v232 + #(1)::DD,40300
39697 :: EXPR :: reference :: Ljava/lang/Object :: v146 = p2 $args [v145]::JM,39706
39701 :: CALL :: call :: Z :: v148 = #(-).equals(v146)::JM,39706
39706 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 958::CF,39722:CD,39714:CD,39723:CD,40300:CD,40301:CD,40302:CD,40303
39714 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v149 = new java.io.OutputStreamWriter::DD,40303
39722 :: NORM :: declaration :: Ljava/io/FileWriter :: v152 = new java.io.FileWriter::DD,40303:CF,39723
39723 :: NORM :: declaration :: Ljava/io/File :: v153 = new java.io.File::
39734 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v375 = new java.lang.StringBuilder::
39739 :: CALL :: call :: Ljava/lang/StringBuilder :: v378 = v375.append(v146)::
39744 :: CALL :: call :: Ljava/lang/StringBuilder :: v380 = v378.append(#( for output))::
39749 :: CALL :: call :: Ljava/lang/String :: v382 = v380.toString()::
39758 :: EXPR :: assign :: Ljava/lang/Class :: v156 = metadata <Application,Ljava/io/OutputStream>-><Primordial,Ljava/lang/Class>::JM,39764:JM,39759
39759 :: CALL :: call :: Z :: v158 = v156.isAssignableFrom(v75)::JM,39764:JM,39759
39764 :: PRED :: IF :: Z :: if (v158 == #(0)) goto 1121::CD,39765:CD,39770:CD,39775:CD,39822:CD,39826
39765 :: EXPR :: assign :: Ljava/lang/Object :: v159 = v232 + #(1)::DD,40300
39766 :: EXPR :: reference :: Ljava/lang/Object :: v160 = p2 $args [v159]::JM,39775
39770 :: CALL :: call :: Z :: v162 = #(-).equals(v160)::JM,39775
39775 :: PRED :: IF :: Z :: if (v162 == #(0)) goto 1066::CF,39786:CD,39783:CD,39787:CD,40300:CD,40301:CD,40302:CD,40303
39783 :: EXPR :: reference :: Ljava/io/PrintStream :: v163 = java.lang.System.out::DD,40303
39786 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v164 = new java.io.FileOutputStream::DD,40303:CF,39787
39787 :: NORM :: declaration :: Ljava/io/File :: v165 = new java.io.File::
39798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v359 = new java.lang.StringBuilder::
39803 :: CALL :: call :: Ljava/lang/StringBuilder :: v363 = v359.append(v160)::
39808 :: CALL :: call :: Ljava/lang/StringBuilder :: v366 = v363.append(#( for output))::
39813 :: CALL :: call :: Ljava/lang/String :: v368 = v366.toString()::
39822 :: CALL :: call :: Z :: v169 = v75.isEnum()::JM,39826:JM,39822
39826 :: PRED :: IF :: Z :: if (v169 == #(0)) goto 1287::CD,39827:CD,39832:CD,39920:CD,39925:CD,39930:CD,39935:CD,39940:CD,39944:CD,39948:CD,40300:CD,40301:CD,40302:CD,40303
39827 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v232 + #(1)::DD,40300
39832 :: CALL :: call :: Ljava/lang/Enum :: v173 = valueOf(v75, v171)::JM,40303
39838 :: CALL :: call :: Ljava/lang/String :: v176 = v171.toUpperCase()::
39842 :: CALL :: call :: Ljava/lang/Enum :: v178 = valueOf(v75, v176)::JM,40303
39848 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v322 = new java.lang.StringBuilder::
39852 :: CALL :: call :: Ljava/lang/StringBuilder :: v326 = v322.append(#(Option ))::
39857 :: CALL :: call :: Ljava/lang/StringBuilder :: v328 = v326.append(v41)::
39862 :: CALL :: call :: Ljava/lang/StringBuilder :: v331 = v322.append(#( requires a ))::
39867 :: CALL :: call :: Ljava/lang/String :: v333 = v75.getSimpleName()::
39871 :: CALL :: call :: Ljava/lang/StringBuilder :: v335 = v331.append(v333)::
39876 :: CALL :: call :: Ljava/lang/StringBuilder :: v338 = v322.append(#( parameter. One of: ))::
39881 :: CALL :: call :: [Ljava/lang/Object :: v340 = v75.getEnumConstants()::
39887 :: EXPR :: reference :: Ljava/lang/Object :: v342 = v340[v352]::DD,39891
39891 :: EXPR :: assign :: Ljava/lang/Object :: v343 = CHECKCAST v342::
39892 :: CALL :: call :: Ljava/lang/String :: v345 = v343.name()::
39896 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v322.append(v345)::
39901 :: CALL :: call :: Ljava/lang/StringBuilder :: v350 = v322.append(#( ))::
39906 :: EXPR :: assign :: Ljava/lang/Object :: v351 = v352 + #(1)::DD,40297
39909 :: CALL :: call :: Ljava/lang/String :: v355 = v322.toString()::
39920 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v180 = new java.lang.StringBuilder::
39925 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v180.append(v41)::
39930 :: CALL :: call :: Ljava/lang/StringBuilder :: v187 = v184.append(#( propType:))::
39935 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v187.append(v75)::
39940 :: CALL :: call :: Ljava/lang/String :: v191 = v189.toString()::
39944 :: CALL :: call :: V :: v179.println(v191)::
39948 :: CALL :: call :: V :: exit(#(1))::
39951 :: PRED :: IF :: Z :: if (v199 == #(0)) goto 1388::CD,39952:CD,39957:CD,39958:CD,39969:CD,39975:CD,40079:CD,40304:CD,40307
39952 :: CALL :: call :: Ljava/lang/Object :: v204 = v36.get(v198)::JM,39957
39957 :: EXPR :: assign :: Ljava/lang/Object :: v205 = CHECKCAST v204::DD,39958:DD,40304
39958 :: PRED :: IF :: Z :: if (v205 != #(null)) goto 1375::CF,40304:CF,39959:CD,39963
39959 :: NORM :: declaration :: Ljava/util/ArrayList :: v206 = new java.util.ArrayList::DD,40304
39963 :: CALL :: call :: Ljava/lang/Object :: v209 = v36.put(v198, v206)::
39969 :: CALL :: call :: Z :: v212 = v210.add(v200)::
39975 :: CALL :: call :: Z :: v214 = v38.contains(v198)::
39982 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v499 = new java.lang.StringBuilder::
39987 :: CALL :: call :: Ljava/lang/String :: v503 = v198.getName()::
39991 :: CALL :: call :: Ljava/lang/StringBuilder :: v505 = v499.append(v503)::
39996 :: CALL :: call :: Ljava/lang/String :: v507 = v505.toString()::
40022 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v487 = new java.lang.StringBuilder::
40027 :: CALL :: call :: Ljava/lang/String :: v490 = v198.getName()::
40031 :: CALL :: call :: Ljava/lang/StringBuilder :: v492 = v487.append(v490)::
40036 :: CALL :: call :: Ljava/lang/StringBuilder :: v494 = v492.append(#('))::
40041 :: CALL :: call :: Ljava/lang/String :: v496 = v494.toString()::
40051 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v474 = new java.lang.StringBuilder::
40056 :: CALL :: call :: Ljava/lang/String :: v477 = v198.getName()::
40060 :: CALL :: call :: Ljava/lang/StringBuilder :: v479 = v474.append(v477)::
40065 :: CALL :: call :: Ljava/lang/StringBuilder :: v481 = v479.append(#('))::
40070 :: CALL :: call :: Ljava/lang/String :: v483 = v481.toString()::
40079 :: CALL :: call :: Z :: v221 = v38.add(v198)::
40085 :: CALL :: call :: Z :: v223 = v34.add(v41)::
40090 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v227 + #(1)::DD,40310
40091 :: EXPR :: assign :: I :: v40 = p2 $args .length::CF,40092
40092 :: PRED :: IF :: Z :: if (v232 < v40) goto 138::CD,39228:CD,40090:CD,40091:CD,40307:CD,40310:JM,40106:JM,40268
40093 :: CALL :: call :: Ljava/util/Set :: v234 = v36.entrySet()::JM,40106:JM,40268
40097 :: CALL :: call :: Ljava/util/Iterator :: v236 = v234.iterator()::JM,40106:JM,40268
40102 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.next()::JM,40106:JM,40268
40106 :: EXPR :: assign :: Ljava/lang/Object :: v241 = CHECKCAST v240::JM,40111:JM,40116
40107 :: CALL :: call :: Ljava/lang/Object :: v243 = v241.getKey()::JM,40111
40111 :: EXPR :: assign :: Ljava/lang/Object :: v244 = CHECKCAST v243::JM,40129:JM,40179:JM,40132:JM,40117:JM,40184:JM,40121:JM,40125:JM,40116
40112 :: CALL :: call :: Ljava/lang/Object :: v246 = v241.getValue()::JM,40116
40116 :: EXPR :: assign :: Ljava/lang/Object :: v247 = CHECKCAST v246::JM,40179:JM,40184:JM,40129:JM,40132:JM,40117:JM,40121:JM,40125
40117 :: CALL :: call :: Ljava/lang/Class :: v249 = v244.getPropertyType()::JM,40129:JM,40179:JM,40132:JM,40117:JM,40184:JM,40121:JM,40125
40121 :: CALL :: call :: Ljava/lang/Class :: v251 = v249.getComponentType()::JM,40129:JM,40179:JM,40132:JM,40184:JM,40121:JM,40125
40125 :: CALL :: call :: Z :: v253 = v251.isPrimitive()::JM,40129:JM,40179:JM,40132:JM,40184:JM,40125
40129 :: PRED :: IF :: Z :: if (v253 == #(0)) goto 1702::CD,40130:CD,40132:CD,40175:CD,40179:CD,40184:CD,40185
40130 :: EXPR :: reference :: Ljava/lang/Class :: v254 = java.lang.Integer.TYPE::CF,40132
40132 :: PRED :: IF :: Z :: if (v251 != v254) goto 1645::CD,40133:CD,40141
40133 :: CALL :: call :: [I :: v256 = toIntArray(v247)::CL,46476
40141 :: CALL :: call :: [D :: v259 = toDoubleArray(v247)::CL,46525
40147 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v280 = new java.lang.StringBuilder::
40152 :: CALL :: call :: Ljava/lang/String :: v284 = v251.getName()::JM,40129:JM,40179:JM,40184:JM,40125
40156 :: CALL :: call :: Ljava/lang/StringBuilder :: v286 = v280.append(v284)::JM,40184
40161 :: CALL :: call :: Ljava/lang/StringBuilder :: v289 = v286.append(#( are currently unsupp...))::
40166 :: CALL :: call :: Ljava/lang/String :: v291 = v289.toString()::
40175 :: CALL :: call :: I :: v261 = v247.size()::JM,40179:JM,40184
40179 :: CALL :: call :: Ljava/lang/Object :: v263 = newInstance(v251, v261)::JM,40129:JM,40179:JM,40184:JM,40125
40184 :: EXPR :: assign :: Ljava/lang/Object :: v264 = CHECKCAST v263::
40185 :: CALL :: call :: [Ljava/lang/Object :: v266 = v247.toArray(v264)::
40207 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v310 = new java.lang.StringBuilder::
40212 :: CALL :: call :: Ljava/lang/String :: v313 = v244.getName()::
40216 :: CALL :: call :: Ljava/lang/StringBuilder :: v315 = v310.append(v313)::
40221 :: CALL :: call :: Ljava/lang/StringBuilder :: v317 = v315.append(#('))::
40226 :: CALL :: call :: Ljava/lang/String :: v319 = v317.toString()::
40236 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v295 = new java.lang.StringBuilder::
40241 :: CALL :: call :: Ljava/lang/String :: v299 = v244.getName()::
40245 :: CALL :: call :: Ljava/lang/StringBuilder :: v301 = v295.append(v299)::
40250 :: CALL :: call :: Ljava/lang/StringBuilder :: v304 = v301.append(#('))::
40255 :: CALL :: call :: Ljava/lang/String :: v306 = v304.toString()::
40264 :: CALL :: call :: Z :: v238 = v236.hasNext()::JM,40106:JM,40268
40268 :: PRED :: IF :: Z :: if (v238 != #(0)) goto 1573::CD,40102:CD,40106:CD,40107:CD,40111:CD,40112:CD,40116:CD,40117:CD,40121:CD,40125:CD,40129:CD,40264:JM,40268:JM,40273
40269 :: CALL :: call :: I :: v274 = v34.size()::JM,40273
40273 :: NORM :: declaration :: [Ljava/lang/String :: v275 = new java.lang.String[]::
40274 :: CALL :: call :: [Ljava/lang/Object :: v277 = v34.toArray(v275)::
40281 :: EXPR :: assign :: Ljava/lang/Exception :: v8 = catch <exc>::
40294 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,39209:DD,39210
40295 :: EXPR :: assign :: null :: PHI v74 = #(0), #(1)::CF,40296:DD,40302
40296 :: EXPR :: assign :: null :: PHI v75 = v69, v73::DD,39385:DD,39424:DD,39426:DD,39464:DD,39473:JM,39539:JM,39544:JM,39557:JM,39562:JM,39626:JM,39631:JM,39690:JM,39695:JM,39764:JM,39759:JM,39826:JM,39822
40297 :: EXPR :: assign :: null :: PHI v352 = #(0), v351::DD,39906
40300 :: EXPR :: assign :: null :: PHI v197 = v232, v78, v84, v88, v91, v91, v91, v112, v118, v118, v133, v133, v145, v145, v159, v159, v170, v170, v232::CF,40301:DD,40307
40301 :: EXPR :: assign :: null :: PHI v198 = v63, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52::CF,40302
40302 :: EXPR :: assign :: null :: PHI v199 = #(0), v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74::CF,40303:DD,39951
40303 :: EXPR :: assign :: null :: PHI v200 = v67, v77, v83, v89, v93, v100, v107, v111, v123, v126, v137, v138, v149, v152, v163, v164, v173, v178, #(null)::CF,39951
40304 :: EXPR :: assign :: null :: PHI v210 = v205, v206::
40307 :: EXPR :: assign :: null :: PHI v227 = v232, v197, v197, v232::DD,40090
40310 :: EXPR :: assign :: null :: PHI v232 = #(0), v228::DD,39387:DD,39428:DD,39465:DD,39474:DD,39546:DD,39563:DD,39632:DD,39696:DD,39765:DD,39827:DD,40092:DD,40300:DD,40307:CF,40091
40635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::CE,40636:CD,40642
40636 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::JM,36299:JM,40985:JM,41472:JM,41466:JM,41467
40639 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,40642
40642 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40636
40686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::CE,40687:CD,40693
40687 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::JM,36319
40690 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,40693
40693 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40687
40695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::CE,40696:CD,40702
40696 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::JM,36339
40699 :: EXPR :: reference :: Z :: v3 = p0 $this .showMenu::DD,40702
40702 :: NORM :: compound :: Z :: return v3::CF,40696
40704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showAlignmentGUI()::CD,40707:CD,40711:CD,40717
40707 :: CALL :: call :: Ljava/lang/Class :: v4 = forName(#(org.biojava.nbio.stru...))::JM,40707
40711 :: CALL :: call :: Ljava/lang/reflect/Method :: v8 = v4.getMethod(#(getInstance), #(null))::
40717 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.invoke(v4, #(null))::
40780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::CE,40781:CD,40787
40781 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::JM,36369
40784 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .showDBresult::DD,40787
40787 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40781
40789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showDBResults(org.biojava.nbio.structure.align.ce.StartupParameters)::CD,40793:CD,40797:CD,40801:CD,40816:CD,40822:CD,40823:CD,40824:CD,40840:CD,40847:CD,40852
40793 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/UserConfiguration :: v4 = fromStartupParams(p1 $params )::CL,46685
40797 :: CALL :: call :: Ljava/lang/Class :: v7 = forName(#(org.biojava.nbio.stru...))::JM,40801:JM,40797
40801 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.newInstance()::JM,40801
40816 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(show), v12)::
40822 :: NORM :: declaration :: [Ljava/lang/Object :: v19 = new java.lang.Object[]::CF,40823
40823 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
40824 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $params .getShowDBresult()::CL,40780
40840 :: CALL :: call :: Ljava/lang/Object :: v25 = v18.invoke(v9, v19)::
40847 :: CALL :: call :: V :: v26.printStackTrace()::
40852 :: CALL :: call :: V :: v28.println(#(Probably structure-gu...))::
40886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::CE,40887:CD,40893
40887 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::JM,36410
40890 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb1::DD,40893
40893 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40887
40895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::CE,40896:CD,40902
40896 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::JM,36411:JM,40983
40899 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file1::DD,40902
40902 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40896
40904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runPairwise()::CD,40918:CD,40952:CD,40979:CD,40983:CD,41075:CD,41302:CD,41303
40918 :: CALL :: call :: Ljava/lang/String :: v8 = v6.getFile1()::JM,40983:CL,40895
40952 :: CALL :: call :: Ljava/lang/String :: v18 = v16.getFile2()::JM,40984:CL,46732
40979 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getPdbFilePath()::JM,40985:CL,40635
40983 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 145::CD,40984:CD,40985:JM,46852:JM,46805:JM,46824:JM,46809:JM,46857:JM,46826:JM,46877:JM,46831:CD,41046:CD,41053:CD,41302:CD,41303
40984 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 264::CD,40985:JM,46852:JM,46805:JM,46824:JM,46809:JM,46857:JM,46826:JM,46877:JM,46831:CD,41046:CD,41053:CD,41061:CD,41068:CD,41302:CD,41303
40985 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 194::JM,46758:JM,46765:CD,40990:CD,40996:CD,41001:CD,41006:CD,41011:CD,41015
40990 :: CALL :: call :: Ljava/lang/String :: v31 = v28.getPdbFilePath()::CL,46787
40996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
41001 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v33.append(v31)::
41006 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#(.))::
41011 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
41015 :: CALL :: call :: V :: v32.println(v42)::
41046 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v56 = p0 $this .getStructure(v45, v5, v8)::JM,41302:CL,46941
41053 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v58 = p0 $this .getStructure(v45, v15, v18)::JM,41303:CL,46941
41061 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v25 = p0 $this .getStructure(#(null), v5, v8)::JM,41302:CL,46941
41068 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v27 = p0 $this .getStructure(#(null), v15, v18)::JM,41303:CL,46941
41075 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 300::CD,41086
41086 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 318::CD,41107:CD,41111:CD,41115:CD,41123:CD,41141:CD,41145:CD,41183
41107 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v69 = getRepresentativeAtomArray(v59)::CL,47155
41111 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v71 = getRepresentativeAtomArray(v60)::CL,47155
41115 :: CALL :: call :: Lorg/biojava/nbio/structure/align/StructureAlignment :: v73 = p0 $this .getAlgorithm()::CL,39121
41123 :: CALL :: call :: Lorg/biojava/nbio/structure/align/model/AFPChain :: v77 = v73.align(v69, v71, v75)::CL,47260
41141 :: CALL :: call :: Z :: v86 = v84.isShow3d()::JM,41145:CL,47672
41145 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 473::CF,41146:CD,41149
41146 :: CALL :: call :: Z :: v88 = isGuiModuleInstalled()::JM,41149:CL,47681
41149 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 428::CD,41152:CD,41157:CD,41163
41152 :: CALL :: call :: V :: v98.println(#(The biojava-structure...))::
41157 :: CALL :: call :: Ljava/lang/Object :: v90 = display(v77, v69, v71)::CL,47697
41163 :: CALL :: call :: V :: showAlignmentImage(v77, v69, v71, v90)::CL,47775
41183 :: CALL :: call :: V :: p0 $this .checkWriteFile(v77, v69, v71, #(0))::JM,48059:CL,47873
41302 :: EXPR :: assign :: null :: PHI v59 = v56, v25::CF,41303:DD,41075
41303 :: EXPR :: assign :: null :: PHI v60 = v58, v27::DD,41086:CF,41075
41446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::CE,41447:CD,41453
41447 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::JM,36423:JM,41603:JM,41604:JM,41609
41450 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .alignPairs::DD,41453
41453 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,41447
41455 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runDBSearch()::CD,41462:CD,41466:JM,46852:JM,46805:JM,46824:JM,46809:JM,46857:JM,46826:JM,46877:JM,46831:CD,41529:CD,41582:CD,41590:CD,41595:CD,41599:CD,41603
41462 :: CALL :: call :: Ljava/lang/String :: v5 = v3.getPdbFilePath()::JM,41472:JM,41466:JM,41467:CL,40635
41466 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 21::CD,41467:CD,41472:JM,46758:JM,46765:CD,41477:CD,41483:CD,41488:CD,41493:CD,41498:CD,41502
41467 :: CALL :: call :: Z :: v9 = v5.equals(#())::JM,41472:JM,41467
41472 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 64::JM,46758:JM,46765:CD,41477:CD,41483:CD,41488:CD,41493:CD,41498:CD,41502
41477 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getPdbFilePath()::CL,46787
41483 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
41488 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v16.append(v14)::
41493 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#(.))::
41498 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
41502 :: CALL :: call :: V :: v15.println(v25)::
41529 :: CALL :: call :: Ljava/lang/String :: v38 = v36.getAlignPairs()::JM,41603:JM,41604:JM,41609:CL,41446
41582 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
41590 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v52.append(v55)::
41595 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
41599 :: CALL :: call :: V :: v51.println(v59)::
41603 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 244::CD,41604:CD,41609
41604 :: CALL :: call :: Z :: v62 = v38.equals(#())::JM,41604:JM,41609
41609 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 244::CD,41610
41610 :: CALL :: call :: V :: p0 $this .runAlignPairs(v34, v38, v48)::JM,41604:JM,41609:CL,48347
41707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::CE,41708:CD,41714
41708 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::JM,36435
41711 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .searchFile::DD,41714
41714 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,41708
41877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,41878:CD,41881:CD,41885:CD,41894:CD,41895:CD,41899:CD,41908:CD,41909:CD,41913:CD,41922:CD,41923:CD,41927:CD,41936:CD,41937:CD,41941:CD,41950:CD,41951:CD,41955:CD,41964:CD,41965:CD,41966:CD,41967:CD,41968:CD,41969:CD,41970:CD,41971
41878 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
41881 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,41894
41882 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,41885
41885 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,41890:CD,41966
41887 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,41966
41890 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,41966
41894 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,41895
41895 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,41908
41896 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,41899
41899 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,41904:CD,41967
41901 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,41967
41904 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,41967
41908 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,41909
41909 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,41922
41910 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,41913
41913 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,41918:CD,41968
41915 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,41968
41918 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,41968
41922 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,41923
41923 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,41936
41924 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,41927
41927 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,41932:CD,41969
41929 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,41969
41932 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,41969
41936 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,41937
41937 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,41950
41938 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,41941
41941 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,41946:CD,41970
41943 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,41970
41946 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,41970
41950 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,41951
41951 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,41964
41952 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,41955
41955 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,41960:CD,41971
41957 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,41971
41960 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,41971
41964 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,41965
41965 :: NORM :: compound :: I :: return v48::CF,41878
41966 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,41894
41967 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,41908
41968 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,41922
41969 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,41936
41970 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,41950
41971 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,41964
42136 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,42137:CD,42140:CD,42144:CD,42153:CD,42154:CD,42158:CD,42167:CD,42168:CD,42172:CD,42181:CD,42182:CD,42183:CD,42184:CD,42185
42137 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,42439:JM,42440
42140 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42153
42141 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,42144
42144 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42149:CD,42183
42146 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,42183
42149 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42183
42153 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42154
42154 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42167
42155 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,42158
42158 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42163:CD,42184
42160 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,42184
42163 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42184
42167 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42168
42168 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42181
42169 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,42172
42172 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42177:CD,42185
42174 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,42185
42177 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42185
42181 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42182
42182 :: NORM :: compound :: I :: return v27::CF,42137
42183 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42153
42184 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42167
42185 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42181
42251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,42252:CD,42255:CD,42259:CD,42268:CD,42269:CD,42273:CD,42282:CD,42283:CD,42287:CD,42296:CD,42297:CD,42301:CD,42310:CD,42311:CD,42312:CD,42313:CD,42314:CD,42315
42252 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
42255 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,42268
42256 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,42259
42259 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,42263:CD,42312
42260 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,42312
42263 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,42312
42268 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42269
42269 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,42282
42270 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,42273
42273 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,42277:CD,42313
42277 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42313
42282 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42283
42283 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,42296
42284 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,42287
42287 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,42291:CD,42314
42288 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,42314
42291 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42314
42296 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42297
42297 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,42310
42298 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,42301
42301 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,42305:CD,42315
42302 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,42315
42305 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,42315
42310 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,42311
42311 :: NORM :: compound :: I :: return v34::DD,42252
42312 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,42268
42313 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,42282
42314 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,42296
42315 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,42310
42391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,42392:CD,42395:CD,42399:CD,42408:CD,42409:CD,42413:CD,42422:CD,42423:CD,42427:CD,42436:CD,42437:CD,42438:CD,42439:CD,42440
42392 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
42395 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42408
42396 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,42399
42399 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42404:CD,42438
42401 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,42438
42404 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42438
42408 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42409
42409 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42422
42410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,42413
42413 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42418:CD,42439
42418 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42439:CL,42136
42422 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42423
42423 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42436
42424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,42427
42427 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42432:CD,42440
42432 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42440:CL,42136
42436 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42437
42437 :: NORM :: compound :: I :: return v27::CF,42392
42438 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42408
42439 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42422
42440 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42436
42467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,42468:CD,42471:CD,42475:CD,42484:CD,42485:CD,42489:CD,42498:CD,42499:CD,42500:CD,42501
42468 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
42471 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,42484
42472 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,42475
42475 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,42479:CD,42500
42476 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,42500
42479 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,42500
42484 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42485
42485 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,42498
42486 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,42489
42489 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,42493:CD,42501
42490 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,42501
42493 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42501
42498 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42499
42499 :: NORM :: compound :: I :: return v20::CF,42468
42500 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,42484
42501 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,42498
42519 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,42520:CD,42523:CD,42527:CD,42536:CD,42537:CD,42541:CD,42550:CD,42551:CD,42555:CD,42564:CD,42565:CD,42569:CD,42578:CD,42579:CD,42583:CD,42592:CD,42593:CD,42597:CD,42606:CD,42607:CD,42611:CD,42620:CD,42621:CD,42625:CD,42634:CD,42635:CD,42639:CD,42648:CD,42649:CD,42653:CD,42662:CD,42663:CD,42667:CD,42676:CD,42677:CD,42681:CD,42690:CD,42691:CD,42695:CD,42704:CD,42705:CD,42709:CD,42718:CD,42719:CD,42723:CD,42732:CD,42733:CD,42737:CD,42746:CD,42747:CD,42751:CD,42760:CD,42761:CD,42762:CD,42763:CD,42764:CD,42765:CD,42766:CD,42767:CD,42768:CD,42769:CD,42770:CD,42771:CD,42772:CD,42773:CD,42774:CD,42775:CD,42776:CD,42777:CD,42778
42520 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
42523 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42536
42524 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,42527
42527 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42532:CD,42762
42529 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,42762
42532 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42762
42536 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42537
42537 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42550
42538 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,42541
42541 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42546:CD,42763
42543 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,42763
42546 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42763
42550 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42551
42551 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42564
42552 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,42555
42555 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42560:CD,42764
42557 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,42764
42560 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42764
42564 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42565
42565 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,42578
42566 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,42569
42569 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,42574:CD,42765
42571 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,42765
42574 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,42765
42578 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,42579
42579 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,42592
42580 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,42583
42583 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,42588:CD,42766
42585 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,42766
42588 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,42766
42592 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,42593
42593 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,42606
42594 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,42597
42597 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,42602:CD,42767
42599 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,42767
42602 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,42767
42606 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,42607
42607 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,42620
42608 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,42611
42611 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,42616:CD,42768
42613 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,42768
42616 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,42768
42620 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,42621
42621 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,42634
42622 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,42625
42625 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,42630:CD,42769
42627 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,42769
42630 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,42769
42634 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,42635
42635 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,42648
42636 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,42639
42639 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,42644:CD,42770
42644 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,42770
42648 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,42649
42649 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,42662
42650 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,42653
42653 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,42658:CD,42771
42655 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,42771
42658 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,42771
42662 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,42663
42663 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,42676
42664 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,42667
42667 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,42672:CD,42772
42669 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,42772
42672 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,42772
42676 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,42677
42677 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,42690
42678 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,42681
42681 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,42686:CD,42773
42683 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,42773
42686 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,42773
42690 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,42691
42691 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,42704
42692 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,42695
42695 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,42700:CD,42774
42697 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,42774
42700 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,42774
42704 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,42705
42705 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,42718
42706 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,42709
42709 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,42714:CD,42775
42711 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,42775
42714 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,42775
42718 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,42719
42719 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,42732
42720 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,42723
42723 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,42728:CD,42776
42725 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,42776
42728 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,42776
42732 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,42733
42733 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,42746
42734 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,42737
42737 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,42742:CD,42777
42739 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,42777
42742 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,42777
42746 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,42747
42747 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,42760
42748 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,42751
42751 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,42756:CD,42778
42753 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,42778
42756 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,42778
42760 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,42761
42761 :: NORM :: compound :: I :: return v125::DD,42520
42762 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42536
42763 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42550
42764 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42564
42765 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,42578
42766 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,42592
42767 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,42606
42768 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,42620
42769 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,42634
42770 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,42648
42771 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,42662
42772 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,42676
42773 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,42690
42774 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,42704
42775 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,42718
42776 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,42732
42777 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,42746
42778 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,42760
43016 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,43017:CD,43021:JM,43025:JM,43029:JM,43033:JM,43035:JM,43023
43017 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
43021 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,43022:CD,43023
43022 :: NORM :: compound :: Z :: return #(1)::DD,43017
43023 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,43024:CD,43025:CD,43029:CD,43033:JM,43035:JM,43021:JM,43023
43024 :: NORM :: compound :: Z :: return #(0)::DD,43017
43025 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43025:JM,43029:JM,43033:JM,43035:JM,43021:JM,43023
43029 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43025:JM,43029:JM,43033:JM,43035:JM,43021
43033 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,43034:CD,43035:CD,43039
43034 :: NORM :: compound :: Z :: return #(0)::DD,43017
43035 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43036 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,43039
43039 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,43043:CD,43051:CD,43056
43040 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,43043
43043 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,43044:CD,43061
43044 :: NORM :: compound :: Z :: return #(0)::DD,43017
43045 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,43056
43048 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,43056
43051 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43056
43056 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,43057:CD,43061
43057 :: NORM :: compound :: Z :: return #(0)::DD,43017
43058 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,43061
43061 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,43065:CD,43073:CD,43078
43062 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,43065
43065 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,43066:CD,43083
43066 :: NORM :: compound :: Z :: return #(0)::DD,43017
43067 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,43078
43070 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,43078
43073 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43078
43078 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,43079:CD,43083
43079 :: NORM :: compound :: Z :: return #(0)::DD,43017
43080 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,43083
43083 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,43087:CD,43095:CD,43100
43084 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,43087
43087 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,43088:CD,43105
43088 :: NORM :: compound :: Z :: return #(0)::DD,43017
43089 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,43100
43092 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,43100
43095 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,43100
43100 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,43101:CD,43105
43101 :: NORM :: compound :: Z :: return #(0)::DD,43017
43102 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,43105
43105 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,43109:CD,43117:CD,43122
43106 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,43109
43109 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,43110:CD,43127
43110 :: NORM :: compound :: Z :: return #(0)::DD,43017
43111 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,43122
43114 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,43122
43117 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,43122
43122 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,43123:CD,43127
43123 :: NORM :: compound :: Z :: return #(0)::DD,43017
43124 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,43127
43127 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,43131:CD,43139:CD,43144
43128 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,43131
43131 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,43132:CD,43149
43132 :: NORM :: compound :: Z :: return #(0)::DD,43017
43133 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,43144
43136 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,43144
43139 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,43144
43144 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,43145:CD,43149
43145 :: NORM :: compound :: Z :: return #(0)::DD,43017
43146 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,43149
43149 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,43153:CD,43161:CD,43166
43150 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,43153
43153 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,43154:CD,43171
43154 :: NORM :: compound :: Z :: return #(0)::DD,43017
43155 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,43166
43158 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,43166
43161 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,43166
43166 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,43167:CD,43171
43167 :: NORM :: compound :: Z :: return #(0)::DD,43017
43168 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,43171
43171 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,43175:CD,43183:CD,43188
43172 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,43175
43175 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,43176:CD,43193
43176 :: NORM :: compound :: Z :: return #(0)::DD,43017
43177 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,43188
43180 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,43188
43183 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,43188
43188 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,43189:CD,43193
43189 :: NORM :: compound :: Z :: return #(0)::DD,43017
43190 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,43193
43193 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,43197:CD,43205:CD,43210
43194 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,43197
43197 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,43198:CD,43215
43198 :: NORM :: compound :: Z :: return #(0)::DD,43017
43199 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,43210
43202 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,43210
43205 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,43210
43210 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,43211:CD,43215
43211 :: NORM :: compound :: Z :: return #(0)::DD,43017
43212 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,43215
43215 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,43219:CD,43227:CD,43232
43216 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,43219
43219 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,43220:CD,43237
43220 :: NORM :: compound :: Z :: return #(0)::DD,43017
43227 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,43232
43232 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,43233:CD,43237
43233 :: NORM :: compound :: Z :: return #(0)::DD,43017
43234 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,43237
43237 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,43241:CD,43249:CD,43254
43238 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,43241
43241 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,43242:CD,43259
43242 :: NORM :: compound :: Z :: return #(0)::DD,43017
43243 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,43254
43246 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,43254
43249 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,43254
43254 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,43255:CD,43259
43255 :: NORM :: compound :: Z :: return #(0)::DD,43017
43256 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,43259
43259 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,43263:CD,43271:CD,43276
43260 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,43263
43263 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,43264:CD,43281
43264 :: NORM :: compound :: Z :: return #(0)::DD,43017
43265 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,43276
43268 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,43276
43271 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,43276
43276 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,43277:CD,43281
43277 :: NORM :: compound :: Z :: return #(0)::DD,43017
43278 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,43281
43281 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,43285:CD,43293:CD,43298
43282 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,43285
43285 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,43286:CD,43303
43286 :: NORM :: compound :: Z :: return #(0)::DD,43017
43287 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,43298
43290 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,43298
43293 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,43298
43298 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,43299:CD,43303
43299 :: NORM :: compound :: Z :: return #(0)::DD,43017
43300 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,43303
43303 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,43307:CD,43315:CD,43320
43304 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,43307
43307 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,43308:CD,43325
43308 :: NORM :: compound :: Z :: return #(0)::DD,43017
43309 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,43320
43312 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,43320
43315 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,43320
43320 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,43321:CD,43325
43321 :: NORM :: compound :: Z :: return #(0)::DD,43017
43322 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,43325
43325 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,43329:CD,43337:CD,43342
43326 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,43329
43329 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,43330:CD,43347
43330 :: NORM :: compound :: Z :: return #(0)::DD,43017
43331 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,43342
43334 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,43342
43337 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,43342
43342 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,43343:CD,43347
43343 :: NORM :: compound :: Z :: return #(0)::DD,43017
43344 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,43347
43347 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,43351:CD,43359:CD,43364
43348 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,43351
43351 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,43352:CD,43369
43352 :: NORM :: compound :: Z :: return #(0)::DD,43017
43353 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,43364
43356 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,43364
43359 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,43364
43364 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,43365:CD,43369
43365 :: NORM :: compound :: Z :: return #(0)::DD,43017
43366 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,43369
43369 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,43373:CD,43381:CD,43386
43370 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,43373
43373 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,43374:CD,43391
43374 :: NORM :: compound :: Z :: return #(0)::DD,43017
43375 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,43386
43378 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,43386
43381 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,43386
43386 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,43387:CD,43391
43387 :: NORM :: compound :: Z :: return #(0)::DD,43017
43388 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,43391
43391 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,43395:CD,43403:CD,43408
43392 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,43395
43395 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,43396:CD,43410
43396 :: NORM :: compound :: Z :: return #(0)::DD,43017
43397 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,43408
43400 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,43408
43403 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,43408
43408 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,43409:CD,43410
43409 :: NORM :: compound :: Z :: return #(0)::DD,43017
43410 :: NORM :: compound :: Z :: return #(1)::DD,43017
43576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,43577:CD,43581:JM,43587:JM,43591:JM,43593:JM,43583
43577 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
43581 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,43582:CD,43583:CD,43587:CD,43591:JM,43593:JM,43581
43582 :: NORM :: compound :: Z :: return #(0)::CF,43577
43583 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43587:JM,43591:JM,43593:JM,43581:JM,43583
43587 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43587:JM,43591:JM,43593:JM,43581:JM,43583
43591 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,43592:CD,43593:CD,43597
43592 :: NORM :: compound :: Z :: return #(0)::CF,43577
43593 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43594 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,43597
43597 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,43601:CD,43609:CD,43614
43598 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,43601
43601 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,43615:CD,43619:CD,43638:CD,43639
43603 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,43614
43606 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,43614
43609 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43614
43614 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,43615:CD,43619:CD,43638:CD,43639
43615 :: NORM :: compound :: Z :: return #(0)::CF,43577
43616 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,43619
43619 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,43623:CD,43631:CD,43636
43620 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,43623
43623 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,43639
43625 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,43636
43628 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,43636
43631 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43636
43636 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,43639
43638 :: NORM :: compound :: Z :: return v24::CF,43577
43639 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,43638
43665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,43666:CD,43670:JM,43682:JM,43684:JM,43672:JM,43674:JM,43678
43666 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
43670 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,43671:CD,43672
43671 :: NORM :: compound :: Z :: return #(1)::CF,43666
43672 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,43673:CD,43674:CD,43678:CD,43682:JM,43684:JM,43670:JM,43672
43673 :: NORM :: compound :: Z :: return #(0)::CF,43666
43674 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43682:JM,43684:JM,43670:JM,43672:JM,43674:JM,43678
43678 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43682:JM,43684:JM,43670:JM,43674:JM,43678
43682 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,43683:CD,43684:CD,43688
43683 :: NORM :: compound :: Z :: return #(0)::CF,43666
43684 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43685 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,43688
43688 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,43692:CD,43700:CD,43705
43689 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,43692
43692 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,43693:CD,43710
43693 :: NORM :: compound :: Z :: return #(0)::CF,43666
43694 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,43705
43697 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,43705
43700 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43705
43705 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,43706:CD,43710
43706 :: NORM :: compound :: Z :: return #(0)::CF,43666
43707 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,43710
43710 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,43714:CD,43722:CD,43727
43711 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,43714
43714 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,43715:CD,43732
43715 :: NORM :: compound :: Z :: return #(0)::CF,43666
43716 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,43727
43719 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,43727
43722 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43727
43727 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,43728:CD,43732
43728 :: NORM :: compound :: Z :: return #(0)::CF,43666
43729 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,43732
43732 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,43736:CD,43744:CD,43749
43733 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,43736
43736 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,43737:CD,43754
43737 :: NORM :: compound :: Z :: return #(0)::CF,43666
43738 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,43749
43741 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,43749
43744 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,43749
43749 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,43750:CD,43754
43750 :: NORM :: compound :: Z :: return #(0)::CF,43666
43751 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,43754
43754 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,43758:CD,43766:CD,43771
43755 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,43758
43758 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,43759:CD,43776
43759 :: NORM :: compound :: Z :: return #(0)::CF,43666
43760 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,43771
43763 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,43771
43766 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,43771
43771 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,43772:CD,43776
43772 :: NORM :: compound :: Z :: return #(0)::CF,43666
43773 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,43776
43776 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,43780:CD,43788:CD,43793
43777 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,43780
43780 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,43781:CD,43798
43781 :: NORM :: compound :: Z :: return #(0)::CF,43666
43782 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,43793
43785 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,43793
43788 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,43793
43793 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,43794:CD,43798
43794 :: NORM :: compound :: Z :: return #(0)::CF,43666
43795 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,43798
43798 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,43802:CD,43810:CD,43815
43799 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,43802
43802 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,43803:CD,43817
43803 :: NORM :: compound :: Z :: return #(0)::CF,43666
43804 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,43815
43807 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,43815
43810 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,43815
43815 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,43816:CD,43817
43816 :: NORM :: compound :: Z :: return #(0)::CF,43666
43817 :: NORM :: compound :: Z :: return #(1)::CF,43666
44027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,44028:CD,44032:JM,44034:JM,44036:JM,44040:JM,44044:JM,44046
44028 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,44474:JM,44496:JM,91463:JM,145120:JM,148175
44032 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,44033:CD,44034
44033 :: NORM :: compound :: Z :: return #(1)::CF,44028
44034 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,44035:CD,44036:CD,44040:CD,44044:JM,44032:JM,44034:JM,44046
44035 :: NORM :: compound :: Z :: return #(0)::CF,44028
44036 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44032:JM,44034:JM,44036:JM,44040:JM,44044:JM,44046
44040 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44032:JM,44036:JM,44040:JM,44044:JM,44046
44044 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,44045:CD,44046:CD,44050
44045 :: NORM :: compound :: Z :: return #(0)::CF,44028
44046 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44047 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,44050
44050 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,44054:CD,44062:CD,44067
44051 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,44054
44054 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,44055:CD,44072
44055 :: NORM :: compound :: Z :: return #(0)::CF,44028
44056 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,44067
44059 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,44067
44062 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44067
44067 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,44068:CD,44072
44068 :: NORM :: compound :: Z :: return #(0)::CF,44028
44069 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,44072
44072 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,44076:CD,44084:CD,44089
44073 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,44076
44076 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,44077:CD,44094
44077 :: NORM :: compound :: Z :: return #(0)::CF,44028
44078 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,44089
44081 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,44089
44084 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,44089
44089 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,44090:CD,44094
44090 :: NORM :: compound :: Z :: return #(0)::CF,44028
44091 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,44094
44094 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,44098:CD,44106:CD,44111
44095 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,44098
44098 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,44099:CD,44113
44099 :: NORM :: compound :: Z :: return #(0)::CF,44028
44100 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,44111
44103 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,44111
44106 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,44111
44111 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,44112:CD,44113
44112 :: NORM :: compound :: Z :: return #(0)::CF,44028
44113 :: NORM :: compound :: Z :: return #(1)::CF,44028
44269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,44270:CD,44274:CD,44275:JM,44277
44270 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
44274 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,44275
44275 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,44276:CD,44277:CD,44284
44276 :: NORM :: compound :: Z :: return #(0)::CF,44270
44277 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
44278 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,44284
44281 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,44284
44284 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,44285:CD,44286
44285 :: NORM :: compound :: Z :: return #(1)::CF,44270
44286 :: NORM :: compound :: Z :: return #(0)::CF,44270
44412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,44413:CD,44417:JM,44419:JM,44421:JM,44425:JM,44429:JM,44431
44413 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
44417 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,44418:CD,44419
44418 :: NORM :: compound :: Z :: return #(1)::CF,44413
44419 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,44420:CD,44421:CD,44425:CD,44429:JM,44417:JM,44419:JM,44431
44420 :: NORM :: compound :: Z :: return #(0)::CF,44413
44421 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44417:JM,44419:JM,44421:JM,44425:JM,44429:JM,44431
44425 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44417:JM,44421:JM,44425:JM,44429:JM,44431
44429 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,44430:CD,44431:CD,44435
44430 :: NORM :: compound :: Z :: return #(0)::CF,44413
44431 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44432 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,44435
44435 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,44439:CD,44447:CD,44452
44436 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,44439
44439 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,44440:CD,44457
44440 :: NORM :: compound :: Z :: return #(0)::CF,44413
44441 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,44452
44444 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,44452
44447 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44452
44452 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,44453:CD,44457
44453 :: NORM :: compound :: Z :: return #(0)::CF,44413
44454 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,44457
44457 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,44461:CD,44469:CD,44474
44458 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,44461
44461 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,44462:CD,44479
44462 :: NORM :: compound :: Z :: return #(0)::CF,44413
44469 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,44474:CL,44027
44474 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,44475:CD,44479
44475 :: NORM :: compound :: Z :: return #(0)::CF,44413
44476 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,44479
44479 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,44483:CD,44491:CD,44496
44480 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,44483
44483 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,44484:CD,44498
44484 :: NORM :: compound :: Z :: return #(0)::CF,44413
44491 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,44496:CL,44027
44496 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,44497:CD,44498
44497 :: NORM :: compound :: Z :: return #(0)::CF,44413
44498 :: NORM :: compound :: Z :: return #(1)::CF,44413
44538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,44539:CD,44543:JM,44545:JM,44549:JM,44553:JM,44555
44539 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
44543 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,44544:CD,44545:CD,44549:CD,44553:JM,44555:JM,44543
44544 :: NORM :: compound :: Z :: return #(0)::DD,44539
44545 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44545:JM,44549:JM,44553:JM,44555:JM,44543
44549 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44545:JM,44549:JM,44553:JM,44555:JM,44543
44553 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,44554:CD,44555:CD,44559
44554 :: NORM :: compound :: Z :: return #(0)::DD,44539
44555 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44556 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,44559
44559 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,44563:CD,44571:CD,44576
44560 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,44563
44563 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,44577:CD,44584
44565 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,44576
44568 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,44576
44571 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44576
44576 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,44577:CD,44584
44577 :: NORM :: compound :: Z :: return #(0)::DD,44539
44578 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,44584
44581 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,44584
44584 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,44588:CD,44605
44585 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,44588
44588 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,44595:CD,44600:CD,44601
44595 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,44600
44600 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,44601:CD,44605
44601 :: NORM :: compound :: Z :: return #(0)::DD,44539
44602 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,44605
44605 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,44609:CD,44617:CD,44622
44606 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,44609
44609 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,44623:CD,44627
44611 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,44622
44614 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,44622
44617 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,44622
44622 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,44623:CD,44627
44623 :: NORM :: compound :: Z :: return #(0)::DD,44539
44624 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,44627
44627 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,44631:CD,44639:CD,44644
44628 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,44631
44631 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,44645:CD,44646
44633 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,44644
44636 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,44644
44639 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,44644
44644 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,44645:CD,44646
44645 :: NORM :: compound :: Z :: return #(0)::DD,44539
44646 :: NORM :: compound :: Z :: return #(1)::DD,44539
44829 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,44830:CD,44832:CD,44834:CD,44835:CD,44843
44830 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,37055:JM,37141
44832 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,44834
44834 :: EXPR :: assign :: I :: v4 = v2.length::DD,44835
44835 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,44843
44843 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,44830
45129 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,45133
45133 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
45137 :: CALL :: call :: V :: v7.printStackTrace()::
45713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,45714:CD,45717:CD,45721:CD,45725:CD,45729
45714 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,37742
45717 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,50277
45721 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,45729:JM,45725:CL,50335
45725 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,45729:JM,45725
45729 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,45714
45735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,45738:CD,45740
45738 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,45740
45740 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,46758:JM,46765:CD,45745:CD,45746:CD,45754
45745 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,45754
45746 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,50384
45754 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
45764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,45765:CD,45767:CD,45769:CD,45770:CD,45778
45765 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,37882
45767 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,45769
45769 :: EXPR :: assign :: I :: v4 = v2.length::DD,45770
45770 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,45778
45778 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,45765
45800 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,50506
45804 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,50506
45808 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,50506
45812 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,50506
45816 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,50506
45820 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,50506
45848 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,50506
45852 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,50506
45856 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,50506
45860 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,50506
45882 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/StartupParameters :: v5 = p0 $this .getStartupParametersInstance()::CL,50523
46135 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters :: v4 = p0 $this .params::DD,46138
46138 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 30::JM,45882:CD,46143
46143 :: CALL :: call :: Ljava/lang/Object :: v9 = v6.getParameters()::CL,47240
46476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toIntArray(java.util.Collection)::CD,46485:CD,46504:CD,46508
46485 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,46508
46491 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,46508
46504 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,46508
46508 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,46491:CD,46504
46525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toDoubleArray(java.util.Collection)::CD,46534:CD,46553:CD,46557
46534 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,46557
46540 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,46557
46553 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,46557
46557 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,46540:CD,46553
46685 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.fromStartupParams(org.biojava.nbio.structure.align.ce.StartupParameters)::JM,46758:JM,46765
46732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile2()::CE,46733:CD,46739
46733 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile2()::JM,40984
46736 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file2::DD,46739
46739 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46733
46758 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,51262
46765 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,51588
46787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,46788:CD,46794
46788 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,50479
46791 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,46794
46794 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46788
46805 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,46831:JM,46809:JM,46813
46809 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,46809:JM,46813
46813 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
46824 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,46831
46826 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,46831
46831 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,46832:CD,46833:CD,46841:CD,46843:CD,46848
46832 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
46833 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
46841 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
46843 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
46848 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
46852 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
46857 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,52024
46874 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
46877 :: CALL :: call :: V :: v34.clear()::
46941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getStructure(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String)::CE,46942:JM,50401:JM,50465:JM,45800:JM,45804:JM,52046:JM,50415:JM,50479:JM,45808:JM,50451:JM,45812:JM,45816:JM,50459:JM,45820:CD,46952:CD,46978:CD,46982:CD,46986:CD,46993:CD,46998:CD,47002:CD,47007:CD,47011:CD,47015:CD,47020:CD,47026:CD,47029:CD,47034:CD,47038:CD,47043:CD,47047:CD,47053:CD,47058:CD,47063:CD,47067:CD,47071:CD,47080:CD,47084:CD,47090:CD,47095:CD,47099:CD,47104:CD,47109:CD,47114:CD,47118:CD,47122
46942 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getStructure(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String)::JM,41302:JM,41303
46952 :: PRED :: IF :: Z :: if (p3 $file  == #(null)) goto 171::CD,46960:CD,46964:CD,46969:CD,46975:CD,47072:CD,47077
46960 :: CALL :: call :: V :: v34.println(v32)::
46964 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v37 = v6.getStructure(v32)::CL,52115
46969 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v39 = p0 $this .fixStructureName(v37, p3 $file )::JM,46975:CL,52142
46975 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v39::DD,46942
46978 :: CALL :: call :: Ljava/lang/String :: v43 = v40.getMessage()::
46982 :: CALL :: call :: V :: v41.println(v43)::
46986 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::
46993 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
46998 :: CALL :: call :: Ljava/lang/String :: v52 = v45.getAbsolutePath()::
47002 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v48.append(v52)::
47007 :: CALL :: call :: Ljava/lang/String :: v56 = v54.toString()::
47011 :: CALL :: call :: V :: v47.println(v56)::
47015 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v59 = v6.getStructure(v45)::CL,52220
47020 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v61 = p0 $this .fixStructureName(v59, p3 $file )::JM,47026:CL,52142
47026 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v61::DD,46942
47029 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
47034 :: CALL :: call :: Ljava/lang/String :: v69 = v62.getMessage()::
47038 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
47043 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
47047 :: CALL :: call :: V :: v64.println(v73)::
47053 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
47058 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(p3 $file )::
47063 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
47067 :: CALL :: call :: V :: v75.println(v82)::
47071 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return #(null)::DD,46942
47072 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = p1 $cache .getStructure(p2 $name1 )::JM,47077:CL,52247
47077 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v10::DD,46942
47080 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getMessage()::
47084 :: CALL :: call :: V :: v12.println(v14)::
47090 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
47095 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $cache .getPath()::CL,52374
47099 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
47104 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#(/))::
47109 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v26.append(p2 $name1 )::JM,46952
47114 :: CALL :: call :: Ljava/lang/String :: v30 = v28.toString()::
47118 :: CALL :: call :: V :: v16.println(v30)::
47122 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return #(null)::DD,46942
47146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getName()::CE,47147:CD,47153
47147 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getName()::JM,52152:JM,52162:JM,52176:JM,52186
47150 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,47153
47153 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47147
47155 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Structure)::CD,47159:CD,47163:CD,47167:CD,47194:CD,47198:CD,47199:CD,47203:CD,47204
47159 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,47203
47163 :: CALL :: call :: Ljava/util/List :: v6 = p1 $s .getChains()::JM,47198:CL,52383
47167 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,47198
47172 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,47198
47177 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v16 = getRepresentativeAtomArray(v14)::JM,47181:CL,52395
47181 :: EXPR :: assign :: I :: v17 = v16.length::DD,47193
47183 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v16[v23]::
47187 :: CALL :: call :: Z :: v20 = v3.add(v18)::
47192 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,47211
47193 :: PRED :: IF :: Z :: if (v23 < v17) goto 57::CD,47187:CD,47192:CD,47211:JM,47198
47194 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,47198
47198 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,47172:CD,47177:CD,47181:CD,47193:CD,47194:CD,47211:JM,47198:JM,47203
47199 :: CALL :: call :: I :: v25 = v3.size()::JM,47203
47203 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v26 = new org.biojava.nbio.structure.Atom[]::
47204 :: CALL :: call :: [Ljava/lang/Object :: v28 = v3.toArray(v26)::
47211 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,47192:DD,47193
47240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeSideChainUserArgumentProcessor.getParameters()::
47260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeMain.align(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],java.lang.Object)::CD,47269:CD,47279:CD,47280:CD,47284:CD,47317:JM,53120:JM,53124:JM,53110:JM,53128:JM,53114:JM,53131:JM,53173:CD,47340:CD,47353:CD,47365:CD,47495:CD,47499:CD,47548:CD,47549
47269 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v118 = new java.lang.IllegalArgumentException::
47279 :: EXPR :: assign :: I :: v9 = p2 $ca2 .length::CF,47280
47280 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v10 = new org.biojava.nbio.structure.Atom[]::DD,47281
47281 :: EXPR :: modify :: [Lorg/biojava/nbio/structure/Atom :: p0 $this .ca2clone = v10::
47284 :: EXPR :: assign :: I :: v11 = p2 $ca2 .length::DD,47317
47294 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.clone()::CL,52556:CL,52698:CL,52873
47299 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Atom :: v18 = p0 $this .ca2clone::
47306 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = v17.getAtom(v20)::JM,47311:CL,53038
47311 :: EXPR :: modify :: Ljava/lang/Object :: v18[v26] = v22::
47315 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,47548:CF,47316
47316 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v27 + #(1)::DD,47549:CF,47548
47317 :: PRED :: IF :: Z :: if (v27 < v11) goto 54::CD,47294:CD,47306:CD,47315:CD,47316:CD,47548:CD,47549
47340 :: CALL :: call :: Lorg/biojava/nbio/structure/align/model/AFPChain :: v37 = v34.extractFragments(v31, p1 $ca1 , v35)::CL,53187
47353 :: CALL :: call :: V :: v38.traceFragmentMatrix(v37, p1 $ca1 , v39)::CL,53376
47365 :: CALL :: call :: V :: v41.nextStep(v37, p1 $ca1 , v42)::CL,54906
47495 :: CALL :: call :: I :: v97 = v37.getNrEQR()::JM,47499:CL,54993
47499 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 346::CD,47524:JM,55248:JM,55240:JM,55273:JM,55262
47524 :: CALL :: call :: [[D :: v113 = v108.initSumOfDistances(v109, v110, v102, v107, p1 $ca1 , v111)::CL,55079
47548 :: EXPR :: assign :: null :: PHI v26 = #(0), v24::CF,47549:DD,47315
47549 :: EXPR :: assign :: null :: PHI v27 = #(0), v25::DD,47316:DD,47317
47672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isShow3d()::CE,47673:CD,47679
47673 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isShow3d()::JM,41145
47676 :: EXPR :: reference :: Z :: v3 = p0 $this .show3d::DD,47679
47679 :: NORM :: compound :: Z :: return v3::CF,47673
47681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.isGuiModuleInstalled()::CF,47682:CF,47689:CD,47690
47682 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.GuiWrapper.isGuiModuleInstalled()::JM,41149:JM,47892
47689 :: NORM :: compound :: Z :: return #(0)::CF,47682
47690 :: NORM :: compound :: Z :: return #(1)::CF,47682
47697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.display(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,47723:CD,47729:CD,47742
47723 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(display), v10)::
47729 :: NORM :: declaration :: [Ljava/lang/Object :: v20 = new java.lang.Object[]::
47742 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.invoke(#(null), v20)::
47775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showAlignmentImage(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],java.lang.Object)::CD,47810:CD,47816:CD,47833
47810 :: CALL :: call :: Ljava/lang/reflect/Method :: v23 = v11.getMethod(#(showAlignmentPanel), v14)::
47816 :: NORM :: declaration :: [Ljava/lang/Object :: v25 = new java.lang.Object[]::
47833 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.invoke(#(null), v25)::
47873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.checkWriteFile(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],boolean)::CD,47884:CD,47888:CD,48057:CD,48165:JM,48059
47884 :: CALL :: call :: Z :: v10 = v8.isOutputPDB()::JM,47888:CL,55317
47888 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 177::CF,47889:CD,47892:CD,48031:CD,48035
47889 :: CALL :: call :: Z :: v23 = isGuiModuleInstalled()::JM,47892:CL,47681
47892 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 42::CD,47895:CD,47899:CD,47906:CD,47912:CD,47917:CD,47921:CD,47926:CD,47931:CD,47935:CD,47940:CD,47945:CD,47949:CD,47950:CD,47958:CD,47962:CD,47967:CD,47972:CD,47976:CD,47981:CD,47985:CD,47986:CD,47994:CD,47996:CD,48001:CD,48005:CD,48006:CD,48014:CD,48018:CD,48023:CD,48165
47895 :: CALL :: call :: V :: v80.println(#(The biojava-structure...))::
47899 :: CALL :: call :: Ljava/lang/String :: v84 = toXML(p1 $afpChain , p2 $ca1 , p3 $ca2 )::JM,48165:CL,48260
47906 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v25 = createArtificalStructure(p1 $afpChain , p2 $ca1 , p3 $ca2 )::JM,48165:JM,48014:CL,55326
47912 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
47917 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $afpChain .getAlgorithmName()::CL,55570
47921 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
47926 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( ))::
47931 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $afpChain .getVersion()::CL,55579
47935 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
47940 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#( ))::
47945 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
47949 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
47950 :: CALL :: call :: Ljava/lang/String :: v46 = valueOf(v43)::
47958 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $afpChain .getName1()::CL,55588
47962 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v44.append(v49)::
47967 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v51.append(#( vs. ))::
47972 :: CALL :: call :: Ljava/lang/String :: v56 = p1 $afpChain .getName2()::CL,55597
47976 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(v56)::
47981 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
47985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
47986 :: CALL :: call :: Ljava/lang/String :: v63 = valueOf(v60)::
47994 :: EXPR :: reference :: Ljava/lang/String :: v65 = org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.newline::
47996 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v61.append(v65)::
48001 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
48005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::JM,48165
48006 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
48014 :: CALL :: call :: Ljava/lang/String :: v75 = v25.toPDB()::JM,48165:JM,48014
48018 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::JM,48165
48023 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::JM,48165
48031 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getOutFile()::JM,48035:CL,48338
48035 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 198::CD,48036:CD,48046:CD,48050:CD,48165
48036 :: CALL :: call :: Ljava/lang/String :: v21 = toXML(p1 $afpChain , p2 $ca1 , p3 $ca2 )::JM,48165:CL,48260
48046 :: CALL :: call :: Ljava/lang/String :: v17 = v15.getSaveOutputDir()::JM,48050:CL,55606
48050 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 217::CF,48165:CD,48051
48051 :: CALL :: call :: Ljava/lang/String :: v19 = toXML(p1 $afpChain , p2 $ca1 , p3 $ca2 )::JM,48165:CL,48260
48057 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 226::CD,48059
48059 :: PRED :: IF :: Z :: if (p4 $dbsearch  == #(0)) goto 305::CD,48063:CD,48067:CD,48124:CD,48128:CD,48136:CD,48166
48063 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getSaveOutputDir()::JM,48067:CL,55606
48067 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 303::CD,48068:CD,48072:CD,48077
48068 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $afpChain .getName1()::JM,48077:CL,55588
48072 :: CALL :: call :: Z :: v99 = v96.startsWith(#(file:))::JM,48077
48077 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 265::CD,48078:CD,48082:CD,48087
48078 :: CALL :: call :: Ljava/lang/String :: v101 = p1 $afpChain .getName2()::JM,48087:CL,55597
48082 :: CALL :: call :: Z :: v103 = v101.startsWith(#(file:))::JM,48087
48087 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 267::CD,48096:CD,48097:CD,48105:CD,48110:CD,48115:CD,48136:CD,48166
48096 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::JM,48166
48097 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
48105 :: CALL :: call :: Ljava/lang/String :: v112 = p0 $this .getAutoFileName(p1 $afpChain )::JM,48166:CL,55615
48110 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v107.append(v112)::JM,48166
48115 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,48166
48124 :: CALL :: call :: Ljava/lang/String :: v88 = v86.getOutFile()::JM,48128:CL,48338
48128 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 325::CF,48166:CD,48132
48132 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getOutFile()::JM,48166:CL,48338
48136 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 342::CF,48147:CD,48139:CD,48143:CD,48152:CD,48157:CD,48161
48139 :: CALL :: call :: V :: v124.println(#(Can't write outputfil...))::
48143 :: CALL :: call :: V :: exit(#(1))::
48147 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v118 = new java.io.FileOutputStream::
48152 :: NORM :: declaration :: Ljava/io/PrintStream :: v120 = new java.io.PrintStream::
48157 :: CALL :: call :: V :: v120.println(v85)::
48161 :: CALL :: call :: V :: v120.close()::
48165 :: EXPR :: assign :: null :: PHI v85 = v84, v79, v21, #(null), v19::DD,48057
48166 :: EXPR :: assign :: null :: PHI v117 = v116, #(null), v91::DD,48136
48260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.toXML(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,48261:CD,48266:CD,48270:CD,48276:CD,48280
48261 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.toXML(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,48165
48266 :: NORM :: declaration :: Ljava/io/StringWriter :: v5 = new java.io.StringWriter::JM,48280
48270 :: CALL :: call :: V :: toXML(p1 $afpChain , v5, p2 $ca1 , p3 $ca2 )::CL,55754
48276 :: CALL :: call :: Ljava/lang/String :: v9 = v5.toString()::JM,48280
48280 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,48261
48338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getOutFile()::CE,48339:CD,48345
48339 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getOutFile()::JM,48035:JM,48128:JM,48166
48342 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .outFile::DD,48345
48345 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,48339
48347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runAlignPairs(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String)::CD,48354:CD,48359:CD,48360:CD,48374:CD,48375:CD,48385:CD,48389:CD,48394:CD,48398:CD,48403:CD,48407:CD,48411:CD,48413:CD,48417:CD,48422:CD,48424:CD,48429:CD,48433:CD,48441:CD,48442:CD,48450:CD,48452:CD,48457:CD,48461:CD,48467:CD,48574:CD,48578:JM,41604:JM,41609
48354 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
48359 :: NORM :: declaration :: Ljava/io/BufferedReader :: v8 = new java.io.BufferedReader::JM,48578:JM,48477:CF,48360
48360 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v9 = new java.io.InputStreamReader::
48374 :: NORM :: declaration :: Ljava/io/BufferedWriter :: v14 = new java.io.BufferedWriter::CF,48375
48375 :: NORM :: declaration :: Ljava/io/FileWriter :: v15 = new java.io.FileWriter::
48385 :: CALL :: call :: Lorg/biojava/nbio/structure/align/StructureAlignment :: v20 = p0 $this .getAlgorithm()::CL,39121
48389 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
48394 :: CALL :: call :: Ljava/lang/String :: v25 = v20.getAlgorithmName()::CL,39131
48398 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v21.append(v25)::
48403 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
48407 :: CALL :: call :: V :: v14.write(v29)::
48411 :: EXPR :: reference :: Ljava/lang/String :: v31 = org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.newline::
48413 :: CALL :: call :: V :: v14.write(v31)::
48417 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
48422 :: EXPR :: reference :: Ljava/lang/String :: v36 = org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.newline::
48424 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v33.append(v36)::
48429 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
48433 :: CALL :: call :: V :: v14.write(v40)::
48441 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
48442 :: CALL :: call :: Ljava/lang/String :: v46 = valueOf(v43)::
48450 :: EXPR :: reference :: Ljava/lang/String :: v48 = org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.newline::
48452 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v44.append(v48)::
48457 :: CALL :: call :: Ljava/lang/String :: v52 = v50.toString()::
48461 :: CALL :: call :: V :: v14.write(v52)::
48467 :: CALL :: call :: V :: v54.println(v43)::
48472 :: CALL :: call :: Z :: v61 = v58.startsWith(#(#))::JM,48578:JM,48477
48477 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 187::CD,48479:CD,48484:CD,48485
48479 :: CALL :: call :: [Ljava/lang/String :: v66 = v58.split(#( ))::JM,48484
48484 :: EXPR :: assign :: I :: v67 = v66.length::DD,48485
48485 :: PRED :: IF :: Z :: if (v67 == #(2)) goto 229::CD,48488:CD,48493:CD,48498:CD,48502:CD,48515:CD,48520:CD,48525:CD,48529:CD,48533:CD,48537:CD,48552:CD,48557:CD,48563:CD,48567
48488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
48493 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v70.append(v58)::JM,48578:JM,48477
48498 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
48502 :: CALL :: call :: V :: v69.println(v76)::
48515 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v81 = p1 $cache .getStructure(v78)::CL,52247
48520 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v83 = p1 $cache .getStructure(v79)::CL,52247
48525 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v85 = getRepresentativeAtomArray(v81)::CL,47155
48529 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v87 = getRepresentativeAtomArray(v83)::CL,47155
48533 :: CALL :: call :: Ljava/lang/Object :: v89 = p0 $this .getParameters()::CL,47240
48537 :: CALL :: call :: Lorg/biojava/nbio/structure/align/model/AFPChain :: v91 = v20.align(v85, v87, v89)::CL,47260
48552 :: CALL :: call :: Ljava/lang/String :: v95 = p0 $this .getDbSearchResult(v91)::CL,56505
48557 :: CALL :: call :: V :: v14.write(v95)::
48563 :: CALL :: call :: V :: v97.print(v95)::
48567 :: CALL :: call :: V :: p0 $this .checkWriteFile(v91, v85, v87, #(1))::JM,48059:CL,47873
48574 :: CALL :: call :: Ljava/lang/String :: v58 = v8.readLine()::JM,48578:JM,48477
48578 :: PRED :: IF :: Z :: if (v58 != #(null)) goto 174::CD,48472:CD,48477:CD,48574:JM,48578
50277 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,50281:CD,50282:CD,50291:CD,50308:CD,50312:CD,50313
50281 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,50312:CF,50282
50282 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
50291 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
50296 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,50312
50301 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
50303 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
50308 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,50312
50312 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,50296:CD,50301:CD,50303:CD,50308
50313 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
50335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,50336:CD,50339:CD,50345:CD,50349:CD,50353:CD,50354:CD,50362:CD,50367:CD,50368
50336 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,45729:JM,45725
50339 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,50345:JM,50362:JM,50349:JM,50367
50345 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,50345:JM,50362:JM,50349:JM,50367
50349 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,50362:JM,50349:JM,50367
50353 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,50362:JM,50367:JM,50339
50354 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,50339
50362 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,50362:JM,50367
50367 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,50368
50368 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,50336
50384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,50385:CD,50391
50385 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
50388 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,50391
50391 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,50385
50401 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,52046:JM,50415
50415 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,46758:JM,46765:CD,50420:CD,50436:CD,50479
50420 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,50479:CL,46787
50436 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,50479:CL,59089
50451 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,52046:JM,50415
50459 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,59154
50465 :: CALL :: call :: V :: p0 $this .initPaths()::CL,59251
50479 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,50451:JM,52046:JM,50415
50506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,50514
50511 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
50514 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
50523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeUserArgumentProcessor.getStartupParametersInstance()::
50782 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters :: v4 = new org.biojava.nbio.structure.align.ce.CeParameters::DD,50786
50786 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters :: p0 $this .params = v4::
51262 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,51266:CD,51270:CD,51461:CD,51463:CD,51468:CD,51490
51266 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,51266:JM,51490:JM,51270:JM,51275:JM,51279
51270 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,51271:CD,51275:CD,51279:CD,51341:CD,51344:CD,51349:JM,51490
51271 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,51490:JM,51275:JM,51279
51275 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,51275:JM,51279
51279 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,51288:CD,51293:CD,51297:CD,51341:CD,51344:CD,51349
51288 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
51293 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,51297
51297 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,51322:CD,51327:CD,51331:CD,51490
51322 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,51490:JM,51322
51327 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,51331
51331 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,51490
51341 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
51344 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,51349
51349 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,51350:CD,51355:CD,51356:CD,51360:CD,51364:CD,51432:CD,51456:CD,51490
51350 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,51355
51355 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,51360:JM,51364
51356 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,51360:JM,51364
51360 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,51360:JM,51364
51364 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,51365:CD,51370:CD,51379:CD,51384:CD,51388:CD,51432:CD,51456:CD,51490
51365 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,51370
51370 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,51490
51379 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
51384 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,51388
51388 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,51413:CD,51418:CD,51422:CD,51490
51413 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,51490:JM,51413
51418 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,51422
51422 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,51490
51432 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,51490:JM,51432
51456 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
51461 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,51468
51463 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,51468
51468 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,51469:CD,51470:CD,51478:CD,51480:CD,51485
51469 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
51470 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
51478 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
51480 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
51485 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
51490 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,51468
51588 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,51592:CD,51596:CD,51857:CD,51859:CD,51864:CD,51886
51592 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,51592:JM,51596:JM,51886
51596 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,51605:CD,51610:CD,51614:CD,51683:CD,51686:CD,51691
51605 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
51610 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,51614
51614 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,51639:CD,51644:CD,51648:CD,51886
51639 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,51639:JM,51886
51644 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,51648
51648 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,51886:CD,51673:CD,51677
51673 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,51673:JM,51886
51677 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
51683 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
51686 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,51691
51691 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,51779:CD,51692:CD,51697:CD,51706:CD,51711:CD,51715:CD,51787:CD,51791
51692 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,51697
51697 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,51886
51706 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
51711 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,51715
51715 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,51740:CD,51745:CD,51749:CD,51886
51740 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,51740:JM,51886
51745 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,51749
51749 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,51886:CD,51774
51774 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,51774:JM,51886
51779 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
51780 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
51787 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,51791
51791 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,51815:CD,51821:CD,51852:CD,51886
51792 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,51886
51815 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
51821 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,51821:JM,51886
51852 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
51857 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,51864
51859 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,51864
51864 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,51865:CD,51866:CD,51874:CD,51876:CD,51881
51865 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
51866 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
51874 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
51876 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
51881 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
51886 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,51864
52024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,52029
52029 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,59089
52046 :: CALL :: call :: V :: p0 $this .setDefault()::CL,60033
52115 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.net.URL)::CD,52129
52129 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,60140
52142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.fixStructureName(org.biojava.nbio.structure.Structure,java.lang.String)::CE,52143:CD,52148:CD,52152:JM,52163:JM,52200
52143 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.fixStructureName(org.biojava.nbio.structure.Structure,java.lang.String)::JM,46975:JM,47026
52148 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $s .getName()::JM,52152:CL,47146
52152 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 27::CD,52153:CD,52157:CD,52162:CD,52172:CD,52176:CD,52200
52153 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $s .getName()::JM,52162:CL,47146
52157 :: CALL :: call :: Z :: v12 = v9.equals(#())::JM,52162
52162 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 27::CD,52163:CD,52172:CD,52176:CD,52200
52163 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return p1 $s ::DD,52143
52172 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $s .getName()::JM,52176:CL,47146
52176 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 60::CF,52187:CD,52177:CD,52181:CD,52186
52177 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $s .getName()::JM,52186:CL,47146
52181 :: CALL :: call :: Z :: v22 = v20.equals(#())::JM,52186
52186 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 80::CF,52187:CF,52200
52187 :: NORM :: declaration :: Ljava/io/File :: v23 = new java.io.File::
52200 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return p1 $s ::DD,52143
52220 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.io.File)::CD,52234
52234 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,60140
52247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::CE,52248:JM,60208:JM,60205:CD,52257:CD,52262
52248 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::JM,47077
52257 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v4)::JM,52262:CL,60220
52262 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,52248
52374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getPath()::CE,52375:CD,52381
52375 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.AtomCache.getPath()::
52378 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .path::DD,52381
52381 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,52375
52383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,52384:CD,52387:CD,52392
52384 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,47198:JM,111130:JM,111266:JM,125131:JM,125284:JM,125491:JM,125637:JM,130866:JM,131977
52387 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,52392:CL,60253
52392 :: NORM :: compound :: Ljava/util/List :: return v5::DD,52384
52395 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Chain)::CE,52396:CD,52399:CD,52403:CD,52407:CD,52478:CD,52482:CD,52483:CD,52487:CD,52488:CD,52493:CD,52494
52396 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Chain)::JM,47181
52399 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,52487:JM,52493
52403 :: CALL :: call :: Ljava/util/List :: v6 = p1 $c .getAtomGroups()::JM,52482:CL,60270
52407 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,52482
52412 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,52482
52417 :: CALL :: call :: [I :: v16 = $SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::CL,60279
52420 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v18 = v14.getType()::CL,60355:CL,60363:CL,60347
52424 :: CALL :: call :: I :: v20 = v18.ordinal()::
52428 :: EXPR :: reference :: I :: v21 = v16[v20]::DD,52432
52432 :: PRED :: IF :: null :: switch v21::CD,52433:CD,52438:CD,52462:CD,52467:JM,52482
52433 :: CALL :: call :: Z :: v24 = v14.hasAtom(#(CA))::JM,52438:CL,60371
52438 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 143::CD,52439:CD,52444:CD,52448:CD,52450:JM,52482
52439 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v26 = v14.getAtom(#(CA))::CL,53038
52444 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v28 = v26.getElement()::JM,52450:CL,60446
52448 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v29 = org.biojava.nbio.structure.Element.C::CF,52450
52450 :: PRED :: IF :: Z :: if (v28 != v29) goto 143::CD,52451:CD,52456:JM,52482
52451 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v34 = v14.getAtom(#(CA))::CL,53038
52456 :: CALL :: call :: Z :: v36 = v3.add(v34)::
52462 :: CALL :: call :: Z :: v32 = v14.hasAtom(#(P))::JM,52467:CL,60371
52467 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 143::CD,52468:CD,52473:JM,52482
52468 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v38 = v14.getAtom(#(P))::CL,53038
52473 :: CALL :: call :: Z :: v40 = v3.add(v38)::
52478 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,52482
52482 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,52412:CD,52417:CD,52420:CD,52424:CD,52432:CD,52478:JM,52482:JM,52487
52483 :: CALL :: call :: I :: v42 = v3.size()::JM,52487
52487 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v43 = new org.biojava.nbio.structure.Atom[]::JM,52493
52488 :: CALL :: call :: [Ljava/lang/Object :: v45 = v3.toArray(v43)::JM,52493
52493 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,52494
52494 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v46::DD,52396
52547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getGroup()::CE,52548:CD,52554
52548 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.AtomImpl.getGroup()::JM,55406:JM,55442
52551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v3 = p0 $this .parent::DD,52554
52554 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v3::CF,52548
52556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,52557:CD,52560:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,52568:CD,52575:CD,52583:CD,52590:CD,52613:CD,52617:CD,52621:CD,52652:CD,52660
52557 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,106244:JM,144988:JM,145790:JM,160899
52560 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,52660
52568 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,60615
52575 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,60626
52583 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,60646
52587 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,52617
52590 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,52617
52595 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,52617
52600 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,60677
52605 :: CALL :: call :: V :: v3.addAtom(v24)::CL,60796
52609 :: CALL :: call :: V :: v24.setGroup(v3)::CL,60977
52613 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,52617
52617 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,52595:CD,52600:CD,52605:CD,52609:CD,52613:JM,52617
52618 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,52621
52621 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,52625:CD,52644:CD,52648
52622 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,52648
52625 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,52648
52630 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,52648
52635 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,52556:CL,52698:CL,52873
52640 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,60988
52644 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,52648
52648 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,52630:CD,52635:CD,52640:CD,52644:JM,52648
52649 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,52652
52652 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,52656:CF,52660
52656 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,61020
52660 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,52557
52698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,52699:CD,52702:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,52710:CD,52718:CD,52726:CD,52734:CD,52741:CD,52748:CD,52771:CD,52775:CD,52776:CD,52780:CD,52821:CD,52829
52699 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,106244:JM,144988:JM,145790:JM,160899
52702 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,52829
52710 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,60615
52718 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,60626
52726 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,61059
52734 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,61079
52741 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,61090
52745 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,52775
52748 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,52775
52753 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,52775
52758 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,60677
52763 :: CALL :: call :: V :: v3.addAtom(v30)::CL,60796
52767 :: CALL :: call :: V :: v30.setGroup(v3)::CL,60977
52771 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,52775
52775 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,52753:CD,52758:CD,52763:CD,52767:CD,52771:JM,52775
52776 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,52780:CL,61101
52780 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,52781:CD,52785:CD,52789
52781 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,52789:CL,61101
52785 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,52789
52789 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,52790:CD,52794:CD,52813:CD,52817
52790 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,52817:CL,61101
52794 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,52817
52799 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,52817
52804 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,52556:CL,52698:CL,52873
52809 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,60988
52813 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,52817
52817 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,52799:CD,52804:CD,52809:CD,52813:JM,52817
52818 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,52821
52821 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,52825:CF,52829
52825 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,61020
52829 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,52699
52873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,52874:CD,52877:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,52885:CD,52893:CD,52901:CD,52908:CD,52931:CD,52935:CD,52936:CD,52940:CD,52981:CD,52989
52874 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,106244:JM,144988:JM,145790:JM,160899
52877 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,52989
52885 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,60615
52893 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,60626
52901 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,60646
52905 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,52935
52908 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,52935
52913 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,52935
52918 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,60677
52923 :: CALL :: call :: V :: v3.addAtom(v25)::CL,60796
52927 :: CALL :: call :: V :: v25.setGroup(v3)::CL,60977
52931 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,52935
52935 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,52913:CD,52918:CD,52923:CD,52927:CD,52931:JM,52935
52936 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,52940:CL,61101
52940 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,52941:CD,52945:CD,52949
52941 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,52949:CL,61101
52945 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,52949
52949 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,52950:CD,52954:CD,52973:CD,52977
52950 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,52977:CL,61101
52954 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,52977
52959 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,52977
52964 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,52556:CL,52698:CL,52873
52969 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,60988
52973 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,52977
52977 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,52959:CD,52964:CD,52969:CD,52973:JM,52977
52978 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,52981
52981 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,52985:CF,52989
52985 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,61020
52989 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,52874
53029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,53030:CD,53036
53030 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,53079:JM,60418:JM,120104
53033 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,53036
53036 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,53030
53038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,53039:CD,53046:JM,53079
53039 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,47311:JM,74564:JM,74565:JM,86609:JM,112079:JM,112107:JM,124298:JM,125459:JM,125460:JM,142190:JM,142202:JM,142214:JM,142226
53043 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,53046
53046 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,53050:CD,53055:CD,53056:CD,53060:CD,53081:CD,53085
53050 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,53055
53055 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,53056
53056 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,53039
53057 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,53069:JM,53085
53060 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,53069:JM,53085
53065 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,53069:JM,53085
53069 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,53080
53070 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,53079:CL,53029
53074 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,53079
53079 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,53080:CD,53081:CD,53085:JM,53069
53080 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,53039
53081 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,53069:JM,53085
53085 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,53065:CD,53069:CD,53070:CD,53074:CD,53079:CD,53086:JM,53085
53086 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,53039
53110 :: NORM :: declaration :: [D :: v6 = new []::DD,53111
53111 :: EXPR :: modify :: [D :: p0 $this .d_ = v6::
53114 :: CALL :: call :: J :: v8 = currentTimeMillis()::JM,53117
53117 :: EXPR :: modify :: J :: p0 $this .timeStart = v8::
53120 :: NORM :: declaration :: [[D :: v10 = new [][]::DD,53121
53121 :: EXPR :: modify :: [[D :: p0 $this .dist1 = v10::
53124 :: NORM :: declaration :: [[D :: v11 = new [][]::DD,53125
53125 :: EXPR :: modify :: [[D :: p0 $this .dist2 = v11::
53128 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters :: p0 $this .params = p1 $params ::
53131 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,53128:DD,53135
53135 :: EXPR :: modify :: Ljava/util/List :: p0 $this .matrixListeners = v12::
53173 :: CALL :: call :: V :: p0 $this .init()::CL,61131
53187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.extractFragments(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,53194:CD,53195:CD,53204:CD,53206:CD,53210:CD,53214:CD,53223:CD,53261:CD,53265:CD,53269:CD,53270:CD,53271:CD,53272:CD,53273:CD,53293:CD,53294:CD,53308:CD,53309
53194 :: EXPR :: assign :: I :: v6 = p2 $ca1 .length::DD,53204:DD,53206:DD,53308:CF,53195
53195 :: EXPR :: assign :: I :: v7 = p3 $ca2 .length::DD,53204:DD,53210:DD,53308
53204 :: PRED :: IF :: Z :: if (v6 >= v7) goto 39::CD,53308
53206 :: NORM :: declaration :: [I :: v11 = new []::DD,53207
53207 :: EXPR :: modify :: [I :: p0 $this .f1 = v11::
53210 :: NORM :: declaration :: [I :: v12 = new []::DD,53211
53211 :: EXPR :: modify :: [I :: p0 $this .f2 = v12::
53214 :: CALL :: call :: [[D :: v14 = p0 $this .initIntraDistmatrix(p2 $ca1 , v6)::JM,53220:CL,61425
53220 :: EXPR :: modify :: [[D :: p0 $this .dist1 = v14::
53223 :: CALL :: call :: [[D :: v16 = p0 $this .initIntraDistmatrix(p3 $ca2 , v7)::JM,53229:CL,61425
53229 :: EXPR :: modify :: [[D :: p0 $this .dist2 = v16::
53261 :: CALL :: call :: Ljava/lang/Integer :: v32 = v30.getWinSize()::JM,53283:JM,53269:JM,53270:CL,55066
53265 :: CALL :: call :: I :: v34 = v32.intValue()::JM,53283:JM,53269:JM,53270
53269 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 - #(1)::DD,53271:CF,53270
53270 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v34 - #(2)::CF,53271
53271 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v36 * v38::DD,53272
53272 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v39 / #(2)::DD,53286:CF,53273
53273 :: NORM :: declaration :: [I :: v41 = new []::DD,53274
53274 :: EXPR :: modify :: [I :: p0 $this .traceIndexContainer = v41::
53278 :: EXPR :: reference :: [I :: v42 = p0 $this .traceIndexContainer::
53281 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v51 + #(1)::DD,53282
53282 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v43 * v51::DD,53283
53283 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v44 * v34::DD,53284
53284 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v45 / #(2)::DD,53287:CF,53285
53285 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v51 + #(1)::DD,53286
53286 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v47 * v40::CF,53287
53287 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v46 + v48::DD,53288
53288 :: EXPR :: modify :: I :: v42[v51] = v49::
53292 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v51 + #(1)::DD,53309
53293 :: PRED :: IF :: Z :: if (v51 < v10) goto 149::CD,53281:CD,53282:CD,53283:CD,53284:CD,53285:CD,53286:CD,53287:CD,53292:CD,53309
53294 :: CALL :: call :: [[D :: v53 = p0 $this .initSumOfDistances(v6, v7, v34, v40, p2 $ca1 , p3 $ca2 )::JM,53304:CL,55079
53304 :: EXPR :: modify :: [[D :: p0 $this .mat = v53::
53308 :: EXPR :: assign :: null :: PHI v10 = v6, v7::DD,53273:DD,53293:CF,53206
53309 :: EXPR :: assign :: null :: PHI v51 = #(0), v50::DD,53281:DD,53282:DD,53285:DD,53292:DD,53293
53376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.traceFragmentMatrix(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,53386:CD,53390:CD,53403:CD,53407:CD,53421:CD,53425:CD,53429:CD,53430:CD,53431:CD,53433:CD,53437:CD,53441:CD,53445:CD,53454:CD,53458:CD,53462:CD,53470:CD,53474:CD,53478:CD,53482:CD,53502:CD,53509:CD,53513:CD,54198:CD,54259:CD,54260:CD,54261:CD,54352:CD,54353:CD,54354:CD,54355:CD,54357:CD,54358
53386 :: CALL :: call :: Ljava/lang/Double :: v8 = v6.getRmsdThr()::JM,53890:JM,53722:CL,61517
53390 :: CALL :: call :: D :: v10 = v8.doubleValue()::JM,53890:JM,53722
53394 :: EXPR :: modify :: D :: p0 $this .bestTraceScore = #(100.0 d)::
53397 :: EXPR :: modify :: I :: p0 $this .nBestTrace = #(0)::
53403 :: CALL :: call :: Ljava/lang/Integer :: v16 = v14.getWinSize()::JM,53857:JM,53861:JM,53686:JM,53818:JM,53819:JM,53931:JM,53693:JM,53806:JM,53823:CL,55066
53407 :: CALL :: call :: I :: v18 = v16.intValue()::JM,53857:JM,53861:JM,53686:JM,53818:JM,53819:JM,53931:JM,53693:JM,53806:JM,53823
53421 :: CALL :: call :: Ljava/lang/Double :: v29 = v27.getRmsdThrJoin()::JM,54049:JM,53934:JM,54030:CL,61530
53425 :: CALL :: call :: D :: v31 = v29.doubleValue()::JM,54049:JM,53934:JM,54030
53429 :: EXPR :: assign :: I :: v32 = p2 $ca1 .length::DD,53431:DD,53670:DD,53687:DD,53819:DD,53857:DD,54259:DD,54268:DD,54271:CF,53430
53430 :: EXPR :: assign :: I :: v33 = p3 $ca2 .length::DD,53431:DD,53672:DD,53694:DD,53823:DD,53861:DD,54259:DD,54273
53431 :: PRED :: IF :: Z :: if (v32 >= v33) goto 116::CD,54259
53433 :: NORM :: declaration :: [I :: v35 = new []::DD,53434
53434 :: EXPR :: modify :: [I :: p0 $this .bestTrace1 = v35::
53437 :: NORM :: declaration :: [I :: v36 = new []::DD,53438
53438 :: EXPR :: modify :: [I :: p0 $this .bestTrace2 = v36::
53441 :: NORM :: declaration :: [I :: v37 = new []::DD,53442
53442 :: EXPR :: modify :: [I :: p0 $this .trace1 = v37::
53445 :: NORM :: declaration :: [I :: v38 = new []::DD,53446
53446 :: EXPR :: modify :: [I :: p0 $this .trace2 = v38::
53454 :: CALL :: call :: Ljava/lang/Integer :: v43 = v41.getMaxGapSize()::JM,53462:JM,53463:CL,61543
53458 :: CALL :: call :: I :: v45 = v43.intValue()::JM,53462:JM,53463
53462 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 193::CD,53463:CD,53464:CD,54260
53463 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v45 * #(2)::DD,53464
53464 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v46 + #(1)::DD,54260
53467 :: EXPR :: modify :: I :: p0 $this .nTraces = #(0)::
53470 :: NORM :: declaration :: [[I :: v53 = new [][]::DD,53471
53471 :: EXPR :: modify :: [[I :: p0 $this .bestTraces1 = v53::
53474 :: NORM :: declaration :: [[I :: v54 = new [][]::DD,53475
53475 :: EXPR :: modify :: [[I :: p0 $this .bestTraces2 = v54::
53478 :: NORM :: declaration :: [I :: v55 = new []::DD,53479
53479 :: EXPR :: modify :: [I :: p0 $this .bestTracesN = v55::
53482 :: NORM :: declaration :: [D :: v56 = new []::DD,53483
53483 :: EXPR :: modify :: [D :: p0 $this .bestTracesScores = v56::
53487 :: EXPR :: reference :: [I :: v57 = p0 $this .bestTracesN::
53490 :: EXPR :: modify :: I :: v57[v60] = #(0)::
53494 :: EXPR :: reference :: [D :: v58 = p0 $this .bestTracesScores::
53497 :: EXPR :: modify :: D :: v58[v60] = #(100.0 d)::
53501 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v60 + #(1)::DD,54261
53502 :: PRED :: IF :: Z :: if (v60 < #(30)) goto 286::CD,53501:CD,54261
53503 :: EXPR :: modify :: I :: p0 $this .nBestTraces = #(0)::
53509 :: CALL :: call :: Ljava/lang/Double :: v64 = v62.getMaxOptRMSD()::JM,53904:JM,53937:JM,54033:JM,53736:CL,61556
53513 :: CALL :: call :: D :: v66 = v64.doubleValue()::JM,53904:JM,53937:JM,54033:JM,53736
53518 :: PRED :: IF :: Z :: if (v432 <= #(2)) goto 365::CD,53522:CD,53523:CD,53528:CD,54262
53519 :: EXPR :: reference :: D :: v67 = p0 $this .bestTraceScore::DD,53522
53522 :: EXPR :: assign :: Z :: v68 = v422 > v67::DD,53523
53523 :: PRED :: IF :: Z :: if (v68 > #(0)) goto 365::CD,53528:CD,54202:CD,54206:CD,54262
53525 :: EXPR :: reference :: D :: v69 = p0 $this .bestTraceScore::DD,54352
53528 :: PRED :: IF :: Z :: if (v432 != #(1)) goto 478::CF,54262:CD,53580:CD,53588:CD,53589:CD,53603:CD,54196:CD,54270:CD,54271:CD,54272:CD,54273:CD,54346:CD,54347:CD,54349:CD,54350:CD,54351
53580 :: CALL :: call :: D :: v92 = p0 $this .zStrAlign(v18, v70, v71, v90)::JM,53588:CL,61569
53588 :: EXPR :: assign :: Z :: v94 = v92 > #(-0.1 d)::DD,53589
53589 :: PRED :: IF :: Z :: if (v94 >= #(0)) goto 454::CD,53603:CD,54196:CD,54202:CD,54206:CD,54262:CD,54270:CD,54271:CD,54272:CD,54273:CD,54346:CD,54347:CD,54349:CD,54350:CD,54351
53591 :: EXPR :: reference :: I :: v95 = p0 $this .nBestTrace::DD,54262
53594 :: EXPR :: modify :: I :: p0 $this .nBestTrace = #(0)::
53597 :: EXPR :: modify :: D :: p0 $this .bestTraceScore = #(100.0 d)::
53600 :: EXPR :: modify :: I :: p0 $this .nTraces = #(0)::
53603 :: PRED :: IF :: Z :: if (v432 != #(0)) goto 501::CD,53605:CD,53669:CD,53670:CD,53671:CD,53672:CD,54263:CD,54264:CD,54265:CD,54266:CD,54267:CD,54268:CD,54269:CD,54270:CD,54271:CD,54272:CD,54273
53605 :: PRED :: IF :: Z :: if (v432 != #(1)) goto 544::CD,53620:CD,53635:CD,53644:CD,53652:CD,53660:CD,53668:CD,54263:CD,54264:CD,54265:CD,54266
53606 :: EXPR :: reference :: [I :: v97 = p0 $this .bestTrace1::
53609 :: EXPR :: reference :: I :: v98 = v97[#(0)]::DD,54263
53613 :: EXPR :: reference :: [I :: v99 = p0 $this .bestTrace1::
53616 :: EXPR :: reference :: I :: v100 = v99[#(0)]::DD,53620
53620 :: EXPR :: assign :: Ljava/lang/Object :: v101 = v100 + #(1)::DD,54264
53621 :: EXPR :: reference :: [I :: v102 = p0 $this .bestTrace2::
53624 :: EXPR :: reference :: I :: v103 = v102[#(0)]::DD,54265
53628 :: EXPR :: reference :: [I :: v104 = p0 $this .bestTrace2::
53631 :: EXPR :: reference :: I :: v105 = v104[#(0)]::DD,53635
53635 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::DD,54266
53637 :: EXPR :: reference :: [I :: v107 = p0 $this .bestTrace1::
53640 :: EXPR :: reference :: I :: v108 = v107[#(0)]::DD,53644
53644 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v108 - #(1)::DD,54263
53645 :: EXPR :: reference :: [I :: v110 = p0 $this .bestTrace1::
53648 :: EXPR :: reference :: I :: v111 = v110[#(0)]::DD,53652
53652 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v111 + #(2)::DD,54264
53653 :: EXPR :: reference :: [I :: v113 = p0 $this .bestTrace2::
53656 :: EXPR :: reference :: I :: v114 = v113[#(0)]::DD,53660
53660 :: EXPR :: assign :: Ljava/lang/Object :: v115 = v114 - #(1)::DD,54265
53661 :: EXPR :: reference :: [I :: v116 = p0 $this .bestTrace2::
53664 :: EXPR :: reference :: I :: v117 = v116[#(0)]::DD,53668
53668 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v117 + #(2)::DD,54266:CF,54263
53669 :: PRED :: IF :: Z :: if (v119 >= #(0)) goto 595::CF,54267
53670 :: PRED :: IF :: Z :: if (v120 <= v32) goto 604::CF,54268
53671 :: PRED :: IF :: Z :: if (v121 >= #(0)) goto 614::CF,54269
53672 :: PRED :: IF :: Z :: if (v122 <= v33) goto 625::CF,54270:CD,54271:CD,54272:CD,54273
53675 :: PRED :: IF :: Z :: if (v434 <= #(1)) goto 672::CD,53676:CD,53677:CD,53681
53676 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v126 + #(1)::CF,53677
53677 :: PRED :: IF :: Z :: if (v405 != v130) goto 672::CD,53678:CD,53679:CD,53681
53678 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v128 + #(1)::CF,53679
53679 :: PRED :: IF :: Z :: if (v380 != v131) goto 672::CD,53681:CD,54193:CD,54194:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53681 :: PRED :: IF :: Z :: if (v434 != #(0)) goto 713::CD,53685:CD,53686:CD,53687:CD,53688:CD,53708:CD,53709:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338
53682 :: EXPR :: reference :: I :: v132 = p0 $this .nBestTrace::DD,53685
53685 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v132 - #(1)::CF,53686
53686 :: EXPR :: assign :: Ljava/lang/Object :: v134 = v18 * v133::CF,53687
53687 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v32 - v134::CF,53688
53688 :: PRED :: IF :: Z :: if (v405 > v135) goto 1637::CF,54332:CD,53692:CD,53693:CD,53694:CD,53695:CD,54193:CD,54194:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53689 :: EXPR :: reference :: I :: v136 = p0 $this .nBestTrace::DD,53692
53692 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v136 - #(1)::CF,53693
53693 :: EXPR :: assign :: Ljava/lang/Object :: v138 = v18 * v137::CF,53694
53694 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v33 - v138::CF,53695
53695 :: PRED :: IF :: Z :: if (v380 <= v139) goto 713::CD,53708:CD,53709:CD,54193:CD,54194:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53697 :: EXPR :: reference :: [[D :: v140 = p0 $this .mat::
53700 :: EXPR :: reference :: Ljava/lang/Object :: v141 = v140[v405]::
53704 :: EXPR :: reference :: D :: v142 = v141[v380]::DD,53708
53708 :: EXPR :: assign :: Z :: v143 = v142 > #(0.0 d)::DD,53709
53709 :: PRED :: IF :: Z :: if (v143 >= #(0)) goto 731::CD,53722:CD,53723:CD,54193:CD,54194:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53711 :: EXPR :: reference :: [[D :: v144 = p0 $this .mat::
53714 :: EXPR :: reference :: Ljava/lang/Object :: v145 = v144[v405]::
53718 :: EXPR :: reference :: D :: v146 = v145[v380]::DD,53722
53722 :: EXPR :: assign :: Z :: v147 = v146 < v10::DD,53723
53723 :: PRED :: IF :: Z :: if (v147 <= #(0)) goto 750::CD,53736:CD,53737:CD,54193:CD,54194:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53725 :: EXPR :: reference :: [[D :: v148 = p0 $this .mat::
53728 :: EXPR :: reference :: Ljava/lang/Object :: v149 = v148[v405]::
53732 :: EXPR :: reference :: D :: v150 = v149[v380]::DD,53736
53736 :: EXPR :: assign :: Z :: v151 = v150 < v66::DD,53737
53737 :: PRED :: IF :: Z :: if (v151 <= #(0)) goto 770::CD,53790:CD,54192:CD,54193:CD,54194:CD,54324:CD,54325:CD,54327:CD,54328:CD,54329:CD,54330:CD,54331:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345
53739 :: EXPR :: modify :: I :: p0 $this .nTrace = #(0)::
53742 :: EXPR :: reference :: [I :: v152 = p0 $this .trace1::
53745 :: EXPR :: reference :: I :: v153 = p0 $this .nTrace::
53748 :: EXPR :: modify :: I :: v152[v153] = v405::
53752 :: EXPR :: reference :: [I :: v154 = p0 $this .trace2::
53755 :: EXPR :: reference :: I :: v155 = p0 $this .nTrace::
53758 :: EXPR :: modify :: I :: v154[v155] = v380::
53787 :: EXPR :: reference :: I :: v161 = p0 $this .nTrace::DD,53790
53790 :: EXPR :: assign :: Ljava/lang/Object :: v162 = v161 + #(1)::DD,53791
53791 :: EXPR :: modify :: I :: p0 $this .nTrace = v162::
53795 :: EXPR :: reference :: [I :: v164 = p0 $this .trace1::
53798 :: EXPR :: reference :: I :: v165 = p0 $this .nTrace::DD,53801
53801 :: EXPR :: assign :: Ljava/lang/Object :: v166 = v165 - #(1)::
53802 :: EXPR :: reference :: I :: v167 = v164[v166]::DD,53806
53806 :: EXPR :: assign :: Ljava/lang/Object :: v168 = v167 + v18::DD,54278
53807 :: EXPR :: reference :: [I :: v169 = p0 $this .trace2::
53810 :: EXPR :: reference :: I :: v170 = p0 $this .nTrace::DD,53813
53813 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v170 - #(1)::
53814 :: EXPR :: reference :: I :: v172 = v169[v171]::DD,53818
53818 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v172 + v18::DD,54279:CF,54274
53819 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v32 - v18::DD,53820
53820 :: EXPR :: assign :: Ljava/lang/Object :: v175 = v174 - #(1)::CF,53821
53821 :: PRED :: IF :: Z :: if (v184 <= v175) goto 895::CD,53823:CD,53824:CD,53825
53823 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v33 - v18::DD,53824
53824 :: EXPR :: assign :: Ljava/lang/Object :: v177 = v176 - #(1)::CF,53825
53825 :: PRED :: IF :: Z :: if (v185 <= v177) goto 905::CD,53838:CD,53839
53827 :: EXPR :: reference :: [[D :: v178 = p0 $this .mat::
53830 :: EXPR :: reference :: Ljava/lang/Object :: v179 = v178[v184]::
53834 :: EXPR :: reference :: D :: v180 = v179[v185]::DD,53838
53838 :: EXPR :: assign :: Z :: v181 = v180 < #(0.0 d)::DD,53839
53839 :: PRED :: IF :: Z :: if (v181 < #(0)) goto 922::CD,53819:CD,53820:CD,53821:CD,53841:CD,53842:CD,54274:CD,54275:CD,54277:CD,54278:CD,54279:CD,54280:CD,54281:CD,54282:CD,54283
53841 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v184 + #(1)::DD,54278:CF,53842
53842 :: EXPR :: assign :: Ljava/lang/Object :: v183 = v185 + #(1)::DD,54279
53844 :: PRED :: IF :: Z :: if (v345 == #(0)) goto 1231::CF,54300:CD,53966:CD,53967:CD,54055:CD,54192:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307:CD,54311:CD,54312:CD,54313:CD,54314:CD,54324:CD,54325:CD,54327:CD,54328:CD,54329:CD,54330:CD,54331:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338
53845 :: EXPR :: reference :: I :: v187 = p0 $this .nTrace::DD,54297
53849 :: EXPR :: assign :: Ljava/lang/Object :: v188 = v245 + #(1)::DD,53850
53850 :: EXPR :: assign :: Ljava/lang/Object :: v189 = v188 / #(2)::DD,53854:DD,53856:CF,53851
53851 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v245 + #(1)::DD,53852
53852 :: EXPR :: assign :: Ljava/lang/Object :: v191 = v190 % #(2)::DD,53853
53853 :: PRED :: IF :: Z :: if (v191 != #(0)) goto 999::CD,53854:CD,53856:CD,54284:CD,54285
53854 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v184 + v189::DD,54284
53856 :: EXPR :: assign :: Ljava/lang/Object :: v193 = v185 + v189::DD,54285:CF,54284
53857 :: EXPR :: assign :: Ljava/lang/Object :: v196 = v32 - v18::DD,53858
53858 :: EXPR :: assign :: Ljava/lang/Object :: v197 = v196 - #(1)::CF,53859
53859 :: PRED :: IF :: Z :: if (v194 <= v197) goto 1023::CD,53861:CD,53862:CD,53863:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53861 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v33 - v18::DD,53862
53862 :: EXPR :: assign :: Ljava/lang/Object :: v199 = v198 - #(1)::CF,53863
53863 :: PRED :: IF :: Z :: if (v195 <= v199) goto 1033::CD,53876:CD,53877:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53865 :: EXPR :: reference :: [[D :: v200 = p0 $this .mat::
53868 :: EXPR :: reference :: Ljava/lang/Object :: v201 = v200[v194]::
53872 :: EXPR :: reference :: D :: v202 = v201[v195]::DD,53876
53876 :: EXPR :: assign :: Z :: v203 = v202 > #(0.0 d)::DD,53877
53877 :: PRED :: IF :: Z :: if (v203 >= #(0)) goto 1051::CD,53890:CD,53891:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53879 :: EXPR :: reference :: [[D :: v204 = p0 $this .mat::
53882 :: EXPR :: reference :: Ljava/lang/Object :: v205 = v204[v194]::
53886 :: EXPR :: reference :: D :: v206 = v205[v195]::DD,53890
53890 :: EXPR :: assign :: Z :: v207 = v206 < v10::DD,53891
53891 :: PRED :: IF :: Z :: if (v207 <= #(0)) goto 1070::CD,53904:CD,53905:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53893 :: EXPR :: reference :: [[D :: v208 = p0 $this .mat::
53896 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v208[v194]::
53900 :: EXPR :: reference :: D :: v210 = v209[v195]::DD,53904
53904 :: EXPR :: assign :: Z :: v211 = v210 < v66::DD,53905
53905 :: PRED :: IF :: Z :: if (v211 <= #(0)) goto 1090::CD,53910:CD,53917:CD,53918:CD,53919:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53907 :: EXPR :: reference :: I :: v212 = p0 $this .nTraces::DD,53910
53910 :: EXPR :: assign :: Ljava/lang/Object :: v213 = v212 + #(1)::DD,53911
53911 :: EXPR :: modify :: I :: p0 $this .nTraces = v213::
53914 :: EXPR :: reference :: I :: v214 = p0 $this .nTraces::DD,53917
53917 :: EXPR :: assign :: J :: v215 = CONVERT I to J v214::DD,53918
53918 :: EXPR :: assign :: Z :: v216 = v215 == #(50000000 l)::DD,53919
53919 :: PRED :: IF :: Z :: if (v216 <= #(0)) goto 1120::CD,53921:CD,53931:CD,53932:CD,53933:CD,53934:CD,53935:CD,53965:CD,53966:CD,54286:CD,54287:CD,54288:CD,54289:CD,54290:CD,54292:CD,54293:CD,54294:CD,54295:CD,54296:CD,54297:CD,54298:CD,54299:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
53921 :: CALL :: call :: D :: v218 = p0 $this .getScoreFromDistanceMatrices(v194, v195, v18)::JM,53933:CL,61611
53928 :: EXPR :: reference :: I :: v219 = p0 $this .nTrace::DD,53931
53931 :: EXPR :: assign :: Ljava/lang/Object :: v220 = v219 * v18::CF,53932
53932 :: EXPR :: assign :: D :: v221 = CONVERT I to D v220::CF,53933
53933 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v218 / v221::DD,53934:DD,53937:DD,53948:DD,54288
53934 :: EXPR :: assign :: Z :: v223 = v222 < v31::DD,53935
53935 :: PRED :: IF :: Z :: if (v223 <= #(0)) goto 1153::CD,53937:CD,53938:CD,54286:CD,54287:CD,54288
53937 :: EXPR :: assign :: Z :: v224 = v222 < v66::DD,53938
53938 :: PRED :: IF :: Z :: if (v224 <= #(0)) goto 1165::CD,53943:CD,54286:CD,54287:CD,54288
53940 :: EXPR :: reference :: I :: v225 = p0 $this .nTrace::DD,53943
53943 :: PRED :: IF :: Z :: if (v225 > v243) goto 1195::CD,53947:CD,54286:CD,54287:CD,54288
53944 :: EXPR :: reference :: I :: v226 = p0 $this .nTrace::DD,53947
53947 :: PRED :: IF :: Z :: if (v226 != v243) goto 1218::CF,54286:CD,53948:CD,53949:CD,54287:CD,54288
53948 :: EXPR :: assign :: Z :: v227 = v222 > v244::DD,53949
53949 :: PRED :: IF :: Z :: if (v227 >= #(0)) goto 1218::CF,54286:CD,54287:CD,54288
53950 :: EXPR :: reference :: I :: v228 = p0 $this .nTrace::DD,54287
53965 :: EXPR :: assign :: Ljava/lang/Object :: v238 = v245 + #(1)::DD,54299:CF,54289
53966 :: PRED :: IF :: Z :: if (v245 < v48) goto 959::CF,54300:CD,53849:CD,53850:CD,53851:CD,53852:CD,53853:CD,53857:CD,53858:CD,53859:CD,53967:CD,54055:CD,54192:CD,54284:CD,54285:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307:CD,54311:CD,54312:CD,54313:CD,54314:CD,54324:CD,54325:CD,54327:CD,54328:CD,54329:CD,54330:CD,54331:CD,54332:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338
53967 :: PRED :: IF :: Z :: if (v249 == #(-1)) goto 1436::CF,54311:CD,53968:CD,53969:CD,53970:CD,53971:CD,53972:CD,53976:CD,54308:CD,54309
53968 :: EXPR :: assign :: Ljava/lang/Object :: v250 = v249 + #(1)::DD,53969
53969 :: EXPR :: assign :: Ljava/lang/Object :: v251 = v250 / #(2)::DD,53973:DD,53975:CF,53970
53970 :: EXPR :: assign :: Ljava/lang/Object :: v252 = v249 + #(1)::DD,53971
53971 :: EXPR :: assign :: Ljava/lang/Object :: v253 = v252 % #(2)::DD,53972
53972 :: PRED :: IF :: Z :: if (v253 != #(0)) goto 1277::CD,53973:CD,53975:CD,54308:CD,54309
53973 :: EXPR :: assign :: Ljava/lang/Object :: v254 = v184 + v251::DD,54308
53975 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v185 + v251::DD,54309:CF,54308
53976 :: PRED :: IF :: Z :: if (v438 != #(0)) goto 1413::CD,54017:CD,54030:CD,54031:CD,54049:CD,54050:CD,54310:CD,54311:CD,54312:CD,54313:CD,54314
54017 :: CALL :: call :: D :: v279 = p0 $this .getScore2(v256, v257, v49, v249, v39, v24, v26, v160, v277)::JM,54033:JM,54313:JM,54030:CL,61838
54030 :: EXPR :: assign :: Z :: v280 = v279 < v31::DD,54031
54031 :: PRED :: IF :: Z :: if (v280 <= #(0)) goto 1378::CD,54033:CD,54034:CD,54311:CD,54312:CD,54313:CD,54314
54033 :: EXPR :: assign :: Z :: v281 = v279 < v66::DD,54034
54034 :: PRED :: IF :: Z :: if (v281 <= #(0)) goto 1391::CD,54311:CD,54312:CD,54313:CD,54314
54049 :: EXPR :: assign :: Z :: v285 = #(0.0 d) < v31::DD,54050
54050 :: PRED :: IF :: Z :: if (v285 <= #(0)) goto 1436::CF,54310:CD,54054
54051 :: EXPR :: reference :: I :: v286 = p0 $this .nBestTrace::DD,54054
54054 :: PRED :: IF :: Z :: if (v286 < v96) goto 1436::CF,54310
54055 :: PRED :: IF :: Z :: if (v295 != #(-1)) goto 1458::CD,54059:CD,54114:CD,54124:CD,54180:CD,54321:CD,54322:CD,54323:CD,54324:CD,54325:CD,54327:CD,54328:CD,54329:CD,54330:CD,54331
54056 :: EXPR :: reference :: I :: v324 = p0 $this .nTrace::DD,54059
54059 :: EXPR :: assign :: Ljava/lang/Object :: v325 = v324 - #(1)::DD,54060
54060 :: EXPR :: modify :: I :: p0 $this .nTrace = v325::
54077 :: EXPR :: reference :: [I :: v300 = p0 $this .trace1::
54080 :: EXPR :: reference :: I :: v301 = p0 $this .nTrace::
54083 :: EXPR :: modify :: I :: v300[v301] = v292::
54087 :: EXPR :: reference :: [I :: v302 = p0 $this .trace2::
54090 :: EXPR :: reference :: I :: v303 = p0 $this .nTrace::
54093 :: EXPR :: modify :: I :: v302[v303] = v293::
54111 :: EXPR :: reference :: I :: v306 = p0 $this .nTrace::DD,54114
54114 :: EXPR :: assign :: Ljava/lang/Object :: v307 = v306 + #(1)::DD,54115
54115 :: EXPR :: modify :: I :: p0 $this .nTrace = v307::
54118 :: EXPR :: reference :: I :: v308 = p0 $this .nTrace::DD,54124
54121 :: EXPR :: reference :: I :: v309 = p0 $this .nBestTrace::DD,54124
54124 :: PRED :: IF :: Z :: if (v308 > v309) goto 1555::CD,54131:CD,54170:CD,54316:CD,54317:CD,54318:CD,54319:CD,54321:CD,54322:CD,54323
54125 :: EXPR :: reference :: I :: v310 = p0 $this .nTrace::DD,54131
54128 :: EXPR :: reference :: I :: v311 = p0 $this .nBestTrace::DD,54131
54131 :: PRED :: IF :: Z :: if (v310 != v311) goto 1614::CD,54135:CD,54136:CD,54321:CD,54322:CD,54323
54132 :: EXPR :: reference :: D :: v312 = p0 $this .bestTraceScore::DD,54135
54135 :: EXPR :: assign :: Z :: v313 = v312 < v294::DD,54136
54136 :: PRED :: IF :: Z :: if (v313 <= #(0)) goto 1614::CD,54170:CD,54316:CD,54317:CD,54318:CD,54319:CD,54321:CD,54322:CD,54323
54138 :: EXPR :: reference :: [I :: v315 = p0 $this .bestTrace1::
54141 :: EXPR :: reference :: [I :: v316 = p0 $this .trace1::
54144 :: EXPR :: reference :: I :: v317 = v316[v322]::DD,54148
54148 :: EXPR :: modify :: I :: v315[v322] = v317::
54152 :: EXPR :: reference :: [I :: v318 = p0 $this .bestTrace2::
54155 :: EXPR :: reference :: [I :: v319 = p0 $this .trace2::
54158 :: EXPR :: reference :: I :: v320 = v319[v322]::DD,54162
54162 :: EXPR :: modify :: I :: v318[v322] = v320::
54166 :: EXPR :: assign :: Ljava/lang/Object :: v321 = v322 + #(1)::DD,54319
54167 :: EXPR :: reference :: I :: v314 = p0 $this .nTrace::DD,54170
54170 :: PRED :: IF :: Z :: if (v322 < v314) goto 1559::CD,54166:CD,54316:CD,54317:CD,54318:CD,54319
54171 :: EXPR :: modify :: D :: p0 $this .bestTraceScore = v294::
54174 :: EXPR :: reference :: I :: v323 = p0 $this .nTrace::DD,54177
54177 :: EXPR :: modify :: I :: p0 $this .nBestTrace = v323::
54180 :: PRED :: IF :: Z :: if (v440 != #(0)) goto 1631::CF,54324:CD,54182:CD,54325:CD,54327:CD,54328:CD,54329:CD,54330:CD,54331
54182 :: CALL :: call :: I :: v328 = p0 $this .doIter0(v362, v294, v326)::CL,61954
54189 :: EXPR :: reference :: I :: v163 = p0 $this .nTrace::DD,54192
54192 :: PRED :: IF :: Z :: if (v163 > #(0)) goto 843::CF,54332:CD,53801:CD,53806:CD,53813:CD,53818:CD,53819:CD,53820:CD,53821:CD,53844:CD,54193:CD,54194:CD,54274:CD,54275:CD,54277:CD,54278:CD,54279:CD,54280:CD,54281:CD,54282:CD,54283:CD,54333:CD,54335:CD,54336:CD,54337:CD,54338:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345:CD,54300:CD,54301:CD,54303:CD,54304:CD,54305:CD,54306:CD,54307
54193 :: EXPR :: assign :: Ljava/lang/Object :: v371 = v394 + #(1)::DD,54345:CF,54339
54194 :: PRED :: IF :: Z :: if (v380 < v129) goto 646::CD,53675:CD,54195:CD,54196:CD,54346:CD,54347:CD,54349:CD,54350:CD,54351
54195 :: EXPR :: assign :: Ljava/lang/Object :: v395 = v405 + #(1)::DD,54351:CF,54346
54196 :: PRED :: IF :: Z :: if (v404 < v127) goto 632::CD,54194:CD,54197:CD,54198:CD,54339:CD,54340:CD,54342:CD,54343:CD,54344:CD,54345:CD,54352:CD,54353:CD,54354:CD,54355:CD,54357:CD,54358
54197 :: EXPR :: assign :: Ljava/lang/Object :: v421 = v433 + #(1)::DD,54358:CF,54352
54198 :: PRED :: IF :: Z :: if (v432 < #(1)) goto 348::CD,53518:CD,54202:CD,54206
54202 :: CALL :: call :: Z :: v445 = v443.isShowAFPRanges()::JM,54206:CL,62232
54206 :: PRED :: IF :: Z :: if (v445 == #(0)) goto 1731::CD,54209:CD,54217:CD,54221:CD,54226:CD,54230:CD,54236:CD,54244:CD,54249:CD,54253
54209 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v447 = new java.lang.StringBuilder::
54217 :: CALL :: call :: Ljava/lang/Integer :: v452 = v450.getWinSize()::CL,55066
54221 :: CALL :: call :: Ljava/lang/StringBuilder :: v454 = v447.append(v452)::
54226 :: CALL :: call :: Ljava/lang/String :: v456 = v454.toString()::
54230 :: CALL :: call :: V :: v446.println(v456)::
54236 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v459 = new java.lang.StringBuilder::
54241 :: EXPR :: reference :: I :: v462 = p0 $this .nTraces::
54244 :: CALL :: call :: Ljava/lang/StringBuilder :: v464 = v459.append(v462)::
54249 :: CALL :: call :: Ljava/lang/String :: v466 = v464.toString()::
54253 :: CALL :: call :: V :: v458.println(v466)::
54259 :: EXPR :: assign :: null :: PHI v34 = v32, v33::DD,53433:DD,53437:DD,53441:DD,53445:DD,53470:DD,53474:DD,54260
54260 :: EXPR :: assign :: null :: PHI v48 = v47, v34::DD,53966
54261 :: EXPR :: assign :: null :: PHI v60 = #(0), v59::DD,53501:DD,53502
54262 :: EXPR :: assign :: null :: PHI v96 = v423, v95::DD,54054:DD,54353:CF,53603
54263 :: EXPR :: assign :: null :: PHI v119 = v98, v109::CF,54264:DD,53669:DD,54267
54264 :: EXPR :: assign :: null :: PHI v120 = v101, v112::CF,54265:DD,53670:DD,54268
54265 :: EXPR :: assign :: null :: PHI v121 = v103, v115::CF,54266:DD,53671:DD,54269
54266 :: EXPR :: assign :: null :: PHI v122 = v106, v118::DD,53672:DD,54273:CF,53669
54267 :: EXPR :: assign :: null :: PHI v123 = v119, #(0)::DD,54270:CF,53670
54268 :: EXPR :: assign :: null :: PHI v124 = v120, v32::DD,54271:CF,53671
54269 :: EXPR :: assign :: null :: PHI v125 = v121, #(0)::DD,54272:CF,53672
54270 :: EXPR :: assign :: null :: PHI v126 = #(0), v123, v123::CF,54271:DD,53676:DD,54351
54271 :: EXPR :: assign :: null :: PHI v127 = v32, v124, v124::CF,54272:DD,54196
54272 :: EXPR :: assign :: null :: PHI v128 = #(0), v125, v125::CF,54273:DD,53678:DD,54345
54273 :: EXPR :: assign :: null :: PHI v129 = v33, v122, v33::DD,54194
54274 :: EXPR :: assign :: null :: PHI v341 = v341, v332::CF,54275:DD,54274:DD,54289:DD,54300
54275 :: EXPR :: assign :: null :: PHI v342 = v342, v333::DD,54275:DD,54290:DD,54301
54277 :: EXPR :: assign :: null :: PHI v344 = v344, v335::CF,54278:DD,54277:DD,54292:DD,54303
54278 :: EXPR :: assign :: null :: PHI v184 = v182, v168::CF,54279:DD,53821:DD,53841:DD,53854:DD,53973:DD,54284:DD,54308
54279 :: EXPR :: assign :: null :: PHI v185 = v183, v173::CF,54280:DD,53825:DD,53842:DD,53856:DD,53975:DD,54285:DD,54309
54280 :: EXPR :: assign :: null :: PHI v436 = v436, v435::CF,54281:DD,54280:DD,54293:DD,54304
54281 :: EXPR :: assign :: null :: PHI v409 = v409, v407::CF,54282:DD,54281:DD,54294:DD,54305
54282 :: EXPR :: assign :: null :: PHI v384 = v384, v382::CF,54283:DD,54282:DD,54295:DD,54306
54283 :: EXPR :: assign :: null :: PHI v345 = v345, v336::DD,53844:DD,54283:CF,53819
54284 :: EXPR :: assign :: null :: PHI v194 = v192, v184::CF,54285:DD,53859
54285 :: EXPR :: assign :: null :: PHI v195 = v185, v193::DD,53863:CF,53857
54286 :: EXPR :: assign :: null :: PHI v235 = v242, v242, v242, v242, v242, v242, v242, v242, v242, v245::CF,54287:DD,54296
54287 :: EXPR :: assign :: null :: PHI v236 = v243, v243, v243, v243, v243, v243, v243, v243, v243, v228::CF,54288:DD,54297
54288 :: EXPR :: assign :: null :: PHI v237 = v244, v244, v244, v244, v244, v244, v244, v244, v244, v222::DD,54298:CF,53965
54289 :: EXPR :: assign :: null :: PHI v349 = v341, v349::CF,54290:DD,54289:DD,54300
54290 :: EXPR :: assign :: null :: PHI v350 = v342, v350::DD,54290:DD,54301
54292 :: EXPR :: assign :: null :: PHI v352 = v344, v352::CF,54293:DD,54292:DD,54303
54293 :: EXPR :: assign :: null :: PHI v437 = v436, v437::CF,54294:DD,54293:DD,54304
54294 :: EXPR :: assign :: null :: PHI v411 = v409, v411::CF,54295:DD,54294:DD,54305
54295 :: EXPR :: assign :: null :: PHI v386 = v384, v386::CF,54296:DD,54295:DD,54306
54296 :: EXPR :: assign :: null :: PHI v242 = #(-1), v235::CF,54297:DD,54286:DD,54307
54297 :: EXPR :: assign :: null :: PHI v243 = v187, v236::CF,54298:DD,53943:DD,53947:DD,54287
54298 :: EXPR :: assign :: null :: PHI v244 = #(100.0 d), v237::CF,54299:DD,53948:DD,54288
54299 :: EXPR :: assign :: null :: PHI v245 = #(0), v238::DD,53849:DD,53851:DD,53965:DD,53966:DD,54286
54300 :: EXPR :: assign :: null :: PHI v356 = v341, v349::CF,54301:DD,54311
54301 :: EXPR :: assign :: null :: PHI v357 = v342, v350::DD,54312
54303 :: EXPR :: assign :: null :: PHI v359 = v344, v352::CF,54304:DD,54313
54304 :: EXPR :: assign :: null :: PHI v438 = v436, v437::CF,54305:DD,53976:DD,54316:DD,54321:DD,54328
54305 :: EXPR :: assign :: null :: PHI v413 = v409, v411::CF,54306:DD,54317:DD,54322:DD,54329
54306 :: EXPR :: assign :: null :: PHI v388 = v384, v386::CF,54307:DD,54318:DD,54323:DD,54330
54307 :: EXPR :: assign :: null :: PHI v249 = #(-1), v242::DD,53967:DD,53968:DD,53970:DD,54310:DD,54314
54308 :: EXPR :: assign :: null :: PHI v256 = v254, v184::CF,54309:DD,54311
54309 :: EXPR :: assign :: null :: PHI v257 = v185, v255::DD,54312:CF,53976
54310 :: EXPR :: assign :: null :: PHI v287 = v249, v249, #(-1)::DD,54314:CF,54311
54311 :: EXPR :: assign :: null :: PHI v292 = v356, v256, v256, v256, v256::CF,54312:DD,54083:DD,54324
54312 :: EXPR :: assign :: null :: PHI v293 = v357, v257, v257, v257, v257::CF,54313:DD,54093:DD,54325
54313 :: EXPR :: assign :: null :: PHI v294 = v359, v359, v359, v279, #(0.0 d)::CF,54314:DD,54135:DD,54171:DD,54327
54314 :: EXPR :: assign :: null :: PHI v295 = v249, #(-1), #(-1), v249, v287::DD,54055
54316 :: EXPR :: assign :: null :: PHI v439 = v438, v439::CF,54317:DD,54316:DD,54321
54317 :: EXPR :: assign :: null :: PHI v415 = v413, v415::CF,54318:DD,54317:DD,54322
54318 :: EXPR :: assign :: null :: PHI v390 = v388, v390::CF,54319:DD,54318:DD,54323
54319 :: EXPR :: assign :: null :: PHI v322 = #(0), v321::DD,54166:DD,54170
54321 :: EXPR :: assign :: null :: PHI v440 = v438, v438, v439::CF,54322:DD,54180:DD,54328
54322 :: EXPR :: assign :: null :: PHI v417 = v413, v413, v415::CF,54323:DD,54329
54323 :: EXPR :: assign :: null :: PHI v392 = v388, v388, v390::DD,54330:CF,54180
54324 :: EXPR :: assign :: null :: PHI v332 = v376, v292, v292, v292::CF,54325:DD,54274:DD,54332
54325 :: EXPR :: assign :: null :: PHI v333 = v377, v293, v293, v293::DD,54275:DD,54333
54327 :: EXPR :: assign :: null :: PHI v335 = v379, v294, v294, v294::CF,54328:DD,54277:DD,54335
54328 :: EXPR :: assign :: null :: PHI v435 = v434, v438, v440, v440::CF,54329:DD,54280:DD,54336
54329 :: EXPR :: assign :: null :: PHI v407 = v405, v413, v417, v417::CF,54330:DD,54281:DD,54337
54330 :: EXPR :: assign :: null :: PHI v382 = v380, v388, v392, v392::CF,54331:DD,54282:DD,54338
54331 :: EXPR :: assign :: null :: PHI v336 = #(1), #(0), #(1), #(1)::DD,54283
54332 :: EXPR :: assign :: null :: PHI v367 = v376, v376, v376, v376, v376, v376, v332::CF,54333:DD,54339
54333 :: EXPR :: assign :: null :: PHI v368 = v377, v377, v377, v377, v377, v377, v333::DD,54340
54335 :: EXPR :: assign :: null :: PHI v370 = v379, v379, v379, v379, v379, v379, v335::CF,54336:DD,54342
54336 :: EXPR :: assign :: null :: PHI v441 = v434, v434, v434, v434, v434, v434, v435::CF,54337:DD,54343
54337 :: EXPR :: assign :: null :: PHI v419 = v405, v405, v405, v405, v405, v405, v407::CF,54338:DD,54344
54338 :: EXPR :: assign :: null :: PHI v394 = v380, v380, v380, v380, v380, v380, v382::DD,54193
54339 :: EXPR :: assign :: null :: PHI v376 = v400, v367::CF,54340:DD,54324:DD,54332:DD,54346
54340 :: EXPR :: assign :: null :: PHI v377 = v401, v368::DD,54325:DD,54333:DD,54347
54342 :: EXPR :: assign :: null :: PHI v379 = v403, v370::CF,54343:DD,54327:DD,54335:DD,54349
54343 :: EXPR :: assign :: null :: PHI v434 = v433, v441::CF,54344:DD,53675:DD,53681:DD,54328:DD,54336:DD,54350
54344 :: EXPR :: assign :: null :: PHI v405 = v404, v419::CF,54345:DD,53677:DD,53688:DD,53748:DD,54195:DD,54329:DD,54337
54345 :: EXPR :: assign :: null :: PHI v380 = v128, v371::DD,53679:DD,53695:DD,53758:DD,54194:DD,54330:DD,54338
54346 :: EXPR :: assign :: null :: PHI v400 = v428, v376::CF,54347:DD,54339:DD,54354
54347 :: EXPR :: assign :: null :: PHI v401 = v429, v377::DD,54340:DD,54355
54349 :: EXPR :: assign :: null :: PHI v403 = v431, v379::CF,54350:DD,54342:DD,54357
54350 :: EXPR :: assign :: null :: PHI v433 = v432, v434::CF,54351:DD,54197:DD,54343
54351 :: EXPR :: assign :: null :: PHI v404 = v126, v395::DD,54196:DD,54344
54352 :: EXPR :: assign :: null :: PHI v422 = #(10000.0 d), v69::CF,54353:DD,53522
54353 :: EXPR :: assign :: null :: PHI v423 = #(0), v96::CF,54354:DD,54262
54354 :: EXPR :: assign :: null :: PHI v428 = #(0), v400::CF,54355:DD,54346
54355 :: EXPR :: assign :: null :: PHI v429 = #(0), v401::DD,54347
54357 :: EXPR :: assign :: null :: PHI v431 = #(0.0 d), v403::CF,54358:DD,54349
54358 :: EXPR :: assign :: null :: PHI v432 = #(0), v421::DD,53518:DD,53528:DD,53603:DD,53605:DD,54198:DD,54350
54906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.nextStep(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,54916:CD,54927:CD,54933
54913 :: EXPR :: reference :: I :: v6 = p0 $this .nBestTrace::DD,54916
54916 :: PRED :: IF :: Z :: if (v6 <= #(0)) goto 18::CD,54917
54917 :: CALL :: call :: V :: p0 $this .checkBestTraces(p1 $afpChain , p2 $ca1 , p3 $ca2 )::CL,62241
54927 :: CALL :: call :: V :: p0 $this .convertAfpChain(p1 $afpChain , p2 $ca1 , p3 $ca2 )::CL,64233
54933 :: CALL :: call :: V :: getAlign(p1 $afpChain , p2 $ca1 , p3 $ca2 )::CL,64809
54975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,54976:CD,54982
54976 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,55411:JM,55447:JM,91567:JM,148294
54979 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,54982
54982 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,54976
54993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getNrEQR()::CE,54994:CD,55000
54994 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getNrEQR()::JM,47499:JM,55336:JM,77144:JM,77209
54997 :: EXPR :: reference :: I :: v3 = p0 $this .myResultsEQR::DD,55000
55000 :: PRED :: IF :: Z :: if (v3 >= #(0)) goto 66::CD,55004:CD,55032
55001 :: EXPR :: reference :: [I :: v5 = p0 $this .optLen::DD,55004
55004 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 25::CD,55008:CD,55025:CD,55032:CD,55036:CD,55037
55008 :: NORM :: compound :: I :: return #(0)::DD,54994
55011 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,55033:CF,55012
55012 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v14 + #(1)::DD,55035:CF,55033
55013 :: EXPR :: reference :: [I :: v8 = p0 $this .optLen::
55016 :: EXPR :: reference :: I :: v9 = v8[v18]::DD,55020
55020 :: PRED :: IF :: Z :: if (v14 < v9) goto 33::CD,55011:CD,55012:CD,55033:CD,55034:CD,55035:CF,55021
55021 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,55037:CF,55036
55022 :: EXPR :: reference :: I :: v7 = p0 $this .blockNum::DD,55025
55025 :: PRED :: IF :: Z :: if (v17 < v7) goto 30::CD,55020:CD,55021:CD,55033:CD,55034:CD,55035:CD,55036:CD,55037
55026 :: EXPR :: modify :: I :: p0 $this .myResultsEQR = v16::
55029 :: EXPR :: reference :: I :: v19 = p0 $this .myResultsEQR::DD,55032
55032 :: NORM :: compound :: I :: return v19::DD,54994
55033 :: EXPR :: assign :: null :: PHI v13 = v16, v11::CF,55034:DD,55011:DD,55036
55034 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,55035:DD,55021:DD,55034
55035 :: EXPR :: assign :: null :: PHI v14 = #(0), v12::DD,55012:DD,55020
55036 :: EXPR :: assign :: null :: PHI v16 = #(0), v13::CF,55037:DD,55026:DD,55033
55037 :: EXPR :: assign :: null :: PHI v17 = #(0), v15::DD,55025:DD,55034
55066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getWinSize()::CE,55067:CD,55073:CD,55077
55067 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.align.ce.CeParameters.getWinSize()::JM,53283:JM,53269:JM,53270:JM,53857:JM,53861:JM,53686:JM,53818:JM,53819:JM,53931:JM,53693:JM,53806:JM,53823:JM,62454:JM,62472:JM,62905:JM,62429:JM,62974
55070 :: EXPR :: reference :: I :: v3 = p0 $this .winSize::JM,55077
55073 :: CALL :: call :: Ljava/lang/Integer :: v5 = valueOf(v3)::JM,55077
55077 :: NORM :: compound :: Ljava/lang/Integer :: return v5::DD,55067
55079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.initSumOfDistances(int,int,int,int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,55080:CD,55089:CD,55158:CD,55159:CD,55173:JM,55156:JM,55141:JM,55143:JM,55100:JM,55149:JM,55102
55080 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.align.ce.CECalculator.initSumOfDistances(int,int,int,int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,53304
55089 :: NORM :: declaration :: [[D :: v9 = new [][]::DD,55159
55092 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v9[v51]::
55096 :: EXPR :: modify :: D :: v11[v45] = #(-1.0 d)::
55100 :: EXPR :: assign :: Ljava/lang/Object :: v13 = p1 $nse1  - p3 $winSize ::CF,55101
55101 :: PRED :: IF :: Z :: if (v51 > v13) goto 143::CF,55169:CD,55102:CD,55103
55102 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p2 $nse2  - p3 $winSize ::CF,55103
55103 :: PRED :: IF :: Z :: if (v45 <= v14) goto 56::CD,55143:CD,55144:CD,55149:CD,55150:CD,55165:CD,55166:CD,55167:CD,55168:CD,55169:CD,55170
55106 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v39 + #(2)::DD,55164
55108 :: EXPR :: reference :: [[D :: v19 = p0 $this .dist1::
55111 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v53 + v40::
55112 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v19[v20]::
55116 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v53 + v36::
55117 :: EXPR :: reference :: D :: v23 = v21[v22]::DD,55134
55121 :: EXPR :: reference :: [[D :: v24 = p0 $this .dist2::
55124 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v47 + v40::
55125 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v24[v25]::
55129 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v47 + v36::
55130 :: EXPR :: reference :: D :: v28 = v26[v27]::DD,55134
55134 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v23 - v28::JM,55139:JM,55135
55135 :: CALL :: call :: D :: v31 = abs(v29)::JM,55139:JM,55135
55139 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v35 + v31::DD,55160:CF,55140
55140 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v36 + #(1)::DD,55164:CF,55160
55141 :: PRED :: IF :: Z :: if (v36 < p3 $winSize ) goto 71::CD,55111:CD,55116:CD,55124:CD,55129:CD,55134:CD,55135:CD,55139:CD,55140:CD,55160:CD,55161:CD,55162:CD,55163:CD,55164:CF,55142
55142 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v40 + #(1)::DD,55168:CF,55165
55143 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p3 $winSize  - #(2)::CF,55144
55144 :: PRED :: IF :: Z :: if (v39 < v17) goto 62::CD,55106:CD,55141:CD,55142:CD,55143:CD,55160:CD,55161:CD,55162:CD,55163:CD,55164:CD,55165:CD,55166:CD,55167:CD,55168
55145 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v9[v52]::
55149 :: EXPR :: assign :: D :: v42 = CONVERT I to D p4 $winSizeComb1 ::CF,55150
55150 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v38 / v42::DD,55151
55151 :: EXPR :: modify :: D :: v41[v46] = v43::
55155 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v48 + #(1)::DD,55172:CF,55171
55156 :: PRED :: IF :: Z :: if (v45 < p2 $nse2 ) goto 24::CD,55100:CD,55101:CD,55155:CD,55169:CD,55170:CD,55171:CD,55172:CF,55157
55157 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v51 + #(1)::DD,55173
55158 :: PRED :: IF :: Z :: if (v50 < p1 $nse1 ) goto 17::CD,55156:CD,55157:CD,55171:CD,55172:CD,55173:CF,55159
55159 :: NORM :: compound :: [[D :: return v9::DD,55080
55160 :: EXPR :: assign :: null :: PHI v35 = v38, v32::CF,55161:DD,55139:DD,55165
55161 :: EXPR :: assign :: null :: PHI v53 = v52, v53::CF,55162:DD,55111:DD,55116:DD,55161:DD,55166
55162 :: EXPR :: assign :: null :: PHI v47 = v46, v47::CF,55163:DD,55124:DD,55129:DD,55162:DD,55167
55163 :: EXPR :: assign :: null :: PHI v40 = v39, v40::CF,55164:DD,55111:DD,55124:DD,55142:DD,55163
55164 :: EXPR :: assign :: null :: PHI v36 = v18, v34::DD,55116:DD,55129:DD,55140:DD,55141
55165 :: EXPR :: assign :: null :: PHI v38 = #(0.0 d), v35::CF,55166:DD,55150:DD,55160
55166 :: EXPR :: assign :: null :: PHI v52 = v51, v53::CF,55167:DD,55161:DD,55169
55167 :: EXPR :: assign :: null :: PHI v46 = v45, v47::CF,55168:DD,55162:DD,55170
55168 :: EXPR :: assign :: null :: PHI v39 = #(0), v37::DD,55106:DD,55144:DD,55163:CF,55143
55169 :: EXPR :: assign :: null :: PHI v54 = v51, v51, v52::CF,55170:DD,55171
55170 :: EXPR :: assign :: null :: PHI v48 = v45, v45, v46::DD,55155
55171 :: EXPR :: assign :: null :: PHI v51 = v50, v54::CF,55172:DD,55101:DD,55157:DD,55166:DD,55169
55172 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,55103:DD,55156:DD,55167:DD,55170
55173 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,55158:DD,55171
55240 :: EXPR :: assign :: I :: v5 = p1 $A .length::DD,55241
55241 :: EXPR :: modify :: I :: p0 $this .m = v5::
55244 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $A [#(0)]::DD,55248
55248 :: EXPR :: assign :: I :: v8 = v7.length::DD,55249
55249 :: EXPR :: modify :: I :: p0 $this .n = v8::
55262 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::JM,55240:JM,55273
55273 :: EXPR :: modify :: [[D :: p0 $this .A = p1 $A ::
55317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isOutputPDB()::CE,55318:CD,55324
55318 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isOutputPDB()::JM,47888:JM,55672
55321 :: EXPR :: reference :: Z :: v3 = p0 $this .printPDB::DD,55324
55324 :: NORM :: compound :: Z :: return v3::CF,55318
55326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.createArtificalStructure(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,55327:CD,55332:CD,55336
55327 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.createArtificalStructure(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,48165:JM,48014
55332 :: CALL :: call :: I :: v6 = p1 $afpChain .getNrEQR()::JM,55336:CL,54993
55336 :: PRED :: IF :: Z :: if (v6 >= #(1)) goto 17::CD,55337:CD,55342:CD,55343:CD,55349:CD,55353:CD,55378:CD,55379:CD,55383:CD,55384:CD,55390:CD,55394:CD,55402:CD,55406:CD,55426:CD,55430:CD,55438:CD,55442:CD,55462:CD,55468:CD,55474:CD,55479:CD,55480
55337 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v73 = getAlignedStructure(p2 $ca1 , p3 $ca2 )::JM,55342:CL,64826
55342 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v73::DD,55327
55343 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v9 = prepareGroupsForDisplay(p1 $afpChain , p2 $ca1 , p3 $ca2 )::JM,55353:CL,64896
55349 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,55383
55353 :: EXPR :: assign :: I :: v12 = v9.length::DD,55378
55355 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v9[v23]::DD,55359:JM,55361:JM,55365:JM,55367
55359 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 60::CD,55361:CD,55365
55361 :: CALL :: call :: I :: v17 = v14.size()::JM,55361:JM,55365
55365 :: PRED :: IF :: Z :: if (v17 >= #(1)) goto 75::CD,55367:CD,55372
55367 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v19 = v14.getAtom(#(0))::JM,55367
55372 :: CALL :: call :: Z :: v21 = v10.add(v19)::
55377 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,55480
55378 :: PRED :: IF :: Z :: if (v23 < v12) goto 47::CD,55359:CD,55377:CD,55480:JM,55383
55379 :: CALL :: call :: I :: v25 = v10.size()::JM,55383
55383 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v26 = new org.biojava.nbio.structure.Atom[]::
55384 :: CALL :: call :: [Ljava/lang/Object :: v28 = v10.toArray(v26)::
55390 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::
55394 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::
55402 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v36 = v34.getGroup()::JM,55406:CL,52547
55406 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 198::CD,55407:CD,55411
55407 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = v36.getChain()::JM,55411:CL,54975
55411 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 198::CD,55414:CD,55421
55414 :: CALL :: call :: Ljava/util/List :: v41 = v38.getAtomGroups(v39)::CL,64975
55421 :: CALL :: call :: Ljava/util/List :: v44 = v38.getAtomGroups(v42)::CL,64975
55426 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
55430 :: NORM :: declaration :: Ljava/util/ArrayList :: v50 = new java.util.ArrayList::
55438 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v54 = v52.getGroup()::JM,55442:CL,52547
55442 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 277::CD,55443:CD,55447
55443 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v56 = v54.getChain()::JM,55447:CL,54975
55447 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 277::CD,55450:CD,55457
55450 :: CALL :: call :: Ljava/util/List :: v59 = v56.getAtomGroups(v57)::CL,64975
55457 :: CALL :: call :: Ljava/util/List :: v62 = v56.getAtomGroups(v60)::CL,64975
55462 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v67 = getAtomArray(p2 $ca1 , v45, v46)::CL,65033
55468 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v69 = getAtomArray(v29, v63, v64)::CL,65033
55474 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v71 = getAlignedStructure(v67, v69)::JM,55479:CL,64826
55479 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v71::DD,55327
55480 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,55377:DD,55378
55570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlgorithmName()::CE,55571:CD,55577
55571 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.getAlgorithmName()::JM,78747
55574 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .algorithmName::DD,55577
55577 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55571
55579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getVersion()::CE,55580:CD,55586
55580 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.getVersion()::
55583 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,55586
55586 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55580
55588 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getName1()::CE,55589:CD,55595
55589 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.getName1()::JM,48077
55592 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name1::DD,55595
55595 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55589
55597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getName2()::CE,55598:CD,55604
55598 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.getName2()::JM,48087
55601 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name2::DD,55604
55604 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55598
55606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getSaveOutputDir()::CE,55607:CD,55613
55607 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getSaveOutputDir()::JM,48050:JM,48067
55610 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .saveOutputDir::DD,55613
55613 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55607
55615 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getAutoFileName(org.biojava.nbio.structure.align.model.AFPChain)::CE,55616:CD,55620:CD,55625:CD,55633:CD,55638:CD,55642:CD,55647:CD,55652:CD,55656:CD,55661:CD,55668:CD,55672:CD,55710:CD,55711
55616 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getAutoFileName(org.biojava.nbio.structure.align.model.AFPChain)::JM,48166
55620 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
55625 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
55633 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(_))::
55638 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $afpChain .getName2()::CL,55597
55642 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v14)::
55647 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#(_))::
55652 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $afpChain .getAlgorithmName()::CL,55570
55656 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
55661 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
55668 :: CALL :: call :: Z :: v27 = v25.isOutputPDB()::JM,55672:CL,55317
55672 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,55692:CF,55673:CD,55674:CD,55682:CD,55687:CD,55693:CD,55701:CD,55706:CD,55711
55673 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::JM,55711
55674 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v24)::
55682 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(.pdb))::JM,55711
55687 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::JM,55711
55692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,55711
55693 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v24)::
55701 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(.xml))::JM,55711
55706 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,55711
55710 :: NORM :: compound :: Ljava/lang/String :: return v47::DD,55616
55711 :: EXPR :: assign :: null :: PHI v47 = v46, v37::CF,55710
55754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.toXML(org.biojava.nbio.structure.align.model.AFPChain,java.io.StringWriter,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,55761:CD,55775:CD,55779:CD,55801:CD,55802:CD,55828:CD,55833:CD,55837:CD,55838:JM,55793:JM,55794
55761 :: NORM :: declaration :: Ljava/io/PrintWriter :: v6 = new java.io.PrintWriter::
55775 :: CALL :: call :: V :: printXMLHeader(v8, p1 $afpChain )::CL,65132
55779 :: CALL :: call :: I :: v14 = p1 $afpChain .getBlockNum()::JM,55828:CL,65842
55788 :: CALL :: call :: V :: printXMLBlockHeader(v8, p1 $afpChain , v26)::CL,65851
55793 :: PRED :: IF :: Z :: if (p3 $ca1  == #(null)) goto 74::CD,55794:CD,55795
55794 :: PRED :: IF :: Z :: if (p4 $ca2  != #(null)) goto 102::CD,55795:CD,55811
55795 :: CALL :: call :: V :: printXMLEQRKnownPositions(v8, p1 $afpChain , v26)::CL,66030
55801 :: NORM :: declaration :: Ljava/io/IOException :: v30 = new java.io.IOException::
55802 :: CALL :: call :: Ljava/lang/String :: v32 = v29.getMessage()::
55811 :: CALL :: call :: V :: printXMLEQRInferPositions(v8, p1 $afpChain , v26, p3 $ca1 , p4 $ca2 )::CL,66217
55818 :: CALL :: call :: V :: printXMLMatrixShift(v8, p1 $afpChain , v26)::CL,66425
55827 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,55838
55828 :: PRED :: IF :: Z :: if (v26 < v14) goto 50::CD,55788:CD,55793:CD,55818:CD,55827:CD,55838
55833 :: CALL :: call :: V :: v6.close()::
55837 :: EXPR :: assign :: Ljava/lang/Exception :: v29 = catch <exc>::
55838 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::DD,55827:DD,55828
56505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getDbSearchResult(org.biojava.nbio.structure.align.model.AFPChain)::CE,56506:CD,56510:CD,56514
56506 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getDbSearchResult(org.biojava.nbio.structure.align.model.AFPChain)::
56510 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $afpChain .toDBSearchResult()::JM,56514:CL,69260
56514 :: NORM :: compound :: Ljava/lang/String :: return v5::DD,56506
59089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,59090:CD,59093:CD,59098:CD,59100:CD,59105:CD,59109:CD,59114:CD,59142:CD,59143
59090 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,50479
59093 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,59114
59098 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,59114
59100 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,59114
59105 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,59114
59109 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,59143:JM,59114
59114 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,59143:CF,59115:CD,59120:CD,59128:CD,59133:CD,59138
59115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,59143
59120 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
59128 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,59143:JM,59114
59133 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,59143
59138 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,59143
59142 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,59090
59143 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,59142
59154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,59157:CD,59161
59157 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,59184:JM,59170:JM,59157:JM,59190:JM,59161:JM,59166
59161 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,59162:CD,59166:CD,59170:JM,59184:JM,59190
59162 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,59184:JM,59170:JM,59190:JM,59166
59166 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,59184:JM,59170:JM,59190:JM,59166
59170 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,59179:CD,59184:JM,59170:JM,59190:JM,59166
59179 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,59184:JM,59170:JM,59190:JM,59166
59184 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,59185:CD,59190:JM,59184:JM,59170:JM,59166
59185 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,59184:JM,59170:JM,59190:JM,59166
59190 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,59199:CD,59204:CD,59209
59199 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
59204 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,59184:JM,59170:JM,59190:JM,59166
59209 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,59170:JM,59166
59251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,59255:CD,59259:CD,59263:CD,59284:CD,59285:CD,59286:CD,59307:CD,59308:CD,59309:CD,59316:CD,59347:CD,59348:CD,59373:CD,59374:CD,59376:CD,59377:CD,59378:CD,59379
59255 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,59347:JM,59284:CL,71887:CL,71879
59259 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,59307:JM,59373:CL,71895:CL,71903
59263 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
59269 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
59274 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
59278 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
59283 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,59376
59284 :: EXPR :: assign :: I :: v11 = v4.length::CF,59285
59285 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,59286:CD,59269:CD,59278:CD,59283:CD,59284:CD,59376
59286 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
59292 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
59297 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
59301 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
59306 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,59377
59307 :: EXPR :: assign :: I :: v23 = v6.length::CF,59308
59308 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,59292:CD,59301:CD,59306:CD,59307:CD,59377
59309 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
59316 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
59323 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,59326
59326 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
59330 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,59343
59331 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
59334 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
59343 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
59346 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,59378
59347 :: EXPR :: assign :: I :: v36 = v4.length::CF,59348
59348 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,59330:CD,59346:CD,59347:CD,59378
59349 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,59352
59352 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
59356 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,59369
59357 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
59360 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
59369 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
59372 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,59379
59373 :: EXPR :: assign :: I :: v44 = v6.length::CF,59374
59374 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,59356:CD,59372:CD,59373:CD,59379
59376 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,59283:DD,59285:CF,59284
59377 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,59306:DD,59308:CF,59307
59378 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,59346:DD,59348:CF,59347
59379 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,59372:DD,59374:CF,59373
60033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.setDefault()::
60037 :: EXPR :: modify :: Z :: p0 $this .parseSecStruc = #(0)::
60040 :: EXPR :: modify :: Z :: p0 $this .alignSeqRes = #(1)::
60043 :: EXPR :: modify :: Z :: p0 $this .parseCAOnly = #(0)::
60046 :: EXPR :: modify :: Z :: p0 $this .headerOnly = #(0)::
60049 :: EXPR :: modify :: Z :: p0 $this .updateRemediatedFiles = #(0)::
60052 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .fullAtomNames = #(null)::
60055 :: EXPR :: modify :: I :: p0 $this .maxAtoms = #(2147483647)::
60058 :: EXPR :: modify :: I :: p0 $this .atomCaThreshold = #(500000)::
60061 :: EXPR :: modify :: Z :: p0 $this .parseBioAssembly = #(0)::
60064 :: EXPR :: modify :: Z :: p0 $this .createAtomBonds = #(0)::
60067 :: EXPR :: modify :: Z :: p0 $this .createAtomCharges = #(1)::
60070 :: EXPR :: modify :: Z :: p0 $this .useInternalChainId = #(0)::
60140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,72898:JM,83428:JM,72806:JM,72778:JM,72813:JM,72877:JM,72908:JM,52046:JM,72785:JM,72850:JM,83445:JM,72820:JM,72884:JM,83412:JM,72792:JM,72827:JM,72891:JM,83420:JM,83452:JM,72799:JM,72958:CD,60157
60157 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,73077
60171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::CE,60172:CD,60178
60172 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::
60175 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_id::DD,60178
60178 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,60172
60199 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
60202 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = #(null)::
60205 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
60208 :: CALL :: call :: V :: p0 $this .init()::CL,73098
60220 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::CE,60221:CD,60225:CD,60230:CD,60239
60221 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::JM,52262
60225 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = p1 $strucId .loadStructure(p0 $this )::CL,73650
60230 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $strucId .reduce(v5)::JM,60239:CL,73667
60239 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,60221
60253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,60254:CD,60261:CD,60266:CD,60267
60254 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,52392:JM,116483:JM,125713:JM,125819:JM,127540:JM,127358:JM,127628:JM,146197
60258 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,60266
60261 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,60266
60266 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,60267
60267 :: NORM :: compound :: Ljava/util/List :: return v7::DD,60254
60270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,60271:CD,60277
60271 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,52482:JM,86118:JM,112126:JM,120150:JM,120077:JM,125369:JM,125486:JM,125632:JM,127462:JM,127529:JM,141508:JM,145150:JM,145805:JM,145826:JM,145856:JM,151749
60274 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,60277
60277 :: NORM :: compound :: Ljava/util/List :: return v3::CF,60271
60279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::CE,60280:CD,60282:CD,60284
60280 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::
60282 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType::DD,60284:DD,60285
60284 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,60285:CD,60286:CD,60289:CD,60290:CD,60291:CD,60293:CD,60302:CD,60304:CD,60313:CD,60315:CD,60326
60285 :: NORM :: compound :: [I :: return v2::DD,60280
60286 :: CALL :: call :: [Lorg/biojava/nbio/structure/GroupType :: v5 = values()::JM,60289:CL,73695
60289 :: EXPR :: assign :: I :: v6 = v5.length::CF,60290
60290 :: NORM :: declaration :: [I :: v7 = new []::DD,60326
60291 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v8 = org.biojava.nbio.structure.GroupType.AMINOACID::
60293 :: CALL :: call :: I :: v10 = v8.ordinal()::
60297 :: EXPR :: modify :: I :: v7[v10] = #(1)::
60302 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v14 = org.biojava.nbio.structure.GroupType.HETATM::
60304 :: CALL :: call :: I :: v16 = v14.ordinal()::
60308 :: EXPR :: modify :: I :: v7[v16] = #(3)::
60313 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::
60315 :: CALL :: call :: I :: v22 = v20.ordinal()::
60319 :: EXPR :: modify :: I :: v7[v22] = #(2)::
60326 :: NORM :: compound :: [I :: return v7::DD,60280
60347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,60348:CD,60351:CD,60353
60348 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,65001:JM,65006:JM,105940:JM,105935:JM,151736:JM,151743:JM,157157:JM,157162:JM,157169:JM,157174:JM,158963:JM,158968:JM,158995:JM,158990:JM,164212:JM,164217:JM,164224:JM,164229
60351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,60353
60353 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,60348
60355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,60356:CD,60359:CD,60361
60356 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,65001:JM,65006:JM,105940:JM,105935:JM,151736:JM,151743:JM,157157:JM,157162:JM,157169:JM,157174:JM,158963:JM,158968:JM,158995:JM,158990:JM,164212:JM,164217:JM,164224:JM,164229
60359 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,60361
60361 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,60356
60363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,60364:CD,60367:CD,60369
60364 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,65001:JM,65006:JM,105940:JM,105935:JM,151736:JM,151743:JM,157157:JM,157162:JM,157169:JM,157174:JM,158963:JM,158968:JM,158995:JM,158990:JM,164212:JM,164217:JM,164224:JM,164229
60367 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,60369
60369 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,60364
60371 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,60372:CD,60379:JM,60418
60372 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,52438:JM,52467:JM,74417:JM,74432:JM,91991:JM,112556:JM,112562:JM,112568:JM,112574:JM,148378
60376 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,60379
60379 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,60383:CD,60387:CD,60392:CD,60393:CD,60399:CD,60420:CD,60424
60383 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,60418
60387 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,60392
60392 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,60393
60393 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,60394:CD,60395
60394 :: NORM :: compound :: Z :: return #(1)::DD,60372
60395 :: NORM :: compound :: Z :: return #(0)::DD,60372
60396 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,60424
60399 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,60424
60404 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,60424
60409 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,60418:CL,53029
60413 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,60418
60418 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,60419:CD,60420:CD,60424
60419 :: NORM :: compound :: Z :: return #(1)::DD,60372
60420 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,60424
60424 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,60404:CD,60409:CD,60413:CD,60418:CD,60425:JM,60424
60425 :: NORM :: compound :: Z :: return #(0)::DD,60372
60446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,60447:CD,60453
60447 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,52450:JM,120111
60450 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,60453
60453 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,60447
60534 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
60537 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
60540 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
60543 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,60547
60547 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
60550 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,60554
60554 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
60557 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
60560 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
60563 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
60566 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,60570
60568 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,60570
60570 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,60571
60571 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,60575
60575 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
60579 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
60615 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,60620
60620 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
60626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,60631
60631 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
60637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,60638:CD,60644
60638 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,105922:JM,106220:JM,140544:JM,140720:JM,146576:JM,146571:JM,152554:JM,157032:JM,157086:JM,157033:JM,160870:JM,160875:JM,164122:JM,164059:JM,164136:JM,164060
60641 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,60644
60644 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,60638
60646 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,60664
60664 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
60677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,60681:JM,73732:JM,73737:CD,60689:CD,60697:CD,60711:CD,60723:CD,60731:CD,60739:CD,60747:CD,60755:CD,60763
60681 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
60689 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,73788
60697 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,73808
60701 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,60704
60704 :: EXPR :: modify :: C :: v3.altLoc = v11::
60711 :: CALL :: call :: V :: v3.setCharge(v13)::CL,73828
60723 :: CALL :: call :: V :: v3.setX(v18)::CL,73848
60731 :: CALL :: call :: V :: v3.setY(v21)::CL,73864
60739 :: CALL :: call :: V :: v3.setZ(v24)::CL,73880
60747 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,73905
60755 :: CALL :: call :: V :: v3.setName(v30)::CL,73916
60763 :: CALL :: call :: V :: v3.setElement(v33)::CL,73927
60796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,60801:CD,60808:CD,60813:CD,60817:CD,60825
60801 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,60977
60805 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
60808 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
60813 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,60817:CL,73839
60817 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,60818
60818 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,60615
60822 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,60825
60825 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,60833:CD,60839:CD,60840
60833 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,60839
60839 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,60840
60840 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,60841:CD,60845:CD,60849:CD,60871:CD,60876:CD,60880:CD,60885:CD,60890:CD,60895:CD,60900:CD,60904:CD,60909:CD,60914:CD,60918:CD,60923:CD,60928:CD,60937
60841 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,60849:JM,60937:CL,73938
60845 :: CALL :: call :: C :: v24 = v22.charValue()::JM,60849:JM,60937
60849 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,60937:CF,60850:CD,60855:CD,60860:CD,60865
60850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,60937
60855 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,60937
60860 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,60937
60865 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,60937
60871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
60876 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,53029
60880 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
60885 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
60890 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
60895 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
60900 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,73959:CL,74149:CL,74247
60904 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
60909 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
60914 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,73896
60918 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
60923 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
60928 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
60937 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
60977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,60982
60982 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
60988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,60996:CD,61007
60993 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,60996
60996 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,60997
60997 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,61001
61001 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
61004 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
61007 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
61020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,61025
61025 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
61038 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
61041 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
61050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,61051:CD,61057
61051 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,101888:JM,125088:JM,125093:JM,125241:JM,125246:JM,125374:JM,127453:JM,127481
61054 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,61057
61057 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,61051
61059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,61064
61064 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
61070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,61071:CD,61077
61071 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,151990:JM,151791
61074 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,61077
61077 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,61071
61079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,61084
61084 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
61090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,61095
61095 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
61101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,61102:CD,61108
61102 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,52780:JM,52789:JM,52817:JM,52940:JM,52949:JM,52977:JM,74087:JM,74121:JM,101875:JM,106056:JM,106167:JM,106207:JM,112116:JM,125408:JM,125398:JM,160822:JM,160862
61105 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,61108
61108 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,61109:CD,61113:CD,61117
61109 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,61113
61113 :: NORM :: compound :: Ljava/util/List :: return v6::DD,61102
61114 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,61117
61117 :: NORM :: compound :: Ljava/util/List :: return v5::DD,61102
61131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.init()::CD,61231:CD,61259:CD,61267
61231 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::
61259 :: NORM :: declaration :: Ljava/lang/Double :: v27 = new java.lang.Double::
61267 :: NORM :: declaration :: Ljava/lang/Double :: v29 = new java.lang.Double::
61425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.initIntraDistmatrix(org.biojava.nbio.structure.Atom[],int)::CE,61426:CD,61431:CD,61459:CD,61460:CD,61463:JM,61457
61426 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.align.ce.CECalculator.initIntraDistmatrix(org.biojava.nbio.structure.Atom[],int)::JM,53220:JM,53229
61431 :: NORM :: declaration :: [[D :: v5 = new [][]::DD,61460
61434 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v5[v17]::
61446 :: CALL :: call :: D :: v11 = p0 $this .getDistanceWithSidechain(v8, v9)::JM,61452:CL,74386
61452 :: EXPR :: modify :: D :: v7[v14] = v11::
61456 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,61462:CF,61461
61457 :: PRED :: IF :: Z :: if (v14 < p2 $nse ) goto 22::CD,61446:CD,61456:CD,61461:CD,61462:CF,61458
61458 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,61463
61459 :: PRED :: IF :: Z :: if (v16 < p2 $nse ) goto 16::CD,61457:CD,61458:CD,61461:CD,61462:CD,61463:CF,61460
61460 :: NORM :: compound :: [[D :: return v5::DD,61426
61461 :: EXPR :: assign :: null :: PHI v17 = v16, v17::CF,61462:DD,61458:DD,61461
61462 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::DD,61456:DD,61457
61463 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,61459:DD,61461
61488 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getScoringStrategy()::CE,61489:CD,61495
61489 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters.getScoringStrategy()::JM,74401:JM,74447:JM,74471:JM,74504:JM,74543:JM,75498
61492 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v3 = p0 $this .scoringStrategy::DD,61495
61495 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: return v3::CF,61489
61517 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getRmsdThr()::CE,61518:CD,61524:CD,61528
61518 :: EXIT :: exit :: Ljava/lang/Double :: org.biojava.nbio.structure.align.ce.CeParameters.getRmsdThr()::JM,53890:JM,53722
61521 :: EXPR :: reference :: D :: v3 = p0 $this .rmsdThr::JM,61524:JM,61528
61524 :: CALL :: call :: Ljava/lang/Double :: v5 = valueOf(v3)::JM,61524:JM,61528
61528 :: NORM :: compound :: Ljava/lang/Double :: return v5::DD,61518
61530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getRmsdThrJoin()::CE,61531:CD,61537:CD,61541
61531 :: EXIT :: exit :: Ljava/lang/Double :: org.biojava.nbio.structure.align.ce.CeParameters.getRmsdThrJoin()::JM,54049:JM,53934:JM,54030
61534 :: EXPR :: reference :: D :: v3 = p0 $this .rmsdThrJoin::JM,61537:JM,61541
61537 :: CALL :: call :: Ljava/lang/Double :: v5 = valueOf(v3)::JM,61537:JM,61541
61541 :: NORM :: compound :: Ljava/lang/Double :: return v5::DD,61531
61543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxGapSize()::CE,61544:CD,61550:CD,61554
61544 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxGapSize()::JM,53462:JM,53463
61547 :: EXPR :: reference :: I :: v3 = p0 $this .maxGapSize::JM,61554
61550 :: CALL :: call :: Ljava/lang/Integer :: v5 = valueOf(v3)::JM,61554
61554 :: NORM :: compound :: Ljava/lang/Integer :: return v5::DD,61544
61556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxOptRMSD()::CE,61557:CD,61563:CD,61567
61557 :: EXIT :: exit :: Ljava/lang/Double :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxOptRMSD()::JM,53904:JM,53937:JM,54033:JM,53736:JM,75683
61560 :: EXPR :: reference :: D :: v3 = p0 $this .maxOptRMSD::JM,61563:JM,61567
61563 :: CALL :: call :: Ljava/lang/Double :: v5 = valueOf(v3)::JM,61563:JM,61567
61567 :: NORM :: compound :: Ljava/lang/Double :: return v5::DD,61557
61569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.zStrAlign(int,int,double,int)::CE,61570:CD,61591:CD,61597
61570 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.zStrAlign(int,int,double,int)::JM,53588:JM,62946
61591 :: CALL :: call :: D :: v12 = p0 $this .zByZ(v8, v10)::JM,61597:CL,74926
61597 :: NORM :: compound :: D :: return v12::CF,61570
61611 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getScoreFromDistanceMatrices(int,int,int)::CE,61612:CD,61769:CD,61770:CD,61774:CD,61775:JM,61699:JM,61763:JM,61749:JM,61671:JM,61677:JM,61693:JM,61727
61612 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.getScoreFromDistanceMatrices(int,int,int)::JM,53933
61619 :: EXPR :: reference :: [[D :: v9 = p0 $this .dist1::
61622 :: EXPR :: reference :: [I :: v10 = p0 $this .trace1::
61625 :: EXPR :: reference :: I :: v11 = v10[v74]::
61629 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v9[v11]::
61633 :: EXPR :: reference :: D :: v13 = v12[p1 $mse1 ]::DD,61655
61637 :: EXPR :: reference :: [[D :: v14 = p0 $this .dist2::
61640 :: EXPR :: reference :: [I :: v15 = p0 $this .trace2::
61643 :: EXPR :: reference :: I :: v16 = v15[v74]::
61647 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v14[v16]::
61651 :: EXPR :: reference :: D :: v18 = v17[p2 $mse2 ]::DD,61655
61655 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v13 - v18::JM,61656:JM,61660
61656 :: CALL :: call :: D :: v21 = abs(v19)::JM,61656:JM,61660
61660 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v73 + v21::DD,61710
61661 :: EXPR :: reference :: [[D :: v23 = p0 $this .dist1::
61664 :: EXPR :: reference :: [I :: v24 = p0 $this .trace1::
61667 :: EXPR :: reference :: I :: v25 = v24[v74]::DD,61671
61671 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 + p3 $winSize ::DD,61672
61672 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v26 - #(1)::
61673 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v23[v28]::
61677 :: EXPR :: assign :: Ljava/lang/Object :: v30 = p1 $mse1  + p3 $winSize ::DD,61678
61678 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v30 - #(1)::
61679 :: EXPR :: reference :: D :: v32 = v29[v31]::DD,61705
61683 :: EXPR :: reference :: [[D :: v33 = p0 $this .dist2::
61686 :: EXPR :: reference :: [I :: v34 = p0 $this .trace2::
61689 :: EXPR :: reference :: I :: v35 = v34[v74]::DD,61693
61693 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v35 + p3 $winSize ::DD,61694
61694 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v36 - #(1)::
61695 :: EXPR :: reference :: Ljava/lang/Object :: v38 = v33[v37]::
61699 :: EXPR :: assign :: Ljava/lang/Object :: v39 = p2 $mse2  + p3 $winSize ::DD,61700
61700 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v39 - #(1)::
61701 :: EXPR :: reference :: D :: v41 = v38[v40]::DD,61705
61705 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v32 - v41::JM,61706:JM,61710
61706 :: CALL :: call :: D :: v44 = abs(v42)::JM,61706:JM,61710
61710 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v22 + v44::DD,61771
61712 :: EXPR :: reference :: [[D :: v47 = p0 $this .dist1::
61715 :: EXPR :: reference :: [I :: v48 = p0 $this .trace1::
61718 :: EXPR :: reference :: I :: v49 = v48[v75]::DD,61722
61722 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v49 + v71::
61723 :: EXPR :: reference :: Ljava/lang/Object :: v51 = v47[v50]::
61727 :: EXPR :: assign :: Ljava/lang/Object :: v52 = p1 $mse1  + p3 $winSize ::DD,61728
61728 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v52 - #(1)::DD,61729
61729 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v53 - v71::
61730 :: EXPR :: reference :: D :: v55 = v51[v54]::DD,61756
61734 :: EXPR :: reference :: [[D :: v56 = p0 $this .dist2::
61737 :: EXPR :: reference :: [I :: v57 = p0 $this .trace2::
61740 :: EXPR :: reference :: I :: v58 = v57[v75]::DD,61744
61744 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v58 + v71::
61745 :: EXPR :: reference :: Ljava/lang/Object :: v60 = v56[v59]::
61749 :: EXPR :: assign :: Ljava/lang/Object :: v61 = p2 $mse2  + p3 $winSize ::DD,61750
61750 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v61 - #(1)::DD,61751
61751 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v62 - v71::
61752 :: EXPR :: reference :: D :: v64 = v60[v63]::DD,61756
61756 :: EXPR :: assign :: Ljava/lang/Object :: v65 = v55 - v64::JM,61761:JM,61757
61757 :: CALL :: call :: D :: v67 = abs(v65)::JM,61761:JM,61757
61761 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v70 + v67::DD,61771:CF,61762
61762 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v71 + #(1)::DD,61773:CF,61771
61763 :: EXPR :: assign :: Ljava/lang/Object :: v46 = p3 $winSize  - #(1)::CF,61764
61764 :: PRED :: IF :: Z :: if (v71 < v46) goto 108::CD,61722:CD,61727:CD,61728:CD,61729:CD,61744:CD,61749:CD,61750:CD,61751:CD,61756:CD,61757:CD,61761:CD,61762:CD,61763:CD,61771:CD,61772:CD,61773:CF,61765
61765 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v75 + #(1)::DD,61775:CF,61774
61766 :: EXPR :: reference :: I :: v8 = p0 $this .nTrace::DD,61769
61769 :: PRED :: IF :: Z :: if (v74 < v8) goto 12::CD,61655:CD,61656:CD,61660:CD,61671:CD,61672:CD,61677:CD,61678:CD,61693:CD,61694:CD,61699:CD,61700:CD,61705:CD,61706:CD,61710:CD,61763:CD,61764:CD,61765:CD,61771:CD,61772:CD,61773:CD,61774:CD,61775:CF,61770
61770 :: NORM :: compound :: D :: return v73::CF,61612
61771 :: EXPR :: assign :: null :: PHI v70 = v45, v68::CF,61772:DD,61761:DD,61774
61772 :: EXPR :: assign :: null :: PHI v75 = v74, v75::CF,61773:DD,61765:DD,61772
61773 :: EXPR :: assign :: null :: PHI v71 = #(1), v69::DD,61722:DD,61729:DD,61744:DD,61751:DD,61762:DD,61764:CF,61763
61774 :: EXPR :: assign :: null :: PHI v73 = #(0.0 d), v70::CF,61775:DD,61660:DD,61770
61775 :: EXPR :: assign :: null :: PHI v74 = #(0), v72::DD,61769:DD,61772
61838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getScore2(int,int,[][],int,[],int,int,double,double)::CE,61839:CD,61854:CD,61882:CD,61887:CD,61888:CD,61905:CD,61910:CD,61911:CD,61912:CD,61913:CD,61924:CD,61925:CD,61926:CD,61927
61839 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.getScore2(int,int,[][],int,[],int,int,double,double)::JM,54033:JM,54313:JM,54030
61851 :: EXPR :: reference :: I :: v13 = p0 $this .nTrace::DD,61854
61854 :: PRED :: IF :: Z :: if (v13 <= #(1)) goto 41::CD,61858:CD,61866:CD,61927
61855 :: EXPR :: reference :: I :: v15 = p0 $this .nTrace::DD,61858
61858 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 - #(2)::
61859 :: EXPR :: reference :: Ljava/lang/Object :: v18 = p3 $traceScore [v17]::
61863 :: EXPR :: reference :: I :: v19 = p0 $this .nTrace::DD,61866
61866 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 - #(1)::
61867 :: EXPR :: reference :: I :: v21 = p5 $traceIndex [v20]::
61871 :: EXPR :: reference :: D :: v22 = v18[v21]::DD,61927
61876 :: EXPR :: reference :: [I :: v24 = p0 $this .traceIndexContainer::
61879 :: EXPR :: reference :: I :: v25 = p0 $this .nTrace::DD,61882
61882 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::
61883 :: EXPR :: reference :: I :: v27 = v24[v26]::DD,61887
61887 :: EXPR :: assign :: D :: v28 = CONVERT I to D v27::CF,61888
61888 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v23 * v28::DD,61913
61889 :: EXPR :: reference :: [I :: v30 = p0 $this .traceIndexContainer::
61892 :: EXPR :: reference :: I :: v31 = p0 $this .nTrace::
61895 :: EXPR :: reference :: I :: v32 = v30[v31]::DD,61910
61899 :: EXPR :: reference :: [I :: v33 = p0 $this .traceIndexContainer::
61902 :: EXPR :: reference :: I :: v34 = p0 $this .nTrace::DD,61905
61905 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 - #(1)::
61906 :: EXPR :: reference :: I :: v36 = v33[v35]::DD,61910
61910 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v32 - v36::CF,61911
61911 :: EXPR :: assign :: D :: v38 = CONVERT I to D v37::CF,61912
61912 :: EXPR :: assign :: Ljava/lang/Object :: v39 = p9 $null  * v38::CF,61913
61913 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v29 + v39::DD,61925
61914 :: EXPR :: reference :: [I :: v41 = p0 $this .traceIndexContainer::
61917 :: EXPR :: reference :: I :: v42 = p0 $this .nTrace::
61920 :: EXPR :: reference :: I :: v43 = v41[v42]::DD,61924
61924 :: EXPR :: assign :: D :: v44 = CONVERT I to D v43::CF,61925
61925 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v40 / v44::DD,61926
61926 :: NORM :: compound :: D :: return v45::CF,61839
61927 :: EXPR :: assign :: null :: PHI v23 = v22, p8 $score0 ::DD,61888
61954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.doIter0(int,double,double)::CD,61971:JM,62068:JM,61990:JM,62042
61961 :: EXPR :: reference :: I :: v6 = p0 $this .nTrace::DD,61971
61964 :: EXPR :: reference :: [I :: v7 = p0 $this .bestTracesN::
61967 :: EXPR :: reference :: I :: v8 = v7[p1 $newBestTrace ]::DD,61971
61971 :: PRED :: IF :: Z :: if (v6 > v8) goto 40::CD,61982:CD,62050:CD,62057:CD,62067:CD,62068:CD,62069:CD,62144
61972 :: EXPR :: reference :: I :: v9 = p0 $this .nTrace::DD,61982
61975 :: EXPR :: reference :: [I :: v10 = p0 $this .bestTracesN::
61978 :: EXPR :: reference :: I :: v11 = v10[p1 $newBestTrace ]::DD,61982
61982 :: PRED :: IF :: Z :: if (v9 != v11) goto 253::CD,61990:CD,61991
61983 :: EXPR :: reference :: [D :: v12 = p0 $this .bestTracesScores::
61986 :: EXPR :: reference :: D :: v13 = v12[p1 $newBestTrace ]::DD,61990
61990 :: EXPR :: assign :: Z :: v14 = v13 < p2 $traceTotalScore ::DD,61991
61991 :: PRED :: IF :: Z :: if (v14 <= #(0)) goto 253::CD,62050:CD,62057:CD,62067:CD,62068:CD,62069:CD,62144
61993 :: EXPR :: reference :: [[I :: v17 = p0 $this .bestTraces1::
61996 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v17[p1 $newBestTrace ]::
62000 :: EXPR :: reference :: [I :: v19 = p0 $this .trace1::
62003 :: EXPR :: reference :: I :: v20 = v19[v30]::DD,62007
62007 :: EXPR :: modify :: I :: v18[v30] = v20::
62011 :: EXPR :: reference :: [[I :: v21 = p0 $this .bestTraces2::
62014 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v21[p1 $newBestTrace ]::
62018 :: EXPR :: reference :: [I :: v23 = p0 $this .trace2::
62021 :: EXPR :: reference :: I :: v24 = v23[v30]::DD,62025
62025 :: EXPR :: modify :: I :: v22[v30] = v24::
62029 :: EXPR :: reference :: [I :: v25 = p0 $this .bestTracesN::
62032 :: EXPR :: reference :: I :: v26 = p0 $this .nTrace::DD,62035
62035 :: EXPR :: modify :: I :: v25[p1 $newBestTrace ] = v26::
62039 :: EXPR :: reference :: [D :: v27 = p0 $this .bestTracesScores::
62042 :: EXPR :: modify :: D :: v27[p1 $newBestTrace ] = p2 $traceTotalScore ::
62046 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,62144
62047 :: EXPR :: reference :: I :: v16 = p0 $this .nTrace::DD,62050
62050 :: PRED :: IF :: Z :: if (v30 < v16) goto 44::CD,62046:CD,62144
62051 :: EXPR :: reference :: I :: v31 = p0 $this .nTrace::DD,62057
62054 :: EXPR :: reference :: I :: v32 = p0 $this .nBestTrace::DD,62057
62057 :: PRED :: IF :: Z :: if (v31 <= v32) goto 124::
62058 :: EXPR :: reference :: I :: v33 = p0 $this .nTrace::DD,62061
62061 :: EXPR :: modify :: I :: p0 $this .nBestTrace = v33::
62064 :: EXPR :: reference :: I :: v34 = p0 $this .nBestTraces::DD,62067
62067 :: EXPR :: assign :: D :: v35 = CONVERT I to D v34::DD,62068
62068 :: EXPR :: assign :: Z :: v36 = v35 > p3 $null ::DD,62069
62069 :: PRED :: IF :: Z :: if (v36 >= #(0)) goto 148::CD,62073
62070 :: EXPR :: reference :: I :: v37 = p0 $this .nBestTraces::DD,62073
62073 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v37 + #(1)::DD,62074
62074 :: EXPR :: modify :: I :: p0 $this .nBestTraces = v38::
62144 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,62046:DD,62050
62232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.isShowAFPRanges()::CE,62233:CD,62239
62233 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.CeParameters.isShowAFPRanges()::JM,54206:JM,62956
62236 :: EXPR :: reference :: Z :: v3 = p0 $this .showAFPRanges::DD,62239
62239 :: NORM :: compound :: Z :: return v3::CF,62233
62241 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.checkBestTraces(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,62254:CD,62258:CD,62262:CD,62263:CD,62264:CD,62266:CD,62267:CD,62271:CD,62272:CD,62322:CD,62368:CD,62389:CD,62390:CD,62478:CD,62601:CD,62657:CD,62658:CD,62913:CD,62914:CD,62938:CD,62952:CD,62956:CD,63185:CD,63238:CD,63246:CD,63247:CD,63487:CD,63549:CD,63552:CD,63553:CD,63554:CD,63555:CD,63557:CD,63558:CD,63563:CD,63564:CD,63568:CD,63616:CD,63617:CD,63618:CD,63620
62248 :: EXPR :: modify :: D :: p0 $this .z = #(0.0 d)::
62254 :: CALL :: call :: Ljava/lang/Integer :: v9 = v7.getWinSize()::JM,62454:JM,62472:JM,62905:JM,62429:JM,62974:CL,55066
62258 :: CALL :: call :: I :: v11 = v9.intValue()::JM,62454:JM,62472:JM,62905:JM,62429:JM,62974
62262 :: EXPR :: assign :: I :: v12 = p2 $ca1 .length::DD,62264:DD,62266:DD,62271:DD,63549:CF,62263
62263 :: EXPR :: assign :: I :: v13 = p3 $ca2 .length::DD,62264:DD,62266:DD,62271:DD,63549
62264 :: PRED :: IF :: Z :: if (v12 >= v13) goto 46::CD,63549
62266 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 + v13::CF,62267
62267 :: NORM :: declaration :: [I :: v16 = new []::DD,62268
62268 :: EXPR :: modify :: [I :: p0 $this .align_se1 = v16::
62271 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v12 + v13::CF,62272
62272 :: NORM :: declaration :: [I :: v18 = new []::DD,62273
62273 :: EXPR :: modify :: [I :: p0 $this .align_se2 = v18::
62276 :: EXPR :: modify :: I :: p0 $this .lcmp = #(0)::
62282 :: EXPR :: reference :: [I :: v24 = p0 $this .bestTracesN::
62285 :: EXPR :: reference :: I :: v25 = v24[v37]::DD,62292
62289 :: EXPR :: reference :: I :: v26 = p0 $this .nBestTrace::DD,62292
62292 :: PRED :: IF :: Z :: if (v25 == v26) goto 121::CD,62303:CD,62316:CD,62317:CD,63550:CD,63551
62303 :: CALL :: call :: D :: v31 = p0 $this .getRMSDForBestTrace(v37, v20, v21, v27, v28, v29, v11, p2 $ca1 , p3 $ca2 )::JM,62316:JM,63550:CL,74958
62316 :: EXPR :: assign :: Z :: v32 = v36 < v31::DD,62317
62317 :: PRED :: IF :: Z :: if (v32 <= #(0)) goto 157::CF,63550:CD,63551
62318 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v37 + #(1)::DD,63554:CF,63552
62319 :: EXPR :: reference :: I :: v23 = p0 $this .nBestTraces::DD,62322
62322 :: PRED :: IF :: Z :: if (v37 < v23) goto 97::CD,62292:CD,62318:CD,63550:CD,63551:CD,63552:CD,63553:CD,63554
62324 :: EXPR :: reference :: [I :: v42 = p0 $this .bestTrace1::
62327 :: EXPR :: reference :: [[I :: v43 = p0 $this .bestTraces1::
62330 :: EXPR :: reference :: Ljava/lang/Object :: v44 = v43[v39]::
62334 :: EXPR :: reference :: I :: v45 = v44[v51]::DD,62338
62338 :: EXPR :: modify :: I :: v42[v51] = v45::
62342 :: EXPR :: reference :: [I :: v46 = p0 $this .bestTrace2::
62345 :: EXPR :: reference :: [[I :: v47 = p0 $this .bestTraces2::
62348 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v47[v39]::
62352 :: EXPR :: reference :: I :: v49 = v48[v51]::DD,62356
62356 :: EXPR :: modify :: I :: v46[v51] = v49::
62360 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v51 + #(1)::DD,63555
62361 :: EXPR :: reference :: [I :: v40 = p0 $this .bestTracesN::
62364 :: EXPR :: reference :: I :: v41 = v40[v39]::DD,62368
62368 :: PRED :: IF :: Z :: if (v51 < v41) goto 176::CD,62360:CD,63555
62369 :: EXPR :: reference :: [I :: v52 = p0 $this .bestTracesN::
62372 :: EXPR :: reference :: I :: v53 = v52[v39]::DD,62376
62376 :: EXPR :: modify :: I :: p0 $this .nBestTrace = v53::
62379 :: EXPR :: reference :: [D :: v54 = p0 $this .bestTracesScores::
62382 :: EXPR :: reference :: D :: v55 = v54[v39]::DD,62386
62386 :: EXPR :: modify :: D :: p0 $this .bestTraceScore = v55::
62389 :: NORM :: declaration :: [I :: v56 = new []::CF,62390
62390 :: NORM :: declaration :: [I :: v57 = new []::DD,62391
62391 :: EXPR :: modify :: [I :: p0 $this .bestTraceLen = v57::
62394 :: EXPR :: reference :: I :: v58 = p0 $this .nBestTrace::DD,62397
62397 :: EXPR :: modify :: I :: p0 $this .nTrace = v58::
62401 :: EXPR :: reference :: [I :: v60 = p0 $this .trace1::
62404 :: EXPR :: reference :: [I :: v61 = p0 $this .bestTrace1::
62407 :: EXPR :: reference :: I :: v62 = v61[v87]::DD,62411
62411 :: EXPR :: modify :: I :: v60[v87] = v62::
62415 :: EXPR :: reference :: [I :: v63 = p0 $this .trace2::
62418 :: EXPR :: reference :: [I :: v64 = p0 $this .bestTrace2::
62421 :: EXPR :: reference :: I :: v65 = v64[v87]::DD,62425
62425 :: EXPR :: modify :: I :: v63[v87] = v65::
62429 :: EXPR :: modify :: I :: v56[v87] = v11::
62433 :: EXPR :: reference :: I :: v66 = p0 $this .nBestTrace::DD,62436
62436 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v66 - #(1)::CF,62437
62437 :: PRED :: IF :: Z :: if (v87 >= v67) goto 375::CF,63556:CD,62441:CD,62453:CD,62454:CD,62458:CD,62463:CD,62471:CD,62472:CD,62473
62438 :: EXPR :: reference :: [I :: v68 = p0 $this .bestTrace1::
62441 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v87 + #(1)::
62442 :: EXPR :: reference :: I :: v70 = v68[v69]::DD,62453
62446 :: EXPR :: reference :: [I :: v71 = p0 $this .bestTrace1::
62449 :: EXPR :: reference :: I :: v72 = v71[v87]::DD,62453
62453 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v70 - v72::DD,62454
62454 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v73 - v11::DD,62463
62455 :: EXPR :: reference :: [I :: v75 = p0 $this .bestTrace2::
62458 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v87 + #(1)::
62459 :: EXPR :: reference :: I :: v77 = v75[v76]::DD,62463
62463 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v74 + v77::DD,62471
62464 :: EXPR :: reference :: [I :: v79 = p0 $this .bestTrace2::
62467 :: EXPR :: reference :: I :: v80 = v79[v87]::DD,62471
62471 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v78 - v80::DD,62472
62472 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v81 - v11::CF,62473
62473 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v86 + v82::DD,63556
62474 :: EXPR :: assign :: Ljava/lang/Object :: v85 = v87 + #(1)::DD,63558:CF,63557
62475 :: EXPR :: reference :: I :: v59 = p0 $this .nBestTrace::DD,62478
62478 :: PRED :: IF :: Z :: if (v87 < v59) goto 284::CD,62436:CD,62437:CD,62474:CD,63556:CD,63557:CD,63558
62479 :: EXPR :: modify :: I :: p0 $this .nBestTrace = #(0)::
62483 :: EXPR :: reference :: I :: v89 = v56[v130]::DD,63562
62487 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v130 + #(1)::DD,63560
62489 :: EXPR :: reference :: [I :: v92 = p0 $this .trace1::
62492 :: EXPR :: reference :: I :: v93 = v92[v113]::DD,62504
62496 :: EXPR :: reference :: [I :: v94 = p0 $this .trace1::
62499 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v113 - #(1)::
62500 :: EXPR :: reference :: I :: v96 = v94[v95]::DD,62504
62504 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v93 - v96::DD,62510:CF,62505
62505 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v113 - #(1)::
62506 :: EXPR :: reference :: I :: v99 = v56[v98]::DD,62510
62510 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v97 - v99::DD,62511
62511 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 496::CD,62522:CD,62527:CD,62528:CD,62533:CD,62534
62512 :: EXPR :: reference :: [I :: v101 = p0 $this .trace2::
62515 :: EXPR :: reference :: I :: v102 = v101[v113]::DD,62527
62519 :: EXPR :: reference :: [I :: v103 = p0 $this .trace2::
62522 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v113 - #(1)::
62523 :: EXPR :: reference :: I :: v105 = v103[v104]::DD,62527
62527 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v102 - v105::DD,62533:CF,62528
62528 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v113 - #(1)::
62529 :: EXPR :: reference :: I :: v108 = v56[v107]::DD,62533
62533 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v106 - v108::DD,62534
62534 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 479::CD,62540:CD,62541:CD,62545:CD,63559:CD,63560:CD,63561:CD,63562
62536 :: EXPR :: reference :: I :: v110 = v56[v113]::DD,62540
62540 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v114 + v110::DD,63562:CF,62541
62541 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v113 + #(1)::DD,63560:CF,63559
62542 :: EXPR :: reference :: I :: v91 = p0 $this .nTrace::DD,62545
62545 :: PRED :: IF :: Z :: if (v113 < v91) goto 415::CD,62499:CD,62504:CD,62505:CD,62510:CD,62511
62546 :: EXPR :: reference :: [I :: v115 = p0 $this .bestTrace1::
62549 :: EXPR :: reference :: I :: v116 = p0 $this .nBestTrace::
62552 :: EXPR :: reference :: [I :: v117 = p0 $this .trace1::
62555 :: EXPR :: reference :: I :: v118 = v117[v132]::DD,62559
62559 :: EXPR :: modify :: I :: v115[v116] = v118::
62563 :: EXPR :: reference :: [I :: v119 = p0 $this .bestTrace2::
62566 :: EXPR :: reference :: I :: v120 = p0 $this .nBestTrace::
62569 :: EXPR :: reference :: [I :: v121 = p0 $this .trace2::
62572 :: EXPR :: reference :: I :: v122 = v121[v132]::DD,62576
62576 :: EXPR :: modify :: I :: v119[v120] = v122::
62580 :: EXPR :: reference :: [I :: v123 = p0 $this .bestTraceLen::
62583 :: EXPR :: reference :: I :: v124 = p0 $this .nBestTrace::
62586 :: EXPR :: modify :: I :: v123[v124] = v114::
62590 :: EXPR :: reference :: I :: v125 = p0 $this .nBestTrace::DD,62593
62593 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v125 + #(1)::DD,62594
62594 :: EXPR :: modify :: I :: p0 $this .nBestTrace = v126::
62597 :: EXPR :: assign :: Ljava/lang/Object :: v127 = v131 + v114::DD,63563
62598 :: EXPR :: reference :: I :: v88 = p0 $this .nTrace::DD,62601
62601 :: PRED :: IF :: Z :: if (v130 < v88) goto 402::CD,62487:CD,62545:CD,62593:CD,62597:CD,63559:CD,63560:CD,63561:CD,63562:CD,63563:CD,63564
62613 :: CALL :: call :: V :: p0 $this .setStrBuf(v20, v136, p2 $ca1 , v139)::CL,75092
62629 :: CALL :: call :: V :: p0 $this .setStrBuf(v21, v141, p3 $ca2 , v144)::CL,75092
62636 :: EXPR :: assign :: Ljava/lang/Object :: v146 = v147 + #(1)::DD,63567:CF,63565
62637 :: EXPR :: reference :: [I :: v134 = p0 $this .bestTraceLen::
62640 :: EXPR :: reference :: I :: v135 = v134[v154]::DD,62644
62644 :: PRED :: IF :: Z :: if (v147 < v135) goto 590::CD,62613:CD,62629:CD,62636:CD,63565:CD,63567
62653 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v154 + #(1)::DD,63568
62654 :: EXPR :: reference :: I :: v133 = p0 $this .nBestTrace::DD,62657
62657 :: PRED :: IF :: Z :: if (v152 < v133) goto 580::CD,62644:CD,62653:CD,63565:CD,63567:CD,63568
62658 :: CALL :: call :: D :: v157 = p0 $this .calc_rmsd(v20, v21, v128, #(1))::JM,63616:CL,75158
62668 :: PRED :: IF :: Z :: if (v280 == #(0)) goto 708::CD,62905:CD,62906:CD,62907:CD,62908:CD,63600:CD,63601:CD,63602:CD,63603:CD,63604:CD,63605:CD,63606:CD,63607:CD,63608:CD,63609:CD,63610:CD,63611:CD,63612:CD,63613:CD,63614:CD,63615
62671 :: PRED :: IF :: Z :: if (v240 != #(0)) goto 782::CF,63576:CD,62716:CD,63570:CD,63571:CD,63572:CD,63573:CD,63574:CD,63575:CD,63577:CD,63578:CD,63579:CD,63580
62673 :: EXPR :: reference :: [I :: v163 = p0 $this .trace1::
62676 :: EXPR :: reference :: [I :: v164 = p0 $this .bestTrace1::
62679 :: EXPR :: reference :: I :: v165 = v164[v172]::DD,62683
62683 :: EXPR :: modify :: I :: v163[v172] = v165::
62687 :: EXPR :: reference :: [I :: v166 = p0 $this .trace2::
62690 :: EXPR :: reference :: [I :: v167 = p0 $this .bestTrace2::
62693 :: EXPR :: reference :: I :: v168 = v167[v172]::DD,62697
62697 :: EXPR :: modify :: I :: v166[v172] = v168::
62701 :: EXPR :: reference :: [I :: v169 = p0 $this .bestTraceLen::
62704 :: EXPR :: reference :: I :: v170 = v169[v172]::DD,62708
62708 :: EXPR :: modify :: I :: v56[v172] = v170::
62712 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v172 + #(1)::DD,63572:CF,63570
62713 :: EXPR :: reference :: I :: v162 = p0 $this .nBestTrace::DD,62716
62716 :: PRED :: IF :: Z :: if (v172 < v162) goto 723::CF,63576:CD,62712:CD,63570:CD,63571:CD,63572:CD,63573:CD,63574:CD,63575
62717 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v298 - #(1)::
62718 :: EXPR :: reference :: I :: v175 = v56[v174]::DD,62722
62722 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v175 + v283::DD,62723
62723 :: EXPR :: modify :: I :: v56[v174] = v176::
62727 :: EXPR :: reference :: I :: v177 = v56[v298]::DD,62731
62731 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v177 - v283::DD,62732
62732 :: EXPR :: modify :: I :: v56[v298] = v178::
62736 :: EXPR :: reference :: [I :: v179 = p0 $this .trace1::
62739 :: EXPR :: reference :: I :: v180 = v179[v298]::DD,62743
62743 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + v283::DD,62744
62744 :: EXPR :: modify :: I :: v179[v298] = v181::
62748 :: EXPR :: reference :: [I :: v182 = p0 $this .trace2::
62751 :: EXPR :: reference :: I :: v183 = v182[v298]::DD,62755
62755 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v183 + v283::DD,62756
62756 :: EXPR :: modify :: I :: v182[v298] = v184::
62774 :: CALL :: call :: D :: v192 = v190.getX()::JM,62778:CL,75290
62778 :: EXPR :: assign :: Z :: v194 = v192 < #(1.0E10 d)::DD,62779
62779 :: PRED :: IF :: Z :: if (v194 > #(0)) goto 1065::CF,63606:CD,62792:CD,62796:CD,62797
62792 :: CALL :: call :: D :: v200 = v198.getX()::JM,62796:CL,75290
62796 :: EXPR :: assign :: Z :: v201 = v200 < #(1.0E10 d)::DD,62797
62797 :: PRED :: IF :: Z :: if (v201 <= #(0)) goto 895::CD,62833:CD,62838:CD,63581:CD,63582:CD,63583:CD,63585:CD,63586:CD,63587:CD,63588:CD,63606:CD,63607:CD,63608:CD,63609:CD,63610
62833 :: EXPR :: assign :: Ljava/lang/Object :: v212 = v213 + #(1)::DD,63588:CF,63581
62834 :: EXPR :: reference :: I :: v186 = v56[v219]::DD,62838
62838 :: PRED :: IF :: Z :: if (v213 < v186) goto 840::CD,62774:CD,62778:CD,62779:CD,62844:CD,62848:CD,63589:CD,63590:CD,63591:CD,63593:CD,63594:CD,63595:CD,63606:CD,63607:CD,63608:CD,63609:CD,63610
62844 :: EXPR :: assign :: Ljava/lang/Object :: v216 = v219 + #(1)::DD,63591:CF,63589
62845 :: EXPR :: reference :: I :: v185 = p0 $this .nBestTrace::DD,62848
62848 :: PRED :: IF :: Z :: if (v217 < v185) goto 835::CD,62838:CD,62849:CD,62857:CD,62858:CD,63581:CD,63582:CD,63583:CD,63585:CD,63586:CD,63587:CD,63588:CD,63606:CD,63607:CD,63608:CD,63609:CD,63610
62849 :: CALL :: call :: D :: v222 = p0 $this .calc_rmsd(v20, v21, v128, #(1))::JM,63601:JM,62857:CL,75158
62857 :: EXPR :: assign :: Z :: v223 = v222 > v256::DD,62858
62858 :: PRED :: IF :: Z :: if (v223 >= #(0)) goto 1065::CF,63606:CD,62903:CD,62904:CD,62905:CD,62906:CD,63596:CD,63597:CD,63598:CD,63599:CD,63600:CD,63601:CD,63602:CD,63603:CD,63604:CD,63605:CD,63607:CD,63608:CD,63609:CD,63610
62860 :: EXPR :: reference :: [I :: v225 = p0 $this .bestTrace1::
62863 :: EXPR :: reference :: [I :: v226 = p0 $this .trace1::
62866 :: EXPR :: reference :: I :: v227 = v226[v234]::DD,62870
62870 :: EXPR :: modify :: I :: v225[v234] = v227::
62874 :: EXPR :: reference :: [I :: v228 = p0 $this .bestTrace2::
62877 :: EXPR :: reference :: [I :: v229 = p0 $this .trace2::
62880 :: EXPR :: reference :: I :: v230 = v229[v234]::DD,62884
62884 :: EXPR :: modify :: I :: v228[v234] = v230::
62888 :: EXPR :: reference :: [I :: v231 = p0 $this .bestTraceLen::
62891 :: EXPR :: reference :: I :: v232 = v56[v234]::DD,62895
62895 :: EXPR :: modify :: I :: v231[v234] = v232::
62899 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v234 + #(1)::DD,63597:CF,63596
62900 :: EXPR :: reference :: I :: v224 = p0 $this .nBestTrace::DD,62903
62903 :: PRED :: IF :: Z :: if (v234 < v224) goto 992::CD,62899:CD,63596:CD,63597:CD,63598:CD,63599:CF,62904
62904 :: EXPR :: assign :: Ljava/lang/Object :: v235 = v265 + #(1)::DD,63605:CF,63600
62905 :: EXPR :: assign :: Ljava/lang/Object :: v161 = v11 / #(2)::CF,62906
62906 :: PRED :: IF :: Z :: if (v242 <= v161) goto 713::CF,63606:CD,62671:CD,62717:CD,62722:CD,62731:CD,62743:CD,62755:CD,62848:CD,63576:CD,63577:CD,63578:CD,63579:CD,63580:CD,63589:CD,63590:CD,63591:CD,63593:CD,63594:CD,63595
62907 :: EXPR :: assign :: Ljava/lang/Object :: v273 = v287 + #(2)::DD,63611
62908 :: PRED :: IF :: Z :: if (v274 <= #(1)) goto 699::CD,62668:CF,62909
62909 :: EXPR :: assign :: Ljava/lang/Object :: v288 = v295 + #(1)::DD,63618:CF,63616
62910 :: EXPR :: reference :: I :: v158 = p0 $this .nBestTrace::DD,62913
62913 :: PRED :: IF :: Z :: if (v294 < v158) goto 694::CD,62908:CD,62909:CD,63611:CD,63612:CD,63613:CD,63614:CD,63615:CD,63616:CD,63617:CD,63618
62914 :: CALL :: call :: D :: v304 = p0 $this .calc_rmsd(v20, v21, v128, #(1))::CL,75158
62931 :: EXPR :: modify :: I :: p0 $this .nAtom = v128::
62938 :: CALL :: call :: D :: v311 = p0 $this .zStrAlign(v11, v308, v309, v86)::JM,62946:CL,61569
62946 :: EXPR :: modify :: D :: p0 $this .z = v311::
62952 :: CALL :: call :: Z :: v314 = v312.isShowAFPRanges()::JM,62956:CL,62232
62956 :: PRED :: IF :: Z :: if (v314 == #(0)) goto 1408::CF,63185:CD,62959:CD,62964:CD,62969:CD,62974:CD,62975:CD,62980:CD,62989:CD,62997:CD,63002:CD,63007:CD,63012:CD,63017:CD,63025:CD,63030:CD,63034:CD,63044:CD,63052:CD,63063:CD,63071:CD,63079:CD,63080:CD,63084:CD,63085:CD,63086:CD,63097:CD,63105:CD,63110:CD,63116:CD,63184:CD,63619
62959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v316 = new java.lang.StringBuilder::
62964 :: CALL :: call :: Ljava/lang/StringBuilder :: v320 = v316.append(v11)::JM,62974
62969 :: CALL :: call :: Ljava/lang/StringBuilder :: v323 = v320.append(#( strLen/winSize: ))::
62974 :: EXPR :: assign :: Ljava/lang/Object :: v324 = v128 / v11::
62975 :: CALL :: call :: Ljava/lang/StringBuilder :: v326 = v323.append(v324)::
62980 :: CALL :: call :: Ljava/lang/StringBuilder :: v329 = v326.append(#( best trace score: ))::
62986 :: EXPR :: reference :: D :: v332 = p0 $this .bestTraceScore::JM,62989
62989 :: CALL :: call :: Ljava/lang/Double :: v334 = valueOf(v332)::JM,62989
62997 :: CALL :: call :: Ljava/lang/String :: v336 = format(#(%.2f), v331)::
63002 :: CALL :: call :: Ljava/lang/StringBuilder :: v338 = v329.append(v336)::
63007 :: CALL :: call :: Ljava/lang/StringBuilder :: v341 = v338.append(#( nr gaps: ))::
63012 :: CALL :: call :: Ljava/lang/StringBuilder :: v343 = v341.append(v86)::
63017 :: CALL :: call :: Ljava/lang/StringBuilder :: v346 = v343.append(#( nr residues: ))::
63022 :: EXPR :: reference :: I :: v347 = p0 $this .nAtom::
63025 :: CALL :: call :: Ljava/lang/StringBuilder :: v349 = v346.append(v347)::
63030 :: CALL :: call :: Ljava/lang/String :: v351 = v349.toString()::
63034 :: CALL :: call :: V :: v315.println(v351)::
63041 :: EXPR :: reference :: I :: v357 = p0 $this .nAtom::
63044 :: CALL :: call :: Ljava/lang/Integer :: v359 = valueOf(v357)::
63052 :: CALL :: call :: Ljava/lang/Double :: v361 = valueOf(v290)::JM,63052
63060 :: EXPR :: reference :: D :: v362 = p0 $this .z::JM,63063
63063 :: CALL :: call :: Ljava/lang/Double :: v364 = valueOf(v362)::JM,63063
63071 :: CALL :: call :: Ljava/lang/Integer :: v367 = valueOf(v86)::
63079 :: EXPR :: assign :: D :: v369 = CONVERT I to D v86::DD,63080
63080 :: EXPR :: assign :: Ljava/lang/Object :: v370 = v369 * #(100.0 d)::DD,63085
63081 :: EXPR :: reference :: I :: v371 = p0 $this .nAtom::DD,63084
63084 :: EXPR :: assign :: D :: v372 = CONVERT I to D v371::CF,63085
63085 :: EXPR :: assign :: Ljava/lang/Object :: v373 = v370 / v372::JM,63086
63086 :: CALL :: call :: Ljava/lang/Double :: v375 = valueOf(v373)::JM,63086
63094 :: EXPR :: reference :: I :: v377 = p0 $this .nTraces::
63097 :: CALL :: call :: Ljava/lang/Integer :: v379 = valueOf(v377)::
63105 :: CALL :: call :: Ljava/lang/String :: v381 = format(#(size=%d rmsd=%.2f z=%...), v356)::
63110 :: CALL :: call :: V :: v353.println(v381)::
63116 :: CALL :: call :: V :: v383.println(#(Best Trace, before op...))::
63124 :: EXPR :: reference :: [I :: v390 = p0 $this .bestTrace1::
63127 :: EXPR :: reference :: I :: v391 = v390[v408]::DD,63131
63131 :: EXPR :: assign :: Ljava/lang/Object :: v392 = v391 + #(1)::
63132 :: CALL :: call :: Ljava/lang/Integer :: v394 = valueOf(v392)::
63140 :: EXPR :: reference :: [I :: v395 = p0 $this .bestTrace2::
63143 :: EXPR :: reference :: I :: v396 = v395[v408]::DD,63147
63147 :: EXPR :: assign :: Ljava/lang/Object :: v397 = v396 + #(1)::
63148 :: CALL :: call :: Ljava/lang/Integer :: v399 = valueOf(v397)::
63156 :: EXPR :: reference :: [I :: v400 = p0 $this .bestTraceLen::
63159 :: EXPR :: reference :: I :: v401 = v400[v408]::
63163 :: CALL :: call :: Ljava/lang/Integer :: v403 = valueOf(v401)::
63171 :: CALL :: call :: Ljava/lang/String :: v405 = format(#((%d,%d,%d) ), v389)::
63176 :: CALL :: call :: V :: v387.println(v405)::
63180 :: EXPR :: assign :: Ljava/lang/Object :: v407 = v408 + #(1)::DD,63619
63181 :: EXPR :: reference :: I :: v386 = p0 $this .nBestTrace::DD,63184
63184 :: PRED :: IF :: Z :: if (v408 < v386) goto 1337::CF,63185:CD,63131:CD,63132:CD,63147:CD,63148:CD,63163:CD,63171:CD,63176:CD,63180:CD,63619
63185 :: NORM :: declaration :: Ljava/util/ArrayList :: v410 = new java.util.ArrayList::
63190 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/model/AFP :: v413 = new org.biojava.nbio.structure.align.model.AFP::
63201 :: CALL :: call :: V :: v413.setFragLen(v416)::CL,75335
63213 :: CALL :: call :: V :: v413.setP1(v420)::CL,75346
63225 :: CALL :: call :: V :: v413.setP2(v424)::CL,75357
63229 :: CALL :: call :: Z :: v427 = v410.add(v413)::
63234 :: EXPR :: assign :: Ljava/lang/Object :: v428 = v429 + #(1)::DD,63620
63235 :: EXPR :: reference :: I :: v412 = p0 $this .nBestTrace::DD,63238
63238 :: PRED :: IF :: Z :: if (v429 < v412) goto 1423::CF,63190:CD,63201:CD,63213:CD,63225:CD,63229:CD,63234:CD,63620
63243 :: EXPR :: reference :: D :: v431 = p0 $this .z::DD,63246
63246 :: EXPR :: assign :: Z :: v433 = v431 < #(-0.1 d)::DD,63247
63247 :: PRED :: IF :: Z :: if (v433 < #(0)) goto 1543::CD,63248:CD,63483:CD,63630:CD,63631
63248 :: CALL :: call :: I :: v516 = p0 $this .optimizeSuperposition(p1 $afpChain , v12, v13, v128, v290, p2 $ca1 , p3 $ca2 , v86, v20, v21)::CL,75379
63265 :: EXPR :: reference :: [I :: v437 = p0 $this .align_se1::
63268 :: EXPR :: reference :: I :: v438 = p0 $this .lcmp::DD,63271
63271 :: EXPR :: assign :: Ljava/lang/Object :: v439 = v438 + v450::
63272 :: EXPR :: reference :: [I :: v440 = p0 $this .bestTrace1::
63275 :: EXPR :: reference :: I :: v441 = v440[v510]::DD,63279
63279 :: EXPR :: assign :: Ljava/lang/Object :: v442 = v441 + v450::DD,63280
63280 :: EXPR :: modify :: I :: v437[v439] = v442::
63284 :: EXPR :: reference :: [I :: v443 = p0 $this .align_se2::
63287 :: EXPR :: reference :: I :: v444 = p0 $this .lcmp::DD,63290
63290 :: EXPR :: assign :: Ljava/lang/Object :: v445 = v444 + v450::
63291 :: EXPR :: reference :: [I :: v446 = p0 $this .bestTrace2::
63294 :: EXPR :: reference :: I :: v447 = v446[v510]::DD,63298
63298 :: EXPR :: assign :: Ljava/lang/Object :: v448 = v447 + v450::DD,63299
63299 :: EXPR :: modify :: I :: v443[v445] = v448::
63303 :: EXPR :: assign :: Ljava/lang/Object :: v449 = v450 + #(1)::DD,63623:CF,63621
63304 :: EXPR :: reference :: [I :: v435 = p0 $this .bestTraceLen::
63307 :: EXPR :: reference :: I :: v436 = v435[v510]::DD,63311
63311 :: PRED :: IF :: Z :: if (v450 < v436) goto 1553::CD,63271:CD,63279:CD,63290:CD,63298:CD,63303:CD,63621:CD,63622:CD,63623
63312 :: EXPR :: reference :: [I :: v451 = p0 $this .bestTraceLen::
63315 :: EXPR :: reference :: I :: v452 = v451[v510]::DD,63319
63319 :: EXPR :: assign :: Ljava/lang/Object :: v453 = v509 + v452::DD,63630
63320 :: EXPR :: reference :: I :: v454 = p0 $this .nBestTrace::DD,63323
63323 :: EXPR :: assign :: Ljava/lang/Object :: v455 = v454 - #(1)::CF,63324
63324 :: PRED :: IF :: Z :: if (v510 >= v455) goto 1824::CF,63629:CD,63339:CD,63343:CD,63348:CD,63416:CD,63420:CD,63425:CD,63626
63325 :: EXPR :: reference :: [I :: v456 = p0 $this .bestTrace1::
63328 :: EXPR :: reference :: I :: v457 = v456[v510]::DD,63339
63332 :: EXPR :: reference :: [I :: v458 = p0 $this .bestTraceLen::
63335 :: EXPR :: reference :: I :: v459 = v458[v510]::DD,63339
63339 :: EXPR :: assign :: Ljava/lang/Object :: v460 = v457 + v459::DD,63348
63340 :: EXPR :: reference :: [I :: v461 = p0 $this .bestTrace1::
63343 :: EXPR :: assign :: Ljava/lang/Object :: v462 = v510 + #(1)::
63344 :: EXPR :: reference :: I :: v463 = v461[v462]::DD,63348
63348 :: PRED :: IF :: Z :: if (v460 == v463) goto 1730::CF,63626:CD,63363:CD,63396:CD,63401:CD,63624:CD,63625
63349 :: EXPR :: reference :: [I :: v464 = p0 $this .bestTrace1::
63352 :: EXPR :: reference :: I :: v465 = v464[v510]::DD,63363
63356 :: EXPR :: reference :: [I :: v466 = p0 $this .bestTraceLen::
63359 :: EXPR :: reference :: I :: v467 = v466[v510]::DD,63363
63363 :: EXPR :: assign :: Ljava/lang/Object :: v468 = v465 + v467::DD,63625
63365 :: EXPR :: reference :: [I :: v472 = p0 $this .align_se1::
63368 :: EXPR :: reference :: I :: v473 = p0 $this .lcmp::
63371 :: EXPR :: modify :: I :: v472[v473] = v479::
63375 :: EXPR :: reference :: [I :: v474 = p0 $this .align_se2::
63378 :: EXPR :: reference :: I :: v475 = p0 $this .lcmp::
63381 :: EXPR :: modify :: I :: v474[v475] = #(-1)::
63385 :: EXPR :: reference :: I :: v476 = p0 $this .lcmp::DD,63388
63388 :: EXPR :: assign :: Ljava/lang/Object :: v477 = v476 + #(1)::DD,63389
63389 :: EXPR :: modify :: I :: p0 $this .lcmp = v477::
63392 :: EXPR :: assign :: Ljava/lang/Object :: v478 = v479 + #(1)::DD,63625:CF,63624
63393 :: EXPR :: reference :: [I :: v469 = p0 $this .bestTrace1::
63396 :: EXPR :: assign :: Ljava/lang/Object :: v470 = v511 + #(1)::
63397 :: EXPR :: reference :: I :: v471 = v469[v470]::DD,63401
63401 :: PRED :: IF :: Z :: if (v479 < v471) goto 1682::CF,63626:CD,63388:CD,63392:CD,63396:CD,63624:CD,63625
63402 :: EXPR :: reference :: [I :: v481 = p0 $this .bestTrace2::
63405 :: EXPR :: reference :: I :: v482 = v481[v512]::DD,63416
63409 :: EXPR :: reference :: [I :: v483 = p0 $this .bestTraceLen::
63412 :: EXPR :: reference :: I :: v484 = v483[v512]::DD,63416
63416 :: EXPR :: assign :: Ljava/lang/Object :: v485 = v482 + v484::DD,63425
63417 :: EXPR :: reference :: [I :: v486 = p0 $this .bestTrace2::
63420 :: EXPR :: assign :: Ljava/lang/Object :: v487 = v512 + #(1)::
63421 :: EXPR :: reference :: I :: v488 = v486[v487]::DD,63425
63425 :: PRED :: IF :: Z :: if (v485 == v488) goto 1824::CF,63629:CD,63440:CD,63473:CD,63478:CD,63627:CD,63628
63426 :: EXPR :: reference :: [I :: v489 = p0 $this .bestTrace2::
63429 :: EXPR :: reference :: I :: v490 = v489[v512]::DD,63440
63433 :: EXPR :: reference :: [I :: v491 = p0 $this .bestTraceLen::
63436 :: EXPR :: reference :: I :: v492 = v491[v512]::DD,63440
63440 :: EXPR :: assign :: Ljava/lang/Object :: v493 = v490 + v492::DD,63628
63442 :: EXPR :: reference :: [I :: v497 = p0 $this .align_se1::
63445 :: EXPR :: reference :: I :: v498 = p0 $this .lcmp::
63448 :: EXPR :: modify :: I :: v497[v498] = #(-1)::
63452 :: EXPR :: reference :: [I :: v499 = p0 $this .align_se2::
63455 :: EXPR :: reference :: I :: v500 = p0 $this .lcmp::
63458 :: EXPR :: modify :: I :: v499[v500] = v504::
63462 :: EXPR :: reference :: I :: v501 = p0 $this .lcmp::DD,63465
63465 :: EXPR :: assign :: Ljava/lang/Object :: v502 = v501 + #(1)::DD,63466
63466 :: EXPR :: modify :: I :: p0 $this .lcmp = v502::
63469 :: EXPR :: assign :: Ljava/lang/Object :: v503 = v504 + #(1)::DD,63628:CF,63627
63470 :: EXPR :: reference :: [I :: v494 = p0 $this .bestTrace2::
63473 :: EXPR :: assign :: Ljava/lang/Object :: v495 = v513 + #(1)::
63474 :: EXPR :: reference :: I :: v496 = v494[v495]::DD,63478
63478 :: PRED :: IF :: Z :: if (v504 < v496) goto 1777::CF,63629:CD,63465:CD,63469:CD,63473:CD,63627:CD,63628
63479 :: EXPR :: assign :: Ljava/lang/Object :: v506 = v514 + #(1)::DD,63631:CF,63630
63480 :: EXPR :: reference :: I :: v434 = p0 $this .nBestTrace::DD,63483
63483 :: PRED :: IF :: Z :: if (v508 < v434) goto 1549::CD,63311:CD,63319:CD,63323:CD,63324:CD,63479:CD,63621:CD,63622:CD,63623:CD,63629:CD,63630:CD,63631
63484 :: EXPR :: modify :: I :: p0 $this .nAtom = v507::
63487 :: CALL :: call :: J :: v520 = currentTimeMillis()::JM,63490
63490 :: EXPR :: modify :: J :: p0 $this .timeEnd = v520::
63549 :: EXPR :: assign :: null :: PHI v14 = v12, v13::DD,62389:DD,62390:CF,62266
63550 :: EXPR :: assign :: null :: PHI v33 = v36, v36, v31::CF,63551:DD,63552
63551 :: EXPR :: assign :: null :: PHI v38 = v39, v39, v37::DD,63553:CF,62318
63552 :: EXPR :: assign :: null :: PHI v36 = #(100.0 d), v33::CF,63553:DD,62316:DD,63550
63553 :: EXPR :: assign :: null :: PHI v39 = #(0), v38::CF,63554:DD,63551
63554 :: EXPR :: assign :: null :: PHI v37 = #(0), v35::DD,62318:DD,62322:DD,63551
63555 :: EXPR :: assign :: null :: PHI v51 = #(0), v50::DD,62360:DD,62368
63556 :: EXPR :: assign :: null :: PHI v84 = v86, v83::DD,63557:CF,62474
63557 :: EXPR :: assign :: null :: PHI v86 = #(0), v84::CF,63558:DD,62473:DD,63079:DD,63556
63558 :: EXPR :: assign :: null :: PHI v87 = #(0), v85::DD,62437:DD,62441:DD,62458:DD,62474:DD,62478
63559 :: EXPR :: assign :: null :: PHI v131 = v128, v131::CF,63560:DD,62597:DD,63559
63560 :: EXPR :: assign :: null :: PHI v113 = v90, v112::CF,63561:DD,62499:DD,62505:DD,62522:DD,62528:DD,62541:DD,62545:DD,63564
63561 :: EXPR :: assign :: null :: PHI v132 = v130, v132::CF,63562:DD,63561
63562 :: EXPR :: assign :: null :: PHI v114 = v89, v111::DD,62540:DD,62586:DD,62597
63563 :: EXPR :: assign :: null :: PHI v128 = #(0), v127::CF,63564:DD,62931:DD,62974:DD,63559
63564 :: EXPR :: assign :: null :: PHI v130 = #(0), v113::DD,62487:DD,62601:DD,63561
63565 :: EXPR :: assign :: null :: PHI v154 = v152, v154::DD,62653:DD,63565
63567 :: EXPR :: assign :: null :: PHI v147 = #(0), v146::DD,62636:DD,62644
63568 :: EXPR :: assign :: null :: PHI v152 = #(0), v151::DD,62657:DD,63565
63570 :: EXPR :: assign :: null :: PHI v282 = v281, v282::CF,63571:DD,63570:DD,63576
63571 :: EXPR :: assign :: null :: PHI v244 = v237, v244::CF,63572:DD,63571:DD,63577
63572 :: EXPR :: assign :: null :: PHI v172 = #(0), v171::CF,63573:DD,62712:DD,62716
63573 :: EXPR :: assign :: null :: PHI v297 = v296, v297::CF,63574:DD,63573:DD,63578
63574 :: EXPR :: assign :: null :: PHI v247 = v241, v247::CF,63575:DD,63574:DD,63579
63575 :: EXPR :: assign :: null :: PHI v248 = v242, v248::DD,63575:DD,63580
63576 :: EXPR :: assign :: null :: PHI v283 = v281, v282::CF,63577:DD,62722:DD,62731:DD,62743:DD,62755:DD,63589
63577 :: EXPR :: assign :: null :: PHI v250 = v237, v244::CF,63578:DD,63590
63578 :: EXPR :: assign :: null :: PHI v298 = v296, v297::CF,63579:DD,62717:DD,63593
63579 :: EXPR :: assign :: null :: PHI v253 = v241, v247::CF,63580:DD,63594
63580 :: EXPR :: assign :: null :: PHI v254 = v242, v248::DD,63595:CF,62717
63581 :: EXPR :: assign :: null :: PHI v285 = v284, v285::CF,63582:DD,63581:DD,63589:DD,63606
63582 :: EXPR :: assign :: null :: PHI v260 = v256, v260::CF,63583:DD,63582:DD,63590:DD,63607
63583 :: EXPR :: assign :: null :: PHI v219 = v217, v219::DD,62844:DD,63583
63585 :: EXPR :: assign :: null :: PHI v300 = v299, v300::CF,63586:DD,63585:DD,63593:DD,63609
63586 :: EXPR :: assign :: null :: PHI v261 = v257, v261::CF,63587:DD,63586:DD,63594:DD,63610
63587 :: EXPR :: assign :: null :: PHI v262 = v258, v262::CF,63588:DD,63587:DD,63595
63588 :: EXPR :: assign :: null :: PHI v213 = #(0), v212::DD,62833:DD,62838
63589 :: EXPR :: assign :: null :: PHI v284 = v283, v285::CF,63590:DD,63581:DD,63596:DD,63606
63590 :: EXPR :: assign :: null :: PHI v256 = v250, v260::CF,63591:DD,62857:DD,63582:DD,63607
63591 :: EXPR :: assign :: null :: PHI v217 = #(0), v216::DD,62848:DD,63583
63593 :: EXPR :: assign :: null :: PHI v299 = v298, v300::CF,63594:DD,63585:DD,63598:DD,63609
63594 :: EXPR :: assign :: null :: PHI v257 = v253, v261::CF,63595:DD,63586:DD,63610
63595 :: EXPR :: assign :: null :: PHI v258 = v254, v262::DD,63587:DD,63599
63596 :: EXPR :: assign :: null :: PHI v286 = v284, v286::CF,63597:DD,63596:DD,63600
63597 :: EXPR :: assign :: null :: PHI v234 = #(0), v233::CF,63598:DD,62899:DD,62903
63598 :: EXPR :: assign :: null :: PHI v301 = v299, v301::CF,63599:DD,63598:DD,63603
63599 :: EXPR :: assign :: null :: PHI v265 = v258, v265::DD,62904:DD,63599
63600 :: EXPR :: assign :: null :: PHI v281 = v274, v286::CF,63601:DD,63570:DD,63576:DD,63606
63601 :: EXPR :: assign :: null :: PHI v237 = v276, v222::CF,63602:DD,63571:DD,63577:DD,63607
63602 :: EXPR :: assign :: null :: PHI v240 = v279, #(1)::CF,63603:DD,62671:DD,63608
63603 :: EXPR :: assign :: null :: PHI v296 = v295, v301::CF,63604:DD,63573:DD,63578:DD,63609
63604 :: EXPR :: assign :: null :: PHI v241 = v280, #(1)::CF,63605:DD,63574:DD,63579:DD,63610
63605 :: EXPR :: assign :: null :: PHI v242 = #(1), v235::DD,62906:DD,63575:DD,63580:CF,62905
63606 :: EXPR :: assign :: null :: PHI v287 = v285, v285, v284, v281::CF,63607:DD,62907
63607 :: EXPR :: assign :: null :: PHI v267 = v260, v260, v256, v237::CF,63608:DD,63612
63608 :: EXPR :: assign :: null :: PHI v270 = #(0), #(0), #(0), v240::CF,63609:DD,63613
63609 :: EXPR :: assign :: null :: PHI v302 = v300, v300, v299, v296::CF,63610:DD,63614
63610 :: EXPR :: assign :: null :: PHI v271 = v261, v261, v257, v241::DD,63615:CF,62907
63611 :: EXPR :: assign :: null :: PHI v274 = #(-1), v273::CF,63612:DD,62908:DD,63600
63612 :: EXPR :: assign :: null :: PHI v276 = v290, v267::CF,63613:DD,63601:DD,63616
63613 :: EXPR :: assign :: null :: PHI v279 = v293, v270::CF,63614:DD,63602:DD,63617
63614 :: EXPR :: assign :: null :: PHI v295 = v294, v302::CF,63615:DD,62909:DD,63603
63615 :: EXPR :: assign :: null :: PHI v280 = #(0), v271::DD,62668:DD,63604:CF,62908
63616 :: EXPR :: assign :: null :: PHI v290 = v157, v276::CF,63617:JM,63052:DD,63612
63617 :: EXPR :: assign :: null :: PHI v293 = #(0), v279::CF,63618:DD,63613
63618 :: EXPR :: assign :: null :: PHI v294 = #(1), v288::DD,62913:DD,63614
63619 :: EXPR :: assign :: null :: PHI v408 = #(0), v407::DD,63180:DD,63184
63620 :: EXPR :: assign :: null :: PHI v429 = #(0), v428::DD,63234:DD,63238
63621 :: EXPR :: assign :: null :: PHI v509 = v507, v509::CF,63622:DD,63319:DD,63621
63622 :: EXPR :: assign :: null :: PHI v510 = v508, v510::CF,63623:DD,63324:DD,63343:DD,63622:DD,63624:DD,63626:DD,63629
63623 :: EXPR :: assign :: null :: PHI v450 = #(0), v449::DD,63271:DD,63279:DD,63290:DD,63298:DD,63303:DD,63311
63624 :: EXPR :: assign :: null :: PHI v511 = v510, v511::CF,63625:DD,63396:DD,63624:DD,63626
63625 :: EXPR :: assign :: null :: PHI v479 = v468, v478::DD,63371:DD,63392:DD,63401
63626 :: EXPR :: assign :: null :: PHI v512 = v510, v511::DD,63420:DD,63627:DD,63629
63627 :: EXPR :: assign :: null :: PHI v513 = v512, v513::CF,63628:DD,63473:DD,63627:DD,63629
63628 :: EXPR :: assign :: null :: PHI v504 = v493, v503::DD,63458:DD,63469:DD,63478
63629 :: EXPR :: assign :: null :: PHI v514 = v510, v512, v513::DD,63479
63630 :: EXPR :: assign :: null :: PHI v507 = #(0), v453::CF,63631:DD,63484:DD,63621
63631 :: EXPR :: assign :: null :: PHI v508 = #(0), v506::DD,63483:DD,63622
64233 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.convertAfpChain(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,64247:CD,64261:CD,64280:CD,64281:CD,64282:CD,64310:CD,64338:CD,64339:CD,64340:CD,64341:CD,64342:CD,64343:CD,64344:CD,64345:CD,64346:CD,64577:CD,64627
64244 :: EXPR :: reference :: Lorg/biojava/nbio/structure/jama/Matrix :: v8 = p0 $this .r::DD,64247
64247 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 30::CD,64248
64248 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/jama/Matrix :: v12 = new org.biojava.nbio.structure.jama.Matrix[]::
64249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/jama/Matrix :: v13 = p0 $this .r::DD,64252
64252 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = v13::
64258 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v15 = p0 $this .t::DD,64261
64261 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 60::CD,64262
64262 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v17 = new org.biojava.nbio.structure.Atom[]::
64263 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v18 = p0 $this .t::DD,64266
64266 :: EXPR :: modify :: Ljava/lang/Object :: v17[#(0)] = v18::
64280 :: EXPR :: assign :: I :: v22 = p2 $ca1 .length::DD,64282:DD,64338:DD,64341:DD,64344:CF,64281
64281 :: EXPR :: assign :: I :: v23 = p3 $ca2 .length::DD,64310:DD,64338:DD,64341:DD,64344:CF,64282
64282 :: PRED :: IF :: Z :: if (v22 <= #(0)) goto 119::CD,64286:CD,64287:CD,64301
64283 :: EXPR :: reference :: [[D :: v24 = p0 $this .dist1::DD,64286
64286 :: EXPR :: assign :: I :: v25 = v24.length::DD,64287
64287 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 119::JM,55248:JM,55240:JM,55273:JM,55262:CD,64301
64301 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v28 = identity(#(3), #(3))::CL,76135
64310 :: PRED :: IF :: Z :: if (v23 <= #(0)) goto 159::CD,64314:CD,64315:CD,64329
64311 :: EXPR :: reference :: [[D :: v34 = p0 $this .dist2::DD,64314
64314 :: EXPR :: assign :: I :: v35 = v34.length::DD,64315
64315 :: PRED :: IF :: Z :: if (v35 <= #(0)) goto 159::JM,55248:JM,55240:JM,55273:JM,55262:CD,64329
64329 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v37 = identity(#(3), #(3))::CL,76135
64338 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v22 + v23::DD,64339
64339 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v43 + #(1)::CF,64340
64340 :: NORM :: declaration :: [C :: v45 = new []::CF,64341
64341 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v22 + v23::DD,64342
64342 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v46 + #(1)::CF,64343
64343 :: NORM :: declaration :: [C :: v48 = new []::CF,64344
64344 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v22 + v23::DD,64345
64345 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v49 + #(1)::CF,64346
64346 :: NORM :: declaration :: [C :: v51 = new []::
64356 :: EXPR :: reference :: [I :: v57 = p0 $this .align_se1::
64359 :: EXPR :: reference :: I :: v58 = v57[v130]::DD,64363
64363 :: PRED :: IF :: Z :: if (v58 == #(-1)) goto 405::CD,64371:CD,64500:CD,64540
64364 :: EXPR :: reference :: [I :: v60 = p0 $this .align_se2::
64367 :: EXPR :: reference :: I :: v61 = v60[v130]::DD,64371
64371 :: PRED :: IF :: Z :: if (v61 == #(-1)) goto 405::CD,64425:CD,64444:CD,64448:CD,64456:CD,64468:CD,64500:CD,64540
64425 :: CALL :: call :: C :: v76 = getOneLetter(v74)::JM,64468:JM,64452:CL,76223
64444 :: CALL :: call :: C :: v83 = getOneLetter(v81)::JM,64468:JM,64460:CL,76223
64448 :: CALL :: call :: C :: v85 = toUpperCase(v76)::JM,64468:JM,64452
64452 :: EXPR :: modify :: C :: v45[v130] = v85::
64456 :: CALL :: call :: C :: v87 = toUpperCase(v83)::JM,64468:JM,64460
64460 :: EXPR :: modify :: C :: v48[v130] = v87::
64464 :: EXPR :: modify :: C :: v51[v130] = #(32)::
64468 :: PRED :: IF :: Z :: if (v76 != v83) goto 377::CD,64476:CD,64481
64471 :: EXPR :: modify :: C :: v51[v130] = #(124)::
64476 :: CALL :: call :: I :: v90 = aaScore(v76, v83)::JM,64481:CL,76246
64481 :: PRED :: IF :: Z :: if (v90 <= #(0)) goto 393::
64483 :: EXPR :: modify :: C :: v51[v130] = #(58)::
64489 :: EXPR :: modify :: C :: v51[v130] = #(32)::
64493 :: EXPR :: reference :: [I :: v99 = p0 $this .align_se1::
64496 :: EXPR :: reference :: I :: v100 = v99[v130]::DD,64500
64500 :: PRED :: IF :: Z :: if (v100 != #(-1)) goto 429::CD,64521:CD,64525
64501 :: EXPR :: modify :: C :: v45[v130] = #(45)::
64521 :: CALL :: call :: C :: v108 = getOneLetter(v106)::JM,64529:CL,76223
64525 :: CALL :: call :: C :: v110 = toUpperCase(v108)::JM,64529
64529 :: EXPR :: modify :: C :: v45[v130] = v110::
64533 :: EXPR :: reference :: [I :: v111 = p0 $this .align_se2::
64536 :: EXPR :: reference :: I :: v112 = v111[v130]::DD,64540
64540 :: PRED :: IF :: Z :: if (v112 != #(-1)) goto 479::CD,64561:CD,64565
64541 :: EXPR :: modify :: C :: v48[v130] = #(45)::
64561 :: CALL :: call :: C :: v119 = getOneLetter(v117)::JM,64569:CL,76223
64565 :: CALL :: call :: C :: v121 = toUpperCase(v119)::JM,64569
64569 :: EXPR :: modify :: C :: v48[v130] = v121::
64573 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v130 + #(1)::DD,64627
64574 :: EXPR :: reference :: I :: v56 = p0 $this .lcmp::DD,64577
64577 :: PRED :: IF :: Z :: if (v130 < v56) goto 232::CD,64363:CD,64573:CD,64627
64627 :: EXPR :: assign :: null :: PHI v130 = #(0), v126::DD,64573:DD,64577
64809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.getAlign(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,64815
64815 :: CALL :: call :: V :: getAlign(p1 $afpChain , p2 $ca1 , p3 $ca2 , #(0))::CL,76425
64826 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.getAlignedStructure(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,64827:CD,64850:CD,64856:CD,64865:CD,64871:CD,64872
64827 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.ce.GuiWrapper.getAlignedStructure(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,55342:JM,55479
64850 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v9.getMethod(#(getAlignedStructure), v12)::JM,64871
64856 :: NORM :: declaration :: [Ljava/lang/Object :: v20 = new java.lang.Object[]::JM,64871
64865 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.invoke(#(null), v20)::JM,64871
64871 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,64872
64872 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v23::DD,64827
64896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.prepareGroupsForDisplay(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,64897:CD,64922:CD,64928:CD,64941:CD,64947:CD,64948
64897 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.align.ce.GuiWrapper.prepareGroupsForDisplay(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,55353
64922 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(prepareGroupsForDisplay), v10)::JM,64947
64928 :: NORM :: declaration :: [Ljava/lang/Object :: v20 = new java.lang.Object[]::JM,64947
64941 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.invoke(#(null), v20)::JM,64947
64947 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::CF,64948
64948 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v23::DD,64897
64975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,64976:CD,64980:CD,64987:CD,65012:CD,65016:CD,65017:JM,65001:JM,65006
64976 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,123697:JM,123698:JM,123765:JM,140955:JM,152674:JM,165747:JM,165779:JM,165840:JM,165745:JM,165771:JM,165755:JM,165851:JM,165772:JM,165744:JM,165743
64980 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,65017
64984 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,64996:JM,65016
64987 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,64996:JM,65016
64992 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,64996:JM,65016
64996 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
64997 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,65001:JM,65006:CL,60355:CL,60363:CL,60347
65001 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,65001:JM,65006
65006 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,65007:JM,64996:JM,65016
65007 :: CALL :: call :: Z :: v20 = v4.add(v14)::
65012 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,64996:JM,65016
65016 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,64992:CD,64996:CD,64997:CD,65001:CD,65006:CD,65012:JM,65016:CF,65017
65017 :: NORM :: compound :: Ljava/util/List :: return v4::DD,64976
65033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.getAtomArray(org.biojava.nbio.structure.Atom[],java.util.List,java.util.List)::CD,65063:CD,65069:CD,65082
65063 :: CALL :: call :: Ljava/lang/reflect/Method :: v21 = v10.getMethod(#(getAtomArray), v13)::
65069 :: NORM :: declaration :: [Ljava/lang/Object :: v23 = new java.lang.Object[]::
65082 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.invoke(#(null), v23)::
65132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.printXMLHeader(org.biojava.nbio.core.util.PrettyXMLWriter,org.biojava.nbio.structure.align.model.AFPChain)::CD,65173:CD,65174:CD,65178:CD,65186:CD,65195:CD,65196:CD,65200:CD,65208:CD,65217:CD,65218:CD,65222:CD,65230:CD,65239:CD,65240:CD,65244:CD,65252:CD,65261:CD,65262:CD,65266:CD,65274:CD,65284:CD,65288:CD,65296:CD,65301:CD,65311:CD,65315:CD,65323:CD,65328:CD,65338:CD,65342:CD,65350:CD,65355:CD,65365:CD,65369:CD,65377:CD,65382:CD,65392:CD,65396:CD,65404:CD,65409:CD,65419:CD,65423:CD,65431:CD,65436:CD,65445:CD,65446:CD,65450:CD,65458:CD,65467:CD,65468:CD,65472:CD,65480:CD,65490:CD,65494:CD,65502:CD,65507:CD,65517:CD,65521:CD,65529:CD,65534:CD,65543:CD,65544:CD,65548:CD,65556:CD,65565:CD,65566:CD,65570:CD,65578:CD,65587:CD,65588:CD,65592:CD,65596:CD,65604:CD,65614:CD,65618:CD,65626:CD,65631:CD,65641:CD,65645:CD,65653:CD,65663:CD,65667:CD,65668
65173 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
65174 :: CALL :: call :: I :: v23 = p2 $afpChain .getAlnLength()::CL,68505
65178 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v23)::
65186 :: CALL :: call :: Ljava/lang/String :: v28 = v21.toString()::
65195 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
65196 :: CALL :: call :: I :: v33 = p2 $afpChain .getBlockNum()::CL,65842
65200 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v33)::
65208 :: CALL :: call :: Ljava/lang/String :: v38 = v31.toString()::
65217 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
65218 :: CALL :: call :: I :: v43 = p2 $afpChain .getGapLen()::CL,68514
65222 :: CALL :: call :: Ljava/lang/String :: v45 = valueOf(v43)::
65230 :: CALL :: call :: Ljava/lang/String :: v48 = v41.toString()::
65239 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
65240 :: CALL :: call :: I :: v53 = p2 $afpChain .getOptLength()::CL,68487
65244 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v53)::
65252 :: CALL :: call :: Ljava/lang/String :: v58 = v51.toString()::
65261 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
65262 :: CALL :: call :: I :: v63 = p2 $afpChain .getTotalLenIni()::CL,77089
65266 :: CALL :: call :: Ljava/lang/String :: v65 = valueOf(v63)::
65274 :: CALL :: call :: Ljava/lang/String :: v68 = v61.toString()::
65284 :: CALL :: call :: D :: v76 = p2 $afpChain .getAlignScore()::JM,65288:CL,77098
65288 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,65288
65296 :: CALL :: call :: Ljava/lang/String :: v80 = format(#(%5.2f), v73)::
65301 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
65311 :: CALL :: call :: D :: v87 = p2 $afpChain .getChainRmsd()::JM,65315:CL,77107
65315 :: CALL :: call :: Ljava/lang/Double :: v89 = valueOf(v87)::JM,65315
65323 :: CALL :: call :: Ljava/lang/String :: v91 = format(#(%5.2f), v85)::
65328 :: CALL :: call :: Ljava/lang/String :: v93 = v91.trim()::
65338 :: CALL :: call :: D :: v99 = p2 $afpChain .getIdentity()::JM,65342:CL,68544
65342 :: CALL :: call :: Ljava/lang/Double :: v101 = valueOf(v99)::JM,65342
65350 :: CALL :: call :: Ljava/lang/String :: v103 = format(#(%5.4f), v97)::
65355 :: CALL :: call :: Ljava/lang/String :: v105 = v103.trim()::
65365 :: CALL :: call :: D :: v110 = p2 $afpChain .getNormAlignScore()::JM,65369:CL,77116
65369 :: CALL :: call :: Ljava/lang/Double :: v112 = valueOf(v110)::JM,65369
65377 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(%5.2f), v108)::
65382 :: CALL :: call :: Ljava/lang/String :: v116 = v114.trim()::
65392 :: CALL :: call :: D :: v122 = p2 $afpChain .getProbability()::JM,65396:CL,68621
65396 :: CALL :: call :: Ljava/lang/Double :: v124 = valueOf(v122)::JM,65396
65404 :: CALL :: call :: Ljava/lang/String :: v126 = format(#(%.2e), v120)::
65409 :: CALL :: call :: Ljava/lang/String :: v128 = v126.trim()::
65419 :: CALL :: call :: D :: v133 = p2 $afpChain .getSimilarity()::JM,65423:CL,68523
65423 :: CALL :: call :: Ljava/lang/Double :: v135 = valueOf(v133)::JM,65423
65431 :: CALL :: call :: Ljava/lang/String :: v137 = format(#(%5.4f), v131)::
65436 :: CALL :: call :: Ljava/lang/String :: v139 = v137.trim()::
65445 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v142 = new java.lang.StringBuilder::
65446 :: CALL :: call :: I :: v144 = p2 $afpChain .getCoverage1()::CL,77125
65450 :: CALL :: call :: Ljava/lang/String :: v146 = valueOf(v144)::
65458 :: CALL :: call :: Ljava/lang/String :: v149 = v142.toString()::
65467 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v152 = new java.lang.StringBuilder::
65468 :: CALL :: call :: I :: v154 = p2 $afpChain .getCoverage2()::CL,77190
65472 :: CALL :: call :: Ljava/lang/String :: v156 = valueOf(v154)::
65480 :: CALL :: call :: Ljava/lang/String :: v159 = v152.toString()::
65490 :: CALL :: call :: D :: v164 = p2 $afpChain .getTotalRmsdIni()::JM,65494:CL,77255
65494 :: CALL :: call :: Ljava/lang/Double :: v166 = valueOf(v164)::JM,65494
65502 :: CALL :: call :: Ljava/lang/String :: v168 = format(#(%5.2f), v162)::
65507 :: CALL :: call :: Ljava/lang/String :: v170 = v168.trim()::
65517 :: CALL :: call :: D :: v175 = p2 $afpChain .getTotalRmsdOpt()::JM,65521:CL,68496
65521 :: CALL :: call :: Ljava/lang/Double :: v177 = valueOf(v175)::JM,65521
65529 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(%5.2f), v173)::
65534 :: CALL :: call :: Ljava/lang/String :: v181 = v179.trim()::
65543 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v184 = new java.lang.StringBuilder::
65544 :: CALL :: call :: I :: v186 = p2 $afpChain .getCa1Length()::CL,77264
65548 :: CALL :: call :: Ljava/lang/String :: v188 = valueOf(v186)::
65556 :: CALL :: call :: Ljava/lang/String :: v191 = v184.toString()::
65565 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v194 = new java.lang.StringBuilder::
65566 :: CALL :: call :: I :: v196 = p2 $afpChain .getCa2Length()::CL,77273
65570 :: CALL :: call :: Ljava/lang/String :: v198 = valueOf(v196)::
65578 :: CALL :: call :: Ljava/lang/String :: v201 = v194.toString()::
65587 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v204 = new java.lang.StringBuilder::
65588 :: CALL :: call :: Ljava/util/List :: v206 = p2 $afpChain .getAfpSet()::CL,77282
65592 :: CALL :: call :: I :: v208 = v206.size()::
65596 :: CALL :: call :: Ljava/lang/String :: v210 = valueOf(v208)::
65604 :: CALL :: call :: Ljava/lang/String :: v213 = v204.toString()::
65614 :: CALL :: call :: D :: v218 = p2 $afpChain .getAlignScoreUpdate()::JM,65618:CL,77291
65618 :: CALL :: call :: Ljava/lang/Double :: v220 = valueOf(v218)::JM,65618
65626 :: CALL :: call :: Ljava/lang/String :: v222 = format(#(%5.2f), v216)::
65631 :: CALL :: call :: Ljava/lang/String :: v224 = v222.trim()::
65641 :: CALL :: call :: J :: v230 = p2 $afpChain .getCalculationTime()::CL,68666
65645 :: CALL :: call :: Ljava/lang/Long :: v232 = valueOf(v230)::
65653 :: CALL :: call :: Ljava/lang/String :: v234 = format(#(%d), v228)::
65663 :: CALL :: call :: D :: v237 = p2 $afpChain .getTMScore()::JM,65667:CL,77300
65667 :: EXPR :: assign :: Z :: v239 = v237 < #(-1.0 d)::DD,65668
65668 :: PRED :: IF :: Z :: if (v239 == #(0)) goto 620::CD,65682
65682 :: CALL :: call :: Ljava/lang/String :: v248 = format(#(%.2f), v242)::
65843 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getBlockNum()::JM,55828:JM,76500:JM,76743:JM,76493
65842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockNum()::CE,65843:CD,65849
65846 :: EXPR :: reference :: I :: v3 = p0 $this .blockNum::DD,65849
65849 :: NORM :: compound :: I :: return v3::CF,65843
65851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.printXMLBlockHeader(org.biojava.nbio.core.util.PrettyXMLWriter,org.biojava.nbio.structure.align.model.AFPChain,int)::CD,65857:CD,65861:CD,65865:CD,65869:CD,65873:CD,65874:CD,65882:CD,65891:CD,65896:CD,65904:CD,65918:CD,65926:CD,65931:CD,65945:CD,65953:CD,65958:CD,65967:CD,65972:CD,65980
65857 :: CALL :: call :: [I :: v6 = p2 $afpChain .getBlockSize()::CL,77629
65861 :: CALL :: call :: [I :: v8 = p2 $afpChain .getBlockGap()::CL,77638
65865 :: CALL :: call :: [D :: v10 = p2 $afpChain .getBlockScore()::CL,77647
65869 :: CALL :: call :: [D :: v12 = p2 $afpChain .getBlockRmsd()::CL,77656
65873 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
65874 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(p3 $blockNr )::
65882 :: CALL :: call :: Ljava/lang/String :: v19 = v14.toString()::
65891 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v22 = new java.lang.StringBuilder::
65892 :: EXPR :: reference :: I :: v23 = v6[p3 $blockNr ]::
65896 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v23)::
65904 :: CALL :: call :: Ljava/lang/String :: v28 = v22.toString()::
65914 :: EXPR :: reference :: D :: v35 = v10[p3 $blockNr ]::JM,65918
65918 :: CALL :: call :: Ljava/lang/Double :: v37 = valueOf(v35)::JM,65918
65926 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%5.2f), v33)::
65931 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::
65941 :: EXPR :: reference :: D :: v45 = v12[p3 $blockNr ]::JM,65945
65945 :: CALL :: call :: Ljava/lang/Double :: v47 = valueOf(v45)::JM,65945
65953 :: CALL :: call :: Ljava/lang/String :: v49 = format(#(%5.2f), v44)::
65958 :: CALL :: call :: Ljava/lang/String :: v51 = v49.trim()::
65967 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
65968 :: EXPR :: reference :: I :: v55 = v8[p3 $blockNr ]::
65972 :: CALL :: call :: Ljava/lang/String :: v57 = valueOf(v55)::
65980 :: CALL :: call :: Ljava/lang/String :: v60 = v54.toString()::
66030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.printXMLEQRKnownPositions(org.biojava.nbio.core.util.PrettyXMLWriter,org.biojava.nbio.structure.align.model.AFPChain,int)::CD,66036:CD,66153:CD,66155
66036 :: CALL :: call :: [I :: v6 = p2 $afpChain .getOptLen()::CL,77665
66107 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v48)::
66106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
66115 :: CALL :: call :: Ljava/lang/String :: v36 = v31.toString()::
66149 :: EXPR :: reference :: I :: v11 = v6[p3 $blockNr ]::DD,66153
66148 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v48 + #(1)::DD,66155
66153 :: PRED :: IF :: Z :: if (v48 < v11) goto 35::CD,66106:CD,66107:CD,66115:CD,66148:CD,66155
66155 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,66148:DD,66153
66217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.printXMLEQRInferPositions(org.biojava.nbio.core.util.PrettyXMLWriter,org.biojava.nbio.structure.align.model.AFPChain,int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,66225:CD,66229
66225 :: CALL :: call :: [I :: v8 = p2 $afpChain .getOptLen()::JM,66229:CL,77665
66229 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 13::CD,66375:CD,66377
66265 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v69)::
66264 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
66273 :: CALL :: call :: Ljava/lang/String :: v29 = v24.toString()::
66294 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::CL,77704
66336 :: CALL :: call :: Ljava/lang/String :: v56 = v54.toString()::CL,77704
66371 :: EXPR :: reference :: I :: v13 = v8[p3 $bk ]::DD,66375
66370 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v69 + #(1)::DD,66377
66375 :: PRED :: IF :: Z :: if (v69 < v13) goto 27::CD,66264:CD,66265:CD,66273:CD,66294:CD,66336:CD,66370:CD,66377
66377 :: EXPR :: assign :: null :: PHI v69 = #(0), v68::DD,66370:DD,66375
66425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.AFPChainXMLConverter.printXMLMatrixShift(org.biojava.nbio.core.util.PrettyXMLWriter,org.biojava.nbio.structure.align.model.AFPChain,int)::CD,66431:CD,66435
66431 :: CALL :: call :: [Lorg/biojava/nbio/structure/jama/Matrix :: v6 = p2 $afpChain .getBlockRotationMatrix()::JM,66435:JM,66436:CL,77775
66435 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 14::CD,66436:CD,66437
66437 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 17::CD,66443
66436 :: EXPR :: assign :: I :: v8 = v6.length::DD,66437
66439 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v6[p3 $blockNr ]::DD,66443
66443 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 29::CD,66500:CD,66530:CD,66553:CD,66576:CD,66593
66451 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
66457 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v14.append(v18)::
66456 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v39 + #(1)::
66463 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v21)::
66462 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v36 + #(1)::
66468 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
66473 :: CALL :: call :: D :: v29 = v10.get(v39, v36)::JM,66479:CL,77784
66479 :: CALL :: call :: Ljava/lang/Double :: v31 = valueOf(v29)::JM,66479
66487 :: CALL :: call :: Ljava/lang/String :: v33 = format(#(%.6f), v27)::
66497 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,66592:CF,66591
66499 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v39 + #(1)::DD,66593
66498 :: PRED :: IF :: Z :: if (v36 < #(3)) goto 44::CF,66451:CD,66456:CD,66457:CD,66462:CD,66463:CD,66468:CD,66473:CD,66479:CD,66487:CD,66497:CD,66591:CD,66592:CF,66499
66500 :: PRED :: IF :: Z :: if (v38 < #(3)) goto 41::CD,66498:CD,66499:CD,66591:CD,66592:CD,66593
66530 :: CALL :: call :: Ljava/lang/String :: v54 = format(#(%.3f), v48)::
66553 :: CALL :: call :: Ljava/lang/String :: v63 = format(#(%.3f), v57)::
66576 :: CALL :: call :: Ljava/lang/String :: v72 = format(#(%.3f), v66)::
66591 :: EXPR :: assign :: null :: PHI v39 = v38, v39::CF,66592:DD,66456:DD,66499:DD,66591
66593 :: EXPR :: assign :: null :: PHI v38 = #(0), v37::DD,66500:DD,66591
66592 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,66462:DD,66497:DD,66498
68487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getOptLength()::CE,68488:CD,68494
68488 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getOptLength()::
68491 :: EXPR :: reference :: I :: v3 = p0 $this .optLength::DD,68494
68494 :: NORM :: compound :: I :: return v3::CF,68488
68497 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getTotalRmsdOpt()::JM,65521:JM,78805
68496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getTotalRmsdOpt()::CE,68497:CD,68503
68500 :: EXPR :: reference :: D :: v3 = p0 $this .totalRmsdOpt::DD,68503
68503 :: NORM :: compound :: D :: return v3::CF,68497
68505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlnLength()::CE,68506:CD,68512
68506 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getAlnLength()::
68509 :: EXPR :: reference :: I :: v3 = p0 $this .alnLength::DD,68512
68512 :: NORM :: compound :: I :: return v3::CF,68506
68515 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getGapLen()::
68514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getGapLen()::CE,68515:CD,68521
68518 :: EXPR :: reference :: I :: v3 = p0 $this .gapLen::DD,68521
68521 :: NORM :: compound :: I :: return v3::CF,68515
68523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getSimilarity()::CE,68524:CD,68530:CD,68531:CD,68538
68524 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getSimilarity()::JM,65423
68527 :: EXPR :: reference :: D :: v3 = p0 $this .similarity::DD,68530
68531 :: PRED :: IF :: Z :: if (v5 >= #(0)) goto 14::CD,68532
68530 :: EXPR :: assign :: Z :: v5 = v3 > #(0.0 d)::DD,68531
68532 :: CALL :: call :: V :: p0 $this .calcSimilarity()::CL,68565
68535 :: EXPR :: reference :: D :: v8 = p0 $this .similarity::DD,68538
68538 :: NORM :: compound :: D :: return v8::DD,68524
68545 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getIdentity()::JM,65342:JM,78889
68544 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getIdentity()::CE,68545:CD,68551:CD,68552:CD,68559
68548 :: EXPR :: reference :: D :: v3 = p0 $this .identity::DD,68551
68551 :: EXPR :: assign :: Z :: v5 = v3 > #(0.0 d)::DD,68552
68553 :: CALL :: call :: V :: p0 $this .calcSimilarity()::CL,68565
68552 :: PRED :: IF :: Z :: if (v5 > #(0)) goto 14::CD,68553
68556 :: EXPR :: reference :: D :: v8 = p0 $this .identity::DD,68559
68559 :: NORM :: compound :: D :: return v8::DD,68545
68565 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.calcSimilarity()::CD,68578:CD,68584:CD,68589:CD,68590:CD,68597:CD,68602:CD,68603
68578 :: CALL :: call :: Ljava/util/Map :: v7 = calcIdSimilarity(v3, v4, v5)::CL,78459
68584 :: CALL :: call :: Ljava/lang/Object :: v10 = v7.get(#(similarity))::JM,68589
68589 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::JM,68594
68590 :: CALL :: call :: D :: v13 = v11.doubleValue()::JM,68594
68594 :: EXPR :: modify :: D :: p0 $this .similarity = v13::
68597 :: CALL :: call :: Ljava/lang/Object :: v16 = v7.get(#(identity))::JM,68602
68603 :: CALL :: call :: D :: v19 = v17.doubleValue()::JM,68607
68602 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,68607
68607 :: EXPR :: modify :: D :: p0 $this .identity = v19::
68621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getProbability()::CE,68622:CD,68628
68622 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getProbability()::JM,65396:JM,78753:JM,78777
68625 :: EXPR :: reference :: D :: v3 = p0 $this .probability::DD,68628
68628 :: NORM :: compound :: D :: return v3::CF,68622
68649 :: EXIT :: exit :: [C :: org.biojava.nbio.structure.align.model.AFPChain.getAlnseq1()::JM,76771
68648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlnseq1()::CE,68649:CD,68655
68652 :: EXPR :: reference :: [C :: v3 = p0 $this .alnseq1::DD,68655
68655 :: NORM :: compound :: [C :: return v3::CF,68649
68657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlnseq2()::CE,68658:CD,68664
68658 :: EXIT :: exit :: [C :: org.biojava.nbio.structure.align.model.AFPChain.getAlnseq2()::JM,76772
68661 :: EXPR :: reference :: [C :: v3 = p0 $this .alnseq2::DD,68664
68664 :: NORM :: compound :: [C :: return v3::CF,68658
68667 :: EXIT :: exit :: J :: org.biojava.nbio.structure.align.model.AFPChain.getCalculationTime()::
68666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getCalculationTime()::CE,68667:CD,68673
68670 :: EXPR :: reference :: J :: v3 = p0 $this .calculationTime::DD,68673
68673 :: NORM :: compound :: J :: return v3::CF,68667
69261 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.toDBSearchResult()::JM,56514
69260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.toDBSearchResult()::CE,69261:CD,69264:CD,69268
69264 :: CALL :: call :: Ljava/lang/String :: v4 = toDBSearchResult(p0 $this )::JM,69268:CL,78674
69268 :: NORM :: compound :: Ljava/lang/String :: return v4::DD,69261
70169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.flushCache()::CD,70173:CD,70179:CD,70180
70173 :: CALL :: call :: V :: p0 $this .flushCache()::CL,80365
70176 :: EXPR :: reference :: Lorg/biojava/nbio/structure/domain/PDPProvider :: v4 = p0 $this .pdp::DD,70179
70179 :: EXPR :: assign :: Z :: v5=v4 INSTANCEOF org.biojava.nbio.structure.domain.RemotePDPProvider::DD,70180
70180 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 26::CD,70185
70185 :: CALL :: call :: V :: v8.flushCache()::CL,80365
71879 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,71880:CD,71883:CD,71885
71880 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,59347:JM,59284
71883 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,71885
71885 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,71880
71887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,71888:CD,71891:CD,71893
71888 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,59347:JM,59284
71891 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,71893
71893 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,71888
71895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,71896:CD,71899:CD,71901
71896 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,59307:JM,59373
71899 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,71901
71901 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,71896
71903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,71904:CD,71907:CD,71909
71904 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,59307:JM,59373
71907 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,71909
71909 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,71904
72316 :: EXPR :: modify :: I :: p0 $this .port = #(-1)::
72319 :: EXPR :: modify :: I :: p0 $this .hashCode = #(-1)::
72323 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,72326
72322 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,72323:CD,72326:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72327 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
72326 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,72327:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72331 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72337 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,72596:CD,72338:CD,72339:CD,72344
72336 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,72595
72339 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72338 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72344 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,72336:CD,72337:CD,72595:CD,72596
72347 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,72348:CD,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72346 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,72596
72348 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72353 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,72346:CD,72347:CD,72596:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72354 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72363 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,72597:CD,72364
72365 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72364 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,72597
72369 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,72598:CD,72370:CD,72375:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72370 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72375 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,72598
72377 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,72378:CD,72384:CD,72388:CD,72393:CD,72396:CD,72397:CD,72599:CD,72600:CD,72601:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72378 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72384 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,72601:JM,72393
72388 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72408:JM,72344:JM,72602:JM,72604:JM,72607:JM,72601
72393 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,72600:CD,72394:CD,72601
72394 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,72600
72397 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,72600:CD,72398:CD,72601
72396 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,72599
72399 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72398 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,72600:CD,72399:CD,72404:CD,72601:JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72405 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v52::
72404 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,72600:CD,72377
72409 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,72413:CD,72418:CD,72419:CD,72426:CD,72436:CD,72602:CD,72603:CD,72604:CD,72605
72408 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,72604:CD,72409
72410 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,72418
72413 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,72418
72419 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,72602
72418 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,72604:CD,72419:CD,72426:CD,72436:CD,72602:CD,72603:CD,72605
72420 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,72602
72423 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,72426
72427 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,72435:JM,72430
72426 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,72603:CD,72430:CD,72435
72430 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,72435:JM,72430
72435 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,72603
72437 :: EXPR :: reference :: Ljava/lang/String :: v64 = p1 $context .protocol::DD,72440
72436 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,72604:CD,72605
72440 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v64::
72443 :: EXPR :: reference :: Ljava/lang/String :: v65 = p1 $context .authority::DD,72446
72446 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authority = v65::
72449 :: EXPR :: reference :: Ljava/lang/String :: v66 = p1 $context .userInfo::DD,72452
72452 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .userInfo = v66::
72455 :: EXPR :: reference :: Ljava/lang/String :: v67 = p1 $context .host::DD,72458
72458 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .host = v67::
72461 :: EXPR :: reference :: I :: v68 = p1 $context .port::DD,72464
72464 :: EXPR :: modify :: I :: p0 $this .port = v68::
72467 :: EXPR :: reference :: Ljava/lang/String :: v69 = p1 $context .file::DD,72470
72470 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .file = v69::
72473 :: EXPR :: reference :: Ljava/lang/String :: v70 = p1 $context .path::DD,72476
72476 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .path = v70::
72483 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
72484 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
72489 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72494 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,72545:JM,72544:JM,72552:JM,72607
72503 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,72606:CD,72507
72507 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,72606
72513 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
72512 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
72518 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
72521 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
72526 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
72535 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
72538 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72545 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,72353:JM,72545:JM,72544:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72607:JM,72419:JM,72322:JM,72602:JM,72604
72544 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CF,72607:CD,72545:CD,72546
72546 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,72353:JM,72545:JM,72544:JM,72419:JM,72322:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72602:JM,72604:JM,72607
72552 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v83::
72555 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 498::CD,72556
72557 :: EXPR :: reference :: Ljava/lang/String :: v85 = p1 $context .query::DD,72560
72556 :: PRED :: IF :: Z :: if (v51 != v84) goto 498::CD,72566
72560 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .query = v85::
72563 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .ref::DD,72566
72567 :: EXPR :: reference :: Ljava/lang/String :: v87 = p1 $context .ref::DD,72570
72566 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 498::
72570 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v87::
72583 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
72582 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
72595 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,72336:DD,72337:DD,72338:DD,72347:DD,72398:JM,72353:JM,72369:JM,72545:JM,72544:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72552:JM,72363:DD,72607
72597 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,72369:JM,72353:JM,72545:JM,72544:JM,72393:JM,72552:JM,72363:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72607:DD,72599:DD,72600:JM,72419:JM,72322:JM,72602:JM,72604
72596 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,72346:DD,72347:JM,72353:JM,72545:JM,72544:JM,72393:JM,72552:JM,72363:JM,72369:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72607:DD,72364:DD,72597
72599 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,72353:JM,72369:JM,72545:JM,72544:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72552:JM,72363:JM,72607:DD,72394:DD,72396:DD,72398:JM,72393:CF,72397
72598 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,72397
72601 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,72405:DD,72409:JM,72418:DD,72603
72600 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,72601:JM,72353:JM,72369:JM,72545:JM,72544:JM,72595:JM,72404:JM,72375:JM,72377:JM,72344:JM,72552:JM,72363:JM,72607:DD,72556
72603 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,72436
72602 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,72604
72605 :: EXPR :: assign :: null :: PHI v73 = #(0), #(0), #(0), #(1)::DD,72555
72604 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::CF,72605:DD,72503:DD,72606
72607 :: EXPR :: assign :: null :: PHI v84 = v21, v80::DD,72556:CF,72555
72606 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,72535
72778 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72785 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72792 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72799 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72806 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72813 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72820 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72827 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72850 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72877 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72884 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72891 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72898 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72908 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
72958 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:JM,52046
73077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,73082:CD,73087
73082 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,83506
73087 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,83536
73098 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,73105:CD,73114:CD,73115:CD,73164:CD,73165:CD,73170:CD,73175:CD,73194:CD,73195:CD,73200:CD,73205:CD,73221:CD,73222:CD,73227:CD,73232:CD,73251:CD,73252:CD,73257:CD,73262:CD,73278:CD,73279:CD,73284:CD,73289:CD,73305:CD,73306:CD,73311:CD,73316:CD,73346:CD,73347:CD,73352:CD,73357:CD,73367:CD,73368:CD,73376:CD,73381
73105 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,73114
73111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
73115 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,73124:CD,73128:CD,73142:CD,73393:CD,73398
73114 :: EXPR :: assign :: I :: v9 = v7.length::DD,73115
73116 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,73331
73124 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
73128 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,73132:CL,84321
73132 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
73136 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
73139 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,73142
73143 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,84334
73142 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,73143:CD,73149:CD,73157:CD,73393:CD,73398
73146 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
73149 :: CALL :: call :: I :: v81 = v79.ordinal()::
73153 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,73157
73157 :: PRED :: IF :: null :: switch v82::CD,73158:CD,73188:CD,73215:CD,73245:CD,73272:CD,73299:CD,73326:CD,73331:CD,73340
73158 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,84477
73165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
73164 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v169 = new java.lang.IllegalArgumentException::
73170 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
73175 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
73188 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,84536
73195 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
73194 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v158 = new java.lang.IllegalArgumentException::
73200 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
73205 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
73215 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,84588
73221 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v146 = new java.lang.IllegalArgumentException::
73222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
73227 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
73232 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
73245 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,84647
73251 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
73252 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
73257 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
73262 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
73272 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,84688
73279 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
73278 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v123 = new java.lang.IllegalArgumentException::
73284 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
73289 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
73299 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,84741
73305 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v112 = new java.lang.IllegalArgumentException::
73306 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
73311 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
73316 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
73326 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,73331
73331 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,73332:CD,73340
73332 :: CALL :: call :: Z :: v109 = p0 $this .initFromFile()::CL,84823
73340 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,84846
73347 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
73346 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v99 = new java.lang.IllegalArgumentException::
73352 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
73357 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
73367 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v83 = new java.lang.IllegalStateException::
73368 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
73376 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
73381 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
73393 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,73398:CL,84477
73398 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,73403:CD,73408
73403 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,73408:CL,84588
73408 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,73413:CD,73418
73413 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,73418:CL,84688
73418 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,73423:CD,73428
73423 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,73428:CL,84846
73428 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,73430:CD,73434:CD,73442:CD,73446
73430 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,73471:JM,73514
73434 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::CL,59089
73442 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,73446
73447 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,73451
73446 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,73447:CD,73451:CD,73547
73451 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,73455:CD,73460:CD,73539:CD,73547
73455 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,73460
73460 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,73471:CD,73475:CD,73514:CD,73518
73471 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,73471
73475 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
73514 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,73514
73518 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
73539 :: CALL :: call :: Z :: v76 = p0 $this .initFromFile()::CL,84823
73547 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,84741
73650 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,73655:CD,73659
73655 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,84941
73659 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.loadStructure(p1 $cache )::CL,85402:CL,85353:CL,85370:CL,85386:CL,85661:CL,85418:CL,85685
73667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::CE,73668:CD,73672:CD,73676:CD,73681
73668 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::JM,60239
73672 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,84941
73676 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::JM,73681:CL,86322:CL,85706:CL,86305:CL,86254:CL,86271:CL,86288:CL,86338
73681 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,73668
73695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.values()::CF,73696:CD,73698:CD,73700:CD,73701:CD,73709
73696 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.values()::JM,60289
73698 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/GroupType :: v2 = org.biojava.nbio.structure.GroupType.ENUM$VALUES::DD,73700
73701 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v5 = new org.biojava.nbio.structure.GroupType[]::DD,73709
73700 :: EXPR :: assign :: I :: v4 = v2.length::DD,73701
73709 :: NORM :: compound :: [Lorg/biojava/nbio/structure/GroupType :: return v5::CF,73696
73729 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
73732 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,73734
73734 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
73737 :: NORM :: declaration :: [D :: v7 = new []::DD,73738
73738 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
73741 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
73744 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
73747 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
73750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
73753 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
73756 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
73788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,73793
73793 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
73808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,73813
73813 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
73828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,73833
73833 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
73839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,73840:CD,73846
73840 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,60817:JM,86760:JM,86772
73843 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,73846
73846 :: NORM :: compound :: [D :: return v3::CF,73840
73848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,73856
73853 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
73856 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
73864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,73872
73869 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
73872 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
73880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,73888
73885 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
73888 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
73897 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
73896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,73897:CD,73903
73900 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,73903
73903 :: NORM :: compound :: I :: return v3::CF,73897
73905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,73910
73910 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
73916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,73921
73921 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
73927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,73932
73932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
73939 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,60849:JM,60937:JM,106146:JM,106196:JM,141684:JM,141738:JM,160801:JM,160851
73938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,73939:CD,73945
73942 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,73945
73945 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,73946:CD,73950:CD,73954
73947 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,73954
73946 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,73939
73950 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,73954
73954 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,73939
73959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,73960:CD,73963:CD,73971:CD,73976:CD,73984:CD,73989:CD,73997:CD,74002:CD,74010:CD,74015:CD,74023:CD,74028:CD,74036:CD,74041:CD,74048:CD,74079:CD,74083:CD,74087:CD,74119:CD,74120:CD,74121
73960 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
73963 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
73968 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
73971 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
73976 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
73981 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
73984 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
73989 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
73997 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
74002 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
74010 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,74120
74015 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,74120
74020 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,74120
74023 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,74120
74028 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,74120
74033 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,74120
74036 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,74120
74041 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,74120
74045 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,74048
74049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,74120
74048 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,74120:CF,74049:CD,74050:CD,74058:CD,74066:CD,74070:CD,74075
74050 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
74058 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,74120
74063 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,74120
74066 :: CALL :: call :: I :: v49 = v47.size()::JM,74120
74070 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,74120
74075 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,74120
74079 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,74087:CL,61101
74083 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,74087
74087 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,74121:CF,74088:CD,74089:CD,74097:CD,74102:CD,74106:CD,74110:CD,74115
74089 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
74088 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,74121
74097 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,74121
74102 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,74121:CL,61101
74106 :: CALL :: call :: I :: v69 = v67.size()::JM,74121
74110 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,74121
74115 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,74121
74119 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,73960
74121 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,74119
74120 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,74121
74149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,74150:CD,74153:CD,74161:CD,74166:CD,74174:CD,74179:CD,74187:CD,74192:CD,74199:CD,74230:CD,74231
74150 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
74153 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
74158 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
74161 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
74166 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
74174 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,74231
74179 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,74231
74184 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,74231
74187 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,74231
74192 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,74231
74196 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,74199
74199 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,74231:CF,74200:CD,74201:CD,74209:CD,74217:CD,74221:CD,74226
74201 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
74200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,74231
74209 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,74231
74214 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,74231
74217 :: CALL :: call :: I :: v33 = v31.size()::JM,74231
74221 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,74231
74226 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,74231
74231 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,74230
74230 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,74150
74247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,74248:CD,74251:CD,74259:CD,74264:CD,74272:CD,74277:CD,74285:CD,74290:CD,74297:CD,74331:CD,74362:CD,74363:CD,74364
74248 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
74251 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
74259 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,74363
74264 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,74363
74269 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,74363
74272 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,74363
74277 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,74363
74282 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,74363
74285 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,74363
74290 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,74363
74294 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,74297
74297 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,74363:CF,74298:CD,74299:CD,74307:CD,74315:CD,74319:CD,74324
74299 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
74298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,74363
74307 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,74363
74312 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,74363
74315 :: CALL :: call :: I :: v33 = v31.size()::JM,74363
74319 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,74363
74324 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,74363
74328 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,74331
74331 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,74364:CF,74332:CD,74333:CD,74341:CD,74349:CD,74353:CD,74358
74333 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
74332 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,74364
74341 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,74364
74346 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,74364
74349 :: CALL :: call :: I :: v50 = v48.size()::JM,74364
74353 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,74364
74358 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,74364
74363 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,74364
74362 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,74248
74364 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,74362
74387 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.getDistanceWithSidechain(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,61452:JM,75480
74386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getDistanceWithSidechain(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,74387:CD,74395:CD,74399:CD,74401
74395 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = v5.getScoringStrategy()::JM,74401:CL,61488
74399 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v8 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::CF,74401
74401 :: PRED :: IF :: Z :: if (v7 != v8) goto 20::CD,74402:CD,74407:CD,74412:CD,74417:CD,74427:CD,74432:CD,74441:CD,74445:CD,74447:CD,74564:CD,74565
74402 :: CALL :: call :: D :: v78 = getDistance(p1 $ca1 , p2 $ca2 )::JM,74407:CL,86345
74407 :: NORM :: compound :: D :: return v78::DD,74387
74412 :: CALL :: call :: Z :: v14 = v10.hasAtom(#(CB))::JM,74417:CL,60371
74417 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CF,74564:CD,74418
74418 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v17 = v10.getAtom(#(CB))::JM,74564:CL,53038
74427 :: CALL :: call :: Z :: v22 = v20.hasAtom(#(CB))::JM,74432:CL,60371
74433 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v24 = v20.getAtom(#(CB))::JM,74565:CL,53038
74432 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 92::CF,74565:CD,74433
74441 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = v26.getScoringStrategy()::JM,74447:CL,61488
74445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::CF,74447
74447 :: PRED :: IF :: Z :: if (v28 != v29) goto 134::CD,74448:CD,74461:CD,74465:CD,74469:CD,74471:CD,74566
74449 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 127::CD,74450:CD,74456:CD,74566
74448 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 127::CD,74449:CD,74456:CD,74566
74450 :: CALL :: call :: D :: v75 = getDistance(v18, v25)::JM,74566:CL,86345
74456 :: CALL :: call :: D :: v73 = getDistance(p1 $ca1 , p2 $ca2 )::JM,74566:CL,86345
74461 :: NORM :: compound :: D :: return v76::DD,74387
74465 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = v30.getScoringStrategy()::JM,74471:CL,61488
74469 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::CF,74471
74471 :: PRED :: IF :: Z :: if (v32 != v33) goto 195::CD,74472:CD,74494:CD,74498:CD,74502:CD,74504:CD,74567
74473 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 193::CD,74474:CD,74479:CD,74484:CD,74489:CD,74567
74472 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 193::CD,74473:CD,74567
74474 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = subtract(v18, p1 $ca1 )::CL,86404
74479 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v66 = subtract(v25, p2 $ca2 )::CL,86404
74484 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = subtract(v66, v64)::CL,86404
74489 :: CALL :: call :: D :: v70 = amount(v68)::JM,74567:CL,86465
74494 :: NORM :: compound :: D :: return v71::DD,74387
74498 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v36 = v34.getScoringStrategy()::JM,74504:CL,61488
74502 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v37 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::CF,74504
74505 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 255::CF,74568:CD,74506
74504 :: PRED :: IF :: Z :: if (v36 != v37) goto 263::CD,74505:CD,74527:CD,74532:CD,74533:CD,74537:CD,74541:CD,74543:CD,74568
74507 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v51 = subtract(v18, p1 $ca1 )::CL,86404
74506 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 255::CF,74568:CD,74507:CD,74512:CD,74517:CD,74522:CD,74526
74512 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v53 = subtract(v25, p2 $ca2 )::CL,86404
74517 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v55 = subtract(v53, v51)::CL,86404
74522 :: CALL :: call :: D :: v57 = amount(v55)::JM,74526:CL,86465
74527 :: CALL :: call :: D :: v61 = getDistance(p1 $ca1 , p2 $ca2 )::JM,74532:CL,86345
74526 :: EXPR :: assign :: Ljava/lang/Object :: v58 = #(0.0 d) + v57::DD,74568
74533 :: NORM :: compound :: D :: return v62::DD,74387
74532 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v59 + v61::DD,74533
74537 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v40 = v38.getScoringStrategy()::JM,74543:CL,61488
74541 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v41 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::CF,74543
74543 :: PRED :: IF :: Z :: if (v40 != v41) goto 306::CD,74544:CD,74557:CD,74558:CD,74563:CD,74569
74545 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 298::CD,74546:CD,74552:CD,74569
74544 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 298::CD,74545:CD,74552:CD,74569
74546 :: CALL :: call :: D :: v47 = getDistance(v18, v25)::JM,74569:CL,86345
74552 :: CALL :: call :: D :: v45 = getDistance(p1 $ca1 , p2 $ca2 )::JM,74569:CL,86345
74557 :: NORM :: compound :: D :: return v48::DD,74387
74558 :: CALL :: call :: D :: v43 = getDistance(p1 $ca1 , p2 $ca2 )::JM,74563:CL,86345
74563 :: NORM :: compound :: D :: return v43::DD,74387
74565 :: EXPR :: assign :: null :: PHI v25 = #(null), v24::DD,74449:DD,74473:DD,74506:DD,74545
74564 :: EXPR :: assign :: null :: PHI v18 = #(null), v17::DD,74448:DD,74472:DD,74505:DD,74544
74567 :: EXPR :: assign :: null :: PHI v71 = v70, #(0.0 d)::CF,74494
74566 :: EXPR :: assign :: null :: PHI v76 = v75, v73::CF,74461
74569 :: EXPR :: assign :: null :: PHI v48 = v47, v45::CF,74557
74568 :: EXPR :: assign :: null :: PHI v59 = #(0.0 d), #(0.0 d), v58::DD,74532
74927 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.zByZ(double,double)::JM,61597
74926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.zByZ(double,double)::CE,74927:CD,74943:CD,74948
74943 :: CALL :: call :: D :: v11 = p0 $this .pToZ(v9)::JM,74948:CL,86511
74948 :: NORM :: compound :: D :: return v11::CF,74927
74959 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.getRMSDForBestTrace(int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],[],[][],[],int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,62316:JM,63550
74958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getRMSDForBestTrace(int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],[],[][],[],int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,74959:CD,75024:CD,75033:CD,75041:CD,75046:JM,75014
74986 :: CALL :: call :: V :: p0 $this .setStrBuf(p2 $strBuf1 , v15, p8 $ca1 , v19)::CL,75092
75006 :: CALL :: call :: V :: p0 $this .setStrBuf(p3 $strBuf2 , v21, p9 $ca2 , v25)::CL,75092
75013 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,75044
75014 :: PRED :: IF :: Z :: if (v29 < p7 $winSize ) goto 21::CD,74986:CD,75006:CD,75013:CD,75043:CD,75044
75017 :: EXPR :: reference :: [I :: v13 = p0 $this .bestTracesN::
75016 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v35 + #(1)::DD,75046
75020 :: EXPR :: reference :: I :: v14 = v13[p1 $ir ]::DD,75024
75024 :: PRED :: IF :: Z :: if (v33 < v14) goto 12::CD,75014:CD,75016:CD,75043:CD,75044:CD,75046
75033 :: CALL :: call :: D :: v40 = p0 $this .calc_rmsd(p2 $strBuf1 , p3 $strBuf2 , v38, #(1))::JM,75041:CL,75158
75041 :: NORM :: compound :: D :: return v40::DD,74959
75043 :: EXPR :: assign :: null :: PHI v35 = v33, v35::CF,75044:DD,75016:DD,75043
75044 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,75013:DD,75014
75046 :: EXPR :: assign :: null :: PHI v33 = #(0), v31::DD,75024:DD,75043
75092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.setStrBuf(org.biojava.nbio.structure.Atom[],int,org.biojava.nbio.structure.Atom[],int)::CD,75116
75116 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v16 = v9.getAtom(v13)::CL,53038
75159 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.calc_rmsd(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],int,boolean)::JM,63616:JM,63601:JM,62857:JM,75041:JM,75683:JM,75813:JM,75815
75158 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.calc_rmsd(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],int,boolean)::CE,75159:CD,75166:CD,75173:JM,86657:JM,86785:JM,86661:JM,86663:JM,86662:JM,55240:JM,86671:JM,86737:JM,55248:JM,86679:JM,86742:JM,86747:JM,86749:JM,86748:JM,55262:JM,86750:JM,55273:JM,86699:JM,86701:JM,86700:JM,86709:JM,86777:JM,86779:JM,86778:JM,86653:JM,86717:CD,75197:CD,75201:CD,75205:CD,75212:CD,75235:CD,75236:CD,75241:CD,75242
75166 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v9 = p0 $this .getAtoms(p1 $pro1 , p3 $strLen , #(0))::CL,86546
75173 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v12 = p0 $this .getAtoms(p2 $pro2 , p3 $strLen , #(1))::JM,75212:CL,86546
75197 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v19 = v16.getRotation()::JM,75206:CL,86856
75201 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v21 = v16.getTranslation()::JM,75209:CL,86865
75205 :: PRED :: IF :: Z :: if (p4 $storeTransform  == #(0)) goto 90::CF,75212
75206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .r = v19::
75209 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .t = v21::
75212 :: EXPR :: assign :: I :: v22 = v12.length::DD,75235
75222 :: CALL :: call :: V :: rotate(v25, v19)::CL,86928
75230 :: CALL :: call :: V :: shift(v28, v21)::CL,86962
75235 :: PRED :: IF :: Z :: if (v31 < v22) goto 103::CD,75222:CD,75230:CD,75234:CD,75242
75234 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v31 + #(1)::DD,75242
75236 :: CALL :: call :: D :: v33 = getRMS(v9, v12)::JM,75241:CL,87036
75241 :: NORM :: compound :: D :: return v33::DD,75159
75242 :: EXPR :: assign :: null :: PHI v31 = #(0), v30::DD,75234:DD,75235
75291 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,62778:JM,62796:JM,86358:JM,86667:JM,86705:JM,102436:JM,102503:JM,103099:JM,116686
75290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,75291:CD,75301
75294 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
75297 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,75301
75301 :: NORM :: compound :: D :: return v5::CF,75291
75335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFP.setFragLen(int)::JM,75340
75340 :: EXPR :: modify :: I :: p0 $this .fragLen = p1 $fragLen ::
75346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFP.setP1(int)::JM,75351
75351 :: EXPR :: modify :: I :: p0 $this .p1 = p1 $p1 ::
75357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFP.setP2(int)::JM,75362
75362 :: EXPR :: modify :: I :: p0 $this .p2 = p1 $p2 ::
75379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.optimizeSuperposition(org.biojava.nbio.structure.align.model.AFPChain,int,int,int,double,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],int,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CD,75397:CD,75401:CD,75408:CD,75412:CD,75419:CD,75423:CD,75433:CD,75689:CD,75690:CD,75691:CD,75692:CD,75693:CD,75796:CD,75815:CD,75817:CD,75818:CD,75819:CD,75820:CD,75821:CD,75825:CD,75826:JM,75488:JM,75652:JM,75486
75397 :: CALL :: call :: Ljava/lang/Double :: v19 = v17.getORmsdThr()::JM,75820:CL,87102
75401 :: CALL :: call :: D :: v21 = v19.doubleValue()::JM,75820
75408 :: CALL :: call :: Ljava/lang/Double :: v24 = v22.getDistanceIncrement()::JM,75442:CL,87115
75412 :: CALL :: call :: D :: v26 = v24.doubleValue()::JM,75442
75419 :: CALL :: call :: Ljava/lang/Double :: v29 = v27.getMaxOptRMSD()::JM,75683:CL,61556
75423 :: CALL :: call :: D :: v31 = v29.doubleValue()::JM,75683
75427 :: EXPR :: modify :: I :: p0 $this .nAtom = #(0)::
75433 :: CALL :: call :: I :: v34 = v32.getMaxNrIterationsForOptimization()::JM,75702:CL,87128
75439 :: EXPR :: reference :: I :: v47 = p0 $this .nAtom::DD,75819
75438 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v133 + #(1)::DD,75821
75442 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v132 + v26::DD,75480:DD,75820
75449 :: CALL :: call :: V :: p0 $this .rot_mol(p7 $ca1 , v13, p3 $nse2 , v49, v50)::CL,87137
75467 :: CALL :: call :: D :: v55 = p0 $this .getDistanceWithSidechain(v52, v53)::JM,75480:CL,74386
75473 :: EXPR :: reference :: [[D :: v56 = p0 $this .mat::
75476 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v56[v63]::
75481 :: EXPR :: modify :: D :: v57[v60] = v58::
75480 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v48 - v55::DD,75481
75485 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v60 + #(1)::DD,75802:CF,75798
75487 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v63 + #(1)::DD,75806:CF,75803
75486 :: PRED :: IF :: Z :: if (v60 < p3 $nse2 ) goto 121::CD,75467:CD,75480:CD,75485:CD,75798:CD,75799:CD,75800:CD,75801:CD,75802:CF,75487
75488 :: PRED :: IF :: Z :: if (v62 < p2 $nse1 ) goto 113::CD,75486:CD,75487:CD,75798:CD,75799:CD,75800:CD,75801:CD,75802:CD,75803:CD,75804:CD,75805:CD,75806
75492 :: CALL :: call :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v66 = v64.getScoringStrategy()::JM,75498:CL,61488
75496 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v67 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::CF,75498
75498 :: PRED :: IF :: Z :: if (v66 != v67) goto 200::CD,75505
75505 :: CALL :: call :: [[D :: v71 = updateMatrixWithSequenceConservation(v68, p6 $null , p7 $ca1 , v69)::JM,75512:CL,87204
75512 :: EXPR :: modify :: [[D :: p0 $this .mat = v71::
75518 :: CALL :: call :: [[D :: v74 = p0 $this .notifyMatrixListener(v72)::JM,75523:CL,87388
75523 :: EXPR :: modify :: [[D :: p0 $this .mat = v74::
75548 :: CALL :: call :: D :: v86 = p0 $this .dpAlign(p2 $nse1 , p3 $nse2 , v79, v84, #(0), #(0))::CL,87453
75562 :: EXPR :: modify :: I :: p0 $this .nAtom = #(0)::
75566 :: EXPR :: reference :: [I :: v89 = p0 $this .align_se1::
75569 :: EXPR :: reference :: I :: v90 = v89[v107]::DD,75573
75573 :: PRED :: IF :: Z :: if (v90 == #(-1)) goto 336::CD,75581
75574 :: EXPR :: reference :: [I :: v91 = p0 $this .align_se2::
75577 :: EXPR :: reference :: I :: v92 = v91[v107]::DD,75581
75581 :: PRED :: IF :: Z :: if (v92 == #(-1)) goto 336::CD,75621
75618 :: EXPR :: reference :: I :: v101 = p0 $this .nAtom::DD,75621
75621 :: EXPR :: assign :: Ljava/lang/Object :: v102 = v101 + #(1)::DD,75622
75622 :: EXPR :: modify :: I :: p0 $this .nAtom = v102::
75627 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v107 + #(1)::DD,75812:CF,75808
75628 :: EXPR :: reference :: I :: v88 = p0 $this .lcmp::DD,75631
75631 :: PRED :: IF :: Z :: if (v107 < v88) goto 268::CD,75573:CD,75627:CD,75808:CD,75810:CD,75811:CD,75812
75632 :: EXPR :: reference :: I :: v108 = p0 $this .nAtom::DD,75635
75635 :: PRED :: IF :: Z :: if (v108 >= #(4)) goto 368::CD,75640:CD,75651:CD,75652:CD,75653:CD,75654:CD,75655:CD,75683:CD,75684:CD,75689:CD,75690:CD,75691:CD,75692:CD,75693:CD,75813:CD,75814:CD,75815:CD,75817:CD,75818:CD,75819:CD,75820:CD,75821
75640 :: CALL :: call :: D :: v112 = p0 $this .calc_rmsd(p9 $nGaps , p10 $strBuf1 , v110, #(0))::JM,75683:JM,75813:JM,75815:CL,75158
75648 :: EXPR :: reference :: I :: v113 = p0 $this .nAtom::DD,75651
75651 :: EXPR :: assign :: D :: v114 = CONVERT I to D v113::DD,75654:CF,75652
75653 :: EXPR :: assign :: Ljava/lang/Object :: v116 = v115 * #(0.95 d)::CF,75654
75652 :: EXPR :: assign :: D :: v115 = CONVERT I to D p4 $strLen ::DD,75653
75655 :: PRED :: IF :: Z :: if (v117 < #(0)) goto 407::CF,75813:CD,75656:CD,75814
75654 :: EXPR :: assign :: Z :: v117 = v114 > v116::DD,75655
75656 :: PRED :: IF :: Z :: if (v144 != #(0)) goto 407::CF,75813:CD,75814
75683 :: EXPR :: assign :: Z :: v126 = v112 < v31::DD,75684
75684 :: PRED :: IF :: Z :: if (v126 < #(0)) goto 453::CF,75815:CD,75689:CD,75690:CD,75691:CD,75692:CD,75693:CD,75817:CD,75818:CD,75819:CD,75820:CD,75821
75686 :: EXPR :: reference :: I :: v35 = p0 $this .nAtom::DD,75689
75689 :: EXPR :: assign :: D :: v36 = CONVERT I to D v35::DD,75692:CF,75690
75691 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v37 * #(0.95 d)::CF,75692
75690 :: EXPR :: assign :: D :: v37 = CONVERT I to D p4 $strLen ::DD,75691
75693 :: PRED :: IF :: Z :: if (v40 < #(0)) goto 498::CD,75694:CD,75702
75692 :: EXPR :: assign :: Z :: v40 = v36 > v39::DD,75693
75695 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v129 * #(1.1 d)::CF,75696
75694 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 503::CD,75695:CD,75696:CD,75697
75697 :: PRED :: IF :: Z :: if (v43 >= #(0)) goto 503::CD,75701
75696 :: EXPR :: assign :: Z :: v43 = v127 > v42::DD,75697
75698 :: EXPR :: reference :: I :: v44 = p0 $this .nAtom::DD,75701
75701 :: PRED :: IF :: Z :: if (v131 == v44) goto 503::CD,75702
75703 :: EXPR :: modify :: I :: p0 $this .nBestTrace = #(0)::
75702 :: PRED :: IF :: Z :: if (v133 < v34) goto 71::CD,75438:CD,75442:CD,75449:CD,75488:CD,75492:CD,75496:CD,75498:CD,75518:CD,75548:CD,75631:CD,75635:CD,75803:CD,75804:CD,75805:CD,75806:CD,75808:CD,75810:CD,75811:CD,75812
75707 :: EXPR :: reference :: [I :: v153 = p0 $this .align_se1::
75710 :: EXPR :: reference :: I :: v154 = v153[v178]::DD,75714
75715 :: EXPR :: reference :: [I :: v155 = p0 $this .align_se2::
75714 :: PRED :: IF :: Z :: if (v154 == #(-1)) goto 618::CD,75722:CD,75824
75718 :: EXPR :: reference :: I :: v156 = v155[v178]::DD,75722
75723 :: PRED :: IF :: Z :: if (v177 == #(0)) goto 598::CF,75823:CD,75771
75722 :: PRED :: IF :: Z :: if (v156 == #(-1)) goto 618::CD,75723:CD,75781:CD,75786:CD,75823:CD,75824
75724 :: EXPR :: reference :: [I :: v157 = p0 $this .bestTrace1::
75727 :: EXPR :: reference :: I :: v158 = p0 $this .nBestTrace::
75730 :: EXPR :: reference :: [I :: v159 = p0 $this .align_se1::
75733 :: EXPR :: reference :: I :: v160 = v159[v178]::DD,75737
75737 :: EXPR :: modify :: I :: v157[v158] = v160::
75741 :: EXPR :: reference :: [I :: v161 = p0 $this .bestTrace2::
75744 :: EXPR :: reference :: I :: v162 = p0 $this .nBestTrace::
75747 :: EXPR :: reference :: [I :: v163 = p0 $this .align_se2::
75750 :: EXPR :: reference :: I :: v164 = v163[v178]::DD,75754
75754 :: EXPR :: modify :: I :: v161[v162] = v164::
75758 :: EXPR :: reference :: [I :: v165 = p0 $this .bestTraceLen::
75761 :: EXPR :: reference :: I :: v166 = p0 $this .nBestTrace::
75764 :: EXPR :: modify :: I :: v165[v166] = #(0)::
75768 :: EXPR :: reference :: I :: v167 = p0 $this .nBestTrace::DD,75771
75771 :: EXPR :: assign :: Ljava/lang/Object :: v168 = v167 + #(1)::DD,75772
75772 :: EXPR :: modify :: I :: p0 $this .nBestTrace = v168::
75775 :: EXPR :: reference :: [I :: v170 = p0 $this .bestTraceLen::
75778 :: EXPR :: reference :: I :: v171 = p0 $this .nBestTrace::DD,75781
75781 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 - #(1)::
75782 :: EXPR :: reference :: I :: v173 = v170[v172]::DD,75786
75787 :: EXPR :: modify :: I :: v170[v172] = v174::
75786 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v173 + #(1)::DD,75787
75793 :: EXPR :: reference :: I :: v152 = p0 $this .lcmp::DD,75796
75792 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v178 + #(1)::DD,75826:CF,75825
75796 :: PRED :: IF :: Z :: if (v178 < v152) goto 516::CD,75714:CD,75792:CD,75824:CD,75825:CD,75826
75799 :: EXPR :: assign :: null :: PHI v140 = v136, v140::CF,75800:DD,75799:DD,75804
75798 :: EXPR :: assign :: null :: PHI v138 = v134, v138::CF,75799:DD,75798:DD,75803
75801 :: EXPR :: assign :: null :: PHI v63 = v62, v63::CF,75802:DD,75487:DD,75801
75800 :: EXPR :: assign :: null :: PHI v141 = v137, v141::CF,75801:DD,75800:DD,75805
75803 :: EXPR :: assign :: null :: PHI v134 = v127, v138::CF,75804:DD,75798:DD,75808
75802 :: EXPR :: assign :: null :: PHI v60 = #(0), v59::DD,75485:DD,75486
75805 :: EXPR :: assign :: null :: PHI v137 = v130, v141::CF,75806:DD,75800:DD,75811
75804 :: EXPR :: assign :: null :: PHI v136 = v129, v140::CF,75805:DD,75799:DD,75810
75806 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,75488:DD,75801
75808 :: EXPR :: assign :: null :: PHI v142 = v134, v142::DD,75808:DD,75815
75811 :: EXPR :: assign :: null :: PHI v144 = v137, v144::CF,75812:DD,75656:DD,75811:DD,75814:DD,75818
75810 :: EXPR :: assign :: null :: PHI v143 = v136, v143::CF,75811:DD,75810:DD,75813:DD,75817
75813 :: EXPR :: assign :: null :: PHI v118 = v143, v143, v112::CF,75814:DD,75817
75812 :: EXPR :: assign :: null :: PHI v107 = #(0), v105::DD,75627:DD,75631
75815 :: EXPR :: assign :: null :: PHI v127 = p5 $rmsd , v142, v112::DD,75696:DD,75803
75814 :: EXPR :: assign :: null :: PHI v119 = v144, v144, #(1)::DD,75818
75817 :: EXPR :: assign :: null :: PHI v129 = #(0.0 d), v143, v118::CF,75818:DD,75695:DD,75804
75819 :: EXPR :: assign :: null :: PHI v131 = #(-1), v47, v47::CF,75820:DD,75701
75818 :: EXPR :: assign :: null :: PHI v130 = #(0), v144, v119::CF,75819:DD,75694:DD,75805
75821 :: EXPR :: assign :: null :: PHI v133 = #(-1), v46, v46::DD,75438:DD,75702
75820 :: EXPR :: assign :: null :: PHI v132 = v21, v48, v48::CF,75821:DD,75442
75823 :: EXPR :: assign :: null :: PHI v169 = v177, #(0)::DD,75824
75825 :: EXPR :: assign :: null :: PHI v177 = #(1), v175::CF,75826:DD,75723:DD,75823
75824 :: EXPR :: assign :: null :: PHI v175 = v169, #(1)::DD,75825:CF,75792
75826 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,75792:DD,75796
76135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,76136:CD,76140:JM,88790:JM,88793:JM,88796:CD,76146:CD,76165:CD,76166:CD,76170:JM,76163
76136 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,120350:JM,120505
76140 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,76166
76146 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,88809
76152 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
76156 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,76167
76158 :: EXPR :: modify :: D :: v9[v15] = v12::
76163 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,76156:CD,76162:CD,76167:CD,76168:CD,76169:CF,76164
76162 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,76169:CF,76168
76165 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,76163:CD,76164:CD,76168:CD,76169:CD,76170:CF,76166
76164 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,76170
76167 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,76158
76166 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,76136
76169 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,76156:DD,76162:DD,76163
76168 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,76169:DD,76156:DD,76164:DD,76168
76170 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,76165:DD,76168
76223 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getOneLetter(org.biojava.nbio.structure.Group)::CE,76224:CD,76227
76224 :: EXIT :: exit :: C :: org.biojava.nbio.structure.align.ce.CECalculator.getOneLetter(org.biojava.nbio.structure.Group)::JM,64468:JM,64452:JM,64460:JM,64529:JM,64569
76227 :: PRED :: IF :: Z :: if (p1 $g  != #(null)) goto 8::CD,76228:CD,76233:CD,76237:CD,76241
76228 :: NORM :: compound :: C :: return #(88)::DD,76224
76233 :: CALL :: call :: Ljava/lang/Character :: v7 = get1LetterCode(v5)::JM,76241:CL,88848
76237 :: CALL :: call :: C :: v9 = v7.charValue()::JM,76241
76241 :: NORM :: compound :: C :: return v9::DD,76224
76247 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aaScore(char,char)::JM,64481:JM,76696
76246 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aaScore(char,char)::CE,76247:CD,76251:CD,76252:CD,76253:CD,76254:CD,76255:CD,76257:CD,76261:CD,76266:CD,76268:CD,76272:CD,76277:CD,76332:CD,76333:CD,76334:CD,76335
76251 :: PRED :: IF :: Z :: if (p1 $a  != #(120)) goto 12::CF,76332
76253 :: PRED :: IF :: Z :: if (v6 != #(88)) goto 30::CF,76334
76252 :: PRED :: IF :: Z :: if (p2 $b  != #(120)) goto 21::CF,76333
76255 :: EXPR :: reference :: Ljava/util/List :: v11 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1List::JM,76277
76254 :: PRED :: IF :: Z :: if (v7 != #(88)) goto 36::CF,76335
76257 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(v9)::JM,76277
76261 :: CALL :: call :: I :: v15 = v11.indexOf(v13)::JM,76277
76266 :: EXPR :: reference :: Ljava/util/List :: v16 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1List::JM,76299
76268 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(v10)::JM,76299
76272 :: CALL :: call :: I :: v20 = v16.indexOf(v18)::JM,76299
76277 :: PRED :: IF :: Z :: if (v15 >= #(0)) goto 94::CD,76280:CD,76285:CD,76290:CD,76298:CD,76299
76280 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
76285 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(v9)::
76290 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
76299 :: PRED :: IF :: Z :: if (v20 >= #(0)) goto 124::CD,76302:CD,76307:CD,76312:CD,76320:CD,76321:CD,76331
76298 :: NORM :: compound :: I :: return #(0)::DD,76247
76302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
76307 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v10)::
76312 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
76321 :: EXPR :: reference :: [[I :: v22 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aaMatrix::
76320 :: NORM :: compound :: I :: return #(0)::DD,76247
76323 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v15]::
76327 :: EXPR :: reference :: I :: v24 = v23[v20]::DD,76331
76331 :: NORM :: compound :: I :: return v24::DD,76247
76333 :: EXPR :: assign :: null :: PHI v7 = p2 $b , #(45)::DD,76254:DD,76335:CF,76253
76332 :: EXPR :: assign :: null :: PHI v6 = p1 $a , #(45)::DD,76253:DD,76334:CF,76252
76335 :: EXPR :: assign :: null :: PHI v10 = v7, #(45)::JM,76299
76334 :: EXPR :: assign :: null :: PHI v9 = v6, #(45)::JM,76277:CF,76254
76425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.getAlign(org.biojava.nbio.structure.align.model.AFPChain,org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],boolean)::CD,76432:CD,76436:CD,76440:CD,76444:CD,76445:CD,76446:CD,76468:CD,76472:CD,76476:CD,76492:CD,76743:CD,76770:CD,76771:CD,76772:CD,76774:CD,76804:CD,76805:CD,76806:CD,76809:JM,76624:JM,76667:JM,76622
76432 :: CALL :: call :: [C :: v7 = p1 $afpChain .getAlnsymb()::JM,76770:JM,76446:CL,77842
76436 :: CALL :: call :: [C :: v9 = p1 $afpChain .getAlnseq1()::JM,76771:CL,68648
76440 :: CALL :: call :: [C :: v11 = p1 $afpChain .getAlnseq2()::JM,76772:CL,68657
76445 :: EXPR :: assign :: I :: v13 = p3 $ca2 .length::DD,76447:DD,76450:DD,76453:CF,76446
76444 :: EXPR :: assign :: I :: v12 = p2 $ca1 .length::DD,76447:DD,76450:DD,76453:CF,76445
76447 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v12 + v13::DD,76448
76446 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 89::CF,76770:CD,76447:CD,76448:CD,76449:CD,76450:CD,76451:CD,76452:CD,76453:CD,76454:CD,76455
76449 :: NORM :: declaration :: [C :: v19 = new []::DD,76771:CF,76450
76448 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v16 + #(1)::CF,76449
76451 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 + #(1)::CF,76452
76450 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v12 + v13::DD,76451
76453 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v12 + v13::DD,76454
76452 :: NORM :: declaration :: [C :: v22 = new []::DD,76772:CF,76453
76455 :: NORM :: declaration :: [C :: v25 = new []::DD,76770
76454 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v23 + #(1)::CF,76455
76468 :: CALL :: call :: I :: v33 = p1 $afpChain .getBlockNum()::JM,76500:JM,76743:JM,76493:CL,65842
76472 :: CALL :: call :: [I :: v35 = p1 $afpChain .getOptLen()::JM,76774:JM,76492:CL,77665
76476 :: CALL :: call :: [[[I :: v37 = p1 $afpChain .getOptAln()::CL,77695
76493 :: NORM :: declaration :: [I :: v44 = new []::DD,76774
76492 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 163::CF,76774:CD,76493:CD,76500:CD,76773
76495 :: EXPR :: modify :: I :: v44[v46] = #(0)::
76499 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v46 + #(1)::DD,76773
76500 :: PRED :: IF :: Z :: if (v46 < v33) goto 146::CF,76774:CD,76499:CD,76773
76503 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v37[v168]::
76507 :: EXPR :: reference :: Ljava/lang/Object :: v50 = v49[#(0)]::
76511 :: EXPR :: reference :: I :: v51 = v50[v146]::DD,76527:DD,76551:DD,76556:DD,76562:DD,76623:DD,76792
76515 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v37[v168]::
76519 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v52[#(1)]::
76523 :: EXPR :: reference :: I :: v54 = v53[v146]::DD,76528:DD,76553:DD,76559:DD,76588:DD,76625:DD,76793
76527 :: PRED :: IF :: Z :: if (v51 == #(-1)) goto 208::CD,76528:CD,76531:CD,76536:CD,76541:CD,76790:CD,76791:CD,76792:CD,76793:CD,76796
76528 :: PRED :: IF :: Z :: if (v54 != #(-1)) goto 238::CD,76531:CD,76536:CD,76541:CD,76550:CD,76622:CD,76623:CD,76667:CD,76784:CD,76785:CD,76788:CD,76789:CD,76790:CD,76791:CD,76792:CD,76793:CD,76796
76531 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v57 = new java.lang.StringBuilder::
76536 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v57.append(v146)::
76541 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
76551 :: EXPR :: assign :: Ljava/lang/Object :: v65 = v51 - v147::DD,76552
76550 :: PRED :: IF :: Z :: if (v151 <= #(0)) goto 413::CD,76551:CD,76552:CD,76553:CD,76554:CD,76555:CD,76620:CD,76775:CD,76776:CD,76777:CD,76778:CD,76779:CD,76780:CD,76783:CD,76784:CD,76785:CD,76788
76553 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v54 - v148::DD,76554
76552 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v65 - #(1)::DD,76555:CF,76553
76555 :: PRED :: IF :: Z :: if (v66 <= v68) goto 272::CD,76556:CD,76557:CD,76559:CD,76560:CD,76775
76554 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v67 - #(1)::CF,76555
76557 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v69 - #(1)::DD,76775
76556 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v51 - v147::DD,76557
76559 :: EXPR :: assign :: Ljava/lang/Object :: v71 = v54 - v148::DD,76560
76560 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v71 - #(1)::CF,76775
76563 :: EXPR :: assign :: Ljava/lang/Object :: v75 = v74 - #(1)::CF,76564
76562 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v51 - v153::DD,76563
76565 :: EXPR :: modify :: C :: v30[v97] = #(45)::
76564 :: PRED :: IF :: Z :: if (v96 < v75) goto 309::CD,76580
76580 :: CALL :: call :: C :: v83 = getOneLetter(v81)::JM,76584:CL,88917
76584 :: EXPR :: modify :: C :: v30[v97] = v83::
76589 :: EXPR :: assign :: Ljava/lang/Object :: v85 = v84 - #(1)::CF,76590
76588 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v54 - v154::DD,76589
76591 :: EXPR :: modify :: C :: v31[v97] = #(45)::
76590 :: PRED :: IF :: Z :: if (v96 < v85) goto 357::CD,76606
76606 :: CALL :: call :: C :: v92 = getOneLetter(v90)::JM,76610:CL,88917
76610 :: EXPR :: modify :: C :: v31[v97] = v92::
76615 :: EXPR :: modify :: C :: v29[v97] = #(32)::
76614 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v97 + #(1)::DD,76783
76619 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v96 + #(1)::DD,76778:CF,76776
76620 :: PRED :: IF :: Z :: if (v96 < v73) goto 289::CD,76562:CD,76563:CD,76564:CD,76588:CD,76589:CD,76590:CD,76614:CD,76619:CD,76776:CD,76777:CD,76778:CD,76779:CD,76780:CD,76783
76623 :: PRED :: IF :: Z :: if (v51 >= v101) goto 467::CD,76624:CD,76625
76622 :: EXPR :: assign :: I :: v101 = p2 $ca1 .length::CF,76623
76625 :: PRED :: IF :: Z :: if (v54 >= v102) goto 467::CD,76634:CD,76650
76624 :: EXPR :: assign :: I :: v102 = p3 $ca2 .length::CF,76625
76634 :: CALL :: call :: C :: v107 = getOneLetter(v105)::JM,76638:CL,88917
76638 :: EXPR :: modify :: C :: v30[v100] = v107::
76650 :: CALL :: call :: C :: v112 = getOneLetter(v110)::JM,76654:CL,88917
76654 :: EXPR :: modify :: C :: v31[v100] = v112::
76659 :: EXPR :: modify :: C :: v30[v100] = #(63)::
76663 :: EXPR :: modify :: C :: v31[v100] = #(63)::
76667 :: PRED :: IF :: Z :: if (p4 $showSeq  == #(0)) goto 557::CD,76676:CD,76712:CD,76713:CD,76721:CD,76726:CD,76727:CD,76789
76668 :: EXPR :: reference :: C :: v114 = v30[v100]::DD,76676
76672 :: EXPR :: reference :: C :: v115 = v31[v100]::DD,76676
76677 :: EXPR :: assign :: Ljava/lang/Object :: v116 = v100 + #(1)::DD,76789
76676 :: PRED :: IF :: Z :: if (v114 != v115) goto 509::CD,76677:CD,76691:CD,76696:CD,76697:CD,76698:CD,76789
76678 :: EXPR :: modify :: C :: v29[v100] = #(124)::
76691 :: CALL :: call :: I :: v121 = aaScore(v118, v119)::JM,76696:CL,76246
76697 :: EXPR :: assign :: Z :: v124 = v122 < #(1.0 d)::DD,76698
76696 :: EXPR :: assign :: D :: v122 = CONVERT I to D v121::DD,76697
76699 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v100 + #(1)::DD,76789
76698 :: PRED :: IF :: Z :: if (v124 <= #(0)) goto 545::CD,76699:CD,76705:CD,76789
76700 :: EXPR :: modify :: C :: v29[v100] = #(58)::
76705 :: EXPR :: assign :: Ljava/lang/Object :: v127 = v100 + #(1)::DD,76789
76706 :: EXPR :: modify :: C :: v29[v100] = #(46)::
76713 :: CALL :: call :: Ljava/lang/Integer :: v133 = valueOf(v131)::
76712 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v170 + #(1)::
76721 :: CALL :: call :: Ljava/lang/String :: v135 = format(#(%d), v130)::JM,76732
76727 :: CALL :: call :: C :: v138 = v135.charAt(#(0))::JM,76732
76726 :: EXPR :: assign :: Ljava/lang/Object :: v136 = v100 + #(1)::DD,76789:JM,76732
76732 :: EXPR :: modify :: C :: v29[v100] = v138::
76737 :: EXPR :: reference :: I :: v48 = v47[v168]::DD,76741
76736 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v160 + #(1)::DD,76798:CF,76797
76741 :: PRED :: IF :: Z :: if (v146 < v48) goto 176::CD,76527:CD,76736:CD,76790:CD,76791:CD,76792:CD,76793:CD,76796:CD,76797:CD,76798:CD,76799:CD,76800:CD,76803:CF,76742
76743 :: PRED :: IF :: Z :: if (v162 < v33) goto 169::CD,76741:CD,76742:CD,76797:CD,76798:CD,76799:CD,76800:CD,76803:CD,76804:CD,76805:CD,76806:CD,76809
76742 :: EXPR :: assign :: Ljava/lang/Object :: v161 = v168 + #(1)::DD,76804
76771 :: EXPR :: assign :: null :: PHI v30 = v9, v19::CF,76772
76770 :: EXPR :: assign :: null :: PHI v29 = v7, v25::CF,76771
76773 :: EXPR :: assign :: null :: PHI v46 = #(0), v45::DD,76499:DD,76500
76772 :: EXPR :: assign :: null :: PHI v31 = v11, v22::
76775 :: EXPR :: assign :: null :: PHI v73 = v70, v72::DD,76620
76774 :: EXPR :: assign :: null :: PHI v47 = v35, v44::
76777 :: EXPR :: assign :: null :: PHI v152 = v146, v152::CF,76778:DD,76777:DD,76785
76776 :: EXPR :: assign :: null :: PHI v169 = v168, v169::CF,76777:DD,76776:DD,76784
76779 :: EXPR :: assign :: null :: PHI v153 = v147, v153::CF,76780:DD,76562:DD,76779
76778 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,76779:DD,76564:DD,76590:DD,76619:DD,76620
76780 :: EXPR :: assign :: null :: PHI v154 = v148, v154::DD,76588:DD,76780
76783 :: EXPR :: assign :: null :: PHI v97 = v151, v93::DD,76614:DD,76788:CF,76620
76785 :: EXPR :: assign :: null :: PHI v157 = v152, v146::DD,76791
76784 :: EXPR :: assign :: null :: PHI v170 = v169, v168::CF,76785:DD,76712:DD,76790
76789 :: EXPR :: assign :: null :: PHI v139 = v116, v125, v127, v136::DD,76796:CF,76790
76788 :: EXPR :: assign :: null :: PHI v100 = v97, v151::DD,76677:DD,76699:DD,76705:DD,76726:CF,76622
76791 :: EXPR :: assign :: null :: PHI v160 = v146, v157::CF,76792:DD,76736
76790 :: EXPR :: assign :: null :: PHI v171 = v168, v170::CF,76791:DD,76797
76793 :: EXPR :: assign :: null :: PHI v141 = v148, v54::DD,76800
76792 :: EXPR :: assign :: null :: PHI v140 = v147, v51::CF,76793:DD,76799
76797 :: EXPR :: assign :: null :: PHI v168 = v162, v171::CF,76798:DD,76742:DD,76776:DD,76784:DD,76790
76796 :: EXPR :: assign :: null :: PHI v144 = v151, v139::DD,76803:CF,76736
76799 :: EXPR :: assign :: null :: PHI v147 = v163, v140::CF,76800:DD,76551:DD,76556:DD,76779:DD,76792:DD,76805
76798 :: EXPR :: assign :: null :: PHI v146 = #(0), v145::CF,76799:DD,76741:DD,76777:DD,76785:DD,76791
76800 :: EXPR :: assign :: null :: PHI v148 = v164, v141::DD,76553:DD,76559:DD,76780:DD,76793:DD,76806
76803 :: EXPR :: assign :: null :: PHI v151 = v167, v144::DD,76550:DD,76783:DD,76788:DD,76796:DD,76809
76805 :: EXPR :: assign :: null :: PHI v163 = #(0), v147::CF,76806:DD,76799
76804 :: EXPR :: assign :: null :: PHI v162 = #(0), v161::CF,76805:DD,76743:DD,76797
76806 :: EXPR :: assign :: null :: PHI v164 = #(0), v148::DD,76800
76809 :: EXPR :: assign :: null :: PHI v167 = #(0), v151::DD,76803:CF,76743
77089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getTotalLenIni()::CE,77090:CD,77096
77090 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getTotalLenIni()::
77093 :: EXPR :: reference :: I :: v3 = p0 $this .totalLenIni::DD,77096
77096 :: NORM :: compound :: I :: return v3::CF,77090
77099 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getAlignScore()::JM,65288:JM,78715
77098 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlignScore()::CE,77099:CD,77105
77102 :: EXPR :: reference :: D :: v3 = p0 $this .alignScore::DD,77105
77105 :: NORM :: compound :: D :: return v3::CF,77099
77107 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getChainRmsd()::CE,77108:CD,77114
77108 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getChainRmsd()::JM,65315
77111 :: EXPR :: reference :: D :: v3 = p0 $this .chainRmsd::DD,77114
77114 :: NORM :: compound :: D :: return v3::CF,77108
77117 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getNormAlignScore()::JM,65369
77116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getNormAlignScore()::CE,77117:CD,77123
77120 :: EXPR :: reference :: D :: v3 = p0 $this .normAlignScore::DD,77123
77123 :: NORM :: compound :: D :: return v3::CF,77117
77125 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getCoverage1()::CE,77126:CD,77132:CD,77172
77126 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getCoverage1()::
77129 :: EXPR :: reference :: I :: v3 = p0 $this .myResultsSimilarity1::DD,77132
77133 :: EXPR :: reference :: I :: v5 = p0 $this .ca1Length::DD,77139
77132 :: PRED :: IF :: Z :: if (v3 >= #(0)) goto 58::CD,77139:CD,77140:CD,77144:CD,77145:CD,77152:CD,77153:CD,77154:CD,77155:CD,77159:CD,77160:CD,77161:CD,77162
77136 :: EXPR :: reference :: I :: v6 = p0 $this .ca2Length::DD,77139
77139 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 + v6::DD,77145
77140 :: CALL :: call :: I :: v10 = p0 $this .getNrEQR()::JM,77144:CL,54993
77145 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v7 - v11::DD,77153
77144 :: EXPR :: assign :: Ljava/lang/Object :: v11 = #(2) * v10::CF,77145
77146 :: EXPR :: reference :: I :: v13 = p0 $this .ca1Length::DD,77152
77149 :: EXPR :: reference :: I :: v14 = p0 $this .ca2Length::DD,77152
77153 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 - v12::DD,77154
77152 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 + v14::DD,77153
77155 :: EXPR :: assign :: F :: v18 = CONVERT I to F v17::DD,77160
77154 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v16 / #(2)::DD,77155
77156 :: EXPR :: reference :: I :: v19 = p0 $this .ca1Length::DD,77159
77159 :: EXPR :: assign :: F :: v20 = CONVERT I to F v19::CF,77160
77161 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 * #(100.0 f)::JM,77162:JM,77166
77160 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v18 / v20::DD,77161
77162 :: CALL :: call :: I :: v25 = round(v23)::JM,77162:JM,77166
77166 :: EXPR :: modify :: I :: p0 $this .myResultsSimilarity1 = v25::
77169 :: EXPR :: reference :: I :: v26 = p0 $this .myResultsSimilarity1::DD,77172
77172 :: NORM :: compound :: I :: return v26::DD,77126
77191 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getCoverage2()::
77190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getCoverage2()::CE,77191:CD,77197:CD,77237
77194 :: EXPR :: reference :: I :: v3 = p0 $this .myResultsSimilarity2::DD,77197
77197 :: PRED :: IF :: Z :: if (v3 >= #(0)) goto 58::CD,77204:CD,77205:CD,77209:CD,77210:CD,77217:CD,77218:CD,77219:CD,77220:CD,77224:CD,77225:CD,77226:CD,77227
77198 :: EXPR :: reference :: I :: v5 = p0 $this .ca1Length::DD,77204
77201 :: EXPR :: reference :: I :: v6 = p0 $this .ca2Length::DD,77204
77205 :: CALL :: call :: I :: v10 = p0 $this .getNrEQR()::JM,77209:CL,54993
77204 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 + v6::DD,77210
77209 :: EXPR :: assign :: Ljava/lang/Object :: v11 = #(2) * v10::CF,77210
77211 :: EXPR :: reference :: I :: v13 = p0 $this .ca1Length::DD,77217
77210 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v7 - v11::DD,77218
77214 :: EXPR :: reference :: I :: v14 = p0 $this .ca2Length::DD,77217
77217 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 + v14::DD,77218
77219 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v16 / #(2)::DD,77220
77218 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 - v12::DD,77219
77221 :: EXPR :: reference :: I :: v19 = p0 $this .ca2Length::DD,77224
77220 :: EXPR :: assign :: F :: v18 = CONVERT I to F v17::DD,77225
77225 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v18 / v20::DD,77226
77224 :: EXPR :: assign :: F :: v20 = CONVERT I to F v19::CF,77225
77227 :: CALL :: call :: I :: v25 = round(v23)::JM,77227:JM,77231
77226 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 * #(100.0 f)::JM,77227:JM,77231
77231 :: EXPR :: modify :: I :: p0 $this .myResultsSimilarity2 = v25::
77234 :: EXPR :: reference :: I :: v26 = p0 $this .myResultsSimilarity2::DD,77237
77237 :: NORM :: compound :: I :: return v26::DD,77191
77255 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getTotalRmsdIni()::CE,77256:CD,77262
77256 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getTotalRmsdIni()::JM,65494
77259 :: EXPR :: reference :: D :: v3 = p0 $this .totalRmsdIni::DD,77262
77262 :: NORM :: compound :: D :: return v3::CF,77256
77265 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getCa1Length()::
77264 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getCa1Length()::CE,77265:CD,77271
77268 :: EXPR :: reference :: I :: v3 = p0 $this .ca1Length::DD,77271
77271 :: NORM :: compound :: I :: return v3::CF,77265
77273 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getCa2Length()::CE,77274:CD,77280
77274 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.model.AFPChain.getCa2Length()::
77277 :: EXPR :: reference :: I :: v3 = p0 $this .ca2Length::DD,77280
77280 :: NORM :: compound :: I :: return v3::CF,77274
77283 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.model.AFPChain.getAfpSet()::
77282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAfpSet()::CE,77283:CD,77289
77286 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .afpSet::DD,77289
77289 :: NORM :: compound :: Ljava/util/List :: return v3::CF,77283
77291 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlignScoreUpdate()::CE,77292:CD,77298
77292 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getAlignScoreUpdate()::JM,65618
77295 :: EXPR :: reference :: D :: v3 = p0 $this .alignScoreUpdate::DD,77298
77298 :: NORM :: compound :: D :: return v3::CF,77292
77301 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.model.AFPChain.getTMScore()::JM,65667
77300 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getTMScore()::CE,77301:CD,77307
77304 :: EXPR :: reference :: D :: v3 = p0 $this .tmScore::DD,77307
77307 :: NORM :: compound :: D :: return v3::CF,77301
77629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockSize()::CE,77630:CD,77636
77630 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.model.AFPChain.getBlockSize()::
77633 :: EXPR :: reference :: [I :: v3 = p0 $this .blockSize::DD,77636
77636 :: NORM :: compound :: [I :: return v3::CF,77630
77639 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.model.AFPChain.getBlockGap()::
77638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockGap()::CE,77639:CD,77645
77642 :: EXPR :: reference :: [I :: v3 = p0 $this .blockGap::DD,77645
77645 :: NORM :: compound :: [I :: return v3::CF,77639
77647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockScore()::CE,77648:CD,77654
77648 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.align.model.AFPChain.getBlockScore()::
77651 :: EXPR :: reference :: [D :: v3 = p0 $this .blockScore::DD,77654
77654 :: NORM :: compound :: [D :: return v3::CF,77648
77657 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.align.model.AFPChain.getBlockRmsd()::
77656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockRmsd()::CE,77657:CD,77663
77660 :: EXPR :: reference :: [D :: v3 = p0 $this .blockRmsd::DD,77663
77663 :: NORM :: compound :: [D :: return v3::CF,77657
77665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getOptLen()::CE,77666:CD,77672
77666 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.model.AFPChain.getOptLen()::JM,66229:JM,76774:JM,76492
77669 :: EXPR :: reference :: [I :: v3 = p0 $this .optLen::DD,77672
77672 :: NORM :: compound :: [I :: return v3::CF,77666
77695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getOptAln()::CE,77696:CD,77702
77696 :: EXIT :: exit :: [[[I :: org.biojava.nbio.structure.align.model.AFPChain.getOptAln()::
77699 :: EXPR :: reference :: [[[I :: v3 = p0 $this .optAln::DD,77702
77702 :: NORM :: compound :: [[[I :: return v3::CF,77696
77705 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,101459:JM,101479:JM,102025:JM,112335:JM,112395:JM,141522
77704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,77705:CD,77708:CD,77715:CD,77719:CD,77727:CD,77748:CD,77752
77708 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,77752
77715 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
77719 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
77724 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,77727
77727 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,77731:CD,77735:JM,77752
77728 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,77735
77731 :: CALL :: call :: C :: v14 = v12.charValue()::JM,77735
77735 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,77739:CD,77743:JM,77752
77736 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
77739 :: CALL :: call :: C :: v18 = v16.charValue()::
77743 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
77748 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,77752
77752 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,77705
77767 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,86025:JM,86123:JM,91192:JM,91229:JM,101357:JM,105779:JM,112303:JM,112363:JM,123532:JM,127385:JM,127604:JM,141315:JM,144786:JM,144837:JM,147973:JM,147978:JM,148014
77766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,77767:CD,77773
77770 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,77773
77773 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,77767
77775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getBlockRotationMatrix()::CE,77776:CD,77782
77776 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.align.model.AFPChain.getBlockRotationMatrix()::JM,66435:JM,66436
77779 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/jama/Matrix :: v3 = p0 $this .blockRotationMatrix::DD,77782
77782 :: NORM :: compound :: [Lorg/biojava/nbio/structure/jama/Matrix :: return v3::CF,77776
77785 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Matrix.get(int,int)::JM,66479
77784 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.get(int,int)::CE,77785:CD,77801
77790 :: EXPR :: reference :: [[D :: v5 = p0 $this .A::
77793 :: EXPR :: reference :: Ljava/lang/Object :: v6 = v5[p1 $i ]::
77797 :: EXPR :: reference :: D :: v7 = v6[p2 $j ]::DD,77801
77801 :: NORM :: compound :: D :: return v7::CF,77785
77815 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,86367:JM,86675:JM,86713:JM,102445:JM,102516:JM,103103:JM,116695
77814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,77815:CD,77825
77818 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
77821 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,77825
77825 :: NORM :: compound :: D :: return v5::CF,77815
77829 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,86376:JM,86683:JM,86721:JM,102455:JM,102529:JM,103107:JM,116704
77828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,77829:CD,77839
77832 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
77835 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,77839
77839 :: NORM :: compound :: D :: return v5::CF,77829
77843 :: EXIT :: exit :: [C :: org.biojava.nbio.structure.align.model.AFPChain.getAlnsymb()::JM,76770:JM,76446
77842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getAlnsymb()::CE,77843:CD,77849
77846 :: EXPR :: reference :: [C :: v3 = p0 $this .alnsymb::DD,77849
77849 :: NORM :: compound :: [C :: return v3::CF,77843
78459 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.calcIdSimilarity([],[],int)::CD,78465:JM,78466:JM,78556
78465 :: PRED :: IF :: Z :: if (p1 $seq1  == #(null)) goto 13::CD,78466:CD,78473:CD,78481:CD,78491
78466 :: PRED :: IF :: Z :: if (p2 $seq2  != #(null)) goto 70::CD,78473:CD,78481:CD,78491:CD,78556:CD,78563:CD,78571:CD,78581:CD,78592
78473 :: NORM :: declaration :: Ljava/util/HashMap :: v55 = new java.util.HashMap::
78481 :: CALL :: call :: Ljava/lang/Object :: v60 = v55.put(#(similarity), v58)::
78491 :: CALL :: call :: Ljava/lang/Object :: v64 = v55.put(#(identity), v62)::
78499 :: EXPR :: reference :: C :: v8 = p1 $seq1 [v32]::DD,78507
78503 :: EXPR :: reference :: C :: v9 = p2 $seq2 [v32]::DD,78507
78507 :: PRED :: IF :: Z :: if (v8 != v9) goto 94::CD,78514
78510 :: EXPR :: reference :: C :: v10 = p1 $seq1 [v32]::DD,78514
78515 :: EXPR :: reference :: C :: v12 = p1 $seq1 [v32]::DD,78519
78514 :: PRED :: IF :: Z :: if (v10 == #(45)) goto 165::CD,78519
78519 :: PRED :: IF :: Z :: if (v12 == #(42)) goto 165::CD,78524
78520 :: EXPR :: reference :: C :: v14 = p1 $seq1 [v32]::DD,78524
78525 :: EXPR :: reference :: C :: v16 = p2 $seq2 [v32]::DD,78529
78524 :: PRED :: IF :: Z :: if (v14 == #(46)) goto 165::CD,78529
78529 :: PRED :: IF :: Z :: if (v16 == #(45)) goto 165::CD,78534
78530 :: EXPR :: reference :: C :: v17 = p2 $seq2 [v32]::DD,78534
78535 :: EXPR :: reference :: C :: v18 = p2 $seq2 [v32]::DD,78539
78534 :: PRED :: IF :: Z :: if (v17 == #(42)) goto 165::CD,78539
78539 :: PRED :: IF :: Z :: if (v18 == #(46)) goto 165::CD,78548
78548 :: CALL :: call :: I :: v22 = aaScore(v19, v20)::CL,76246
78555 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v32 + #(1)::DD,78592
78556 :: PRED :: IF :: Z :: if (v32 < p3 $alnLength ) goto 76::CD,78507:CD,78555:CD,78592
78563 :: NORM :: declaration :: Ljava/util/HashMap :: v40 = new java.util.HashMap::
78571 :: CALL :: call :: Ljava/lang/Object :: v46 = v40.put(#(similarity), v44)::
78581 :: CALL :: call :: Ljava/lang/Object :: v51 = v40.put(#(identity), v49)::
78592 :: EXPR :: assign :: null :: PHI v32 = #(0), v29::DD,78555:DD,78556
78675 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AfpChainWriter.toDBSearchResult(org.biojava.nbio.structure.align.model.AFPChain)::JM,69268
78674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AfpChainWriter.toDBSearchResult(org.biojava.nbio.structure.align.model.AFPChain)::CE,78675:CD,78678:CD,78682:CD,78686:CD,78691:CD,78696:CD,78700:CD,78705:CD,78711:CD,78715:CD,78723:CD,78728:CD,78733:CD,78738:CD,78742:CD,78747:CD,78795:CD,78801:CD,78805:CD,78813:CD,78818:CD,78823:CD,78828:CD,78832:CD,78837:CD,78842:CD,78846:CD,78851:CD,78856:CD,78860:CD,78865:CD,78870:CD,78874:CD,78879:CD,78885:CD,78889:CD,78897:CD,78902:CD,78907:CD,78912:CD,78916:CD,78921:CD,78926:CD,78928:CD,78933:CD,78937
78678 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::JM,78937
78682 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $afpChain .getName1()::CL,55588
78686 :: CALL :: call :: Ljava/lang/StringBuffer :: v8 = v3.append(v6)::
78691 :: CALL :: call :: Ljava/lang/StringBuffer :: v11 = v3.append(#(	))::
78696 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $afpChain .getName2()::CL,55597
78700 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = v3.append(v13)::
78705 :: CALL :: call :: Ljava/lang/StringBuffer :: v17 = v3.append(#(	))::
78711 :: CALL :: call :: D :: v23 = p1 $afpChain .getAlignScore()::JM,78715:CL,77098
78715 :: CALL :: call :: Ljava/lang/Double :: v25 = valueOf(v23)::JM,78715
78723 :: CALL :: call :: Ljava/lang/String :: v27 = format(#(%.2f), v20)::
78728 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v3.append(v27)::
78733 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v3.append(#(	))::
78738 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $afpChain .getAlgorithmName()::JM,78747:CL,55570
78742 :: CALL :: call :: Z :: v36 = v33.equalsIgnoreCase(#(jCE))::JM,78747
78747 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 119::CD,78749:CD,78753:CD,78761:CD,78766:CD,78773:CD,78777:CD,78785:CD,78790
78749 :: CALL :: call :: D :: v49 = p1 $afpChain .getProbability()::JM,78753:CL,68621
78753 :: CALL :: call :: Ljava/lang/Double :: v51 = valueOf(v49)::JM,78753
78761 :: CALL :: call :: Ljava/lang/String :: v53 = format(#(%.2f), v47)::
78766 :: CALL :: call :: Ljava/lang/StringBuffer :: v55 = v3.append(v53)::
78773 :: CALL :: call :: D :: v40 = p1 $afpChain .getProbability()::JM,78777:CL,68621
78777 :: CALL :: call :: Ljava/lang/Double :: v42 = valueOf(v40)::JM,78777
78785 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(%.2e), v38)::
78790 :: CALL :: call :: Ljava/lang/StringBuffer :: v46 = v3.append(v44)::
78795 :: CALL :: call :: Ljava/lang/StringBuffer :: v57 = v3.append(#(	))::
78801 :: CALL :: call :: D :: v60 = p1 $afpChain .getTotalRmsdOpt()::JM,78805:CL,68496
78805 :: CALL :: call :: Ljava/lang/Double :: v62 = valueOf(v60)::JM,78805
78813 :: CALL :: call :: Ljava/lang/String :: v64 = format(#(%.2f), v58)::
78818 :: CALL :: call :: Ljava/lang/StringBuffer :: v66 = v3.append(v64)::
78823 :: CALL :: call :: Ljava/lang/StringBuffer :: v68 = v3.append(#(	))::
78828 :: CALL :: call :: I :: v70 = p1 $afpChain .getCa1Length()::CL,77264
78832 :: CALL :: call :: Ljava/lang/StringBuffer :: v72 = v3.append(v70)::
78837 :: CALL :: call :: Ljava/lang/StringBuffer :: v74 = v3.append(#(	))::
78842 :: CALL :: call :: I :: v76 = p1 $afpChain .getCa2Length()::CL,77273
78846 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v3.append(v76)::
78851 :: CALL :: call :: Ljava/lang/StringBuffer :: v80 = v3.append(#(	))::
78856 :: CALL :: call :: I :: v82 = p1 $afpChain .getCoverage1()::CL,77125
78860 :: CALL :: call :: Ljava/lang/StringBuffer :: v84 = v3.append(v82)::
78865 :: CALL :: call :: Ljava/lang/StringBuffer :: v86 = v3.append(#(	))::
78870 :: CALL :: call :: I :: v88 = p1 $afpChain .getCoverage2()::CL,77190
78874 :: CALL :: call :: Ljava/lang/StringBuffer :: v90 = v3.append(v88)::
78879 :: CALL :: call :: Ljava/lang/StringBuffer :: v92 = v3.append(#(	))::
78885 :: CALL :: call :: D :: v95 = p1 $afpChain .getIdentity()::JM,78889:CL,68544
78889 :: CALL :: call :: Ljava/lang/Double :: v97 = valueOf(v95)::JM,78889
78897 :: CALL :: call :: Ljava/lang/String :: v99 = format(#(%.2f), v93)::
78902 :: CALL :: call :: Ljava/lang/StringBuffer :: v101 = v3.append(v99)::
78907 :: CALL :: call :: Ljava/lang/StringBuffer :: v103 = v3.append(#(	))::
78912 :: CALL :: call :: Ljava/lang/String :: v105 = p1 $afpChain .getDescription2()::CL,88957
78916 :: CALL :: call :: Ljava/lang/StringBuffer :: v107 = v3.append(v105)::
78921 :: CALL :: call :: Ljava/lang/StringBuffer :: v109 = v3.append(#(	))::
78926 :: EXPR :: reference :: Ljava/lang/String :: v110 = org.biojava.nbio.structure.align.model.AfpChainWriter.newline::
78928 :: CALL :: call :: Ljava/lang/StringBuffer :: v112 = v3.append(v110)::
78933 :: CALL :: call :: Ljava/lang/String :: v114 = v3.toString()::JM,78937
78937 :: NORM :: compound :: Ljava/lang/String :: return v114::DD,78675
79139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,79140:CD,79143:CD,79144:CD,79153:CD,79170:CD,79174:CD,79218:CD,79222
79140 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,79923:JM,79919:JM,89783:JM,126811:JM,126815
79143 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,79174:CF,79144
79144 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
79153 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,79222
79158 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,79174
79163 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
79165 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
79170 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,79174
79174 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,79158:CD,79163:CD,79165:CD,79170
79218 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,79222
79222 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,79140
79747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,79748:CD,79752:CD,79765:CD,79769:CD,79774:CD,79775:CD,79779:CD,79802:CD,79803:CD,79808:CD,79813:CD,79818:CD,79835
79748 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,98418:JM,98517:JM,113569:JM,113580:JM,113596
79752 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,89551
79765 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
79769 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,79774
79775 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,79780:DD,79833
79774 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,79779:JM,79832:CF,79775
79779 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,79780:CD,79781:CD,79828:CD,79832:CD,79833
79781 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,79832
79780 :: NORM :: compound :: Ljava/util/List :: return v14::DD,79748
79786 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,79832
79791 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,79795:CL,89603
79795 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
79796 :: CALL :: call :: Z :: v29 = v14.add(v27)::
79803 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
79802 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
79808 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
79813 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
79818 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
79828 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,79832
79833 :: NORM :: compound :: Ljava/util/List :: return v14::DD,79748
79832 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,79786:CD,79791:CD,79795:CD,79796:CD,79828:JM,79832:CF,79833
79835 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
79857 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,79858:CD,79863:CD,79867:CD,79875:CD,79880:CD,79885:CD,79890:CD,79894:CD,79899:CD,79907:CD,79911:CD,79915:CD,79919:CD,79923:CD,79933:CD,79934:CD,79942:CD,79947:CD,79952:CD,79957:CD,79962:CD,79966:CD,79971:CD,79981:CD,79982:CD,79983
79858 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,98418:JM,98517
79863 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
79867 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
79875 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
79880 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
79885 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
79890 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,89741
79894 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
79899 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
79907 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,89851
79911 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,79923:JM,79919:CL,79139
79915 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,79923:JM,79919
79919 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,79923:JM,79919
79923 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,79983:CD,79924:CD,79928
79924 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,79928:JM,79983:CL,89865
79928 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,79928:JM,79983
79933 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
79934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
79939 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
79942 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
79947 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
79952 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
79957 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
79962 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,89741
79966 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
79971 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
79981 :: NORM :: compound :: Ljava/util/List :: return v60::DD,79858
79983 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,79981
79982 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
80147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,80153
80153 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,80158
80155 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,80158
80158 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,80170:CD,80179:CD,80183:CD,80187:CD,80188
80170 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
80176 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,80187
80179 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,80187
80183 :: CALL :: call :: I :: v17 = v15.size()::JM,80187
80187 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,80188
80189 :: CALL :: call :: V :: p0 $this .flushCache()::CL,70169:CL,80365
80188 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,80189
80209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,80210:CD,80216
80210 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,113590
80213 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,80216
80216 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,80210
80365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,80372
80369 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,80372
80372 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,80378:CD,80387:CD,80395:CD,80399
80378 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,90216
80387 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
80392 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
80395 :: CALL :: call :: V :: v10.writeObject(v12)::
80399 :: CALL :: call :: V :: v10.close()::
83125 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
83136 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,72606
83139 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,83146
83141 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,83146:JM,83153:JM,83297:JM,83250:JM,83287:JM,83320:JM,83323:JM,83326
83147 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,83328:CD,83148:CD,83150:CD,83158:CD,83280:CD,83282:CD,83287:CD,83288:CD,83316:CD,83320:CD,83321:CD,83325
83146 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,83147:DD,83320:DD,83328
83148 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,83150
83151 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,83153:JM,83320
83150 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,83320:CD,83151:CD,83153:CD,83321
83153 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,83153:JM,83320:JM,83297:JM,83250:JM,83287:JM,83323:JM,83146:JM,83326
83158 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,83325:CD,83165:CD,83169:CD,83170:CD,83189:CD,83190:CD,83198:CD,83203:CD,83207:CD,83271:CD,83324
83165 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,83169
83169 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,83170
83171 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
83170 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,83171:CD,83172:CD,83180:CD,83185
83172 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
83180 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
83185 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
83189 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
83190 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
83198 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
83203 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
83207 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,83276
83214 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
83218 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
83223 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
83222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,83250:JM,83323
83231 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,83250:JM,83323
83236 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,83250:JM,83323:JM,83153:JM,83297:JM,83287:JM,83320:JM,83146:JM,83326
83241 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,83250:JM,83287:JM,83323:JM,83326
83246 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,83250:JM,83323
83250 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,83250:JM,83323
83255 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,83323
83259 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,83323:JM,83250
83265 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,83265:JM,83269
83264 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,83324:CD,83265:CD,83269
83269 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,83324
83271 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,83325:CD,83272:CD,83276
83272 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,83276
83276 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,83325:CD,83214:CD,83218:CD,83222:CD,83223:CD,83231:CD,83236:CD,83241:CD,83246:CD,83250:CD,83264:CD,83271:CD,83323:CD,83324
83280 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,83287
83282 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,83287:JM,83153:JM,83297:JM,83250:JM,83320:JM,83323:JM,83146:JM,83326
83287 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,83288:DD,83290:DD,83326
83288 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,83290:CD,83291:CD,83302:CD,83303:CD,83316:CD,83326:CD,83327:CD,83328
83291 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,83326:CD,83292:CD,83294
83290 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,83136
83292 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,83294
83295 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,83297:JM,83326
83294 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,83326:CD,83295:CD,83297
83297 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,83297:JM,83326:JM,83153:JM,83250:JM,83287:JM,83320:JM,83323:JM,83146
83303 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,83304:CD,83306
83302 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,83327
83304 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
83306 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,83153:JM,83297:JM,83250:JM,83287:JM,83320:JM,83323:JM,83146:JM,83326
83316 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,83136
83321 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,83291:CF,83158
83320 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,83321:DD,83158:DD,83324:DD,83325
83323 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,83264:JM,83265:JM,83269
83325 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,83327
83324 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,83271:DD,83324:DD,83325
83327 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,83303:JM,83250:JM,83287:JM,83320:JM,83323:JM,83146:JM,83326:DD,83328
83326 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,83302:DD,83327
83328 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,83316
83412 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,83417
83417 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
83420 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,83425
83425 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
83428 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,83436
83436 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
83439 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
83442 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
83445 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,83449
83449 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
83452 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,83456
83456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
83506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,83512:CD,83518:CD,83519
83512 :: NORM :: declaration :: Ljava/io/IOException :: v9 = new java.io.IOException::
83519 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
83518 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,83519
83536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,91043:JM,91074:JM,83428:JM,91081:JM,91053:JM,91088:JM,83445:JM,91060:JM,83412:JM,91095:JM,91067:JM,83420:JM,83452:CD,83568:CD,83575:CD,83582:CD,83602:CD,83624:CD,83630:CD,83645:CD,83651:CD,83657:CD,83663:CD,83675:CD,83685:CD,84036:CD,84040:CD,84047:CD,84052:CD,84058:CD,84062:CD,84069:CD,84073:CD,84080:CD,84084:JM,83712:JM,83968:JM,83719:JM,83913:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83568 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
83575 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
83582 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
83602 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
83621 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
83624 :: CALL :: call :: V :: v24.clear()::
83627 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
83630 :: CALL :: call :: V :: v26.clear()::
83642 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
83645 :: CALL :: call :: V :: v30.clear()::
83648 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
83651 :: CALL :: call :: V :: v32.clear()::
83654 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
83657 :: CALL :: call :: V :: v34.clear()::
83660 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
83663 :: CALL :: call :: V :: v36.clear()::
83675 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
83682 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
83685 :: CALL :: call :: V :: v40.clear()::
83699 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83705 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83704 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,83705:CD,83707:CD,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83707 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83712 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,83714:CD,83719:JM,83712:JM,83968:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83714 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83719 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,83720:CD,83725:JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83720 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83725 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,83727:CD,83731:JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83727 :: CALL :: call :: I :: v60 = v46.length()::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83731 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,83734:CD,83739:CD,83744:CD,83749:CD,83758:CD,83764:CD,83768:CD,83773:JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83839:JM,84031:JM,83902
83734 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
83739 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83744 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83749 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83758 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83764 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83768 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83773 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,83774:CD,83779:CD,83784:JM,83968:JM,83817:JM,83913:JM,84009:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83774 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,91131
83779 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83785 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,92330
83784 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,83785:CD,83790:CD,83795:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83790 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83795 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,83796:CD,83801:CD,83806:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83902
83796 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,91131
83801 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83807 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,92594
83806 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,83807:CD,83812:CD,83817:JM,83968:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83812 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83817 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,83818:CD,83823:CD,83828:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83818 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,92710
83823 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83829 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,92966
83828 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,83829:CD,83834:CD,83839:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83935:JM,84031:JM,83806:JM,83902
83834 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83839 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,83840:CD,83845:CD,83850:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83840 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,93037
83845 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83851 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
83850 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,83854:CD,83860:CD,83865:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83854 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83860 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83865 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,83869:CD,83875:CD,83880:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83866 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
83869 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
83875 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83881 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,93187
83880 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,83881:CD,83886:CD,83891:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83886 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83891 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,83892:CD,83897:CD,83902:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806
83892 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,93272
83897 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83903 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,93351
83902 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,83903:CD,83908:CD,83913:JM,83968:JM,83817:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83908 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83913 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,83914:CD,83919:CD,83924:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83914 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,93705
83919 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83925 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,94059
83924 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,83925:CD,83930:CD,83935:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,84031:JM,83806:JM,83902
83930 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83935 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,83936:CD,83941:CD,83946:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83936 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,94384
83941 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83947 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,94747
83946 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,83947:CD,83952:CD,83957:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83952 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83957 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,83958:CD,83963:CD,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83958 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,94842
83963 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83969 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,95167
83968 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,83969:CD,83974:CD,83979:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83974 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83979 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,83980:CD,83985:CD,83990:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83980 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,95771
83985 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
83991 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,96071
83990 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,83991:CD,83999:CD,84003
83999 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,84003:CL,96327
84003 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,84004:CD,84009:JM,83968:JM,83817:JM,83913:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902:JM,83712:JM,83719:JM,84040:JM,83725:JM,83731:JM,83704
84004 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
84009 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,84010:CD,84015:CD,84020:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
84010 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,96336
84015 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
84021 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,96562
84020 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,84021:CD,84026:CD,84031:JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,83806:JM,83902
84026 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,83968:JM,83817:JM,83913:JM,84009:JM,83784:JM,83880:JM,83979:JM,83850:JM,83946:JM,83795:JM,83891:JM,83957:JM,83828:JM,83924:JM,84020:JM,83990:JM,83865:JM,83773:JM,83839:JM,83935:JM,84031:JM,83806:JM,83902
84031 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,84032:JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
84032 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,96788
84036 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83704:JM,83773:JM,83839:JM,84031:JM,83902
84040 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,83699:CD,83704:CD,84036:JM,83712:JM,83968:JM,83719:JM,83913:JM,84040:JM,83784:JM,83979:JM,83850:JM,83725:JM,83731:JM,83795:JM,83924:JM,83990:JM,83865:JM,83935:JM,83806:JM,83817:JM,84009:JM,83880:JM,83946:JM,83891:JM,83957:JM,83828:JM,84020:JM,83773:JM,83839:JM,84031:JM,83902
84047 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,97014
84052 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,97150
84058 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,84062:CL,97617
84063 :: CALL :: call :: V :: p0 $this .formBonds()::CL,97626
84062 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,84063
84069 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,84073:CL,97690
84073 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,84074
84074 :: CALL :: call :: V :: p0 $this .addCharges()::CL,97699
84080 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,84084:CL,96327
84084 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,84088:CD,84092
84088 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,84092:CL,97711
84093 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,97720
84092 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,84093
84321 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,84322:CD,84326:CD,84331:CD,84332
84322 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,73132
84326 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,84331
84331 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,84332
84332 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,84322
84335 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
84334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,84335:CD,84337:CD,84339
84337 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,84339:DD,84340
84339 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,84340:CD,84341:CD,84344:CD,84345:CD,84346:CD,84348:CD,84357:CD,84359:CD,84368:CD,84370:CD,84379:CD,84381:CD,84390:CD,84392:CD,84401:CD,84403:CD,84412:CD,84414:CD,84423:CD,84425:CD,84436
84341 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,84344:CL,97833
84340 :: NORM :: compound :: [I :: return v2::DD,84335
84345 :: NORM :: declaration :: [I :: v7 = new []::DD,84436
84344 :: EXPR :: assign :: I :: v6 = v5.length::CF,84345
84346 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
84348 :: CALL :: call :: I :: v10 = v8.ordinal()::
84352 :: EXPR :: modify :: I :: v7[v10] = #(8)::
84357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
84359 :: CALL :: call :: I :: v16 = v14.ordinal()::
84363 :: EXPR :: modify :: I :: v7[v16] = #(4)::
84368 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
84370 :: CALL :: call :: I :: v22 = v20.ordinal()::
84374 :: EXPR :: modify :: I :: v7[v22] = #(7)::
84379 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
84381 :: CALL :: call :: I :: v28 = v26.ordinal()::
84385 :: EXPR :: modify :: I :: v7[v28] = #(6)::
84390 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
84392 :: CALL :: call :: I :: v34 = v32.ordinal()::
84396 :: EXPR :: modify :: I :: v7[v34] = #(1)::
84401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
84403 :: CALL :: call :: I :: v40 = v38.ordinal()::
84407 :: EXPR :: modify :: I :: v7[v40] = #(3)::
84412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
84414 :: CALL :: call :: I :: v46 = v44.ordinal()::
84418 :: EXPR :: modify :: I :: v7[v46] = #(2)::
84423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
84425 :: CALL :: call :: I :: v52 = v50.ordinal()::
84429 :: EXPR :: modify :: I :: v7[v52] = #(5)::
84436 :: NORM :: compound :: [I :: return v7::DD,84335
84477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,84478:CD,84484:CD,84489:CD,84493
84478 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,73398
84484 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,84516:JM,84493
84489 :: CALL :: call :: Z :: v8 = v6.matches()::JM,84516:JM,84493
84493 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,84494:CD,84499:CD,84504:CD,84511:CD,84519:CD,84520
84494 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,84496
84496 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
84499 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,84516:JM,84493
84504 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,84508
84508 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
84511 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,84516:JM,84493
84516 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
84519 :: NORM :: compound :: Z :: return #(1)::DD,84478
84520 :: NORM :: compound :: Z :: return #(0)::DD,84478
84536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,84543:CD,84548:CD,84552
84543 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,84552:JM,84570
84548 :: CALL :: call :: Z :: v8 = v6.matches()::JM,84552:JM,84570
84553 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,84552:JM,84570
84552 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,84553:CD,84558:CD,84565:JM,84552:JM,84570
84558 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,84562
84562 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
84565 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,84552:JM,84570
84570 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v17::
84589 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,73408
84588 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,84589:CD,84595:CD,84600:CD,84604
84595 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,84627:JM,84604
84600 :: CALL :: call :: Z :: v8 = v6.matches()::JM,84627:JM,84604
84605 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,84607
84604 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,84605:CD,84610:CD,84615:CD,84622:CD,84630:CD,84631
84607 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
84610 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,84627:JM,84604
84615 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,84619
84619 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
84622 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,84627:JM,84604
84627 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
84631 :: NORM :: compound :: Z :: return #(0)::DD,84589
84630 :: NORM :: compound :: Z :: return #(1)::DD,84589
84647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,84654:CD,84659:CD,84663
84654 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,84663
84659 :: CALL :: call :: Z :: v8 = v6.matches()::JM,84663
84663 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,84664:CD,84669:JM,84663
84664 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,84663
84669 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,84673
84673 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
84689 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,73418
84688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,84689:CD,84695:CD,84700:CD,84704
84695 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,84704
84700 :: CALL :: call :: Z :: v8 = v6.matches()::JM,84704
84705 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,84707
84704 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,84705:CD,84710:CD,84715:CD,84725:CD,84726
84707 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
84710 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,84704
84715 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,84719
84719 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
84722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
84725 :: NORM :: compound :: Z :: return #(1)::DD,84689
84726 :: NORM :: compound :: Z :: return #(0)::DD,84689
84741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::CD,84746:CD,84751:JM,97905:JM,97920:JM,97989:JM,97990:JM,97914:JM,97946:JM,97932:JM,97950:CD,84759:CD,84766:CD,84770:CD,84774
84746 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v4 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,84748
84748 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v4::
84751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,84756
84756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v5::
84759 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getPdbId()::JM,84763:CL,89542
84763 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v8::
84766 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,84774:JM,84792:JM,84783:CL,98047
84770 :: CALL :: call :: I :: v12 = v10.size()::JM,84774:JM,84792:JM,84783
84775 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,84774:JM,84792:JM,84783
84774 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,84775:CD,84779:CD,84783:CD,84788:CD,84792:JM,84774
84779 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::JM,84792:JM,84783
84783 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,84784
84784 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v22::
84788 :: CALL :: call :: I :: v15 = v10.size()::JM,84774:JM,84792:JM,84783
84793 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(.)::
84792 :: PRED :: IF :: Z :: if (v15 <= #(1)) goto 87::
84797 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
84823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromFile()::CD,84827
84827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v3 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,84829
84829 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v3::
84832 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = #(null)::
84835 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
84847 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,73428
84846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,84847:CD,84860:CD,84876:CD,84886:CD,84887
84860 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,84862
84862 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
84876 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::JM,84880:CL,98103
84880 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
84883 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
84887 :: NORM :: compound :: Z :: return #(0)::DD,84847
84886 :: NORM :: compound :: Z :: return #(1)::DD,84847
84941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,84948:CD,84996:CD,85004:CD,85009:CD,85139:CD,85147:CD,85152:CD,85175:CD,85183:CD,85188:CD,85216:CD,85224:CD,85229:CD,85264:CD,85265:CD,85273:CD,85278
84945 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,84948
84949 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,84334
84948 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,84949:CD,84955:CD,84963
84952 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
84955 :: CALL :: call :: I :: v9 = v7.ordinal()::
84959 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,84963
84963 :: PRED :: IF :: null :: switch v10::CD,84964:CD,84971:CD,84980:CD,84986:CD,85023:CD,85026:CD,85037:CD,85096:CD,85112:CD,85116:CD,85117:CD,85122:CD,85126:JM,98989:CD,85162:JM,89233:JM,89511:CD,85206:CD,85239:JM,99280:JM,99296:JM,99285:JM,99304:JM,99290:JM,99309:CD,85251:JM,97905:JM,97920:JM,97989:JM,97990:JM,97914:JM,97946:JM,97932:JM,97950
84964 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,98138
84971 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::JM,84976:CL,98157
84976 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v136::
84980 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,98189
84986 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::JM,84991:CL,98200
84991 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v119::
84996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
85001 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
85004 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
85009 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
85023 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,89486
85026 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,85031:CL,98341
85031 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
85034 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,85037
85037 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,85041:CD,85046
85038 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,85046
85041 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,85046
85047 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v107 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,85055
85046 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::CD,85047:JM,97905:JM,97920:JM,97989:JM,97990:JM,97914:JM,97946:JM,97932:JM,97950:CD,85059:CD,85066:JM,98866:JM,98857:JM,98863
85055 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v107::
85059 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v101 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,85075
85066 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,98742
85075 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v101::
85096 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
85112 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,59089
85117 :: NORM :: declaration :: Ljava/io/File :: v72 = new java.io.File::
85116 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v71 = new org.biojava.nbio.structure.URLIdentifier::DD,85134:CF,85117
85122 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
85126 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
85134 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v71::
85139 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
85144 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
85147 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
85152 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
85162 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v45 = new org.biojava.nbio.structure.URLIdentifier::DD,85170
85170 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v45::
85175 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
85180 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
85183 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
85188 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
85206 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::JM,85211:CL,99014
85211 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v33::
85216 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
85221 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
85224 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
85229 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
85239 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BioAssemblyIdentifier :: v25 = new org.biojava.nbio.structure.BioAssemblyIdentifier::DD,85247
85247 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v25::
85251 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v21 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,85260
85260 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v21::
85265 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
85264 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v11 = new java.lang.IllegalStateException::
85273 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
85278 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
85353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85358:CD,85362
85358 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getThePdbId()::CL,99344
85362 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getStructure(v5)::CL,52247
85370 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85378
85378 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.loadStructure(p1 $cache )::CL,85661
85386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85394
85394 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,99361
85402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85410
85410 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,99361
85418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85423:CD,85428:CD,85432:CD,85437:CD,85465:CD,85473:CD,85478:CD,85487:CD,85489:CD,85501:CD,85504:CD,85512:CD,85560:CD,85612:CD,85613
85423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v4 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,85612
85428 :: CALL :: call :: Ljava/util/Map :: v7 = parseQuery(v5)::CL,99449
85432 :: CALL :: call :: Z :: v21 = v7.containsKey(#(format))::JM,85437
85437 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 90::CF,85612:CD,85438:CD,85443:CD,85444:CD,85449:CD,85454:CD,85458
85438 :: CALL :: call :: Ljava/lang/Object :: v24 = v7.get(#(format))::JM,85443
85443 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::CF,85444
85444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
85449 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v25)::
85454 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
85458 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v34 = guessFiletype(v32)::JM,85612:CL,99616
85465 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
85473 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
85478 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
85487 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v38 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,85489
85489 :: PRED :: IF :: Z :: if (v36 != v38) goto 107::CF,85613:CD,85497
85497 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v43 = guessFiletype(v41)::JM,85613:CL,99616
85501 :: CALL :: call :: [I :: v46 = $SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CL,99694
85504 :: CALL :: call :: I :: v48 = v44.ordinal()::
85508 :: EXPR :: reference :: I :: v49 = v46[v48]::DD,85512
85512 :: PRED :: IF :: null :: switch v49::JM,99769:JM,99792:JM,99799:JM,52046:CD,85541:CD,85545:CD,85546:CD,85555:JM,50401:JM,50465:JM,45800:JM,45804:JM,50415:JM,50479:JM,45808:JM,50451:JM,45812:JM,45816:JM,50459:JM,45820:CD,85604
85541 :: CALL :: call :: V :: v71.addMMcifConsumer(v73)::CL,99818
85545 :: NORM :: declaration :: Ljava/io/BufferedReader :: v79 = new java.io.BufferedReader::CF,85546
85546 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v80 = new java.io.InputStreamReader::
85555 :: CALL :: call :: V :: v71.parse(v79)::CL,99835
85560 :: CALL :: call :: V :: v84.printStackTrace()::
85604 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v65 = v50.getStructure(v63)::CL,52115
85613 :: EXPR :: assign :: null :: PHI v44 = v36, v43::
85612 :: EXPR :: assign :: null :: PHI v36 = v4, v34, v4::DD,85489:DD,85613
85661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85666:CD,85670
85666 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::JM,85670:CL,89542
85670 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 13::CD,85672
85672 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = p1 $cache .getStructureForPdbId(v5)::CL,99361
85685 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,85696
85696 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getBiologicalAssembly(v4, v5)::CL,100792
85707 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,73681:JM,86268:JM,86285:JM,86302:JM,86319:JM,86335
85706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::CE,85707:CD,85711:JM,91043:JM,91074:JM,83428:JM,91081:JM,91053:JM,91088:JM,83445:JM,91060:JM,83412:JM,91095:JM,91067:JM,83420:JM,83452:CD,85731:CD,85743:CD,85759:CD,85767:CD,85772:CD,85777:CD,85781:CD,85786:CD,85795:CD,85799:CD,85804:CD,85808:CD,85812:CD,85973:CD,85977:CD,86107:CD,86111:CD,86112:CD,86125
85711 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v4 = new org.biojava.nbio.structure.StructureImpl::DD,86112
85731 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .toString()::CL,100843
85743 :: CALL :: call :: V :: v4.setDBRefs(v16)::CL,100862
85759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
85767 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v23.append(v26)::
85772 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#( of ))::
85777 :: CALL :: call :: Ljava/lang/String :: v33 = v4.getPDBCode()::CL,60171
85781 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v33)::
85786 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( ))::
85795 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getDescription()::CL,100929
85799 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
85804 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
85808 :: CALL :: call :: V :: v22.setDescription(v46)::CL,100938
85812 :: CALL :: call :: Ljava/util/List :: v49 = p1 $s .getCompounds()::CL,100949
85841 :: NORM :: declaration :: Ljava/util/ArrayList :: v62 = new java.util.ArrayList::
85845 :: CALL :: call :: V :: v4.addModel(v62)::CL,101097
85849 :: CALL :: call :: Ljava/util/List :: v66 = p0 $this .getResidueRanges()::JM,85857:CL,101141
85853 :: CALL :: call :: Z :: v68 = v66.isEmpty()::JM,85857
85857 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 255::CD,85858:CD,85882:CD,85887:CD,85893:CD,85897:CD,86101:CD,86105:CD,86122:CD,86123:CD,86124
85858 :: CALL :: call :: Ljava/util/List :: v163 = p1 $s .getCompounds()::CL,100949
85882 :: CALL :: call :: Ljava/util/List :: v172 = p1 $s .getModel(v178)::CL,60253
85887 :: CALL :: call :: V :: v4.setModel(v178, v172)::CL,101150
85893 :: CALL :: call :: Ljava/util/List :: v70 = p0 $this .getResidueRanges()::JM,86105:CL,101141
85897 :: CALL :: call :: Ljava/util/Iterator :: v72 = v70.iterator()::JM,86105
85902 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.next()::JM,86105
85907 :: CALL :: call :: Ljava/lang/String :: v79 = v77.getChainId()::JM,85924:CL,101228
85911 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v81 = v77.getStart()::JM,85931:JM,85998:CL,101237
85915 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v83 = v77.getEnd()::JM,85940:JM,85999:CL,101246
85919 :: CALL :: call :: Z :: v86 = v79.equals(#(_))::JM,85924
85925 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v88 = p1 $s .getChain(v179, #(0))::CL,101255
85924 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 391::CD,85925:CD,85931:CD,85940:CD,85949:CD,85966
85931 :: PRED :: IF :: Z :: if (v81 == #(null)) goto 341::CD,85936:CF,85940
85936 :: CALL :: call :: V :: v81.setChainId(v90)::CL,101282
85940 :: PRED :: IF :: Z :: if (v83 == #(null)) goto 357::CD,85945
85945 :: CALL :: call :: V :: v83.setChainId(v93)::CL,101282
85949 :: CALL :: call :: I :: v96 = p1 $s .size()::CL,101293
85966 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v104 = p1 $s .getChainByPDB(v79, v179)::CL,101327
85973 :: CALL :: call :: I :: v107 = parseInt(v79)::JM,85924
85977 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v109 = p1 $s .getChain(v179, v107)::CL,101255
85999 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 482::CD,86000:CD,86005:CD,86011:CD,86118
85998 :: PRED :: IF :: Z :: if (v81 != #(null)) goto 482::CD,85999:CD,86005:CD,86011:CD,86118
86000 :: CALL :: call :: Ljava/util/List :: v117 = v115.getAtomGroups()::JM,86118:CL,60270
86005 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v119 = v115.getGroupsByPDB(v81, v83)::JM,86118:JM,86011:CL,101415
86011 :: CALL :: call :: Ljava/util/List :: v121 = asList(v119)::JM,86118:JM,86011
86015 :: PRED :: IF :: Z :: if (v160 == #(null)) goto 532::CD,86016:CD,86020:CD,86025:CD,86037:CD,86119
86016 :: CALL :: call :: Ljava/lang/String :: v124 = v115.getChainID()::JM,86025:CL,77766
86020 :: CALL :: call :: Z :: v126 = v160.equals(v124)::JM,86025
86025 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 532::CD,86026:CD,86037:CD,86119
86026 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v128 = v4.getChainByPDB(v160, v179)::JM,86119:CL,101327
86037 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v132 = v4.getChainByPDB(v130, v179)::JM,86119:CL,101327
86044 :: PRED :: IF :: Z :: if (v135 != #(null)) goto 617::JM,101666:JM,101654:JM,101673:JM,101659:CD,86053:CD,86057:CD,86066
86053 :: CALL :: call :: V :: v136.setChainID(v139)::CL,101697
86057 :: CALL :: call :: V :: v4.addChain(v136, v179)::CL,101708
86066 :: CALL :: call :: V :: v136.setSeqResGroups(v143)::CL,101786
86078 :: CALL :: call :: Ljava/util/Iterator :: v150 = v122.iterator()::JM,86096
86083 :: CALL :: call :: Ljava/lang/Object :: v154 = v150.next()::JM,86096
86088 :: CALL :: call :: V :: v148.addGroup(v155)::CL,101844
86092 :: CALL :: call :: Z :: v152 = v150.hasNext()::JM,86096
86097 :: CALL :: call :: Ljava/lang/String :: v158 = v148.getChainID()::JM,86123:CL,77766
86096 :: PRED :: IF :: Z :: if (v152 != #(0)) goto 629::CD,86083:CD,86088:CD,86092:CD,86121:JM,86096
86101 :: CALL :: call :: Z :: v74 = v72.hasNext()::JM,86105
86105 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 270::CF,86124:CD,85902:CD,85907:CD,85911:CD,85915:CD,85919:CD,85924:CD,85998:CD,86015:CD,86044:CD,86078:CD,86092:CD,86096:CD,86097:CD,86101:CD,86118:CD,86119:CD,86121:CD,86122:CD,86123:JM,86105
86107 :: CALL :: call :: I :: v60 = p1 $s .nrModels()::JM,86111:CL,102086
86106 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v181 + #(1)::DD,86125
86111 :: PRED :: IF :: Z :: if (v178 < v60) goto 177::CD,85841:CD,85845:CD,85849:CD,85853:CD,85857:CD,86106:CD,86107:CD,86124:CD,86125:CF,86112
86112 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v4::DD,85707
86119 :: EXPR :: assign :: null :: PHI v135 = v128, v132, #(null)::DD,86044
86118 :: EXPR :: assign :: null :: PHI v122 = v117, v121::JM,86096:CF,86015
86121 :: EXPR :: assign :: null :: PHI v180 = v179, v180::JM,86096:DD,86121:DD,86122
86123 :: EXPR :: assign :: null :: PHI v160 = #(null), v158::JM,86105:DD,86015:JM,86025
86122 :: EXPR :: assign :: null :: PHI v179 = v178, v180::CF,86123:DD,86121:DD,86124
86125 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,86111:DD,86122:DD,86124
86124 :: EXPR :: assign :: null :: PHI v181 = v178, v179::DD,86106
86255 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::CE,86255:CD,86259:CD,86263:CD,86268
86259 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,102099
86263 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::JM,86268:CL,85706
86268 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,86255
86271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::CE,86272:CD,86276:CD,86280:CD,86285
86272 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86276 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,102125
86280 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::JM,86285:CL,85706
86285 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,86272
86289 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::CE,86289:CD,86293:CD,86297:CD,86302
86293 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,102296
86297 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::JM,86302:CL,85706
86302 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,86289
86305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::CE,86306:CD,86310:CD,86314:CD,86319
86306 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86310 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,102322
86314 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::JM,86319:CL,85706
86319 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,86306
86323 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::CE,86323:CD,86330:CD,86335
86330 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.reduce(p1 $input )::JM,86335:CL,85706
86335 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v6::DD,86323
86339 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.BioAssemblyIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,73681
86338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.reduce(org.biojava.nbio.structure.Structure)::CF,86339:CD,86343
86343 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return p1 $input ::CF,86339
86345 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,86346:CD,86350:CD,86354:CD,86358:CD,86359:CD,86363:CD,86367:CD,86368:CD,86372:CD,86376:CD,86377:CD,86378:CD,86379:CD,86380:CD,86381:CD,86382:CD,86386
86346 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,74407:JM,74566:JM,74532:JM,74569:JM,74563:JM,87064:JM,125111:JM,125264
86350 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,86358:CL,75290
86354 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,86358:CL,75290
86359 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,86367:CL,77814
86358 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,86377
86363 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,86367:CL,77814
86367 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,86378
86368 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,86376:CL,77828
86372 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,86376:CL,77828
86377 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,86379:CF,86378
86376 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,86380:CF,86377
86379 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,86381:CF,86380
86378 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,86379
86381 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,86386:JM,86382
86380 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,86381
86382 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,86386:JM,86382
86386 :: NORM :: compound :: D :: return v25::CF,86346
86404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.subtract(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,73732:JM,73737:CD,86422:CD,86435:CD,86448
86422 :: CALL :: call :: V :: v4.setX(v10)::CL,73848
86435 :: CALL :: call :: V :: v4.setY(v16)::CL,73864
86448 :: CALL :: call :: V :: v4.setZ(v22)::CL,73880
86465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.amount(org.biojava.nbio.structure.Atom)::CE,86466:CD,86469:CD,86474:CD,86478
86466 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.amount(org.biojava.nbio.structure.Atom)::JM,74567:JM,74526
86469 :: CALL :: call :: D :: v4 = scalarProduct(p1 $a , p1 $a )::JM,86474:JM,86478:CL,102423
86474 :: CALL :: call :: D :: v6 = sqrt(v4)::JM,86474:JM,86478
86478 :: NORM :: compound :: D :: return v6::CF,86466
86511 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.pToZ(double)::CE,86512:CD,86516:CD,86520:CD,86521:CD,86522:CD,86523:CD,86524:CD,86525:CD,86531:CD,86532:CD,86533
86512 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.ce.CECalculator.pToZ(double)::JM,74948
86516 :: CALL :: call :: D :: v5 = log10(p1 $p )::JM,86516:JM,86520
86521 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 * #(3.0 d)::CF,86522
86520 :: EXPR :: assign :: Ljava/lang/Object :: v6 = -(v5)::DD,86521
86523 :: PRED :: IF :: Z :: if (v9 >= #(0)) goto 21::CF,86532
86522 :: EXPR :: assign :: I :: v9 = CONVERT D to I v8::DD,86523:DD,86532
86525 :: EXPR :: reference :: [D :: v14 = org.biojava.nbio.structure.align.ce.CECalculator.tablePtoZ::
86524 :: PRED :: IF :: Z :: if (v11 <= #(149)) goto 28::CF,86533
86527 :: EXPR :: reference :: D :: v15 = v14[v13]::DD,86531
86531 :: NORM :: compound :: D :: return v15::CF,86512
86533 :: EXPR :: assign :: null :: PHI v13 = v11, #(149)::
86532 :: EXPR :: assign :: null :: PHI v11 = v9, #(0)::DD,86524:DD,86533
86547 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.align.ce.CECalculator.getAtoms(org.biojava.nbio.structure.Atom[],int,boolean)::JM,75212
86546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.getAtoms(org.biojava.nbio.structure.Atom[],int,boolean)::CE,86547:CD,86553:CD,86596:CD,86597:CD,86601:CD,86602:CD,86607:CD,86608:CD,86610:JM,86558
86553 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,86601:JM,86607
86558 :: PRED :: IF :: Z :: if (p3 $clone  == #(0)) goto 62::CD,86567:CD,86580:CD,86609
86567 :: CALL :: call :: Ljava/lang/Object :: v13 = v11.clone()::CL,52556:CL,52698:CL,52873
86580 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v19 = v14.getAtom(v17)::JM,86609:CL,53038
86586 :: EXPR :: reference :: Ljava/lang/Object :: v20 = p1 $ca [v26]::DD,86609
86590 :: CALL :: call :: Z :: v23 = v6.add(v21)::
86595 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,86610
86597 :: CALL :: call :: I :: v28 = v6.size()::JM,86601
86596 :: PRED :: IF :: Z :: if (v26 < p2 $length ) goto 16::CD,86558:CD,86590:CD,86595:CD,86609:CD,86610:JM,86601
86601 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v29 = new org.biojava.nbio.structure.Atom[]::JM,86607
86602 :: CALL :: call :: [Ljava/lang/Object :: v31 = v6.toArray(v29)::JM,86607
86607 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::CF,86608
86609 :: EXPR :: assign :: null :: PHI v21 = v19, v20::
86608 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v32::DD,86547
86610 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::DD,86595:DD,86596
86653 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v9 = getCentroid(p1 $atomSet1 )::CL,102464
86657 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v11 = getCentroid(p2 $atomSet2 )::CL,102464
86661 :: NORM :: declaration :: [[D :: v13 = new [][]::CF,86662
86663 :: CALL :: call :: D :: v18 = v9.getX()::JM,86667:CL,75290
86662 :: NORM :: declaration :: [D :: v16 = new []::DD,86687
86667 :: EXPR :: modify :: D :: v16[#(0)] = v18::
86671 :: CALL :: call :: D :: v20 = v9.getY()::JM,86675:CL,77814
86675 :: EXPR :: modify :: D :: v16[#(1)] = v20::
86679 :: CALL :: call :: D :: v23 = v9.getZ()::JM,86683:CL,77828
86683 :: EXPR :: modify :: D :: v16[#(2)] = v23::
86687 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(0)] = v16::
86699 :: NORM :: declaration :: [[D :: v26 = new [][]::CF,86700
86701 :: CALL :: call :: D :: v29 = v11.getX()::JM,86705:CL,75290
86700 :: NORM :: declaration :: [D :: v27 = new []::DD,86725
86705 :: EXPR :: modify :: D :: v27[#(0)] = v29::
86709 :: CALL :: call :: D :: v31 = v11.getY()::JM,86713:CL,77814
86713 :: EXPR :: modify :: D :: v27[#(1)] = v31::
86717 :: CALL :: call :: D :: v33 = v11.getZ()::JM,86721:CL,77828
86721 :: EXPR :: modify :: D :: v27[#(2)] = v33::
86725 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
86737 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v37 = centerAtoms(p1 $atomSet1 , v9)::JM,86777:JM,86747:CL,102637
86742 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v39 = centerAtoms(p2 $atomSet2 , v11)::JM,86749:CL,102637
86747 :: EXPR :: assign :: I :: v40 = v37.length::DD,86748
86749 :: EXPR :: assign :: I :: v42 = v39.length::DD,86750
86748 :: NORM :: declaration :: [[D :: v41 = new [][]::CF,86749
86750 :: NORM :: declaration :: [[D :: v43 = new [][]::
86756 :: CALL :: call :: [D :: v47 = v45.getCoords()::JM,86760:CL,73839
86760 :: EXPR :: modify :: Ljava/lang/Object :: v41[v52] = v47::
86768 :: CALL :: call :: [D :: v50 = v48.getCoords()::JM,86772:CL,73839
86772 :: EXPR :: modify :: Ljava/lang/Object :: v43[v52] = v50::
86777 :: EXPR :: assign :: I :: v44 = v37.length::CF,86778
86776 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v52 + #(1)::DD,86785
86779 :: CALL :: call :: V :: p0 $this .calculate(v41, v43)::CL,102689
86778 :: PRED :: IF :: Z :: if (v52 < v44) goto 188::CD,86756:CD,86768:CD,86776:CD,86777:CD,86785
86785 :: EXPR :: assign :: null :: PHI v52 = #(0), v51::DD,86776:DD,86778:CF,86777
86857 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.SVDSuperimposer.getRotation()::JM,75206
86856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.getRotation()::CE,86857:CD,86863
86860 :: EXPR :: reference :: Lorg/biojava/nbio/structure/jama/Matrix :: v3 = p0 $this .rot::DD,86863
86863 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v3::CF,86857
86865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.getTranslation()::CE,86866:CD,86869:JM,73732:JM,73737:CD,86882:CD,86895:CD,86908:CD,86912
86866 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.SVDSuperimposer.getTranslation()::JM,75209
86869 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::DD,86912
86882 :: CALL :: call :: V :: v3.setX(v8)::CL,73848
86895 :: CALL :: call :: V :: v3.setY(v13)::CL,73864
86908 :: CALL :: call :: V :: v3.setZ(v18)::CL,73880
86912 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v3::DD,86866
86928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.rotate(org.biojava.nbio.structure.Group,org.biojava.nbio.structure.jama.Matrix)::CD,86947:CD,86951
86939 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v10 = v4.next()::CL,102935
86943 :: CALL :: call :: V :: rotate(v10, p2 $m )::CL,103080
86947 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,86951:CL,103194
86951 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 13::CD,86939:CD,86943:CD,86947
86962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.shift(org.biojava.nbio.structure.Group,org.biojava.nbio.structure.Atom)::CD,87006:CD,87010
86973 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v11 = v4.next()::CL,102935
86977 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v13 = add(v11, p2 $a )::CL,103267
86994 :: CALL :: call :: V :: v11.setX(v15)::CL,73848
86998 :: CALL :: call :: V :: v11.setY(v17)::CL,73864
87002 :: CALL :: call :: V :: v11.setZ(v19)::CL,73880
87006 :: CALL :: call :: Z :: v7 = v4.hasNext()::JM,87010:CL,103194
87010 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 15::CD,86973:CD,86977:CD,86994:CD,86998:CD,87002:CD,87006
87037 :: EXIT :: exit :: D :: org.biojava.nbio.structure.SVDSuperimposer.getRMS(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::JM,75241
87036 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.getRMS(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[])::CE,87037:CD,87067:CD,87068:CD,87069:CD,87070:CD,87071:CD,87072:CD,87076:CD,87077:CD,87078
87059 :: CALL :: call :: D :: v12 = getDistance(v9, v10)::JM,87064:CL,86345
87065 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v17 + v13::DD,87077:CF,87066
87064 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v12 * v12::CF,87065
87067 :: EXPR :: assign :: I :: v8 = p1 $atomSet1 .length::CF,87068
87066 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,87078:CF,87077
87069 :: EXPR :: assign :: I :: v19 = p1 $atomSet1 .length::CF,87070
87068 :: PRED :: IF :: Z :: if (v18 < v8) goto 28::CD,87059:CD,87064:CD,87065:CD,87066:CD,87067:CD,87077:CD,87078:CF,87069
87071 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v17 / v20::JM,87072:JM,87076
87070 :: EXPR :: assign :: D :: v20 = CONVERT I to D v19::CF,87071
87072 :: CALL :: call :: D :: v23 = sqrt(v21)::JM,87072:JM,87076
87077 :: EXPR :: assign :: null :: PHI v17 = #(0.0 d), v14::CF,87078:DD,87065:DD,87071
87076 :: NORM :: compound :: D :: return v23::DD,87037
87078 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::DD,87066:DD,87068:CF,87067
87103 :: EXIT :: exit :: Ljava/lang/Double :: org.biojava.nbio.structure.align.ce.CeParameters.getORmsdThr()::JM,75820
87102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getORmsdThr()::CE,87103:CD,87109:CD,87113
87106 :: EXPR :: reference :: D :: v3 = p0 $this .oRmsdThr::JM,87109:JM,87113
87109 :: CALL :: call :: Ljava/lang/Double :: v5 = valueOf(v3)::JM,87109:JM,87113
87113 :: NORM :: compound :: Ljava/lang/Double :: return v5::DD,87103
87115 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getDistanceIncrement()::CE,87116:CD,87122:CD,87126
87116 :: EXIT :: exit :: Ljava/lang/Double :: org.biojava.nbio.structure.align.ce.CeParameters.getDistanceIncrement()::JM,75442
87119 :: EXPR :: reference :: D :: v3 = p0 $this .distanceIncrement::JM,87122:JM,87126
87122 :: CALL :: call :: Ljava/lang/Double :: v5 = valueOf(v3)::JM,87122:JM,87126
87126 :: NORM :: compound :: Ljava/lang/Double :: return v5::DD,87116
87129 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxNrIterationsForOptimization()::JM,75702
87128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.getMaxNrIterationsForOptimization()::CE,87129:CD,87135
87132 :: EXPR :: reference :: I :: v3 = p0 $this .maxNrIterationsForOptimization::DD,87135
87135 :: NORM :: compound :: I :: return v3::CF,87129
87137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.rot_mol(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],int,org.biojava.nbio.structure.jama.Matrix,org.biojava.nbio.structure.Atom)::CD,87182:CD,87184
87155 :: CALL :: call :: Ljava/lang/Object :: v13 = v11.clone()::CL,52556:CL,52698:CL,52873
87160 :: CALL :: call :: V :: rotate(v14, p4 $m )::CL,86928
87164 :: CALL :: call :: V :: shift(v14, p5 $shift )::CL,86962
87172 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v20 = v14.getAtom(v18)::CL,53038
87181 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,87184
87182 :: PRED :: IF :: Z :: if (v23 < p3 $nse2 ) goto 9::CD,87155:CD,87160:CD,87164:CD,87172:CD,87181:CD,87184
87184 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,87181:DD,87182
87205 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.align.ce.CECalculator.updateMatrixWithSequenceConservation([][],org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.align.ce.CeParameters)::JM,75512
87204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.updateMatrixWithSequenceConservation([][],org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.align.ce.CeParameters)::CE,87205:JM,55248:JM,55240:JM,55273:JM,55262:CD,87227:CD,87310:CD,87314:CD,87315:CD,87319:CD,87323
87227 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v18 = getAminoAcidCompoundSet()::JM,87281:JM,87280:JM,87275:JM,87258
87250 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v30 = v28.getChemComp()::CL,103352
87254 :: CALL :: call :: Ljava/lang/String :: v32 = v30.getOne_letter_code()::JM,87280:JM,87258:CL,103412
87258 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v34 = v18.getCompoundForString(v32)::JM,87281:JM,87280:JM,87275:JM,87258
87267 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v38 = v36.getChemComp()::CL,103352
87271 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getOne_letter_code()::JM,87281:JM,87275:CL,103412
87275 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v42 = v18.getCompoundForString(v40)::JM,87281:JM,87280:JM,87275:JM,87258
87281 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 144::CD,87297
87280 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 182::CD,87281:CF,87303
87297 :: CALL :: call :: V :: v6.set(v58, v55, v51)::CL,103421
87303 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v55 + #(1)::DD,87322:CF,87321
87304 :: CALL :: call :: I :: v22 = v6.getColumnDimension()::JM,87308:CL,103444
87309 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v58 + #(1)::DD,87323
87308 :: PRED :: IF :: Z :: if (v55 < v22) goto 64::CD,87250:CD,87254:CD,87258:CD,87267:CD,87271:CD,87275:CD,87280:CD,87303:CD,87304:CD,87321:CD,87322:CF,87309
87310 :: CALL :: call :: I :: v20 = v6.getRowDimension()::JM,87314:CL,103453
87315 :: CALL :: call :: [[D :: v60 = v6.getArray()::JM,87319:CL,88809
87314 :: PRED :: IF :: Z :: if (v57 < v20) goto 55::CD,87304:CD,87308:CD,87309:CD,87310:CD,87321:CD,87322:CD,87323
87319 :: NORM :: compound :: [[D :: return v60::DD,87205
87321 :: EXPR :: assign :: null :: PHI v58 = v57, v58::CF,87322:DD,87309:DD,87321
87323 :: EXPR :: assign :: null :: PHI v57 = #(0), v56::DD,87314:DD,87321
87322 :: EXPR :: assign :: null :: PHI v55 = #(0), v54::DD,87303:DD,87308
87389 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.align.ce.CECalculator.notifyMatrixListener([][])::JM,75523
87388 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.notifyMatrixListener([][])::CE,87389:CD,87396:CD,87411:CD,87415:CD,87416:CD,87417
87393 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .matrixListeners::JM,87415:JM,87405
87396 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,87415:JM,87405
87401 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,87415:JM,87405
87405 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,87417:JM,87406
87406 :: CALL :: call :: [[D :: v14 = v12.matrixInOptimizer(v15)::JM,87417:JM,87406
87411 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,87415:JM,87405
87415 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,87401:CD,87405:CD,87406:CD,87411:CD,87417:JM,87415:CF,87416
87417 :: EXPR :: assign :: null :: PHI v15 = p1 $mat2 , v14::JM,87415:JM,87405:JM,87417:JM,87406:DD,87416
87416 :: NORM :: compound :: [[D :: return v15::DD,87389
87453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.dpAlign(int,int,double,double,boolean,boolean)::CD,87463:CD,87464:CD,87466:CD,87474:CD,87475:CD,87480:CD,87868:CD,88120:CD,88123:CD,88124:CD,88182:CD,88183:CD,88184:CD,88185:CD,88231:CD,88232:JM,87553:JM,87680:JM,87939:JM,87941:JM,87695:JM,87568:JM,87699:JM,87956:JM,87959:JM,87583:JM,87585:JM,87715:JM,87719:JM,87974:JM,87977:JM,87851:JM,87722:JM,87724:JM,87980:JM,87468:JM,87852:JM,87599:JM,87854:JM,87598:JM,87601:JM,87857:JM,87602:JM,87858:JM,87860:JM,87481:JM,88121:JM,87483:JM,87739:JM,87866:JM,87994:JM,87997:JM,87743:JM,87493:JM,87495:JM,88012:JM,87631:JM,87759:JM,88015:JM,87633:JM,87763:JM,88018:JM,87895:JM,87511:JM,87766:JM,87512:JM,87515:JM,87643:JM,87514:JM,87645:JM,87517:JM,87519:JM,87779:JM,87781:JM,87909:JM,87780:JM,87911:JM,87784:JM,87787:JM,87789:JM,87661:JM,87788:JM,87662:JM,87534:JM,87665:JM,87664:JM,87792:JM,87925:JM,87668:JM,87671:JM,87670:JM,87673:JM,87674:JM,87549:JM,87677:JM,87551
87463 :: EXPR :: assign :: Z :: v10 = p4 $null  < #(0.0 d)::DD,87464
87464 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 16::CD,88123
87466 :: NORM :: declaration :: [[Z :: v14 = new [][]::
87469 :: EXPR :: modify :: Ljava/lang/Object :: v14[v17] = v15::
87468 :: NORM :: declaration :: [Z :: v15 = new []::DD,87469
87473 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,88124
87475 :: CALL :: call :: [[Z :: v19 = p0 $this .notifyBreakFlagListener(v14)::CL,103462
87474 :: PRED :: IF :: Z :: if (v17 < p1 $nSeq1 ) goto 33::CD,87468:CD,87473:CD,88124
87481 :: EXPR :: assign :: Ljava/lang/Object :: v143 = p1 $nSeq1  - #(1)::DD,88147
87480 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 369::CD,87481:CD,87629:CD,87631:CD,87820:CD,88147:CD,88171
87483 :: EXPR :: assign :: Ljava/lang/Object :: v144 = p2 $nSeq2  - #(1)::DD,88146
87485 :: EXPR :: reference :: Ljava/lang/Object :: v145 = v19[v217]::
87489 :: EXPR :: modify :: B :: v145[v209] = #(0)::
87493 :: EXPR :: assign :: Ljava/lang/Object :: v146 = p2 $nSeq2  - #(1)::CF,87494
87495 :: EXPR :: assign :: Ljava/lang/Object :: v147 = p1 $nSeq1  - #(1)::CF,87496
87494 :: PRED :: IF :: Z :: if (v209 >= v146) goto 123::CD,87495:CD,87496:CD,87511
87497 :: EXPR :: reference :: [[D :: v150 = p0 $this .mat::
87496 :: PRED :: IF :: Z :: if (v217 >= v147) goto 123::CD,87500:CD,87505:CD,87511:CD,88125
87501 :: EXPR :: reference :: Ljava/lang/Object :: v152 = v150[v151]::
87500 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v217 + #(1)::
87505 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v209 + #(1)::
87506 :: EXPR :: reference :: D :: v154 = v152[v153]::DD,88125
87511 :: PRED :: IF :: Z :: if (p5 $gapE  == #(0)) goto 136::CD,87512:CD,87513:CD,87514:CD,88125
87513 :: PRED :: IF :: Z :: if (v217 != v148) goto 148::CD,87514:CD,87517:CD,88125
87512 :: EXPR :: assign :: Ljava/lang/Object :: v148 = p1 $nSeq1  - #(1)::CF,87513
87515 :: EXPR :: assign :: Ljava/lang/Object :: v149 = p2 $nSeq2  - #(1)::CF,87516
87514 :: PRED :: IF :: Z :: if (p6 $null  == #(0)) goto 154::CF,88125:CD,87515:CD,87516
87517 :: EXPR :: assign :: Ljava/lang/Object :: v155 = -(p3 $gapI )::DD,88125
87516 :: PRED :: IF :: Z :: if (v209 == v149) goto 154::CF,88125:CD,87517
87519 :: PRED :: IF :: Z :: if (v157 >= p2 $nSeq2 ) goto 216::CF,88131:CD,87520:CD,87551:CD,88127:CD,88128:CD,88129:CD,88130:CD,88132:CD,88133
87518 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v209 + #(1)::DD,87519
87520 :: EXPR :: assign :: Ljava/lang/Object :: v158 = v217 + #(2)::DD,88129
87522 :: EXPR :: reference :: [[D :: v159 = p0 $this .mat::
87525 :: EXPR :: reference :: Ljava/lang/Object :: v160 = v159[v172]::
87529 :: EXPR :: assign :: Ljava/lang/Object :: v161 = v210 + #(1)::
87530 :: EXPR :: reference :: D :: v162 = v160[v161]::DD,87534
87535 :: EXPR :: assign :: Z :: v164 = v163 < v173::DD,87536
87534 :: EXPR :: assign :: Ljava/lang/Object :: v163 = v162 - p3 $gapI ::DD,87535
87537 :: EXPR :: reference :: [[D :: v165 = p0 $this .mat::
87536 :: PRED :: IF :: Z :: if (v164 <= #(0)) goto 204::CF,88126:CD,87544:CD,87549
87540 :: EXPR :: reference :: Ljava/lang/Object :: v166 = v165[v172]::
87545 :: EXPR :: reference :: D :: v168 = v166[v167]::DD,87549
87544 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v210 + #(1)::
87549 :: EXPR :: assign :: Ljava/lang/Object :: v169 = v168 - p3 $gapI ::DD,88126
87551 :: PRED :: IF :: Z :: if (v172 < p1 $nSeq1 ) goto 169::CF,88131:CD,87529:CD,87534:CD,87535:CD,87536:CD,87550:CD,88126:CD,88127:CD,88128:CD,88129:CD,88130
87550 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v172 + #(1)::DD,88129:CF,88127
87553 :: PRED :: IF :: Z :: if (v175 >= p1 $nSeq1 ) goto 278::CF,88139:CD,87554:CD,87585:CD,88135:CD,88136:CD,88137:CD,88138:CD,88140:CD,88141
87552 :: EXPR :: assign :: Ljava/lang/Object :: v175 = v219 + #(1)::DD,87553
87554 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v211 + #(2)::DD,88137
87556 :: EXPR :: reference :: [[D :: v177 = p0 $this .mat::
87559 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v220 + #(1)::
87560 :: EXPR :: reference :: Ljava/lang/Object :: v179 = v177[v178]::
87564 :: EXPR :: reference :: D :: v180 = v179[v190]::DD,87568
87569 :: EXPR :: assign :: Z :: v182 = v181 < v191::DD,87570
87568 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 - p3 $gapI ::DD,87569
87571 :: EXPR :: reference :: [[D :: v183 = p0 $this .mat::
87570 :: PRED :: IF :: Z :: if (v182 <= #(0)) goto 266::CF,88134:CD,87574:CD,87583
87575 :: EXPR :: reference :: Ljava/lang/Object :: v185 = v183[v184]::
87574 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v220 + #(1)::
87579 :: EXPR :: reference :: D :: v186 = v185[v190]::DD,87583
87583 :: EXPR :: assign :: Ljava/lang/Object :: v187 = v186 - p3 $gapI ::DD,88134
87585 :: PRED :: IF :: Z :: if (v190 < p2 $nSeq2 ) goto 231::CF,88139:CD,87559:CD,87568:CD,87569:CD,87570:CD,87584:CD,88134:CD,88135:CD,88136:CD,88137:CD,88138
87584 :: EXPR :: assign :: Ljava/lang/Object :: v189 = v190 + #(1)::DD,88137:CF,88135
87586 :: EXPR :: reference :: [[D :: v194 = p0 $this .mat::
87589 :: EXPR :: reference :: Ljava/lang/Object :: v195 = v194[v221]::
87593 :: EXPR :: reference :: D :: v196 = v195[v214]::DD,87597
87597 :: EXPR :: assign :: Ljava/lang/Object :: v197 = v193 + v196::DD,87605:DD,88144:CF,87598
87599 :: EXPR :: assign :: Ljava/lang/Object :: v198 = -(p3 $gapI )::DD,88142
87598 :: PRED :: IF :: Z :: if (p5 $gapE  == #(0)) goto 303::CD,87599:CD,88142
87601 :: PRED :: IF :: Z :: if (p6 $null  == #(0)) goto 312::CD,87602:CD,88143
87602 :: EXPR :: assign :: Ljava/lang/Object :: v200 = -(p3 $gapI )::DD,88143
87605 :: EXPR :: assign :: Z :: v203 = v197 > v202::DD,87606
87604 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v199 + v201::DD,87605:DD,88144
87607 :: EXPR :: reference :: Ljava/lang/Object :: v204 = v19[v221]::
87606 :: PRED :: IF :: Z :: if (v203 >= #(0)) goto 337::CF,88144
87611 :: EXPR :: modify :: B :: v204[v214] = #(1)::
87615 :: EXPR :: reference :: [[D :: v206 = p0 $this .mat::
87618 :: EXPR :: reference :: Ljava/lang/Object :: v207 = v206[v221]::
87622 :: EXPR :: modify :: D :: v207[v214] = v205::
87627 :: PRED :: IF :: Z :: if (v209 >= #(0)) goto 78::CD,87493:CD,87494:CD,87518:CD,87519:CD,87552:CD,87553:CD,87597:CD,87598:CD,87601:CD,87604:CD,87605:CD,87606:CD,87626:CD,88125:CD,88131:CD,88132:CD,88133:CD,88139:CD,88140:CD,88141:CD,88142:CD,88143:CD,88144:CD,88145:CD,88146:CF,87628
87626 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v214 + #(-1)::DD,88146:CF,88145
87629 :: PRED :: IF :: Z :: if (v216 >= #(0)) goto 68::CD,87483:CD,87627:CD,87628:CD,88145:CD,88146:CD,88147
87628 :: EXPR :: assign :: Ljava/lang/Object :: v215 = v217 + #(-1)::DD,88147
87631 :: EXPR :: assign :: Ljava/lang/Object :: v20 = p1 $nSeq1  - #(1)::DD,88171
87633 :: EXPR :: assign :: Ljava/lang/Object :: v21 = p2 $nSeq2  - #(1)::DD,88170
87635 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v19[v138]::
87639 :: EXPR :: modify :: B :: v22[v130] = #(0)::
87643 :: EXPR :: assign :: Ljava/lang/Object :: v23 = p2 $nSeq2  - #(1)::CF,87644
87645 :: EXPR :: assign :: Ljava/lang/Object :: v24 = p1 $nSeq1  - #(1)::CF,87646
87644 :: PRED :: IF :: Z :: if (v130 >= v23) goto 432::CD,87645:CD,87646:CD,87661:CD,87670:CD,88148:CD,88149
87647 :: EXPR :: reference :: [[D :: v34 = p0 $this .mat::
87646 :: PRED :: IF :: Z :: if (v138 >= v24) goto 432::CD,87650:CD,87655:CD,87661:CD,87670:CD,88148:CD,88149
87651 :: EXPR :: reference :: Ljava/lang/Object :: v36 = v34[v35]::
87650 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v138 + #(1)::
87655 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v130 + #(1)::
87656 :: EXPR :: reference :: D :: v38 = v36[v37]::DD,88149
87661 :: PRED :: IF :: Z :: if (p5 $gapE  == #(0)) goto 460::CF,88148:CD,87662:CD,87663
87663 :: PRED :: IF :: Z :: if (v138 == v25) goto 460::CF,88148:CD,87664:CD,87665:CD,87666:CD,87667:CD,87668:CD,87669
87662 :: EXPR :: assign :: Ljava/lang/Object :: v25 = p1 $nSeq1  - #(1)::CF,87663
87665 :: EXPR :: assign :: Ljava/lang/Object :: v27 = p1 $nSeq1  - v138::DD,87666
87664 :: EXPR :: assign :: Ljava/lang/Object :: v26 = -(p3 $gapI )::DD,87669:CF,87665
87667 :: EXPR :: assign :: D :: v29 = CONVERT I to D v28::CF,87668
87666 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v27 - #(1)::CF,87667
87669 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v26 - v30::DD,88148
87668 :: EXPR :: assign :: Ljava/lang/Object :: v30 = p4 $null  * v29::CF,87669
87671 :: EXPR :: assign :: Ljava/lang/Object :: v33 = p2 $nSeq2  - #(1)::CF,87672
87670 :: PRED :: IF :: Z :: if (p6 $null  == #(0)) goto 489::CF,88149:CD,87671:CD,87672
87673 :: EXPR :: assign :: Ljava/lang/Object :: v39 = -(p3 $gapI )::DD,87678:CF,87674
87672 :: PRED :: IF :: Z :: if (v130 == v33) goto 489::CF,88149:CD,87673:CD,87674:CD,87675:CD,87676:CD,87677:CD,87678
87675 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v40 - #(1)::CF,87676
87674 :: EXPR :: assign :: Ljava/lang/Object :: v40 = p2 $nSeq2  - v130::DD,87675
87677 :: EXPR :: assign :: Ljava/lang/Object :: v43 = p4 $null  * v42::CF,87678
87676 :: EXPR :: assign :: D :: v42 = CONVERT I to D v41::CF,87677
87679 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v130 + #(1)::DD,87680
87678 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v39 - v43::DD,88149
87681 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v138 + #(2)::DD,88153
87680 :: PRED :: IF :: Z :: if (v46 >= p2 $nSeq2 ) goto 575::CF,88155:CD,87681:CD,87722:CD,88151:CD,88152:CD,88153:CD,88154:CD,88156:CD,88157
87683 :: EXPR :: reference :: [[D :: v49 = p0 $this .mat::
87686 :: EXPR :: reference :: Ljava/lang/Object :: v50 = v49[v72]::
87691 :: EXPR :: reference :: D :: v52 = v50[v51]::DD,87695
87690 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v131 + #(1)::
87695 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v52 - p3 $gapI ::DD,87700:CF,87696
87697 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v54 - #(1)::CF,87698
87696 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v72 - v139::DD,87697
87699 :: EXPR :: assign :: Ljava/lang/Object :: v57 = p4 $null  * v56::CF,87700
87698 :: EXPR :: assign :: D :: v56 = CONVERT I to D v55::CF,87699
87701 :: EXPR :: assign :: Z :: v59 = v58 < v73::DD,87702
87700 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v53 - v57::DD,87701
87703 :: EXPR :: reference :: [[D :: v60 = p0 $this .mat::
87702 :: PRED :: IF :: Z :: if (v59 <= #(0)) goto 563::CF,88150:CD,87710:CD,87715:CD,87716:CD,87717:CD,87718:CD,87719:CD,87720
87706 :: EXPR :: reference :: Ljava/lang/Object :: v61 = v60[v72]::
87711 :: EXPR :: reference :: D :: v63 = v61[v62]::DD,87715
87710 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v131 + #(1)::
87715 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - p3 $gapI ::DD,87720:CF,87716
87717 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v65 - #(1)::CF,87718
87716 :: EXPR :: assign :: Ljava/lang/Object :: v65 = v72 - v139::DD,87717
87719 :: EXPR :: assign :: Ljava/lang/Object :: v68 = p4 $null  * v67::CF,87720
87718 :: EXPR :: assign :: D :: v67 = CONVERT I to D v66::CF,87719
87721 :: EXPR :: assign :: Ljava/lang/Object :: v71 = v72 + #(1)::DD,88153:CF,88151
87720 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v64 - v68::DD,88150
87723 :: EXPR :: assign :: Ljava/lang/Object :: v75 = v140 + #(1)::DD,87724
87722 :: PRED :: IF :: Z :: if (v72 < p1 $nSeq1 ) goto 504::CF,88155:CD,87690:CD,87695:CD,87696:CD,87697:CD,87698:CD,87699:CD,87700:CD,87701:CD,87702:CD,87721:CD,88150:CD,88151:CD,88152:CD,88153:CD,88154
87725 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v132 + #(2)::DD,88161
87724 :: PRED :: IF :: Z :: if (v75 >= p1 $nSeq1 ) goto 661::CF,88163:CD,87725:CD,87766:CD,88159:CD,88160:CD,88161:CD,88162:CD,88164:CD,88165
87727 :: EXPR :: reference :: [[D :: v77 = p0 $this .mat::
87731 :: EXPR :: reference :: Ljava/lang/Object :: v79 = v77[v78]::
87730 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v141 + #(1)::
87735 :: EXPR :: reference :: D :: v80 = v79[v100]::DD,87739
87739 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 - p3 $gapI ::DD,87744:CF,87740
87741 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v82 - #(1)::CF,87742
87740 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v100 - v134::DD,87741
87743 :: EXPR :: assign :: Ljava/lang/Object :: v85 = p4 $null  * v84::CF,87744
87742 :: EXPR :: assign :: D :: v84 = CONVERT I to D v83::CF,87743
87745 :: EXPR :: assign :: Z :: v87 = v86 < v101::DD,87746
87744 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v81 - v85::DD,87745
87747 :: EXPR :: reference :: [[D :: v88 = p0 $this .mat::
87746 :: PRED :: IF :: Z :: if (v87 <= #(0)) goto 649::CF,88158:CD,87750:CD,87759:CD,87760:CD,87761:CD,87762:CD,87763:CD,87764
87751 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v88[v89]::
87750 :: EXPR :: assign :: Ljava/lang/Object :: v89 = v141 + #(1)::
87755 :: EXPR :: reference :: D :: v91 = v90[v100]::DD,87759
87759 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 - p3 $gapI ::DD,87764:CF,87760
87761 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::CF,87762
87760 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v100 - v134::DD,87761
87763 :: EXPR :: assign :: Ljava/lang/Object :: v96 = p4 $null  * v95::CF,87764
87762 :: EXPR :: assign :: D :: v95 = CONVERT I to D v94::CF,87763
87765 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v100 + #(1)::DD,88161:CF,88159
87764 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v92 - v96::DD,88158
87767 :: EXPR :: reference :: [[D :: v104 = p0 $this .mat::
87766 :: PRED :: IF :: Z :: if (v100 < p2 $nSeq2 ) goto 590::CF,88163:CD,87730:CD,87739:CD,87740:CD,87741:CD,87742:CD,87743:CD,87744:CD,87745:CD,87746:CD,87765:CD,88158:CD,88159:CD,88160:CD,88161:CD,88162
87770 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v104[v142]::
87774 :: EXPR :: reference :: D :: v106 = v105[v135]::DD,87778
87779 :: PRED :: IF :: Z :: if (p5 $gapE  == #(0)) goto 697::CD,87780:CD,87781:CD,87782:CD,87783:CD,87784:CD,87785:CD,88166
87778 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v103 + v106::DD,87796:DD,88168:CF,87779
87781 :: EXPR :: assign :: Ljava/lang/Object :: v109 = p1 $nSeq1  - #(1)::DD,87782
87780 :: EXPR :: assign :: Ljava/lang/Object :: v108 = -(p3 $gapI )::DD,87785:CF,87781
87783 :: EXPR :: assign :: D :: v111 = CONVERT I to D v110::CF,87784
87782 :: EXPR :: assign :: Ljava/lang/Object :: v110 = v109 - v142::CF,87783
87785 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v108 - v112::DD,88166
87784 :: EXPR :: assign :: Ljava/lang/Object :: v112 = p4 $null  * v111::CF,87785
87787 :: PRED :: IF :: Z :: if (p6 $null  == #(0)) goto 717::CD,87788:CD,87789:CD,87790:CD,87791:CD,87792:CD,87793:CD,88167
87789 :: EXPR :: assign :: Ljava/lang/Object :: v116 = p2 $nSeq2  - #(1)::DD,87790
87788 :: EXPR :: assign :: Ljava/lang/Object :: v115 = -(p3 $gapI )::DD,87793:CF,87789
87791 :: EXPR :: assign :: D :: v118 = CONVERT I to D v117::CF,87792
87790 :: EXPR :: assign :: Ljava/lang/Object :: v117 = v116 - v135::CF,87791
87793 :: EXPR :: assign :: Ljava/lang/Object :: v120 = v115 - v119::DD,88167
87792 :: EXPR :: assign :: Ljava/lang/Object :: v119 = p4 $null  * v118::CF,87793
87795 :: EXPR :: assign :: Ljava/lang/Object :: v122 = v114 + v121::DD,87796:DD,88168
87797 :: PRED :: IF :: Z :: if (v123 >= #(0)) goto 742::CF,88168
87796 :: EXPR :: assign :: Z :: v123 = v107 > v122::DD,87797
87798 :: EXPR :: reference :: Ljava/lang/Object :: v124 = v19[v142]::
87802 :: EXPR :: modify :: B :: v124[v135] = #(1)::
87806 :: EXPR :: reference :: [[D :: v126 = p0 $this .mat::
87809 :: EXPR :: reference :: Ljava/lang/Object :: v127 = v126[v142]::
87813 :: EXPR :: modify :: D :: v127[v135] = v125::
87817 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v135 + #(-1)::DD,88170:CF,88169
87819 :: EXPR :: assign :: Ljava/lang/Object :: v136 = v138 + #(-1)::DD,88171
87818 :: PRED :: IF :: Z :: if (v130 >= #(0)) goto 387::CD,87643:CD,87644:CD,87679:CD,87680:CD,87723:CD,87724:CD,87778:CD,87779:CD,87787:CD,87795:CD,87796:CD,87797:CD,87817:CD,88149:CD,88155:CD,88156:CD,88157:CD,88163:CD,88164:CD,88165:CD,88166:CD,88167:CD,88168:CD,88169:CD,88170:CF,87819
87821 :: EXPR :: modify :: I :: p0 $this .lcmp = #(0)::
87820 :: PRED :: IF :: Z :: if (v137 >= #(0)) goto 377::CD,87633:CD,87818:CD,87819:CD,88169:CD,88170:CD,88171
87824 :: EXPR :: reference :: [[D :: v227 = p0 $this .mat::
87827 :: EXPR :: reference :: Ljava/lang/Object :: v228 = v227[#(0)]::
87831 :: EXPR :: reference :: D :: v229 = v228[#(0)]::DD,88185
87837 :: PRED :: IF :: Z :: if (v260 != #(0)) goto 816::CD,87838:CD,87851:CD,87857:CD,87863:CD,87864:CD,88172:CD,88173:CD,88174:CD,88175:CD,88176
87838 :: PRED :: IF :: Z :: if (v249 != #(0)) goto 816::CD,87851:CD,87857:CD,87863:CD,87864:CD,88172:CD,88173:CD,88174:CD,88175:CD,88176
87840 :: EXPR :: reference :: [[D :: v230 = p0 $this .mat::
87843 :: EXPR :: reference :: Ljava/lang/Object :: v231 = v230[v260]::
87847 :: EXPR :: reference :: D :: v232 = v231[v249]::DD,87856:DD,88172
87851 :: PRED :: IF :: Z :: if (p5 $gapE  == #(0)) goto 848::CF,88172:CD,87852:CD,87853:CD,87854:CD,87855:CD,87856
87853 :: EXPR :: assign :: D :: v234 = CONVERT I to D v260::CF,87854
87852 :: EXPR :: assign :: Ljava/lang/Object :: v233 = -(p3 $gapI )::DD,87855:CF,87853
87855 :: EXPR :: assign :: Ljava/lang/Object :: v236 = v233 - v235::CF,87856
87854 :: EXPR :: assign :: Ljava/lang/Object :: v235 = p4 $null  * v234::CF,87855
87857 :: PRED :: IF :: Z :: if (p6 $null  == #(0)) goto 869::CF,88173:CD,87858:CD,87859:CD,87860:CD,87861:CD,87862
87856 :: EXPR :: assign :: Ljava/lang/Object :: v237 = v232 + v236::DD,88172
87859 :: EXPR :: assign :: D :: v240 = CONVERT I to D v249::CF,87860
87858 :: EXPR :: assign :: Ljava/lang/Object :: v239 = -(p3 $gapI )::DD,87861:CF,87859
87861 :: EXPR :: assign :: Ljava/lang/Object :: v242 = v239 - v241::CF,87862
87860 :: EXPR :: assign :: Ljava/lang/Object :: v241 = p4 $null  * v240::CF,87861
87863 :: EXPR :: assign :: Z :: v245 = v244 < v251::DD,87864
87862 :: EXPR :: assign :: Ljava/lang/Object :: v243 = v238 + v242::DD,88173
87865 :: EXPR :: assign :: Ljava/lang/Object :: v248 = v249 + #(1)::DD,88178:CF,88177
87864 :: PRED :: IF :: Z :: if (v245 <= #(0)) goto 885::CF,88174:CD,88175:CD,88176
87867 :: EXPR :: assign :: Ljava/lang/Object :: v254 = v260 + #(1)::DD,88182
87866 :: PRED :: IF :: Z :: if (v249 < p2 $nSeq2 ) goto 804::CD,87837:CD,87865:CD,88174:CD,88175:CD,88176:CD,88177:CD,88178:CD,88179:CD,88180:CD,88181:CF,87867
87868 :: PRED :: IF :: Z :: if (v255 < p1 $nSeq1 ) goto 799::CD,87866:CD,87867:CD,88177:CD,88178:CD,88179:CD,88180:CD,88181:CD,88182:CD,88183:CD,88184:CD,88185
87870 :: EXPR :: reference :: [[D :: v264 = p0 $this .mat::
87873 :: EXPR :: reference :: Ljava/lang/Object :: v265 = v264[v385]::
87877 :: EXPR :: reference :: D :: v266 = v265[v386]::DD,88194:DD,88212
87881 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 1061::CD,87882:CD,87911:CD,87912:CD,87941:CD,87943:CD,87980:CD,87981:CD,88018:CD,88189:CD,88190:CD,88191:CD,88192:CD,88193:CD,88194:CD,88198:CD,88199:CD,88200:CD,88201:CD,88202:CD,88203:CD,88207:CD,88208:CD,88209:CD,88210:CD,88211:CD,88212:CD,88216:CD,88217:CD,88218:CD,88219:CD,88220:CD,88221:CD,88222:CD,88223:CD,88224:CD,88225
87882 :: EXPR :: assign :: Ljava/lang/Object :: v317 = v385 + #(1)::DD,88193
87884 :: EXPR :: reference :: [[D :: v318 = p0 $this .mat::
87887 :: EXPR :: reference :: Ljava/lang/Object :: v319 = v318[v331]::
87891 :: EXPR :: reference :: D :: v320 = v319[v396]::DD,87895
87895 :: EXPR :: assign :: Ljava/lang/Object :: v321 = v320 - p3 $gapI ::DD,87896
87897 :: PRED :: IF :: Z :: if (v322 <= #(0)) goto 988::CF,88186:CD,87909:CD,88187:CD,88188
87896 :: EXPR :: assign :: Z :: v322 = v321 < v332::DD,87897
87898 :: EXPR :: reference :: [[D :: v323 = p0 $this .mat::
87901 :: EXPR :: reference :: Ljava/lang/Object :: v324 = v323[v331]::
87905 :: EXPR :: reference :: D :: v325 = v324[v396]::DD,87909
87909 :: EXPR :: assign :: Ljava/lang/Object :: v326 = v325 - p3 $gapI ::DD,88188:CF,88186
87911 :: PRED :: IF :: Z :: if (v331 < p1 $nSeq1 ) goto 949::CD,87895:CD,87896:CD,87897:CD,87910:CD,88186:CD,88187:CD,88188:CD,88189:CD,88190:CD,88191:CD,88192:CD,88193:CD,88194:CF,87912
87910 :: EXPR :: assign :: Ljava/lang/Object :: v329 = v331 + #(1)::DD,88193:CF,88189
87912 :: EXPR :: assign :: Ljava/lang/Object :: v333 = v396 + #(1)::DD,88202
87914 :: EXPR :: reference :: [[D :: v334 = p0 $this .mat::
87917 :: EXPR :: reference :: Ljava/lang/Object :: v335 = v334[v399]::
87921 :: EXPR :: reference :: D :: v336 = v335[v349]::DD,87925
87925 :: EXPR :: assign :: Ljava/lang/Object :: v337 = v336 - p3 $gapI ::DD,87926
87927 :: PRED :: IF :: Z :: if (v338 <= #(0)) goto 1046::CF,88195:CD,87939:CD,88196:CD,88197
87926 :: EXPR :: assign :: Z :: v338 = v337 < v350::DD,87927
87928 :: EXPR :: reference :: [[D :: v339 = p0 $this .mat::
87931 :: EXPR :: reference :: Ljava/lang/Object :: v340 = v339[v399]::
87935 :: EXPR :: reference :: D :: v341 = v340[v349]::DD,87939
87939 :: EXPR :: assign :: Ljava/lang/Object :: v342 = v341 - p3 $gapI ::DD,88197:CF,88195
87941 :: PRED :: IF :: Z :: if (v349 < p2 $nSeq2 ) goto 1007::CD,87925:CD,87926:CD,87927:CD,87940:CD,88195:CD,88196:CD,88197:CD,88198:CD,88199:CD,88200:CD,88201:CD,88202:CD,88203
87940 :: EXPR :: assign :: Ljava/lang/Object :: v346 = v349 + #(1)::DD,88202:CF,88198
87943 :: EXPR :: assign :: Ljava/lang/Object :: v267 = v385 + #(1)::DD,88211
87945 :: EXPR :: reference :: [[D :: v268 = p0 $this .mat::
87948 :: EXPR :: reference :: Ljava/lang/Object :: v269 = v268[v289]::
87952 :: EXPR :: reference :: D :: v270 = v269[v390]::DD,87956
87957 :: EXPR :: assign :: Ljava/lang/Object :: v272 = v289 - v389::CF,87958
87956 :: EXPR :: assign :: Ljava/lang/Object :: v271 = v270 - p3 $gapI ::DD,87960:CF,87957
87959 :: EXPR :: assign :: Ljava/lang/Object :: v274 = p4 $null  * v273::CF,87960
87958 :: EXPR :: assign :: D :: v273 = CONVERT I to D v272::CF,87959
87961 :: EXPR :: assign :: Z :: v276 = v275 < v290::DD,87962
87960 :: EXPR :: assign :: Ljava/lang/Object :: v275 = v271 - v274::DD,87961
87963 :: EXPR :: reference :: [[D :: v277 = p0 $this .mat::
87962 :: PRED :: IF :: Z :: if (v276 <= #(0)) goto 1127::CF,88204:CD,87974:CD,87975:CD,87976:CD,87977:CD,87978:CD,88205:CD,88206
87966 :: EXPR :: reference :: Ljava/lang/Object :: v278 = v277[v289]::
87970 :: EXPR :: reference :: D :: v279 = v278[v390]::DD,87974
87975 :: EXPR :: assign :: Ljava/lang/Object :: v281 = v289 - v389::CF,87976
87974 :: EXPR :: assign :: Ljava/lang/Object :: v280 = v279 - p3 $gapI ::DD,87978:CF,87975
87977 :: EXPR :: assign :: Ljava/lang/Object :: v283 = p4 $null  * v282::CF,87978
87976 :: EXPR :: assign :: D :: v282 = CONVERT I to D v281::CF,87977
87979 :: EXPR :: assign :: Ljava/lang/Object :: v287 = v289 + #(1)::DD,88211:CF,88207
87978 :: EXPR :: assign :: Ljava/lang/Object :: v284 = v280 - v283::DD,88206:CF,88204
87981 :: EXPR :: assign :: Ljava/lang/Object :: v291 = v390 + #(1)::DD,88220
87980 :: PRED :: IF :: Z :: if (v289 < p1 $nSeq1 ) goto 1068::CD,87956:CD,87957:CD,87958:CD,87959:CD,87960:CD,87961:CD,87962:CD,87979:CD,88204:CD,88205:CD,88206:CD,88207:CD,88208:CD,88209:CD,88210:CD,88211:CD,88212:CF,87981
87983 :: EXPR :: reference :: [[D :: v292 = p0 $this .mat::
87986 :: EXPR :: reference :: Ljava/lang/Object :: v293 = v292[v393]::
87990 :: EXPR :: reference :: D :: v294 = v293[v315]::DD,87994
87995 :: EXPR :: assign :: Ljava/lang/Object :: v296 = v315 - v394::CF,87996
87994 :: EXPR :: assign :: Ljava/lang/Object :: v295 = v294 - p3 $gapI ::DD,87998:CF,87995
87997 :: EXPR :: assign :: Ljava/lang/Object :: v298 = p4 $null  * v297::CF,87998
87996 :: EXPR :: assign :: D :: v297 = CONVERT I to D v296::CF,87997
87999 :: EXPR :: assign :: Z :: v300 = v299 < v316::DD,88000
87998 :: EXPR :: assign :: Ljava/lang/Object :: v299 = v295 - v298::DD,87999
88001 :: EXPR :: reference :: [[D :: v301 = p0 $this .mat::
88000 :: PRED :: IF :: Z :: if (v300 <= #(0)) goto 1205::CF,88213:CD,88012:CD,88013:CD,88014:CD,88015:CD,88016:CD,88214:CD,88215
88004 :: EXPR :: reference :: Ljava/lang/Object :: v302 = v301[v393]::
88008 :: EXPR :: reference :: D :: v303 = v302[v315]::DD,88012
88013 :: EXPR :: assign :: Ljava/lang/Object :: v305 = v315 - v394::CF,88014
88012 :: EXPR :: assign :: Ljava/lang/Object :: v304 = v303 - p3 $gapI ::DD,88016:CF,88013
88015 :: EXPR :: assign :: Ljava/lang/Object :: v307 = p4 $null  * v306::CF,88016
88014 :: EXPR :: assign :: D :: v306 = CONVERT I to D v305::CF,88015
88017 :: EXPR :: assign :: Ljava/lang/Object :: v312 = v315 + #(1)::DD,88220:CF,88216
88016 :: EXPR :: assign :: Ljava/lang/Object :: v308 = v304 - v307::DD,88215:CF,88213
88018 :: PRED :: IF :: Z :: if (v315 < p2 $nSeq2 ) goto 1146::CF,88222:CD,87994:CD,87995:CD,87996:CD,87997:CD,87998:CD,87999:CD,88000:CD,88017:CD,88213:CD,88214:CD,88215:CD,88216:CD,88217:CD,88218:CD,88219:CD,88220:CD,88221
88020 :: EXPR :: reference :: [I :: v355 = p0 $this .align_se1::
88023 :: EXPR :: reference :: I :: v356 = p0 $this .lcmp::
88026 :: EXPR :: modify :: I :: v355[v356] = v364::
88030 :: EXPR :: reference :: [I :: v357 = p0 $this .align_se2::
88033 :: EXPR :: reference :: I :: v358 = p0 $this .lcmp::
88036 :: EXPR :: modify :: I :: v357[v358] = #(-1)::
88040 :: EXPR :: reference :: I :: v359 = p0 $this .lcmp::DD,88043
88043 :: EXPR :: assign :: Ljava/lang/Object :: v360 = v359 + #(1)::DD,88044
88044 :: EXPR :: modify :: I :: p0 $this .lcmp = v360::
88047 :: EXPR :: assign :: Ljava/lang/Object :: v361 = v364 + #(1)::DD,88228:CF,88048
88049 :: PRED :: IF :: Z :: if (v364 < v351) goto 1222::CD,88043:CD,88047:CD,88048:CD,88226:CD,88227:CD,88228
88048 :: EXPR :: assign :: Ljava/lang/Object :: v362 = v363 + #(1)::DD,88226
88051 :: EXPR :: reference :: [I :: v365 = p0 $this .align_se1::
88054 :: EXPR :: reference :: I :: v366 = p0 $this .lcmp::
88057 :: EXPR :: modify :: I :: v365[v366] = #(-1)::
88061 :: EXPR :: reference :: [I :: v367 = p0 $this .align_se2::
88064 :: EXPR :: reference :: I :: v368 = p0 $this .lcmp::
88067 :: EXPR :: modify :: I :: v367[v368] = v374::
88071 :: EXPR :: reference :: I :: v369 = p0 $this .lcmp::DD,88074
88075 :: EXPR :: modify :: I :: p0 $this .lcmp = v370::
88074 :: EXPR :: assign :: Ljava/lang/Object :: v370 = v369 + #(1)::DD,88075
88079 :: EXPR :: assign :: Ljava/lang/Object :: v372 = v373 + #(1)::DD,88229
88078 :: EXPR :: assign :: Ljava/lang/Object :: v371 = v374 + #(1)::DD,88230:CF,88079
88081 :: EXPR :: reference :: [I :: v375 = p0 $this .align_se1::
88080 :: PRED :: IF :: Z :: if (v374 < v352) goto 1273::CD,88074:CD,88078:CD,88079:CD,88229:CD,88230
88084 :: EXPR :: reference :: I :: v376 = p0 $this .lcmp::
88087 :: EXPR :: modify :: I :: v375[v376] = v351::
88091 :: EXPR :: reference :: [I :: v377 = p0 $this .align_se2::
88094 :: EXPR :: reference :: I :: v378 = p0 $this .lcmp::
88097 :: EXPR :: modify :: I :: v377[v378] = v352::
88101 :: EXPR :: reference :: I :: v379 = p0 $this .lcmp::DD,88104
88105 :: EXPR :: modify :: I :: p0 $this .lcmp = v380::
88104 :: EXPR :: assign :: Ljava/lang/Object :: v380 = v379 + #(1)::DD,88105
88108 :: EXPR :: reference :: Ljava/lang/Object :: v381 = v19[v363]::
88112 :: EXPR :: reference :: B :: v382 = v381[v373]::DD,88116
88116 :: PRED :: IF :: Z :: if (v382 == #(0)) goto 1362::CD,88118:CD,88119:CD,88120:CD,88231:CD,88232
88119 :: EXPR :: assign :: Ljava/lang/Object :: v384 = v373 + #(1)::DD,88232:CF,88231
88118 :: EXPR :: assign :: Ljava/lang/Object :: v383 = v363 + #(1)::DD,88231:CF,88119
88121 :: PRED :: IF :: Z :: if (v386 < p2 $nSeq2 ) goto 923::CD,87881:CD,88049:CD,88080:CD,88104:CD,88116:CD,88222:CD,88223:CD,88224:CD,88225:CD,88226:CD,88227:CD,88228:CD,88229:CD,88230
88120 :: PRED :: IF :: Z :: if (v385 >= p1 $nSeq1 ) goto 1382::CD,88121
88123 :: EXPR :: assign :: null :: PHI v13 = #(1), #(0)::DD,87480:DD,87881:CF,87466
88125 :: EXPR :: assign :: null :: PHI v156 = v154, #(0.0 d), #(0.0 d), v155::DD,88130:DD,88133:CF,87518
88124 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,87473:DD,87474
88127 :: EXPR :: assign :: null :: PHI v218 = v217, v218::CF,88128:DD,88127:DD,88131
88126 :: EXPR :: assign :: null :: PHI v170 = v173, v169::DD,88130:CF,87550
88129 :: EXPR :: assign :: null :: PHI v172 = v158, v171::CF,88130:DD,87550:DD,87551
88128 :: EXPR :: assign :: null :: PHI v210 = v209, v210::CF,88129:DD,87529:DD,87544:DD,88128:DD,88132
88131 :: EXPR :: assign :: null :: PHI v219 = v217, v218::CF,88132:DD,87552:DD,88135:DD,88139
88130 :: EXPR :: assign :: null :: PHI v173 = v156, v170::DD,87535:DD,88126:DD,88133:CF,87551
88133 :: EXPR :: assign :: null :: PHI v174 = v156, v173::DD,88138:DD,88141:CF,87552
88132 :: EXPR :: assign :: null :: PHI v211 = v209, v210::CF,88133:DD,87554:DD,88136:DD,88140
88135 :: EXPR :: assign :: null :: PHI v220 = v219, v220::CF,88136:DD,87559:DD,87574:DD,88135:DD,88139
88134 :: EXPR :: assign :: null :: PHI v188 = v191, v187::DD,88138:CF,87584
88137 :: EXPR :: assign :: null :: PHI v190 = v176, v189::CF,88138:DD,87584:DD,87585
88136 :: EXPR :: assign :: null :: PHI v213 = v211, v213::CF,88137:DD,88136:DD,88140
88139 :: EXPR :: assign :: null :: PHI v221 = v219, v220::CF,88140:DD,88145
88138 :: EXPR :: assign :: null :: PHI v191 = v174, v188::DD,87569:DD,88134:DD,88141:CF,87585
88141 :: EXPR :: assign :: null :: PHI v193 = v174, v191::DD,87597
88140 :: EXPR :: assign :: null :: PHI v214 = v211, v213::CF,88141:DD,87626
88143 :: EXPR :: assign :: null :: PHI v201 = v200, #(0.0 d)::CF,87604
88142 :: EXPR :: assign :: null :: PHI v199 = v198, #(0.0 d)::DD,87604:CF,87601
88145 :: EXPR :: assign :: null :: PHI v217 = v216, v221::CF,88146:DD,87496:DD,87500:DD,87513:DD,87520:DD,87628:DD,88127:DD,88131
88144 :: EXPR :: assign :: null :: PHI v205 = v197, v202::DD,87622
88147 :: EXPR :: assign :: null :: PHI v216 = v143, v215::DD,87629:DD,88145
88146 :: EXPR :: assign :: null :: PHI v209 = v144, v208::DD,87494:DD,87505:DD,87516:DD,87518:DD,87627:DD,88128:DD,88132
88149 :: EXPR :: assign :: null :: PHI v45 = v38, v32, v32, v44::DD,88154:DD,88157:CF,87679
88148 :: EXPR :: assign :: null :: PHI v32 = #(0.0 d), #(0.0 d), v31::DD,88149:CF,87670
88151 :: EXPR :: assign :: null :: PHI v139 = v138, v139::CF,88152:DD,87696:DD,87716:DD,88151:DD,88155
88150 :: EXPR :: assign :: null :: PHI v70 = v73, v69::DD,88154:CF,87721
88153 :: EXPR :: assign :: null :: PHI v72 = v48, v71::CF,88154:DD,87696:DD,87716:DD,87721:DD,87722
88152 :: EXPR :: assign :: null :: PHI v131 = v130, v131::CF,88153:DD,87690:DD,87710:DD,88152:DD,88156
88155 :: EXPR :: assign :: null :: PHI v140 = v138, v139::CF,88156:DD,87723:DD,88159:DD,88163
88154 :: EXPR :: assign :: null :: PHI v73 = v45, v70::DD,87701:DD,88150:DD,88157:CF,87722
88157 :: EXPR :: assign :: null :: PHI v74 = v45, v73::DD,88162:DD,88165:CF,87723
88156 :: EXPR :: assign :: null :: PHI v132 = v130, v131::CF,88157:DD,87725:DD,88160:DD,88164
88159 :: EXPR :: assign :: null :: PHI v141 = v140, v141::CF,88160:DD,87730:DD,87750:DD,88159:DD,88163
88158 :: EXPR :: assign :: null :: PHI v98 = v101, v97::DD,88162:CF,87765
88161 :: EXPR :: assign :: null :: PHI v100 = v76, v99::CF,88162:DD,87740:DD,87760:DD,87765:DD,87766
88160 :: EXPR :: assign :: null :: PHI v134 = v132, v134::CF,88161:DD,87740:DD,87760:DD,88160:DD,88164
88163 :: EXPR :: assign :: null :: PHI v142 = v140, v141::CF,88164:DD,87782:DD,88169
88162 :: EXPR :: assign :: null :: PHI v101 = v74, v98::DD,87745:DD,88158:DD,88165:CF,87766
88165 :: EXPR :: assign :: null :: PHI v103 = v74, v101::DD,87778
88164 :: EXPR :: assign :: null :: PHI v135 = v132, v134::CF,88165:DD,87790:DD,87817
88167 :: EXPR :: assign :: null :: PHI v121 = v120, #(0.0 d)::CF,87795
88166 :: EXPR :: assign :: null :: PHI v114 = v113, #(0.0 d)::DD,87795:CF,87787
88169 :: EXPR :: assign :: null :: PHI v138 = v137, v142::CF,88170:DD,87646:DD,87650:DD,87663:DD,87665:DD,87681:DD,87819:DD,88151:DD,88155
88168 :: EXPR :: assign :: null :: PHI v125 = v107, v122::DD,87813
88171 :: EXPR :: assign :: null :: PHI v137 = v20, v136::DD,87820:DD,88169
88170 :: EXPR :: assign :: null :: PHI v130 = v21, v129::DD,87644:DD,87655:DD,87672:DD,87674:DD,87679:DD,87818:DD,88152:DD,88156
88173 :: EXPR :: assign :: null :: PHI v244 = v238, v243::DD,87863:DD,88176
88172 :: EXPR :: assign :: null :: PHI v238 = v232, v237::DD,87862:DD,88173:CF,87857
88175 :: EXPR :: assign :: null :: PHI v252 = v253, v253, v249::CF,88176:DD,88180
88174 :: EXPR :: assign :: null :: PHI v261 = v262, v262, v260::CF,88175:DD,88179
88177 :: EXPR :: assign :: null :: PHI v260 = v255, v260::CF,88178:DD,87837:DD,87853:DD,87867:DD,88174:DD,88177
88176 :: EXPR :: assign :: null :: PHI v247 = v251, v251, v244::DD,88181:CF,87865
88179 :: EXPR :: assign :: null :: PHI v262 = v263, v261::CF,88180:DD,88174:DD,88183
88178 :: EXPR :: assign :: null :: PHI v249 = #(0), v248::CF,88179:DD,87838:DD,87859:DD,87865:DD,87866:DD,88175
88181 :: EXPR :: assign :: null :: PHI v251 = v259, v247::DD,87863:DD,88176:DD,88185:CF,87866
88180 :: EXPR :: assign :: null :: PHI v253 = v257, v252::CF,88181:DD,88175:DD,88184
88183 :: EXPR :: assign :: null :: PHI v263 = #(0), v262::CF,88184:DD,88179:DD,88231
88182 :: EXPR :: assign :: null :: PHI v255 = #(0), v254::CF,88183:DD,87868:DD,88177
88185 :: EXPR :: assign :: null :: PHI v259 = v229, v251::DD,88181:CF,87868
88184 :: EXPR :: assign :: null :: PHI v257 = #(0), v253::CF,88185:DD,88180:DD,88232
88187 :: EXPR :: assign :: null :: PHI v398 = v397, v396::CF,88188:DD,88192
88186 :: EXPR :: assign :: null :: PHI v327 = v330, v331::CF,88187:DD,88191
88189 :: EXPR :: assign :: null :: PHI v395 = v385, v395::CF,88190:DD,88189:DD,88198
88188 :: EXPR :: assign :: null :: PHI v328 = v332, v326::DD,88194:CF,87910
88191 :: EXPR :: assign :: null :: PHI v330 = v385, v327::CF,88192:DD,88186:DD,88200
88190 :: EXPR :: assign :: null :: PHI v396 = v386, v396::CF,88191:DD,87912:DD,88187:DD,88190:DD,88199
88193 :: EXPR :: assign :: null :: PHI v331 = v317, v329::CF,88194:DD,87910:DD,87911:DD,88186
88192 :: EXPR :: assign :: null :: PHI v397 = v386, v398::CF,88193:DD,88187:DD,88201
88195 :: EXPR :: assign :: null :: PHI v343 = v347, v399::CF,88196:DD,88200
88194 :: EXPR :: assign :: null :: PHI v332 = v266, v328::DD,87896:DD,88188:DD,88203:CF,87911
88197 :: EXPR :: assign :: null :: PHI v345 = v350, v342::DD,88203:CF,87940
88196 :: EXPR :: assign :: null :: PHI v344 = v348, v349::CF,88197:DD,88201
88199 :: EXPR :: assign :: null :: PHI v400 = v396, v400::CF,88200:DD,88199:DD,88223
88198 :: EXPR :: assign :: null :: PHI v399 = v395, v399::CF,88199:DD,88195:DD,88198:DD,88222
88201 :: EXPR :: assign :: null :: PHI v348 = v397, v344::CF,88202:DD,88196:DD,88225
88200 :: EXPR :: assign :: null :: PHI v347 = v330, v343::CF,88201:DD,88195:DD,88224
88203 :: EXPR :: assign :: null :: PHI v350 = v332, v345::DD,87926:DD,88197:CF,87941
88202 :: EXPR :: assign :: null :: PHI v349 = v333, v346::CF,88203:DD,87940:DD,87941:DD,88196
88205 :: EXPR :: assign :: null :: PHI v392 = v391, v390::CF,88206:DD,88210
88204 :: EXPR :: assign :: null :: PHI v285 = v288, v289::CF,88205:DD,88209
88207 :: EXPR :: assign :: null :: PHI v389 = v385, v389::CF,88208:DD,87957:DD,87975:DD,88207:DD,88216
88206 :: EXPR :: assign :: null :: PHI v286 = v290, v284::DD,88212:CF,87979
88209 :: EXPR :: assign :: null :: PHI v288 = v385, v285::CF,88210:DD,88204:DD,88218
88208 :: EXPR :: assign :: null :: PHI v390 = v386, v390::CF,88209:DD,87981:DD,88205:DD,88208:DD,88217
88211 :: EXPR :: assign :: null :: PHI v289 = v267, v287::CF,88212:DD,87957:DD,87975:DD,87979:DD,87980:DD,88204
88210 :: EXPR :: assign :: null :: PHI v391 = v386, v392::CF,88211:DD,88205:DD,88219
88213 :: EXPR :: assign :: null :: PHI v309 = v313, v393::CF,88214:DD,88218
88212 :: EXPR :: assign :: null :: PHI v290 = v266, v286::DD,87961:DD,88206:DD,88221:CF,87980
88215 :: EXPR :: assign :: null :: PHI v311 = v316, v308::DD,88221:CF,88017
88214 :: EXPR :: assign :: null :: PHI v310 = v314, v315::CF,88215:DD,88219
88217 :: EXPR :: assign :: null :: PHI v394 = v390, v394::CF,88218:DD,87995:DD,88013:DD,88217:DD,88223
88216 :: EXPR :: assign :: null :: PHI v393 = v389, v393::CF,88217:DD,88213:DD,88216:DD,88222
88219 :: EXPR :: assign :: null :: PHI v314 = v391, v310::CF,88220:DD,88214:DD,88225
88218 :: EXPR :: assign :: null :: PHI v313 = v288, v309::CF,88219:DD,88213:DD,88224
88221 :: EXPR :: assign :: null :: PHI v316 = v290, v311::DD,87999:DD,88215:CF,88018
88220 :: EXPR :: assign :: null :: PHI v315 = v291, v312::CF,88221:DD,87995:DD,88013:DD,88017:DD,88018:DD,88214
88223 :: EXPR :: assign :: null :: PHI v402 = v400, v394::CF,88224:DD,88227
88222 :: EXPR :: assign :: null :: PHI v401 = v399, v393::CF,88223:DD,88226:DD,88228
88225 :: EXPR :: assign :: null :: PHI v352 = v348, v314::DD,88080:DD,88097
88224 :: EXPR :: assign :: null :: PHI v351 = v347, v313::CF,88225:DD,88049:DD,88087
88227 :: EXPR :: assign :: null :: PHI v403 = v402, v403::CF,88228:DD,88227:DD,88229:DD,88230
88226 :: EXPR :: assign :: null :: PHI v363 = v401, v362::CF,88227:DD,88048:DD,88118
88229 :: EXPR :: assign :: null :: PHI v373 = v403, v372::CF,88230:DD,88079:DD,88119
88228 :: EXPR :: assign :: null :: PHI v364 = v401, v361::DD,88026:DD,88047:DD,88049
88231 :: EXPR :: assign :: null :: PHI v385 = v263, v383::CF,88232:DD,87882:DD,87943:DD,88120:DD,88189:DD,88191:DD,88207:DD,88209
88230 :: EXPR :: assign :: null :: PHI v374 = v403, v371::DD,88067:DD,88078:DD,88080
88232 :: EXPR :: assign :: null :: PHI v386 = v257, v384::DD,88121:DD,88190:DD,88192:DD,88208:DD,88210:CF,88120
88790 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
88793 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
88797 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
88796 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,88797
88809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,88810:CD,88816
88810 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::JM,87319
88813 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,88816
88816 :: NORM :: compound :: [[D :: return v3::CF,88810
88849 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,76241:JM,88933:JM,91357:JM,95360
88848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,88849:CD,88852:CD,88856:CD,88893:CD,88895
88852 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,88856:JM,88895:CL,103501
88857 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
88856 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,88895:CD,88857:CD,88861:CD,88865
88861 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,88865:CL,103516
88865 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,88868:CD,88873:CD,88874:CD,88883:CD,88889:CD,88894:CD,88895
88868 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,88873
88873 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,88874:DD,88894
88874 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,88894:CD,88877:CD,88882
88877 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,88882
88883 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,88895:CD,88884
88882 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,88894
88884 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,88895
88889 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,88895
88893 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,88849
88895 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,88893
88894 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,88883:DD,88895
88917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.getOneLetter(org.biojava.nbio.structure.Group)::CE,88918:CD,88925:CD,88929:CD,88933
88918 :: EXIT :: exit :: C :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.getOneLetter(org.biojava.nbio.structure.Group)::JM,76584:JM,76610:JM,76638:JM,76654
88925 :: CALL :: call :: Ljava/lang/Character :: v6 = get1LetterCode(v4)::JM,88933:CL,88848
88929 :: CALL :: call :: C :: v8 = v6.charValue()::JM,88933
88933 :: NORM :: compound :: C :: return v8::DD,88918
88957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.model.AFPChain.getDescription2()::CE,88958:CD,88964
88958 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.model.AFPChain.getDescription2()::
88961 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description2::DD,88964
88964 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,88958
88993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CD,88999
88999 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::CL,103552
89233 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,89234
89234 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,103973
89486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,89491
89491 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,104211
89511 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,89516
89516 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,104223
89543 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::JM,84763:JM,85670
89542 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::CE,89543:CD,89549
89546 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,89549
89549 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,89543
89551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,89558:CD,89562
89555 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,89562
89558 :: CALL :: call :: Z :: v5 = v3.get()::JM,89562
89562 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,89564:CD,89568:CD,89572:CD,89578
89564 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,89568:CL,104489
89569 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,104527
89568 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,89569
89572 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,104619
89575 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,89578
89578 :: CALL :: call :: V :: v11.set(#(1))::JM,89578
89603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,89604:CD,89607:CD,89611:CD,89619:CD,89627:CD,89635:CD,89643:CD,89651:CD,89659:CD,89667:CD,89675:CD,89683:CD,89691:CD,89699:CD,89707:CD,89711
89604 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,79795
89607 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
89611 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,89711
89619 :: CALL :: call :: V :: v5.setClassId(v8)::CL,104686
89627 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,104706
89635 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,104726
89643 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,104746
89651 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,104766
89659 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,104786
89667 :: CALL :: call :: V :: v5.setPx(v26)::CL,104806
89675 :: CALL :: call :: V :: v5.setRanges(v29)::CL,104826
89683 :: CALL :: call :: V :: v5.setScopId(v32)::CL,104837
89691 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,104857
89699 :: CALL :: call :: V :: v5.setSunid(v38)::CL,104877
89707 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,104897
89711 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,89604
89741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,89742:CD,89748:CD,89801:CD,89802:CD,89810:CD,89815:CD,89820:CD,89833:CD,89834
89742 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
89745 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,89748
89748 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,89750:CD,89754:CD,89762:CD,89767:CD,89775:CD,89779:CD,89789
89750 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
89754 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
89762 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
89767 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
89775 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,89851
89779 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,89783:CL,79139
89783 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
89786 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,89789
89789 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,89793
89790 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,89797
89793 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,89797
89797 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
89801 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
89802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
89807 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
89810 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
89815 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
89820 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
89830 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,89833
89833 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,89742
89834 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
89851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,89855
89855 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,88993
89865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,89866:CD,89869:CD,89871:CD,89875:CD,89876:CD,89884:CD,89889:CD,89891:CD,89892:CD,89898:CD,89903:CD,89908:CD,89918:CD,89919
89866 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,79928:JM,79983
89869 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,89889:JM,89884:JM,89871
89871 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,89889:JM,89884:JM,89871
89875 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,89889:JM,89884
89876 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
89884 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,89889:JM,89884
89889 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,89918
89891 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
89892 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
89898 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
89903 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
89908 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
89919 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
89918 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,89866
90217 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,104000:JM,104028
90216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,90217:JM,46852:JM,46805:JM,46758:JM,46824:JM,46809:JM,46857:JM,46826:JM,46765:JM,46877:JM,46831:CD,90228:CD,90229:CD,90230:CD,90238:CD,90242:CD,90250:CD,90255:CD,90273
90229 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
90228 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,90273:CF,90229
90230 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
90238 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,90238
90242 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
90247 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
90250 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
90255 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
90273 :: NORM :: compound :: Ljava/io/File :: return v7::DD,90217
91043 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91047
91047 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
91050 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
91053 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91057
91057 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
91060 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91064
91064 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
91067 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91071
91071 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
91074 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,91078
91078 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
91081 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91085
91085 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
91088 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91092
91092 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
91095 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:DD,91099
91099 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
91123 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,148309
91122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,91123:CD,91129
91126 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,91129
91129 :: NORM :: compound :: Z :: return v3::CF,91123
91131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,91139:CD,91143:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91139 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,91143:CL,97711
91143 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,91145:CD,91154:CD,91183:CD,91187:CD,91192:CD,91281:CD,91287:CD,91291:CD,91297:CD,91301:CD,91307:CD,91311:CD,91317:CD,91322:CD,91332:JM,105813:JM,105816:JM,105819:CD,91342:CD,91347:CD,91371:CD,91403:CD,91435:CD,91436:CD,91442:JM,91744:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91834:JM,91838:CD,91458:CD,91463:CD,91578:CD,91588:CD,91632:CD,92004:CD,92006:CD,92009:JM,91904:JM,91874:JM,91854:JM,91705:JM,91229
91145 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91151 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,91154
91155 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,91159
91154 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,92004:CD,91155:JM,101666:JM,101654:JM,101673:JM,101659:CD,91165:CD,91175
91159 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
91165 :: CALL :: call :: V :: v16.setChainID(v11)::CL,101697
91169 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
91172 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
91175 :: CALL :: call :: Z :: v22 = v19.add(v20)::
91183 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,91192:CL,77766
91187 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91192 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,92006:CD,91199:CD,91213:CD,91219:CD,91239:CD,91264:CD,91269:CD,92005
91199 :: CALL :: call :: V :: v29.addGroup(v30)::CL,101844
91213 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,91219:JM,92005:CL,105757
91219 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,91220:CD,91224:CD,91229:CD,91233:CD,92005
91220 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,91229:CL,77766
91224 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,91229:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91838
91229 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,92005:CD,91233
91233 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,92005:CL,105757
91239 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,91240:JM,101666:JM,101654:JM,101673:JM,101659:CD,91250
91240 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,91244
91244 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
91250 :: CALL :: call :: V :: v48.setChainID(v11)::CL,101697
91255 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
91258 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,91269
91261 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,91269
91264 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,91269
91269 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,92006:CD,91276
91270 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
91273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
91276 :: CALL :: call :: Z :: v57 = v54.add(v55)::
91281 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91287 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91291 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91297 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91301 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91307 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91311 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91317 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91322 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,91744:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91739:JM,91834:JM,91838
91332 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,91744:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91739:JM,91834:JM,91838
91342 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,91744:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91739:JM,91834:JM,91838
91347 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,91348:CD,91353:CD,91357
91348 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,88848
91353 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,91357:CL,88848
91357 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,91358
91358 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
91368 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,91371
91371 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,91372:CD,91385:CD,91392:CD,91399:CF,91403
91372 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,105830
91385 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,61059:CL,60646
91392 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,60626
91399 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,105908
91403 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,91435:CD,91404:CD,91417:CD,91424:CD,91431
91404 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,105830
91417 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,61059:CL,60646
91424 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,60626
91431 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,105908
91435 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,91744:JM,91347:JM,91842:JM,91929:JM,91945:JM,91435:JM,91834:JM,91838:JM,91521:JM,91904:JM,91874:JM,91815:JM,91854:JM,91829:JM,91705:JM,91801:JM,91192:JM,91739:JM,91229
91436 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91442 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91458 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,91463:CL,44027
91463 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,91470:CD,91477:CD,91480:CD,91493:CD,91500:CD,91507:CD,91512:CD,91516:CD,91521:CD,92009
91470 :: CALL :: call :: V :: v157.addGroup(v158)::CL,101844
91477 :: CALL :: call :: V :: v160.trimToSize()::CL,106002
91480 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,105830
91493 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,61059:CL,60646
91500 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,60626
91507 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,105908
91512 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,91521
91516 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,91521
91521 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,92009:CD,91524:CD,91532:CD,91537:CD,91542:CD,91547:CD,91555:CD,91563:CD,91567
91524 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
91532 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
91537 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
91542 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
91547 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
91555 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,92009:CL,106111
91563 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,91567:CL,54975
91567 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,92009:CD,91571
91571 :: CALL :: call :: V :: v152.setChain(v155)::CL,106357
91575 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,91578
91579 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
91578 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,91579
91582 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,91588
91585 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,91588
91588 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,91591:CD,91599:CD,91604:CD,91609:CD,91620:CD,91623
91591 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
91596 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
91599 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
91604 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
91609 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
91617 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
91620 :: CALL :: call :: V :: v188.clear()::
91623 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,106387
91626 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,91632
91629 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,91632
91632 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,91635:CD,91643:CD,91648:CD,91653:CD,91663:CD,91668:CD,91673:CD,91688
91635 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
91640 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
91643 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
91648 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
91653 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
91663 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
91668 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91673 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91682 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,91688
91685 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,91688
91688 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,91690:CD,91699:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91690 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91696 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,91699
91699 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,91700:CD,91705:CD,91717:CD,91721:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91700 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91705 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,91717:CD,91721
91717 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,91721:CL,106466
91721 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,91725:CD,91729:CD,91747:CD,91748:CD,91757:CD,91763:CD,91767:JM,73732:JM,73737:CD,91775:CD,91783:CD,91787:CD,91791:CD,91797:CD,91801:CD,91805:CD,91811:CD,91815:CD,91819:CD,91825:CD,91829:CD,91833:CD,91846:CD,91850:CD,91854:CD,91870:CD,91874:CD,91900:CD,91904:CD,91962:CD,91966:CD,91986:CD,91991:CD,92010:CD,92011:JM,91744:JM,91842:JM,91945:JM,91435:JM,91347:JM,91705:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91725 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,91729:CL,106466
91729 :: EXPR :: assign :: I :: v208 = v207.length::DD,91747
91731 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,91744:JM,91739
91735 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91739 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,91744:JM,91739:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91435:JM,91834:JM,91838
91744 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,91746:CD,91747:CD,92010:CD,92011
91747 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,92011:CD,91735:CD,91739:CD,91744
91746 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,92010
91748 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,91757:CD,91763:CD,91767:JM,73732:JM,73737:CD,91775:CD,91783:CD,91787:CD,91791:CD,91797:CD,91801:CD,91805:CD,91811:CD,91815:CD,91819:CD,91825:CD,91829:CD,91833:CD,91846:CD,91850:CD,91854:CD,91870:CD,91874:CD,91900:CD,91904:CD,91962:CD,91966:CD,91986:CD,91991:JM,91744:JM,91842:JM,91945:JM,91435:JM,91347:JM,91705:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91757 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91763 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91767 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91775 :: CALL :: call :: V :: v224.setPDBserial(v223)::CL,73905
91783 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91787 :: CALL :: call :: V :: v224.setName(v229)::CL,73916
91791 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91797 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91801 :: CALL :: call :: D :: v238 = parseDouble(v236)::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91805 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91811 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91815 :: CALL :: call :: D :: v245 = parseDouble(v243)::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91819 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91825 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91829 :: CALL :: call :: D :: v252 = parseDouble(v250)::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91833 :: NORM :: declaration :: [D :: v254 = new []::
91834 :: EXPR :: modify :: D :: v254[#(0)] = v238::
91838 :: EXPR :: modify :: D :: v254[#(1)] = v245::
91842 :: EXPR :: modify :: D :: v254[#(2)] = v252::
91846 :: CALL :: call :: V :: v224.setCoords(v254)::CL,106499
91850 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91855 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91854 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,91855:CD,91861:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91861 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91870 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91875 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91874 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,91875:CD,91881:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91881 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,91904:JM,91744:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91900 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91905 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91904 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,91905:CD,91911:CD,91915:CD,91921:CD,91925:CD,91929:CD,91957:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91911 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,91744:JM,91842:JM,91815:JM,91945:JM,91435:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91915 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,106510
91921 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91925 :: CALL :: call :: I :: v294 = v292.length()::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91929 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,91930:CD,91937:CD,91941:CD,91945:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91930 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91937 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91941 :: CALL :: call :: I :: v299 = v297.length()::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91945 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,91946:CD,91952:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91946 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
91952 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,91744:JM,91347:JM,91842:JM,91829:JM,91815:JM,91801:JM,91929:JM,91945:JM,91739:JM,91435:JM,91834:JM,91838
91957 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,106510
91962 :: CALL :: call :: V :: v224.setElement(v321)::CL,73927
91967 :: CALL :: call :: V :: v170.addAtom(v224)::CL,60796
91966 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,91967:CD,91975
91975 :: CALL :: call :: V :: v323.addAtom(v224)::CL,60796
91986 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,91991:CL,60371
91991 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,91995
91995 :: CALL :: call :: V :: v332.addAtom(v224)::CL,60796
92005 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,91239:DD,91255
92004 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,92006
92006 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,91403:JM,91904:JM,91744:JM,91874:JM,91842:JM,91815:JM,91945:JM,91435:JM,91854:JM,91347:JM,91829:JM,91705:JM,91801:JM,91929:JM,91192:JM,91739:JM,91834:JM,91229:JM,91838
92009 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,91966
92011 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,91748
92010 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,91746:DD,91747
92330 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,92335:CD,92341:CD,92345:CD,92351:CD,92357:CD,92361:CD,92369:CD,92377:CD,92382:CD,92387
92335 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,92387
92341 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,92387
92345 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,92387
92351 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,92387
92357 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,92387
92361 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,92387
92366 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,92369
92369 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,92377:CD,92370:JM,92387
92370 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,92387
92377 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,92472
92382 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,92387
92387 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,92392:CD,92404:CD,92468:CD,92472:CD,92476:CD,92482:CD,92497:CD,92510
92392 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,92398:CL,105757
92398 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
92401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,92404
92405 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,92409
92404 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,92405:JM,101666:JM,101654:JM,101673:JM,101659:CD,92415:JM,92472
92409 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
92415 :: CALL :: call :: V :: v39.setChainID(v13)::CL,101697
92420 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
92424 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,88848
92428 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,92435:CL,105830
92435 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
92441 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,61059:CL,60646
92445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,92448
92449 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,92454
92448 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,92449
92454 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,61090
92464 :: CALL :: call :: V :: v57.addGroup(v58)::CL,101844
92468 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,92472
92472 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,92420:CD,92424:CD,92428:CD,92441:CD,92448:CD,92449:CD,92464:CD,92468
92476 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,92482:CL,105757
92483 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
92482 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,92489
92486 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
92489 :: CALL :: call :: Z :: v67 = v64.add(v65)::
92494 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,92497
92497 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,92501
92501 :: CALL :: call :: V :: v69.trimToSize()::CL,106002
92510 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,92387
92594 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,92602:CD,92606
92602 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,92606:CL,97711
92606 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,92611
92608 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,92611
92611 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,92615:CD,92642:CD,92648:CD,92666:CD,92670
92612 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,92615
92615 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,92622:CD,92629
92622 :: CALL :: call :: V :: v11.addGroup(v12)::CL,101844
92629 :: CALL :: call :: V :: v14.trimToSize()::CL,106002
92642 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,92648:CL,105757
92649 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
92648 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,92655
92652 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
92655 :: CALL :: call :: Z :: v25 = v22.add(v23)::
92666 :: CALL :: call :: V :: v26.addModel(v27)::CL,101097
92670 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
92710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,92715:CD,92719:CD,92723:CD,92746:CD,92780:CD,92785:CD,92790:CD,92795:CD,92803:CD,92859:JM,92819:JM,92724:JM,92804:JM,92747:JM,92874
92715 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92719 :: CALL :: call :: I :: v8 = v6.length()::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92723 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,92724:CD,92729:CD,92735:CD,92742:JM,92803:JM,92819:JM,92804:JM,92859:JM,92747:JM,92874:CF,92746
92724 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92729 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92735 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92742 :: CALL :: call :: V :: v17.setClassification(v16)::CL,106554
92747 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92874
92746 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,92747:CD,92752:CD,92758:CD,92773:JM,92819:JM,92724:JM,92804:JM,92859:JM,92874:CF,92803
92752 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92758 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92773 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,106565
92780 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
92785 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,92819:JM,92724:JM,92804:JM,92747:JM,92874
92790 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
92795 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
92803 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,92804:CD,92809:CD,92815:CD,92824:CD,92832:CD,92837:CD,92855:JM,92819:JM,92724:JM,92747:JM,92874:CF,92859
92804 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92874
92809 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92815 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92819 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
92824 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
92829 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
92832 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
92837 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
92855 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,106576
92859 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,92863:CD,92869:CD,92874
92860 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,92874
92863 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746:JM,92874
92869 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,92874:JM,92723:JM,92803:JM,92819:JM,92724:JM,92804:JM,92859:JM,92747:JM,92746
92874 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,92880:CD,92884:CD,92892:CD,92897:CD,92901
92880 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
92884 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
92892 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
92897 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
92901 :: CALL :: call :: V :: v79.println(v89)::
92966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,92971:CD,92976:CD,92983:CD,92987
92971 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
92976 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
92983 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,92987:CL,106587
92987 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,92996:CD,92991:CD,92997:CD,93005:CD,93010:CD,93017
92991 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,106596
92997 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
92996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
93005 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
93010 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
93017 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,106596
93037 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,93042:CD,93046:CD,93075:CD,93079:CD,93125:CD,93126:CD,93134:CD,93139:CD,93146:CD,93151
93042 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,93046:JM,93151
93047 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,93046:JM,93151
93046 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,93047:CD,93053:CD,93058:CD,93062:CD,93068:CD,93151:JM,93046
93053 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,93151
93058 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,93046:JM,93151
93062 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,93046:JM,93151
93068 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,93151
93075 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,93091:JM,93079:JM,93085:CL,106607
93079 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,93080:CD,93085:JM,93091
93080 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,93091:JM,93085
93085 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,93086:CD,93091:JM,93085
93086 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,93091:JM,93085
93091 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,93106:CF,93092:CD,93093:CD,93101:CD,93107:CD,93115:CD,93120
93093 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
93092 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
93101 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
93107 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
93106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
93115 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
93120 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
93125 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
93126 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
93134 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
93139 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
93146 :: CALL :: call :: V :: v55.setTitle(v54)::CL,106616
93151 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
93187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,93192:CD,93196:CD,93197:CD,93201:CD,93202:CD,93211:CD,93216:JM,93227
93192 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,93201:JM,93216:JM,93227:JM,93196
93197 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,93201:JM,93216:JM,93227:JM,93196
93196 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,93201:JM,93216:JM,93227:JM,93196
93201 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,93201:JM,93216:JM,93227:JM,93196
93202 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,93201:JM,93216:JM,93227:JM,93196
93208 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,93216
93211 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,93216:JM,93227
93216 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,93223:CD,93227:CD,93228:CD,93237:CD,93246
93223 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,93201:JM,93216:JM,93227:JM,93196
93227 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,93201:JM,93216:JM,93227:JM,93196
93228 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,93201:JM,93216:JM,93227:JM,93196
93234 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
93237 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,93216
93243 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
93246 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,93201:JM,93216:JM,93227:JM,93196
93272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,93277:CD,93281:CD,93302:CD,93307:CD,93322:CD,93325
93277 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,93281
93281 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,93282:CD,93288:CD,93293:CD,93298:JM,93281
93282 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,93281
93288 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
93293 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,93281
93298 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
93302 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,93307
93307 :: EXPR :: assign :: I :: v21 = v20.length::DD,93322
93316 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,106627
93321 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,93325
93322 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,93316:CD,93321:CD,93325
93325 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,93321:DD,93322
93351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,93356:CD,93360:CD,93455:CD,93460:CD,93464:CD,93469:CD,93474:CD,93479:CD,93629:JM,93492:JM,93630
93356 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,93360:JM,93492:JM,93630
93360 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,93368:CD,93374:CD,93382:CD,93388:CD,93396:CD,93402:CD,93410:CD,93416:CD,93424:CD,93430:CD,93438:CD,93444:CD,93488:CD,93492:CD,93523:CD,93528:CD,93533:CD,93538:CD,93543:CD,93548:CD,93552:CD,93556:CD,93576:CD,93580:CD,93630:JM,93360
93368 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,93360:JM,93492:JM,93630
93374 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,93492:JM,93630
93382 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,93360:JM,93492:JM,93630
93388 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,93492:JM,93630
93396 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,93360:JM,93492:JM,93630
93402 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,93492:JM,93630
93410 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,93360:JM,93492:JM,93630
93416 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,93492:JM,93630
93424 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,93360:JM,93492:JM,93630
93430 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,93492:JM,93630
93438 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,93360:JM,93492:JM,93630
93444 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,93492:JM,93630
93455 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
93460 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
93464 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
93469 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
93474 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,93360:JM,93492:JM,93630
93479 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,93492:JM,93630
93488 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,93360:JM,93492:JM,93630
93493 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,93360:JM,93492:JM,93630
93492 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,93493:CD,93499:CD,93504:CD,93508:CD,93514:CD,93630:JM,93360:JM,93492
93499 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,93630
93504 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,93360:JM,93492:JM,93630
93508 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,93360:JM,93492:JM,93630
93514 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,93630
93523 :: CALL :: call :: V :: v83.setA(v85)::CL,106680
93528 :: CALL :: call :: V :: v83.setB(v87)::CL,106691
93533 :: CALL :: call :: V :: v83.setC(v89)::CL,106702
93538 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,106713
93543 :: CALL :: call :: V :: v83.setBeta(v93)::CL,106733
93548 :: CALL :: call :: V :: v83.setGamma(v95)::CL,106753
93552 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,93556:CL,106773
93556 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,93559:CD,93572
93559 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,93559
93572 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,106808
93576 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,93580:CL,106819
93580 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,93583:CD,93588:CD,93593:CD,93598:CD,93609:CD,93617:CD,93624
93583 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
93588 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
93593 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
93598 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
93609 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,106898
93617 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,106909
93624 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,106898
93629 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
93630 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
93705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,93710:CD,93714:JM,93955:JM,93878:JM,93787
93710 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,93955:JM,93714:JM,93878:JM,93787
93714 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,93722:CD,93728:CD,93732:CD,93742:CD,93752:CD,93762:CD,93772:CD,93778:CD,93782:CD,93787:CD,93798:CD,93955:JM,93714:JM,93878
93722 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,93955:JM,93714:JM,93878:JM,93787
93728 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,93955:JM,93878:JM,93787
93732 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,93955:JM,93714:JM,93878:JM,93787
93742 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,93955:JM,93714:JM,93878:JM,93787
93752 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,93955:JM,93714:JM,93878:JM,93787
93762 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,93955:JM,93714:JM,93878:JM,93787
93772 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,93955:JM,93714:JM,93878:JM,93787
93778 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,93955:JM,93878:JM,93787
93782 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,93955:JM,93787
93787 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,93955:CD,93788:CD,93794:JM,93714:JM,93878:JM,93787
93788 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,93955:JM,93714:JM,93878:JM,93787
93794 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,93955:JM,93878:JM,93787
93798 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,93803:CD,93814:CD,93878
93800 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,93803
93803 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,93804
93804 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,93808
93808 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
93811 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,93814
93815 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,93835
93814 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,93815
93835 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
93879 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
93878 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,93885
93882 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
93885 :: CALL :: call :: Z :: v76 = v73.add(v74)::
93955 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,93798
94059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,94064:CD,94150:CD,94155:CD,94160:CD,94165:CD,94170:CD,94207:CD,94300:JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94065 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94064 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,94065:CD,94069:JM,94087:JM,94120:JM,94076:JM,94223
94069 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,94071:CD,94076:JM,94069:JM,94087:JM,94120:JM,94223
94071 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94077 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,106920
94076 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,94077:CD,94082:CD,94087:JM,94069:JM,94120:JM,94076:JM,94223
94082 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94087 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,94091:CD,94095:CD,94115:CD,94120:JM,94069:JM,94087:JM,94076:JM,94223
94091 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,94095:CL,107321
94095 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,94099:CD,94110
94096 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,94099
94099 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,107353:JM,107340
94110 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,107377
94115 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94121 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
94120 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,94121:CD,94125:CD,94130:CD,94134:CD,94178:CD,94182:CD,94187:CD,94191:CD,94218:CD,94223:JM,94069:JM,94087:JM,94120:JM,94076
94125 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,94134
94130 :: CALL :: call :: Z :: v66 = v64.matches()::JM,94134
94135 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,94134
94134 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,94135:JM,94134
94150 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
94155 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,94134
94160 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
94165 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
94170 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
94178 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
94182 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,94191
94187 :: CALL :: call :: Z :: v93 = v91.matches()::JM,94191
94191 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,94192:JM,94191
94192 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,94191
94207 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,94191
94218 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,94069:JM,94087:JM,94120:JM,94076:JM,94223
94223 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,94224:CD,94228:CD,94233:CD,94237
94224 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
94228 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,94237
94233 :: CALL :: call :: Z :: v27 = v25.matches()::JM,94237
94237 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,94238:CD,94250:CD,94254:CD,94255:CD,94293:JM,94237
94238 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,94237
94250 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,94254:CL,107553
94255 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,94258:CD,94267:CD,94271:CD,94279
94254 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,94255
94258 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,94237
94267 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,94271:CL,107553
94271 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,94271
94279 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
94293 :: CALL :: call :: V :: v52.setResolution(v32)::CL,107562
94300 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,94237
94384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,94392:CD,94583:CD,94588:CD,94592:CD,94597:CD,94602:CD,94607:CD,94617
94389 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,94392
94392 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,94397:CD,94401
94397 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,94401:CL,97711
94401 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,94403:CD,94409:CD,94413:CD,94417:CD,94424:CD,94431:CD,94438:CD,94445:CD,94452:CD,94459:CD,94466:CD,94473:CD,94480:CD,94487:CD,94496:CD,94502:CD,94509:CD,94516:CD,94523:CD,94530:CD,94537:CD,94544:CD,94551:CD,94558:CD,94565:CD,94575
94403 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
94409 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
94413 :: CALL :: call :: I :: v16 = parseInt(v14)::
94417 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,94502:CL,107573
94424 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,94509:CL,107573
94431 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,94516:CL,107573
94438 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,94523:CL,107573
94445 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,94530:CL,107573
94452 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,94537:CL,107573
94459 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,94544:CL,107573
94466 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,94551:CL,107573
94473 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,94558:CL,107573
94480 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,94565:CL,107573
94487 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
94496 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
94503 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
94502 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,94503:CF,94509
94509 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,94510:CF,94516
94510 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
94517 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
94516 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,94517:CF,94523
94523 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,94524:CF,94530
94524 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
94531 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
94530 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,94531:CF,94537
94537 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,94538:CF,94544
94538 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
94545 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
94544 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,94545:CF,94551
94551 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,94552:CF,94558
94552 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
94559 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
94558 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,94559:CF,94565
94565 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,94566
94566 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
94572 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
94575 :: CALL :: call :: Z :: v87 = v85.add(v47)::
94583 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
94588 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
94592 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
94597 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
94602 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
94607 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
94617 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
94747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,94755:CD,94759:CD,94799:CD,94804:CD,94809:CD,94814
94755 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,94759:CL,107623
94759 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,94760:CD,94765:CD,94770:CD,94771:CD,94777:CD,94792
94760 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
94765 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,94770
94771 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
94770 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,94771:CD,94777:CD,94792
94777 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
94792 :: CALL :: call :: V :: v23.setModDate(v22)::CL,107659
94799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
94804 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
94809 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
94814 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
94842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,94867:CD,95062
94867 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
95059 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
95062 :: CALL :: call :: Z :: v105 = v103.add(v13)::
95167 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,95175:CD,95179:JM,95631
95175 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95179:CL,97711
95179 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,95183:CD,95188:CD,95193:CD,95201:CD,95210:CD,95215:CD,95216:CD,95221:CD,95225:CD,95230:CD,95232:CD,95233:CD,95310:CD,95319:CD,95520:CD,95526:CD,95531:CD,95534:CD,95542:CD,95546:CD,95550:CD,95555:CD,95560:CD,95571:CD,95575:CD,95622:CD,95626:CD,95628:CD,95629:CD,95630:CD,95631
95183 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
95188 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,95631
95193 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,95631
95201 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,95631
95210 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,95215
95215 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,95216:DD,95630
95216 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,95628
95221 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,95631
95225 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,95230
95230 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,95629
95233 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,95630:CF,95234:CD,95241:CD,95245:CD,95262:CD,95273:CD,95281:CD,95285:CD,95290:CD,95295
95232 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,95233
95234 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,95630
95241 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,95631
95245 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
95262 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
95273 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
95278 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
95281 :: CALL :: call :: I :: v55 = v53.size()::
95285 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
95290 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
95295 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
95310 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
95319 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,95631
95327 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
95332 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,95531
95337 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,95531
95342 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
95350 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,95531
95356 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,95360:CL,88848
95361 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
95360 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,95361:JM,95531
95371 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,95531
95377 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,95531
95383 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,95531
95387 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
95391 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,95531
95397 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,95531
95402 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
95425 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
95434 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
95440 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
95445 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
95450 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
95455 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
95460 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
95468 :: CALL :: call :: V :: v126.setChainId(v106)::CL,101282
95472 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,107897
95476 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,107908
95480 :: CALL :: call :: Z :: v145 = v64.add(v126)::
95487 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
95492 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
95497 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
95502 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,95631
95507 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
95515 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,95631
95520 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,95531
95526 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,95531
95531 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,95327:CD,95332:CD,95337:CD,95342:CD,95350:CD,95356:CD,95360:CD,95371:CD,95377:CD,95383:CD,95387:CD,95391:CD,95397:CD,95402:CD,95425:CD,95434:CD,95440:CD,95445:CD,95450:CD,95455:CD,95460:CD,95468:CD,95472:CD,95476:CD,95480:CD,95487:CD,95492:CD,95497:CD,95502:CD,95507:CD,95515:CD,95520:CD,95526:CD,95631
95534 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
95539 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
95542 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
95546 :: CALL :: call :: I :: v172 = v170.size()::
95550 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
95555 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
95560 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
95568 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,95626
95571 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,95626
95575 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,95626
95580 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,95626
95587 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
95588 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
95596 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
95604 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
95609 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
95614 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
95622 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,95626
95626 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,95580:CD,95587:CD,95588:CD,95596:CD,95604:CD,95609:CD,95614:CD,95622:JM,95626
95629 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,95232
95628 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,95232
95631 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,95631:JM,95531
95630 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
95771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,95779:CD,95783:JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95779 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95783:CL,97711
95783 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,95785:CD,95789:JM,95889:JM,95845:JM,95877:JM,95883:JM,95871
95785 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95789 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,95797:CD,95803:CD,95809:CD,95813:CD,95819:CD,95825:CD,95831:CD,95835:CD,95841:CD,95845:JM,95889:JM,95877:JM,95883:JM,95789:JM,95871
95797 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95803 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95809 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,95889:JM,95845:JM,95877:JM,95883:JM,95871
95813 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95819 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95825 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95831 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,95889:JM,95845:JM,95877:JM,95883:JM,95871
95835 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95841 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95845 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,95846:CD,95852:CD,95856:CD,95862:CD,95866:CD,95871:CD,95947:CD,95951:CD,95955:CD,95959:CD,95963:CD,95967:CD,95971:CD,95978:JM,95889:JM,95845:JM,95877:JM,95883:JM,95789
95846 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95852 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,95889:JM,95877:JM,95883:JM,95871
95856 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,95889:JM,95845:JM,95877:JM,95883:JM,95789:JM,95871
95862 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,95889:JM,95877:JM,95883:JM,95871
95866 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,95889:JM,95877:JM,95883:JM,95871
95871 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,95872:CD,95877:CD,95947:CD,95951:CD,95955:CD,95959:CD,95963:CD,95967:CD,95971:CD,95978:JM,95889:JM,95883:JM,95871
95872 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,95889:JM,95877:JM,95883:JM,95871
95877 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,95878:CD,95883:CD,95947:CD,95951:CD,95955:CD,95959:CD,95963:CD,95967:CD,95971:CD,95978:JM,95889:JM,95877:JM,95871
95878 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,95889:JM,95877:JM,95883:JM,95871
95883 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,95884:CD,95889:CD,95892:CD,95893:CD,95901:CD,95906:CD,95910:CD,95911:CD,95919:CD,95924:JM,95877:JM,95883:JM,95871
95884 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,95889:JM,95877:JM,95883:JM,95871
95889 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,95892:CD,95893:CD,95901:CD,95906:CD,95910:CD,95911:CD,95919:CD,95924:CD,95947:CD,95951:CD,95955:CD,95959:CD,95963:CD,95967:CD,95971:CD,95978
95893 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
95892 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
95901 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,95889:JM,95845:JM,95877:JM,95883:JM,95871
95906 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,95889:JM,95877:JM,95883:JM,95871
95911 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
95910 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
95919 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,95889:JM,95845:JM,95877:JM,95883:JM,95871
95924 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,95889:JM,95877:JM,95883:JM,95871
95947 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
95951 :: CALL :: call :: V :: v67.setChainID1(v14)::CL,107933
95955 :: CALL :: call :: V :: v67.setResnum1(v20)::CL,107944
95959 :: CALL :: call :: V :: v67.setChainID2(v27)::CL,107955
95963 :: CALL :: call :: V :: v67.setResnum2(v33)::CL,107966
95967 :: CALL :: call :: V :: v67.setInsCode1(v63)::CL,107977
95971 :: CALL :: call :: V :: v67.setInsCode2(v66)::CL,107988
95975 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
95978 :: CALL :: call :: Z :: v77 = v75.add(v67)::
96071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,96079:CD,96083
96079 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96083:CL,97711
96083 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,96085:CD,96091:CD,96095:CD,96101:CD,96105:CD,96111:CD,96115:CD,96121:CD,96125:CD,96131:CD,96135:CD,96141:CD,96145:CD,96151:CD,96155:CD,96161:CD,96165:CD,96171:CD,96175:CD,96181:CD,96185:CD,96191:CD,96195:CD,96201:CD,96205:CD,96211:CD,96215:CD,96221:CD,96228:JM,108032:JM,108035:JM,108050:JM,108053:JM,108020:JM,108023:JM,108038:JM,108041:JM,108026:JM,108029:JM,108044:JM,108047:CD,96246
96085 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
96091 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
96095 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
96101 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
96105 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
96111 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
96115 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
96121 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
96125 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
96131 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
96135 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
96141 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
96145 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
96151 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
96155 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
96161 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
96165 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
96171 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
96175 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
96181 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
96185 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
96191 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
96195 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
96201 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
96205 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
96211 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
96215 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
96221 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
96225 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
96228 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
96246 :: CALL :: call :: Z :: v88 = v84.add(v85)::
96327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,96328:CD,96334
96328 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,84003:JM,84084
96331 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,96334
96334 :: NORM :: compound :: Z :: return v3::CF,96328
96336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,96344:CD,96348:JM,96354
96344 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96348:CL,97711
96348 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,96350:CD,96354
96350 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,96354
96354 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,96362:CD,96368:CD,96372:CD,96378:CD,96384:CD,96388:CD,96394:CD,96400:CD,96404:CD,96410:CD,96416:CD,96420:CD,96426:CD,96430:CD,96436:CD,96442:CD,96448:CD,96454:CD,96460:CD,96466:CD,96472:CD,96481:JM,96354
96362 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,96354
96368 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
96372 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,96354
96378 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,96354
96384 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
96388 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,96354
96394 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,96354
96400 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
96404 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,96354
96410 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,96354
96416 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
96420 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,96354
96426 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
96430 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
96436 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
96442 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
96448 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
96454 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
96460 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
96466 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
96472 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
96478 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
96481 :: CALL :: call :: Z :: v76 = v74.add(v48)::
96562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,96570:CD,96574:JM,96580
96570 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96574:CL,97711
96574 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,96576:CD,96580
96576 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,96580
96580 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,96588:CD,96594:CD,96598:CD,96604:CD,96610:CD,96614:CD,96620:CD,96626:CD,96630:CD,96636:CD,96642:CD,96646:CD,96652:CD,96656:CD,96662:CD,96668:CD,96674:CD,96680:CD,96686:CD,96692:CD,96698:CD,96707:JM,96580
96588 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,96580
96594 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
96598 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,96580
96604 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,96580
96610 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
96614 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,96580
96620 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,96580
96626 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
96630 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,96580
96636 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,96580
96642 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
96646 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,96580
96652 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
96656 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
96662 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
96668 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
96674 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
96680 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
96686 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
96692 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
96698 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
96704 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
96707 :: CALL :: call :: Z :: v74 = v72.add(v46)::
96788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,96796:CD,96800:JM,96806
96796 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96800:CL,97711
96800 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,96802:CD,96806
96802 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,96806
96806 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,96814:CD,96820:CD,96824:CD,96830:CD,96836:CD,96840:CD,96846:CD,96852:CD,96856:CD,96862:CD,96868:CD,96872:CD,96878:CD,96882:CD,96888:CD,96894:CD,96900:CD,96906:CD,96912:CD,96918:CD,96924:CD,96933:JM,96806
96814 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,96806
96820 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
96824 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,96806
96830 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,96806
96836 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
96840 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,96806
96846 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,96806
96852 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
96856 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,96806
96862 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,96806
96868 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
96872 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,96806
96878 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
96882 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
96888 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
96894 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
96900 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
96906 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
96912 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
96918 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
96924 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
96930 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
96933 :: CALL :: call :: Z :: v74 = v72.add(v46)::
97014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,97020:CD,97048:CD,97052:CD,97056:CD,97060:CD,97081:CD,97109:CD,97113
97020 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,97113:JM,97052
97025 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,97113:JM,97052
97044 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,108092
97048 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,97113:JM,97052
97053 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,97060
97052 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,97025:CD,97044:CD,97048:JM,97113:JM,97052
97056 :: CALL :: call :: I :: v22 = v20.size()::JM,97060
97060 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,108791:JM,108798:CD,97072
97069 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
97072 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
97081 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,97113:JM,97052
97086 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,97113:JM,97052
97105 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,108902
97109 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,97113:JM,97052
97113 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,97086:CD,97105:CD,97109:JM,97113:JM,97052
97150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,97161:CD,97166:CD,97171:CD,97195:CD,97237:CD,97241:CD,97261:CD,97271:CD,97281:CD,97291:CD,97301:CD,97308:CD,97312:CD,97370:CD,97380:CD,97387:CD,97391:CD,97398:CD,97416:CD,97452:CD,97453:CD,97514
97161 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
97166 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,97171
97171 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,97179:CD,97184
97179 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,97184
97184 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,97188
97188 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,106565
97192 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,97195
97195 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,97202:CD,97216:CD,97222
97202 :: CALL :: call :: V :: v21.addGroup(v22)::CL,101844
97216 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,97222:CL,105757
97223 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
97222 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,97229
97226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
97229 :: CALL :: call :: Z :: v33 = v30.add(v31)::
97234 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,97241
97237 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,97241
97241 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,97242:CD,97251
97242 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,109568
97251 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,110532
97261 :: CALL :: call :: V :: v41.addModel(v42)::CL,101097
97271 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,100832
97281 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,110543
97291 :: CALL :: call :: V :: v50.setConnections(v51)::CL,110558
97301 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,100862
97308 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,97312:CL,110569
97312 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,97316:CD,97320:CD,97362
97316 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,97320:CL,97711
97320 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,97337:CD,97362
97337 :: CALL :: call :: V :: v74.align(v76, v77)::CL,110600
97362 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,110656
97370 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,110799
97380 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,101046
97387 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,97391:CL,97711
97391 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,97392
97392 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,111236
97395 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,97398
97398 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,97409
97409 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,111603
97413 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,97416
97417 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,97424
97416 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,97420:CD,97424
97420 :: CALL :: call :: I :: v97 = v95.size()::JM,97424
97424 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,97434:CD,97438:CD,97439:CD,97445
97428 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
97431 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,97438
97434 :: CALL :: call :: I :: v102 = v100.size()::JM,97438
97439 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
97438 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
97445 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,111614
97449 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,97452
97453 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,97457:CD,97458:CD,97473:CD,97474
97452 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,97453
97454 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,97457
97457 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,97458
97458 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,97465:CD,97473:CD,97474
97465 :: CALL :: call :: V :: v127.setRfree(v128)::CL,111625
97470 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,97473
97473 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,97474
97475 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,97478
97474 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,97478:CD,97479:CD,97494:CD,97495
97479 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,97486:CD,97494:CD,97495
97478 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,97479
97486 :: CALL :: call :: V :: v124.setRfree(v125)::CL,111625
97491 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,97494
97495 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,97499:CD,97500
97494 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,97495
97496 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,97499
97499 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,97500
97500 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,97507
97507 :: CALL :: call :: V :: v121.setRfree(v122)::CL,111625
97514 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,100949
97617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,97618:CD,97624
97618 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,84062:JM,127653
97621 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,97624
97624 :: NORM :: compound :: Z :: return v3::CF,97618
97626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,97645:CD,97659:CD,97663:CD,97667:CD,97671
97642 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,97663
97645 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,97663
97650 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,97663
97655 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,111657
97659 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,97663
97663 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,97650:CD,97655:CD,97659:JM,97663
97667 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,111813
97671 :: CALL :: call :: V :: v3.makeBonds()::CL,111874
97691 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,84073:JM,127664
97690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,97691:CD,97697
97694 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,97697
97697 :: NORM :: compound :: Z :: return v3::CF,97691
97699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,97706
97706 :: CALL :: call :: V :: addCharges(v3)::CL,111895
97711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,97712:CD,97718
97712 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,84092:JM,91143:JM,92606:JM,94401:JM,95179:JM,95783:JM,96083:JM,96348:JM,96574:JM,96800:JM,97320:JM,97391:JM,106932:JM,127253:JM,127645:JM,127678:JM,147791:JM,150007
97715 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,97718
97718 :: NORM :: compound :: Z :: return v3::CF,97712
97720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,97729:CD,97740:CD,97751:CD,97795:CD,97799
97729 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,112212
97740 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,112212
97751 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,112212
97766 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,112520
97770 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,97774:CL,112547
97775 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,97780:CL,112591
97774 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,97775:CD,97780
97780 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::JM,112617:JM,112620:CD,97790
97790 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,112634
97795 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,97799:CL,112654
97799 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,97766:CD,97770:CD,97774:CD,97795
97833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,97834:CD,97836:CD,97838:CD,97839:CD,97847
97834 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,84344
97836 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,97838
97839 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,97847
97838 :: EXPR :: assign :: I :: v4 = v2.length::DD,97839
97847 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,97834
97905 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,97989
97914 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
97920 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
97932 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
97942 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,97950
97946 :: CALL :: call :: I :: v15 = v13.length()::JM,97950
97951 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,97955
97950 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,97968:CD,97982
97955 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
97968 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
97982 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,97986
97986 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
97989 :: EXPR :: assign :: I :: v28 = v7.length::DD,97990
97991 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
97990 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,97995:CD,97999:CD,98007
97995 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
97999 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,98003:CL,98742
98003 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
98007 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,98011
98011 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
98047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,98048:CD,98051:CD,98055:CD,98059:CD,98079:CD,98083:CD,98084
98048 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,84774:JM,84792:JM,84783
98051 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,98084
98055 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,98083:CL,101141
98059 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,98083
98064 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,98083
98069 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,98073:CL,101228
98073 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,98074:JM,98083
98074 :: CALL :: call :: Z :: v19 = v3.add(v16)::
98079 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,98083
98083 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,98064:CD,98069:CD,98073:CD,98079:JM,98083:CF,98084
98084 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,98048
98103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CE,98104:CD,98109:CD,98114:CD,98118
98104 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::JM,84880
98109 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,98118
98114 :: CALL :: call :: Z :: v7 = v5.matches()::JM,98118
98119 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,98118
98118 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,98119:CD,98124:CD,98128:CD,98129:JM,98118
98124 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,98128
98129 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,98104
98128 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,98104
98138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,98141:CD,98143
98141 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,98143
98143 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,142305:JM,142342:JM,46758:JM,142313:JM,46765:JM,142287:JM,142349:JM,142291:JM,142321:JM,142294:JM,142359:JM,142297:JM,142335
98157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CE,98158:CD,98165:CD,98176:CD,98181:CD,98182
98158 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::JM,84976
98162 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,98165
98165 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,98166:CD,98170
98166 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,112827
98170 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,112910
98176 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::JM,98181
98181 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,98182
98182 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v11::DD,98158
98189 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,98194
98194 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,113017
98201 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::JM,84991
98200 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CE,98201:CD,98205:JM,98210:JM,98279:JM,98206
98205 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,98206:CD,98210:CD,98211:JM,98279
98206 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,98210:JM,98279:JM,98206
98211 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,98201
98210 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,98211:CD,98214:CD,98219:CD,98223:CD,98229:CD,98234
98214 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,98223
98219 :: CALL :: call :: Z :: v12 = v10.matches()::JM,98223
98223 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,98224:JM,98223
98224 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,98223
98229 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,98234:JM,98269:JM,98285:CL,113245
98234 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,98243:CD,98246:CD,98250:CD,98260:CD,98281:CD,98285
98243 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,98201
98246 :: CALL :: call :: I :: v22 = v18.size()::JM,98269:JM,98285
98250 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,98269:JM,98285
98260 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,98269:JM,98285
98265 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,98269:JM,98285
98269 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::DD,98280
98270 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,98279:CL,113447
98274 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,98210:JM,98279:JM,98206
98279 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,98280:CD,98281:CD,98285:JM,98269
98281 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,98269:JM,98285
98280 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return v32::DD,98201
98285 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,98265:CD,98269:CD,98270:CD,98274:CD,98279:CD,98286:JM,98285
98286 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,98201
98341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,98342:CD,98346:CD,98350:CD,98355
98342 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,85031
98346 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,98531:JM,98618:JM,98575:JM,98526
98350 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,98355:JM,98356:CL,113456:CL,113518
98355 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,98356:CD,98359:CD,98364:CD,98369:CD,98379:CD,98384:CD,98388:CD,98518:CD,98522:CD,98526
98356 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,98342
98359 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
98364 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
98369 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
98379 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445
98384 :: CALL :: call :: Z :: v22 = v20.matches()::JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445
98389 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445
98388 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,98389:CD,98394:CD,98399:CD,98404:CD,98409:CD,98513:CD,98517:JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445:JM,98531:JM,98618:JM,98575:JM,98526
98394 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445
98399 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,98496:JM,98451:JM,98388:JM,98457:JM,98490:JM,98445
98404 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,98418:JM,98517:CL,79857:CL,79747
98409 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,98418:JM,98517
98414 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,98418:JM,98517
98418 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
98425 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98430 :: CALL :: call :: Z :: v48 = v46.matches()::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98435 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98434 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,98435:CD,98440:CD,98445:JM,98434:JM,98468:JM,98507:JM,98490:JM,98479:JM,98418:JM,98517
98440 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,98496:JM,98451:JM,98457:JM,98490:JM,98445:JM,98468:JM,98507:JM,98479
98445 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,98446:CD,98451:CD,98480:CD,98485:CD,98490:JM,98496:JM,98457:JM,98445:JM,98434:JM,98468:JM,98507:JM,98479
98446 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,98496:JM,98451:JM,98457:JM,98490:JM,98445
98451 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,98452:CD,98457:CD,98480:CD,98485:CD,98490:JM,98496:JM,98451:JM,98445:JM,98434:JM,98468:JM,98507:JM,98479
98452 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,98496:JM,98451:JM,98457:JM,98490:JM,98445
98457 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,98458:CD,98463:CD,98468:CD,98480:CD,98485:CD,98490:JM,98434:JM,98507:JM,98445:JM,98479
98458 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98463 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98469 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98468 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,98469:CD,98474:CD,98479:CD,98480:CD,98485:CD,98490:JM,98434:JM,98468:JM,98507:JM,98445
98474 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98479 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,98480:CD,98485:CD,98490:JM,98434:JM,98468:JM,98507:JM,98445:JM,98479:JM,98418:JM,98517
98480 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98485 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,98496:JM,98451:JM,98457:JM,98490:JM,98445:JM,98468:JM,98507:JM,98479
98491 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,98496:JM,98451:JM,98457:JM,98490:JM,98445
98490 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,98491:CD,98496:CD,98508:JM,98451:JM,98457:JM,98490:JM,98445
98497 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,98434:JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98496 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,98497:CD,98502:CD,98507:CD,98508:JM,98434:JM,98468:JM,98490:JM,98445:JM,98479
98502 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,98468:JM,98507:JM,98490:JM,98445:JM,98479
98507 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,98508:JM,98418:JM,98517
98508 :: CALL :: call :: Z :: v78 = v4.add(v41)::
98513 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,98418:JM,98517
98517 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,98414:CD,98418:CD,98425:CD,98430:CD,98434:CD,98513:JM,98517:JM,98531:JM,98618:JM,98575:JM,98526
98518 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,98531:JM,98618:JM,98575:JM,98526
98522 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,98531:JM,98618:JM,98575:JM,98526
98527 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,98531:JM,98618:JM,98575:JM,98526
98526 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,98527:CD,98531:CD,98532:CD,98534:CD,98538:CD,98638:CD,98639:JM,98618:JM,98575:JM,98526
98531 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,98638
98532 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,98534:JM,98538
98534 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,98534:JM,98538
98539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
98538 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,98539:CD,98543:CD,98548:CD,98552:CD,98557:CD,98562:CD,98566:CD,98571:CD,98575:CD,98619:CD,98623:CD,98630:CF,98638
98543 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
98548 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,80209
98552 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
98557 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
98562 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
98566 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
98571 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,98531:JM,98618:JM,98575:JM,98526
98575 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,98576:CD,98614:CD,98618:JM,98619
98576 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
98583 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,98531:JM,98618:JM,98575:JM,98526
98582 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,98531:JM,98618:JM,98575:JM,98526
98592 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
98600 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
98605 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
98609 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
98614 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,98531:JM,98618:JM,98575:JM,98526
98619 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,98619
98618 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,98582:CD,98583:CD,98592:CD,98600:CD,98605:CD,98609:CD,98614:JM,98619
98623 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
98630 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
98639 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,98342
98638 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,98342
98743 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,98003
98742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,98743:CD,98746:CD,98750:CD,98755:CD,98761:CD,98766:CD,98778:CD,98783:CD,98784:CD,98789:CD,98805:CD,98806:CD,98807:CD,98809
98746 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,98755:JM,98807
98750 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,98755:JM,98807
98755 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,98807:CD,98756:JM,98755
98756 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,98755:JM,98807
98761 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,98766
98767 :: CALL :: call :: I :: v17 = v12.length()::JM,98771
98766 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,98767:CD,98771:CD,98772
98771 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
98772 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
98778 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,98784:JM,98789
98783 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,98806:CF,98784
98784 :: EXPR :: assign :: I :: v26 = v24.length::
98789 :: EXPR :: assign :: I :: v28 = v24.length::DD,98805
98795 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,113623
98799 :: CALL :: call :: Z :: v33 = v25.add(v31)::
98805 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,98795:CD,98799:CD,98804:CD,98809:CF,98806
98804 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,98809
98807 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,98766:JM,98771
98806 :: NORM :: compound :: Ljava/util/List :: return v25::DD,98743
98809 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,98804:DD,98805
98857 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v7 = new java.lang.NullPointerException::JM,98866:JM,98857:JM,98863
98863 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
98866 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
98961 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
98968 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
98989 :: EXPR :: modify :: Ljava/net/URL :: p0 $this .url = p1 $url ::
99015 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/PDPDomain :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::JM,85211
99014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CE,99015:CD,99022:CD,99041:CD,99046:CD,99106:CD,99111:CD,99116:CD,99125:CD,99126:CD,99131:CD,99136:CD,99146:CD,99150:CD,99181:CD,99196:CD,99200:CD,99201:JM,113968:JM,98866:JM,113958:JM,113974:JM,98857:JM,113963:JM,113979:JM,98863:JM,113950:CD,99207:CD,99208:CD,99209:CD,99210
99019 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,99022
99022 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,99209:CD,99026:CD,99031
99026 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,99031
99031 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,99209:CD,99035:CD,99040
99035 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,99040
99041 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,99046:CL,113889
99040 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,99209
99046 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,99210:CD,99048:CD,99052:CD,99060:CD,99065:CD,99070:CD,99085:CD,99089:CD,99093:CD,99097
99048 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
99052 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
99060 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
99065 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
99070 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
99085 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,89851
99089 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,79139
99093 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,99097:JM,99210:CL,104908
99097 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,99210:CD,99098
99098 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,80147
99106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
99111 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
99116 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
99125 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v46 = new java.lang.IllegalArgumentException::
99126 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
99131 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
99136 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
99146 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
99150 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,99200
99155 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,99200
99181 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v86 = new java.lang.RuntimeException::
99187 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,101141
99191 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
99196 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,99200
99201 :: NORM :: declaration :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v84 = new org.biojava.nbio.structure.domain.PDPDomain::DD,99207
99200 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CF,99201:CD,99155:JM,97905:JM,97920:JM,97989:JM,97990:JM,97914:JM,97946:JM,97932:JM,97950:CD,99187:CD,99191:CD,99196:JM,99200
99207 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/PDPDomain :: return v84::DD,99015
99209 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,99210
99208 :: EXPR :: assign :: Ljava/lang/Exception :: v36 = catch <exc>::
99210 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,99200:CF,99146
99280 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,99301:JM,99319:JM,99309
99285 :: CALL :: call :: Z :: v9 = v7.matches()::JM,99301:JM,99319:JM,99309
99290 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v22 = new java.lang.IllegalArgumentException::
99296 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,99301:JM,99319:JM,99309
99301 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbCode = v13::
99304 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,99301:JM,99319:JM,99309
99309 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,99310:CD,99315:JM,99301:JM,99319:JM,99309
99310 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,99301:JM,99319:JM,99309
99315 :: CALL :: call :: I :: v21 = parseInt(v19)::JM,99319
99319 :: EXPR :: modify :: I :: p0 $this .biolNr = v21::
99323 :: EXPR :: modify :: I :: p0 $this .biolNr = #(1)::
99344 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CD,99351
99348 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::
99351 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::
99361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructureForPdbId(java.lang.String)::CD,99366:CD,99374:CD,99379:CD,99384
99366 :: PRED :: IF :: Z :: if (p1 $pdbId  != #(null)) goto 7::CD,99407:CD,99412:CD,99416
99374 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
99379 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
99384 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
99407 :: CALL :: call :: Z :: v9 = p0 $this .checkLoading(p1 $pdbId )::JM,99412:CL,114004
99413 :: EXPR :: reference :: Z :: v19 = p0 $this .useMmCif::DD,99416
99412 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 42::CD,99407
99417 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v23 = p0 $this .loadStructureFromCifByPdbId(p1 $pdbId )::CL,114020
99416 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 87::CD,99417:CD,99423
99423 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v21 = p0 $this .loadStructureFromPdbByPdbId(p1 $pdbId )::CL,114096
99449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,99453:CD,99457:CD,99461:JM,99472:JM,99477:JM,99462:JM,99466
99453 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
99457 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,99472:JM,99461:JM,99477:JM,99462:JM,99466
99461 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,99462:CD,99466:JM,99472:JM,99477
99462 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,99472:JM,99477:JM,99462:JM,99466
99466 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,99468:CD,99472:CD,99477:CD,99529:CD,99533:JM,99461:JM,99462:JM,99466
99468 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,99472:JM,99461:JM,99477:JM,99462:JM,99466
99472 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,99472:JM,99477:JM,99462:JM,99466
99477 :: EXPR :: assign :: I :: v16 = v15.length::DD,99529
99522 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
99529 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,99522:CD,99528:CD,99533
99528 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,99533
99533 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,99528:DD,99529
99617 :: EXIT :: exit :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::JM,85612:JM,85613
99616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::CE,99617:CD,99620:CD,99624:CD,99627:CD,99664:CD,99669
99620 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $filename .toLowerCase()::JM,99656
99624 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v6 = values()::JM,99627:CL,114172
99627 :: EXPR :: assign :: I :: v7 = v6.length::DD,99664
99629 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v25]::JM,99633:JM,99637:JM,99642:JM,99658:JM,99646:JM,99662:DD,99657
99633 :: CALL :: call :: Ljava/util/List :: v11 = v9.getExtensions()::JM,99633:JM,99637:JM,99642:JM,99658:JM,99646:JM,99662
99637 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,99637:JM,99642:JM,99658:JM,99646:JM,99662
99642 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.next()::JM,99642:JM,99658:JM,99646:JM,99662
99647 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toLowerCase()::JM,99656:JM,99647
99646 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,99656:JM,99647
99651 :: CALL :: call :: Z :: v22 = v4.endsWith(v20)::JM,99656
99657 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v9::DD,99617
99656 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 66::CF,99668:CD,99657:CD,99658:CD,99662
99658 :: CALL :: call :: Z :: v15 = v13.hasNext()::JM,99642:JM,99658:JM,99646:JM,99662
99663 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,99669
99662 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 40::CD,99642:CD,99646:CD,99647:CD,99651:CD,99656:CD,99663:CD,99664:CD,99669:CD,99668:JM,99658:JM,99662
99665 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,99667
99664 :: PRED :: IF :: Z :: if (v25 < v7) goto 22::CD,99633:CD,99637:CD,99658:CD,99662:CD,99665:CD,99667:CD,99668
99667 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v27::DD,99617
99669 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,99664:DD,99668
99668 :: EXPR :: assign :: null :: PHI v26 = v25, v26::JM,99642:JM,99658:JM,99646:JM,99662:DD,99663:DD,99668
99695 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::
99694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CE,99695:CD,99697:CD,99699
99697 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype::DD,99699:DD,99700
99699 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,99700:CD,99701:CD,99704:CD,99705:CD,99706:CD,99708:CD,99717:CD,99719:CD,99728:CD,99730:CD,99741
99701 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = values()::JM,99704:CL,114172
99700 :: NORM :: compound :: [I :: return v2::DD,99695
99705 :: NORM :: declaration :: [I :: v7 = new []::DD,99741
99704 :: EXPR :: assign :: I :: v6 = v5.length::CF,99705
99706 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v8 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::
99708 :: CALL :: call :: I :: v10 = v8.ordinal()::
99712 :: EXPR :: modify :: I :: v7[v10] = #(2)::
99717 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v14 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::
99719 :: CALL :: call :: I :: v16 = v14.ordinal()::
99723 :: EXPR :: modify :: I :: v7[v16] = #(1)::
99728 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v20 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::
99730 :: CALL :: call :: I :: v22 = v20.ordinal()::
99734 :: EXPR :: modify :: I :: v7[v22] = #(3)::
99741 :: NORM :: compound :: [I :: return v7::DD,99695
99769 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
99792 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: v4 = new org.biojava.nbio.structure.io.FileParsingParameters::DD,99796
99796 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = v4::
99799 :: CALL :: call :: V :: p0 $this .documentStart()::CL,114199
99807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setFileParsingParameters(org.biojava.nbio.structure.io.FileParsingParameters)::JM,99812
99812 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = p1 $params ::
99818 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,99826
99823 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
99826 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
99835 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,99840:CD,99843:CD,99850:CD,99854:CD,99858:CD,99862:CD,99866:JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99840 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,114399
99843 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,99847
99847 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
99850 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,100197:JM,100432
99854 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,100465
99858 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
99862 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99866:JM,99962:JM,100250:JM,99902
99867 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99866 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,99867:CD,99872:CD,99875:CD,99880:CD,99885:CD,99890:CD,99898:CD,100463:CD,100464:CD,100465:CD,100466:JM,100417:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99872 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,100463:CD,99875:CD,99880:CD,99885:CD,99890:CD,99898:CD,100413:CD,100417:CD,100464:CD,100465:CD,100466
99875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
99880 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99885 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,99906:JM,100466:JM,100022:JM,99912:JM,100312:JM,99979:JM,100107:JM,99962:JM,100250:JM,99948
99890 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,100107
99898 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,114441
99902 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99907 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99906 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,100463:CD,99907:CD,99912:CD,100413:CD,100417:CD,100464:CD,100465:CD,100466:JM,99872:JM,99906:JM,99979:JM,100107:JM,99948:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99912 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,99916:CD,99917:CD,99925:CD,99930:CD,99935:CD,99943:CD,99948:CD,99956:CD,100413:CD,100417:CD,100461:CD,100462:CD,100463:CD,100464:CD,100465:CD,100466
99917 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,99917
99916 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,99917
99925 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
99930 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99935 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,100466:JM,100022:JM,100312:JM,99979:JM,100107:JM,99962:JM,100250:JM,99948
99943 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99949 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,100461:CD,99950:CD,99953
99948 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,100461:CD,99949:CD,100462
99950 :: CALL :: call :: V :: v154.clear()::
99953 :: CALL :: call :: V :: v9.clear()::
99957 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99956 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,99957:CD,99962:CD,100245:CD,100250:JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99902
99963 :: CALL :: call :: V :: v9.clear()::
99962 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,99963:CD,99967:CD,99972:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466
99967 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,99972
99973 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,99974:CD,99979:CD,100098:CD,100102:CD,100107:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,99872:JM,99906:JM,99912:JM,99948:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99972 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,99973:CD,100156:CD,100165:CD,100169:CD,100180:CD,100189:CD,100193:CD,100197:CD,100234:CD,100241:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466
99974 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99979 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,99986:CD,99989:CD,99996:CD,100000:CD,100098:CD,100102:CD,100107:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,99872:JM,99906:JM,99912:JM,99979:JM,99948:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
99986 :: CALL :: call :: V :: v9.clear()::
99989 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,100000:JM,100067:JM,100010:CL,114474
99996 :: CALL :: call :: I :: v84 = v82.size()::JM,100000:JM,100067:JM,100010
100001 :: CALL :: call :: V :: v154.clear()::
100000 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,100001:CD,100005:CD,100010:CD,100011:CD,100016:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,100000:JM,100067
100005 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,100000:JM,100067:JM,100010
100011 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,100016:JM,100466:JM,100068
100010 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,100016:JM,100466:JM,100068
100017 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100016 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,100017:CD,100022:CD,100056:CD,100062:CD,100067:CD,100068:CD,100069:CD,100073:CD,100079:CD,100084:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100312:JM,99962:JM,100250:JM,99902
100022 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,100025:CD,100030:CD,100035:CD,100040:CD,100048:CD,100052:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466
100025 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
100030 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100035 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,100466:JM,100312:JM,100107:JM,100250
100040 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,100107
100048 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,114441
100052 :: CALL :: call :: V :: v154.clear()::
100056 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,100466:JM,100068
100062 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,100000:JM,100067:JM,100010
100067 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,100068
100069 :: CALL :: call :: I :: v102 = v88.length()::
100068 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
100073 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
100079 :: CALL :: call :: Z :: v106 = v9.add(v104)::
100084 :: CALL :: call :: Z :: v108 = v154.add(v99)::
100098 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100102 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,100466:JM,100312:JM,100107:JM,100250
100107 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,100108:CD,100121:CD,100134:CD,100135:CD,100463:CD,100464:CD,100465:CD,100466
100108 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,100134
100113 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,100466
100117 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
100121 :: CALL :: call :: Z :: v67 = v9.add(v65)::
100135 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,100463:CD,100464:CD,100465:CD,100466
100134 :: EXPR :: assign :: I :: v71 = v62.length::DD,100135
100156 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,100465:JM,100197:CL,114474
100165 :: CALL :: call :: I :: v125 = v121.size()::JM,100465:JM,100197
100169 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,100197
100180 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
100189 :: CALL :: call :: I :: v135 = v121.size()::JM,100465:JM,100197
100193 :: CALL :: call :: I :: v137 = v9.size()::JM,100197
100197 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,100201:CD,100205:CD,100213:CD,100217
100201 :: CALL :: call :: I :: v143 = v9.size()::
100205 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
100213 :: CALL :: call :: I :: v147 = v121.size()::JM,100465:JM,100197
100217 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
100234 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,114790
100241 :: CALL :: call :: V :: v121.clear()::JM,100465:JM,100197
100245 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100251 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,100252
100250 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,100251:CD,100259:CD,100279:CD,100286:CD,100290:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466
100252 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,114790
100259 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,116211
100279 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,100290:JM,100300:JM,100383:CL,114474
100286 :: CALL :: call :: I :: v169 = v167.size()::JM,100290:JM,100300:JM,100383
100291 :: CALL :: call :: V :: v154.clear()::
100290 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,100291:CD,100295:CD,100300:CD,100301:CD,100306:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,100290:JM,100383
100295 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,100290:JM,100300:JM,100383
100301 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,100384:JM,100306:JM,100466:JM,100358
100300 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,100384:JM,100306:JM,100466:JM,100358
100307 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100306 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,100307:CD,100312:CD,100346:CD,100372:CD,100378:CD,100383:CD,100384:CD,100385:CD,100389:CD,100395:CD,100400:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100022:JM,99962:JM,100250:JM,99902
100312 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,100315:CD,100320:CD,100325:CD,100330:CD,100338:CD,100342:CD,100413:CD,100417:CD,100463:CD,100464:CD,100465:CD,100466
100315 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
100320 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99962:JM,100250:JM,99902
100325 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,100107
100330 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
100338 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,114441
100342 :: CALL :: call :: V :: v154.clear()::
100347 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,100358:JM,100384:JM,100466
100346 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,100347:CD,100353:CD,100358:JM,100466
100353 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,100466:JM,100358
100359 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,114790
100358 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,100359:CD,100366:JM,100466
100366 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,116211
100372 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,100466:JM,100384:JM,100358
100378 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,100290:JM,100300:JM,100383
100383 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,100384
100385 :: CALL :: call :: I :: v192 = v173.length()::
100384 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
100389 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
100395 :: CALL :: call :: Z :: v196 = v9.add(v194)::
100400 :: CALL :: call :: Z :: v198 = v154.add(v189)::
100413 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100466:JM,100022:JM,100312:JM,99866:JM,99962:JM,100250:JM,99902
100417 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,99902:CD,99906:CD,100418:CD,100449:CD,100457:CD,100463:CD,100464:CD,100465:CD,100466:JM,100417:JM,99872:JM,99912:JM,99979:JM,100107:JM,99948:JM,100022:JM,100312:JM,99962:JM,100250
100419 :: CALL :: call :: I :: v202 = v154.size()::JM,100423
100418 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,100419:CD,100423
100423 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,100424:CD,100428:CD,100432
100424 :: CALL :: call :: I :: v204 = v154.size()::JM,100432
100428 :: CALL :: call :: I :: v206 = v9.size()::JM,100432
100433 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,114790
100432 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,100433:CD,100440
100440 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,116211
100446 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,100449
100449 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,100453
100453 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,116231
100457 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,114441
100461 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,100462:DD,99956:DD,100463
100463 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,100464:JM,99917:DD,99949:DD,100461:DD,100463
100462 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,99973:DD,100464:CF,99956
100465 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,100466:JM,100423:JM,100432:DD,100465
100464 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,100465:DD,100462:DD,100464
100466 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,100417:JM,99872:JM,99906:JM,99912:JM,99979:JM,100107:JM,99948:JM,100022:JM,100312:JM,99866:JM,99962:JM,100250:JM,99902:DD,100251:DD,100346:JM,100358:DD,100418:DD,100466
100792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int)::CD,100798
100798 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , #(1))::CL,116267
100812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,100817
100817 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
100823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,100824:CD,100830
100824 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,130627:JM,148634:JM,148785:JM,150705
100827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,100830
100830 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,100824
100832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,100837
100837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
100843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.toString()::CD,100847
100847 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getIdentifier()::CL,116335
100853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,100854:CD,100860
100854 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,149822:JM,149854
100857 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,100860
100860 :: NORM :: compound :: Ljava/util/List :: return v3::CF,100854
100862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,100868:CD,100874:CD,100888:CD,100892:JM,100893
100868 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
100874 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,100893:JM,100892
100879 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,100892
100884 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,116392
100888 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,100892
100893 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
100892 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,100879:CD,100884:CD,100888:JM,100892
100929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getDescription()::CE,100930:CD,100936
100930 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getDescription()::
100933 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description::DD,100936
100936 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,100930
100938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,100943
100943 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
100949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,100950:CD,100956:CD,101021
100950 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,146259
100953 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,100956
100957 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,100964
100956 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,100960:CD,100964:CD,100970:CD,100980:CD,101013:CD,101017
100960 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,100964
100964 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,100970:CD,100980:CD,101013:CD,101017
100970 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,100974:CL,116418
100974 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
100977 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,101017
100980 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,101017
100985 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,101017
100990 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,101012:CL,116442
100994 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,101012
100999 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,101012
101004 :: CALL :: call :: V :: v29.setCompound(v20)::CL,116451
101008 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,101012
101013 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,101017
101012 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,100999:CD,101004:CD,101008:JM,101012:JM,101017
101017 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,100985:CD,100990:CD,100994:CD,101008:CD,101012:CD,101013:JM,101017
101018 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,101021
101021 :: NORM :: compound :: Ljava/util/List :: return v31::DD,100950
101046 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,101051
101051 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
101066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,101071
101071 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
101077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,101078:CD,101084
101078 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,146350:JM,146638:JM,150016:JM,150085
101081 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,101084
101084 :: NORM :: compound :: Ljava/util/List :: return v3::CF,101078
101086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,101091
101091 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
101097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,101102:CD,101116:CD,101120:CD,101124
101102 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,101120
101107 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,101120
101112 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,116462
101116 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,101120
101121 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
101120 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,101107:CD,101112:CD,101116:JM,101120
101124 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,101120
101141 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,101142:CD,101148
101142 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,85857:JM,86105:JM,98083
101145 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,101148
101148 :: NORM :: compound :: Ljava/util/List :: return v3::CF,101142
101150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,101157:CD,101163:CD,101177:CD,101181:CD,101185:CD,101189
101157 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
101163 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,101181
101168 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,101181
101173 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,116462
101177 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,101181
101181 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,101168:CD,101173:CD,101177:JM,101181
101182 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,101189
101185 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,101189
101189 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,101193:CD,101202
101190 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
101193 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,101181
101199 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
101202 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,101181
101229 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,85924:JM,98073
101228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,101229:CD,101235
101232 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,101235
101235 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,101229
101237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getStart()::CE,101238:CD,101244
101238 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getStart()::JM,85931:JM,85998
101241 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .start::DD,101244
101244 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,101238
101247 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getEnd()::JM,85940:JM,85999
101246 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getEnd()::CE,101247:CD,101253
101250 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .end::DD,101253
101253 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,101247
101255 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,101256:CD,101264:CD,101269:CD,101270:CD,101275:CD,101276
101256 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,151706
101261 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,101269
101264 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,101269:JM,101275
101269 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,101275
101270 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,101275:JM,101269
101275 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,101276
101276 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,101256
101282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,101287
101287 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
101293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.size()::CD,101300:CD,101304
101297 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,101304
101300 :: CALL :: call :: Z :: v6 = v4.isEmpty()::JM,101304
101305 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .models::
101304 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 34::CD,101308
101308 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(#(0))::
101327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,101328:CD,101333:CD,101338:CD,101343:CD,101347:CD,101348:CD,101352:CD,101357:CD,101358:CD,101359:CD,101365:CD,101370:CD,101375:CD,101380:CD,101388:CD,101393
101328 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,86119:JM,124031
101333 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,101347:CL,116473
101338 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,101347
101343 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,101347
101347 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,101358
101348 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,101357:CL,77766
101352 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,101357
101357 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,101343:CD,101347:CD,101348:CD,101352:CD,101359:CF,101358
101359 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,101347
101358 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,101328
101365 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
101370 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,101357
101375 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
101380 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
101385 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
101388 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
101393 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
101415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::CE,101416:CD,101421:CD,101425:CD,101429:CD,101436:CD,101482:CD,101487:CD,101492:CD,101500:CD,101505:CD,101515:CD,101519:CD,101522:CD,101527:CD,101532:CD,101540:CD,101545:CD,101556:CD,101561:CD,101566:CD,101574:CD,101579:CD,101588:CD,101592:CD,101593:CD,101598:CD,101599:CD,101602
101416 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::JM,86118:JM,86011
101421 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $start .toString()::JM,101459:CL,77704
101425 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $end .toString()::JM,101479:CL,77704
101429 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,101592:JM,101598
101433 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .groups::JM,101445:JM,101519
101436 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,101445:JM,101519
101441 :: CALL :: call :: Ljava/lang/Object :: v18 = v13.next()::JM,101445:JM,101519
101445 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
101450 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,101459:CL,77704
101454 :: CALL :: call :: Z :: v25 = v23.equals(v6)::JM,101459
101459 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 77::CF,101600
101461 :: CALL :: call :: Z :: v30 = v9.add(v19)::
101460 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,101461
101470 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,101479:CL,77704
101474 :: CALL :: call :: Z :: v36 = v34.equals(v8)::JM,101479
101479 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 159::CF,101602:CD,101515:CD,101519
101482 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v77 = new java.lang.StringBuilder::
101487 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(v6)::JM,101459
101492 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(#( in chain ))::
101497 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .chainID::
101500 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(v83)::
101505 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
101515 :: CALL :: call :: Z :: v16 = v13.hasNext()::JM,101445:JM,101519
101519 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,101441:CD,101445:CD,101450:CD,101454:CD,101459:CD,101460:CD,101470:CD,101474:CD,101479:CD,101600:CD,101602:JM,101519
101522 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
101527 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(v6)::JM,101459
101532 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v67.append(#( in chain ))::
101537 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .chainID::
101540 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(v70)::
101545 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
101556 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
101561 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v8)::JM,101479
101566 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( in chain ))::
101571 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $this .chainID::
101574 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(v56)::
101579 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
101588 :: CALL :: call :: I :: v42 = v9.size()::JM,101592
101593 :: CALL :: call :: [Ljava/lang/Object :: v45 = v9.toArray(v43)::JM,101598
101592 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Group :: v43 = new org.biojava.nbio.structure.Group[]::JM,101598
101599 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v46::DD,101416
101598 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,101599
101600 :: EXPR :: assign :: null :: PHI v27 = v37, #(1)::DD,101460:DD,101602
101602 :: EXPR :: assign :: null :: PHI v37 = #(0), v27::DD,101600
101651 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
101654 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,101656
101656 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
101659 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,101663
101663 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
101666 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,101670
101670 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
101673 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,101677
101677 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
101680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
101697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,101702
101702 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
101708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addChain(org.biojava.nbio.structure.Chain,int)::CD,101721:CD,101725:JM,101752
101718 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .models::JM,101725
101721 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,101725
101725 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CF,101726:CD,101730:CD,101738:CD,101747:CD,101752:CD,101753
101726 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
101730 :: CALL :: call :: Z :: v19 = v16.add(p1 $chain )::JM,101752
101735 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .models::
101738 :: CALL :: call :: Z :: v22 = v20.add(v16)::
101744 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .models::JM,101752
101747 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p2 $modelnr )::JM,101752
101753 :: CALL :: call :: Z :: v15 = v13.add(p1 $chain )::JM,101752
101752 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
101777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,101778:CD,101784
101778 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,125125:JM,125060:JM,125068:JM,125221:JM,125213:JM,125278:JM,127490
101781 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,101784
101784 :: NORM :: compound :: Ljava/util/List :: return v3::CF,101778
101786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,101791:CD,101805:CD,101809:JM,101810
101791 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,101809:JM,101810
101796 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,101809
101801 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,106357
101805 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,101809
101809 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,101796:CD,101801:CD,101805:JM,101809
101810 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
101833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,101838
101838 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
101844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,101849:CD,101853:CD,101857:CD,101871:CD,101875:CD,101879:CD,101884:CD,101888:CD,101893:CD,102025:JM,102003
101849 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,106357
101853 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,101875:CL,61101
101857 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,101875
101862 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,101875
101867 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,106357
101871 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,101875
101875 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,101862:CD,101867:CD,101871:JM,101875
101876 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
101879 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,102003
101884 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,101888:CL,61050
101889 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,102025:CL,77704
101888 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,102025:CD,101889
101893 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,101897:CD,101901:CD,101902:CD,101909:CD,101914
101894 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,101901
101897 :: CALL :: call :: I :: v27 = v25.size()::JM,101901
101901 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
101902 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
101909 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,101914
101914 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,101944:CD,101949:CD,101950:CD,101954:CD,101974:CD,101979:CD,101980:CD,101984:CD,102003:CD,102004:CD,102018
101938 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
101944 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,101949
101949 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
101950 :: CALL :: call :: I :: v54 = v52.intValue()::
101954 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
101968 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
101974 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,101979
101979 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
101980 :: CALL :: call :: I :: v67 = v65.intValue()::
101984 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
102003 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,102004
102004 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,102008
102008 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
102018 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
102025 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,101893
102087 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,86111:JM,106433:JM,110756:JM,112137:JM,125805:JM,127557:JM,127637:JM,145885:JM,146206
102086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,102087:CD,102093:CD,102097
102090 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,102097
102093 :: CALL :: call :: I :: v5 = v3.size()::JM,102097
102097 :: NORM :: compound :: I :: return v5::CF,102087
102099 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,102112:JM,98866:JM,98857:JM,98863
102112 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,98742
102125 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,102135:CD,102139:CD,102144:CD,102151:CD,102156:CD,102199:CD,102207:CD,102212:CD,102221:JM,98866:JM,98857:JM,98863:CD,102252:CD,102253
102135 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,99449
102139 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,102144
102145 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,102150
102144 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,102252:CD,102145:CD,102150
102151 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,102156
102150 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,102252
102157 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
102156 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,102157:CD,102163:CD,102168:CD,102173:CD,102253
102163 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,98742
102168 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,102173
102173 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,102253:CD,102174:CD,102175:CD,102176:JM,116514:JM,116517:JM,116520:CD,102192
102175 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,102188
102174 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,102192:CF,102175
102176 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
102188 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
102192 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,102192
102199 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
102207 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
102212 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
102221 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,102240
102240 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,98103
102253 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,102221
102252 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,102253
102296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,102309:JM,98866:JM,98857:JM,98863
102309 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,116531
102322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,102326:CD,102330:CD,102334:CD,102338:CD,102342:CD,102343:CD,102348:CD,102352:CD,102356:CD,102386:CD,102390:CD,102392:JM,98866:JM,98857:JM,98863
102326 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
102330 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,116587
102334 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,102342:CL,116587
102338 :: CALL :: call :: I :: v10 = v8.length()::JM,102342
102343 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
102342 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
102348 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
102352 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,102390:CL,116596
102356 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,102390
102361 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,102390
102366 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
102381 :: CALL :: call :: Z :: v34 = v3.add(v27)::
102386 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,102390
102390 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,102361:CD,102366:JM,116660:JM,116646:JM,116633:JM,116650:JM,116636:CD,102381:CD,102386:JM,102390
102392 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,99344
102423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.scalarProduct(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,102424:CD,102428:CD,102432:CD,102436:CD,102437:CD,102441:CD,102445:CD,102446:CD,102447:CD,102451:CD,102455:CD,102456:CD,102457
102424 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.scalarProduct(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,86474:JM,86478
102428 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,102436:CL,75290
102432 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,102436:CL,75290
102437 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,102445:CL,77814
102436 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 * v7::DD,102446
102441 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,102445:CL,77814
102445 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 * v12::CF,102446
102447 :: CALL :: call :: D :: v16 = p1 $a .getZ()::JM,102455:CL,77828
102446 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v8 + v13::DD,102456
102451 :: CALL :: call :: D :: v18 = p2 $b .getZ()::JM,102455:CL,77828
102455 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 * v18::CF,102456
102457 :: NORM :: compound :: D :: return v20::CF,102424
102456 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::CF,102457
102464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getCentroid(org.biojava.nbio.structure.Atom[])::CD,102470:CD,102476:CD,102489:CD,102535:CD,102536:CD,102541:CD,102542:CD,102551:CD,102552:CD,102561:CD,102562:JM,73732:JM,73737:CD,102571:CD,102576
102470 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v39 = new java.lang.IllegalArgumentException::
102477 :: EXPR :: modify :: D :: v6[#(0)] = #(0.0 d)::
102476 :: NORM :: declaration :: [D :: v6 = new []::
102481 :: EXPR :: modify :: D :: v6[#(1)] = #(0.0 d)::
102485 :: EXPR :: modify :: D :: v6[#(2)] = #(0.0 d)::
102489 :: EXPR :: assign :: I :: v10 = p1 $atomSet .length::DD,102535
102495 :: EXPR :: reference :: D :: v12 = v6[#(0)]::DD,102503
102499 :: CALL :: call :: D :: v14 = v11.getX()::JM,102503:CL,75290
102503 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 + v14::DD,102504
102504 :: EXPR :: modify :: D :: v6[#(0)] = v15::
102508 :: EXPR :: reference :: D :: v16 = v6[#(1)]::DD,102516
102512 :: CALL :: call :: D :: v18 = v11.getY()::JM,102516:CL,77814
102517 :: EXPR :: modify :: D :: v6[#(1)] = v19::
102516 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,102517
102521 :: EXPR :: reference :: D :: v20 = v6[#(2)]::DD,102529
102525 :: CALL :: call :: D :: v22 = v11.getZ()::JM,102529:CL,77828
102529 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v20 + v22::DD,102530
102530 :: EXPR :: modify :: D :: v6[#(2)] = v23::
102535 :: PRED :: IF :: Z :: if (v25 < v10) goto 47::CD,102499:CD,102503:CD,102512:CD,102516:CD,102525:CD,102529:CD,102534:CD,102576:CF,102536
102534 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,102576
102537 :: EXPR :: reference :: D :: v27 = v6[#(0)]::DD,102542
102536 :: EXPR :: assign :: I :: v26 = p1 $atomSet .length::DD,102541:DD,102551:DD,102561
102541 :: EXPR :: assign :: D :: v28 = CONVERT I to D v26::CF,102542
102543 :: EXPR :: modify :: D :: v6[#(0)] = v29::
102542 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 / v28::DD,102543
102547 :: EXPR :: reference :: D :: v30 = v6[#(1)]::DD,102552
102551 :: EXPR :: assign :: D :: v31 = CONVERT I to D v26::CF,102552
102553 :: EXPR :: modify :: D :: v6[#(1)] = v32::
102552 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v30 / v31::DD,102553
102557 :: EXPR :: reference :: D :: v33 = v6[#(2)]::DD,102562
102561 :: EXPR :: assign :: D :: v34 = CONVERT I to D v26::CF,102562
102563 :: EXPR :: modify :: D :: v6[#(2)] = v35::
102562 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v33 / v34::DD,102563
102571 :: CALL :: call :: V :: v36.setCoords(v6)::CL,106499
102576 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,102534:DD,102535
102637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.centerAtoms(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom)::CE,102638:CD,102642:CD,102647:CD,102648:CD,102664:CD,102665:CD,102666:CD,102667
102638 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.Calc.centerAtoms(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom)::JM,86777:JM,86747:JM,86749
102642 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = getCenterVector(p1 $atomSet , p2 $centroid )::CL,116676
102647 :: EXPR :: assign :: I :: v6 = p1 $atomSet .length::CF,102648
102648 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/AtomImpl :: v7 = new org.biojava.nbio.structure.AtomImpl[]::DD,102666
102654 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v12 = add(v10, v5)::CL,103267
102663 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,102667
102665 :: PRED :: IF :: Z :: if (v15 < v9) goto 21::CD,102654:CD,102663:CD,102664:CD,102667:CF,102666
102664 :: EXPR :: assign :: I :: v9 = p1 $atomSet .length::CF,102665
102667 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,102663:DD,102665:CF,102664
102666 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v7::DD,102638
102689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.calculate([][],[][])::JM,55248:JM,55240:JM,55273:JM,55262:CD,102705:CD,102709:CD,102714:CD,102718:CD,102722:CD,102726:CD,102731:CD,102735:CD,102740:CD,102750:CD,102754:CD,102755:CD,102821:CD,102829
102705 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v10 = v7.transpose()::CL,116737
102709 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v12 = v10.times(v5)::CL,116817
102714 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/SingularValueDecomposition :: v14 = v12.svd()::CL,116984
102718 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v16 = v14.getU()::CL,116996
102722 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v18 = v14.getV()::CL,117032
102726 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.clone()::CL,117057
102731 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v23 = v16.transpose()::CL,116737
102735 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v25 = v18.times(v23)::CL,116817
102740 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v27 = v25.transpose()::CL,116737
102750 :: CALL :: call :: D :: v30 = v28.det()::JM,102754:CL,117067
102755 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 187::CD,102756:CD,102767:CD,102780:CD,102793:CD,102799:CD,102803:CD,102808
102754 :: EXPR :: assign :: Z :: v32 = v30 > #(0.0 d)::DD,102755
102756 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v35 = v21.transpose()::CL,116737
102767 :: CALL :: call :: V :: v35.set(#(2), #(0), v39)::CL,103421
102780 :: CALL :: call :: V :: v35.set(#(2), #(1), v44)::CL,103421
102793 :: CALL :: call :: V :: v35.set(#(2), #(2), v48)::CL,103421
102799 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v51 = v35.transpose()::CL,116737
102803 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v53 = v51.times(v23)::CL,116817
102808 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v55 = v53.transpose()::CL,116737
102821 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v61 = v58.times(v59)::CL,116817
102829 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v64 = v62.minus(v61)::CL,117083
102935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomIterator.next()::CD,102942:CD,102952:CD,102956:CD,102961:CD,102993:CD,103017:CD,103035:CD,103039:CD,103052
102939 :: EXPR :: reference :: I :: v3 = p0 $this .current_atom_pos::DD,102942
102943 :: EXPR :: modify :: I :: p0 $this .current_atom_pos = v5::
102942 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v3 + #(1)::DD,102943
102946 :: EXPR :: reference :: I :: v6 = p0 $this .current_atom_pos::DD,102956
102952 :: CALL :: call :: I :: v9 = v7.size()::JM,102956:CL,117185
102956 :: PRED :: IF :: Z :: if (v6 < v9) goto 85::CD,102988:CD,103005
102961 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v47 = new java.util.NoSuchElementException::
102988 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v46 = p0 $this .next()::CL,102935
102993 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v38 = new java.util.NoSuchElementException::
103005 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v13 = v10.getAtom(v11)::CL,117198
103014 :: EXPR :: reference :: I :: v20 = p0 $this .current_atom_pos::
103017 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::
103035 :: CALL :: call :: I :: v27 = v25.size()::CL,117185
103039 :: CALL :: call :: Ljava/lang/Integer :: v29 = valueOf(v27)::
103052 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v31 = new java.util.NoSuchElementException::
103080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.rotate(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.jama.Matrix)::CD,103085:CD,103089:CD,103093:CD,103097:CD,103098:JM,55248:JM,55240:JM,55273:JM,55262:CD,103120:CD,103131:CD,103141:CD,103151
103085 :: CALL :: call :: D :: v5 = p1 $atom .getX()::JM,103099:CL,75290
103089 :: CALL :: call :: D :: v7 = p1 $atom .getY()::JM,103103:CL,77814
103093 :: CALL :: call :: D :: v9 = p1 $atom .getZ()::JM,103107:CL,77828
103097 :: NORM :: declaration :: [[D :: v11 = new [][]::CF,103098
103099 :: EXPR :: modify :: D :: v14[#(0)] = v5::
103098 :: NORM :: declaration :: [D :: v14 = new []::DD,103111
103103 :: EXPR :: modify :: D :: v14[#(1)] = v7::
103107 :: EXPR :: modify :: D :: v14[#(2)] = v9::
103111 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v14::
103120 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v19 = v16.times(p2 $m )::CL,116817
103131 :: CALL :: call :: V :: p1 $atom .setX(v21)::CL,73848
103141 :: CALL :: call :: V :: p1 $atom .setY(v24)::CL,73864
103151 :: CALL :: call :: V :: p1 $atom .setZ(v27)::CL,73880
103195 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.AtomIterator.hasNext()::JM,86951:JM,87010
103194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomIterator.hasNext()::CE,103195:CD,103201
103198 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v3 = p0 $this .group::DD,103201
103201 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,103202:CD,103209:CD,103213:CD,103214
103203 :: EXPR :: reference :: I :: v5 = p0 $this .current_atom_pos::DD,103214
103202 :: NORM :: compound :: Z :: return #(0)::CF,103195
103209 :: CALL :: call :: I :: v8 = v6.size()::JM,103213:CL,117185
103213 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 - #(1)::CF,103214
103215 :: NORM :: compound :: Z :: return #(1)::CF,103195
103214 :: PRED :: IF :: Z :: if (v5 >= v10) goto 30::CD,103215:CD,103219
103216 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupIterator :: v11 = p0 $this .groupiter::DD,103219
103219 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 77::CD,103223:CD,103227:CD,103239:CD,103243:CD,103245
103220 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupIterator :: v13 = p0 $this .groupiter::JM,103223:JM,103227
103223 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.clone()::JM,103223:JM,103227
103227 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,103233:JM,103237:JM,103229:JM,103239:JM,103243
103229 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v16.next()::JM,103233:JM,103237:JM,103229
103233 :: CALL :: call :: I :: v22 = v20.size()::JM,103233:JM,103237
103237 :: PRED :: IF :: Z :: if (v22 <= #(0)) goto 67::CD,103238:CD,103239:CD,103243
103239 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,103239:JM,103243
103238 :: NORM :: compound :: Z :: return #(1)::CF,103195
103243 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 51::CD,103229:CD,103233:CD,103237:CD,103246
103245 :: NORM :: compound :: Z :: return #(0)::CF,103195
103246 :: NORM :: compound :: Z :: return #(0)::CF,103195
103267 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.add(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,73732:JM,73737:CD,103285:CD,103298:CD,103311
103285 :: CALL :: call :: V :: v4.setX(v10)::CL,73848
103298 :: CALL :: call :: V :: v4.setY(v16)::CL,73864
103311 :: CALL :: call :: V :: v4.setZ(v22)::CL,73880
103353 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,105928:JM,151845
103352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,103353:CD,103359:CD,103400
103356 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,103359
103359 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,103363:CD,103373
103363 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,103367:CL,117230
103367 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
103370 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,103373
103373 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,103376:CD,103384:CD,103389
103376 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
103381 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
103384 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
103389 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
103397 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,103400
103400 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,103353
103413 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,87280:JM,87258:JM,87281:JM,87275:JM,119633:JM,119616:JM,119622:JM,119628:JM,119742:JM,151991:JM,151903:JM,169637:JM,169631
103412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,103413:CD,103419
103416 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,103419
103419 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,103413
103421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,103435
103428 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
103431 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
103435 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
103445 :: EXIT :: exit :: I :: org.biojava.nbio.structure.jama.Matrix.getColumnDimension()::JM,87308:JM,132128
103444 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getColumnDimension()::CE,103445:CD,103451
103448 :: EXPR :: reference :: I :: v3 = p0 $this .n::DD,103451
103451 :: NORM :: compound :: I :: return v3::CF,103445
103453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getRowDimension()::CE,103454:CD,103460
103454 :: EXIT :: exit :: I :: org.biojava.nbio.structure.jama.Matrix.getRowDimension()::JM,87314:JM,132121
103457 :: EXPR :: reference :: I :: v3 = p0 $this .m::DD,103460
103460 :: NORM :: compound :: I :: return v3::CF,103454
103463 :: EXIT :: exit :: [[Z :: org.biojava.nbio.structure.align.ce.CECalculator.notifyBreakFlagListener([][])::
103462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.notifyBreakFlagListener([][])::CE,103463:CD,103470:CD,103485:CD,103489:CD,103490:CD,103491
103467 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .matrixListeners::JM,103489:JM,103479
103470 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,103489:JM,103479
103475 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,103489:JM,103479
103479 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,103491:JM,103480
103480 :: CALL :: call :: [[Z :: v14 = v12.initializeBreakFlag(v15)::JM,103491:JM,103480
103485 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,103489:JM,103479
103489 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,103475:CD,103479:CD,103480:CD,103485:CD,103491:JM,103489:CF,103490
103491 :: EXPR :: assign :: null :: PHI v15 = p1 $brkFlag , v14::JM,103489:JM,103479:JM,103491:JM,103480:DD,103490
103490 :: NORM :: compound :: [[Z :: return v15::DD,103463
103501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,103502:CD,103507:CD,103512:CD,103513
103502 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,88856:JM,88895:JM,147832:JM,150272
103507 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,103512
103513 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,103502
103512 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,103513
103517 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,88865:JM,105867:JM,150302:JM,160611:JM,160653
103516 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,103517:CD,103520:CD,103526:CD,103531
103520 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
103526 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,103531
103531 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,103534:CD,103539:CD,103541
103534 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,103539
103539 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,103540:CD,103541
103541 :: NORM :: compound :: Z :: return #(1)::DD,103517
103540 :: NORM :: compound :: Z :: return #(0)::DD,103517
103552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,103557:CD,103561:CD,103567:CD,103571:CD,103576:CD,103580:CD,103585:CD,103589:CD,103594:CD,103598:CD,103614:CD,103620:CD,103630:CD,103643:CD,103649:CD,103659:CD,103666
103557 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,103561
103561 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
103567 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
103571 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,103561
103576 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
103580 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
103585 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
103589 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,103561
103594 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
103598 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
103614 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
103620 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
103630 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
103643 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
103649 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
103659 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
103666 :: CALL :: call :: V :: v54.printStackTrace()::
103718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,103728:CD,103729:CD,103734:CD,103739:CD,103748:CD,103753:CD,103759:CD,103767:CD,103769:CD,103783
103729 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
103728 :: NORM :: declaration :: Ljava/io/IOException :: v68 = new java.io.IOException::
103734 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
103739 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
103748 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,103794:JM,103829:CL,117361
103753 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,117573
103756 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
103759 :: CALL :: call :: I :: v13 = v11.ordinal()::
103763 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,103767
103767 :: PRED :: IF :: null :: switch v14::CD,103794:CD,103829:CD,103851:CD,103853
103769 :: NORM :: declaration :: Ljava/io/IOException :: v59 = new java.io.IOException::
103783 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
103794 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,103799:CD,103803:CD,103851:CD,103853
103799 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,103803:CL,117684
103803 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,103804:CD,103808:CD,103810:CD,103811
103804 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,103810
103808 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,103810
103811 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,103851:CD,103853
103810 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,103811
103829 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,103830:CD,103834:CD,103836:CD,103837:CD,103851:CD,103853
103830 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,103836
103834 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,103836
103837 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,103851:CD,103853
103836 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,103837
103848 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,103853
103851 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,103853
103853 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,103854:CD,103862:CD,103874:CD,103876
103854 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,117723
103862 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,117758
103871 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,103876
103874 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,103876
103877 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,103883:CL,117969
103876 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,103877:CD,103881:CD,103883:CD,103899
103881 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,103883
103883 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,103887:CD,103899
103887 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,117758
103899 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,117758
103973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,103977:CD,103981:CD,103988:CD,103992
103977 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,104000:JM,104028:CL,90216
103981 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
103988 :: CALL :: call :: Z :: v8 = v4.exists()::JM,103992
103992 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,103995:CD,104000:CD,104004:CD,104009:CD,104023:CD,104028:CD,104032:CD,104037:CD,104050:CD,104055:CD,104059:CD,104063:CD,104085:CD,104090:CD,104094:CD,104099:CD,104107:CD,104111:CD,104115:CD,104120:CD,104125
103995 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
104000 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,104000:JM,104028
104004 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
104009 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
104023 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
104028 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,104000:JM,104028
104032 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
104037 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
104050 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
104055 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,104059
104059 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,104060
104060 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
104063 :: CALL :: call :: V :: v23.close()::
104085 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
104090 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,104000:JM,104028
104094 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
104099 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
104104 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
104107 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
104111 :: CALL :: call :: I :: v52 = v50.size()::
104115 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
104120 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
104125 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
104169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,104170:CD,104173:CD,104175:CD,104179:CD,104180:CD,104188:CD,104193:CD,104195:CD,104198:CD,104200
104170 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,104305:JM,104272:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300
104173 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,104193:JM,104188:JM,104175
104175 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,104193:JM,104188:JM,104175
104179 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,104193:JM,104188
104180 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
104188 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,104193:JM,104188
104193 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,104200
104195 :: CALL :: call :: V :: v14.printStackTrace()::
104198 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,104170
104200 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,104198
104211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,104215
104215 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,118205
104223 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,104228:CD,104232:CD,104240:CD,104245:CD,104260:CD,104264:CD,104268:CD,104272:CD,104278:CD,104282:CD,104291:CD,104295:CD,104342:CD,104346:CD,104350:CD,104358:CD,104363:CD,104372:CD,104373:CD,104381:CD,104386:CD,104397
104228 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
104232 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
104240 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
104245 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
104260 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,89851
104264 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,79139
104268 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,104305:JM,104272:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300:CL,104169
104272 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,104305:JM,104272:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300
104278 :: CALL :: call :: I :: v30 = v26.size()::JM,104305:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300
104282 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,104304:JM,104295:JM,104310:JM,104342:JM,104346:JM,104300
104291 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,104305:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300
104295 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,104304:JM,104295:JM,104310:JM,104342:JM,104346:JM,104300
104300 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,104304:JM,104342:JM,104346:JM,104300
104305 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,104305:JM,104304:JM,104291:JM,104295:JM,104278:JM,104310:JM,104342:JM,104346:JM,104300
104304 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,104305:JM,104304:JM,104295:JM,104310:JM,104342:JM,104346:JM,104300:JM,104291:JM,104278
104311 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,104320:JM,104311
104310 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,104320:JM,104311
104316 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
104320 :: EXPR :: assign :: I :: v52 = v49.length::DD,104332
104326 :: CALL :: call :: Z :: v55 = v50.add(v53)::
104331 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,104398
104332 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,104326:CD,104331:CD,104398
104336 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
104342 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,104304:JM,104342:JM,104346:JM,104300
104346 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,104300:CD,104304:CD,104305:CD,104310:CD,104311:CD,104316:CD,104320:CD,104332:CD,104336:CD,104342:CD,104398:JM,104346
104350 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
104355 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
104358 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
104363 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
104373 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
104372 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v74 = new java.lang.IllegalArgumentException::
104378 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
104381 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
104386 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
104397 :: EXPR :: assign :: Ljava/lang/Exception :: v62 = catch <exc>::
104398 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,104331:DD,104332
104489 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,104490:CD,104493:CD,104497:CD,104502:CD,104506
104490 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,89568
104493 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,118325
104497 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
104502 :: CALL :: call :: Z :: v8 = v5.exists()::JM,104506
104507 :: CALL :: call :: J :: v11 = v5.length()::JM,104511
104506 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,104507:CD,104511:CD,104512:CD,104514
104511 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,104512
104513 :: NORM :: compound :: Z :: return #(1)::DD,104490
104512 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,104513:CD,104514
104514 :: NORM :: compound :: Z :: return #(0)::DD,104490
104527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,104534:CD,104538:CD,104545:CD,104550:CD,104559:CD,104568:CD,104572:CD,104577:CD,104583:CD,104588:CD,104595:CD,104596
104531 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,104538
104534 :: CALL :: call :: I :: v5 = v3.size()::JM,104538
104539 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,118393
104538 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,104539
104542 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
104545 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
104550 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
104559 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,118453:CL,118477
104568 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,118325
104572 :: NORM :: declaration :: Ljava/io/File :: v25 = new java.io.File::
104577 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,118515
104583 :: CALL :: call :: Z :: v13 = v11.hasNext()::
104588 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
104595 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,104596
104596 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
104619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,104623:CD,104624:CD,104636:CD,104637:CD,104651
104623 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
104624 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,118325
104637 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
104636 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,104637
104651 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,118564
104686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,104691
104691 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
104706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,104711
104711 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
104726 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,104731
104731 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
104746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,104751
104751 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
104766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,104771
104771 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
104786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,104791
104791 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
104806 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,104811
104811 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
104826 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,104831
104831 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
104837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,104842
104842 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
104857 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,104862
104862 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
104877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,104882
104882 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
104897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,104902
104902 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
104909 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,99097:JM,99210
104908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,104909:CD,104912:CD,104914:CD,104918:CD,104919:CD,104927:CD,104932:CD,104933:CD,104938:CD,104945:CD,104946
104912 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,104914:JM,104932:JM,104927
104914 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,104914:JM,104932:JM,104927
104919 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
104918 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,104932:JM,104927
104927 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,104932:JM,104927
104933 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,104945:JM,104933
104932 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,104945:JM,104933
104938 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
104945 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,104909
104946 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
105059 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
105058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,105059:CD,105064:CD,105069
105064 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,105069:CL,119071
105069 :: NORM :: compound :: I :: return v6::CF,105059
105073 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
105072 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,105073:CD,105078:CD,105083
105078 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,105083:CL,119285
105083 :: NORM :: compound :: I :: return v6::DD,105073
105757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,105758:CD,105782:CD,105786:CD,105788:JM,105779:JM,105769
105758 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,91219:JM,92005:JM,92398:JM,92482:JM,92648:JM,97222
105764 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,105779:JM,105769:JM,105786
105769 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,105780
105770 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,105779:CL,77766
105774 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,105779:JM,105769:JM,105786
105779 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,105780:CD,105781:CD,105782:CD,105786:CD,105788
105781 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,105788
105780 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,105758
105782 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,105779:JM,105769:JM,105786
105787 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,105758
105786 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,105764:CD,105769:CD,105770:CD,105774:CD,105779:CD,105787:JM,105786
105788 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,105779:JM,105769:DD,105781:DD,105786
105813 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
105816 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
105819 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
105831 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,92435:JM,106297
105830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,105831:CD,105837:CD,105841:JM,105857:JM,105852
105837 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,105841:JM,105851:CL,119578
105841 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,105842:CD,105846:CD,105850:CD,105852:CD,105881:CD,105882
105842 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,103352
105846 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,105850:CL,119811
105851 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,105831
105850 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,105851:CD,105852:CD,105881:CD,105882
105853 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,105857
105852 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,105858:CD,105853:CD,105857:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,105882
105857 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,105858:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,105863:CD,105867:CD,105882
105858 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,105882
105863 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,105867:CL,103516
105867 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,105873:CF,105868:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,105877:CD,105882
105868 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,105882
105873 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,105882
105877 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,61079
105881 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,105831
105882 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,105881
105908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,105913:CD,105917:CD,105922:JM,105964
105913 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,105922:CL,60637
105917 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,105922
105922 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,105924:CD,105928:CD,105951:CD,105978
105924 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,105928:CL,103352
105929 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,105940:JM,105935:CL,60355:CL,60363:CL,60347
105928 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,105929:CD,105933:CD,105935:CD,105940:CD,105942:CD,105946:CD,105950:CD,105978
105933 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,105940:JM,105935
105935 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,105940:JM,105935
105940 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,105978
105942 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,103352
105946 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,105950:CL,119845
105951 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,105955:CD,105959:CD,105964
105950 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,105978
105955 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,105964:CL,119854
105959 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,105964
105964 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,105968:CD,105972
105968 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,119854
105972 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,105964
105978 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,105951
106002 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,106009:CD,106010:CD,106021:CD,106022:CD,106030:CD,106034:CD,106057:CD,106071
106006 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,106009
106009 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,106010
106011 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,106014
106010 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,106014:CD,106015
106015 :: CALL :: call :: V :: v7.trimToSize()::
106014 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
106018 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,106021
106021 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,106022
106023 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,106026
106022 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,106026:CD,106027
106027 :: CALL :: call :: V :: v12.trimToSize()::
106026 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
106030 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,106034:CL,119863
106035 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,106056:CL,61101
106034 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,106035:CD,106039:CD,106052:CD,106056:CF,106057
106039 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,106056
106044 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,106056
106049 :: CALL :: call :: V :: v24.trimToSize()::CL,106002
106052 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,106056
106057 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,106065
106056 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,106044:CD,106049:CD,106052:JM,106056:CF,106057
106065 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
106068 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,106071
106071 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,106072
106072 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,106080
106080 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
106111 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,106112:CD,106122:CD,106126:CD,106130:JM,106146:JM,106196:JM,106220
106112 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,92009
106122 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,106130:CL,119890
106126 :: CALL :: call :: I :: v11 = v9.size()::JM,106130
106131 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,106130
106130 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,106131:CD,106137:CD,106141:CD,106146:CD,106154:CD,106158:CD,106203:CD,106207:JM,106130
106137 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,106146:CL,73938
106141 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,106146:JM,106196
106147 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,106150
106146 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,106150:CD,106154:CD,106158:CD,106203:CD,106207
106150 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,106112
106154 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,106167:JM,106207:CL,61101
106158 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,106167:JM,106207
106163 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,106167:JM,106207
106167 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,106197
106168 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,106176:JM,106202:CL,119890
106172 :: CALL :: call :: I :: v33 = v31.size()::JM,106176:JM,106202
106177 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,106176:JM,106202
106176 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,106177:CD,106198:CD,106202:CD,106203:CD,106207:JM,106176:JM,106167
106182 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,106202
106187 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,106196:CL,73938
106191 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,106196:JM,106146
106197 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,106112
106196 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,106197:CD,106198:CD,106202
106198 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,106202
106203 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,106167:JM,106207
106202 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,106182:CD,106187:CD,106191:CD,106196:CD,106203:CD,106207:JM,106202:JM,106167
106207 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,106163:CD,106167:CD,106168:CD,106172:CD,106176:CD,106211:CD,106215:CD,106220:JM,106207
106211 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,106220:CL,60637
106215 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,106220
106220 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,106224:CD,106228:CD,106232:CD,106268:CD,106275:CD,106286:CD,106293:CD,106297
106224 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,106232:CL,119890
106228 :: CALL :: call :: I :: v64 = v62.size()::JM,106232
106233 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,106236
106232 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,106236:CD,106240:CD,106244:CD,106245:CD,106249:CD,106253:CD,106257:CD,106263:CD,106267
106236 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,106112
106240 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,106244:CL,52556:CL,52698:CL,52873
106245 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
106244 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,106267:CF,106245
106249 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,119899
106253 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,61101
106257 :: CALL :: call :: V :: v73.clear()::
106263 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,60988
106267 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,106112
106268 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,106297:CL,105830
106275 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,61059:CL,60646
106286 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,60626
106293 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,60988
106297 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,106112
106357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,106368:JM,106362
106362 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
106365 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,106368
106368 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,106376
106376 :: CALL :: call :: V :: v6.setChainId(v8)::CL,101282
106387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,106397:CD,106429:CD,106433:CD,106437:CD,106445
106391 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
106397 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,119985
106408 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,60253
106413 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,119985
106420 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,101150
106425 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,106445
106429 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,106433:CL,102086
106433 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,106408:CD,106413:CD,106420:CD,106425:CD,106429:CD,106445
106437 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,120032
106445 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,106425:DD,106433
106467 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,91721:JM,91729
106466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,106467:CD,106473
106470 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,106473
106473 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,106467
106475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,106480:JM,106489
106481 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
106480 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,106485:JM,106480:JM,106489
106485 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,106480:JM,106489
106489 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
106499 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCoords([])::JM,106504
106504 :: EXPR :: modify :: [D :: p0 $this .coords = p1 $c ::
106510 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,106516:CD,106520:CD,106528:CD,106529:CD,106534:CD,106539
106516 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
106520 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
106529 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
106528 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
106534 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
106539 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
106554 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,106559
106559 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
106565 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,106570
106570 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
106576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,106581
106581 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
106587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,106588:CD,106594
106588 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,92987:JM,151108
106591 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,106594
106594 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,106588
106596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,106601
106601 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
106607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,106608:CD,106614
106608 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,93091:JM,93079:JM,93085
106611 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,106614
106614 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,106608
106616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,106621
106621 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
106627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,106632:CD,106636
106632 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,106642:JM,106646:JM,106636:CL,120194
106636 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,106641
106638 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,106641
106641 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,106642:JM,106646
106642 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,106642:JM,106646
106646 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
106680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,106685
106685 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
106691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,106696
106696 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
106702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,106707
106707 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
106713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,106725:JM,106718:CD,106721
106718 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
106721 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,106721:JM,106725
106725 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
106733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,106738:JM,106745:CD,106741
106738 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
106741 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,106741:JM,106745
106745 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
106753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,106758:JM,106765:CD,106761
106758 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
106761 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,106761:JM,106765
106765 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
106773 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,106774:CD,106777:CD,106781:CD,106782
106774 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,93556:JM,149080
106777 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,106781:CL,120209
106781 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,106782
106783 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,106787:CL,120218
106782 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,106783:CD,106787:CD,106788:CD,106796
106787 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,106788
106789 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,106793:CL,120227
106788 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,106789:CD,106793:CD,106794:CD,106796
106793 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,106794
106795 :: NORM :: compound :: Z :: return #(0)::CF,106774
106794 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,106795:CD,106796
106796 :: NORM :: compound :: Z :: return #(1)::CF,106774
106808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,106813
106813 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
106819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,106820:CD,106823:JM,106835:JM,106828:JM,106878
106820 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,93580:JM,149201
106823 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,106824:CD,106828:CD,106829:JM,106835:JM,106878
106824 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,106835:JM,106828:JM,106878
106829 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,106820
106828 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,106829:CD,106830:CD,106835:CD,106836:CD,106837:CD,106843:CD,106851:CD,106856:CD,106860:CD,106865:CD,106871:CD,106876:CD,106877:CD,106878:JM,106828
106830 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,106835:JM,106828:JM,106878
106835 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,106878
106837 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
106836 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
106843 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
106851 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
106856 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
106860 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
106865 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
106871 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,106876
106877 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,106820
106876 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,106877
106878 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,106836
106898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,106903
106903 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
106909 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,106914
106914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
106920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,106928:CD,106932
106928 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,106932:CL,97711
106932 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,106934:CD,106939:CD,106944:CD,106945
106934 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
106939 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,106944
106945 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,106950:CD,106955:CD,107109:CD,107114:CD,107159:CD,107164
106944 :: EXPR :: assign :: I :: v14 = v13.length::DD,106945
106946 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,106955
106950 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,106955
106955 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,106960:CD,106966:CD,106971:CD,106976:CD,106981:CD,106992:CD,106997:CD,107004
106956 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,107017
106960 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,107017
106966 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
106971 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,107017
106976 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,107017
106981 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
106992 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,106997
106997 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,106998
106998 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
107001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,107004
107004 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,107008:CD,107012:CD,107017:CD,107019:JM,120257:JM,120273:JM,120270:CD,107044:CD,107052:CD,107060:CD,107065:CD,107075:CD,107083:CD,107087:CD,107092:CD,107097
107008 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,107017:CL,120236
107012 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,107017
107017 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,107019:JM,120257:JM,120273:JM,120270:CD,107044:CD,107052:CD,107060:CD,107065:CD,107075:CD,107083:CD,107087:CD,107092:CD,107097
107019 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
107044 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
107052 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
107060 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
107065 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
107075 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
107080 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
107083 :: CALL :: call :: I :: v74 = v72.size()::
107087 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
107092 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
107097 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
107105 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,107114
107109 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,107114
107115 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
107114 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,107119:CD,107125:CD,107130:CD,107135:CD,107140:CD,107151
107119 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
107125 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
107130 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
107135 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
107140 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
107151 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,120290
107155 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,107164
107159 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,107164
107165 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
107164 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,107169:CD,107175:CD,107180:CD,107185:CD,107190:CD,107201:CD,107207:CD,107215:CD,107219:CD,107224:CD,107237
107169 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
107175 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
107180 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
107185 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
107190 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
107201 :: CALL :: call :: V :: v121.setDescription(v109)::CL,120301
107207 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
107215 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,120236
107219 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
107224 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
107237 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,120312
107321 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,107322:CD,107328
107322 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,94095:JM,127689
107325 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,107328
107328 :: NORM :: compound :: Z :: return v3::CF,107322
107337 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
107340 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,107344
107344 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
107347 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
107350 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
107353 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,107357
107357 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
107360 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
107377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,107382:CD,107387:JM,107489:JM,107472:JM,107408:JM,107478:JM,107455:JM,107438
107382 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107387 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,107388:CD,107391:CD,107396:CD,107400:CD,107404:CD,107412:CD,107417
107388 :: CALL :: call :: V :: p0 $this .initialize()::CL,120334
107391 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107396 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,107489:JM,107472:JM,107408:JM,107478:JM,107455:JM,107438
107400 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,107408
107404 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,107408
107408 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
107412 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,107417
107417 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,107418:CD,107423:CD,107424
107418 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,107423
107423 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,107424:CD,107433:CD,107438:JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455
107424 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,107429:CL,120380
107429 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
107433 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107439 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
107438 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,107442:CD,107445:CD,107450:CD,107455:JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107438
107442 :: CALL :: call :: V :: v39.clear()::
107445 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,120425
107450 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107455 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,107459:CD,107462:CD,107467:CD,107472:JM,107489:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107456 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
107459 :: CALL :: call :: V :: v36.clear()::
107462 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,120425
107467 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107473 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107472 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,107473:CD,107478:CD,107484:CD,107489:JM,107472:JM,107408:JM,107387:JM,107455:JM,107438
107479 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,120425
107478 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,107479:CD,107484:CD,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107484 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,107489:JM,107472:JM,107408:JM,107478:JM,107387:JM,107455:JM,107438
107489 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,107490:CD,107495
107490 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,107495:CL,120476
107495 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,107496:CD,107502
107496 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,120632
107499 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,107502
107503 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
107502 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,107503
107553 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,107554:CD,107560
107554 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,94254:JM,94271:JM,150753:JM,150766
107557 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,107560
107560 :: NORM :: compound :: F :: return v3::CF,107554
107562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,107567
107567 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
107573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,107574:CD,107580:CD,107586:CD,107590:CD,107595:CD,107605:CD,107606:JM,107600
107574 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,94502:JM,94509:JM,94516:JM,94523:JM,94530:JM,94537:JM,94544:JM,94551:JM,94558:JM,94565
107580 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,107600:JM,107595
107586 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,107600:JM,107595
107590 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,107600:JM,107595
107595 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,107606:CD,107596:CD,107600:JM,107595
107596 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,107600:JM,107595
107600 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,107600:DD,107606
107605 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,107574
107606 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,107605
107623 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,107624:CD,107630
107624 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,94759
107627 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,107630
107630 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,107624
107659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,107664
107664 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
107677 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
107680 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
107683 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
107686 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
107699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,107704
107704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
107710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,107715
107715 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
107767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,107772
107772 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
107778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,107783
107783 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
107789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,107794
107794 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
107800 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,107805
107805 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
107811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,107816
107816 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
107822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,107827
107827 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
107833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,107838
107838 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
107844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,107849
107849 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
107855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,107860
107860 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
107866 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,107871
107871 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
107877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,107882
107882 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
107897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,107902
107902 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
107908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,107913
107913 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
107933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID1(java.lang.String)::JM,107938
107938 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p1 $chainID1 ::
107944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum1(java.lang.String)::JM,107949
107949 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum1 = p1 $resnum1 ::
107955 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID2(java.lang.String)::JM,107960
107960 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p1 $chainID2 ::
107966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum2(java.lang.String)::JM,107971
107971 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum2 = p1 $resnum2 ::
107977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode1(java.lang.String)::JM,107982
107982 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode1 = p1 $insCode1 ::
107988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode2(java.lang.String)::JM,107993
107993 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode2 = p1 $insCode2 ::
108020 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name1 = p1 $name1 ::
108023 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc1 = p2 $altLoc1 ::
108026 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName1 = p3 $resName1 ::
108029 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p4 $chainID1 ::
108032 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq1 = p5 $resSeq1 ::
108035 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode1 = p6 $iCode1 ::
108038 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name2 = p7 $name2 ::
108041 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc2 = p8 $altLoc2 ::
108044 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName2 = p9 $resName2 ::
108047 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p10 $chainID2 ::
108050 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq2 = p11 $resSeq2 ::
108053 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode2 = p12 $iCode2 ::
108092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,108099:CD,108107:CD,108112:CD,108122:CD,108130:CD,108135:CD,108145:CD,108153:CD,108158:CD,108168:CD,108176:CD,108181:CD,108192:CD,108199:CD,108203:CD,108209:CD,108213:CD,108218:CD,108219:CD,108539
108099 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
108104 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
108107 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
108112 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
108122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
108127 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
108130 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
108135 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
108145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
108150 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
108153 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
108158 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
108168 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
108176 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
108181 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
108189 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,108192
108193 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,108539
108192 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,108539:CD,108193
108199 :: CALL :: call :: I :: v52 = v49.length()::
108203 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
108209 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
108213 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,108218
108219 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,108220:CD,108226:CD,108231:CD,108255
108218 :: EXPR :: assign :: I :: v60 = v59.length::DD,108219:DD,108255
108220 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,108231
108222 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,108231
108226 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,108231
108231 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,108242:CD,108247:CD,108255:CD,108276:CD,108282:CD,108286:CD,108500:CD,108504:CD,108508
108232 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,108236
108236 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
108239 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,108247
108242 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,108247
108247 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
108248 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,108251
108251 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
108255 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,108260:CD,108265:CD,108276:CD,108282:CD,108286:CD,108500:CD,108504:CD,108508
108256 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,108265
108260 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,108265
108265 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,108276:CD,108282:CD,108286:CD,108500:CD,108504:CD,108508
108276 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
108282 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
108286 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,108450:JM,108504
108292 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,108450
108296 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,108304
108299 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,108304
108305 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,108308
108304 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
108308 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
108311 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,108322
108314 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,108322
108317 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,108322
108323 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,108333
108322 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,108323:CD,108328:CD,108333
108325 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,108333
108328 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,108333
108333 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,108336:CD,108344:CD,108349:CD,108359:CD,108364:CD,108369:CD,108380:CD,108381:CD,108389:CD,108394:CD,108398:CD,108408:CD,108416:CD,108421
108336 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
108341 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
108344 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
108349 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
108359 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
108364 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,108450
108369 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
108377 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,108403
108381 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
108380 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,108403
108389 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,108403
108394 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,108403
108398 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,108403
108403 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
108408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
108413 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
108416 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
108421 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
108429 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,108440
108432 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,108440
108435 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,108440
108441 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,108449
108440 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,108444:CD,108449
108444 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,108449
108449 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,108460:CD,108471:CD,108472:CD,108480:CD,108485
108450 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
108460 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,120822
108465 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,108468
108468 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
108471 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,108489
108472 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
108480 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,108489
108485 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,108489
108489 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
108500 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,108504
108505 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,108508
108504 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,108292:CD,108299:CD,108304:CD,108317:CD,108322:CD,108435:CD,108440:CD,108500:JM,108450
108508 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,108515:CD,108526
108515 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,120822
108523 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,108526
108527 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
108526 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,108533
108530 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
108533 :: CALL :: call :: Z :: v173 = v170.add(v171)::
108539 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
108662 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
108665 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
108668 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
108671 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
108674 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
108677 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
108680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
108683 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
108686 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
108689 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
108692 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
108695 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
108698 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
108701 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
108704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
108707 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
108710 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
108713 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
108716 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
108719 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
108722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
108725 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
108728 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
108731 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
108734 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
108737 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
108740 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
108743 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
108746 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
108749 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
108752 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
108755 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
108758 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
108761 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
108764 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
108767 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
108770 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
108773 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
108776 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
108779 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
108782 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
108785 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
108788 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
108791 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,108795
108795 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
108798 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,108802
108802 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
108805 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
108902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,108907:CD,108913:CD,108919:CD,108924:CD,108929:CD,108939:CD,108947:CD,108952:CD,108962:CD,108970:CD,108975:CD,108985:CD,108993:CD,108998:CD,109008:CD,109016:CD,109021:CD,109029:CD,109033:CD,109040:CD,109044:CD,109052:CD,109057:CD,109062:CD,109067:CD,109075:CD,109084:CD,109089:CD,109195:CD,109201:CD,109205:CD,109399:CD,109403:CD,109407:CD,109423:JM,109167
108907 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,109033:JM,109423:JM,109167
108913 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,109033:JM,109423:JM,109167
108919 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
108924 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,109167
108929 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,109167
108939 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
108944 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
108947 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
108952 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
108962 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
108967 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
108970 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
108975 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
108985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
108990 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
108993 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
108998 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
109008 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
109016 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
109021 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
109029 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,109033:JM,109423:JM,109167
109033 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,109423:CD,109034:JM,109033:JM,109167
109034 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,109033:JM,109423:JM,109167
109040 :: CALL :: call :: I :: v67 = v65.length()::
109044 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
109052 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
109057 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
109062 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
109067 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
109075 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,109125
109080 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,109089
109084 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,109089
109089 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,109090:CD,109096:CD,109101:CD,109125:CD,109126
109090 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,109101
109092 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,109101
109096 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,109101
109101 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,109112:CD,109117:CD,109125:CD,109126
109102 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,109106
109106 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
109109 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,109117
109112 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,109117
109117 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
109118 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,109121
109121 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
109125 :: EXPR :: assign :: I :: v93 = v84.length::DD,109126
109127 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,109138
109126 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,109127:CD,109133:CD,109138:CD,109162:CD,109167
109129 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,109138
109133 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,109138
109139 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,109143
109138 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,109149:CD,109154:CD,109162:CD,109167
109143 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
109146 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,109154
109149 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,109154
109155 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,109158
109154 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
109158 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
109162 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,109167
109167 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,109180:CD,109185
109174 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
109177 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,109185
109180 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,109185
109185 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
109186 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,109189
109189 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
109195 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
109201 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
109205 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,109349:JM,109403
109211 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,109349
109215 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,109223
109218 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,109223
109223 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
109224 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,109227
109227 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
109230 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,109241
109233 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,109241
109236 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,109241
109241 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,109242:CD,109247:CD,109252
109242 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,109252
109244 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,109252
109247 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,109252
109252 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,109255:CD,109263:CD,109268:CD,109279:CD,109280:CD,109288:CD,109293:CD,109297:CD,109307:CD,109315:CD,109320
109255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
109260 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
109263 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
109268 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
109276 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,109302
109279 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,109302
109280 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
109288 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,109302
109293 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,109302
109297 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,109302
109302 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
109307 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
109312 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
109315 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
109320 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
109328 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,109339
109331 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,109339
109334 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,109339
109339 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,109343:CD,109348
109340 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,109348
109343 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,109348
109349 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
109348 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,109359:CD,109370:CD,109371:CD,109379:CD,109384
109359 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,121248
109364 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,109367
109367 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
109371 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
109370 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,109388
109379 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,109388
109384 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,109388
109388 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
109399 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,109403
109403 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,109211:CD,109218:CD,109223:CD,109236:CD,109241:CD,109334:CD,109339:CD,109399:JM,109349
109404 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,109407
109407 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,109414
109414 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,121248
109423 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
109568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,121952:JM,121945:CD,109585:CD,109589:CD,109593:CD,109597:CD,109601:CD,109605:CD,109609:CD,109613:CD,109620:CD,110135:CD,110139:CD,110143:CD,110147:CD,110152:CD,110159:CD,110163:CD,110168:CD,110175:CD,110179:CD,110184:JM,122563:JM,122434:JM,122754:JM,122439:JM,122759:JM,122729:JM,122538:JM,122444:JM,122543:JM,122578:JM,122452:JM,122583:JM,122457:JM,122745:JM,122746:JM,122490:JM,122429:JM,122622:JM,122558:CD,110200:CD,110207:CD,110211:CD,110216:CD,110235:CD,110246:CD,110257:CD,110264:CD,110268:CD,110272:CD,110279:CD,110283:CD,110287:CD,110294:CD,110298:CD,110302:CD,110309:CD,110313:CD,110317:CD,110324:CD,110328:CD,110332:CD,110347
109585 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
109589 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
109593 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
109597 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
109601 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
109605 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
109609 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
109613 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
109617 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,110139:JM,109629
109620 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,110139:JM,109629
109625 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,110139:JM,109629
109629 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,109634:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834:JM,109957
109630 :: CALL :: call :: I :: v34 = v32.length()::JM,109634
109634 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,109637:CD,109642:CD,109647:CD,109656:CD,109662:CD,109667:CD,109716:CD,109721:CD,109775:CD,109780:CD,109829:CD,109834:CD,109888:CD,109893:CD,109947:CD,109952:JM,110032:JM,110086
109637 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
109642 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
109647 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
109656 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109662 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109667 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,109668:CD,109672:CD,109678:CD,109682:CD,109689:CD,109694:CD,109698:CD,109703:CD,109708:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109668 :: CALL :: call :: I :: v44 = v32.length()::
109672 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
109678 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
109682 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
109689 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
109694 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
109698 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
109703 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
109708 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
109716 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109721 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,109722:CD,109726:CD,109732:CD,109736:CD,109741:CD,109748:CD,109753:CD,109757:CD,109762:CD,109767:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109722 :: CALL :: call :: I :: v69 = v32.length()::
109726 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
109732 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
109736 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
109741 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
109748 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
109753 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
109757 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
109762 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
109767 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
109775 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109781 :: CALL :: call :: I :: v96 = v32.length()::
109780 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,109781:CD,109785:CD,109791:CD,109795:CD,109802:CD,109807:CD,109811:CD,109816:CD,109821:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109785 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
109791 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
109795 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
109802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
109807 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
109811 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
109816 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
109821 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
109829 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109835 :: CALL :: call :: I :: v120 = v32.length()::
109834 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,109835:CD,109839:CD,109845:CD,109849:CD,109854:CD,109861:CD,109866:CD,109870:CD,109875:CD,109880:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109839 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
109845 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
109849 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
109854 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
109861 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
109866 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
109870 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
109875 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
109880 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
109888 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109893 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,109894:CD,109898:CD,109904:CD,109908:CD,109913:CD,109920:CD,109925:CD,109929:CD,109934:CD,109939:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109894 :: CALL :: call :: I :: v146 = v32.length()::
109898 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
109904 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
109908 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
109913 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
109920 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
109925 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
109929 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
109934 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
109939 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
109947 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
109953 :: CALL :: call :: I :: v172 = v32.length()::JM,109957
109952 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,109953:CD,109957:CD,110027:CD,110032:CD,110081:CD,110086:JM,109952:JM,109667:JM,109893:JM,109780:JM,109721:JM,109834
109957 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,109960:CD,109965:CD,109970:CD,109979:CD,109983:CD,109989:CD,109993:CD,110000:CD,110005:CD,110009:CD,110014:CD,110019:CD,110027:CD,110032:CD,110081:CD,110086
109960 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
109965 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
109970 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
109979 :: CALL :: call :: I :: v175 = v32.length()::
109983 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
109989 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
109993 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
110000 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
110005 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
110009 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
110014 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
110019 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
110027 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
110033 :: CALL :: call :: I :: v199 = v32.length()::
110032 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,110033:CD,110037:CD,110043:CD,110047:CD,110054:CD,110059:CD,110063:CD,110068:CD,110073:JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
110037 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
110043 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
110047 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
110054 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
110059 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
110063 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
110068 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
110073 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
110081 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,109952:JM,110032:JM,109667:JM,109893:JM,109780:JM,110086:JM,109721:JM,109834
110087 :: CALL :: call :: I :: v241 = v32.length()::
110086 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,110087:CD,110091:CD,110097:CD,110101:CD,110108:CD,110113:CD,110117:CD,110122:CD,110127:JM,110139:JM,109629
110091 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
110097 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
110101 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
110108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
110113 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
110117 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
110122 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
110127 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
110135 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,110139:JM,109629
110139 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,109625:CD,109629:CD,109630:CD,109634:CD,110135:JM,110139
110143 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
110147 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,122005
110152 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,122381
110159 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
110163 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,122005
110168 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,122392
110175 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
110179 :: CALL :: call :: V :: v273.setRef(v275)::CL,122403
110184 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
110200 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,122942
110207 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,110216:CL,122953
110211 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,110216
110216 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,110224
110224 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,122962
110235 :: CALL :: call :: V :: v296.setVolume(v298)::CL,122987
110246 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,123008
110257 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,123029
110264 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
110268 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
110272 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,123040
110279 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
110283 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
110287 :: CALL :: call :: V :: v314.setTitle(v318)::CL,123051
110294 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
110298 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
110302 :: CALL :: call :: V :: v320.setRefn(v324)::CL,123062
110309 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
110313 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
110317 :: CALL :: call :: V :: v326.setPmid(v330)::CL,123073
110324 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
110328 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
110332 :: CALL :: call :: V :: v332.setDoi(v336)::CL,123084
110347 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,123095
110532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,110537
110537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
110543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,110551
110551 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,123493
110558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,110563
110563 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
110569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,110570:CD,110576
110570 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,97312:JM,127245
110573 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,110576
110576 :: NORM :: compound :: Z :: return v3::CF,110570
110600 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,110606:CD,110611:CD,110633:CD,110637
110606 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,60253
110611 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,110637
110616 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,110637
110621 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,110626:CL,123504
110626 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,110628
110628 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,123595
110633 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,110637
110637 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,110616:CD,110621:CD,110626:CD,110633:JM,110637
110656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,110752:CD,110756:CD,110759:JM,110677:JM,110678:JM,110745:JM,110744
110663 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,60253
110668 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,110677:JM,110678:JM,110745:JM,110744
110673 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,110677:JM,110744
110677 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,110678
110678 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,110683:CD,110687:CD,110691:CD,110695:CD,110701:CD,110706:CD,110758
110683 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,101786
110687 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
110691 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,123874
110695 :: CALL :: call :: Z :: v24 = v9.add(v16)::
110701 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,110706:CL,123504
110706 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,110711:CD,110718:CD,110723:CD,110727:CD,110732:CD,110758
110711 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,101786
110718 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
110723 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,77766
110727 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
110732 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
110740 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,110677:JM,110744
110745 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,110746:CF,110751
110744 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,110673:CD,110677:CD,110678:CD,110740:CD,110758:JM,110744:CF,110745
110746 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,123912
110751 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,110759
110752 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,110756:CL,102086
110756 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,110663:CD,110668:CD,110740:CD,110744:CD,110745:CD,110751:CD,110752:CD,110758:CD,110759
110759 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,110756:DD,110758
110758 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,110677:JM,110744:DD,110751:DD,110758
110799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,110807:CD,110892:CD,110896:CD,110900:CD,110904:CD,110954:CD,111038:CD,111042:CD,111046
110804 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,110896
110807 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110896
110812 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110896
110817 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
110824 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,123968
110828 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
110832 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,110837
110837 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,110838:JM,110887
110838 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,110840:CD,110883:CD,110887:CD,110888
110840 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,110887
110845 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,110887
110856 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,123977
110861 :: CALL :: call :: Z :: v39 = v13.add(v37)::
110883 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,110887
110887 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,110845:CD,110856:CD,110861:CD,110883:JM,110887
110888 :: CALL :: call :: V :: v12.setChains(v13)::CL,123992
110892 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110896
110897 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,110904
110896 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110812:CD,110817:CD,110824:CD,110828:CD,110832:CD,110837:CD,110838:CD,110892:JM,110896
110900 :: CALL :: call :: I :: v53 = v51.size()::JM,110904
110905 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
110904 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,110908:CD,110917:CD,110921:CD,110925:CD,110930
110908 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
110917 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,123968
110921 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
110925 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,110930
110931 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,110940:CL,116473
110930 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,110931:CD,110936:CD,110940
110936 :: CALL :: call :: I :: v69 = v67.size()::JM,110940
110941 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,110940
110940 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,110941:CD,110947:JM,110940
110947 :: CALL :: call :: V :: v58.addChain(v72)::CL,124003
110951 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,111042
110954 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,111042
110959 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,111042
110967 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,123968
110971 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
110975 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,110980
110980 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,110985:CD,110989:CD,110993:CD,110998:CD,110999:CD,111033:CD,111037
110985 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,123968
110989 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
110993 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,110998
110999 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,111008:JM,111037
110998 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,111008:JM,111037
111004 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,111008:JM,111037
111009 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,111014
111008 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,111014
111014 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,111016:CD,111021
111016 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,124020
111021 :: CALL :: call :: V :: v110.setCompound(v83)::CL,116451
111033 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,111008:JM,111037
111037 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,111004:CD,111008:CD,111009:CD,111014:CD,111033:JM,111037:JM,111042
111038 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,111042
111043 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,111046
111042 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,110959:CD,110967:CD,110971:CD,110975:CD,110980:CD,111038:JM,111042
111047 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,111054
111046 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,111050:CD,111054
111050 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,111054
111055 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,111130:CL,52383
111054 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,111055:CD,111059:CD,111126:CD,111130
111059 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,111130
111064 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,111130
111069 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,111073:CL,124035
111073 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,111074:JM,108791:JM,108798:CD,111078:CD,111085:CD,111090:CD,111094:CD,111101:CD,111112:CD,111116:JM,111130
111074 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
111078 :: CALL :: call :: V :: v134.addChain(v130)::CL,124003
111085 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,124044
111090 :: CALL :: call :: V :: v134.setMolId(v140)::CL,124065
111094 :: CALL :: call :: V :: v130.setCompound(v134)::CL,116451
111098 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
111101 :: CALL :: call :: Z :: v145 = v143.add(v134)::
111112 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,123968
111116 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
111126 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,111130
111130 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,111064:CD,111069:CD,111073:CD,111126:JM,111130
111236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,111243:CD,111444:CD,111449:CD,111454:CD,111459:CD,111464:CD,111472:CD,111477:CD,111482
111240 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,111243
111243 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,111247
111244 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,111247
111247 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,111258:CD,111262:CD,111266
111258 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,111266:CL,52383
111262 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,111266
111267 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
111266 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,111267:CD,111271:CD,111289:CD,111296:CD,111300:CD,111305:CD,111380:CD,111384:CD,111505:CD,111509:CD,111510:CD,111514:CD,111525
111268 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
111271 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
111286 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
111289 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
111293 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
111296 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
111300 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,111305
111305 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,111308:CD,111316:CD,111321:CD,111326:CD,111336:CD,111343:CD,111347:CD,111352:CD,111360:CD,111364:CD,111369
111308 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
111313 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
111316 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
111321 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
111326 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
111336 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
111340 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
111343 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
111347 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
111352 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
111357 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
111360 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
111364 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
111369 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
111377 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,111509
111380 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,111509
111384 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,111509
111389 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,111509
111397 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
111406 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,111411
111411 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,111412:JM,111504
111412 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,111414:CD,111500:CD,111504
111414 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,111504
111419 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,111504
111424 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,77704
111428 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,124076
111435 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,124085
111444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
111449 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
111454 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
111459 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
111464 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
111469 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
111472 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
111477 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
111482 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
111491 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,124103
111495 :: CALL :: call :: Z :: v111 = v109.add(v83)::
111500 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,111504
111505 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,111509
111504 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,111419:CD,111424:CD,111428:CD,111435:CD,111491:CD,111495:CD,111500:JM,111504:JM,111509
111509 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,111510:CD,111389:CD,111397:CD,111406:CD,111411:CD,111412:CD,111505:JM,111509
111511 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
111510 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
111514 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
111525 :: CALL :: call :: V :: v117.setSites(v112)::CL,101086
111603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,111608
111608 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
111614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,111619
111619 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
111625 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,111630
111630 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
111657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,111662:CD,111666:CD,111671:CD,111769
111662 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,111671:CL,124112
111666 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,111671
111671 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,111672:CD,111676:CD,111681
111672 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,111681:CL,124121
111676 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,111681
111681 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,111707:CD,111741:JM,141793:JM,141799:JM,141796:JM,141790
111707 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,124175
111741 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,124175
111769 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,124394
111813 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,111818:CD,111822:CD,111843:CD,111847:CD,111851
111818 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
111822 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,111847
111827 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,111847
111832 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,111837:CL,124912
111837 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,111838:JM,111847
111838 :: CALL :: call :: Z :: v18 = v4.add(v15)::
111843 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,111847
111847 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,111827:CD,111832:CD,111837:CD,111843:JM,111847
111851 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,101066
111874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,111878:CD,111881:CD,111884:CD,111887
111878 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,125029
111881 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,125182
111884 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,125335
111887 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,125552
111895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,111978:CD,111983:CD,111988:CD,111993:CD,112133:CD,112137:CD,112145
111900 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,112131:CL,116473
111905 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,112131
111910 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,112131
111915 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,112126:CL,60270
111919 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,112126
111924 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,112126
111933 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,117230
111937 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,112121:JM,111950:CL,125662
111941 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,112121:JM,111950
111946 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,112121:JM,111950
111950 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,111970:JM,111960:JM,111965:JM,111964:JM,112009:JM,112048
111955 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,112079:CL,53038
111960 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,111970:JM,111960:JM,111965:JM,111964
111965 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,111970:JM,111965
111964 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,111965:CD,111970:CD,112043:CD,112048:CD,112052:CD,112057:CD,112062:CD,112066:CD,112071
111971 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,111970:JM,111965
111970 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,111971:CD,112004:CD,112009:CD,112013:CD,112018:CD,112023:CD,112027:CD,112032:JM,111970:JM,111965
111978 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
111983 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,111970:JM,111965
111988 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
111993 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
112004 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
112009 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,112009
112013 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
112018 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
112023 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,125671
112027 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
112032 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
112043 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
112048 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,112048
112052 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
112057 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
112062 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,125671
112066 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
112071 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
112079 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,112080
112080 :: CALL :: call :: V :: v40.setCharge(v97)::CL,73828
112084 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,112116:CL,61101
112088 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,112116
112093 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,112116
112102 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,112107:CL,53038
112107 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,112141:CD,112108
112108 :: CALL :: call :: V :: v111.setCharge(v97)::CL,73828
112112 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,112116
112117 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,112121:JM,111950
112116 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,112142:CD,112093:CD,112102:CD,112107:CD,112112:CD,112141:JM,112116
112121 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,112143:CD,111946:CD,111950:CD,111955:CD,111960:CD,111964:CD,112079:CD,112084:CD,112088:CD,112112:CD,112116:CD,112117:CD,112141:CD,112142:JM,112121
112122 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,112126
112127 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,112131
112126 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,112144:CD,111924:CD,111933:CD,111937:CD,111941:CD,112117:CD,112121:CD,112122:CD,112142:CD,112143:JM,112126
112131 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,111910:CD,111915:CD,111919:CD,112122:CD,112126:CD,112127:CD,112143:CD,112144:JM,112131:CF,112132
112133 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,112137:CL,102086
112132 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,112145
112137 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,111900:CD,111905:CD,112127:CD,112131:CD,112132:CD,112133:CD,112144:CD,112145
112141 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,112116:DD,112141:DD,112142
112143 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,112126:DD,112142:DD,112144
112142 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,112121:JM,111950:DD,112141:DD,112143
112145 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,112137:DD,112144
112144 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,112131:DD,112132:DD,112143
112212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,112219:CD,112402:CD,112406
112219 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,112406
112224 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,112406
112229 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,112234
112235 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
112234 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,112303
112241 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,112246
112247 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,112252
112246 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,112270:DD,112408
112253 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
112252 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,112363
112259 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,112264
112265 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,112270
112264 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,112276:DD,112409:JM,112270
112271 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,112276
112270 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,112408
112276 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,112409
112286 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,112520
112294 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,112303:CL,77766
112298 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,112303
112303 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,112410:CF,112304:CD,112305:CD,112313:CD,112318:CD,112326:CD,112330:CD,112335
112305 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
112304 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,112335
112313 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,112335
112318 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,112335
112326 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,112335:CL,77704
112330 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,112335
112335 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,112410
112337 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,112341:CL,112547
112336 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,112337:CD,112341
112341 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::JM,112617:JM,112620:CD,112349
112349 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,112634
112354 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,112363:CL,77766
112358 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,112363
112363 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,112411:CF,112364:CD,112365:CD,112373:CD,112378:CD,112386:CD,112390:CD,112395:CD,112397:CD,112401
112365 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
112364 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,112395
112373 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,112395
112378 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,112395
112386 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,112395:CL,77704
112390 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,112395
112395 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,112411:CD,112397:CD,112401
112397 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,112401:CL,112654
112401 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,112286:CD,112294:CD,112298:CD,112303:CD,112336:CD,112354:CD,112358:CD,112363:CD,112410:CD,112411:JM,112406
112402 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,112406
112406 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,112224:CD,112229:CD,112234:CD,112235:CD,112241:CD,112246:CD,112247:CD,112252:CD,112253:CD,112259:CD,112264:CD,112265:CD,112270:CD,112271:CD,112276:CD,112397:CD,112401:CD,112402:CD,112408:CD,112409:CD,112411:JM,112406
112409 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,112395
112408 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,112335:JM,112276
112411 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,112410
112410 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,112336:DD,112411
112520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,112534
112534 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,125680
112547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,112548:CD,112551:CD,112556
112548 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,97774:JM,112341
112551 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,112556:CL,60371
112557 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,112562:CL,60371
112556 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,112557:CD,112562:CD,112576
112563 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,112568:CL,60371
112562 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,112563:CD,112568:CD,112576
112569 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,112574:CL,60371
112568 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,112569:CD,112574:CD,112576
112575 :: NORM :: compound :: Z :: return #(1)::DD,112548
112574 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,112575:CD,112576
112576 :: NORM :: compound :: Z :: return #(0)::DD,112548
112591 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,112592:CD,112599:CD,112604
112592 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,97780
112599 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,112604
112604 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,112592
112617 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: p0 $this .type = p3 $t ::
112620 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .assignment = p2 $ass ::
112634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,112643
112643 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
112655 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,97799:JM,112401
112654 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,112655:CD,112668:CD,112675
112668 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,112675:CL,125791
112675 :: NORM :: compound :: Z :: return v9::DD,112655
112827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,112834:CD,112838:CD,112851:CD,112863:CD,112874:CD,112886
112831 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,112838
112834 :: CALL :: call :: Z :: v5 = v3.get()::JM,112838
112838 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,112840:CD,112844:CD,112868:CD,112894
112840 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,112844:CL,125893
112845 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,125917
112844 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,112845
112851 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
112860 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
112863 :: CALL :: call :: V :: v16.set(#(0))::
112868 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,125960
112874 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
112883 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
112886 :: CALL :: call :: V :: v24.set(#(0))::
112891 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,112894
112894 :: CALL :: call :: V :: v26.set(#(1))::JM,112894
112910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,112914:CD,112920:CD,112924:CD,112953:CD,112965:CD,112976:CD,112988
112914 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,126009
112917 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,112924
112920 :: CALL :: call :: Z :: v6 = v4.get()::JM,112924
112925 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,112928
112924 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,112928:CD,112936:CD,112940
112928 :: CALL :: call :: V :: v33.set(#(0))::JM,112928
112933 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,112940
112936 :: CALL :: call :: Z :: v10 = v8.get()::JM,112940
112940 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,112942:CD,112946:CD,112970:CD,112996
112942 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,112946:CL,126092
112947 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,126116
112946 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,112947
112953 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
112962 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
112965 :: CALL :: call :: V :: v20.set(#(0))::
112970 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,126159
112976 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
112985 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
112988 :: CALL :: call :: V :: v28.set(#(0))::
112993 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,112996
112996 :: CALL :: call :: V :: v30.set(#(1))::JM,112996
113017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,113021:CD,113026:CD,113031:CD,113036:CD,113049:CD,113054:CD,113059:CD,113067:CD,113071:CD,113075:CD,113080:CD,113081:CD,113087:CD,113172:CD,113177:CD,113182:CD,113196:CD,113197
113021 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,113196:CD,113022
113022 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,113196
113026 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
113031 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
113036 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
113049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
113054 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
113059 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
113067 :: CALL :: call :: V :: releaseReferences()::CL,126208
113071 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
113075 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,113080
113081 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,113197:CD,113082:CD,113086
113080 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,113081:JM,113086
113082 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,113086
113087 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,113091:JM,46758:JM,46765:CD,113109:JM,126291:JM,126298:JM,126301:CD,113117:CD,113121:CD,113126:CD,113134:CD,113138:CD,113142:CD,113147
113086 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,113197
113091 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
113109 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
113117 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
113121 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
113126 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
113134 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,126358
113138 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
113142 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,113147
113147 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,113150:CD,113154:CD,113158:CD,113163
113150 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,126358
113154 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
113158 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
113163 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
113172 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
113177 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
113182 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
113197 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,113087
113196 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
113245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,113246:CD,113305:CD,113306:CD,113314:CD,113319:CD,113320
113246 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,98234:JM,98269:JM,98285
113283 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,126382
113302 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,113305
113305 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,113283:CF,113306
113307 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
113306 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,113307
113314 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,113319
113319 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,113320:JM,113371
113320 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,113338:CD,113337:CD,113339:CD,113347:CD,113367:CD,113371:CD,113388
113337 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,113246
113339 :: CALL :: call :: I :: v36 = v33.size()::
113338 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,113388
113347 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,113371
113352 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,113371
113357 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
113362 :: CALL :: call :: Z :: v49 = v34.add(v46)::
113367 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,113371
113371 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,113352:CD,113357:JM,126695:CD,113362:CD,113367:JM,113371
113388 :: NORM :: compound :: Ljava/util/List :: return v34::DD,113246
113447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,113448:CD,113454
113448 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,98279:JM,126441:JM,126440:JM,126445
113451 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,113454
113454 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,113448
113457 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,98355:JM,98356
113456 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,113457:CD,113461:CD,113466:CD,113467:CD,113468:CD,113476:CD,113481:CD,113486:CD,113491:CD,113496:CD,113500:CD,113505:CD,113515
113461 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,113466:CL,126745
113467 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
113466 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,113457
113468 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
113473 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
113476 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
113481 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
113486 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
113491 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
113496 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,89741
113500 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
113505 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
113515 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
113519 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,98355:JM,98356
113518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,113519:CD,113523:CD,113539:CD,113544:CD,113549:CD,113558:CD,113564:CD,113569:JM,113590
113523 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,89551
113539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
113544 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,113590
113549 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,113590
113558 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,113590
113564 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,113569:JM,113580:JM,113596:CL,79747
113569 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,113570:CD,113571:CD,113592:CD,113596:JM,113580
113571 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,113580:JM,113596
113570 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,113519
113576 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,113580:JM,113596
113581 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,113590:CL,80209
113580 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,113591
113585 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,113590
113591 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,113519
113590 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,113591:CD,113592:CD,113596:JM,113580
113592 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,113580:JM,113596
113597 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,113519
113596 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,113576:CD,113580:CD,113581:CD,113585:CD,113590:CD,113597:JM,113596
113623 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,113624:CD,113629:CD,113634:CD,113638:CD,113691:CD,113692:CD,113697:CD,113702:CD,113707:CD,113737:CD,113738:CD,113743:CD,113748:CD,113757
113624 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,116558
113629 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,113649:JM,113668:JM,113638
113634 :: CALL :: call :: Z :: v7 = v5.matches()::JM,113649:JM,113668:JM,113638
113639 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,113649:JM,113668:JM,113638
113638 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,113639:CD,113644:CD,113649:CD,113683:JM,116514:JM,116517:JM,116520:CD,113690:CD,113719:CD,113724:CD,113729:CD,113736:JM,113668:JM,113638
113644 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,113649:JM,113668:JM,113638
113649 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,113650:CD,113655:CD,113659:CD,113663:CD,113668:JM,113649:JM,113638
113650 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,113649:JM,113668:JM,113638
113655 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,126852
113659 :: CALL :: call :: V :: v35.setChainId(v28)::CL,101282
113663 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,113649:JM,113668:JM,113638
113668 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,113670:CD,113675:CD,113679:JM,113649:JM,113668:JM,113638
113670 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,113649:JM,113668:JM,113638
113675 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,126852
113679 :: CALL :: call :: V :: v43.setChainId(v28)::CL,101282
113683 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,113690
113691 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
113690 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,113624
113692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
113697 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
113702 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
113707 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
113719 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
113724 :: CALL :: call :: Z :: v13 = v11.matches()::
113729 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,113736
113737 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
113736 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,113624
113738 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
113743 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
113748 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
113757 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
113889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,113890:CD,113894:JM,113922:JM,113910:JM,113899
113890 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,99046
113895 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,113922:JM,113894:JM,113910:JM,113899
113894 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,113895:CD,113899:CD,113900:JM,113922:JM,113894:JM,113910
113899 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,113900:CD,113901:CD,113918:CD,113922:JM,113894:JM,113910:JM,113899
113901 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,113922:JM,113894:JM,113910:JM,113899
113900 :: NORM :: compound :: Z :: return #(1)::DD,113890
113906 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,113922:JM,113910
113911 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,113912:CD,113916:CD,113918:CD,113922:JM,113910
113910 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,113911:JM,113916
113912 :: CALL :: call :: I :: v16 = v14.length()::JM,113916
113917 :: NORM :: compound :: Z :: return #(0)::DD,113890
113916 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,113917:CD,113918:CD,113922:JM,113910
113918 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,113922:JM,113910
113923 :: NORM :: compound :: Z :: return #(1)::DD,113890
113922 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,113906:CD,113910:CD,113911:CD,113923:JM,113922
113950 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .identifier = p1 $pdpDomainName ::
113958 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
113963 :: CALL :: call :: Z :: v11 = v9.matches()::
113968 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::JM,98866:JM,98857:JM,98863:JM,113950
113974 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
113979 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v16 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,113985
113985 :: EXPR :: modify :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: p0 $this .canonical = v16::
114005 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::JM,99412
114004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::CE,114005:CD,114012:CD,114017
114012 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,114017
114017 :: NORM :: compound :: Z :: return v6::DD,114005
114020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromCifByPdbId(java.lang.String)::CD,114025:JM,45856:JM,50401:JM,50465:JM,50451:JM,45860:JM,45848:JM,50459:JM,45852:JM,52046:JM,50415:JM,50479:CD,114058:CD,114062:CD,114068:CD,114073
114025 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,126948
114058 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
114062 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,126977
114068 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,126998
114073 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,126998
114096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromPdbByPdbId(java.lang.String)::CD,114101:JM,50401:JM,50465:JM,45800:JM,45804:JM,52046:JM,50415:JM,50479:JM,45808:JM,50451:JM,45812:JM,45816:JM,50459:JM,45820:CD,114134:CD,114138:CD,114144:CD,114149
114101 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,126948
114134 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
114138 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,126977
114144 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,126998
114149 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,126998
114173 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::JM,99627:JM,99704
114172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::CF,114173:CD,114175:CD,114177:CD,114178:CD,114186
114175 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = org.biojava.nbio.structure.StructureIO$StructureFiletype.ENUM$VALUES::DD,114177
114177 :: EXPR :: assign :: I :: v4 = v2.length::DD,114178
114178 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::DD,114186
114186 :: NORM :: compound :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v5::CF,114173
114199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,114203:JM,91043:JM,91074:JM,83428:JM,91081:JM,91053:JM,91088:JM,83445:JM,91060:JM,83412:JM,91095:JM,91067:JM,83420:JM,83452:CD,114219:CD,114226:CD,114233:CD,114240:CD,114247:CD,114254:CD,114261:CD,114268:CD,114275:CD,114282:CD,114289:CD,114296:CD,114303:CD,114310:CD,114317:CD,114324:CD,114331:CD,114338:CD,114345
114203 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,114207
114207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
114210 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
114213 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
114216 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
114219 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,114223
114223 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
114226 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,114230
114230 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
114233 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,114237
114237 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
114240 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,114244
114244 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
114247 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,114251
114251 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
114254 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,114258
114258 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
114261 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,114265
114265 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
114268 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,114272
114272 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
114275 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,114279
114279 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
114282 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,114286
114286 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
114289 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,114293
114293 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
114296 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,114300
114300 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
114303 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,114307
114307 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
114310 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,114314
114314 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
114317 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,114321
114321 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
114324 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,114328
114328 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
114331 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,114335
114335 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
114338 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,114342
114342 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
114345 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,114349
114349 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
114399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,114406:CD,114419:CD,114423
114403 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,114423
114406 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,114423
114411 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,114423
114416 :: CALL :: call :: V :: v11.documentStart()::CL,114199
114419 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,114423
114423 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,114411:CD,114416:CD,114419:JM,114423
114441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,114448:CD,114461:CD,114465
114445 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,114465
114448 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,114465
114453 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,114465
114458 :: CALL :: call :: V :: v11.documentEnd()::CL,127025
114461 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,114465
114465 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,114453:CD,114458:CD,114461:JM,114465
114475 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,100000:JM,100067:JM,100010:JM,100465:JM,100197:JM,100290:JM,100300:JM,100383
114474 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,114475:CD,114481:CD,114485:CD,114490:CD,114556:CD,114560:CD,114628:CD,114629:CD,114630:CD,114634:CD,114635:CD,114636:JM,114626:JM,114620
114481 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,114560:DD,114615:JM,114620:DD,114621:DD,114627
114485 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,114490
114491 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,114492:CD,114496:CD,114514:CD,114518:CD,114634:CD,114635:CD,114636
114490 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,114491:CD,114524
114492 :: CALL :: call :: I :: v26 = v48.length()::JM,114496
114497 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,114636
114496 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,114508:CF,114497:CD,114498:CD,114634:CD,114635:CD,114636
114498 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
114508 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,114636
114514 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
114518 :: CALL :: call :: Z :: v37 = v6.add(v35)::
114525 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
114524 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,114525:CD,114531:CD,114536:CD,114551:CD,114555:CD,114631:CD,114632:CD,114633:CD,114634:CD,114635:CD,114636
114531 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,114545:JM,114555:CL,128378
114536 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,114545:JM,114555
114541 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,114545:JM,114555
114545 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
114546 :: CALL :: call :: Z :: v23 = v6.add(v21)::
114551 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,114545:JM,114555
114555 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,114634:CD,114541:CD,114545:CD,114546:CD,114551:CD,114631:CD,114632:CD,114633:JM,114555
114556 :: CALL :: call :: I :: v43 = v6.size()::JM,114560
114560 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,114563:CD,114568:CD,114572:CD,114577:CD,114582:CD,114587:CD,114592:CD,114597:CD,114602:CD,114607:CD,114615:CD,114616:CD,114620
114563 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
114568 :: CALL :: call :: I :: v60 = v6.size()::
114572 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
114577 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
114582 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,114626:JM,114628:JM,114620
114587 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
114592 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
114597 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
114602 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
114607 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
114615 :: NORM :: compound :: Ljava/util/List :: return v6::DD,114475
114616 :: CALL :: call :: I :: v45 = v6.size()::JM,114620
114621 :: NORM :: compound :: Ljava/util/List :: return v6::DD,114475
114620 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,114621:CD,114622:CD,114626:CD,114628:CD,114629:CD,114630:JM,114560:JM,114620
114622 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,114560:JM,114626:JM,114628:JM,114620
114627 :: NORM :: compound :: Ljava/util/List :: return v6::DD,114475
114626 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,114628:CD,114485:CD,114490:CD,114556:CD,114560:CD,114627:CD,114629:CD,114630:CD,114634:CD,114635:CD,114636
114629 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,114630:DD,114491:DD,114524:DD,114632:DD,114635
114628 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,114629:JM,114490:JM,114496:DD,114631:DD,114634
114631 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,114632:DD,114631:DD,114634
114630 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,114633:DD,114636:JM,114490
114633 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,114545:JM,114555:DD,114633:DD,114636
114632 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,114633:DD,114632:DD,114635
114635 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,114636:DD,114629
114634 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,114635
114636 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,114560:DD,114630
114790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,114800:CD,114825:CD,114826:CD,114831:CD,114835:CD,114840:CD,114845:CD,114849:CD,114854:CD,114859:CD,114864:CD,114869:CD,114874:CD,114879:CD,114884:CD,114893:CD,114898:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114800 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
114825 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
114826 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
114831 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114835 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
114840 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
114845 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114849 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
114854 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
114859 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114864 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114869 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
114874 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
114879 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
114884 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
114893 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114898 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,114904:CD,114913:CD,114918:CD,114923:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114904 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
114913 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,129271
114918 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114923 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,114929:CD,114937:CD,114942:CD,114947:JM,115072:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114929 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,114937:CL,128868
114937 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,114938
114938 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
114942 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114947 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,114953:CD,114962:CD,114967:CD,114972:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114953 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
114962 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,129307
114967 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114972 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,114978:CD,114987:CD,114992:CD,114997:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114978 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
114987 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,129343
114992 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
114997 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,115003:CD,115012:CD,115017:CD,115022:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115003 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115012 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,129379
115017 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115022 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,115028:CD,115037:CD,115042:CD,115047:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115028 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115037 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,129415
115042 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115047 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,115053:CD,115062:CD,115067:CD,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115053 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115062 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,129451
115067 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115072 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,115078:CD,115087:CD,115092:CD,115097:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115078 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115087 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,129487
115092 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115097 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,115103:CD,115112:CD,115117:CD,115122:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115103 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115112 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,129523
115117 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115122 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,115128:CD,115137:CD,115142:CD,115147:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115128 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115137 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,129559
115142 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115147 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,115153:CD,115162:CD,115167:CD,115172:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115153 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115162 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,129595
115167 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115172 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,115178:CD,115187:CD,115192:CD,115197:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115772:JM,115647
115178 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115187 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,129631
115192 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115197 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,115203:CD,115212:CD,115217:CD,115222:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115203 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115212 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,129667
115217 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115222 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,115228:CD,115237:CD,115242:CD,115247:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115228 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115237 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,129703
115242 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115247 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,115253:CD,115262:CD,115267:CD,115272:JM,115072:JM,114947:JM,115522:JM,115397:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115253 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115262 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,129739
115267 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115272 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,115278:CD,115287:CD,115292:CD,115297:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115278 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115287 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,129775
115292 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115297 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,115303:CD,115312:CD,115317:CD,115322:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115197:JM,115772:JM,115647
115303 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115312 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,129811
115317 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115322 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,115328:CD,115337:CD,115342:CD,115347:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115328 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115337 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,129847
115342 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115347 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,115353:CD,115362:CD,115367:CD,115372:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115353 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115362 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,129883
115367 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115372 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,115378:CD,115387:CD,115392:CD,115397:JM,115072:JM,114947:JM,115522:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115378 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115387 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,129919
115392 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115397 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,115403:CD,115412:CD,115417:CD,115422:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115403 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115412 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,129955
115417 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115422 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,115428:CD,115437:CD,115442:CD,115447:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115322:JM,115197:JM,115772:JM,115647
115428 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115437 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,129991
115442 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115447 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,115453:CD,115462:CD,115467:CD,115472:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115453 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115462 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,130027
115467 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115472 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,115478:CD,115487:CD,115492:CD,115497:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115478 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115487 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,130063
115492 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115497 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,115503:CD,115512:CD,115517:CD,115522:JM,115072:JM,114947:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115503 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115512 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,130099
115517 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115522 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,115528:CD,115537:CD,115542:CD,115547:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115528 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115537 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,130135
115542 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115547 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,115553:CD,115562:CD,115567:CD,115572:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115553 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115562 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,130171
115567 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115572 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,115578:CD,115587:CD,115592:CD,115597:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115578 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115587 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,130207
115592 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115597 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,115603:CD,115612:CD,115617:CD,115622:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115603 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115612 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,130243
115617 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115622 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,115628:CD,115637:CD,115642:CD,115647:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772
115628 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115637 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,130279
115642 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115647 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,115653:CD,115662:CD,115667:CD,115672:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115653 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115662 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,130315
115667 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115672 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,115678:CD,115687:CD,115692:CD,115697:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115678 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115687 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,130351
115692 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115697 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,115703:CD,115712:CD,115717:CD,115722:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115703 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115712 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,130387
115717 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115722 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,115728:CD,115737:CD,115742:CD,115747:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115728 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115737 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,130423
115742 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115747 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,115753:CD,115762:CD,115767:CD,115772:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115647
115753 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115762 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,130459
115767 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115772 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,115778:CD,115787:CD,115792:CD,115797:JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115778 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115787 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,130495
115792 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,115072:JM,114947:JM,115522:JM,115397:JM,115272:JM,115147:JM,115722:JM,115597:JM,115022:JM,115472:JM,115347:JM,114898:JM,115797:JM,115222:JM,115097:JM,115672:JM,115547:JM,114972:JM,115422:JM,115297:JM,115747:JM,115172:JM,115047:JM,115622:JM,115497:JM,114923:JM,115372:JM,115247:JM,115697:JM,115122:JM,114997:JM,115572:JM,115447:JM,115322:JM,115197:JM,115772:JM,115647
115797 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,115803:CD,115812:CD,115824
115803 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,128868
115812 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,130531
115824 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,130567
116211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,116218:CD,116221:CD,116224
116218 :: CALL :: call :: V :: p1 $loopFields .clear()::
116221 :: CALL :: call :: V :: p2 $lineData .clear()::
116224 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
116231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,116239:CD,116253:CD,116257
116236 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,116257
116239 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,116257
116244 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,116257
116249 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,130615
116253 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,116257
116257 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,116244:CD,116249:CD,116253:JM,116257
116267 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int,boolean)::CD,116276:CD,116281:CD,116286:CD,116291:CD,116296:CD,116305:CD,116311:JM,116312
116276 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
116281 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $pdbId )::JM,116312
116286 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( bioAssemblyId ))::
116291 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(p2 $bioAssemblyId )::JM,116312
116296 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
116305 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , p0 $this )::JM,116311:CL,130681
116311 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 63::CD,116312
116313 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v11 = getBiologicalAssembly(p1 $pdbId , #(0), p0 $this )::CL,130681
116312 :: PRED :: IF :: Z :: if (p3 $bioAssemblyFallback  == #(0)) goto 63::CD,116313
116335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getIdentifier()::CD,116342:CD,116346
116339 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::JM,116346
116342 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,116346
116346 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 17::CF,116351:CD,116355:CD,116363:CD,116371:CD,116375:CD,116380
116351 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
116355 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
116363 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::
116371 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v15)::CL,130744
116375 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
116380 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
116392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,116397
116397 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
116419 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,100974
116418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,116419:CD,116422:CD,116426:CD,116430:CD,116434
116422 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,130805
116426 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,116434:CL,131852
116430 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,131929
116434 :: NORM :: compound :: Ljava/util/List :: return v6::DD,116419
116443 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,101012
116442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,116443:CD,116449
116446 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,116449
116449 :: NORM :: compound :: Ljava/util/List :: return v3::CF,116443
116451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,116456
116456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
116462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,116467
116467 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
116473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,116474:CD,116478:CD,116483
116474 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,101347:JM,110940:JM,112131:JM,141305
116478 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,116483:CL,60253
116483 :: NORM :: compound :: Ljava/util/List :: return v5::DD,116474
116487 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,126435
116486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,116487:CD,116493
116490 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,116493
116493 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,116487
116514 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
116517 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = p2 $start ::
116520 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = p3 $end ::
116531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,116535:CD,116536:CD,116544:CD,116564:CD,116568
116535 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,116568
116536 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,116568
116544 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,116568
116549 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,116568
116554 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,116558:CL,113623
116559 :: CALL :: call :: Z :: v19 = v3.add(v16)::
116558 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,116559:JM,116568
116564 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,116568
116568 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,116549:CD,116554:CD,116558:CD,116564:JM,116568
116587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,116588:CD,116594
116588 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,102342
116591 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,116594
116594 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,116588
116597 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,102390
116596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,116597:CD,116603
116600 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,116603
116603 :: NORM :: compound :: Ljava/util/List :: return v3::CF,116597
116633 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
116636 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::JM,116640:CL,126852
116640 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = v8::
116646 :: CALL :: call :: V :: v9.setChainId(p1 $chain )::CL,101282
116650 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::JM,116654:CL,126852
116654 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = v12::
116660 :: CALL :: call :: V :: v13.setChainId(p1 $chain )::CL,101282
116676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getCenterVector(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom)::CD,116681:CD,116682:CD,116686:CD,116691:CD,116695:CD,116700:CD,116704:JM,73732:JM,73737:CD,116713
116681 :: NORM :: declaration :: [D :: v5 = new []::
116682 :: CALL :: call :: D :: v9 = p2 $centroid .getX()::JM,116686:CL,75290
116687 :: EXPR :: modify :: D :: v5[#(0)] = v10::
116686 :: EXPR :: assign :: Ljava/lang/Object :: v10 = #(0.0 d) - v9::DD,116687
116691 :: CALL :: call :: D :: v13 = p2 $centroid .getY()::JM,116695:CL,77814
116695 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(0.0 d) - v13::DD,116696
116696 :: EXPR :: modify :: D :: v5[#(1)] = v14::
116700 :: CALL :: call :: D :: v17 = p2 $centroid .getZ()::JM,116704:CL,77828
116705 :: EXPR :: modify :: D :: v5[#(2)] = v18::
116704 :: EXPR :: assign :: Ljava/lang/Object :: v18 = #(0.0 d) - v17::DD,116705
116713 :: CALL :: call :: V :: v19.setCoords(v5)::CL,106499
116737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.transpose()::JM,88790:JM,88793:JM,88796:CD,116753:CD,116787:CD,116791
116753 :: CALL :: call :: [[D :: v8 = v3.getArray()::CL,88809
116759 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v8[v18]::
116763 :: EXPR :: reference :: [[D :: v13 = p0 $this .A::
116766 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v13[v21]::
116770 :: EXPR :: reference :: D :: v15 = v14[v18]::DD,116774
116774 :: EXPR :: modify :: D :: v12[v21] = v15::
116779 :: EXPR :: reference :: I :: v11 = p0 $this .n::DD,116782
116778 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,116790:CF,116789
116783 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,116791
116782 :: PRED :: IF :: Z :: if (v18 < v11) goto 35::CD,116778:CD,116789:CD,116790:CF,116783
116784 :: EXPR :: reference :: I :: v10 = p0 $this .m::DD,116787
116787 :: PRED :: IF :: Z :: if (v20 < v10) goto 29::CD,116782:CD,116783:CD,116789:CD,116790:CD,116791
116789 :: EXPR :: assign :: null :: PHI v21 = v20, v21::CF,116790:DD,116783:DD,116789
116791 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,116787:DD,116789
116790 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,116778:DD,116782
116817 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.times(org.biojava.nbio.structure.jama.Matrix)::CD,116829:JM,88790:JM,88793:JM,88796:CD,116847:CD,116854:CD,116918:CD,116928
116829 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v44 = new java.lang.IllegalArgumentException::
116847 :: CALL :: call :: [[D :: v11 = v6.getArray()::CL,88809
116851 :: EXPR :: reference :: I :: v12 = p0 $this .n::DD,116854
116854 :: NORM :: declaration :: [D :: v13 = new []::
116857 :: EXPR :: reference :: [[D :: v17 = p1 $B .A::
116860 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v17[v22]::
116864 :: EXPR :: reference :: D :: v19 = v18[v41]::DD,116868
116868 :: EXPR :: modify :: D :: v13[v22] = v19::
116873 :: EXPR :: reference :: I :: v16 = p0 $this .n::DD,116876
116872 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,116921:CF,116920
116876 :: PRED :: IF :: Z :: if (v22 < v16) goto 67::CD,116872:CD,116920:CD,116921
116878 :: EXPR :: reference :: [[D :: v24 = p0 $this .A::
116881 :: EXPR :: reference :: Ljava/lang/Object :: v25 = v24[v37]::
116886 :: EXPR :: reference :: D :: v28 = v25[v34]::DD,116894
116890 :: EXPR :: reference :: D :: v29 = v13[v34]::DD,116894
116895 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v33 + v30::DD,116924:CF,116896
116894 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v28 * v29::CF,116895
116897 :: EXPR :: reference :: I :: v27 = p0 $this .n::DD,116900
116896 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v34 + #(1)::DD,116925:CF,116922
116901 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v11[v38]::
116900 :: PRED :: IF :: Z :: if (v34 < v27) goto 119::CD,116894:CD,116895:CD,116896:CD,116922:CD,116923:CD,116924:CD,116925
116905 :: EXPR :: modify :: D :: v35[v43] = v33::
116909 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v38 + #(1)::DD,116927:CF,116926
116910 :: EXPR :: reference :: I :: v23 = p0 $this .m::DD,116913
116913 :: PRED :: IF :: Z :: if (v37 < v23) goto 96::CD,116900:CD,116909:CD,116922:CD,116923:CD,116924:CD,116925:CD,116926:CD,116927:CF,116914
116915 :: EXPR :: reference :: I :: v15 = p1 $B .n::DD,116918
116914 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v42 + #(1)::DD,116928
116918 :: PRED :: IF :: Z :: if (v40 < v15) goto 59::CD,116876:CD,116913:CD,116914:CD,116920:CD,116921:CD,116926:CD,116927:CD,116928
116921 :: EXPR :: assign :: null :: PHI v22 = #(0), v21::DD,116872:DD,116876
116920 :: EXPR :: assign :: null :: PHI v41 = v40, v41::CF,116921:DD,116920:DD,116926
116923 :: EXPR :: assign :: null :: PHI v38 = v37, v38::CF,116924:DD,116909:DD,116923
116922 :: EXPR :: assign :: null :: PHI v43 = v42, v43::CF,116923:DD,116922:DD,116926
116925 :: EXPR :: assign :: null :: PHI v34 = #(0), v32::DD,116896:DD,116900
116924 :: EXPR :: assign :: null :: PHI v33 = #(0.0 d), v31::CF,116925:DD,116895:DD,116905
116927 :: EXPR :: assign :: null :: PHI v37 = #(0), v36::DD,116913:DD,116923
116926 :: EXPR :: assign :: null :: PHI v42 = v41, v43::CF,116927:DD,116914:DD,116922
116928 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::DD,116918:DD,116920
116984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.svd()::JM,132161:JM,132171:JM,132685:JM,132749:JM,132178:JM,132690:JM,132754:JM,132113:JM,132182:JM,132117:JM,132186:JM,132698:JM,132697:JM,132190:JM,132124:JM,134364:JM,132706:JM,132198:JM,132202:JM,132137:JM,132207:JM,134255:JM,133107:JM,132976:JM,132145:JM,133108:JM,132149:JM,132725:JM,132154:JM,133113:JM,132734:JM,132735:JM,134207
116996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.SingularValueDecomposition.getU()::JM,135490:JM,135493:JM,135496
117032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.SingularValueDecomposition.getV()::JM,135490:JM,135493:JM,135496
117057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.clone()::CD,117061
117061 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = p0 $this .copy()::CL,135507
117067 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.det()::CE,117068:CD,117076:CD,117080
117068 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Matrix.det()::JM,102754
117076 :: CALL :: call :: D :: v6 = v3.det()::JM,117080:CL,136047
117080 :: NORM :: compound :: D :: return v6::DD,117068
117083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.minus(org.biojava.nbio.structure.jama.Matrix)::CD,117088:JM,88790:JM,88793:JM,88796:CD,117104:CD,117150:CD,117154
117088 :: CALL :: call :: V :: p0 $this .checkMatrixDimensions(p1 $B )::CL,136105
117104 :: CALL :: call :: [[D :: v10 = v5.getArray()::CL,88809
117110 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v10[v27]::
117114 :: EXPR :: reference :: [[D :: v15 = p0 $this .A::
117117 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v15[v27]::
117121 :: EXPR :: reference :: D :: v17 = v16[v24]::DD,117136
117125 :: EXPR :: reference :: [[D :: v18 = p1 $B .A::
117128 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v18[v27]::
117132 :: EXPR :: reference :: D :: v20 = v19[v24]::DD,117136
117137 :: EXPR :: modify :: D :: v14[v24] = v21::
117136 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v17 - v20::DD,117137
117141 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,117153:CF,117152
117142 :: EXPR :: reference :: I :: v13 = p0 $this .n::DD,117145
117145 :: PRED :: IF :: Z :: if (v24 < v13) goto 41::CD,117136:CD,117141:CD,117152:CD,117153:CF,117146
117147 :: EXPR :: reference :: I :: v12 = p0 $this .m::DD,117150
117146 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v27 + #(1)::DD,117154
117150 :: PRED :: IF :: Z :: if (v26 < v12) goto 35::CD,117145:CD,117146:CD,117152:CD,117153:CD,117154
117153 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,117141:DD,117145
117152 :: EXPR :: assign :: null :: PHI v27 = v26, v27::CF,117153:DD,117146:DD,117152
117154 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::DD,117150:DD,117152
117185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,117186:CD,117192:CD,117196
117186 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,102956:JM,103213:JM,151823
117189 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,117196
117192 :: CALL :: call :: I :: v5 = v3.size()::JM,117196
117196 :: NORM :: compound :: I :: return v5::CF,117186
117199 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,141673:JM,141727:JM,151829
117198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,117199:CD,117203:JM,117221:JM,117211
117203 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,117207:CD,117211:CD,117212
117204 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,117211
117207 :: CALL :: call :: I :: v7 = v5.size()::JM,117211
117211 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,117212:CD,117216:CD,117221:CD,117222
117213 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,117221
117212 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,117199
117216 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,117221:JM,117203
117221 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,117222
117222 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,117199
117231 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,103367:JM,119594
117230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,117231:CD,117234:CD,117238:CD,117242:CD,117244:CD,117249:CD,117250
117234 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,117249:JM,117244
117238 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,117249:JM,117244
117242 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,117249:JM,117244
117244 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,117249:JM,117244
117249 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,117250:JM,117258:DD,117280
117250 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,117253:CD,117258:CD,117262:CD,117267:CD,117272:CD,117280:CD,117283:CD,117288:CD,117293:CD,117304:CD,117308:CD,117313:CD,117323:CD,117336
117253 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
117258 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,117258
117262 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
117267 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
117272 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
117280 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,117231
117283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
117288 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,117249:JM,117244
117293 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
117304 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
117308 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
117313 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
117323 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,117336:CL,136250
117336 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,117231
117361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,117362:CD,117366:CD,117370:CD,117376:CD,117380:CD,117389:CD,117394:CD,117398:CD,117400:CD,117415:CD,117424:CD,117500:CD,117504
117362 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,103794:JM,103829
117366 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,117504:JM,117433
117370 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
117376 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
117381 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
117380 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
117389 :: CALL :: call :: Z :: v16 = v4.add(v12)::
117394 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,117400:CL,136468
117398 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,117400
117401 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
117400 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,117401:CD,117410:CF,117415
117402 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
117410 :: CALL :: call :: Z :: v24 = v4.add(v20)::
117415 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,117434
117424 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,117504:JM,117433
117429 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,117504:JM,117433
117433 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,117434
117434 :: EXPR :: assign :: I :: v37 = v26.length::DD,117499
117440 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,117497:JM,117453:CL,38048
117444 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,117497:JM,117453
117449 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,117497:JM,117453
117453 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,117454
117455 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
117454 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,117492:CF,117455
117456 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
117464 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
117468 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
117473 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
117478 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
117487 :: CALL :: call :: Z :: v63 = v48.exists()::JM,117491
117491 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,117506:CD,117492:CD,117493:CD,117497
117493 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,117497:JM,117453
117492 :: NORM :: compound :: Ljava/io/File :: return v48::DD,117362
117497 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,117449:CD,117453:CD,117454:CD,117455:CD,117456:CD,117464:CD,117468:CD,117473:CD,117478:CD,117487:CD,117491:CD,117498:CD,117499:CD,117507:CD,117506:JM,117497
117499 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,117440:CD,117444:CD,117493:CD,117497:CD,117500:CD,117504:CD,117506:JM,117433
117498 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,117507
117500 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,117504:JM,117433
117505 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,117362
117504 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,117429:CD,117433:CD,117434:CD,117499:CD,117505:CD,117507:JM,117504
117507 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,117499:DD,117506
117506 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,117497:JM,117453:DD,117498:DD,117506
117573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,117574:CD,117576:CD,117578
117574 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
117576 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,117578:DD,117579
117579 :: NORM :: compound :: [I :: return v2::DD,117574
117578 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,117579:CD,117580:CD,117583:CD,117584:CD,117585:CD,117587:CD,117596:CD,117598:CD,117607:CD,117609:CD,117618:CD,117620:CD,117629:CD,117631:CD,117642
117580 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,117583:CL,136477
117583 :: EXPR :: assign :: I :: v6 = v5.length::CF,117584
117585 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
117584 :: NORM :: declaration :: [I :: v7 = new []::DD,117642
117587 :: CALL :: call :: I :: v10 = v8.ordinal()::
117591 :: EXPR :: modify :: I :: v7[v10] = #(2)::
117596 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
117598 :: CALL :: call :: I :: v16 = v14.ordinal()::
117602 :: EXPR :: modify :: I :: v7[v16] = #(3)::
117607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
117609 :: CALL :: call :: I :: v22 = v20.ordinal()::
117613 :: EXPR :: modify :: I :: v7[v22] = #(4)::
117618 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
117620 :: CALL :: call :: I :: v28 = v26.ordinal()::
117624 :: EXPR :: modify :: I :: v7[v28] = #(5)::
117629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
117631 :: CALL :: call :: I :: v34 = v32.ordinal()::
117635 :: EXPR :: modify :: I :: v7[v34] = #(1)::
117642 :: NORM :: compound :: [I :: return v7::DD,117574
117685 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,103803
117684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,117685:CD,117691
117688 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,117691
117691 :: NORM :: compound :: Z :: return v3::CF,117685
117723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,117727:CD,117733
117727 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,117733:JM,117738:CL,136504
117733 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,117734:CD,117738
117734 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,117738
117739 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,117738
117738 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,117739:JM,117738
117758 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,117766:CD,117772:CD,117773:CD,117795:CD,117801:CD,117809:CD,117818:CD,117828
117766 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,136961
117773 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,137059:CL,137090
117772 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
117795 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
117801 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
117809 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,137059:CL,137090
117818 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
117829 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,117843:JM,117834:JM,117839:CL,137123
117828 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,117829:CD,117834:CD,117868:CD,117873:CD,117878:CD,117888:CD,117893:CD,117898:CD,117906
117835 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,117843
117834 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,117835:CD,117839:CD,117843:CD,117844:CD,117868:CD,117873:CD,117878:CD,117888:CD,117893:CD,117898:CD,117906
117839 :: CALL :: call :: J :: v40 = v33.getTime()::JM,117843:JM,117839
117843 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,117844
117844 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,117868:CD,117873:CD,117878:CD,117888:CD,117893:CD,117898:CD,117906
117868 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
117873 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
117878 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
117888 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
117893 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
117898 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
117906 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,137208
117969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,117970:CD,117978:CD,117982
117970 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,103883
117978 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,117982:CL,137376
117982 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,117997:CD,117998
117993 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,117997
117997 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,117970
117998 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,117970
118205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,118215:CD,118220:CD,118221
118215 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,118220
118221 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,118222:CD,118256
118220 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,118222:DD,118223:DD,118256:CF,118221
118223 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,118224
118222 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,118223:CD,118224:CD,118228:JM,138310:JM,163396:JM,138315:JM,163400:JM,138127:JM,138319:JM,156114:JM,163410:JM,138320:JM,163414:JM,138139:JM,138328:JM,138333:JM,138338:JM,138147:JM,163424:JM,138337:JM,163431:JM,46758:JM,138346:JM,138283:JM,163368:JM,46765:JM,163439:JM,138351:JM,163372:JM,138284:JM,163382:JM,163446:JM,138292:JM,163386:JM,138297:JM,138302:JM,163453:JM,138301:CD,118242:CD,118248
118224 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,118228:JM,138310:JM,163396:JM,138315:JM,163400:JM,138127:JM,138319:JM,156114:JM,163410:JM,138320:JM,163414:JM,138139:JM,138328:JM,138333:JM,138338:JM,138147:JM,163424:JM,138337:JM,163431:JM,46758:JM,138346:JM,138283:JM,163368:JM,46765:JM,163439:JM,138351:JM,163372:JM,138284:JM,163382:JM,163446:JM,138292:JM,163386:JM,138297:JM,138302:JM,163453:JM,138301:CD,118242:CD,118248
118228 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
118242 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,138164
118248 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
118256 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,118260:CD,118280
118260 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
118280 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
118325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CE,118326:CD,118329:CD,118333:CD,118341:CD,118349:CD,118354:CD,118358
118326 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::
118329 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,118358
118333 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
118341 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::JM,118358
118346 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::JM,118358
118349 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::JM,118358
118354 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,118358
118358 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,118326
118393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,118400:CD,118404
118397 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,118404
118400 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,118404
118404 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,118406:JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333:CD,118410:CD,118422:CD,118430
118406 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
118410 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
118419 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
118422 :: CALL :: call :: Z :: v18 = v16.add(v7)::
118427 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
118430 :: CALL :: call :: Z :: v21 = v19.add(v9)::
118453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,118466
118466 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
118477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,118482:CD,118486:CD,118494:CD,118500:CD,118505
118482 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
118486 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
118494 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,138381
118500 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
118505 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
118515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,118523:CD,118528:CD,118533:CD,118538:CD,118543:CD,118551
118523 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
118528 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
118533 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
118538 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
118543 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
118551 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,137208
118564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,118584:CD,118585:CD,118590:CD,118595:CD,118673:CD,118674:CD,118679:CD,118684:CD,118849:CD,118853:JM,118575
118570 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,118853:JM,118575
118575 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,118577:CD,118625:CD,118629:CD,118637:CD,118641:CD,118645:CD,118649:CD,118654:CD,118658:CD,118662:CD,118666:CD,118697:CD,118702:CD,118710:CD,118715:CD,118723:CD,118728:CD,118736:CD,118741:CD,118749:CD,118754:CD,118762:CD,118767:CD,118775:CD,118780:CD,118784:CD,118788:CD,118792:CD,118796:CD,118800:CD,118804:CD,118808:CD,118815:CD,118820:CD,118844:CD,118866
118577 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
118585 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
118584 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
118590 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,118853:JM,118575
118595 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
118621 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
118625 :: CALL :: call :: I :: v28 = parseInt(v26)::
118629 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
118637 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
118641 :: CALL :: call :: V :: v33.setScopId(v19)::CL,104837
118645 :: CALL :: call :: V :: v33.setPdbId(v20)::CL,104786
118649 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,138551
118654 :: CALL :: call :: V :: v33.setRanges(v38)::CL,104826
118658 :: CALL :: call :: V :: v33.setClassificationId(v24)::CL,104706
118662 :: CALL :: call :: V :: v33.setSunid(v30)::CL,104877
118666 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
118673 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
118674 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
118679 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,118853:JM,118575
118684 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
118693 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
118697 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
118702 :: CALL :: call :: I :: v51 = parseInt(v49)::
118706 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
118710 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
118715 :: CALL :: call :: I :: v56 = parseInt(v54)::
118719 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
118723 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
118728 :: CALL :: call :: I :: v61 = parseInt(v59)::
118732 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
118736 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
118741 :: CALL :: call :: I :: v66 = parseInt(v64)::
118745 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
118749 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
118754 :: CALL :: call :: I :: v71 = parseInt(v69)::
118758 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
118762 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
118767 :: CALL :: call :: I :: v76 = parseInt(v74)::
118771 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
118775 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
118780 :: CALL :: call :: I :: v81 = parseInt(v79)::
118784 :: CALL :: call :: V :: v33.setClassId(v51)::CL,104686
118788 :: CALL :: call :: V :: v33.setFoldId(v56)::CL,104766
118792 :: CALL :: call :: V :: v33.setSuperfamilyId(v61)::CL,104897
118796 :: CALL :: call :: V :: v33.setFamilyId(v66)::CL,104746
118800 :: CALL :: call :: V :: v33.setDomainId(v71)::CL,104726
118804 :: CALL :: call :: V :: v33.setSpeciesId(v76)::CL,104857
118808 :: CALL :: call :: V :: v33.setPx(v81)::CL,104806
118815 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,118820
118820 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,118831:CD,118824:CD,118829:CD,118838:CD,118866
118824 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,118829
118829 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,118866
118831 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,118866
118838 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
118844 :: CALL :: call :: Z :: v103 = v101.add(v33)::
118849 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,118853:JM,118575
118853 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,118570:CD,118575:CD,118849:JM,118853
118866 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
119071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,119072:CD,119079
119072 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,105069
119076 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,119079
119079 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,119083:CD,119111
119080 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,119083
119083 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,119090:CD,119095:CD,119111
119084 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,119095
119087 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,119095
119090 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,119095
119095 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,119102:CD,119107:CD,119111
119096 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,119107
119099 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,119107
119102 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,119107
119107 :: NORM :: compound :: I :: return v49::CF,119072
119108 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,119111
119111 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,119115:CD,119120
119112 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,119115
119115 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,119116:CD,119120
119117 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,119120
119116 :: NORM :: compound :: I :: return #(1)::CF,119072
119121 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,119124
119120 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,119124:CD,119129
119125 :: NORM :: compound :: I :: return #(-1)::CF,119072
119124 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,119125:CD,119129
119126 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,119129
119129 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,119133:CD,119161
119130 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,119133
119133 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,119140:CD,119145:CD,119161
119134 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,119145
119137 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,119145
119140 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,119145
119145 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,119152:CD,119157:CD,119161
119146 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,119157
119149 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,119157
119152 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,119157
119157 :: NORM :: compound :: I :: return v45::CF,119072
119158 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,119161
119161 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,119165:CD,119170
119162 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,119165
119165 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,119166:CD,119170
119167 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,119170
119166 :: NORM :: compound :: I :: return #(1)::CF,119072
119171 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,119174
119170 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,119174:CD,119179
119175 :: NORM :: compound :: I :: return #(-1)::CF,119072
119174 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,119175:CD,119179
119176 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,119179
119179 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,119183:CD,119211
119180 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,119183
119183 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,119190:CD,119195:CD,119211
119184 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,119195
119187 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,119195
119190 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,119195
119195 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,119202:CD,119207:CD,119211
119196 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,119207
119199 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,119207
119202 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,119207
119207 :: NORM :: compound :: I :: return v41::CF,119072
119208 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,119211
119211 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,119215:CD,119220
119212 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,119215
119215 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,119216:CD,119220
119217 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,119220
119216 :: NORM :: compound :: I :: return #(1)::CF,119072
119221 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,119224
119220 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,119224:CD,119226
119225 :: NORM :: compound :: I :: return #(-1)::CF,119072
119224 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,119225:CD,119226
119226 :: NORM :: compound :: I :: return #(0)::CF,119072
119285 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,119286:CD,119290:CD,119294:CD,119298:CD,119303
119286 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,105083
119290 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,119303:CL,138854
119294 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,119303:CL,138854
119298 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,119303
119303 :: NORM :: compound :: I :: return v9::DD,119286
119579 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,105841:JM,105851:JM,150247:JM,150237:JM,160577:JM,160593:JM,160567:JM,160600:JM,160585
119578 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,119579:CD,119582:CD,119586:CD,119590:CD,119594
119582 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
119586 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
119590 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,119594:CL,117230
119595 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,119579
119594 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,119595:CD,119602:CD,119607:CD,119737:CD,119741:CD,119743
119602 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,119607
119607 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,119608:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,119612:CD,119616:CD,119656:CD,119722:CD,119727:CD,119742:CD,119743
119608 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,119743
119612 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,119633:JM,119616:JM,119622:JM,119628:JM,119742:CL,103412
119617 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,119633:JM,119622:JM,119628:JM,119742
119616 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,119617:CD,119622:CD,119634:CD,119638:CD,119742:JM,119633:JM,119628
119623 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,119633:JM,119622:JM,119628:JM,119742
119622 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,119623:CD,119628:CD,119634:CD,119638:CD,119742:JM,119633:JM,119622
119629 :: CALL :: call :: I :: v36 = v28.length()::JM,119633:JM,119622:JM,119628:JM,119742
119628 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,119629:CD,119633:CD,119634:CD,119638:CD,119742:JM,119622:JM,119628
119633 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,119742:CD,119634:CD,119638
119634 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,119639:JM,119638:JM,119643:CL,139279
119639 :: CALL :: call :: I :: v40 = v38.length()::JM,119639:JM,119643
119638 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,119742:CD,119639:CD,119643
119643 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,119742:CD,119648:CD,119652
119648 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,117230
119652 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,119742:CL,103412
119657 :: CALL :: call :: I :: v50 = v48.length()::JM,119661
119656 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,119657:CD,119661:CD,119670:CD,119675:CD,119680:CD,119685:CD,119697
119661 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,119662:CD,119667:CD,119670:CD,119675:CD,119680:CD,119685:CD,119697
119662 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,119667
119667 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,119670:CD,119675:CD,119680:CD,119685:CD,119697:CD,119702:CD,119711
119670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
119675 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
119680 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
119685 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
119697 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,61079
119702 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
119711 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,61079
119722 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,119727
119727 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,119733:CF,119728:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,119743
119728 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,119743
119733 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,119743
119737 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,61020
119741 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,119579
119743 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,119741
119742 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,119656:JM,119661:JM,119667
119811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,119812:CD,119818
119812 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,105850:JM,150246:JM,160576
119815 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,119818
119819 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,119823:CL,139288
119818 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,119819:CD,119823:CD,119835
119823 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,119824:CD,119828:CD,119833:CD,119835
119824 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,119833:CL,139288
119828 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,119833
119833 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,119834:CD,119835
119835 :: NORM :: compound :: Z :: return #(1)::CF,119812
119834 :: NORM :: compound :: Z :: return #(0)::CF,119812
119845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,119846:CD,119852
119846 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,105950
119849 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,119852
119852 :: NORM :: compound :: Z :: return v3::CF,119846
119855 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,105964
119854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,119855:CD,119861
119858 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,119861
119861 :: NORM :: compound :: Ljava/util/List :: return v3::CF,119855
119863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,119864:CD,119870
119864 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,106034
119867 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,119870
119871 :: NORM :: compound :: Z :: return #(0)::CF,119864
119870 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,119871:CD,119875:CD,119879:CD,119881:CD,119882
119872 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,119879
119875 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,119879
119879 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,119882
119881 :: NORM :: compound :: Z :: return v10::CF,119864
119882 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,119881
119891 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,106130:JM,106176:JM,106202:JM,106232:JM,120145:JM,125627:JM,141720:JM,160785:JM,160857:JM,160831:JM,160887
119890 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,119891:CD,119897
119894 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,119897
119897 :: NORM :: compound :: Ljava/util/List :: return v3::CF,119891
119899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,119907:CD,119914:CD,119945:CD,119949:CD,119953:CD,119957:JM,119950
119904 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,119907
119907 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,119911:JM,119957:JM,119949:JM,119950
119908 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
119911 :: CALL :: call :: V :: v6.clear()::
119914 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,119957:JM,119949:JM,119950
119919 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,119957:JM,119949
119924 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,60977
119928 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,119931
119931 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,119939:JM,119957:JM,119949
119939 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
119945 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,119957:JM,119949
119949 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,119919:CD,119924:CD,119931:CD,119945:JM,119957:JM,119949
119950 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
119953 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,119957:JM,119949
119957 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
119958 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
119985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,119989:CD,119993:CD,120012:CD,120016
119989 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
119993 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,120016
119998 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,120016
120003 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,120032
120007 :: CALL :: call :: Z :: v16 = v3.add(v14)::
120012 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,120016
120016 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,119998:CD,120003:CD,120007:CD,120012:JM,120016
120033 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
120032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,120033:CD,120036:JM,101666:JM,101654:JM,101673:JM,101659:CD,120044:CD,120052:CD,120060:CD,120064:CD,120068:CD,120146:CD,120150:CD,120151
120036 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,120151
120044 :: CALL :: call :: V :: v3.setChainID(v6)::CL,101697
120052 :: CALL :: call :: V :: v3.setCompound(v9)::CL,116451
120060 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,139306
120064 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,120150:JM,120077:CL,60270
120068 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,120150:JM,120077
120073 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,120150:JM,120077
120077 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,120082
120078 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,120145:CL,119890
120083 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,120085:CD,120141:CD,120145
120082 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,120083
120085 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,120145
120090 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,120145
120095 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,120104:CL,53029
120099 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,120104
120105 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,120111:CL,60446
120104 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,120105:CD,120109:CD,120111:CD,120141:CD,120145
120109 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,120111
120111 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,120120:CD,120128:CD,120132:CD,120136:CD,120141:CD,120145
120120 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,61059
120128 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,60626
120132 :: CALL :: call :: V :: v42.addAtom(v33)::CL,60796
120136 :: CALL :: call :: V :: v3.addGroup(v42)::CL,101844
120141 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,120145
120145 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,120090:CD,120095:CD,120099:CD,120104:JM,120145:JM,120150:JM,120077
120146 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,120150:JM,120077
120151 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,120033
120150 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,120073:CD,120077:CD,120078:CD,120082:CD,120083:CD,120146:JM,120150:CF,120151
120195 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,106642:JM,106646:JM,106636
120194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,120195:CD,120200:CD,120205:CD,120206
120200 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,120205
120205 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,120206
120206 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,120195
120209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,120210:CD,120216
120210 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,106781
120213 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,120216
120216 :: NORM :: compound :: D :: return v3::CF,120210
120219 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,106787
120218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,120219:CD,120225
120222 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,120225
120225 :: NORM :: compound :: D :: return v3::CF,120219
120227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,120228:CD,120234
120228 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,106793
120231 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,120234
120234 :: NORM :: compound :: D :: return v3::CF,120228
120237 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,107017:JM,146543:JM,150044
120236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,120237:CD,120243
120240 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,120243
120243 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,120237
120254 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
120257 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,120273:JM,120270:DD,120261
120261 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
120264 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
120267 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
120270 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
120273 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
120290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,120295
120295 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
120301 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,120306
120306 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
120312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,120316:CD,120320:CD,120324
120316 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
120320 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,139317
120324 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
120334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,120338:CD,120345:CD,120356
120338 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,120342
120342 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
120345 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,120350:CL,76135
120350 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
120353 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
120357 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
120356 :: NORM :: declaration :: [D :: v9 = new []::DD,120357
120360 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
120363 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
120381 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,107429
120380 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,120381:CD,120385:CD,120390:CD,120391:CD,120395:CD,120396:CD,120402:CD,120406:CD,120410:CD,120414
120385 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,120390:JM,120395
120391 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,120390:JM,120395
120390 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,120390:JM,120395
120395 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,120390:JM,120395
120396 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,120390:JM,120395
120402 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
120406 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
120410 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,120414:CL,139433
120414 :: NORM :: compound :: I :: return v19::DD,120381
120425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,120430:CD,120435:CD,120436:CD,120441:CD,120445:CD,120453:CD,120457
120430 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,120435
120435 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,120435
120436 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,120435
120441 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
120445 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,120453
120450 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
120453 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,120453
120457 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
120477 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,107495
120476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,120477:CD,120481:CD,120490:CD,120495:CD,120499:CD,120525:CD,120544:CD,120563:CD,120572:CD,120577:CD,120581:CD,120586
120481 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
120486 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,120499:JM,120586:JM,120572
120490 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,120499:JM,120586:JM,120572
120495 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,120499:JM,120586:JM,120572
120499 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,120500:CD,120508
120500 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,120505:CL,76135
120505 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
120509 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
120508 :: NORM :: declaration :: [D :: v18 = new []::DD,120509
120525 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,103421
120544 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,103421
120563 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,103421
120569 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
120573 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,120577:JM,120581
120572 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
120577 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,120577:JM,120581
120581 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,120582
120582 :: EXPR :: modify :: D :: v43[v44] = v49::
120587 :: NORM :: compound :: Z :: return #(1)::DD,120477
120586 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,120587:CD,120588
120588 :: NORM :: compound :: Z :: return #(0)::DD,120477
120632 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,120639:CD,120694:CD,120698:CD,120705:CD,120710
120636 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,120698
120639 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,120698
120644 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,120698
120649 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
120671 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
120674 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
120678 :: CALL :: call :: V :: v12.setId(v22)::CL,139844
120682 :: CALL :: call :: V :: v12.setChainId(v11)::CL,139855
120686 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
120689 :: CALL :: call :: Z :: v27 = v25.add(v12)::
120694 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,120698
120698 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,120644:CD,120649:JM,139717:CD,120674:CD,120678:CD,120682:CD,120689:CD,120694:JM,120698
120705 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,120710
120710 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,120722:CD,120743:CD,120750:CD,120760
120722 :: CALL :: call :: V :: v32.setId(v36)::CL,139875
120743 :: CALL :: call :: V :: v32.setMacromolecularSize(v43)::CL,139886
120750 :: CALL :: call :: V :: v32.setTransforms(v45)::CL,139897
120760 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
120822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,120828:CD,120832:CD,120838:CD,120843:CD,120911:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,121068
120828 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120832 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,121130
120838 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120843 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,120844:CD,120848:CD,120860:CD,121130
120844 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,121130
120848 :: CALL :: call :: I :: v19 = v17.intValue()::JM,121130
120861 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,120864
120860 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,120864
120865 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,120868
120864 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,120868:CD,120882:CD,120891:JM,108791:JM,108798:CD,120901
120869 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
120868 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,120875
120872 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
120875 :: CALL :: call :: Z :: v32 = v29.add(v30)::
120882 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
120891 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,120895
120895 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
120901 :: CALL :: call :: V :: v40.setMolId(v25)::CL,124065
120908 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,120911
120911 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,120913:CD,120918:CD,120926:CD,120931:CD,120987:CD,120992:CD,121025:CD,121030:CD,121063:CD,121068:CD,121076:CD,121081:CD,121089:CD,121094:CD,121102:CD,121107:CD,121115:CD,121120:JM,120843
120913 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120918 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,120922:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120922 :: CALL :: call :: V :: v47.setMolName(v10)::CL,139952
120926 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120931 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,120932:CD,120938:CD,120962:CD,120966:CD,120973:CD,120977:CD,120981:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120932 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,121131:JM,120956:JM,120966
120938 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
120943 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,121131:JM,120956
120947 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,121131:JM,120956
120951 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,121131:JM,120956
120957 :: CALL :: call :: Z :: v69 = v55.add(v67)::
120956 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,121131
120962 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,120966
120966 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,120943:CD,120947:CD,120951:CD,120956:CD,120957:CD,120962:CD,121131
120973 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,123968
120977 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
120981 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
120987 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120993 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,121024
120992 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,120993:CD,120999:CD,121020:CD,121024:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
120999 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
121004 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
121008 :: CALL :: call :: Z :: v90 = v83.add(v88)::
121016 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,139963
121020 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,121024
121025 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121024 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,121004:CD,121008:CD,121016:CD,121020:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121031 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,121062
121030 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,121031:CD,121037:CD,121058:CD,121062:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121037 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
121042 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
121046 :: CALL :: call :: Z :: v105 = v98.add(v103)::
121054 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,139974
121058 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,121062
121063 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121062 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,121042:CD,121046:CD,121054:CD,121058:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121068 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,121072:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121072 :: CALL :: call :: V :: v111.setFragment(v10)::CL,139985
121076 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121081 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,121085:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121085 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,139996
121089 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121094 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,121098:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121098 :: CALL :: call :: V :: v121.setMutation(v10)::CL,140007
121102 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121107 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,121111:JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121111 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,140018
121115 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,120992:JM,121120:JM,120931:JM,121107:JM,120918:JM,121030:JM,121094:JM,121081:JM,120843:JM,121068
121120 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,121124
121124 :: CALL :: call :: V :: v131.setDetails(v10)::CL,140029
121131 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
121130 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,120860:DD,120864
121248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,121254:CD,121258:CD,121264:CD,121269:CD,121294:CD,121299:CD,121303:CD,121308:CD,121317:CD,121322:CD,121765:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121644:JM,121518:JM,121392:JM,121714:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121254 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121258 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,121281
121264 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121269 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,121273:CD,121277:CD,121281:CD,121282:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121270 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
121273 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,121281
121277 :: CALL :: call :: I :: v19 = v17.intValue()::JM,121281
121281 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
121282 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
121294 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
121299 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
121303 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
121308 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
121317 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121322 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,121326:CD,121331:CD,121336:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121658:JM,121532:JM,121406
121326 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,140040
121331 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121336 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,121340:CD,121345:CD,121350:JM,121728:JM,121602:JM,121476:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121340 :: CALL :: call :: V :: v193.setFragment(v10)::CL,139985
121345 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121350 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,121354:CD,121359:CD,121364:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121354 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,140051
121359 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121364 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,121368:CD,121373:CD,121378:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121368 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,140062
121373 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121378 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,121382:CD,121387:CD,121392:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121382 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,140073
121387 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121392 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,121396:CD,121401:CD,121406:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532
121396 :: CALL :: call :: V :: v185.setStrain(v10)::CL,140084
121401 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121406 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,121410:CD,121415:CD,121420:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121410 :: CALL :: call :: V :: v183.setVariant(v10)::CL,140095
121415 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121420 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,121424:CD,121429:CD,121434:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121424 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,140106
121429 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121434 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,121438:CD,121443:CD,121448:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121438 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,140117
121443 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121448 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,121452:CD,121457:CD,121462:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121336:JM,121658:JM,121532:JM,121406
121452 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,140128
121457 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121462 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,121466:CD,121471:CD,121476:JM,121728:JM,121602:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121466 :: CALL :: call :: V :: v175.setTissue(v10)::CL,140139
121471 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121476 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,121480:CD,121485:CD,121490:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121480 :: CALL :: call :: V :: v173.setCell(v10)::CL,140150
121485 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121490 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,121494:CD,121499:CD,121504:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121494 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,140161
121499 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121504 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,121508:CD,121513:CD,121518:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121508 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,140172
121513 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121518 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,121522:CD,121527:CD,121532:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121406
121522 :: CALL :: call :: V :: v167.setGene(v10)::CL,140183
121527 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121532 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,121536:CD,121541:CD,121546:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121536 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,140194
121541 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121546 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,121550:CD,121555:CD,121560:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121550 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,140205
121555 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121560 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,121564:CD,121569:CD,121574:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121564 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,140216
121569 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121574 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,121578:CD,121583:CD,121588:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121578 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,140227
121583 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121588 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,121592:CD,121597:CD,121602:JM,121728:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121592 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,140238
121597 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121602 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,121606:CD,121611:CD,121616:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121606 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,140249
121611 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121616 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,121620:CD,121625:CD,121630:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121620 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,140260
121625 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121630 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,121634:CD,121639:CD,121644:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121634 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,140271
121639 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121644 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,121648:CD,121653:CD,121658:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121532:JM,121406
121648 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,140282
121653 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121658 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,121662:CD,121667:CD,121672:JM,121728:JM,121602:JM,121476:JM,121350:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121662 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,140293
121667 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121672 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,121676:CD,121681:CD,121686:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121676 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,140304
121681 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121686 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,121690:CD,121695:CD,121700:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121690 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,140315
121695 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121700 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,121704:CD,121709:CD,121714:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121704 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,140326
121709 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121714 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,121718:CD,121723:CD,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121718 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,140337
121723 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121728 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,121732:CD,121737:CD,121742:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121732 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,140348
121737 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121742 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,121746:CD,121751:CD,121756:JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121746 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,140359
121751 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,121728:JM,121602:JM,121476:JM,121350:JM,121672:JM,121546:JM,121420:JM,121742:JM,121616:JM,121490:JM,121364:JM,121686:JM,121560:JM,121434:JM,121756:JM,121630:JM,121504:JM,121378:JM,121700:JM,121574:JM,121448:JM,121322:JM,121644:JM,121518:JM,121392:JM,121714:JM,121269:JM,121588:JM,121462:JM,121336:JM,121658:JM,121532:JM,121406
121756 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,121760
121760 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,140370
121765 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
121945 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,121949
121949 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
121952 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,121956
121956 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
121959 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
121962 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
121965 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
121968 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
121971 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
121974 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
121977 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
121980 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
122005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,122010:CD,122014:CD,122019
122010 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
122014 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,122019
122019 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,122021:CD,122026:CD,122027
122021 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,122277:JM,122026
122027 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,122028:CD,122036:CD,122042:CD,122047:CD,122051:CD,122056:CD,122064:CD,122277:CD,122278:CD,122284
122026 :: EXPR :: assign :: I :: v13 = v12.length::DD,122027
122028 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
122036 :: CALL :: call :: V :: v112.setSurname(v114)::CL,140400
122042 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
122047 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,140411
122051 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
122056 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
122064 :: CALL :: call :: Z :: v128 = v4.add(v112)::
122071 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
122077 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
122082 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
122087 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
122095 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
122099 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,122145:JM,122209:JM,122241:JM,122104
122105 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,122106:CD,122112:CD,122117:CD,122122:CD,122127:CD,122131:CD,122136:CD,122145:CD,122146:CD,122283
122104 :: EXPR :: assign :: I :: v31 = v30.length::DD,122105
122106 :: CALL :: call :: V :: v26.setSurname(v16)::CL,140400
122112 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
122117 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
122122 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
122127 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,140411
122131 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
122136 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
122145 :: EXPR :: assign :: I :: v49 = v30.length::DD,122146
122146 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,122151:CD,122157:CD,122162:CD,122166:CD,122171:CD,122209:CD,122210:CD,122211:CD,122214:CD,122219:CD,122224:CD,122229:CD,122237:CD,122241:CD,122242:CD,122249:CD,122254:CD,122259:CD,122267:CD,122280:CD,122281:CD,122282:CD,122283
122151 :: CALL :: call :: V :: v26.setSurname(v50)::CL,140400
122157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
122162 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,140411
122166 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
122171 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
122181 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,122281
122185 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,122281
122186 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
122194 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,122281
122199 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,122281
122204 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,122281
122209 :: EXPR :: assign :: I :: v63 = v30.length::DD,122210
122208 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,122282:CF,122280
122211 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,122185:CD,122186:CD,122194:CD,122199:CD,122204:CD,122208:CD,122209:CD,122210:CD,122280:CD,122281:CD,122282
122210 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,122211
122214 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
122219 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
122224 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
122229 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
122237 :: CALL :: call :: V :: v26.setInitials(v78)::CL,140420
122241 :: EXPR :: assign :: I :: v93 = v30.length::DD,122242
122243 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
122242 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
122249 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
122254 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
122259 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
122267 :: CALL :: call :: V :: v26.setSurname(v95)::CL,140400
122271 :: CALL :: call :: Z :: v107 = v4.add(v26)::
122277 :: EXPR :: assign :: I :: v15 = v12.length::CF,122278
122276 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,122284
122278 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,122077:CD,122082:CD,122087:CD,122095:CD,122099:CD,122104:CD,122105:CD,122271:CD,122276:CD,122277:CD,122283:CD,122284
122281 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,122282
122280 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,122281:DD,122280:DD,122283
122283 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,122276
122282 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,122208:DD,122211:CF,122209
122284 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,122278:DD,122280:DD,122283:CF,122277
122381 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,122386
122386 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
122392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,122397
122397 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
122403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,122408
122408 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
122429 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122434 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122439 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122444 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122558
122452 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122457 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,122458:CD,122476:CD,122486:CD,122490:JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122458 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122476 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
122486 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122490 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,122511:CD,122525:CD,122534:CD,122538:CD,122539:CD,122543:CD,122544:CD,122550:CD,122554:CD,122558:CD,122559:CD,122563:CD,122564:CD,122570:CD,122574:CD,122578:CD,122579:CD,122583:CD,122584:CD,122590:CD,122594:CD,122595:CD,122601:CD,122605:CD,122613:CD,122618:CD,122622:CD,122623:CD,122629:CD,122633:CD,122639:CD,122643:CD,122648:CD,122652:CD,122664:CD,122681:CD,122698:CD,122715:CD,122724:CD,122729:CD,122785:CD,122790:JM,122457:JM,122490
122511 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122525 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
122534 :: CALL :: call :: I :: v38 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122539 :: CALL :: call :: I :: v42 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122538 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122558:JM,122622
122543 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122544 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122550 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122558
122554 :: CALL :: call :: I :: v49 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122559 :: CALL :: call :: I :: v53 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122558 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122558:JM,122622
122563 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122564 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122570 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,122578:JM,122583:JM,122729
122574 :: CALL :: call :: I :: v61 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122579 :: CALL :: call :: I :: v65 = v28.length()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122578 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122558:JM,122622
122583 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122584 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122590 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,122729
122595 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122594 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,122791:JM,122790:JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122601 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122605 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
122613 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,122791:JM,122790
122618 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122623 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122622 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122629 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,122563:JM,122578:JM,122583:JM,122729:JM,122538:JM,122543:JM,122622:JM,122558
122633 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,122791:JM,122790
122639 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,122791:JM,122790
122643 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,122791:JM,122790
122648 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,122791:JM,122790
122652 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,122791:JM,122790
122664 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
122681 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
122698 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
122715 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
122724 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,122729
122729 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,122730:JM,122729
122730 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,122729
122745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,122563:JM,122578:JM,122583:JM,122457:JM,122729:JM,122490:JM,122538:JM,122543:JM,122622:JM,122558
122746 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
122754 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
122759 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
122785 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,122791:JM,122790
122791 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
122790 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,122797:CD,122805:CD,122810
122797 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
122802 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
122805 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
122810 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
122942 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,122947
122947 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
122953 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,122954:CD,122960
122954 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,110216
122957 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,122960
122960 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,122954
122962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,122967:JM,122971
122967 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,122971
122971 :: EXPR :: modify :: Z :: p0 $this .published = v5::
122987 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,122992
122992 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
123008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,123013
123013 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
123029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,123034
123034 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
123040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,123045
123045 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
123051 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,123056
123056 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
123062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,123067
123067 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
123073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,123078
123078 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
123084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,123089
123089 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
123095 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,123099:CD,123103:CD,123107:CD,123112:CD,123117:CD,123122:CD,123127:CD,123132:CD,123137:CD,123142:CD,123150:CD,123170:CD,123174:CD,123175:CD,123180:CD,123188:CD,123193:CD,123198:CD,123206:CD,123210:CD,123252:CD,123257:CD,123262:CD,123270:CD,123275:CD,123297:CD,123302:CD,123324:CD,123329:CD,123351:CD,123356:CD,123375
123099 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,123099
123103 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
123107 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
123112 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
123117 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
123122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
123127 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
123132 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
123137 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
123142 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
123147 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,123174
123150 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,123174
123155 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,123174
123160 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
123165 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
123170 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,123174
123175 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
123174 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,123155:CD,123160:CD,123165:CD,123170:JM,123174
123180 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
123185 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
123188 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
123193 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
123198 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
123203 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,123210
123206 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,123210
123211 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,123238
123210 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,123214:CD,123234:CD,123238:CD,123239:CD,123244
123214 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,123238
123219 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,123238
123224 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
123229 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
123234 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,123238
123239 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
123238 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,123219:CD,123224:CD,123229:CD,123234:JM,123238
123244 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
123249 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
123252 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
123257 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
123262 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
123267 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,123275
123270 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,123275
123275 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,123279:CD,123284:CD,123289
123276 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
123279 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
123284 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
123289 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
123294 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,123302
123297 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,123302
123303 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
123302 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,123306:CD,123311:CD,123316
123306 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
123311 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
123316 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
123321 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,123329
123324 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,123329
123329 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,123333:CD,123338:CD,123343
123330 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
123333 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
123338 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
123343 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
123348 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,123356
123351 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,123356
123357 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
123356 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,123360:CD,123365:CD,123370
123360 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
123365 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
123370 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
123375 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
123493 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,123498
123498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
123505 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,110626:JM,110706:JM,145758
123504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,123505:CD,123509:CD,123534:CD,123538:JM,123518
123509 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,123538:JM,123518
123514 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,123538:JM,123518
123519 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,123532:CL,77766
123518 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,123533
123523 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,123532:CL,77766
123527 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,123532
123533 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,123505
123532 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,123533:CD,123534:CD,123538:JM,123518
123534 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,123538:JM,123518
123538 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,123514:CD,123518:CD,123519:CD,123523:CD,123527:CD,123532:CD,123541:CD,123546:CD,123550:CD,123555:CD,123560:CD,123564:CD,123569:CD,123577:JM,123538
123541 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
123546 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,77766
123550 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
123555 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
123560 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,123538:JM,123518
123564 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,123538:JM,123518
123569 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
123577 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,123505
123595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,123657:CD,123663
123657 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,123663:CL,140474
123663 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,123664:CD,123677:CD,123682:CD,123688:CD,123693:CD,123697
123664 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,101786
123677 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,123697:CL,64975
123682 :: CALL :: call :: I :: v40 = v38.size()::JM,123697
123688 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,123698:CL,64975
123693 :: CALL :: call :: I :: v45 = v43.size()::JM,123698
123697 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,123698:CD,123756:CD,123761:CD,123765
123698 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,123715
123715 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,140938
123756 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,123765:CL,64975
123761 :: CALL :: call :: I :: v50 = v48.size()::JM,123765
123765 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,123793:CD,123799
123793 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,123799:CL,141017
123799 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,123800
123800 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,101786
123874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,123879:CD,123893:CD,123897:JM,123898
123879 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,123897:JM,123898
123884 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,123897
123889 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,106357
123893 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,123897
123897 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,123884:CD,123889:CD,123893:JM,123897
123898 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
123912 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,123918:CD,123932:CD,123936:CD,123940:CD,123948
123918 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,123936
123923 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,123936
123928 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,116462
123932 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,123936
123937 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
123936 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,123923:CD,123928:CD,123932:JM,123936
123940 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,123936
123945 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
123948 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,123936
123969 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,158698:JM,164426:JM,164458
123968 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,123969:CD,123975
123972 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,123975
123975 :: NORM :: compound :: I :: return v3::CF,123969
123977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,123978:CD,123982:CD,123988
123978 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
123982 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,123988:CL,141285
123988 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,123978
123992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,123997
123997 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
124003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,124011
124008 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
124011 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
124021 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,146417
124020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,124021:CD,124025:CD,124031
124025 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,124031:CL,101327
124031 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,124021
124035 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,124036:CD,124042
124036 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,111073
124039 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,124042
124042 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,124036
124044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,124052
124052 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
124065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,124070
124070 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
124077 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
124076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,124077:CD,124083
124080 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,124083
124083 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124077
124085 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,124086:CD,124091:CD,124098
124086 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
124091 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,124098:CL,141432
124098 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,124086
124103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,124104:CD,124110
124104 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,146562:JM,146647
124107 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,124110
124110 :: NORM :: compound :: Ljava/util/List :: return v3::CF,124104
124113 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,111671
124112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,124113:CD,124119
124116 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,124119
124119 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124113
124121 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,124122:CD,124128
124122 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,111681
124125 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,124128
124128 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124122
124175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,124176:CD,124185:CD,124194:CD,124200:CD,124204:CD,124208:CD,124213:JM,105813:JM,105816:JM,105819:CD,124223:CD,124228:CD,124232:CD,124249:CD,124254:CD,124259:CD,124264:CD,124269:CD,124274:CD,124279:CD,124284:CD,124293:CD,124298:CD,124299:JM,124186:JM,124190
124176 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,159372:JM,159406
124185 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,124186:CD,124190:CD,124299:JM,124185
124186 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,124185:JM,124299:JM,124186:JM,124190
124190 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,124299
124194 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,124020
124200 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,124185:JM,124299:JM,124186:JM,124190
124204 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,124190
124208 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
124213 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
124223 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,141579
124228 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,124228:JM,124232
124233 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,124228:JM,124232
124232 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,124233:CD,124242:JM,124228:JM,124232
124242 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,141663
124249 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
124254 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,124228:JM,124232
124259 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
124264 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,124185:JM,124299:JM,124186:JM,124190
124269 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,124190
124274 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
124279 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,124185:JM,124299:JM,124186:JM,124190
124284 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,124190
124293 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,124298:CL,53038
124299 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
124298 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,124176
124394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,124398:CD,124399:CD,124407:CD,124412:CD,124416:CD,124417:CD,124425:CD,124433:CD,124438:CD,124443:CD,124447:CD,124448:CD,124456:CD,124464:CD,124469:CD,124474:CD,124478:CD,124479:CD,124487:CD,124495:CD,124500:CD,124505:CD,124509:CD,124510:CD,124518:CD,124526:CD,124531:CD,124536:CD,124540:CD,124541:CD,124549:CD,124557:CD,124562:CD,124567:CD,124571:CD,124572:CD,124580:CD,124588:CD,124593:CD,124598:CD,124602:CD,124603:CD,124611:CD,124616:CD,124620:CD,124621:CD,124629:CD,124637:CD,124642:CD,124647:CD,124651:CD,124652:CD,124660:CD,124668:CD,124673:CD,124678:CD,124682:CD,124683:CD,124691:CD,124699:CD,124704:CD,124709:CD,124713:CD,124714:CD,124722:CD,124730:CD,124735:CD,124740:CD,124744:CD,124745:CD,124753:CD,124761:CD,124766:CD,124771:CD,124775:CD,124776:CD,124784:CD,124792:CD,124797:CD,124802:CD,124806:CD,124807:CD,124815:CD,124820
124399 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
124398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
124407 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
124412 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
124417 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
124416 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
124425 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
124430 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
124433 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
124438 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
124443 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
124447 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
124448 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
124456 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
124461 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
124464 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
124469 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
124474 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
124479 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
124478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
124487 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
124492 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
124495 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
124500 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
124505 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
124509 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
124510 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
124518 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
124523 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
124526 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
124531 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
124536 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
124541 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
124540 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
124549 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
124554 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
124557 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
124562 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
124567 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
124571 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
124572 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
124580 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
124585 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
124588 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
124593 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
124598 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
124603 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
124602 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
124611 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
124616 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
124621 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
124620 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
124629 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
124634 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
124637 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
124642 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
124647 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
124651 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
124652 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
124660 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
124665 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
124668 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
124673 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
124678 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
124683 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
124682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
124691 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
124696 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
124699 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
124704 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
124709 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
124713 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
124714 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
124722 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
124727 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
124730 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
124735 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
124740 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
124745 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
124744 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
124753 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
124758 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
124761 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
124766 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
124771 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
124775 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
124776 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
124784 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
124789 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
124792 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
124797 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
124802 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
124807 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
124806 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
124815 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
124820 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
124913 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,111837
124912 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,124913:CD,124929:CD,124951:CD,124961:JM,141793:JM,141799:JM,141796:JM,141790:CD,124971:CD,124975:CD,124986:CD,125002
124929 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,124175
124951 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,124175
124961 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,124975
124971 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,141868
124975 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,124913
124986 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,141885
125002 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,124913
125029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,125036:CD,125040:CD,125127:CD,125131
125036 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,125131:CL,52383
125040 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,125131
125045 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,125131
125050 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,125125:JM,125060:JM,125068:CL,101777
125055 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,125125:JM,125060:JM,125068
125061 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,125062:CD,125063:CD,125068:CD,125069:CF,125120
125060 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,125061
125063 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,125125:JM,125060:JM,125068
125062 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,125125:JM,125060:JM,125068
125069 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,125071:CD,125077:CD,125078:CD,125084:CD,125088:JM,125125:JM,125060:JM,125068
125068 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,125069
125071 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,125125:JM,125060:JM,125068
125077 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,125125:JM,125060:JM,125068
125078 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,125125:JM,125060:JM,125068
125084 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,125088:CL,61050
125089 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,125093:CL,61050
125088 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,125089:CD,125093:CF,125120
125093 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,125095:CD,125099:CD,125103
125095 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,125103:CL,142181
125099 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,125104:CL,142193
125103 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,125104:CF,125120
125104 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,125106:CD,125111:CD,125112
125106 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,125111:CL,86345
125111 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,125112
125112 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,141793:JM,141799:JM,141796:JM,141790:CF,125120
125121 :: CALL :: call :: I :: v17 = v15.size()::JM,125125:JM,125060:JM,125068
125120 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,125133
125125 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,125126
125127 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,125131
125126 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,125055:CD,125060:CD,125061:CD,125120:CD,125121:CD,125125:CD,125133:JM,125068:JM,125131
125131 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,125045:CD,125050:CD,125121:CD,125125:CD,125126:CD,125127:CD,125133:JM,125131
125133 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,125125:JM,125060:JM,125068:DD,125062:DD,125077:DD,125120:DD,125126
125182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,125189:CD,125193:CD,125280:CD,125284
125189 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,125284:CL,52383
125193 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,125284
125198 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,125284
125203 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,125221:JM,125213:JM,125278:CL,101777
125208 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,125221:JM,125213:JM,125278
125213 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,125214
125215 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,125221:JM,125213:JM,125278
125214 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,125215:CD,125216:CD,125221:CD,125222:CF,125273
125216 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,125221:JM,125213:JM,125278
125221 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,125222
125222 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,125224:CD,125230:CD,125231:CD,125237:CD,125241:JM,125221:JM,125213:JM,125278
125224 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,125221:JM,125213:JM,125278
125231 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,125221:JM,125213:JM,125278
125230 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,125221:JM,125213:JM,125278
125237 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,125241:CL,61050
125241 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,125242:CD,125246:CF,125273
125242 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,125246:CL,61050
125246 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,125248:CD,125252:CD,125256
125248 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,125256:CL,142205
125252 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,125257:CL,142217
125257 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,125259:CD,125264:CD,125265
125256 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,125257:CF,125273
125259 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,125264:CL,86345
125265 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,141793:JM,141799:JM,141796:JM,141790:CF,125273
125264 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,125265
125273 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,125286
125274 :: CALL :: call :: I :: v17 = v15.size()::JM,125221:JM,125213:JM,125278
125279 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,125208:CD,125213:CD,125214:CD,125273:CD,125274:CD,125278:CD,125286:JM,125221:JM,125284
125278 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,125279
125280 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,125284
125284 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,125198:CD,125203:CD,125274:CD,125278:CD,125279:CD,125280:CD,125286:JM,125284
125286 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,125221:JM,125213:JM,125278:DD,125215:DD,125230:DD,125273:DD,125279
125335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,125342:CD,125346:CD,125487:CD,125491
125342 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,125491:CL,52383
125346 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,125491
125351 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,125491
125356 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,125369:JM,125486:CL,60270
125360 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,125369:JM,125486
125365 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,125369:JM,125486
125369 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
125370 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,125374:CL,61050
125374 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,125376:CD,125380:CD,125385:CD,125389:CD,125404:CD,125408:CD,125409:CD,125477:CD,125481
125376 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,125481
125380 :: CALL :: call :: Z :: v29 = v26.add(v22)::
125385 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,125408:JM,125398:CL,61101
125389 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,125408:JM,125398
125394 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,125408:JM,125398
125399 :: CALL :: call :: Z :: v40 = v26.add(v38)::
125398 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
125404 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,125408:JM,125398
125409 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,125481
125408 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,125394:CD,125398:CD,125399:CD,125404:JM,125408:JM,125481
125414 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,125481
125423 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,117230
125427 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,125476:CL,142229
125431 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,125476
125436 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,125476
125445 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,125459:CL,53038
125454 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,125460:CL,53038
125459 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,125460:JM,125476
125460 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,141793:JM,141799:JM,141796:JM,141790:JM,125476
125472 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,125476
125477 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,125481
125476 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,125436:CD,125445:CD,125454:CD,125459:CD,125472:JM,125476:JM,125481
125481 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,125414:CD,125423:CD,125427:CD,125431:CD,125472:CD,125476:CD,125477:JM,125481:JM,125369:JM,125486
125482 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,125369:JM,125486
125487 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,125491
125486 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,125365:CD,125369:CD,125370:CD,125374:CD,125482:JM,125486:JM,125491
125491 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,125351:CD,125356:CD,125360:CD,125482:CD,125486:CD,125487:JM,125491
125552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,125559:CD,125563:CD,125633:CD,125637
125559 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,125637:CL,52383
125563 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,125637
125568 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,125637
125573 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,125632:CL,60270
125577 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,125632
125582 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,125632
125587 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,125627:CL,119890
125591 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,125627
125596 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,125627
125601 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,125605:CL,142238
125605 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,125606:CD,125610:CD,125614:JM,125627
125606 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,125614:CL,142238
125610 :: CALL :: call :: I :: v38 = v36.size()::JM,125614
125615 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,125619:CL,142238
125614 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,125615:CD,125619:CD,125620:JM,125627
125619 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
125620 :: CALL :: call :: V :: v41.trimToSize()::
125623 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,125627
125627 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,125596:CD,125601:CD,125605:CD,125623:JM,125627:JM,125632
125628 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,125632
125633 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,125637
125632 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,125582:CD,125587:CD,125591:CD,125623:CD,125627:CD,125628:JM,125632:JM,125637
125637 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,125568:CD,125573:CD,125577:CD,125628:CD,125632:CD,125633:JM,125637
125663 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,112121:JM,111950
125662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,125663:CD,125669
125666 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,125669
125669 :: NORM :: compound :: Ljava/util/List :: return v3::CF,125663
125671 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,125672:CD,125678
125672 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,173203:JM,173229
125675 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,125678
125678 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,125672
125680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,125695:CD,125704:CD,125709:CD,125713:JM,125733
125695 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
125704 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,125713:CL,60253
125709 :: CALL :: call :: I :: v13 = v11.size()::JM,125713
125713 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,125715:CD,125723:CD,125729:CD,125733:JM,125713
125715 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,125680
125723 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,125713:JM,125733
125729 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,125733:CL,142247
125733 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,125735:CD,125755
125735 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,125680
125755 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,142260
125791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,125792:CD,125801:CD,125805:JM,125819:JM,125839
125792 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,112675:JM,125828:JM,125848
125801 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,125805:CL,102086
125805 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,125806:CD,125810:CD,125815:CD,125819
125806 :: NORM :: compound :: Z :: return #(0)::DD,125792
125810 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,125819:CL,60253
125815 :: CALL :: call :: I :: v13 = v11.size()::JM,125819
125819 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,125821:CD,125828:CD,125829:CD,125835:CD,125839:JM,125819
125821 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,125828:CL,125791
125829 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,125819:JM,125839
125828 :: NORM :: compound :: Z :: return v26::DD,125792
125835 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,125839:CL,142247
125839 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,125841:CD,125848:CD,125850
125841 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,125848:CL,125791
125849 :: NORM :: compound :: Z :: return #(0)::DD,125792
125848 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,125849:CD,125850
125850 :: NORM :: compound :: Z :: return #(1)::DD,125792
125893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,125894:CD,125897:CD,125901:CD,125906:CD,125910
125894 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,112844
125897 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,142401
125901 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
125906 :: CALL :: call :: Z :: v8 = v5.exists()::JM,125910
125910 :: NORM :: compound :: Z :: return v8::DD,125894
125917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,125922:CD,125931:CD,125935:CD,125940
125922 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,142436
125931 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,142401
125935 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
125940 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,142515
125960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,125964:CD,125965:CD,125977:CD,125978:CD,125992
125965 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,142401
125964 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
125977 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,125978
125978 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
125992 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,142732
126009 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,126016:CD,126020:CD,126033:CD,126045:CD,126056:CD,126068
126013 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,126020
126016 :: CALL :: call :: Z :: v5 = v3.get()::JM,126020
126020 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,126022:CD,126026:CD,126050:CD,126076
126022 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,126026:CL,143460
126027 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,143484
126026 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,126027
126033 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
126042 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
126045 :: CALL :: call :: V :: v16.set(#(0))::
126050 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,143527
126056 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
126065 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
126068 :: CALL :: call :: V :: v24.set(#(0))::
126073 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,126076
126076 :: CALL :: call :: V :: v26.set(#(1))::JM,126076
126093 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,112946
126092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,126093:CD,126096:CD,126100:CD,126105:CD,126109
126096 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,143576
126100 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
126105 :: CALL :: call :: Z :: v8 = v5.exists()::JM,126109
126109 :: NORM :: compound :: Z :: return v8::DD,126093
126116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,126121:CD,126130:CD,126134:CD,126139
126121 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,142436
126130 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,143576
126134 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
126139 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,142515
126159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,126163:CD,126164:CD,126176:CD,126177:CD,126191
126163 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
126164 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,143576
126177 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
126176 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,126177
126191 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,143611
126208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,126214:CD,126216:CD,126220:CD,126254:CD,126258
126214 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,126258:JM,126229
126216 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,126258:JM,126229
126220 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,126258:JM,126229
126225 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,126258:JM,126229
126229 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,126234
126230 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,126234
126235 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,126239
126234 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,126239
126239 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,126251:JM,126258:JM,126229
126251 :: CALL :: call :: V :: v7.remove()::
126254 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,126258:JM,126229
126258 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,126225:CD,126229:CD,126230:CD,126234:CD,126235:CD,126239:CD,126254:JM,126258
126291 :: NORM :: declaration :: Ljava/util/concurrent/locks/ReentrantReadWriteLock :: v6 = new java.util.concurrent.locks.ReentrantReadWriteLock::DD,126295
126295 :: EXPR :: modify :: Ljava/util/concurrent/locks/ReadWriteLock :: p0 $this .domainsFileLock = v6::
126298 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = p1 $cacheLocation ::
126301 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .requestedVersion = p2 $version ::
126304 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .url = #(http://prodata.swmed.edu)::
126307 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = #(null)::
126358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,126362
126362 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,144377
126382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,126405:CD,126409:CD,126421:CD,126495:CD,126499
126402 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,126405
126405 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,126406:CF,126409
126406 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,144377
126409 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,126415
126415 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
126418 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,126499:JM,126430
126421 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,126499:JM,126430
126426 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,126499:JM,126430
126431 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,126435:CL,116486
126430 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
126435 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,126436:CD,126440
126436 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,126441:JM,126440:JM,126445:CL,113447
126441 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,126441:JM,126445
126440 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,126441:CD,126445
126445 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,126448:CD,126453
126448 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
126453 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
126461 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,126466
126466 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,126477:CD,126470:CD,126475:CD,126484:CD,126537
126470 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,126475
126475 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,126537
126477 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,126537
126484 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
126490 :: CALL :: call :: Z :: v53 = v51.add(v25)::
126495 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,126499:JM,126430
126499 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,126426:CD,126430:CD,126431:CD,126435:CD,126461:CD,126466:CD,126490:CD,126495:CD,126537:JM,126499
126537 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
126593 :: EXPR :: reference :: Ljava/lang/Long :: v5 = p1 $o .uid::DD,126596
126596 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = v5::
126599 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $o .domainId::DD,126602
126602 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = v6::
126605 :: EXPR :: reference :: Ljava/lang/Boolean :: v7 = p1 $o .manual::DD,126608
126608 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = v7::
126611 :: EXPR :: reference :: Ljava/lang/Integer :: v8 = p1 $o .xGroup::DD,126614
126614 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = v8::
126617 :: EXPR :: reference :: Ljava/lang/Integer :: v9 = p1 $o .hGroup::DD,126620
126620 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = v9::
126623 :: EXPR :: reference :: Ljava/lang/Integer :: v10 = p1 $o .tGroup::DD,126626
126626 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = v10::
126629 :: EXPR :: reference :: Ljava/lang/Integer :: v11 = p1 $o .fGroup::DD,126632
126632 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = v11::
126635 :: EXPR :: reference :: Ljava/lang/String :: v12 = p1 $o .pdbId::DD,126638
126638 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v12::
126641 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $o .chainId::DD,126644
126644 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v13::
126647 :: EXPR :: reference :: Ljava/lang/String :: v14 = p1 $o .range::DD,126650
126650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = v14::
126653 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $o .seqIdRange::DD,126656
126656 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = v15::
126659 :: EXPR :: reference :: Ljava/lang/String :: v16 = p1 $o .architectureName::DD,126662
126662 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = v16::
126665 :: EXPR :: reference :: Ljava/lang/String :: v17 = p1 $o .xGroupName::DD,126668
126668 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = v17::
126671 :: EXPR :: reference :: Ljava/lang/String :: v18 = p1 $o .hGroupName::DD,126674
126674 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = v18::
126677 :: EXPR :: reference :: Ljava/lang/String :: v19 = p1 $o .tGroupName::DD,126680
126680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = v19::
126683 :: EXPR :: reference :: Ljava/lang/String :: v20 = p1 $o .fGroupName::DD,126686
126686 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = v20::
126689 :: EXPR :: reference :: Ljava/lang/Long :: v21 = p1 $o .assemblyId::DD,126692
126692 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = v21::
126695 :: NORM :: declaration :: Ljava/util/HashSet :: v22 = new java.util.HashSet::DD,126703
126703 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = v22::
126745 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,126746:CD,126750:CD,126755:CD,126759:CD,126767:CD,126772:CD,126777:CD,126782:CD,126786:CD,126791:CD,126799:CD,126803:CD,126807:CD,126811:CD,126815
126746 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,113466
126750 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
126755 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
126759 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
126767 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
126772 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
126777 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
126782 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,89741
126786 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
126791 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
126799 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,89851
126803 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,126811:JM,126815:CL,79139
126807 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,126811:JM,126815
126811 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,126811:JM,126815
126815 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,126816:CD,126820:CD,126821
126816 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,126820:CL,144532
126821 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,126746
126820 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,126746
126853 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::JM,116640:JM,116654
126852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CE,126853:CD,126856:CD,126871:CD,126882
126857 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return #(null)::DD,126853
126856 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CF,126858:CD,126857:CD,126862:CD,126866:CD,126894:CD,126898:CD,126922:CD,126925
126858 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = new org.biojava.nbio.structure.ResidueNumber::DD,126922
126862 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,126856
126866 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
126871 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
126878 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
126882 :: CALL :: call :: I :: v19 = parseInt(v17)::
126890 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,126925
126894 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,107897
126899 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,107908
126898 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,126899:CD,126904:CD,126908
126904 :: CALL :: call :: I :: v29 = v26.length()::JM,126908
126909 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
126908 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,126909:CD,126918:CF,126922
126918 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,107908
126922 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v4::DD,126853
126925 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,126898:JM,126908
126948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoading(java.lang.String)::CD,126956:CD,126961
126956 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,126961
126961 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,126965
126965 :: CALL :: call :: Z :: v10 = v8.add(p1 $name )::
126977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CD,126982:CD,126987
126982 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,144606
126987 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::CL,144694:CL,60140
126998 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoadingFinished(java.lang.String)::CD,127006
127006 :: CALL :: call :: Z :: v6 = v4.remove(p1 $name )::
127025 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,127032:CD,127091:CD,127098:CD,127219:CD,127223:CD,127241:CD,127245:CD,127291:CD,127295:CD,127311:CD,127315:CD,127331:CD,127335:CD,127641:CD,127645:CD,127668:CD,127674:CD,127678:CD,127685:CD,127689:CD,127869:CD,127872:CD,127875:CD,127882:CD,127989:CD,127993:CD,127994:CD,127998:CD,128029:CD,128034:CD,128039:CD,128047:CD,128051
127029 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,127032
127032 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,127039:CD,127053:CD,127058
127039 :: CALL :: call :: V :: v12.addGroup(v13)::CL,101844
127053 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,127058:CL,144765
127059 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
127058 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,127065
127062 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
127065 :: CALL :: call :: Z :: v24 = v21.add(v22)::
127091 :: CALL :: call :: V :: v25.addModel(v26)::CL,101097
127095 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,127107:JM,127223
127098 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,127107:JM,127223
127103 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,127107:JM,127223
127107 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,127183
127135 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
127145 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,144810
127150 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,144879
127155 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,145060
127164 :: CALL :: call :: V :: v58.setChainID(v60)::CL,101697
127168 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
127171 :: CALL :: call :: Z :: v64 = v62.add(v58)::
127178 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
127183 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,127183
127187 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
127192 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
127197 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
127202 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
127207 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
127215 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,145181
127219 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,127107:JM,127223
127223 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,127103:CD,127107:CD,127135:CD,127145:CD,127150:CD,127155:CD,127164:CD,127171:CD,127178:CD,127183:CD,127187:CD,127192:CD,127197:CD,127202:CD,127207:CD,127215:CD,127219:JM,127223
127241 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,127245:CL,110569
127245 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,127249:CD,127253:CD,127283
127249 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,127253:CL,97711
127253 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,127260:CD,127283
127260 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,145721
127283 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,110656
127288 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,127295
127291 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,127295
127295 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
127302 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,127305
127305 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
127308 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,127315
127311 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,127315
127315 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
127322 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,127325
127325 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
127331 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,127335:CL,145963
127335 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,127553:CD,127557:CD,127633:CD,127637:CD,128061:CD,128064
127340 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,127540:JM,127358:CL,60253
127345 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
127349 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,127540:JM,127358
127354 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,127540:JM,127358
127359 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,127375:JM,127535
127358 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
127362 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,127375:JM,127535
127366 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,127375:JM,127535
127371 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,127375:JM,127535
127375 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,127385
127376 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,127385:CL,77766
127380 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,127385
127385 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,128059:CD,127389:CD,127402:CD,127406:CD,127410:CD,127427:CD,127431:CD,127435:CD,127439:CD,127458:CD,127462:CD,127463:CD,127467:CD,127486:CD,127490:CD,127495:CD,127500:CD,127531:CD,127535:CD,128056:CD,128057:CD,128060
127389 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
127402 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,60270
127406 :: CALL :: call :: I :: v205 = v203.size()::
127410 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
127427 :: CALL :: call :: V :: v179.setChainID(v197)::CL,101697
127431 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,145972
127435 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,127462:CL,60270
127439 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,127462
127444 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,127462
127449 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,127453:CL,61050
127453 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,128056:CD,127454
127454 :: CALL :: call :: V :: v222.setChainId(v197)::CL,101282
127458 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,127462
127463 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,127490:CL,101777
127462 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,127444:CD,127449:CD,127453:CD,127458:CD,128056:JM,127462
127467 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,127490
127472 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,127490
127477 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,127481:CL,61050
127481 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,128057:CD,127482
127482 :: CALL :: call :: V :: v234.setChainId(v197)::CL,101282
127486 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,127490
127490 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,127472:CD,127477:CD,127481:CD,127486:CD,128057:JM,127490
127495 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,127500:CL,144765
127501 :: CALL :: call :: Z :: v242 = v171.add(v179)::
127500 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,127501:CD,127507:CD,127511:CD,127525:CD,127529:CD,128058:CD,128060
127507 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,127529:CL,60270
127511 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,127529
127516 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,127529
127521 :: CALL :: call :: V :: v240.addGroup(v251)::CL,101844
127525 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,127529
127529 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,127516:CD,127521:CD,127525:CD,128058:JM,127529
127531 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,127375:JM,127535
127535 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,128060:CD,127371:CD,127375:CD,127376:CD,127380:CD,127385:CD,128059:JM,127535
127536 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,127540:JM,127358
127540 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,127354:CD,127358:CD,127362:CD,127366:CD,127531:CD,127535:CD,127536:CD,128059:CD,128060:JM,127540
127544 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,101150
127549 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,128061
127553 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,127557:CL,102086
127557 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,127340:CD,127345:CD,127349:CD,127536:CD,127540:CD,127544:CD,127549:CD,127553:CD,128060:CD,128061
127563 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,127628:CL,60253
127568 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,127628
127573 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,127628
127578 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,127623:JM,127594
127581 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,127623:JM,127594
127585 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,127623:JM,127594
127590 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,127623:JM,127594
127595 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,127604:CL,77766
127594 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,127604
127599 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,127604
127604 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,128062:CD,127608:CD,127614:CD,127619:CD,127623:CD,128063
127608 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
127614 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,145972
127619 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,127623:JM,127594
127623 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,128063:CD,127590:CD,127594:CD,127595:CD,127599:CD,127604:CD,128062:JM,127623
127624 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,127628
127629 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,128064
127628 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,127573:CD,127581:CD,127585:CD,127619:CD,127623:CD,127624:CD,128062:CD,128063:JM,127628:CF,127629
127633 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,127637:CL,102086
127637 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,127563:CD,127568:CD,127624:CD,127628:CD,127629:CD,127633:CD,128063:CD,128064
127641 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,127645:CL,97711
127645 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,127649:CD,127653:CD,127660:CD,127664
127649 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,127653:CL,97617
127653 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,127654
127654 :: CALL :: call :: V :: p0 $this .addBonds()::CL,145983
127660 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,127664:CL,97690
127665 :: CALL :: call :: V :: p0 $this .addCharges()::CL,146017
127664 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,127665
127668 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,146029
127674 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,127678:CL,97711
127679 :: CALL :: call :: V :: p0 $this .addSites()::CL,146339
127678 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,127679
127685 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,127689:CL,107321
127689 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,127690:CD,127697:CD,127853:CD,127857:CD,127865
127690 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
127694 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,127857:JM,127706
127697 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,127857:JM,127706
127702 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,127857:JM,127706
127707 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
127706 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,127729:JM,127733:JM,127738:JM,128065:JM,127763:JM,127783:CF,127707
127712 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,127748:JM,127724
127715 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,127748:JM,127724
127720 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,127748:JM,127724
127725 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,127733:JM,127738:JM,127725
127724 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,127733:JM,127738:JM,127725
127729 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,127729:JM,127733:JM,127738
127733 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,127733:JM,127738
127739 :: CALL :: call :: Z :: v312 = v295.add(v304)::
127738 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,127739:JM,127748:JM,127724
127744 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,127748:JM,127724
127748 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,127720:CD,127724:CD,127725:CD,127729:CD,127733:CD,127738:CD,127744:JM,127748
127756 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,146772
127763 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,128065:JM,127763
127767 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,128065
127783 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,127783
127787 :: CALL :: call :: I :: v334 = parseInt(v332)::
127826 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,127831:CD,127835:CD,127839:CD,127843:CD,127847:JM,127857:JM,127706
127831 :: CALL :: call :: V :: v354.setId(v330)::CL,139875
127835 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,139886
127839 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,139897
127843 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
127847 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
127853 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,127857:JM,127706
127857 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,127702:CD,127706:CD,127707:CD,127715:CD,127744:CD,127748:JM,146757:JM,146764:CD,127756:CD,127763:CD,127767:CD,127783:CD,127787:CD,127826:CD,127853:CD,128065:JM,127857
127865 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,111603
127869 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,146896
127872 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,147270
127875 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,128051:JM,128007
127879 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,127993
127882 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,127993
127887 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,127993
127892 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
127900 :: CALL :: call :: V :: v382.setDetails(v385)::CL,147332
127915 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,147343
127923 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,147354
127931 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,147365
127939 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,147376
127947 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,147387
127955 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,147398
127963 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,127968
127969 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,128068:CF,127970:CD,127978
127968 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,127969:DD,128068
127970 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,128068
127978 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
127984 :: CALL :: call :: Z :: v422 = v420.add(v382)::
127989 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,127993
127993 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,127887:CD,127892:CD,127900:CD,127915:CD,127923:CD,127931:CD,127939:CD,127947:CD,127955:CD,127963:CD,127968:CD,127969:CD,127984:CD,127989:CD,128068:JM,127993:JM,128051:JM,128007
127994 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,128051:JM,128007
127998 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,128051:JM,128007
128003 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,128051:JM,128007
128007 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
128011 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,124020
128016 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
128022 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,101833
128029 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
128034 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
128039 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
128047 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,128051:JM,128007
128051 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,128003:CD,128007:CD,128011:CD,128016:CD,128022:CD,128047:JM,128051
128057 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,127490:DD,128057:DD,128058:DD,128060
128056 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,127462:DD,128056:DD,128057
128059 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,127375:JM,127535:DD,128056:DD,128059:DD,128060
128058 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,127529:DD,128058:DD,128060
128061 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,127557:DD,128060
128060 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,127540:JM,127358:DD,127549:DD,128059
128063 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,127628:DD,127629:DD,128062
128062 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,127623:JM,127594:DD,128062:DD,128063
128065 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,127783:DD,127826
128064 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,127637:DD,128063
128068 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
128379 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,114545:JM,114555
128378 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,128379:CD,128383:CD,128387:CD,128391:CD,128395:JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128495:JM,128575
128383 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,128396:DD,128412:DD,128690
128387 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128391 :: CALL :: call :: I :: v9 = v7.length()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128395 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,128396:CD,128397:CD,128401:CD,128405:JM,128691:JM,128674:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128397 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128396 :: NORM :: compound :: Ljava/util/List :: return v4::DD,128379
128401 :: CALL :: call :: I :: v14 = v12.length()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128405 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,128406:CD,128411:CD,128670:CD,128674:CD,128675:CD,128679:CD,128684:CD,128690:CD,128702:CD,128703:CD,128704:CD,128705:CD,128706:JM,128691:JM,128405:JM,128692:JM,128454:JM,128427:JM,128395:JM,128495:JM,128575
128406 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128411 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,128412:CD,128670:CD,128674:CD,128675:CD,128679:CD,128684:CD,128690:CD,128702:CD,128703:CD,128704:CD,128705:CD,128706
128412 :: NORM :: compound :: Ljava/util/List :: return v4::DD,128379
128414 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128419 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128427:JM,128395:JM,128495:JM,128575
128423 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128427 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,128428
128429 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128428 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,128691:CD,128429:CD,128430:CD,128435
128430 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128435 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128395:JM,128495:JM,128575
128439 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,128692:CD,128440:CD,128441:CD,128446
128441 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128440 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128446 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128395:JM,128495:JM,128575
128450 :: CALL :: call :: C :: v43 = v25.charValue()::JM,128691:JM,128692:JM,128454:JM,128495:JM,128575
128455 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,128472:CD,128456:CD,128461:CD,128473:CD,128481:CD,128486:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128454 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,128455:CD,128491:CD,128495:JM,128691:JM,128692:JM,128454:JM,128575
128456 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,128461
128461 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,128462:CD,128466
128462 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
128466 :: CALL :: call :: Z :: v50 = v4.add(v48)::
128473 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
128472 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
128481 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,128700
128486 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,128700
128491 :: CALL :: call :: C :: v60 = v25.charValue()::JM,128691:JM,128692:JM,128454:JM,128495:JM,128575
128495 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,128496:CD,128571:CD,128575:JM,128691:JM,128692:JM,128454:JM,128495
128497 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,128693:CD,128498
128496 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,128497:CD,128509:CD,128545:CD,128693:CD,128694
128499 :: CALL :: call :: C :: v63 = v35.charValue()::JM,128507
128498 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,128499:CD,128503:CD,128507:CD,128508:CD,128693:CD,128694
128503 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,128507
128507 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,128693:CD,128508:CD,128694
128509 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,128526:CD,128510:CD,128515:CD,128527:CD,128535:CD,128540:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128508 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,128693
128510 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,128515
128515 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,128516:CD,128520
128516 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
128520 :: CALL :: call :: Z :: v74 = v4.add(v72)::
128527 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
128526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
128535 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,128700
128540 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,128700
128545 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,128546:CD,128550:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128546 :: CALL :: call :: C :: v84 = v41.charValue()::JM,128550
128550 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,128552:CD,128553:CD,128561:CD,128566:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128553 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
128552 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
128561 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,128700
128566 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,128700
128571 :: CALL :: call :: C :: v94 = v25.charValue()::JM,128691:JM,128692:JM,128454:JM,128495:JM,128575
128575 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,128651:CD,128576:CD,128652:CD,128660:CD,128665:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128577 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,128695:CD,128578
128576 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,128577:CD,128589:CD,128625:CD,128695:CD,128696
128579 :: CALL :: call :: C :: v97 = v35.charValue()::JM,128587
128578 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,128579:CD,128583:CD,128587:CD,128588:CD,128695:CD,128696
128583 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,128587
128587 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,128695:CD,128588:CD,128696
128589 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,128606:CD,128590:CD,128595:CD,128607:CD,128615:CD,128620:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128588 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,128695
128590 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,128595
128595 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,128596:CD,128600
128596 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
128600 :: CALL :: call :: Z :: v108 = v4.add(v106)::
128607 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
128606 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
128615 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,128700
128620 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,128700
128625 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,128626:CD,128630:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128626 :: CALL :: call :: C :: v118 = v41.charValue()::JM,128630
128630 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,128632:CD,128633:CD,128641:CD,128646:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701
128633 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
128632 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
128641 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,128700
128646 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,128700
128651 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
128652 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
128660 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,128700
128665 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,128700
128669 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,128706:CF,128702
128670 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,128691:JM,128674:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575
128675 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,128684
128674 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,128414:CD,128419:CD,128423:CD,128427:CD,128428:CD,128439:CD,128450:CD,128454:CD,128669:CD,128670:CD,128691:CD,128692:CD,128697:CD,128698:CD,128699:CD,128700:CD,128701:CD,128702:CD,128703:CD,128704:CD,128705:CD,128706:JM,128674:JM,128405:JM,128411:JM,128395:JM,128495:JM,128575:JM,128684
128679 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,128684
128685 :: CALL :: call :: Z :: v151 = v4.add(v144)::
128684 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,128685:CF,128690
128691 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,128498:JM,128507:DD,128578:JM,128587:CF,128439
128690 :: NORM :: compound :: Ljava/util/List :: return v4::DD,128379
128693 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,128694:DD,128701
128692 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,128691:JM,128692:JM,128454:JM,128495:JM,128575:DD,128545:JM,128550:DD,128625:JM,128630
128695 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,128696:DD,128701
128694 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,128509
128697 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,128698:DD,128702
128696 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,128589
128699 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,128700:DD,128704
128698 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,128699:DD,128703
128701 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,128669
128700 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,128701:DD,128705
128703 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,128704:DD,128577:DD,128698
128702 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,128703:DD,128455:DD,128496:DD,128576:DD,128697
128705 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,128706:JM,128461:JM,128515:JM,128595:JM,128684:DD,128700
128704 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,128705:DD,128497:DD,128699
128706 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,128691:JM,128405:JM,128692:JM,128454:JM,128411:JM,128427:JM,128395:JM,128495:JM,128575:DD,128428:DD,128429:DD,128439:DD,128440:DD,128508:DD,128588:DD,128674:DD,128693:DD,128695:DD,128701
128869 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,114937
128868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,128869:CD,128876:CD,128880:CD,128897:CD,128898:CD,128906:CD,128910:CD,128914:CD,128931:CD,128932:CD,128952:CD,128953:CD,128954:CD,129140:CD,129144:CD,129145:CD,129148:CD,129149:CD,129150:JM,128970
128876 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,128880:JM,129145:JM,129144:JM,128970:JM,128876
128880 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,128880:JM,129145:JM,129144:JM,128970
128897 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,128869
128898 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,128952:CL,147409
128906 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,128914
128910 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
128914 :: EXPR :: assign :: I :: v27 = v24.length::DD,128931
128924 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
128931 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,128932:CD,128924:CD,128930:CD,129148
128930 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,129148
128932 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
128945 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
128951 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,129149
128953 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,128945:CD,128951:CD,128952:CD,129149:JM,128880:JM,129145:JM,129144:JM,128970:JM,128876
128952 :: EXPR :: assign :: I :: v39 = v20.length::CF,128953
128954 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,128880:JM,129145:JM,129144:JM,128970:JM,128876
128959 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,128880:JM,129145:JM,129144:JM,128970
128965 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,128880:JM,129145:JM,129144:JM,128970
128964 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,128880:JM,129145:JM,129144:JM,128970:DD,129150
128971 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,128976
128970 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,129075:JM,129081:JM,129087
128977 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,128986:CD,128978:CD,128991:CD,128995:CD,129001:CD,129005:CD,129010:CD,129014:CD,129018:CD,129022:CD,129028:CD,129033:CD,129037:CD,129042:CD,129043:CD,129150
128976 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,128977:JM,128995:JM,129001:JM,128991:JM,129010:JM,129022:JM,129014:JM,129018
128978 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,147586
128986 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
128991 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,128995:JM,129001:JM,128991
128995 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,128995:JM,129001
129001 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,129001
129005 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
129010 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,129010:JM,129022
129014 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,129014:JM,129018:JM,129022
129018 :: CALL :: call :: I :: v77 = v75.length()::JM,129018:JM,129022
129022 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,129022
129028 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
129033 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
129037 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,129042
129043 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,129044:CD,129052:CD,129060:CD,129064:CD,129065:CD,129069:CD,129074:CD,129150
129042 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,129043:JM,129052
129044 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,147586
129052 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,129052
129056 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,129074:JM,129060:JM,129069
129060 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,129074:JM,129060:JM,129069
129065 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,129074:JM,129065:JM,129069
129064 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,129074:JM,129065:JM,129069
129069 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,129074:JM,129069
129075 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,129150:CD,129076:CD,129081
129074 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,129075:CD,129150
129076 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,129081
129081 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,129150:CD,129082:CD,129087
129082 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,129087
129087 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,129150:CD,129088:CD,129092
129088 :: CALL :: call :: I :: v108 = parseInt(v57)::
129092 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
129140 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,128880:JM,129145:JM,129144:JM,128970
129145 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,128869
129144 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,128959:CD,128964:CD,128965:CD,128970:CD,128971:CD,128976:CD,128977:CD,129140:CD,129150:JM,128880:JM,129144:CF,129145
129149 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,128951:DD,128953:CF,128952
129148 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,128930:DD,128931
129150 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,128880:JM,129145:JM,129144:JM,128970:DD,128964
129271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,129279:CD,129293:CD,129297
129276 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129297
129279 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129297
129284 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129297
129289 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,147736
129293 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129297
129297 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129284:CD,129289:CD,129293:JM,129297
129307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,129315:CD,129329:CD,129333
129312 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129333
129315 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129333
129320 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129333
129325 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,147779
129329 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129333
129333 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129320:CD,129325:CD,129329:JM,129333
129343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,129351:CD,129365:CD,129369
129348 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129369
129351 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129369
129356 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129369
129361 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,148614
129365 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129369
129369 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129356:CD,129361:CD,129365:JM,129369
129379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,129387:CD,129401:CD,129405
129384 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129405
129387 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129405
129392 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129405
129397 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,148773
129401 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129405
129405 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129392:CD,129397:CD,129401:JM,129405
129415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,129423:CD,129437:CD,129441
129420 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129441
129423 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129441
129428 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129441
129433 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,148847
129437 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129441
129441 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129428:CD,129433:CD,129437:JM,129441
129451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,129459:CD,129473:CD,129477
129456 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129477
129459 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129477
129464 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129477
129469 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,148948
129473 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129477
129477 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129464:CD,129469:CD,129473:JM,129477
129487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,129495:CD,129509:CD,129513
129492 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129513
129495 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129513
129500 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129513
129505 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,148989
129509 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129513
129513 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129500:CD,129505:CD,129509:JM,129513
129523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,129531:CD,129545:CD,129549
129528 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129549
129531 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129549
129536 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129549
129541 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,149188
129545 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129549
129549 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129536:CD,129541:CD,129545:JM,129549
129559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,129567:CD,129581:CD,129585
129564 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129585
129567 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129585
129572 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129585
129577 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,149297
129581 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129585
129585 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129572:CD,129577:CD,129581:JM,129585
129595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,129603:CD,129617:CD,129621
129600 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129621
129603 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129621
129608 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129621
129613 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,149320
129617 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129621
129621 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129608:CD,129613:CD,129617:JM,129621
129631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,129639:CD,129653:CD,129657
129636 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129657
129639 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129657
129644 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129657
129649 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,149500
129653 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129657
129657 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129644:CD,129649:CD,129653:JM,129657
129667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,129675:CD,129689:CD,129693
129672 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129693
129675 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129693
129680 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129693
129685 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,149541
129689 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129693
129693 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129680:CD,129685:CD,129689:JM,129693
129703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,129711:CD,129725:CD,129729
129708 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129729
129711 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129729
129716 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129729
129721 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,149943
129725 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129729
129729 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129716:CD,129721:CD,129725:JM,129729
129739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,129747:CD,129761:CD,129765
129744 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129765
129747 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129765
129752 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129765
129757 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,149972
129761 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129765
129765 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129752:CD,129757:CD,129761:JM,129765
129775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,129783:CD,129797:CD,129801
129780 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129801
129783 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129801
129788 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129801
129793 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,149995
129797 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129801
129801 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129788:CD,129793:CD,129797:JM,129801
129811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,129819:CD,129833:CD,129837
129816 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129837
129819 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129837
129824 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129837
129829 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,150126
129833 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129837
129837 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129824:CD,129829:CD,129833:JM,129837
129847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,129855:CD,129869:CD,129873
129852 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129873
129855 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129873
129860 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129873
129865 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,150431
129869 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129873
129873 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129860:CD,129865:CD,129869:JM,129873
129883 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,129891:CD,129905:CD,129909
129888 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129909
129891 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129909
129896 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129909
129901 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,150448
129905 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129909
129909 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129896:CD,129901:CD,129905:JM,129909
129919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,129927:CD,129941:CD,129945
129924 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129945
129927 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129945
129932 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129945
129937 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,150477
129941 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129945
129945 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129932:CD,129937:CD,129941:JM,129945
129955 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,129963:CD,129977:CD,129981
129960 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,129981
129963 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129981
129968 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129981
129973 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,150500
129977 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129981
129981 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129968:CD,129973:CD,129977:JM,129981
129991 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,129999:CD,130013:CD,130017
129996 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130017
129999 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130017
130004 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130017
130009 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,150523
130013 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130017
130017 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130004:CD,130009:CD,130013:JM,130017
130027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,130035:CD,130049:CD,130053
130032 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130053
130035 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130053
130040 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130053
130045 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,150596
130049 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130053
130053 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130040:CD,130045:CD,130049:JM,130053
130063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,130071:CD,130085:CD,130089
130068 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130089
130071 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130089
130076 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130089
130085 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130089
130089 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130076:CD,130085:JM,130089
130099 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,130107:CD,130121:CD,130125
130104 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130125
130107 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130125
130112 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130125
130117 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,150693
130121 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130125
130125 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130112:CD,130117:CD,130121:JM,130125
130135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,130143:CD,130157:CD,130161
130140 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130161
130143 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130161
130148 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130161
130153 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,150737
130157 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130161
130161 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130148:CD,130153:CD,130157:JM,130161
130171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,130179:CD,130193:CD,130197
130176 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130197
130179 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130197
130184 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130197
130189 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,150947
130193 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130197
130197 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130184:CD,130189:CD,130193:JM,130197
130207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,130215:CD,130229:CD,130233
130212 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130233
130215 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130233
130220 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130233
130225 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,151038
130229 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130233
130233 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130220:CD,130225:CD,130229:JM,130233
130243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,130251:CD,130265:CD,130269
130248 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130269
130251 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130269
130256 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130269
130261 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,151216
130265 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130269
130269 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130256:CD,130261:CD,130265:JM,130269
130279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,130287:CD,130301:CD,130305
130284 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130305
130287 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130305
130292 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130305
130297 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,151254
130301 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130305
130305 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130292:CD,130297:CD,130301:JM,130305
130315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,130323:CD,130337:CD,130341
130320 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130341
130323 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130341
130328 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130341
130333 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,151283
130337 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130341
130341 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130328:CD,130333:CD,130337:JM,130341
130351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,130359:CD,130373:CD,130377
130356 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130377
130359 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130377
130364 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130377
130369 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,151300
130373 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130377
130377 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130364:CD,130369:CD,130373:JM,130377
130387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,130395:CD,130409:CD,130413
130392 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130413
130395 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130413
130400 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130413
130405 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,151329
130409 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130413
130413 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130400:CD,130405:CD,130409:JM,130413
130423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,130431:CD,130445:CD,130449
130428 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130449
130431 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130449
130436 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130449
130441 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,151365
130445 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130449
130449 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130436:CD,130441:CD,130445:JM,130449
130459 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,130467:CD,130481:CD,130485
130464 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130485
130467 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130485
130472 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130485
130481 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130485
130485 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130472:CD,130481:JM,130485
130495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,130503:CD,130517:CD,130521
130500 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130521
130503 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130521
130508 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130521
130517 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130521
130521 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130508:CD,130517:JM,130521
130531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,130539:CD,130553:CD,130557
130536 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130557
130539 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130557
130544 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130557
130549 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,151425
130553 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130557
130557 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130544:CD,130549:CD,130553:JM,130557
130567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,130577:CD,130593:CD,130597
130574 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,130597
130577 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,130597
130582 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,130597
130593 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,130597
130597 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,130582:CD,130593:JM,130597
130615 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,130623:CD,130627:CD,130636:CD,130644:CD,130651:CD,130662
130623 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,130627:CL,100823
130627 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452
130636 :: CALL :: call :: V :: v10.setTitle(v12)::CL,106616
130644 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,106576
130651 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,100832
130662 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,100812
130681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::CE,130682:CD,130697:CD,130713
130682 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::JM,116311
130697 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getBiologicalAssembly(p1 $pdbId , p2 $biolAssemblyNr , p3 $cache , v10)::JM,130713:CL,151507
130713 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v12::DD,130682
130745 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::
130744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::CE,130745:CD,130748:CD,130775:CD,130779:CD,130780:CD,130784:CD,130785:JM,130767
130748 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,130784
130753 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $ranges .get(v20)::JM,130779:JM,130767
130758 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v3.append(v9)::
130763 :: CALL :: call :: I :: v13 = p1 $ranges .size()::JM,130779:JM,130767
130767 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 - #(1)::CF,130768
130769 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v3.append(#(,))::
130768 :: PRED :: IF :: Z :: if (v20 >= v15) goto 44::CD,130769:CF,130774
130775 :: CALL :: call :: I :: v7 = p1 $ranges .size()::JM,130779:JM,130767
130774 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,130785
130779 :: PRED :: IF :: Z :: if (v20 < v7) goto 16::CD,130753:CD,130758:CD,130763:CD,130767:CD,130768:CD,130774:CD,130775:CD,130785:JM,130779:JM,130784
130780 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,130784
130785 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,130767:DD,130768:DD,130774:DD,130779
130784 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,130745
130805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,130809:CD,130813:CD,130858:CD,130862:CD,130866:CD,130867:CD,130871:CD,131474:CD,131478:CD,131479:CD,131545:CD,131549:CD,131551
130809 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,130880:JM,131478:JM,131473:JM,130894:JM,131467:JM,131549
130813 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
130821 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,151695
130826 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,130830:CL,151712
130830 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,130834:CD,130839:CD,130845:CD,130849
130834 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,151695
130839 :: CALL :: call :: Z :: v22 = v5.add(v20)::
130845 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
130849 :: CALL :: call :: Z :: v26 = v3.add(v24)::
130854 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,131551
130858 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,130866:CL,52383
130862 :: CALL :: call :: I :: v12 = v10.size()::JM,130866
130867 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,131467
130866 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,130867:CD,130821:CD,130826:CD,130830:CD,130854:CD,130858:CD,130862:CD,131551
130871 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,130880:JM,131478
130876 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,130880:JM,131478
130881 :: CALL :: call :: I :: v40 = v38.intValue()::JM,130899
130880 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,130899
130885 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,131473:JM,130894
130890 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,131473:JM,130894
130895 :: CALL :: call :: I :: v49 = v47.intValue()::JM,130899
130894 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,130899
130899 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,130904:CD,130912:CD,130917:CD,130921:CD,130929:CD,130939:CD,130945:CD,130950:CD,131469:CD,131473
130904 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,151695
130912 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,151695
130917 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
130921 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
130929 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,151763
130939 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,151763
130945 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,130950:CL,152094
130951 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,130956:CL,152094
130950 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,130951:CD,130956:CD,130982:CD,130987
130957 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,131552:JM,130967:CL,152110
130956 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,130957:CD,130962:CD,130967:CD,130971:CD,130975:CD,130982:CD,130987:CD,131063:CD,131067:CD,131071:CD,131075:CD,131079:CD,131080:CD,131084:CD,131085:CD,131086:CD,131087:CD,131088:CD,131089:CD,131090:CD,131091:CD,131092:CD,131113:CD,131121:CD,131131:CD,131139:CD,131149:CD,131157:CD,131173:CD,131178:CD,131183:CD,131188:CD,131196:CD,131197:CD,131380:CD,131381:CD,131459:CD,131463:CD,131467:CD,131552:CD,131553:CD,131554
130962 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,131553:JM,130971:CL,152110
130967 :: CALL :: call :: I :: v78 = v74.getLength()::JM,131552:JM,130967
130971 :: CALL :: call :: I :: v80 = v76.getLength()::JM,131553:JM,130971
130975 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,131554:CL,152135
130982 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,130987:CL,152175
130987 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,130988:CD,130993:CD,131019:CD,131024
130988 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,130993:CL,152175
130993 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,130994:CD,130999:CD,131004:CD,131008:CD,131012:CD,131019:CD,131024:CD,131063:CD,131067:CD,131071:CD,131075:CD,131079:CD,131080:CD,131084:CD,131085:CD,131086:CD,131087:CD,131088:CD,131089:CD,131090:CD,131091:CD,131092:CD,131113:CD,131121:CD,131131:CD,131139:CD,131149:CD,131157:CD,131173:CD,131178:CD,131183:CD,131188:CD,131196:CD,131197:CD,131380:CD,131381:CD,131459:CD,131463:CD,131467:CD,131552:CD,131553:CD,131554
130994 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,131552:JM,131004:CL,152191
130999 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,131008:JM,131553:CL,152191
131004 :: CALL :: call :: I :: v92 = v88.getLength()::JM,131552:JM,131004
131008 :: CALL :: call :: I :: v94 = v90.getLength()::JM,131008:JM,131553
131012 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,131554:CL,152216
131019 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,131024:CL,152256
131025 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,131030:CL,152256
131024 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,131025:CD,131030:CD,131469:CD,131473
131031 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,131041:JM,131552:CL,152272
131030 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,131031:CD,131036:CD,131041:CD,131045:CD,131049:CD,131063:CD,131067:CD,131071:CD,131075:CD,131079:CD,131080:CD,131084:CD,131085:CD,131086:CD,131087:CD,131088:CD,131089:CD,131090:CD,131091:CD,131092:CD,131113:CD,131121:CD,131131:CD,131139:CD,131149:CD,131157:CD,131173:CD,131178:CD,131183:CD,131188:CD,131196:CD,131197:CD,131380:CD,131381:CD,131459:CD,131463:CD,131467:CD,131469:CD,131473:CD,131552:CD,131553:CD,131554
131036 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,131553:JM,131045:CL,152272
131041 :: CALL :: call :: I :: v106 = v102.getLength()::JM,131041:JM,131552
131045 :: CALL :: call :: I :: v108 = v104.getLength()::JM,131553:JM,131045
131049 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,131554:CL,152297
131063 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,131079:CL,152337
131067 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,131087:CL,152373
131071 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,131090:CL,152420
131075 :: CALL :: call :: I :: v123 = v113.getLength()::JM,131075:JM,131079
131079 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,131085:JM,131080:JM,131084
131080 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,131080:JM,131084
131086 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,131113:DD,131196:DD,131380:JM,131421:CF,131087
131087 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,131089:CF,131088
131084 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,131086:CF,131085
131085 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,131086
131090 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,131092:CF,131091
131091 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,131092
131088 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,131089
131089 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,131131:DD,131198:CF,131090
131092 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,131149:DD,131200
131113 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,131113
131121 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
131131 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,131131
131139 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
131149 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,131149
131157 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
131173 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
131178 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,131178
131183 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
131188 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
131198 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,131199
131199 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,131200:CD,131201
131196 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,131197
131197 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,131198:CD,131199
131200 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,131201
131201 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,131206:CD,131211:CD,131358
131206 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,131211
131211 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,131216:CD,131221:CD,131280:CD,131285:CD,131286
131216 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,131221
131221 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,108791:JM,108798:CD,131242:CD,131246:CD,131251:CD,131259:CD,131269:CD,131280:CD,131285:CD,131286
131242 :: CALL :: call :: V :: v196.addChain(v52)::CL,124003
131246 :: CALL :: call :: V :: v196.addChain(v55)::CL,124003
131251 :: CALL :: call :: V :: v196.setMolId(v290)::CL,124065
131259 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
131269 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
131280 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,131285
131286 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,131307:CD,131313:CD,131321:CD,131344:CD,131352
131285 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,131286
131307 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
131313 :: CALL :: call :: V :: v226.addChain(v52)::CL,124003
131321 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
131344 :: CALL :: call :: V :: v214.addChain(v55)::CL,124003
131352 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
131358 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,152491
131380 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,131381
131381 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,131401:CD,131405:CD,131413:CD,131421:CD,131436:CD,131441:CD,131446:CD,131451:JM,131467
131401 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,131401
131405 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
131413 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
131421 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,131421
131436 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
131441 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,131441
131446 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
131451 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
131459 :: CALL :: call :: I :: v284 = v30.size()::JM,131467
131463 :: CALL :: call :: I :: v286 = v3.size()::JM,131467
131467 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,131469:CD,131473
131469 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,131473:JM,130894
131474 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,130880:JM,131478
131473 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,130890:CD,130894:CD,130895:CD,130899:CD,131474:CD,131478:JM,131473
131478 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,130876:CD,130880:CD,130881:CD,130885:CD,131469:CD,131473:JM,131478
131479 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,131549
131484 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,131549
131496 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,151695
131505 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,131510
131510 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,108791:JM,108798:CD,131526:CD,131531:CD,131539
131526 :: CALL :: call :: V :: v316.addChain(v304)::CL,124003
131531 :: CALL :: call :: V :: v316.setMolId(v325)::CL,124065
131539 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
131545 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,131549
131551 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,130854:DD,130866
131549 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,131484:CD,131496:CD,131505:CD,131510:CD,131545:JM,131549
131554 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,131075:JM,131079:JM,131080:JM,131084:JM,131178:JM,131401:JM,131441
131552 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,131553:DD,131088
131553 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,131554:DD,131091
131852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,131853:CD,131856:CD,131860:CD,131864:CD,131897:CD,131901:CD,131902:JM,131873
131853 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,116434
131856 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,131890:JM,131883:DD,131902
131860 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,131873:JM,131901
131864 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,131873:JM,131901
131869 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,131873:JM,131901
131874 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,131890:JM,131883
131873 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,131884:JM,131890:JM,131883
131879 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,131890:JM,131883
131883 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,131884
131886 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,131890:JM,131883
131884 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,131886:CD,131890:CD,131903:JM,131883
131890 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,131903:CD,131879:CD,131883:CD,131884:JM,131890
131891 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,131892:JM,131873:JM,131901
131892 :: CALL :: call :: Z :: v25 = v3.add(v14)::
131897 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,131873:JM,131901
131902 :: NORM :: compound :: Ljava/util/List :: return v3::DD,131853
131903 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,131891
131901 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,131869:CD,131873:CD,131874:CD,131886:CD,131890:CD,131891:CD,131897:CD,131903:JM,131901:CF,131902
131929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,131934:CD,131969:CD,131973:CD,131977:CD,131978:CD,131982:CD,132054:JM,131987
131934 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,131982:JM,132052
131942 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,151695
131947 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,131951:CL,151712
131951 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,131955:CD,131960:CF,131965
131955 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,151695
131960 :: CALL :: call :: Z :: v21 = v4.add(v19)::
131965 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,132054
131969 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,131977:CL,52383
131973 :: CALL :: call :: I :: v11 = v9.size()::JM,131977
131978 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,131982
131977 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,131942:CD,131947:CD,131951:CD,131965:CD,131969:CD,131973:CD,132054:JM,131982
131982 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,131983:CD,131987:CD,132003:CD,132004:CD,132048:CD,132052:CD,132055
131983 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,131987
131987 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,131993:CF,132003
131993 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
132003 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,132055:JM,132052
132004 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,132052
132009 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,132052
132014 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,131987
132018 :: CALL :: call :: V :: v44.addChain(v43)::CL,124003
132022 :: CALL :: call :: V :: v44.setMolId(v58)::CL,124065
132032 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
132042 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,132055:JM,131987
132043 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,131987
132048 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,132052
132054 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,131965:DD,131977
132055 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,132052:DD,132042
132052 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,132009:CD,132014:JM,108791:JM,108798:CD,132018:CD,132022:CD,132032:CD,132042:CD,132043:CD,132048:CD,132055:JM,132052
132113 :: CALL :: call :: [[D :: v6 = p1 $Arg .getArrayCopy()::CL,152762
132117 :: CALL :: call :: I :: v8 = p1 $Arg .getRowDimension()::JM,132121:CL,103453
132121 :: EXPR :: modify :: I :: p0 $this .m = v8::
132124 :: CALL :: call :: I :: v10 = p1 $Arg .getColumnDimension()::JM,132128:CL,103444
132131 :: EXPR :: reference :: I :: v11 = p0 $this .m::JM,132161:JM,132785:JM,133076:JM,132137:JM,132877
132128 :: EXPR :: modify :: I :: p0 $this .n = v10::
132134 :: EXPR :: reference :: I :: v12 = p0 $this .n::JM,132161:JM,132785:JM,133076:JM,132137:JM,132877
132137 :: CALL :: call :: I :: v14 = min(v11, v12)::JM,132161:JM,132785:JM,133076:JM,132137:JM,132877
132142 :: EXPR :: reference :: I :: v15 = p0 $this .m::DD,132145
132146 :: EXPR :: reference :: I :: v18 = p0 $this .n::JM,132149:JM,132154
132145 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 + #(1)::JM,132149:JM,132154
132149 :: CALL :: call :: I :: v20 = min(v17, v18)::JM,132149:JM,132154
132154 :: NORM :: declaration :: [D :: v21 = new []::DD,132155
132155 :: EXPR :: modify :: [D :: p0 $this .s = v21::
132158 :: EXPR :: reference :: I :: v22 = p0 $this .m::DD,132161
132162 :: EXPR :: modify :: [[D :: p0 $this .U = v23::
132161 :: NORM :: declaration :: [[D :: v23 = new [][]::DD,132162
132165 :: EXPR :: reference :: I :: v24 = p0 $this .n::DD,132171
132171 :: NORM :: declaration :: [[D :: v26 = new [][]::DD,132172
132168 :: EXPR :: reference :: I :: v25 = p0 $this .n::DD,132171
132175 :: EXPR :: reference :: I :: v27 = p0 $this .n::DD,132178
132172 :: EXPR :: modify :: [[D :: p0 $this .V = v26::
132178 :: NORM :: declaration :: [D :: v28 = new []::
132179 :: EXPR :: reference :: I :: v29 = p0 $this .m::DD,132182
132182 :: NORM :: declaration :: [D :: v30 = new []::
132183 :: EXPR :: reference :: I :: v31 = p0 $this .m::DD,132186
132186 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v31 - #(1)::JM,132706:JM,132786:JM,134258:JM,132690:JM,132213:JM,132437:JM,132344:JM,132190:JM,132685
132187 :: EXPR :: reference :: I :: v33 = p0 $this .n::JM,132706:JM,132786:JM,134258:JM,132690:JM,132213:JM,132437:JM,132344:JM,132190:JM,132685
132190 :: CALL :: call :: I :: v35 = min(v32, v33)::JM,132706:JM,132786:JM,134258:JM,132690:JM,132213:JM,132437:JM,132344:JM,132190:JM,132685
132195 :: EXPR :: reference :: I :: v37 = p0 $this .n::DD,132198
132198 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v37 - #(2)::JM,132466:JM,132690:JM,132982:JM,132202:JM,132734:JM,132207:JM,132685
132199 :: EXPR :: reference :: I :: v40 = p0 $this .m::JM,132466:JM,132690:JM,132982:JM,132202:JM,132734:JM,132207:JM,132685
132202 :: CALL :: call :: I :: v42 = min(v39, v40)::JM,132466:JM,132690:JM,132982:JM,132202:JM,132734:JM,132207:JM,132685
132207 :: CALL :: call :: I :: v44 = max(#(0), v42)::JM,132466:JM,132690:JM,132982:JM,132734:JM,132207:JM,132685
132214 :: EXPR :: reference :: [D :: v47 = p0 $this .s::
132213 :: PRED :: IF :: Z :: if (v217 >= v35) goto 309::CF,134214:CD,132253:CD,132261:CD,132262:CD,132337:CD,134209:CD,134210:CD,134213
132217 :: EXPR :: modify :: D :: v47[v217] = #(0.0 d)::
132222 :: EXPR :: reference :: [D :: v50 = p0 $this .s::
132240 :: CALL :: call :: D :: v56 = hypot(v52, v54)::JM,132245:CL,152830
132245 :: EXPR :: modify :: D :: v50[v218] = v56::
132250 :: EXPR :: reference :: I :: v49 = p0 $this .m::DD,132253
132249 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,134210:CF,134209
132254 :: EXPR :: reference :: [D :: v59 = p0 $this .s::
132253 :: PRED :: IF :: Z :: if (v58 < v49) goto 170::CD,132240:CD,132249:CD,134209:CD,134210
132257 :: EXPR :: reference :: D :: v60 = v59[v218]::DD,132261
132262 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 292::CF,134213:CD,132271:CD,132272:CD,132313:CD,132322:CD,134211:CD,134212
132263 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v6[v218]::
132261 :: EXPR :: assign :: Z :: v61 = v60 < #(0.0 d)::DD,132262
132267 :: EXPR :: reference :: D :: v63 = v62[v218]::DD,132271
132271 :: EXPR :: assign :: Z :: v64 = v63 > #(0.0 d)::DD,132272
132272 :: PRED :: IF :: Z :: if (v64 >= #(0)) goto 248::CD,132283
132273 :: EXPR :: reference :: [D :: v65 = p0 $this .s::
132279 :: EXPR :: reference :: D :: v67 = v66[v218]::DD,132283
132276 :: EXPR :: reference :: [D :: v66 = p0 $this .s::
132283 :: EXPR :: assign :: Ljava/lang/Object :: v68 = -(v67)::DD,132284
132284 :: EXPR :: modify :: D :: v65[v218] = v68::
132289 :: EXPR :: reference :: Ljava/lang/Object :: v70 = v6[v76]::
132293 :: EXPR :: reference :: D :: v71 = v70[v219]::DD,132304
132297 :: EXPR :: reference :: [D :: v72 = p0 $this .s::
132300 :: EXPR :: reference :: D :: v73 = v72[v219]::DD,132304
132304 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v71 / v73::DD,132305
132305 :: EXPR :: modify :: D :: v70[v219] = v74::
132310 :: EXPR :: reference :: I :: v69 = p0 $this .m::DD,132313
132309 :: EXPR :: assign :: Ljava/lang/Object :: v75 = v76 + #(1)::DD,134212:CF,134211
132314 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v6[v219]::
132313 :: PRED :: IF :: Z :: if (v76 < v69) goto 254::CD,132304:CD,132309:CD,134211:CD,134212
132318 :: EXPR :: reference :: D :: v78 = v77[v219]::DD,132322
132322 :: EXPR :: assign :: Ljava/lang/Object :: v80 = v78 + #(1.0 d)::DD,132323
132323 :: EXPR :: modify :: D :: v77[v219] = v80::
132327 :: EXPR :: reference :: [D :: v82 = p0 $this .s::
132330 :: EXPR :: reference :: [D :: v83 = p0 $this .s::
132333 :: EXPR :: reference :: D :: v84 = v83[v220]::DD,132337
132338 :: EXPR :: modify :: D :: v82[v220] = v85::
132337 :: EXPR :: assign :: Ljava/lang/Object :: v85 = -(v84)::DD,132338
132342 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v221 + #(1)::DD,134227
132346 :: EXPR :: reference :: [D :: v89 = p0 $this .s::
132344 :: PRED :: IF :: Z :: if (v222 >= v35) goto 328::CD,134215
132349 :: EXPR :: reference :: D :: v90 = v89[v222]::DD,132353
132354 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 344::CD,134216
132353 :: EXPR :: assign :: Z :: v91 = v90 < #(0.0 d)::DD,132354
132359 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v6[v103]::
132356 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v88 && v92::DD,132357
132357 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 449::CF,134224:CD,132381:CD,132382:CD,132391:CD,132419:CD,134217:CD,134218:CD,134219:CD,134220:CD,134221:CD,134222:CD,134223:CD,134225
132363 :: EXPR :: reference :: D :: v96 = v95[v223]::DD,132375
132367 :: EXPR :: reference :: Ljava/lang/Object :: v97 = v6[v103]::
132371 :: EXPR :: reference :: D :: v98 = v97[v121]::DD,132375
132375 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v96 * v98::CF,132376
132378 :: EXPR :: reference :: I :: v94 = p0 $this .m::DD,132381
132376 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v102 + v99::DD,134219:CF,132377
132377 :: EXPR :: assign :: Ljava/lang/Object :: v101 = v103 + #(1)::DD,134220:CF,134217
132382 :: EXPR :: assign :: Ljava/lang/Object :: v104 = -(v102)::DD,132391
132383 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v6[v223]::
132381 :: PRED :: IF :: Z :: if (v103 < v94) goto 363::CD,132375:CD,132376:CD,132377:CD,134217:CD,134218:CD,134219:CD,134220:CF,132382
132387 :: EXPR :: reference :: D :: v106 = v105[v223]::DD,132391
132391 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v104 / v106::DD,132409
132393 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v6[v116]::
132397 :: EXPR :: reference :: D :: v110 = v109[v122]::DD,132410
132401 :: EXPR :: reference :: Ljava/lang/Object :: v111 = v6[v116]::
132405 :: EXPR :: reference :: D :: v112 = v111[v224]::DD,132409
132410 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v110 + v113::DD,132411
132411 :: EXPR :: modify :: D :: v109[v122] = v114::
132409 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v107 * v112::CF,132410
132415 :: EXPR :: assign :: Ljava/lang/Object :: v115 = v116 + #(1)::DD,134223:CF,134221
132419 :: PRED :: IF :: Z :: if (v116 < v108) goto 413::CF,134224:CD,132409:CD,132410:CD,132415:CD,134221:CD,134222:CD,134223
132416 :: EXPR :: reference :: I :: v108 = p0 $this .m::DD,132419
132420 :: EXPR :: reference :: Ljava/lang/Object :: v117 = v6[v225]::
132424 :: EXPR :: reference :: D :: v118 = v117[v123]::DD,132428
132428 :: EXPR :: modify :: D :: v28[v123] = v118::
132432 :: EXPR :: assign :: Ljava/lang/Object :: v119 = v123 + #(1)::DD,134227:CF,134226
132433 :: EXPR :: reference :: I :: v87 = p0 $this .n::DD,132436
132439 :: EXPR :: assign :: Ljava/lang/Object :: v125 = #(1) && v124::DD,132440
132436 :: PRED :: IF :: Z :: if (v120 < v87) goto 319::CD,132344:CD,132353:CD,132354:CD,132356:CD,132357:CD,132432:CD,134215:CD,134216:CD,134224:CD,134225:CD,134226:CD,134227:CF,132437
132437 :: PRED :: IF :: Z :: if (v222 >= v35) goto 480::CD,134228
132442 :: EXPR :: reference :: [[D :: v127 = p0 $this .U::
132440 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 524::CF,134231:CD,132465:CD,134229:CD,134230
132445 :: EXPR :: reference :: Ljava/lang/Object :: v128 = v127[v132]::
132449 :: EXPR :: reference :: Ljava/lang/Object :: v129 = v6[v132]::
132453 :: EXPR :: reference :: D :: v130 = v129[v226]::DD,132457
132457 :: EXPR :: modify :: D :: v128[v226] = v130::
132462 :: EXPR :: reference :: I :: v126 = p0 $this .m::DD,132465
132461 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v132 + #(1)::DD,134230:CF,134229
132466 :: PRED :: IF :: Z :: if (v227 >= v44) goto 903::CF,134254:CD,132471:CD,132494:CD,132499:CD,132500:CD,132551:CD,132556:CD,132560:CD,132566:CD,132567:CD,132569:CD,132570:CD,132661:CD,134232:CD,134233:CD,134236:CD,134237:CD,134238:CD,134251
132467 :: EXPR :: modify :: D :: v28[v227] = #(0.0 d)::
132465 :: PRED :: IF :: Z :: if (v132 < v126) goto 492::CF,134231:CD,132461:CD,134229:CD,134230
132471 :: EXPR :: assign :: Ljava/lang/Object :: v134 = v227 + #(1)::DD,134233
132481 :: CALL :: call :: D :: v139 = hypot(v136, v137)::JM,132486:CL,152830
132486 :: EXPR :: modify :: D :: v28[v228] = v139::
132490 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v141 + #(1)::DD,134233:CF,134232
132491 :: EXPR :: reference :: I :: v135 = p0 $this .n::DD,132494
132494 :: PRED :: IF :: Z :: if (v141 < v135) goto 550::CD,132481:CD,132490:CD,134232:CD,134233
132495 :: EXPR :: reference :: D :: v142 = v28[v228]::DD,132499
132499 :: EXPR :: assign :: Z :: v143 = v142 < #(0.0 d)::DD,132500
132502 :: EXPR :: reference :: D :: v145 = v28[v144]::DD,132506
132500 :: PRED :: IF :: Z :: if (v143 == #(0)) goto 658::CF,134236:CD,132501:CD,132506:CD,132507:CD,132517:CD,132536:CD,132537:CD,132542:CD,134234:CD,134235
132501 :: EXPR :: assign :: Ljava/lang/Object :: v144 = v228 + #(1)::
132506 :: EXPR :: assign :: Z :: v146 = v145 > #(0.0 d)::DD,132507
132507 :: PRED :: IF :: Z :: if (v146 >= #(0)) goto 608::CD,132512:CF,132517
132508 :: EXPR :: reference :: D :: v147 = v28[v228]::DD,132512
132512 :: EXPR :: assign :: Ljava/lang/Object :: v148 = -(v147)::DD,132513
132513 :: EXPR :: modify :: D :: v28[v228] = v148::
132519 :: EXPR :: reference :: D :: v151 = v28[v155]::DD,132527
132517 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v228 + #(1)::DD,134235
132523 :: EXPR :: reference :: D :: v152 = v28[v229]::DD,132527
132527 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v151 / v152::DD,132528
132528 :: EXPR :: modify :: D :: v28[v155] = v153::
132532 :: EXPR :: assign :: Ljava/lang/Object :: v154 = v155 + #(1)::DD,134235:CF,134234
132533 :: EXPR :: reference :: I :: v150 = p0 $this .n::DD,132536
132538 :: EXPR :: reference :: D :: v157 = v28[v156]::DD,132542
132536 :: PRED :: IF :: Z :: if (v155 < v150) goto 619::CD,132527:CD,132532:CD,134234:CD,134235:CF,132537
132537 :: EXPR :: assign :: Ljava/lang/Object :: v156 = v229 + #(1)::
132542 :: EXPR :: assign :: Ljava/lang/Object :: v158 = v157 + #(1.0 d)::DD,132543
132543 :: EXPR :: modify :: D :: v28[v156] = v158::
132547 :: EXPR :: reference :: D :: v160 = v28[v230]::DD,132551
132551 :: EXPR :: assign :: Ljava/lang/Object :: v161 = -(v160)::DD,132552
132552 :: EXPR :: modify :: D :: v28[v230] = v161::
132556 :: EXPR :: assign :: Ljava/lang/Object :: v162 = v230 + #(1)::DD,132560
132557 :: EXPR :: reference :: I :: v163 = p0 $this .m::DD,132560
132562 :: EXPR :: reference :: D :: v165 = v28[v230]::DD,132566
132560 :: PRED :: IF :: Z :: if (v162 >= v163) goto 681::CD,134237
132566 :: EXPR :: assign :: Z :: v166 = v165 < #(0.0 d)::DD,132567
132567 :: PRED :: IF :: Z :: if (v166 == #(0)) goto 692::CD,134238
132570 :: PRED :: IF :: Z :: if (v168 == #(0)) goto 864::CF,134251:CD,132571:CD,132581:CD,132582:CD,132617:CD,132618:CD,132660:CD,134239:CD,134240:CD,134244:CD,134245:CD,134249:CD,134250
132571 :: EXPR :: assign :: Ljava/lang/Object :: v169 = v230 + #(1)::DD,134240
132569 :: EXPR :: assign :: Ljava/lang/Object :: v168 = v164 && v167::DD,132570
132573 :: EXPR :: modify :: D :: v30[v172] = #(0.0 d)::
132578 :: EXPR :: reference :: I :: v170 = p0 $this .m::DD,132581
132577 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v172 + #(1)::DD,134240:CF,134239
132582 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v231 + #(1)::DD,134245
132581 :: PRED :: IF :: Z :: if (v172 < v170) goto 710::CD,132577:CD,134239:CD,134240:CF,132582
132586 :: EXPR :: reference :: D :: v177 = v30[v184]::DD,132603
132584 :: EXPR :: assign :: Ljava/lang/Object :: v175 = v232 + #(1)::DD,134243
132590 :: EXPR :: reference :: D :: v178 = v28[v187]::DD,132602
132594 :: EXPR :: reference :: Ljava/lang/Object :: v179 = v6[v184]::
132598 :: EXPR :: reference :: D :: v180 = v179[v187]::DD,132602
132602 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v178 * v180::CF,132603
132603 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v177 + v181::DD,132604
132604 :: EXPR :: modify :: D :: v30[v184] = v182::
132608 :: EXPR :: assign :: Ljava/lang/Object :: v183 = v184 + #(1)::DD,134243:CF,134241
132609 :: EXPR :: reference :: I :: v176 = p0 $this .m::DD,132612
132614 :: EXPR :: reference :: I :: v174 = p0 $this .n::DD,132617
132612 :: PRED :: IF :: Z :: if (v184 < v176) goto 746::CD,132602:CD,132603:CD,132608:CD,134241:CD,134242:CD,134243:CF,132613
132613 :: EXPR :: assign :: Ljava/lang/Object :: v185 = v187 + #(1)::DD,134245:CF,134244
132618 :: EXPR :: assign :: Ljava/lang/Object :: v188 = v232 + #(1)::DD,134250
132617 :: PRED :: IF :: Z :: if (v186 < v174) goto 735::CD,132584:CD,132612:CD,132613:CD,134241:CD,134242:CD,134243:CD,134244:CD,134245:CF,132618
132620 :: EXPR :: reference :: D :: v190 = v28[v205]::DD,132624
132626 :: EXPR :: reference :: D :: v193 = v28[v192]::DD,132630
132624 :: EXPR :: assign :: Ljava/lang/Object :: v191 = -(v190)::DD,132630:CF,132625
132625 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v234 + #(1)::
132630 :: EXPR :: assign :: Ljava/lang/Object :: v194 = v191 / v193::DD,132645:CF,132631
132631 :: EXPR :: assign :: Ljava/lang/Object :: v195 = v234 + #(1)::DD,134248
132633 :: EXPR :: reference :: Ljava/lang/Object :: v197 = v6[v203]::
132637 :: EXPR :: reference :: D :: v198 = v197[v206]::DD,132646
132641 :: EXPR :: reference :: D :: v199 = v30[v203]::DD,132645
132646 :: EXPR :: assign :: Ljava/lang/Object :: v201 = v198 + v200::DD,132647
132647 :: EXPR :: modify :: D :: v197[v206] = v201::
132645 :: EXPR :: assign :: Ljava/lang/Object :: v200 = v194 * v199::CF,132646
132651 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v203 + #(1)::DD,134248:CF,134246
132655 :: PRED :: IF :: Z :: if (v203 < v196) goto 823::CD,132645:CD,132646:CD,132651:CD,134246:CD,134247:CD,134248:CF,132656
132652 :: EXPR :: reference :: I :: v196 = p0 $this .m::DD,132655
132656 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v206 + #(1)::DD,134250:CF,134249
132657 :: EXPR :: reference :: I :: v189 = p0 $this .n::DD,132660
132662 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v236 + #(1)::DD,134253
132660 :: PRED :: IF :: Z :: if (v205 < v189) goto 799::CF,134251:CD,132624:CD,132625:CD,132630:CD,132631:CD,132655:CD,132656:CD,134246:CD,134247:CD,134248:CD,134249:CD,134250
132661 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 903::CF,134254:CD,132662:CD,132683:CD,134252:CD,134253
132667 :: EXPR :: reference :: Ljava/lang/Object :: v211 = v210[v214]::
132664 :: EXPR :: reference :: [[D :: v210 = p0 $this .V::
132671 :: EXPR :: reference :: D :: v212 = v28[v214]::DD,132675
132675 :: EXPR :: modify :: D :: v211[v237] = v212::
132679 :: EXPR :: assign :: Ljava/lang/Object :: v213 = v214 + #(1)::DD,134253:CF,134252
132683 :: PRED :: IF :: Z :: if (v214 < v209) goto 877::CF,134254:CD,132679:CD,134252:CD,134253
132680 :: EXPR :: reference :: I :: v209 = p0 $this .n::DD,132683
132684 :: EXPR :: assign :: Ljava/lang/Object :: v216 = v238 + #(1)::DD,134255
132685 :: CALL :: call :: I :: v46 = max(v35, v44)::JM,132706:JM,132786:JM,134258:JM,132690:JM,132685:JM,132982:JM,132734
132690 :: PRED :: IF :: Z :: if (v217 < v46) goto 151::CD,132213:CD,132342:CD,132436:CD,132437:CD,132439:CD,132440:CD,132466:CD,132684:CD,132685:CD,134214:CD,134226:CD,134227:CD,134228:CD,134231:CD,134254:CD,134255
132691 :: EXPR :: reference :: I :: v239 = p0 $this .n::JM,133107:JM,132740:JM,132725:JM,132698:JM,132729:JM,132735:JM,134364:JM,132749
132694 :: EXPR :: reference :: I :: v240 = p0 $this .m::DD,132697
132698 :: CALL :: call :: I :: v243 = min(v239, v241)::JM,133107:JM,132740:JM,132725:JM,132698:JM,132729:JM,132735:JM,134364:JM,132749
132697 :: EXPR :: assign :: Ljava/lang/Object :: v241 = v240 + #(1)::JM,133107:JM,132740:JM,132725:JM,132698:JM,132729:JM,132735:JM,134364:JM,132749
132703 :: EXPR :: reference :: I :: v244 = p0 $this .n::DD,132706
132706 :: PRED :: IF :: Z :: if (v35 >= v244) goto 957::
132707 :: EXPR :: reference :: [D :: v245 = p0 $this .s::
132710 :: EXPR :: reference :: Ljava/lang/Object :: v246 = v6[v35]::
132714 :: EXPR :: reference :: D :: v247 = v246[v35]::DD,132718
132718 :: EXPR :: modify :: D :: v245[v35] = v247::
132722 :: EXPR :: reference :: I :: v248 = p0 $this .m::DD,132725
132726 :: EXPR :: reference :: [D :: v249 = p0 $this .s::
132725 :: PRED :: IF :: Z :: if (v248 >= v243) goto 978::CD,132729:CF,132734
132730 :: EXPR :: modify :: D :: v249[v250] = #(0.0 d)::
132729 :: EXPR :: assign :: Ljava/lang/Object :: v250 = v243 - #(1)::
132734 :: EXPR :: assign :: Ljava/lang/Object :: v251 = v44 + #(1)::DD,132735
132735 :: PRED :: IF :: Z :: if (v251 >= v243) goto 1003::CD,132740:CF,132749
132736 :: EXPR :: reference :: Ljava/lang/Object :: v252 = v6[v44]::
132740 :: EXPR :: assign :: Ljava/lang/Object :: v253 = v243 - #(1)::
132741 :: EXPR :: reference :: D :: v254 = v252[v253]::DD,132745
132745 :: EXPR :: modify :: D :: v28[v44] = v254::
132750 :: EXPR :: modify :: D :: v28[v255] = #(0.0 d)::
132749 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v243 - #(1)::
132754 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 1359::CD,132785:CD,132786:CD,132975:CD,134258:CD,134275:CF,132976
132757 :: EXPR :: reference :: [[D :: v257 = p0 $this .U::
132760 :: EXPR :: reference :: Ljava/lang/Object :: v258 = v257[v260]::
132764 :: EXPR :: modify :: D :: v258[v265] = #(0.0 d)::
132768 :: EXPR :: assign :: Ljava/lang/Object :: v259 = v260 + #(1)::DD,134257:CF,134256
132769 :: EXPR :: reference :: I :: v256 = p0 $this .m::DD,132772
132772 :: PRED :: IF :: Z :: if (v260 < v256) goto 1025::CD,132768:CD,134256:CD,134257
132773 :: EXPR :: reference :: [[D :: v261 = p0 $this .U::
132776 :: EXPR :: reference :: Ljava/lang/Object :: v262 = v261[v265]::
132780 :: EXPR :: modify :: D :: v262[v265] = #(1.0 d)::
132786 :: EXPR :: assign :: Ljava/lang/Object :: v266 = v35 - #(1)::DD,134275
132784 :: EXPR :: assign :: Ljava/lang/Object :: v263 = v265 + #(1)::DD,134258
132785 :: PRED :: IF :: Z :: if (v264 < v14) goto 1021::CD,132772:CD,132784:CD,134256:CD,134257:CD,134258:CF,132786
132791 :: EXPR :: reference :: D :: v268 = v267[v333]::DD,132795
132788 :: EXPR :: reference :: [D :: v267 = p0 $this .s::
132795 :: EXPR :: assign :: Z :: v269 = v268 < #(0.0 d)::DD,132796
132796 :: PRED :: IF :: Z :: if (v269 == #(0)) goto 1312::CD,132797:CD,132877:CD,132906:CD,132925:CD,132943:CD,132944:CD,132962:CD,134266:CD,134267:CD,134268:CD,134269:CD,134270:CD,134271:CD,134272:CD,134273:CD,134274
132797 :: EXPR :: assign :: Ljava/lang/Object :: v270 = v333 + #(1)::DD,134267
132803 :: EXPR :: reference :: Ljava/lang/Object :: v273 = v272[v282]::
132800 :: EXPR :: reference :: [[D :: v272 = p0 $this .U::
132807 :: EXPR :: reference :: D :: v274 = v273[v335]::DD,132822
132811 :: EXPR :: reference :: [[D :: v275 = p0 $this .U::
132814 :: EXPR :: reference :: Ljava/lang/Object :: v276 = v275[v282]::
132818 :: EXPR :: reference :: D :: v277 = v276[v301]::DD,132822
132822 :: EXPR :: assign :: Ljava/lang/Object :: v278 = v274 * v277::CF,132823
132823 :: EXPR :: assign :: Ljava/lang/Object :: v279 = v281 + v278::DD,134261:CF,132824
132824 :: EXPR :: assign :: Ljava/lang/Object :: v280 = v282 + #(1)::DD,134262:CF,134259
132825 :: EXPR :: reference :: I :: v271 = p0 $this .m::DD,132828
132830 :: EXPR :: reference :: [[D :: v284 = p0 $this .U::
132828 :: PRED :: IF :: Z :: if (v282 < v271) goto 1110::CD,132822:CD,132823:CD,132824:CD,134259:CD,134260:CD,134261:CD,134262:CF,132829
132829 :: EXPR :: assign :: Ljava/lang/Object :: v283 = -(v281)::DD,132841
132833 :: EXPR :: reference :: Ljava/lang/Object :: v285 = v284[v335]::
132837 :: EXPR :: reference :: D :: v286 = v285[v335]::DD,132841
132843 :: EXPR :: reference :: [[D :: v289 = p0 $this .U::
132841 :: EXPR :: assign :: Ljava/lang/Object :: v287 = v283 / v286::DD,132865
132846 :: EXPR :: reference :: Ljava/lang/Object :: v290 = v289[v298]::
132850 :: EXPR :: reference :: D :: v291 = v290[v302]::DD,132866
132854 :: EXPR :: reference :: [[D :: v292 = p0 $this .U::
132857 :: EXPR :: reference :: Ljava/lang/Object :: v293 = v292[v298]::
132861 :: EXPR :: reference :: D :: v294 = v293[v336]::DD,132865
132866 :: EXPR :: assign :: Ljava/lang/Object :: v296 = v291 + v295::DD,132867
132867 :: EXPR :: modify :: D :: v290[v302] = v296::
132865 :: EXPR :: assign :: Ljava/lang/Object :: v295 = v287 * v294::CF,132866
132871 :: EXPR :: assign :: Ljava/lang/Object :: v297 = v298 + #(1)::DD,134265:CF,134263
132875 :: PRED :: IF :: Z :: if (v298 < v288) goto 1169::CD,132865:CD,132866:CD,132871:CD,134263:CD,134264:CD,134265:CF,132876
132872 :: EXPR :: reference :: I :: v288 = p0 $this .m::DD,132875
132879 :: EXPR :: reference :: [[D :: v304 = p0 $this .U::
132876 :: EXPR :: assign :: Ljava/lang/Object :: v299 = v302 + #(1)::DD,134267:CF,134266
132877 :: PRED :: IF :: Z :: if (v300 < v14) goto 1104::CD,132828:CD,132829:CD,132841:CD,132875:CD,132876:CD,134259:CD,134260:CD,134261:CD,134262:CD,134263:CD,134264:CD,134265:CD,134266:CD,134267
132882 :: EXPR :: reference :: Ljava/lang/Object :: v305 = v304[v311]::
132886 :: EXPR :: reference :: [[D :: v306 = p0 $this .U::
132889 :: EXPR :: reference :: Ljava/lang/Object :: v307 = v306[v311]::
132893 :: EXPR :: reference :: D :: v308 = v307[v337]::DD,132897
132898 :: EXPR :: modify :: D :: v305[v337] = v309::
132897 :: EXPR :: assign :: Ljava/lang/Object :: v309 = -(v308)::DD,132898
132902 :: EXPR :: assign :: Ljava/lang/Object :: v310 = v311 + #(1)::DD,134269:CF,134268
132903 :: EXPR :: reference :: I :: v303 = p0 $this .m::DD,132906
132906 :: PRED :: IF :: Z :: if (v311 < v303) goto 1223::CD,132897:CD,132902:CD,134268:CD,134269
132907 :: EXPR :: reference :: [[D :: v312 = p0 $this .U::
132910 :: EXPR :: reference :: Ljava/lang/Object :: v313 = v312[v337]::
132914 :: EXPR :: reference :: [[D :: v314 = p0 $this .U::
132917 :: EXPR :: reference :: Ljava/lang/Object :: v315 = v314[v337]::
132921 :: EXPR :: reference :: D :: v316 = v315[v337]::DD,132925
132926 :: EXPR :: modify :: D :: v313[v337] = v317::
132925 :: EXPR :: assign :: Ljava/lang/Object :: v317 = #(1.0 d) + v316::DD,132926
132931 :: EXPR :: reference :: [[D :: v319 = p0 $this .U::
132934 :: EXPR :: reference :: Ljava/lang/Object :: v320 = v319[v322]::
132938 :: EXPR :: modify :: D :: v320[v338] = #(0.0 d)::
132942 :: EXPR :: assign :: Ljava/lang/Object :: v321 = v322 + #(1)::DD,134271:CF,134270
132943 :: EXPR :: assign :: Ljava/lang/Object :: v318 = v338 - #(1)::CF,132944
132947 :: EXPR :: reference :: [[D :: v324 = p0 $this .U::
132944 :: PRED :: IF :: Z :: if (v322 < v318) goto 1284::CD,132942:CD,132943:CD,134270:CD,134271
132950 :: EXPR :: reference :: Ljava/lang/Object :: v325 = v324[v327]::
132954 :: EXPR :: modify :: D :: v325[v339] = #(0.0 d)::
132958 :: EXPR :: assign :: Ljava/lang/Object :: v326 = v327 + #(1)::DD,134273:CF,134272
132959 :: EXPR :: reference :: I :: v323 = p0 $this .m::DD,132962
132962 :: PRED :: IF :: Z :: if (v327 < v323) goto 1316::CD,132958:CD,134272:CD,134273
132963 :: EXPR :: reference :: [[D :: v328 = p0 $this .U::
132966 :: EXPR :: reference :: Ljava/lang/Object :: v329 = v328[v339]::
132970 :: EXPR :: modify :: D :: v329[v339] = #(1.0 d)::
132974 :: EXPR :: assign :: Ljava/lang/Object :: v332 = v340 + #(-1)::DD,134275
132975 :: PRED :: IF :: Z :: if (v333 >= #(0)) goto 1077::CD,132795:CD,132796:CD,132974:CD,134274:CD,134275:CF,132976
132976 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 1588::CD,132980:CD,133106:CD,134290:CF,133107
132977 :: EXPR :: reference :: I :: v341 = p0 $this .n::DD,132980
132982 :: PRED :: IF :: Z :: if (v392 >= v44) goto 1389::CD,134276
132980 :: EXPR :: assign :: Ljava/lang/Object :: v342 = v341 - #(1)::DD,134290
132984 :: EXPR :: reference :: D :: v344 = v28[v392]::DD,132988
132991 :: EXPR :: assign :: Ljava/lang/Object :: v347 = v343 && v346::DD,132992
132988 :: EXPR :: assign :: Z :: v345 = v344 < #(0.0 d)::DD,132989
132989 :: PRED :: IF :: Z :: if (v345 == #(0)) goto 1400::CD,134277
132995 :: EXPR :: assign :: Ljava/lang/Object :: v349 = v393 + #(1)::DD,134281
132992 :: PRED :: IF :: Z :: if (v347 == #(0)) goto 1540::CF,134287:CD,132993:CD,133076:CD,134285:CD,134286
132993 :: EXPR :: assign :: Ljava/lang/Object :: v348 = v392 + #(1)::DD,134286
132997 :: EXPR :: reference :: [[D :: v351 = p0 $this .V::
133000 :: EXPR :: reference :: Ljava/lang/Object :: v352 = v351[v361]::
133004 :: EXPR :: reference :: D :: v353 = v352[v394]::DD,133019
133011 :: EXPR :: reference :: Ljava/lang/Object :: v355 = v354[v361]::
133008 :: EXPR :: reference :: [[D :: v354 = p0 $this .V::
133015 :: EXPR :: reference :: D :: v356 = v355[v382]::DD,133019
133019 :: EXPR :: assign :: Ljava/lang/Object :: v357 = v353 * v356::CF,133020
133022 :: EXPR :: reference :: I :: v350 = p0 $this .n::DD,133025
133020 :: EXPR :: assign :: Ljava/lang/Object :: v358 = v360 + v357::DD,134280:CF,133021
133021 :: EXPR :: assign :: Ljava/lang/Object :: v359 = v361 + #(1)::DD,134281:CF,134278
133026 :: EXPR :: assign :: Ljava/lang/Object :: v362 = -(v360)::DD,133039
133027 :: EXPR :: reference :: [[D :: v363 = p0 $this .V::
133025 :: PRED :: IF :: Z :: if (v361 < v350) goto 1428::CD,133019:CD,133020:CD,133021:CD,134278:CD,134279:CD,134280:CD,134281:CF,133026
133030 :: EXPR :: assign :: Ljava/lang/Object :: v364 = v394 + #(1)::
133031 :: EXPR :: reference :: Ljava/lang/Object :: v365 = v363[v364]::
133035 :: EXPR :: reference :: D :: v366 = v365[v394]::DD,133039
133039 :: EXPR :: assign :: Ljava/lang/Object :: v367 = v362 / v366::DD,133064:CF,133040
133042 :: EXPR :: reference :: [[D :: v370 = p0 $this .V::
133040 :: EXPR :: assign :: Ljava/lang/Object :: v368 = v394 + #(1)::DD,134284
133045 :: EXPR :: reference :: Ljava/lang/Object :: v371 = v370[v379]::
133049 :: EXPR :: reference :: D :: v372 = v371[v383]::DD,133065
133053 :: EXPR :: reference :: [[D :: v373 = p0 $this .V::
133056 :: EXPR :: reference :: Ljava/lang/Object :: v374 = v373[v379]::
133060 :: EXPR :: reference :: D :: v375 = v374[v395]::DD,133064
133066 :: EXPR :: modify :: D :: v371[v383] = v377::
133064 :: EXPR :: assign :: Ljava/lang/Object :: v376 = v367 * v375::CF,133065
133065 :: EXPR :: assign :: Ljava/lang/Object :: v377 = v372 + v376::DD,133066
133070 :: EXPR :: assign :: Ljava/lang/Object :: v378 = v379 + #(1)::DD,134284:CF,134282
133071 :: EXPR :: reference :: I :: v369 = p0 $this .n::DD,133074
133074 :: PRED :: IF :: Z :: if (v379 < v369) goto 1491::CD,133064:CD,133065:CD,133070:CD,134282:CD,134283:CD,134284:CF,133075
133075 :: EXPR :: assign :: Ljava/lang/Object :: v380 = v383 + #(1)::DD,134286:CF,134285
133078 :: EXPR :: reference :: [[D :: v385 = p0 $this .V::
133076 :: PRED :: IF :: Z :: if (v381 < v14) goto 1419::CF,134287:CD,132995:CD,133025:CD,133026:CD,133030:CD,133039:CD,133040:CD,133074:CD,133075:CD,134278:CD,134279:CD,134280:CD,134281:CD,134282:CD,134283:CD,134284:CD,134285:CD,134286
133081 :: EXPR :: reference :: Ljava/lang/Object :: v386 = v385[v388]::
133085 :: EXPR :: modify :: D :: v386[v397] = #(0.0 d)::
133090 :: EXPR :: reference :: I :: v384 = p0 $this .n::DD,133093
133089 :: EXPR :: assign :: Ljava/lang/Object :: v387 = v388 + #(1)::DD,134289:CF,134288
133094 :: EXPR :: reference :: [[D :: v389 = p0 $this .V::
133093 :: PRED :: IF :: Z :: if (v388 < v384) goto 1544::CD,133089:CD,134288:CD,134289
133097 :: EXPR :: reference :: Ljava/lang/Object :: v390 = v389[v397]::
133101 :: EXPR :: modify :: D :: v390[v397] = #(1.0 d)::
133106 :: PRED :: IF :: Z :: if (v392 >= #(0)) goto 1377::CD,132982:CD,132988:CD,132989:CD,132991:CD,132992:CD,133093:CD,133105:CD,134276:CD,134277:CD,134287:CD,134288:CD,134289:CD,134290:CF,133107
133107 :: EXPR :: assign :: Ljava/lang/Object :: v398 = v243 - #(1)::DD,134038:DD,134205:JM,133155:JM,133207:JM,133108
133105 :: EXPR :: assign :: Ljava/lang/Object :: v391 = v397 + #(-1)::DD,134290
133108 :: CALL :: call :: D :: v402 = pow(#(2.0 d), #(-52.0 d))::JM,133155:JM,133207:JM,133108
133113 :: CALL :: call :: D :: v405 = pow(#(2.0 d), #(-966.0 d))::JM,133156:JM,133208:JM,133113
133119 :: EXPR :: assign :: Ljava/lang/Object :: v406 = v863 - #(2)::DD,134293
133123 :: EXPR :: reference :: D :: v407 = v28[v424]::JM,133127:JM,133157
133121 :: PRED :: IF :: Z :: if (v424 != #(-1)) goto 1641::CD,133127:CD,133138:CD,133145:CD,133150:CD,133154:CD,133155:CD,133156:CD,133157:CD,133158
133127 :: CALL :: call :: D :: v409 = abs(v407)::JM,133127:JM,133157
133131 :: EXPR :: reference :: [D :: v410 = p0 $this .s::
133134 :: EXPR :: reference :: D :: v411 = v410[v424]::JM,133138:JM,133154
133138 :: CALL :: call :: D :: v413 = abs(v411)::JM,133138:JM,133154
133142 :: EXPR :: reference :: [D :: v414 = p0 $this .s::
133146 :: EXPR :: reference :: D :: v416 = v414[v415]::JM,133154:JM,133150
133145 :: EXPR :: assign :: Ljava/lang/Object :: v415 = v424 + #(1)::
133150 :: CALL :: call :: D :: v418 = abs(v416)::JM,133154:JM,133150
133154 :: EXPR :: assign :: Ljava/lang/Object :: v419 = v413 + v418::CF,133155
133155 :: EXPR :: assign :: Ljava/lang/Object :: v420 = v402 * v419::CF,133156
133158 :: PRED :: IF :: Z :: if (v422 > #(0)) goto 1687::CD,133164:CD,133165:CD,134291:CD,134293
133159 :: EXPR :: modify :: D :: v28[v424] = #(0.0 d)::
133156 :: EXPR :: assign :: Ljava/lang/Object :: v421 = v405 + v420::CF,133157
133157 :: EXPR :: assign :: Z :: v422 = v409 > v421::DD,133158
133166 :: EXPR :: assign :: Ljava/lang/Object :: v425 = v864 - #(2)::CF,133167
133167 :: PRED :: IF :: Z :: if (v424 != v425) goto 1714::CD,133169:CD,133220:CD,133221:CD,134296:CD,134298:CD,134299:CD,134301:CD,134302
133164 :: EXPR :: assign :: Ljava/lang/Object :: v423 = v424 + #(-1)::DD,134293:CF,134291
133165 :: PRED :: IF :: Z :: if (v424 >= #(-1)) goto 1631::CD,133121:CF,133166
133171 :: PRED :: IF :: Z :: if (v447 != v424) goto 1734::CD,133173:CD,133183:CD,133184:CD,133195:CD,133203:CD,133207:CD,133208:CD,133209:CD,133210:CD,134294:CD,134295
133169 :: EXPR :: assign :: Ljava/lang/Object :: v427 = v864 - #(1)::DD,134298
133174 :: EXPR :: reference :: D :: v428 = v28[v447]::JM,134294:JM,133178
133173 :: PRED :: IF :: Z :: if (v447 == v865) goto 1754::CD,133178:CD,134294
133178 :: CALL :: call :: D :: v430 = abs(v428)::JM,134294:JM,133178
133183 :: EXPR :: assign :: Ljava/lang/Object :: v432 = v424 + #(1)::CF,133184
133186 :: EXPR :: reference :: D :: v434 = v28[v433]::JM,133190:JM,134295
133184 :: PRED :: IF :: Z :: if (v447 == v432) goto 1772::CD,133185:CD,133190:CD,134295
133185 :: EXPR :: assign :: Ljava/lang/Object :: v433 = v447 - #(1)::
133190 :: CALL :: call :: D :: v436 = abs(v434)::JM,133190:JM,134295
133195 :: EXPR :: assign :: Ljava/lang/Object :: v438 = v431 + v437::DD,133207
133199 :: EXPR :: reference :: D :: v440 = v439[v447]::JM,133203:JM,133209
133196 :: EXPR :: reference :: [D :: v439 = p0 $this .s::
133203 :: CALL :: call :: D :: v442 = abs(v440)::JM,133203:JM,133209
133207 :: EXPR :: assign :: Ljava/lang/Object :: v443 = v402 * v438::CF,133208
133210 :: PRED :: IF :: Z :: if (v445 > #(0)) goto 1808::CD,133219:CD,133220:CD,134296:CD,134298
133211 :: EXPR :: reference :: [D :: v448 = p0 $this .s::
133208 :: EXPR :: assign :: Ljava/lang/Object :: v444 = v405 + v443::CF,133209
133209 :: EXPR :: assign :: Z :: v445 = v442 > v444::DD,133210
133214 :: EXPR :: modify :: D :: v448[v447] = #(0.0 d)::
133219 :: EXPR :: assign :: Ljava/lang/Object :: v446 = v447 + #(-1)::DD,134298:CF,134296
133223 :: EXPR :: assign :: Ljava/lang/Object :: v450 = v865 - #(1)::CF,133224
133220 :: PRED :: IF :: Z :: if (v447 >= v424) goto 1724::CD,133171:CF,133221
133221 :: PRED :: IF :: Z :: if (v447 != v424) goto 1836::CD,133223:CD,133224:CD,134299:CD,134301:CD,134302
133226 :: EXPR :: assign :: Ljava/lang/Object :: v453 = v451 + #(1)::DD,133268:DD,133371:DD,133373:DD,133378:DD,133448:DD,133462:DD,133483:DD,133663:DD,134325:DD,134348:DD,134363:CF,133227
133227 :: PRED :: IF :: null :: switch v452::CF,134364:CD,133228:CD,133233:CD,133238:CD,133371:CD,133373:CD,133378:CD,133511:CD,133516:CD,133521:CD,133528:CD,133533:CD,133537:CD,133542:CD,133547:CD,133551:CD,133563:CD,133567:CD,133576:CD,133580:CD,133588:CD,133593:CD,133597:CD,133602:CD,133603:CD,133608:CD,133616:CD,133621:CD,133622:CD,133623:CD,133624:CD,133625:CD,133626:CD,133627:CD,133628:CD,133629:CD,133630:CD,133631:CD,133632:CD,133634:CD,133635:CD,133637:CD,133638:CD,133650:CD,133651:CD,133652:CD,133653:CD,133654:CD,133969:CD,133970:CD,133971:CD,133985:CD,133986:CD,134205:CD,134206:CD,134311:CD,134313:CD,134314:CD,134322:CD,134324:CD,134325:CD,134326:CD,134327:CD,134329:CD,134344:CD,134346:CD,134347:CD,134348:CD,134362:CD,134363
133224 :: PRED :: IF :: Z :: if (v447 != v450) goto 1853::CD,134299:CD,134301:CD,134302
133228 :: EXPR :: assign :: Ljava/lang/Object :: v454 = v866 - #(2)::
133229 :: EXPR :: reference :: D :: v455 = v28[v454]::DD,134313
133234 :: EXPR :: modify :: D :: v28[v456] = #(0.0 d)::
133233 :: EXPR :: assign :: Ljava/lang/Object :: v456 = v866 - #(2)::
133238 :: EXPR :: assign :: Ljava/lang/Object :: v457 = v866 - #(2)::DD,134314
133247 :: CALL :: call :: D :: v461 = hypot(v459, v508)::JM,133264:JM,133259:JM,133260:CL,152830
133255 :: EXPR :: reference :: D :: v463 = v462[v509]::DD,133259
133252 :: EXPR :: reference :: [D :: v462 = p0 $this .s::
133259 :: EXPR :: assign :: Ljava/lang/Object :: v464 = v463 / v461::DD,133282:DD,133300:DD,133348:CF,133260
133260 :: EXPR :: assign :: Ljava/lang/Object :: v465 = v508 / v461::DD,133269:DD,133313:DD,133323
133261 :: EXPR :: reference :: [D :: v466 = p0 $this .s::
133264 :: EXPR :: modify :: D :: v466[v509] = v461::
133270 :: EXPR :: assign :: Ljava/lang/Object :: v468 = v509 - #(1)::
133271 :: EXPR :: reference :: D :: v469 = v28[v468]::DD,133275
133268 :: PRED :: IF :: Z :: if (v509 == v453) goto 1995::CF,134303:CD,133269:CD,133270:CD,133275:CD,133276:CD,133277:CD,133282
133269 :: EXPR :: assign :: Ljava/lang/Object :: v467 = -(v465)::DD,133275:CF,133270
133275 :: EXPR :: assign :: Ljava/lang/Object :: v470 = v467 * v469::DD,134303:CF,133276
133278 :: EXPR :: reference :: D :: v473 = v28[v472]::DD,133282
133276 :: EXPR :: assign :: Ljava/lang/Object :: v471 = v509 - #(1)::CF,133277
133277 :: EXPR :: assign :: Ljava/lang/Object :: v472 = v509 - #(1)::
133282 :: EXPR :: assign :: Ljava/lang/Object :: v474 = v464 * v473::DD,133283
133283 :: EXPR :: modify :: D :: v28[v471] = v474::
133287 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2101::CF,134308:CD,133369:CD,134304:CD,134306:CD,134307:CD,134310
133289 :: EXPR :: reference :: [[D :: v477 = p0 $this .V::
133292 :: EXPR :: reference :: Ljava/lang/Object :: v478 = v477[v505]::
133296 :: EXPR :: reference :: D :: v479 = v478[v510]::DD,133300
133300 :: EXPR :: assign :: Ljava/lang/Object :: v480 = v464 * v479::DD,133314
133301 :: EXPR :: reference :: [[D :: v481 = p0 $this .V::
133304 :: EXPR :: reference :: Ljava/lang/Object :: v482 = v481[v505]::
133308 :: EXPR :: assign :: Ljava/lang/Object :: v483 = v868 - #(1)::
133309 :: EXPR :: reference :: D :: v484 = v482[v483]::DD,133313
133314 :: EXPR :: assign :: Ljava/lang/Object :: v486 = v480 + v485::DD,133361
133315 :: EXPR :: reference :: [[D :: v487 = p0 $this .V::
133313 :: EXPR :: assign :: Ljava/lang/Object :: v485 = v465 * v484::CF,133314
133318 :: EXPR :: reference :: Ljava/lang/Object :: v488 = v487[v505]::
133322 :: EXPR :: assign :: Ljava/lang/Object :: v489 = v868 - #(1)::CF,133323
133323 :: EXPR :: assign :: Ljava/lang/Object :: v490 = -(v465)::DD,133335
133327 :: EXPR :: reference :: Ljava/lang/Object :: v492 = v491[v505]::
133324 :: EXPR :: reference :: [[D :: v491 = p0 $this .V::
133331 :: EXPR :: reference :: D :: v493 = v492[v510]::DD,133335
133335 :: EXPR :: assign :: Ljava/lang/Object :: v494 = v490 * v493::DD,133349
133339 :: EXPR :: reference :: Ljava/lang/Object :: v496 = v495[v505]::
133336 :: EXPR :: reference :: [[D :: v495 = p0 $this .V::
133343 :: EXPR :: assign :: Ljava/lang/Object :: v497 = v868 - #(1)::
133344 :: EXPR :: reference :: D :: v498 = v496[v497]::DD,133348
133350 :: EXPR :: modify :: D :: v488[v489] = v500::
133348 :: EXPR :: assign :: Ljava/lang/Object :: v499 = v464 * v498::CF,133349
133349 :: EXPR :: assign :: Ljava/lang/Object :: v500 = v494 + v499::DD,133350
133354 :: EXPR :: reference :: [[D :: v501 = p0 $this .V::
133357 :: EXPR :: reference :: Ljava/lang/Object :: v502 = v501[v505]::
133361 :: EXPR :: modify :: D :: v502[v510] = v486::
133366 :: EXPR :: reference :: I :: v476 = p0 $this .n::DD,133369
133365 :: EXPR :: assign :: Ljava/lang/Object :: v503 = v505 + #(1)::DD,134307:CF,134304
133370 :: EXPR :: assign :: Ljava/lang/Object :: v507 = v511 + #(-1)::DD,134314:CF,134311
133371 :: PRED :: IF :: Z :: if (v509 >= v453) goto 1915::CD,133247:CD,133259:CD,133260:CD,133268:CD,133287:CD,133370:CD,134303:CD,134308:CD,134310:CD,134311:CD,134313:CD,134314
133369 :: PRED :: IF :: Z :: if (v505 < v476) goto 2007::CF,134308:CD,133300:CD,133308:CD,133313:CD,133314:CD,133322:CD,133323:CD,133335:CD,133343:CD,133348:CD,133349:CD,133365:CD,134304:CD,134306:CD,134307
133374 :: EXPR :: reference :: D :: v513 = v28[v512]::DD,134324
133373 :: EXPR :: assign :: Ljava/lang/Object :: v512 = v453 - #(1)::
133378 :: EXPR :: assign :: Ljava/lang/Object :: v514 = v453 - #(1)::
133379 :: EXPR :: modify :: D :: v28[v514] = #(0.0 d)::
133391 :: CALL :: call :: D :: v518 = hypot(v516, v561)::JM,133408:JM,133403:JM,133404:CL,152830
133399 :: EXPR :: reference :: D :: v520 = v519[v562]::DD,133403
133396 :: EXPR :: reference :: [D :: v519 = p0 $this .s::
133403 :: EXPR :: assign :: Ljava/lang/Object :: v521 = v520 / v518::DD,133422:DD,133440:DD,133488:CF,133404
133404 :: EXPR :: assign :: Ljava/lang/Object :: v522 = v561 / v518::DD,133412:DD,133453:DD,133463
133405 :: EXPR :: reference :: [D :: v523 = p0 $this .s::
133408 :: EXPR :: modify :: D :: v523[v562] = v518::
133412 :: EXPR :: assign :: Ljava/lang/Object :: v524 = -(v522)::DD,133417
133413 :: EXPR :: reference :: D :: v525 = v28[v562]::DD,133417
133418 :: EXPR :: reference :: D :: v527 = v28[v562]::DD,133422
133417 :: EXPR :: assign :: Ljava/lang/Object :: v526 = v524 * v525::DD,134324
133422 :: EXPR :: assign :: Ljava/lang/Object :: v528 = v521 * v527::DD,133423
133423 :: EXPR :: modify :: D :: v28[v562] = v528::
133427 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2312::CF,134319:CD,133509:CD,134315:CD,134317:CD,134318:CD,134321
133429 :: EXPR :: reference :: [[D :: v530 = p0 $this .U::
133432 :: EXPR :: reference :: Ljava/lang/Object :: v531 = v530[v558]::
133436 :: EXPR :: reference :: D :: v532 = v531[v563]::DD,133440
133440 :: EXPR :: assign :: Ljava/lang/Object :: v533 = v521 * v532::DD,133454
133441 :: EXPR :: reference :: [[D :: v534 = p0 $this .U::
133444 :: EXPR :: reference :: Ljava/lang/Object :: v535 = v534[v558]::
133448 :: EXPR :: assign :: Ljava/lang/Object :: v536 = v453 - #(1)::
133449 :: EXPR :: reference :: D :: v537 = v535[v536]::DD,133453
133454 :: EXPR :: assign :: Ljava/lang/Object :: v539 = v533 + v538::DD,133501
133455 :: EXPR :: reference :: [[D :: v540 = p0 $this .U::
133453 :: EXPR :: assign :: Ljava/lang/Object :: v538 = v522 * v537::CF,133454
133458 :: EXPR :: reference :: Ljava/lang/Object :: v541 = v540[v558]::
133462 :: EXPR :: assign :: Ljava/lang/Object :: v542 = v453 - #(1)::CF,133463
133463 :: EXPR :: assign :: Ljava/lang/Object :: v543 = -(v522)::DD,133475
133467 :: EXPR :: reference :: Ljava/lang/Object :: v545 = v544[v558]::
133464 :: EXPR :: reference :: [[D :: v544 = p0 $this .U::
133471 :: EXPR :: reference :: D :: v546 = v545[v563]::DD,133475
133475 :: EXPR :: assign :: Ljava/lang/Object :: v547 = v543 * v546::DD,133489
133479 :: EXPR :: reference :: Ljava/lang/Object :: v549 = v548[v558]::
133476 :: EXPR :: reference :: [[D :: v548 = p0 $this .U::
133483 :: EXPR :: assign :: Ljava/lang/Object :: v550 = v453 - #(1)::
133484 :: EXPR :: reference :: D :: v551 = v549[v550]::DD,133488
133490 :: EXPR :: modify :: D :: v541[v542] = v553::
133488 :: EXPR :: assign :: Ljava/lang/Object :: v552 = v521 * v551::CF,133489
133489 :: EXPR :: assign :: Ljava/lang/Object :: v553 = v547 + v552::DD,133490
133494 :: EXPR :: reference :: [[D :: v554 = p0 $this .U::
133497 :: EXPR :: reference :: Ljava/lang/Object :: v555 = v554[v558]::
133501 :: EXPR :: modify :: D :: v555[v563] = v539::
133506 :: EXPR :: reference :: I :: v529 = p0 $this .m::DD,133509
133505 :: EXPR :: assign :: Ljava/lang/Object :: v556 = v558 + #(1)::DD,134318:CF,134315
133510 :: EXPR :: assign :: Ljava/lang/Object :: v560 = v564 + #(1)::DD,134325:CF,134322
133511 :: PRED :: IF :: Z :: if (v562 < v870) goto 2139::CD,133391:CD,133403:CD,133404:CD,133412:CD,133417:CD,133422:CD,133427:CD,133510:CD,134319:CD,134321:CD,134322:CD,134324:CD,134325
133509 :: PRED :: IF :: Z :: if (v558 < v529) goto 2218::CF,134319:CD,133440:CD,133448:CD,133453:CD,133454:CD,133462:CD,133463:CD,133475:CD,133483:CD,133488:CD,133489:CD,133505:CD,134315:CD,134317:CD,134318
133513 :: EXPR :: reference :: [D :: v565 = p0 $this .s::
133516 :: EXPR :: assign :: Ljava/lang/Object :: v566 = v866 - #(1)::
133517 :: EXPR :: reference :: D :: v567 = v565[v566]::JM,133602:JM,133616:JM,133521:JM,133537:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133521 :: CALL :: call :: D :: v569 = abs(v567)::JM,133602:JM,133616:JM,133521:JM,133537:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133525 :: EXPR :: reference :: [D :: v570 = p0 $this .s::
133528 :: EXPR :: assign :: Ljava/lang/Object :: v571 = v866 - #(2)::
133529 :: EXPR :: reference :: D :: v572 = v570[v571]::JM,133602:JM,133616:JM,133537:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580:JM,133533
133533 :: CALL :: call :: D :: v574 = abs(v572)::JM,133602:JM,133616:JM,133537:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580:JM,133533
133537 :: CALL :: call :: D :: v576 = max(v569, v574)::JM,133602:JM,133616:JM,133537:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133542 :: EXPR :: assign :: Ljava/lang/Object :: v577 = v866 - #(2)::
133543 :: EXPR :: reference :: D :: v578 = v28[v577]::JM,133602:JM,133616:JM,133621:JM,133547:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133547 :: CALL :: call :: D :: v580 = abs(v578)::JM,133602:JM,133616:JM,133621:JM,133547:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133551 :: CALL :: call :: D :: v582 = max(v576, v580)::JM,133602:JM,133616:JM,133621:JM,133608:JM,133593:JM,133551:JM,133567:JM,133580
133559 :: EXPR :: reference :: D :: v584 = v583[v453]::JM,133602:JM,133616:JM,133621:JM,133563:JM,133608:JM,133593:JM,133567:JM,133580
133556 :: EXPR :: reference :: [D :: v583 = p0 $this .s::
133563 :: CALL :: call :: D :: v586 = abs(v584)::JM,133602:JM,133616:JM,133621:JM,133563:JM,133608:JM,133593:JM,133567:JM,133580
133567 :: CALL :: call :: D :: v588 = max(v582, v586)::JM,133602:JM,133616:JM,133621:JM,133608:JM,133593:JM,133567:JM,133580
133572 :: EXPR :: reference :: D :: v589 = v28[v453]::JM,133602:JM,133616:JM,133621:JM,133576:JM,133608:JM,133593:JM,133580
133576 :: CALL :: call :: D :: v591 = abs(v589)::JM,133602:JM,133616:JM,133621:JM,133576:JM,133608:JM,133593:JM,133580
133580 :: CALL :: call :: D :: v593 = max(v588, v591)::JM,133602:JM,133616:JM,133621:JM,133608:JM,133593:JM,133580
133585 :: EXPR :: reference :: [D :: v594 = p0 $this .s::
133588 :: EXPR :: assign :: Ljava/lang/Object :: v595 = v866 - #(1)::
133589 :: EXPR :: reference :: D :: v596 = v594[v595]::DD,133593
133594 :: EXPR :: reference :: [D :: v598 = p0 $this .s::
133593 :: EXPR :: assign :: Ljava/lang/Object :: v597 = v596 / v593::DD,133622:DD,133623:DD,133628:DD,133629:DD,133650:DD,133651
133598 :: EXPR :: reference :: D :: v600 = v598[v599]::DD,133602
133597 :: EXPR :: assign :: Ljava/lang/Object :: v599 = v866 - #(2)::
133602 :: EXPR :: assign :: Ljava/lang/Object :: v601 = v600 / v593::DD,133622:DD,133623:CF,133603
133603 :: EXPR :: assign :: Ljava/lang/Object :: v602 = v866 - #(2)::
133604 :: EXPR :: reference :: D :: v603 = v28[v602]::DD,133608
133608 :: EXPR :: assign :: Ljava/lang/Object :: v604 = v603 / v593::DD,133625:DD,133628:DD,133629
133609 :: EXPR :: reference :: [D :: v605 = p0 $this .s::
133612 :: EXPR :: reference :: D :: v606 = v605[v453]::DD,133616
133616 :: EXPR :: assign :: Ljava/lang/Object :: v607 = v606 / v593::DD,133650:DD,133651:DD,133654
133617 :: EXPR :: reference :: D :: v608 = v28[v453]::DD,133621
133622 :: EXPR :: assign :: Ljava/lang/Object :: v610 = v601 + v597::DD,133624:CF,133623
133623 :: EXPR :: assign :: Ljava/lang/Object :: v611 = v601 - v597::CF,133624
133621 :: EXPR :: assign :: Ljava/lang/Object :: v609 = v608 / v593::DD,133654:CF,133622
133626 :: EXPR :: assign :: Ljava/lang/Object :: v614 = v612 + v613::DD,133627
133627 :: EXPR :: assign :: Ljava/lang/Object :: v615 = v614 / #(2.0 d)::DD,133631:DD,133639:DD,133645:DD,133648:CF,133628
133624 :: EXPR :: assign :: Ljava/lang/Object :: v612 = v610 * v611::DD,133626:CF,133625
133625 :: EXPR :: assign :: Ljava/lang/Object :: v613 = v604 * v604::CF,133626
133630 :: EXPR :: assign :: Ljava/lang/Object :: v618 = v616 * v617::DD,133634:DD,133640:DD,133649:CF,133631
133631 :: EXPR :: assign :: Z :: v619 = v615 < #(0.0 d)::DD,133632
133628 :: EXPR :: assign :: Ljava/lang/Object :: v616 = v597 * v604::DD,133630:CF,133629
133629 :: EXPR :: assign :: Ljava/lang/Object :: v617 = v597 * v604::CF,133630
133634 :: EXPR :: assign :: Z :: v621 = v618 < #(0.0 d)::DD,133635
133635 :: PRED :: IF :: Z :: if (v621 == #(0)) goto 2516::CD,134327
133632 :: PRED :: IF :: Z :: if (v619 == #(0)) goto 2507::CD,134326
133638 :: PRED :: IF :: Z :: if (v623 == #(0)) goto 2559::CF,134329:CD,133639:CD,133640:CD,133641:CD,133645:CD,133646:CD,133648:CD,133649:CD,134328
133639 :: EXPR :: assign :: Ljava/lang/Object :: v624 = v615 * v615::DD,133640
133637 :: EXPR :: assign :: Ljava/lang/Object :: v623 = v620 || v622::DD,133638
133640 :: EXPR :: assign :: Ljava/lang/Object :: v625 = v624 + v618::JM,134328:JM,133641:JM,133647
133641 :: CALL :: call :: D :: v627 = sqrt(v625)::JM,134328:JM,133641:JM,133647
133646 :: PRED :: IF :: Z :: if (v628 >= #(0)) goto 2551::CF,134328:CD,133647
133647 :: EXPR :: assign :: Ljava/lang/Object :: v629 = -(v627)::DD,134328
133645 :: EXPR :: assign :: Z :: v628 = v615 > #(0.0 d)::DD,133646
133650 :: EXPR :: assign :: Ljava/lang/Object :: v634 = v607 + v597::DD,133652:CF,133651
133651 :: EXPR :: assign :: Ljava/lang/Object :: v635 = v607 - v597::CF,133652
133648 :: EXPR :: assign :: Ljava/lang/Object :: v631 = v615 + v630::CF,133649
133649 :: EXPR :: assign :: Ljava/lang/Object :: v632 = v618 / v631::DD,134329
133654 :: EXPR :: assign :: Ljava/lang/Object :: v638 = v607 * v609::DD,134347
133652 :: EXPR :: assign :: Ljava/lang/Object :: v636 = v634 * v635::DD,133653
133653 :: EXPR :: assign :: Ljava/lang/Object :: v637 = v636 + v633::DD,134346:CF,133654
133656 :: CALL :: call :: D :: v641 = hypot(v761, v762)::JM,133665:JM,133662:JM,133661:CL,152830
133662 :: EXPR :: assign :: Ljava/lang/Object :: v643 = v762 / v641::DD,133681:DD,133695:DD,133709:DD,133753:DD,133763:CF,133663
133663 :: PRED :: IF :: Z :: if (v763 == v453) goto 2627::CD,133664
133661 :: EXPR :: assign :: Ljava/lang/Object :: v642 = v761 / v641::DD,133676:DD,133687:DD,133722:DD,133740:DD,133788:CF,133662
133664 :: EXPR :: assign :: Ljava/lang/Object :: v644 = v763 - #(1)::
133665 :: EXPR :: modify :: D :: v28[v644] = v641::
133669 :: EXPR :: reference :: [D :: v645 = p0 $this .s::
133672 :: EXPR :: reference :: D :: v646 = v645[v763]::DD,133676
133676 :: EXPR :: assign :: Ljava/lang/Object :: v647 = v642 * v646::DD,133682
133677 :: EXPR :: reference :: D :: v648 = v28[v763]::DD,133681
133682 :: EXPR :: assign :: Ljava/lang/Object :: v650 = v647 + v649::DD,133815
133683 :: EXPR :: reference :: D :: v651 = v28[v763]::DD,133687
133681 :: EXPR :: assign :: Ljava/lang/Object :: v649 = v643 * v648::CF,133682
133687 :: EXPR :: assign :: Ljava/lang/Object :: v652 = v642 * v651::DD,133696
133691 :: EXPR :: reference :: D :: v654 = v653[v763]::DD,133695
133688 :: EXPR :: reference :: [D :: v653 = p0 $this .s::
133695 :: EXPR :: assign :: Ljava/lang/Object :: v655 = v643 * v654::CF,133696
133696 :: EXPR :: assign :: Ljava/lang/Object :: v656 = v652 - v655::DD,133697
133697 :: EXPR :: modify :: D :: v28[v763] = v656::
133701 :: EXPR :: reference :: [D :: v657 = p0 $this .s::
133704 :: EXPR :: assign :: Ljava/lang/Object :: v658 = v763 + #(1)::
133705 :: EXPR :: reference :: D :: v659 = v657[v658]::DD,133709
133710 :: EXPR :: reference :: [D :: v661 = p0 $this .s::
133709 :: EXPR :: assign :: Ljava/lang/Object :: v660 = v643 * v659::DD,133816
133714 :: EXPR :: reference :: [D :: v663 = p0 $this .s::
133713 :: EXPR :: assign :: Ljava/lang/Object :: v662 = v763 + #(1)::
133718 :: EXPR :: reference :: D :: v665 = v663[v664]::DD,133722
133717 :: EXPR :: assign :: Ljava/lang/Object :: v664 = v763 + #(1)::
133722 :: EXPR :: assign :: Ljava/lang/Object :: v666 = v642 * v665::DD,133723
133723 :: EXPR :: modify :: D :: v661[v662] = v666::
133727 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2816::CF,134334:CD,133809:CD,134330:CD,134332:CD,134333:CD,134336
133729 :: EXPR :: reference :: [[D :: v668 = p0 $this .V::
133732 :: EXPR :: reference :: Ljava/lang/Object :: v669 = v668[v696]::
133736 :: EXPR :: reference :: D :: v670 = v669[v764]::DD,133740
133740 :: EXPR :: assign :: Ljava/lang/Object :: v671 = v642 * v670::DD,133754
133741 :: EXPR :: reference :: [[D :: v672 = p0 $this .V::
133744 :: EXPR :: reference :: Ljava/lang/Object :: v673 = v672[v696]::
133748 :: EXPR :: assign :: Ljava/lang/Object :: v674 = v764 + #(1)::
133749 :: EXPR :: reference :: D :: v675 = v673[v674]::DD,133753
133754 :: EXPR :: assign :: Ljava/lang/Object :: v677 = v671 + v676::DD,133801
133755 :: EXPR :: reference :: [[D :: v678 = p0 $this .V::
133753 :: EXPR :: assign :: Ljava/lang/Object :: v676 = v643 * v675::CF,133754
133758 :: EXPR :: reference :: Ljava/lang/Object :: v679 = v678[v696]::
133762 :: EXPR :: assign :: Ljava/lang/Object :: v680 = v764 + #(1)::CF,133763
133763 :: EXPR :: assign :: Ljava/lang/Object :: v681 = -(v643)::DD,133775
133767 :: EXPR :: reference :: Ljava/lang/Object :: v683 = v682[v696]::
133764 :: EXPR :: reference :: [[D :: v682 = p0 $this .V::
133771 :: EXPR :: reference :: D :: v684 = v683[v764]::DD,133775
133775 :: EXPR :: assign :: Ljava/lang/Object :: v685 = v681 * v684::DD,133789
133779 :: EXPR :: reference :: Ljava/lang/Object :: v687 = v686[v696]::
133776 :: EXPR :: reference :: [[D :: v686 = p0 $this .V::
133783 :: EXPR :: assign :: Ljava/lang/Object :: v688 = v764 + #(1)::
133784 :: EXPR :: reference :: D :: v689 = v687[v688]::DD,133788
133790 :: EXPR :: modify :: D :: v679[v680] = v691::
133788 :: EXPR :: assign :: Ljava/lang/Object :: v690 = v642 * v689::CF,133789
133789 :: EXPR :: assign :: Ljava/lang/Object :: v691 = v685 + v690::DD,133790
133794 :: EXPR :: reference :: [[D :: v692 = p0 $this .V::
133797 :: EXPR :: reference :: Ljava/lang/Object :: v693 = v692[v696]::
133801 :: EXPR :: modify :: D :: v693[v764] = v677::
133806 :: EXPR :: reference :: I :: v667 = p0 $this .n::DD,133809
133805 :: EXPR :: assign :: Ljava/lang/Object :: v694 = v696 + #(1)::DD,134333:CF,134330
133810 :: CALL :: call :: D :: v699 = hypot(v650, v660)::JM,133815:JM,133816:JM,133820:CL,152830
133809 :: PRED :: IF :: Z :: if (v696 < v667) goto 2718::CF,134334:CD,133740:CD,133748:CD,133753:CD,133754:CD,133762:CD,133763:CD,133775:CD,133783:CD,133788:CD,133789:CD,133805:CD,134330:CD,134332:CD,134333
133815 :: EXPR :: assign :: Ljava/lang/Object :: v700 = v650 / v699::DD,133828:DD,133857:DD,133875:DD,133898:DD,133946:CF,133816
133816 :: EXPR :: assign :: Ljava/lang/Object :: v701 = v660 / v699::DD,133837:DD,133843:DD,133868:DD,133911:DD,133921
133817 :: EXPR :: reference :: [D :: v702 = p0 $this .s::
133820 :: EXPR :: modify :: D :: v702[v765] = v699::
133824 :: EXPR :: reference :: D :: v703 = v28[v765]::DD,133828
133828 :: EXPR :: assign :: Ljava/lang/Object :: v704 = v700 * v703::DD,133838
133829 :: EXPR :: reference :: [D :: v705 = p0 $this .s::
133832 :: EXPR :: assign :: Ljava/lang/Object :: v706 = v765 + #(1)::
133833 :: EXPR :: reference :: D :: v707 = v705[v706]::DD,133837
133838 :: EXPR :: assign :: Ljava/lang/Object :: v709 = v704 + v708::DD,134346
133839 :: EXPR :: reference :: [D :: v710 = p0 $this .s::
133837 :: EXPR :: assign :: Ljava/lang/Object :: v708 = v701 * v707::CF,133838
133842 :: EXPR :: assign :: Ljava/lang/Object :: v711 = v765 + #(1)::CF,133843
133843 :: EXPR :: assign :: Ljava/lang/Object :: v712 = -(v701)::DD,133848
133844 :: EXPR :: reference :: D :: v713 = v28[v765]::DD,133848
133848 :: EXPR :: assign :: Ljava/lang/Object :: v714 = v712 * v713::DD,133858
133849 :: EXPR :: reference :: [D :: v715 = p0 $this .s::
133852 :: EXPR :: assign :: Ljava/lang/Object :: v716 = v765 + #(1)::
133853 :: EXPR :: reference :: D :: v717 = v715[v716]::DD,133857
133858 :: EXPR :: assign :: Ljava/lang/Object :: v719 = v714 + v718::DD,133859
133859 :: EXPR :: modify :: D :: v710[v711] = v719::
133857 :: EXPR :: assign :: Ljava/lang/Object :: v718 = v700 * v717::CF,133858
133863 :: EXPR :: assign :: Ljava/lang/Object :: v720 = v765 + #(1)::
133864 :: EXPR :: reference :: D :: v721 = v28[v720]::DD,133868
133870 :: EXPR :: assign :: Ljava/lang/Object :: v724 = v765 + #(1)::
133871 :: EXPR :: reference :: D :: v725 = v28[v724]::DD,133875
133868 :: EXPR :: assign :: Ljava/lang/Object :: v722 = v701 * v721::DD,134347:CF,133869
133869 :: EXPR :: assign :: Ljava/lang/Object :: v723 = v765 + #(1)::CF,133870
133875 :: EXPR :: assign :: Ljava/lang/Object :: v726 = v700 * v725::DD,133876
133876 :: EXPR :: modify :: D :: v28[v723] = v726::
133880 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3046::CF,134341:CD,133884:CD,133885:CD,134343
133881 :: EXPR :: reference :: I :: v727 = p0 $this .m::DD,133884
133887 :: EXPR :: reference :: [[D :: v730 = p0 $this .U::
133884 :: EXPR :: assign :: Ljava/lang/Object :: v728 = v727 - #(1)::CF,133885
133885 :: PRED :: IF :: Z :: if (v765 >= v728) goto 3046::CF,134341:CD,133967:CD,134337:CD,134339:CD,134340:CD,134343
133890 :: EXPR :: reference :: Ljava/lang/Object :: v731 = v730[v758]::
133894 :: EXPR :: reference :: D :: v732 = v731[v766]::DD,133898
133898 :: EXPR :: assign :: Ljava/lang/Object :: v733 = v700 * v732::DD,133912
133899 :: EXPR :: reference :: [[D :: v734 = p0 $this .U::
133902 :: EXPR :: reference :: Ljava/lang/Object :: v735 = v734[v758]::
133906 :: EXPR :: assign :: Ljava/lang/Object :: v736 = v766 + #(1)::
133907 :: EXPR :: reference :: D :: v737 = v735[v736]::DD,133911
133911 :: EXPR :: assign :: Ljava/lang/Object :: v738 = v701 * v737::CF,133912
133912 :: EXPR :: assign :: Ljava/lang/Object :: v739 = v733 + v738::DD,133959
133913 :: EXPR :: reference :: [[D :: v740 = p0 $this .U::
133916 :: EXPR :: reference :: Ljava/lang/Object :: v741 = v740[v758]::
133922 :: EXPR :: reference :: [[D :: v744 = p0 $this .U::
133920 :: EXPR :: assign :: Ljava/lang/Object :: v742 = v766 + #(1)::CF,133921
133921 :: EXPR :: assign :: Ljava/lang/Object :: v743 = -(v701)::DD,133933
133925 :: EXPR :: reference :: Ljava/lang/Object :: v745 = v744[v758]::
133929 :: EXPR :: reference :: D :: v746 = v745[v766]::DD,133933
133934 :: EXPR :: reference :: [[D :: v748 = p0 $this .U::
133933 :: EXPR :: assign :: Ljava/lang/Object :: v747 = v743 * v746::DD,133947
133937 :: EXPR :: reference :: Ljava/lang/Object :: v749 = v748[v758]::
133942 :: EXPR :: reference :: D :: v751 = v749[v750]::DD,133946
133941 :: EXPR :: assign :: Ljava/lang/Object :: v750 = v766 + #(1)::
133946 :: EXPR :: assign :: Ljava/lang/Object :: v752 = v700 * v751::CF,133947
133947 :: EXPR :: assign :: Ljava/lang/Object :: v753 = v747 + v752::DD,133948
133948 :: EXPR :: modify :: D :: v741[v742] = v753::
133955 :: EXPR :: reference :: Ljava/lang/Object :: v755 = v754[v758]::
133952 :: EXPR :: reference :: [[D :: v754 = p0 $this .U::
133959 :: EXPR :: modify :: D :: v755[v766] = v739::
133963 :: EXPR :: assign :: Ljava/lang/Object :: v756 = v758 + #(1)::DD,134340:CF,134337
133967 :: PRED :: IF :: Z :: if (v758 < v729) goto 2952::CF,134341:CD,133898:CD,133906:CD,133911:CD,133912:CD,133920:CD,133921:CD,133933:CD,133941:CD,133946:CD,133947:CD,133963:CD,134337:CD,134339:CD,134340
133964 :: EXPR :: reference :: I :: v729 = p0 $this .m::DD,133967
133970 :: PRED :: IF :: Z :: if (v763 < v639) goto 2589::CD,133656:CD,133661:CD,133662:CD,133663:CD,133676:CD,133681:CD,133682:CD,133687:CD,133695:CD,133696:CD,133704:CD,133709:CD,133713:CD,133717:CD,133722:CD,133727:CD,133810:CD,133815:CD,133816:CD,133828:CD,133832:CD,133837:CD,133838:CD,133842:CD,133843:CD,133848:CD,133852:CD,133857:CD,133858:CD,133863:CD,133868:CD,133869:CD,133870:CD,133875:CD,133880:CD,133968:CD,133969:CD,134334:CD,134336:CD,134341:CD,134343:CD,134344:CD,134346:CD,134347:CD,134348:CF,133971
133971 :: EXPR :: assign :: Ljava/lang/Object :: v768 = v873 - #(2)::
133968 :: EXPR :: assign :: Ljava/lang/Object :: v760 = v767 + #(1)::DD,134348:CF,134344
133969 :: EXPR :: assign :: Ljava/lang/Object :: v639 = v873 - #(1)::CF,133970
133972 :: EXPR :: modify :: D :: v28[v768] = v761::
133978 :: EXPR :: reference :: [D :: v785 = p0 $this .s::
133981 :: EXPR :: reference :: D :: v786 = v785[v453]::DD,133985
133986 :: PRED :: IF :: Z :: if (v787 > #(0)) goto 3391::CF,134362:CD,133997:CD,133998:CD,134012:CD,134349:CD,134363
133987 :: EXPR :: reference :: [D :: v788 = p0 $this .s::
133985 :: EXPR :: assign :: Z :: v787 = v786 > #(0.0 d)::DD,133986
133990 :: EXPR :: reference :: [D :: v789 = p0 $this .s::
133993 :: EXPR :: reference :: D :: v790 = v789[v453]::DD,133997
133998 :: PRED :: IF :: Z :: if (v791 >= #(0)) goto 3115::CD,134006:CD,134349
133999 :: EXPR :: reference :: [D :: v792 = p0 $this .s::
133997 :: EXPR :: assign :: Z :: v791 = v790 > #(0.0 d)::DD,133998
134002 :: EXPR :: reference :: D :: v793 = v792[v453]::DD,134006
134006 :: EXPR :: assign :: Ljava/lang/Object :: v794 = -(v793)::DD,134349
134008 :: EXPR :: modify :: D :: v788[v453] = v795::
134014 :: EXPR :: reference :: [[D :: v796 = p0 $this .V::
134012 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3391::CF,134362:CD,134038:CD,134350:CD,134351:CD,134363
134017 :: EXPR :: reference :: Ljava/lang/Object :: v797 = v796[v803]::
134021 :: EXPR :: reference :: [[D :: v798 = p0 $this .V::
134024 :: EXPR :: reference :: Ljava/lang/Object :: v799 = v798[v803]::
134028 :: EXPR :: reference :: D :: v800 = v799[v453]::DD,134032
134032 :: EXPR :: assign :: Ljava/lang/Object :: v801 = -(v800)::DD,134033
134033 :: EXPR :: modify :: D :: v797[v453] = v801::
134038 :: PRED :: IF :: Z :: if (v803 <= v398) goto 3128::CD,134032:CD,134037:CD,134350:CD,134351
134037 :: EXPR :: assign :: Ljava/lang/Object :: v802 = v803 + #(1)::DD,134351:CF,134350
134043 :: EXPR :: reference :: D :: v805 = v804[v857]::DD,134055
134040 :: EXPR :: reference :: [D :: v804 = p0 $this .s::
134047 :: EXPR :: reference :: [D :: v806 = p0 $this .s::
134050 :: EXPR :: assign :: Ljava/lang/Object :: v807 = v857 + #(1)::
134051 :: EXPR :: reference :: D :: v808 = v806[v807]::DD,134055
134055 :: EXPR :: assign :: Z :: v809 = v805 < v808::DD,134056
134058 :: EXPR :: reference :: [D :: v810 = p0 $this .s::
134056 :: PRED :: IF :: Z :: if (v809 < #(0)) goto 3185::CD,134071:CD,134083:CD,134088:CD,134146:CD,134204:CD,134205:CD,134355:CD,134356:CD,134360:CD,134361:CD,134362:CD,134363
134061 :: EXPR :: reference :: D :: v811 = v810[v857]::DD,134084
134065 :: EXPR :: reference :: [D :: v812 = p0 $this .s::
134071 :: EXPR :: assign :: Ljava/lang/Object :: v814 = v857 + #(1)::
134068 :: EXPR :: reference :: [D :: v813 = p0 $this .s::
134072 :: EXPR :: reference :: D :: v815 = v813[v814]::DD,134076
134076 :: EXPR :: modify :: D :: v812[v857] = v815::
134083 :: EXPR :: assign :: Ljava/lang/Object :: v817 = v857 + #(1)::
134080 :: EXPR :: reference :: [D :: v816 = p0 $this .s::
134084 :: EXPR :: modify :: D :: v816[v817] = v811::
134088 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3304::CF,134355:CD,134092:CD,134093:CD,134356
134089 :: EXPR :: reference :: I :: v818 = p0 $this .n::DD,134092
134095 :: EXPR :: reference :: [[D :: v821 = p0 $this .V::
134092 :: EXPR :: assign :: Ljava/lang/Object :: v819 = v818 - #(1)::CF,134093
134093 :: PRED :: IF :: Z :: if (v857 >= v819) goto 3304::CF,134355:CD,134145:CD,134352:CD,134353:CD,134354:CD,134356
134098 :: EXPR :: reference :: Ljava/lang/Object :: v822 = v821[v835]::
134102 :: EXPR :: assign :: Ljava/lang/Object :: v823 = v858 + #(1)::
134103 :: EXPR :: reference :: D :: v824 = v822[v823]::DD,134137
134107 :: EXPR :: reference :: [[D :: v825 = p0 $this .V::
134110 :: EXPR :: reference :: Ljava/lang/Object :: v826 = v825[v835]::
134114 :: EXPR :: assign :: Ljava/lang/Object :: v827 = v858 + #(1)::
134115 :: EXPR :: reference :: [[D :: v828 = p0 $this .V::
134118 :: EXPR :: reference :: Ljava/lang/Object :: v829 = v828[v835]::
134122 :: EXPR :: reference :: D :: v830 = v829[v858]::DD,134126
134126 :: EXPR :: modify :: D :: v826[v827] = v830::
134130 :: EXPR :: reference :: [[D :: v831 = p0 $this .V::
134133 :: EXPR :: reference :: Ljava/lang/Object :: v832 = v831[v835]::
134137 :: EXPR :: modify :: D :: v832[v858] = v824::
134142 :: EXPR :: reference :: I :: v820 = p0 $this .n::DD,134145
134141 :: EXPR :: assign :: Ljava/lang/Object :: v833 = v835 + #(1)::DD,134354:CF,134352
134146 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3384::CF,134360:CD,134150:CD,134151:CD,134361
134147 :: EXPR :: reference :: I :: v837 = p0 $this .m::DD,134150
134145 :: PRED :: IF :: Z :: if (v835 < v820) goto 3243::CF,134355:CD,134102:CD,134114:CD,134141:CD,134352:CD,134353:CD,134354
134150 :: EXPR :: assign :: Ljava/lang/Object :: v838 = v837 - #(1)::CF,134151
134151 :: PRED :: IF :: Z :: if (v859 >= v838) goto 3384::CF,134360:CD,134203:CD,134357:CD,134358:CD,134359:CD,134361
134153 :: EXPR :: reference :: [[D :: v840 = p0 $this .U::
134156 :: EXPR :: reference :: Ljava/lang/Object :: v841 = v840[v854]::
134160 :: EXPR :: assign :: Ljava/lang/Object :: v842 = v860 + #(1)::
134161 :: EXPR :: reference :: D :: v843 = v841[v842]::DD,134195
134165 :: EXPR :: reference :: [[D :: v844 = p0 $this .U::
134168 :: EXPR :: reference :: Ljava/lang/Object :: v845 = v844[v854]::
134172 :: EXPR :: assign :: Ljava/lang/Object :: v846 = v860 + #(1)::
134173 :: EXPR :: reference :: [[D :: v847 = p0 $this .U::
134176 :: EXPR :: reference :: Ljava/lang/Object :: v848 = v847[v854]::
134180 :: EXPR :: reference :: D :: v849 = v848[v860]::DD,134184
134184 :: EXPR :: modify :: D :: v845[v846] = v849::
134191 :: EXPR :: reference :: Ljava/lang/Object :: v851 = v850[v854]::
134188 :: EXPR :: reference :: [[D :: v850 = p0 $this .U::
134195 :: EXPR :: modify :: D :: v851[v860] = v843::
134199 :: EXPR :: assign :: Ljava/lang/Object :: v852 = v854 + #(1)::DD,134359:CF,134357
134203 :: PRED :: IF :: Z :: if (v854 < v839) goto 3325::CF,134360:CD,134160:CD,134172:CD,134199:CD,134357:CD,134358:CD,134359
134200 :: EXPR :: reference :: I :: v839 = p0 $this .m::DD,134203
134206 :: EXPR :: assign :: Ljava/lang/Object :: v862 = v879 + #(-1)::DD,134364
134207 :: PRED :: IF :: Z :: if (v863 > #(0)) goto 1622::CD,133119:CD,133165:CD,133166:CD,133167:CD,133226:CD,133227:CD,134291:CD,134293:CD,134299:CD,134301:CD,134302:CD,134364
134204 :: EXPR :: assign :: Ljava/lang/Object :: v856 = v861 + #(1)::DD,134363:CF,134362
134205 :: PRED :: IF :: Z :: if (v857 < v398) goto 3162::CD,134050:CD,134055:CD,134056:CF,134206
134210 :: EXPR :: assign :: null :: PHI v58 = v217, v57::DD,132249:DD,132253
134211 :: EXPR :: assign :: null :: PHI v219 = v218, v219::CF,134212:DD,134211:DD,134213
134209 :: EXPR :: assign :: null :: PHI v218 = v217, v218::CF,134210:DD,134209:DD,134211:DD,134212:DD,134213
134214 :: EXPR :: assign :: null :: PHI v221 = v217, v220::DD,132342:DD,134226
134215 :: EXPR :: assign :: null :: PHI v88 = #(1), #(0)::DD,132356
134212 :: EXPR :: assign :: null :: PHI v76 = v218, v75::DD,132309:DD,132313
134213 :: EXPR :: assign :: null :: PHI v220 = v218, v219::DD,134214
134218 :: EXPR :: assign :: null :: PHI v121 = v120, v121::CF,134219:DD,134218:DD,134222
134219 :: EXPR :: assign :: null :: PHI v102 = #(0.0 d), v100::CF,134220:DD,132376:DD,132382
134216 :: EXPR :: assign :: null :: PHI v92 = #(1), #(0)::CF,132356
134217 :: EXPR :: assign :: null :: PHI v223 = v222, v223::CF,134218:DD,134217:DD,134221:DD,134223
134222 :: EXPR :: assign :: null :: PHI v122 = v121, v122::CF,134223:DD,134222:DD,134225
134223 :: EXPR :: assign :: null :: PHI v116 = v223, v115::DD,132415:DD,132419
134220 :: EXPR :: assign :: null :: PHI v103 = v222, v101::DD,132377:DD,132381
134221 :: EXPR :: assign :: null :: PHI v224 = v223, v224::CF,134222:DD,134221:DD,134224
134226 :: EXPR :: assign :: null :: PHI v222 = v221, v225::CF,134227:DD,132344:DD,132437:DD,134217:DD,134220:DD,134224:DD,134229:DD,134230:DD,134231
134227 :: EXPR :: assign :: null :: PHI v120 = v86, v119::DD,132436:DD,134218:DD,134225
134224 :: EXPR :: assign :: null :: PHI v225 = v222, v224::CF,134225:DD,134226
134225 :: EXPR :: assign :: null :: PHI v123 = v120, v122::DD,132432
134230 :: EXPR :: assign :: null :: PHI v132 = v222, v131::DD,132461:DD,132465
134231 :: EXPR :: assign :: null :: PHI v227 = v222, v226::DD,132466:DD,132471:DD,134232:DD,134254
134228 :: EXPR :: assign :: null :: PHI v124 = #(1), #(0)::CF,132439
134229 :: EXPR :: assign :: null :: PHI v226 = v222, v226::CF,134230:DD,134229:DD,134231
134234 :: EXPR :: assign :: null :: PHI v229 = v228, v229::CF,134235:DD,132537:DD,134234:DD,134236
134235 :: EXPR :: assign :: null :: PHI v155 = v149, v154::DD,132532:DD,132536
134232 :: EXPR :: assign :: null :: PHI v228 = v227, v228::CF,134233:DD,132501:DD,132517:DD,134232:DD,134234:DD,134236
134233 :: EXPR :: assign :: null :: PHI v141 = v134, v140::DD,132490:DD,132494
134238 :: EXPR :: assign :: null :: PHI v167 = #(1), #(0)::CF,132569
134239 :: EXPR :: assign :: null :: PHI v231 = v230, v231::CF,134240:DD,132582:DD,134239:DD,134244
134236 :: EXPR :: assign :: null :: PHI v230 = v228, v229::DD,132556:DD,132571:DD,134239:DD,134251
134237 :: EXPR :: assign :: null :: PHI v164 = #(1), #(0)::DD,132569
134242 :: EXPR :: assign :: null :: PHI v187 = v186, v187::CF,134243:DD,132613:DD,134242
134243 :: EXPR :: assign :: null :: PHI v184 = v175, v183::DD,132608:DD,132612
134240 :: EXPR :: assign :: null :: PHI v172 = v169, v171::DD,132577:DD,132581
134241 :: EXPR :: assign :: null :: PHI v233 = v232, v233::CF,134242:DD,134241:DD,134244
134246 :: EXPR :: assign :: null :: PHI v235 = v234, v235::CF,134247:DD,134246:DD,134249
134247 :: EXPR :: assign :: null :: PHI v206 = v205, v206::CF,134248:DD,132656:DD,134247
134244 :: EXPR :: assign :: null :: PHI v232 = v231, v233::CF,134245:DD,132584:DD,132618:DD,134241:DD,134249
134245 :: EXPR :: assign :: null :: PHI v186 = v173, v185::DD,132617:DD,134242
134250 :: EXPR :: assign :: null :: PHI v205 = v188, v204::DD,132660:DD,134247
134251 :: EXPR :: assign :: null :: PHI v236 = v230, v234::DD,132662:DD,134252:DD,134254:CF,132661
134248 :: EXPR :: assign :: null :: PHI v203 = v195, v202::DD,132651:DD,132655
134249 :: EXPR :: assign :: null :: PHI v234 = v232, v235::CF,134250:DD,132625:DD,132631:DD,134246:DD,134251
134254 :: EXPR :: assign :: null :: PHI v238 = v227, v236, v237::DD,132684
134255 :: EXPR :: assign :: null :: PHI v217 = #(0), v216::DD,132213:DD,132690:DD,134209:DD,134210:DD,134214:JM,132706:JM,132786:JM,134258:JM,132685
134252 :: EXPR :: assign :: null :: PHI v237 = v236, v237::CF,134253:DD,134252:DD,134254
134253 :: EXPR :: assign :: null :: PHI v214 = v208, v213::DD,132679:DD,132683
134258 :: EXPR :: assign :: null :: PHI v264 = v35, v263::DD,132785:DD,134256
134259 :: EXPR :: assign :: null :: PHI v335 = v334, v335::CF,134260:DD,134259:DD,134263:DD,134265
134256 :: EXPR :: assign :: null :: PHI v265 = v264, v265::CF,134257:DD,132784:DD,134256
134257 :: EXPR :: assign :: null :: PHI v260 = #(0), v259::DD,132768:DD,132772
134262 :: EXPR :: assign :: null :: PHI v282 = v334, v280::DD,132824:DD,132828
134263 :: EXPR :: assign :: null :: PHI v336 = v335, v336::CF,134264:DD,134263:DD,134266
134260 :: EXPR :: assign :: null :: PHI v301 = v300, v301::CF,134261:DD,134260:DD,134264
134261 :: EXPR :: assign :: null :: PHI v281 = #(0.0 d), v279::CF,134262:DD,132823:DD,132829
134266 :: EXPR :: assign :: null :: PHI v334 = v333, v336::CF,134267:DD,134259:DD,134262:DD,134268:DD,134269
134267 :: EXPR :: assign :: null :: PHI v300 = v270, v299::DD,132877:DD,134260
134264 :: EXPR :: assign :: null :: PHI v302 = v301, v302::CF,134265:DD,132876:DD,134264
134265 :: EXPR :: assign :: null :: PHI v298 = v335, v297::DD,132871:DD,132875
134270 :: EXPR :: assign :: null :: PHI v338 = v337, v338::CF,134271:DD,132943:DD,134270:DD,134274
134271 :: EXPR :: assign :: null :: PHI v322 = #(0), v321::DD,132942:DD,132944:CF,132943
134268 :: EXPR :: assign :: null :: PHI v337 = v334, v337::CF,134269:DD,134268:DD,134270
134269 :: EXPR :: assign :: null :: PHI v311 = v334, v310::DD,132902:DD,132906
134274 :: EXPR :: assign :: null :: PHI v340 = v338, v339::DD,132974
134275 :: EXPR :: assign :: null :: PHI v333 = v266, v332::DD,132797:DD,132975:DD,134266:DD,134272
134272 :: EXPR :: assign :: null :: PHI v339 = v333, v339::CF,134273:DD,134272:DD,134274
134273 :: EXPR :: assign :: null :: PHI v327 = #(0), v326::DD,132958:DD,132962
134278 :: EXPR :: assign :: null :: PHI v394 = v393, v394::CF,134279:DD,133030:DD,133040:DD,134278:DD,134282
134279 :: EXPR :: assign :: null :: PHI v382 = v381, v382::CF,134280:DD,134279:DD,134283
134276 :: EXPR :: assign :: null :: PHI v343 = #(1), #(0)::DD,132991
134277 :: EXPR :: assign :: null :: PHI v346 = #(1), #(0)::CF,132991
134282 :: EXPR :: assign :: null :: PHI v395 = v394, v395::CF,134283:DD,134282:DD,134285
134283 :: EXPR :: assign :: null :: PHI v383 = v382, v383::CF,134284:DD,133075:DD,134283
134280 :: EXPR :: assign :: null :: PHI v360 = #(0.0 d), v358::CF,134281:DD,133020:DD,133026
134281 :: EXPR :: assign :: null :: PHI v361 = v349, v359::DD,133021:DD,133025
134286 :: EXPR :: assign :: null :: PHI v381 = v348, v380::DD,133076:DD,134279
134287 :: EXPR :: assign :: null :: PHI v396 = v392, v393::DD,134288
134284 :: EXPR :: assign :: null :: PHI v379 = v368, v378::DD,133070:DD,133074
134285 :: EXPR :: assign :: null :: PHI v393 = v392, v395::CF,134286:DD,132995:DD,134278:DD,134287
134290 :: EXPR :: assign :: null :: PHI v392 = v342, v391::DD,132982:DD,132993:DD,133106:DD,134285:DD,134287
134291 :: EXPR :: assign :: null :: PHI v864 = v863, v864::DD,133166:DD,133169:DD,134291:DD,134296:DD,134299
134288 :: EXPR :: assign :: null :: PHI v397 = v396, v397::CF,134289:DD,133105:DD,134288
134289 :: EXPR :: assign :: null :: PHI v388 = #(0), v387::DD,133089:DD,133093
134294 :: EXPR :: assign :: null :: PHI v431 = v430, #(0.0 d)::DD,133195:CF,133183
134295 :: EXPR :: assign :: null :: PHI v437 = v436, #(0.0 d)::CF,133195
134293 :: EXPR :: assign :: null :: PHI v424 = v406, v423::DD,133121:DD,133145:DD,133164:DD,133165:DD,133167:DD,133171:DD,133183:DD,133220:DD,133221:DD,134301
134298 :: EXPR :: assign :: null :: PHI v447 = v427, v446::DD,133171:DD,133173:DD,133184:DD,133185:DD,133219:DD,133220:DD,133221:DD,133224:DD,134301
134299 :: EXPR :: assign :: null :: PHI v866 = v864, v865, v865, v865::DD,133228:DD,133233:DD,133238:DD,133516:DD,133528:DD,133542:DD,133588:DD,133597:DD,133603:DD,134311:DD,134322:DD,134344:DD,134350:DD,134362:DD,134364
134296 :: EXPR :: assign :: null :: PHI v865 = v864, v865::DD,133173:DD,133223:DD,134296:DD,134299
134302 :: EXPR :: assign :: null :: PHI v452 = #(4), #(3), #(1), #(2)::DD,133227:CF,133226
134303 :: EXPR :: assign :: null :: PHI v475 = v508, v470::DD,134313:CF,133287
134301 :: EXPR :: assign :: null :: PHI v451 = v424, v424, v424, v447::CF,134302:DD,133226
134306 :: EXPR :: assign :: null :: PHI v510 = v509, v510::CF,134307:DD,134306:DD,134310
134307 :: EXPR :: assign :: null :: PHI v505 = #(0), v503::DD,133365:DD,133369
134304 :: EXPR :: assign :: null :: PHI v868 = v867, v868::DD,133308:DD,133322:DD,133343:DD,134304:DD,134308
134310 :: EXPR :: assign :: null :: PHI v511 = v509, v510::DD,133370
134311 :: EXPR :: assign :: null :: PHI v867 = v866, v869::DD,134304:DD,134308:DD,134364
134308 :: EXPR :: assign :: null :: PHI v869 = v867, v868::DD,134311
134314 :: EXPR :: assign :: null :: PHI v509 = v457, v507::DD,133268:DD,133270:DD,133276:DD,133277:DD,133371:DD,134306:DD,134310
134315 :: EXPR :: assign :: null :: PHI v871 = v870, v871::DD,134315:DD,134319
134313 :: EXPR :: assign :: null :: PHI v508 = v455, v475::CF,134314:DD,133260:DD,134303
134318 :: EXPR :: assign :: null :: PHI v558 = #(0), v556::DD,133505:DD,133509
134319 :: EXPR :: assign :: null :: PHI v872 = v870, v871::DD,134322
134317 :: EXPR :: assign :: null :: PHI v563 = v562, v563::CF,134318:DD,134317:DD,134321
134322 :: EXPR :: assign :: null :: PHI v870 = v866, v872::DD,133511:DD,134315:DD,134319:DD,134364
134321 :: EXPR :: assign :: null :: PHI v564 = v562, v563::DD,133510
134326 :: EXPR :: assign :: null :: PHI v620 = #(1), #(0)::DD,133637:CF,133634
134327 :: EXPR :: assign :: null :: PHI v622 = #(1), #(0)::CF,133637
134324 :: EXPR :: assign :: null :: PHI v561 = v513, v526::CF,134325:DD,133404
134325 :: EXPR :: assign :: null :: PHI v562 = v453, v560::DD,133511:DD,134317:DD,134321
134330 :: EXPR :: assign :: null :: PHI v874 = v873, v874::DD,134330:DD,134334
134328 :: EXPR :: assign :: null :: PHI v630 = v627, v629::DD,133648
134329 :: EXPR :: assign :: null :: PHI v633 = #(0.0 d), v632::DD,133653:CF,133650
134334 :: EXPR :: assign :: null :: PHI v875 = v873, v874::DD,134337:DD,134341
134332 :: EXPR :: assign :: null :: PHI v764 = v763, v764::CF,134333:DD,133748:DD,133762:DD,133783:DD,134332:DD,134336
134333 :: EXPR :: assign :: null :: PHI v696 = #(0), v694::DD,133805:DD,133809
134339 :: EXPR :: assign :: null :: PHI v766 = v765, v766::CF,134340:DD,133906:DD,133920:DD,133941:DD,134339:DD,134343
134336 :: EXPR :: assign :: null :: PHI v765 = v763, v764::DD,133832:DD,133842:DD,133852:DD,133863:DD,133869:DD,133870:DD,133885:DD,134339:DD,134343
134337 :: EXPR :: assign :: null :: PHI v876 = v875, v876::DD,134337:DD,134341
134343 :: EXPR :: assign :: null :: PHI v767 = v765, v765, v766::DD,133968
134340 :: EXPR :: assign :: null :: PHI v758 = #(0), v756::DD,133963:DD,133967
134341 :: EXPR :: assign :: null :: PHI v877 = v875, v875, v876::DD,134344
134346 :: EXPR :: assign :: null :: PHI v761 = v637, v709::CF,134347:DD,133661:DD,133972
134347 :: EXPR :: assign :: null :: PHI v762 = v638, v722::CF,134348:DD,133662
134344 :: EXPR :: assign :: null :: PHI v873 = v866, v877::DD,133969:DD,133971:DD,134330:DD,134334:DD,134364
134350 :: EXPR :: assign :: null :: PHI v878 = v866, v878::CF,134351:DD,134350:DD,134362
134351 :: EXPR :: assign :: null :: PHI v803 = #(0), v802::DD,134037:DD,134038
134348 :: EXPR :: assign :: null :: PHI v763 = v453, v760::DD,133663:DD,133664:DD,133704:DD,133713:DD,133717:DD,133970:DD,134332:DD,134336:CF,133969
134349 :: EXPR :: assign :: null :: PHI v795 = v794, #(0.0 d)::DD,134008
134354 :: EXPR :: assign :: null :: PHI v835 = #(0), v833::DD,134141:DD,134145
134355 :: EXPR :: assign :: null :: PHI v881 = v879, v879, v880::CF,134356:DD,134357:DD,134360
134352 :: EXPR :: assign :: null :: PHI v880 = v879, v880::CF,134353:DD,134352:DD,134355
134353 :: EXPR :: assign :: null :: PHI v858 = v857, v858::CF,134354:DD,134102:DD,134114:DD,134353:DD,134356
134358 :: EXPR :: assign :: null :: PHI v860 = v859, v860::CF,134359:DD,134160:DD,134172:DD,134358:DD,134361
134359 :: EXPR :: assign :: null :: PHI v854 = #(0), v852::DD,134199:DD,134203
134356 :: EXPR :: assign :: null :: PHI v859 = v857, v857, v858::DD,134151:DD,134358:DD,134361:CF,134146
134357 :: EXPR :: assign :: null :: PHI v882 = v881, v882::CF,134358:DD,134357:DD,134360
134362 :: EXPR :: assign :: null :: PHI v879 = v866, v866, v878, v883::CF,134363:DD,134206:DD,134352:DD,134355
134363 :: EXPR :: assign :: null :: PHI v857 = v453, v453, v453, v856::DD,134050:DD,134071:DD,134083:DD,134093:DD,134205:DD,134353:DD,134356
134360 :: EXPR :: assign :: null :: PHI v883 = v881, v881, v882::CF,134361:DD,134362
134361 :: EXPR :: assign :: null :: PHI v861 = v859, v859, v860::DD,134204
134364 :: EXPR :: assign :: null :: PHI v863 = v243, v866, v867, v870, v873, v862::DD,133119:DD,134207:DD,134291
135490 :: EXPR :: modify :: [[D :: p0 $this .A = p1 $A ::
135493 :: EXPR :: modify :: I :: p0 $this .m = p2 $m ::
135496 :: EXPR :: modify :: I :: p0 $this .n = p3 $n ::
135507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.copy()::JM,88790:JM,88793:JM,88796:CD,135523:CD,135557:CD,135561
135523 :: CALL :: call :: [[D :: v8 = v3.getArray()::CL,88809
135529 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v8[v21]::
135533 :: EXPR :: reference :: [[D :: v13 = p0 $this .A::
135536 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v13[v21]::
135540 :: EXPR :: reference :: D :: v15 = v14[v18]::DD,135544
135544 :: EXPR :: modify :: D :: v12[v18] = v15::
135548 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,135560:CF,135559
135549 :: EXPR :: reference :: I :: v11 = p0 $this .n::DD,135552
135554 :: EXPR :: reference :: I :: v10 = p0 $this .m::DD,135557
135552 :: PRED :: IF :: Z :: if (v18 < v11) goto 34::CD,135548:CD,135559:CD,135560:CF,135553
135553 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,135561
135559 :: EXPR :: assign :: null :: PHI v21 = v20, v21::CF,135560:DD,135553:DD,135559
135557 :: PRED :: IF :: Z :: if (v20 < v10) goto 29::CD,135552:CD,135553:CD,135559:CD,135560:CD,135561
135560 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,135548:DD,135552
135561 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,135557:DD,135559
136047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.LUDecomposition.det()::CE,136048:CD,136058:CD,136067:CD,136085:CD,136086:CD,136087:CD,136088
136048 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.LUDecomposition.det()::JM,117080
136058 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
136067 :: EXPR :: assign :: D :: v6 = CONVERT I to D v5::DD,136087
136064 :: EXPR :: reference :: I :: v5 = p0 $this .pivsign::DD,136067
136069 :: EXPR :: reference :: [[D :: v9 = p0 $this .LU::
136072 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v9[v16]::
136076 :: EXPR :: reference :: D :: v11 = v10[v16]::DD,136080
136082 :: EXPR :: reference :: I :: v8 = p0 $this .n::DD,136085
136080 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v15 * v11::DD,136087:CF,136081
136081 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v16 + #(1)::DD,136088:CF,136087
136086 :: NORM :: compound :: D :: return v15::DD,136048
136087 :: EXPR :: assign :: null :: PHI v15 = v6, v12::CF,136088:DD,136080:DD,136086
136085 :: PRED :: IF :: Z :: if (v16 < v8) goto 34::CD,136080:CD,136081:CD,136087:CD,136088:CF,136086
136088 :: EXPR :: assign :: null :: PHI v16 = #(0), v14::DD,136081:DD,136085
136105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.checkMatrixDimensions(org.biojava.nbio.structure.jama.Matrix)::CD,136124
136124 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
136250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,136251:CD,136255:CD,136259:CD,136263:CD,136268
136251 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,117336
136255 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,136268
136259 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,136268
136263 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,136268
136270 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,136274:CL,152899
136268 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,136269:CD,136270:CD,136274:CD,136278:CD,136282:CD,136287:CD,136414
136269 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,136251
136274 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,136275
136275 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,152923
136278 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,136282:CL,152899
136282 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,136414:CD,136283
136283 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,136414:CL,153012
136287 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,136288:JM,99769:JM,162290:JM,153460:JM,162276:JM,162283:CD,136309:CD,136313:CD,136314:CD,136323:CD,136331:CD,136348:CD,136403:CD,136408
136288 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,153320
136309 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,99818
136314 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
136313 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,136314
136323 :: CALL :: call :: V :: v28.parse(v33)::CL,99835
136331 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,136348:CL,153480
136348 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,136251
136403 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,136408:CL,153514
136408 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,136251
136414 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,136287
136468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,136469:CD,136475
136469 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,117400
136475 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,136469
136472 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,136475
136478 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,117583
136477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,136478:CD,136480:CD,136482:CD,136483:CD,136491
136482 :: EXPR :: assign :: I :: v4 = v2.length::DD,136483
136483 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,136491
136480 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,136482
136491 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,136478
136504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,136505:CD,136515:CD,136519:JM,136770:JM,136673:JM,136551:JM,136661:JM,136629
136505 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,117733:JM,117738
136515 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,136519:JM,136524:CL,153734
136519 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,136520:CD,136524:CD,136532
136520 :: CALL :: call :: I :: v12 = v9.size()::JM,136524
136524 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,136532:CD,136533:CD,136539:CD,136544:CD,136545:JM,136524
136532 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136533 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,136524
136539 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,136544
136546 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,136551:JM,136770:JM,136673:JM,136661:JM,136629
136544 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,136545:JM,136551
136545 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,136546:CD,136551:CD,136559
136551 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,136559:CD,136560:CD,136565:CD,136566
136559 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136560 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,136565
136566 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,136574:CD,136575:CD,136579
136565 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,136566
136574 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136575 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,136579:CL,154104
136579 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,136588:CD,136587:CD,136592:CD,136595:CD,136603
136587 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136588 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,136609:DD,136641:DD,136720:DD,136734:DD,136797
136595 :: CALL :: call :: I :: v33 = v27.ordinal()::
136592 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,154323
136599 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,136603
136603 :: PRED :: IF :: null :: switch v34::CD,136604:CD,136609:CD,136610:CD,136615:CD,136616:CD,136721:CD,136722:CD,136727:CD,136728
136604 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,136770:JM,136673:JM,136551:JM,136661:JM,136629
136610 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,136615
136609 :: NORM :: compound :: Ljava/util/List :: return v28::DD,136505
136615 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,136616
136616 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,136624:CD,136625:CD,136629:CD,136635:CD,136640
136624 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136625 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,136640
136630 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,136770:JM,136673:JM,136551:JM,136661:JM,136629
136629 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,136630:JM,136640
136635 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,136640
136642 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,136655
136640 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,136641:CD,136642:CD,136651:CD,136655:CD,136719:CD,136720:CD,136798
136641 :: NORM :: compound :: Ljava/util/List :: return v28::DD,136505
136651 :: CALL :: call :: V :: sort(v75, v76)::
136655 :: EXPR :: assign :: I :: v79 = v75.length::DD,136719
136657 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,136675:DD,136706
136662 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,136504
136661 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,136662:CD,136668:CD,136673
136668 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,154595
136674 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,136679
136675 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
136673 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,136674:CD,136679:CD,136683:CD,136688:CD,136692:CD,136695:CD,136703
136679 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,136679
136683 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,154595
136688 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,117969
136695 :: CALL :: call :: I :: v93 = v89.ordinal()::
136692 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,154323
136699 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,136703
136703 :: PRED :: IF :: null :: switch v94::CD,136705:CD,136710:CD,136714
136706 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
136705 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,136710
136710 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,136710
136714 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,154595
136718 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,136798
136719 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,136661:CD,136718:CD,136798:CF,136720
136722 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,136727
136720 :: NORM :: compound :: Ljava/util/List :: return v28::DD,136505
136721 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136727 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,136728
136728 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,136729:CD,136734:CD,136735:CD,136739:CD,136744
136729 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,136770:JM,136673:JM,136551:JM,136661:JM,136629
136734 :: NORM :: compound :: Ljava/util/List :: return v28::DD,136505
136735 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,136744
136739 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,136744
136746 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,136770:JM,136673:JM,136551:JM,136661:JM,136629
136744 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,136745:CD,136746:CD,136751:CD,136760:CD,136764:CD,136796:CD,136797:CD,136799
136745 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,136505
136751 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,136764
136760 :: CALL :: call :: V :: sort(v48, v49)::
136766 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,136783
136764 :: EXPR :: assign :: I :: v52 = v48.length::DD,136796
136770 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,136771:CD,136777:CD,136782:CD,136787:CD,136791
136771 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,136504
136777 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,154595
136782 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,136787
136783 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
136787 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,136787
136791 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,154595
136795 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,136799
136798 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,136718:DD,136719
136799 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,136795:DD,136796
136796 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,136770:CD,136795:CD,136799:CF,136797
136797 :: NORM :: compound :: Ljava/util/List :: return v28::DD,136505
136962 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
136961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,136962:CD,136967:CD,137007:CD,137011:CD,137028:CD,137029
136967 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,136968:CD,136974:CD,136978:CD,136988:CD,136994:CD,136998:CD,137029:JM,136967
136968 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,136967
136974 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
136978 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,137029
136979 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
136988 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,136967
136994 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
136998 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,137029
136999 :: EXPR :: reference :: Ljava/io/File :: v14 = p0 $this .splitDirPath::
137007 :: CALL :: call :: Z :: v26 = v23.exists()::JM,137011
137011 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,137012:CF,137028
137012 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
137028 :: NORM :: compound :: Ljava/io/File :: return v23::DD,136962
137029 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,137028
137059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,137060:CD,137064:CD,137065:CD,137069:CD,137077:CD,137082:CD,137086
137060 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
137064 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,137086
137065 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
137069 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
137077 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,137086
137082 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,137086
137086 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,137060
137090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,137091:CD,137095:CD,137100:CD,137104:CD,137109:CD,137114:CD,137118
137091 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
137095 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,137118
137100 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,137118
137104 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,137118
137109 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,137118
137114 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,137118
137118 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,137091
137123 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,137124:CD,137128:CD,137132:CD,137149:CD,137188:CD,137191:JM,137158
137124 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,117843:JM,117834:JM,117839
137128 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,137158:JM,137191:JM,137132:JM,137149
137132 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,137158:JM,137191:JM,137132:JM,137149
137150 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,137158:JM,137191
137149 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,137191:CF,137150:CD,137158
137158 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,137158:JM,137191
137191 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,137188
137188 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,137124
137208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,137217:CD,137222:CD,137226:CD,137231:CD,137235:CD,137244:CD,137260:CD,137265:CD,137314:CD,137318
137217 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
137222 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,154868
137226 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
137231 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
137235 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
137244 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,154921
137260 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v30 = new java.io.FileOutputStream::
137265 :: CALL :: call :: Ljava/nio/channels/FileChannel :: v33 = v30.getChannel()::
137314 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,154952
137318 :: CALL :: call :: Z :: v63 = v19.delete()::
137376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,137377:CD,137380:CD,137381:CD,137382:CD,137386:JM,137499:JM,137391
137377 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,117982
137382 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,137392:JM,137386:JM,137481:CL,153734
137380 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,137381
137381 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,137501
137386 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,137387:CD,137391:CD,137392:CD,137395:CD,137404:JM,137481
137387 :: CALL :: call :: I :: v9 = v6.size()::JM,137392:JM,137481
137391 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,137392
137395 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
137392 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,137395:CD,137404:CD,137499:CD,137500:CD,137501:CD,137505
137406 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,137392:JM,137481
137404 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,137377
137411 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,137481
137416 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,137421
137422 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,137503:CD,137427:CD,137432
137423 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,137432
137421 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,137422:JM,137432
137427 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,137432
137434 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,137439
137432 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,137434:CD,137439:CD,137440:CD,137461:CD,137502:CD,137503:CD,137504
137439 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,137440
137440 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,137457:CD,137502
137452 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
137457 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,137502:CL,154104
137461 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
137469 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
137473 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
137477 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,137481
137482 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,137498
137481 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,137411:CD,137416:CD,137421:CD,137422:CD,137477:CD,137503:CD,137504:JM,137481:CF,137482
137494 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
137498 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,137505
137499 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,137500
137502 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,137461:DD,137473
137503 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,137504:DD,137498:DD,137503
137500 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,137406:CD,137477:CD,137481:CD,137482:CD,137498:CD,137499:CD,137503:CD,137504:CD,137505:JM,137392:CF,137501
137501 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,137377
137504 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,137481:DD,137482:DD,137504
137505 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,137500:DD,137503:CF,137499
138127 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,138164
138139 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,156122
138147 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,156122
138164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,138170:CD,138179:CD,138184
138170 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
138179 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,138184
138176 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,138184
138184 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,138192:CD,138199:CD,138206:CD,138213
138189 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,138192
138192 :: CALL :: call :: V :: v9.set(#(0))::JM,138192
138199 :: CALL :: call :: V :: v11.set(#(0))::JM,138199
138196 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,138199
138203 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,138206
138206 :: CALL :: call :: V :: v13.set(#(0))::JM,138206
138210 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,138213
138213 :: CALL :: call :: V :: v15.set(#(0))::JM,138213
138283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,138283
138284 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
138292 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,138283
138297 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
138302 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
138301 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,138283
138310 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,138283
138315 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
138319 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,138283
138320 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
138328 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,138283
138333 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
138338 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
138337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,138283
138346 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,138283
138351 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
138382 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
138381 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,138382:CD,138387:CD,138389:CD,138393:CD,138428:CD,138432:CD,138433:CD,138442:CD,138446:CD,138509:JM,138506:JM,138476
138387 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,138402:JM,138432
138389 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,138402:JM,138432
138393 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,138402:JM,138432
138398 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,138402:JM,138432
138402 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,138407:JM,138424
138403 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,138407
138407 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,138408
138410 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,138419
138408 :: EXPR :: assign :: I :: v19 = v18.length::DD,138427
138414 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,138419
138419 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,138420:CD,138424:CD,138426:CD,138427:CD,138507:CD,138508:CD,138509
138420 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,138424
138426 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,138508:CF,138507
138427 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,138509:CD,138414:CD,138419
138424 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,138509
138428 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,138402:JM,138432
138432 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,138398:CD,138402:CD,138403:CD,138407:CD,138408:CD,138427:CD,138428:CD,138507:CD,138508:CD,138509:JM,138432
138433 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
138438 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,138446
138442 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,138446
138446 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,138477:CF,138447:CD,138452:CD,138457:CD,138462:CD,138467:CD,138472:CD,138476:CD,138482:CD,138487:CD,138492:CD,138497:CD,138502:CD,138506
138447 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,138476
138452 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,138476:JM,138506:JM,138509
138457 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,138506:JM,138476
138462 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,138506:JM,138476
138467 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,138506:JM,138476
138472 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,138506:JM,138476
138476 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,138382
138477 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,138506
138482 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,138506:JM,138476:JM,138509
138487 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,138506:JM,138476
138492 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,138506:JM,138476
138497 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,138506:JM,138476
138502 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,138506:JM,138476
138506 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,138382
138507 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,138508:JM,138419:DD,138507:DD,138509
138508 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,138426:DD,138427
138509 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,138402:JM,138432:JM,138506:JM,138476:DD,138507
138551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,138556:CD,138564:CD,138569:CD,138608
138556 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,138608:JM,138606
138561 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,138569
138564 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,138569
138571 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,138579:JM,138586:JM,138601
138569 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,138606:CD,138607:CD,138613:JM,138608
138575 :: CALL :: call :: I :: v15 = v13.length()::JM,138579
138579 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,138581:CD,138586
138581 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,138586
138586 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,138587:CD,138592:CD,138597:CF,138605
138587 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,138601
138592 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,138601
138597 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,138601
138601 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
138606 :: EXPR :: assign :: I :: v12 = v6.length::CF,138607
138607 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,138575:CD,138579:CD,138605:CD,138606:CD,138613:JM,138608
138605 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,138613
138608 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,138608
138613 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,138605:DD,138607:CF,138606
138854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,138855:CD,138858:CD,138866:CD,138871:CD,138879:CD,138883:CD,138888:CD,138896:CD,138937:CD,138941:CD,138942:CD,138944:CD,138949:CD,138953
138855 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,119303
138858 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,138953
138863 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
138866 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
138871 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
138879 :: CALL :: call :: I :: v14 = v12.size()::
138876 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
138883 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
138888 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
138893 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,138941
138896 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,138941
138901 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,138941
138919 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,156234
138927 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
138932 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
138937 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,138941
138942 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
138941 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,138901:CD,138919:CD,138927:CD,138932:CD,138937:JM,138941
138944 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
138949 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,138953
138953 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,138855
139270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,139271:CD,139277
139271 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,169652:JM,169643:JM,169640:JM,169660
139274 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,139277
139279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,139280:CD,139286
139277 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,139271
139283 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,139286
139280 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,119639:JM,119638:JM,119643:JM,169624:JM,169625:JM,169630
139286 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139280
139288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,139289:CD,139295
139289 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,119823:JM,119833
139295 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139289
139292 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,139295
139306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,139311
139311 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
139317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,139338:CD,139344:CD,139365:CD,139371:CD,139392:CD,139398
139338 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
139344 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
139365 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
139371 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
139392 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
139398 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
139434 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,120414
139433 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,139434:CD,139437:CD,139441:CD,139446:CD,139597:CD,139598
139437 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139441 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139446 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,139448:CD,139453:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516
139448 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139455 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139453 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,139455:CD,139460:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139462 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139460 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,139462:CD,139467:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139467 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,139469:CD,139474:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139469 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139474 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,139476:CD,139481:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139551:JM,139516:JM,139453
139476 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139483 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139481 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,139483:CD,139488:CD,139598:JM,139523:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139490 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139488 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,139490:CD,139495:CD,139598:JM,139523:JM,139488:JM,139558:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139495 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,139497:CD,139502:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139497 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139502 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,139504:CD,139509:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139504 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139511 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139509 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,139511:CD,139516:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139453
139518 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139516 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,139518:CD,139523:CD,139598:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139523 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,139525:CD,139530:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139525 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139530 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,139532:CD,139537:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139532 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139539 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139537 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,139539:CD,139544:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139481:JM,139551:JM,139516:JM,139453
139546 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139544 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,139546:CD,139551:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139516:JM,139453
139551 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,139553:CD,139558:CD,139598:JM,139523:JM,139488:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139553 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139558 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,139560:CD,139565:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139560 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139567 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139565 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,139567:CD,139572:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139574 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139579:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139572 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,139574:CD,139579:CD,139598:JM,139523:JM,139488:JM,139558:JM,139495:JM,139460:JM,139530:JM,139467:JM,139502:JM,139565:JM,139474:JM,139537:JM,139446:JM,139572:JM,139509:JM,139544:JM,139481:JM,139551:JM,139516:JM,139453
139579 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,139581:CD,139586:CD,139598
139581 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,139586
139586 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,139598:CD,139587:CD,139593
139587 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,139598
139593 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,139598
139598 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,139597
139597 :: NORM :: compound :: I :: return v94::DD,139434
139717 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,139737
139737 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
139844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,139849
139849 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
139855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,139860
139860 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
139875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,139880
139880 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
139886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,139891
139891 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
139897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,139902
139902 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
139952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,139957
139957 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
139963 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,139968
139968 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
139974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,139979
139979 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
139985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,139990
139990 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
139996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,140001
140001 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
140007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,140012
140012 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
140018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,140023
140023 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
140029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,140034
140034 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
140040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,140045
140045 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
140051 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,140056
140056 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
140062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,140067
140067 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
140073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,140078
140078 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
140084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,140089
140089 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
140095 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,140100
140100 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
140106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,140111
140111 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
140117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,140122
140122 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
140128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,140133
140133 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
140139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,140144
140144 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
140150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,140155
140155 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
140161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,140166
140166 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
140172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,140177
140177 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
140183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,140188
140188 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
140194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,140199
140199 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
140205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,140210
140210 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
140216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,140221
140221 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
140227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,140232
140232 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
140238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,140243
140243 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
140249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,140254
140254 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
140260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,140265
140265 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
140271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,140276
140276 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
140282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,140287
140287 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
140293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,140298
140298 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
140304 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,140309
140309 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
140315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,140320
140320 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
140326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,140331
140331 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
140337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,140342
140342 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
140348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,140353
140353 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
140359 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,140364
140364 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
140370 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,140375
140375 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
140391 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
140388 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
140400 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,140405
140405 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
140411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,140412:CD,140418
140415 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,140418
140412 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
140418 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,140412
140420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,140425
140425 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
140474 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,140475:CD,140480:CD,140481:CD,140485:CD,140818:CD,140822:CD,140827:CD,140828:JM,140570:JM,140492:JM,140669
140475 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,123663
140480 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,140485
140481 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,140485
140487 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,140822:JM,140570:JM,140492:JM,140669
140485 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,140823
140492 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,140571:DD,140618:DD,140690
140493 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,140497:CL,156423
140497 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,140503:CD,140507:CD,140511:CD,140817:CD,140818:CD,140822:CD,140826:CD,140827:CD,140828
140503 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,140564:JM,140825:JM,140511:JM,140524:CL,156440
140507 :: CALL :: call :: I :: v23 = v21.intValue()::JM,140564:JM,140825:JM,140511:JM,140524
140511 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,140523:CD,140524:CD,140824
140523 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140524 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,140824:CD,140525:CD,140531:CD,140535:CD,140539:CD,140544:CD,140563:CD,140565:CD,140825:JM,140822:JM,140570:JM,140492:JM,140669
140525 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,140822:JM,140570:JM,140492:JM,140669
140531 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,140544:CL,60637
140535 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,140544:CL,60637
140539 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,140544
140544 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,140562:CD,140563:CD,140565:CD,140824:CD,140825
140562 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140563 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,140825:CD,140564
140566 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,140822:JM,140570:JM,140492:JM,140669
140564 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,140825
140565 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,140566:CD,140570:CD,140665:CD,140669:JM,140822:JM,140492
140570 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,140571:CD,140572:CD,140665:CD,140669:JM,140822:JM,140570:JM,140492
140571 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,140572
140575 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
140572 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,140575:CD,140580:CD,140585:CD,140590:CD,140594:CD,140599:CD,140604:CD,140609:CD,140617:CD,140618:CD,140619:CD,140826
140580 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
140585 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
140590 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,140822:JM,140570:JM,140492:JM,140669
140594 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,140822:JM,140492:JM,140669
140599 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
140604 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
140609 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
140618 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,140619
140619 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,140826:CD,140622:CD,140627:CD,140632:CD,140637:CD,140641:CD,140646:CD,140651:CD,140656:CD,140664:CD,140817:CD,140818:CD,140822:CD,140827:CD,140828
140617 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140622 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
140627 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
140632 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
140637 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,140822:JM,140570:JM,140492:JM,140669
140641 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,140822:JM,140492:JM,140669
140646 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
140651 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
140656 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
140664 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140665 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,140822:JM,140570:JM,140492:JM,140669
140669 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,140672:CD,140677:CD,140682:CD,140690:CD,140691:CD,140693:CD,140699:CD,140703:CD,140707:CD,140711:CD,140715:CD,140720:CD,140826:JM,140822:JM,140570:JM,140492:JM,140669
140672 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
140677 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
140682 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
140690 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,140691
140691 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,140826:CD,140692:CD,140817:CD,140818:CD,140822:CD,140827:CD,140828
140692 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140693 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,140822:JM,140570:JM,140492:JM,140669
140699 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,140720:CL,60637
140703 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,140720
140707 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,140720:CL,60637
140711 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,140720
140715 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,140720
140723 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
140720 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,140723:CD,140728:CD,140733:CD,140738:CD,140743:CD,140748:CD,140753:CD,140761:CD,140762:CD,140772:CD,140817:CD,140818:CD,140822:CD,140826:CD,140827:CD,140828
140728 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
140733 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
140738 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
140743 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
140748 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
140753 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
140762 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
140761 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140475
140772 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
140818 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,140822:JM,140570:JM,140492:JM,140669
140817 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,140828:CF,140827
140822 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,140487:CD,140492:CD,140493:CD,140497:CD,140823:JM,140822:JM,140570:JM,140669
140823 :: NORM :: compound :: Ljava/util/List :: return v8::DD,140475
140826 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,140827:CF,140817
140827 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,140828:DD,140824:DD,140826
140824 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,140563:DD,140565:DD,140826
140825 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,140570:DD,140669:JM,140822:JM,140492:CF,140565
140828 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,140570:JM,140492:JM,140669:DD,140817:DD,140822
140938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,140946:CD,140951:CD,140955
140946 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,140955:CL,64975
140951 :: CALL :: call :: I :: v9 = v7.size()::JM,140955
140955 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,140987:CD,140993
140987 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,140993:CL,156449
140994 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,101786
140993 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,140994
141018 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,123799
141017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,141018:CD,141023:CD,141027:CD,141031:CD,141037:CD,141045:CD,141050:CD,141054:CD,141059:CD,141064:CD,141069:CD,141079:CD,141084:CD,141088:CD,141093:CD,141098:CD,141103:CD,141111:CD,141116:CD,141133:CD,141134:CD,141137:CD,141143:CD,141144:CD,141152:CD,141156
141023 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
141027 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
141031 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,151763
141037 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,151763
141045 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
141050 :: CALL :: call :: I :: v19 = v11.length()::
141054 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
141059 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
141064 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
141069 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
141079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
141084 :: CALL :: call :: I :: v35 = v13.length()::
141088 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
141093 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
141098 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
141103 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
141111 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141116 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141134 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141133 :: NORM :: compound :: Z :: return #(1)::DD,141018
141137 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141143 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141144 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141152 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,141152:JM,141156:JM,141157:JM,141194:JM,141144:JM,141161
141156 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,141157:CD,141161:CD,141186:JM,141194
141157 :: CALL :: call :: I :: v68 = v65.getLength()::JM,141157:JM,141194:JM,141161
141161 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,141186:CD,141189:CD,141194:CD,141199:CD,141204:CD,141212:CD,141221
141186 :: NORM :: compound :: Z :: return #(1)::DD,141018
141189 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
141194 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,141157:JM,141194:JM,141161
141199 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
141204 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
141212 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,141221:CL,156846
141221 :: NORM :: compound :: Z :: return v82::DD,141018
141286 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,123988
141285 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,141286:CD,141291:CD,141296:CD,141301:CD,141305:CD,141306:CD,141310:CD,141315:CD,141316:CD,141317:CD,141323:CD,141328:CD,141333:CD,141341:CD,141346
141291 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,141305:CL,116473
141296 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,141305
141301 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,141305
141306 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,141315:CL,77766
141305 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,141316
141310 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,141315
141315 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,141301:CD,141305:CD,141306:CD,141310:CD,141317:CF,141316
141316 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,141286
141317 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,141305
141323 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
141328 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,141315
141333 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
141338 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
141341 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
141346 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
141432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,141433:CD,141448:CD,141453:CD,141458:CD,141466:CD,141470:CD,141475:CD,141480:CD,141489:CD,141495:CD,141499:CD,141504:CD,141508:CD,141513:CD,141517:CD,141522:CD,141523:CD,141524:CD,141530:CD,141535:CD,141540:CD,141545:CD,141550
141433 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,124098
141448 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
141453 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,141522
141458 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
141463 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
141466 :: CALL :: call :: I :: v52 = v50.size()::
141470 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
141475 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
141480 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
141489 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,141285
141495 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,141508:CL,60270
141499 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,141508
141504 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,141508
141508 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,141523
141513 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,141522:CL,77704
141517 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,141522
141522 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,141504:CD,141508:CD,141513:CD,141517:CD,141524:CF,141523
141523 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,141433
141524 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,141508
141530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
141535 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,141522
141540 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
141545 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,141522
141550 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,141522
141579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,141580:CD,141584:CD,141591:CD,141600:CD,141605:CD,141609:CD,141613:CD,141618:CD,141619:CD,141621:CD,141626:CD,141631:CD,141639:CD,141644
141580 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,146643
141584 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,77704
141591 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
141600 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,141605
141606 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,141618
141605 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,141618
141609 :: CALL :: call :: I :: v31 = v28.intValue()::JM,141618
141613 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,141618
141618 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,141619
141619 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,141580
141621 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
141626 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
141631 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
141639 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
141636 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
141644 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
141663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,141668:CD,141673:JM,141684:JM,141738
141668 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,141673:CL,117198
141675 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,141684:CL,73938
141673 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,141675:CD,141679:CD,141684
141679 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,141684:JM,141738
141686 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,141689
141684 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,141689
141690 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,141697
141689 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,141693:CD,141697
141693 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,141697
141699 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,141744
141697 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,141702:CD,141740:CD,141744
141702 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,141744
141707 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,141744
141712 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,141720:CL,119890
141716 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,141720
141722 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,141727:CL,117198
141720 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,141722:CD,141727:CD,141740:CD,141744
141727 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,141729:CD,141733:CD,141738:CD,141740:CD,141744
141729 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,141738:CL,73938
141733 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,141738:JM,141684
141738 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,141740:CD,141744
141740 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,141744
141744 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,141707:CD,141712:CD,141716:CD,141720:JM,141744
141790 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
141793 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
141799 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,141800
141796 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
141800 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,157462
141868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,141876
141873 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
141876 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
141885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,141889:CD,141890:CD,141898:CD,141903:CD,141907:CD,141908:CD,141916:CD,141924:CD,141929:CD,141934:CD,141938:CD,141939:CD,141947:CD,141955:CD,141960:CD,141965:CD,141969:CD,141970:CD,141978:CD,141986:CD,141991:CD,141996:CD,142000:CD,142001:CD,142009:CD,142014:CD,142018:CD,142019:CD,142027:CD,142035:CD,142040:CD,142045:CD,142049:CD,142050:CD,142058:CD,142066:CD,142071:CD,142076:CD,142080:CD,142081:CD,142089:CD,142097:CD,142102:CD,142107:CD,142111:CD,142112:CD,142120:CD,142125
141890 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
141889 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
141898 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
141903 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
141907 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
141908 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
141916 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
141921 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
141924 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
141929 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
141934 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
141938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
141939 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
141947 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
141955 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
141952 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
141960 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
141965 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
141970 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
141969 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
141978 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
141983 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
141986 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
141991 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
141996 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
142000 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
142001 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
142009 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
142014 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
142018 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
142019 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
142027 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
142035 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
142032 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
142040 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
142045 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
142050 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
142049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
142058 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
142063 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
142066 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
142071 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
142076 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
142080 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
142081 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
142089 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
142094 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
142097 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
142102 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
142107 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
142111 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
142112 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
142120 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
142125 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
142182 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,125103
142181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,142182:CD,142185:CD,142190
142185 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,142190:CL,53038
142190 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142182
142194 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,125104
142193 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,142194:CD,142197:CD,142202
142197 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,142202:CL,53038
142202 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142194
142206 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,125256
142205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,142206:CD,142209:CD,142214
142209 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,142214:CL,53038
142214 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142206
142218 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,125257
142217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,142218:CD,142221:CD,142226
142221 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,142226:CL,53038
142226 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142218
142230 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,125476
142229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,142230:CD,142236
142233 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,142236
142238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,142239:CD,142245
142239 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,125605:JM,125614:JM,125619:JM,157473:JM,157535
142236 :: NORM :: compound :: Ljava/util/List :: return v3::CF,142230
142242 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,142245
142247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,142248:CD,142254:CD,142258
142245 :: NORM :: compound :: Ljava/util/List :: return v3::CF,142239
142251 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,142258
142248 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,125733:JM,125839
142254 :: CALL :: call :: I :: v5 = v3.size()::JM,142258
142258 :: NORM :: compound :: I :: return v5::CF,142248
142260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,142261:CD,142268:CD,142273:CD,142274
142261 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,145008
142265 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,142273
142268 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,142273
142274 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,142261
142273 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,142274
142287 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,157564
142291 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
142294 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
142297 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,142291:JM,142294:DD,142302
142302 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
142305 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,142291:JM,142294:DD,142310
142310 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
142313 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,142291:JM,142294:DD,142318
142318 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
142321 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,142291:JM,142294:DD,142326
142326 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
142329 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
142335 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,142291:JM,142294:DD,142339
142332 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
142339 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
142342 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,142291:JM,142294:DD,142346
142346 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
142349 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,142291:JM,142294:DD,142353
142353 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
142359 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,142360
142356 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,142359
142360 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,142364
142364 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
142402 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::
142401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CE,142402:CD,142405:CD,142409:CD,142417:CD,142422:CD,142427:CD,142431
142405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,142431
142409 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
142417 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::JM,142431:CL,157609
142422 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,142431
142427 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,142431
142431 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,142402
142436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,142441:CD,142446:CD,142450:CD,142458:CD,142463:CD,142471:CD,142476:CD,142481:CD,142486:CD,142491:CD,142496
142441 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,157609
142446 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
142450 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
142458 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
142463 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
142471 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
142468 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
142476 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
142481 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
142486 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
142491 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
142496 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
142515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,142521:CD,142528:CD,142533:CD,142537:CD,142542:CD,142546:CD,142580:CD,142584:CD,142588:CD,142592:CD,142593:CD,142594:CD,142595:CD,142597:CD,142607:CD,142609:CD,142617:CD,142622:CD,142630:CD,142635:CD,142647:CD,142648:CD,142649:CD,142663:CD,142664
142521 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,142647
142528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
142533 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,154868
142537 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
142542 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
142546 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
142580 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,154952
142584 :: CALL :: call :: Z :: v35 = v19.delete()::
142588 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,142592
142594 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,142595
142595 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,142663:CD,142596:CD,142664
142592 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,142593
142593 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,142594:DD,142596:DD,142663
142596 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,142663
142597 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,142647
142607 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
142609 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,142609
142617 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
142622 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
142630 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
142635 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
142647 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,142648
142648 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
142649 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
142663 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,142664:JM,142609
142664 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,142597
142732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,143235:CD,143239:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142743 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142750 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142748 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,142750:CD,142755:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142755 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,142756:CD,142760:CD,142765:CD,142769:CD,142773:CD,142777:CD,142781:CD,142786:CD,142791:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142756 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,143243
142760 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142765 :: CALL :: call :: V :: v68.setFormat(v72)::CL,157642
142769 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,143244
142773 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,143245
142777 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,143246
142781 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,143247
142786 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142791 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,142792:CD,142797:CD,142802:CD,142807:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142792 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142797 :: CALL :: call :: V :: v82.setDomainName(v88)::CL,157653
142802 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142807 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,142808:CD,142813:CD,142818:CD,142823:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142808 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142813 :: CALL :: call :: V :: v82.setVersion(v91)::CL,157664
142818 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142823 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,142824:CD,142834:CD,142851:CD,142856:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142824 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142834 :: CALL :: call :: V :: v82.setDate(v96)::CL,157675
142851 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142856 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,142857:CD,142862:CD,142868:CD,142873:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,143001:JM,142975:JM,142748
142857 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142862 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,143138:JM,142947:JM,143040:JM,143014:JM,142890:JM,143081:JM,143247:JM,142930:JM,142994:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975
142868 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142874 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142873 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,142874:CD,142879:CD,142885:CD,142890:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142879 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,143138:JM,142947:JM,143040:JM,143014:JM,142890:JM,143081:JM,143247:JM,142930:JM,142994:JM,142964:JM,142906:JM,143098:JM,143064:JM,143001:JM,142975
142885 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142890 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,142891:CD,142896:CD,142901:CD,142906:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142891 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142896 :: CALL :: call :: V :: v82.setCATH(v112)::CL,157686
142901 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142906 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,142907:CD,142912:CD,142916:CD,142920:CD,142925:CD,142930:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142907 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142912 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,143138:JM,142947:JM,143040:JM,143014:JM,143081:JM,143247:JM,142930:JM,142994:JM,142964:JM,143098:JM,143064:JM,143001:JM,142975
142916 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,143247
142920 :: CALL :: call :: V :: v82.setLength(v119)::CL,157776
142925 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142930 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,142931:CD,142936:CD,142942:CD,142947:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142931 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142936 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,142994:JM,143138:JM,142947:JM,143040:JM,143014:JM,142964:JM,143098:JM,143064:JM,143001:JM,143081:JM,142975:JM,143247
142942 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142947 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,142948:CD,142953:CD,142959:CD,142964:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142948 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142953 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,143247:JM,142994:JM,143138:JM,143040:JM,143014:JM,142964:JM,143098:JM,143064:JM,143001:JM,143081:JM,142975
142959 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142964 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,142965:CD,142970:CD,142975:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142748
142965 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,143248
142970 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142975 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,142976:CD,142980:CD,142984:CD,142989:CD,142994:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142976 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,143249
142980 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,143250
142984 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,143251
142989 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
142994 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,142995:CD,143001:CD,143002:CD,143008:CD,143014:CD,143015:CD,143021:CD,143025:CD,143030:CD,143035:CD,143040:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,142975:JM,142748
142995 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143002 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143001 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748:JM,143239
143008 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143014 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748:JM,143239
143015 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143021 :: CALL :: call :: V :: v138.setStart(v153)::CL,157796
143025 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143030 :: CALL :: call :: V :: v138.setStop(v156)::CL,157807
143035 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143040 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,143041:CD,143046:CD,143050:CD,143054:CD,143059:CD,143064:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,142873:JM,143001:JM,142975:JM,142748
143041 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143046 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,143138:JM,143098:JM,143064:JM,143081:JM,143247
143050 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
143054 :: CALL :: call :: V :: v138.setLength(v163)::CL,157818
143059 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143064 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,143065:CD,143070:CD,143076:CD,143081:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143065 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143070 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,143138:JM,143098:JM,143081:JM,143247
143076 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143082 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143081 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,143082:CD,143087:CD,143093:CD,143098:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143087 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,143138:JM,143098:JM,143247
143093 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143098 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,143099:CD,143104:CD,143108:CD,143112:CD,143116:CD,143120:CD,143124:CD,143128:CD,143133:CD,143138:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143099 :: CALL :: call :: Z :: v174 = v131.add(v138)::
143104 :: CALL :: call :: I :: v176 = v131.size()::
143108 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
143112 :: CALL :: call :: V :: v138.setSegmentId(v178)::CL,157829
143116 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
143120 :: CALL :: call :: V :: v138.setSequenceHeader(v181)::CL,157840
143124 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
143128 :: CALL :: call :: V :: v138.setSequence(v184)::CL,157851
143133 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143138 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,143243:CD,143139:CD,143143:CD,143147:CD,143151:CD,143155:CD,143159:CD,143163:CD,143167:CD,143171:CD,143175:CD,143179:CD,143188:CD,143193:CD,143217:CD,143229:CD,143242:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251
143139 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
143143 :: CALL :: call :: V :: v82.setName(v187)::CL,157862
143147 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
143151 :: CALL :: call :: V :: v82.setSource(v190)::CL,157873
143155 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
143159 :: CALL :: call :: V :: v82.setSequenceHeader(v193)::CL,157884
143163 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
143167 :: CALL :: call :: V :: v82.setSequence(v196)::CL,157895
143171 :: CALL :: call :: V :: v82.setSegments(v131)::CL,157906
143175 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,157917
143179 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
143188 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,143193
143193 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,143204:CD,143197:CD,143202:CD,143211:CD,143242
143197 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,143202
143202 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,143242
143204 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,143242
143211 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
143217 :: CALL :: call :: Z :: v218 = v216.add(v82)::
143229 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
143235 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748
143239 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,142743:CD,142748:CD,143235:CD,143243:CD,143244:CD,143245:CD,143246:CD,143247:CD,143248:CD,143249:CD,143250:CD,143251:JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975
143242 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
143243 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,143244:DD,143243
143246 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,143247:DD,143246
143247 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,143248:DD,143247
143244 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,143245:DD,143244
143245 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,143246:DD,143245
143250 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,143251:DD,143250
143251 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,143138:JM,142755:JM,142947:JM,143040:JM,143014:JM,143239:JM,142791:JM,142823:JM,142890:JM,142856:JM,143081:JM,143247:JM,142930:JM,142994:JM,142807:JM,142964:JM,142906:JM,143098:JM,143064:JM,142873:JM,143001:JM,142975:JM,142748:DD,143251
143248 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,143249:DD,143248
143249 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,143250:DD,143249
143460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,143461:CD,143464:CD,143468:CD,143473:CD,143477
143461 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,126026
143464 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,158004
143468 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
143473 :: CALL :: call :: Z :: v8 = v5.exists()::JM,143477
143477 :: NORM :: compound :: Z :: return v8::DD,143461
143484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,143489:CD,143498:CD,143502:CD,143507
143489 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,142436
143498 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,158004
143502 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
143507 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,142515
143527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,143531:CD,143532:CD,143544:CD,143545:CD,143559
143531 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
143532 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,158004
143544 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,143545
143545 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
143559 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,158039
143576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CE,143577:CD,143580:CD,143584:CD,143592:CD,143597:CD,143602:CD,143606
143577 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::
143580 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,143606
143584 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
143592 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::JM,143606:CL,157609
143597 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,143606
143602 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,143606
143606 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,143577
143611 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,144147:CD,144151:JM,143622:JM,143628
143617 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,143622:JM,144151:JM,143628
143622 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,143624:CD,143628:JM,143622:JM,144151
143624 :: CALL :: call :: I :: v12 = v5.length()::JM,143622:JM,144151:JM,143628
143630 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
143628 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,143630:CD,143643:CD,143648:CD,143652:CD,143660:CD,143665:CD,143669:CD,143978:CD,143982:CD,143986:CD,144162:CD,144163
143639 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,143683:JM,143982
143643 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,143683:JM,143982
143648 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,143683:JM,143982
143652 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,143683:JM,143982
143656 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,144137
143660 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,144137
143665 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,144137
143669 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,144137
143674 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,143750
143679 :: CALL :: call :: I :: v40 = v24.intValue()::JM,143683:JM,143982
143683 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,143740:CF,143684:CD,143685:CD,143693:CD,143698:CD,143705:CD,143710:CD,143711:CD,143741:CD,143749:CD,143750:CD,143755:CD,143760:CD,143767:CD,143772:CD,144153
143684 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
143685 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
143693 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
143698 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
143705 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,143710
143710 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,143711:DD,144153
143711 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,144153:CF,143712:CD,143713:CD,143721:CD,143726:CD,143733:CD,143738
143712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
143713 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
143721 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
143726 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
143733 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,143738
143738 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,144153
143740 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
143741 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
143750 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,143750
143749 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,143750
143755 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
143760 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
143767 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,143772
143772 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,144153
143773 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,143974:JM,143790:JM,143965
143777 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,143974:JM,143790:JM,143965
143781 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,143974:JM,143790:JM,143965
143786 :: CALL :: call :: I :: v90 = v87.intValue()::JM,143974:JM,143790:JM,143965
143785 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,143794:CD,143786:CD,143790:CD,143791:CD,143792:CD,143795:CD,143961:CD,143965:CD,143966:CD,143970:CD,143974:CD,143975:CD,143976:CD,144156:CD,144157:CD,144158:CD,144159:CD,144160:CD,144161
143790 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,143791
143791 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,143792
143794 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,143974:JM,143790:JM,143965
143795 :: CALL :: call :: I :: v96 = v87.intValue()::JM,143974:JM,143790:JM,143965
143792 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,144160
143804 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
143808 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
143812 :: CALL :: call :: V :: v100.setSegmentId(v103)::CL,157829
143818 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,143945
143816 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,143817
143817 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
143822 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,143945
143826 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,143945
143830 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,143831
143831 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
143832 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,143841:DD,144154
143836 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,143841
143843 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
143841 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,144154
143847 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
143852 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
143857 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
143861 :: CALL :: call :: V :: v100.setStart(v127)::CL,157796
143866 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
143867 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,143940
143865 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,143866
143871 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,143940
143875 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,143940
143879 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,143880
143880 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
143881 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,143890:DD,144155
143885 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,143890
143890 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,144155
143892 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
143896 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
143901 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
143906 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
143910 :: CALL :: call :: V :: v100.setStart(v151)::CL,157796
143914 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
143918 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
143923 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
143928 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
143932 :: CALL :: call :: V :: v100.setStop(v160)::CL,157807
143936 :: CALL :: call :: I :: v163 = v136.intValue()::JM,143940
143940 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,143945
143941 :: CALL :: call :: I :: v166 = v111.intValue()::JM,143945
143946 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
143945 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
143950 :: CALL :: call :: V :: v100.setLength(v169)::CL,157818
143954 :: CALL :: call :: Z :: v172 = v94.add(v100)::
143959 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,144157:CF,143960
143960 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,144159:CF,144156
143961 :: CALL :: call :: I :: v99 = v87.intValue()::JM,143974:JM,143790:JM,143965
143966 :: CALL :: call :: V :: v82.setSegments(v94)::CL,157906
143965 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,143804:CD,143808:CD,143812:CD,143816:CD,143817:CD,143822:CD,143826:CD,143830:CD,143831:CD,143836:CD,143841:CD,143843:CD,143847:CD,143852:CD,143857:CD,143861:CD,143865:CD,143866:CD,143871:CD,143875:CD,143879:CD,143880:CD,143885:CD,143890:CD,143892:CD,143896:CD,143901:CD,143906:CD,143910:CD,143914:CD,143918:CD,143923:CD,143928:CD,143932:CD,143936:CD,143940:CD,143941:CD,143945:CD,143946:CD,143950:CD,143954:CD,143959:CD,143960:CD,143961:CD,144154:CD,144155:CD,144156:CD,144157:CD,144158:CD,144159
143970 :: CALL :: call :: I :: v179 = v87.intValue()::JM,143974:JM,143790:JM,143965
143974 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,143975
143975 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,143976
143978 :: CALL :: call :: I :: v35 = v24.intValue()::JM,143683:JM,143982
143976 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,144160
143977 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,144163:CF,144162
143982 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,143674:CD,143679:CD,143683:CD,143777:CD,143781:CD,143785:CD,143977:CD,143978:CD,144153:CD,144160:CD,144161:CD,144162:CD,144163
143983 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,143986
143986 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,143987:CD,143988:CD,144133:CD,144137:CD,144141:CD,144166:CD,144167:JM,143622:JM,144151:JM,143628
143987 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,144137
143988 :: CALL :: call :: I :: v193 = v32.intValue()::JM,144137
143997 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
144001 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
144010 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
144009 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
144014 :: CALL :: call :: I :: v205 = parseInt(v203)::
144018 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
144022 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
144023 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,144032:DD,144164
144027 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,144032
144034 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
144032 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,144164
144038 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
144043 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
144048 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
144056 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
144057 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
144061 :: CALL :: call :: I :: v225 = parseInt(v223)::
144065 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
144070 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,144079:DD,144165
144069 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
144074 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,144079
144079 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,144165
144081 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
144085 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
144090 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
144095 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
144108 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
144114 :: CALL :: call :: I :: v248 = parseInt(v246)::
144118 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
144126 :: CALL :: call :: Z :: v253 = v191.add(v197)::
144131 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,144166:CF,144132
144132 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,144167:CF,144166
144133 :: CALL :: call :: I :: v196 = v32.intValue()::JM,144137
144137 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,143997:CD,144001:CD,144009:CD,144014:CD,144018:CD,144022:CD,144027:CD,144032:CD,144034:CD,144038:CD,144043:CD,144048:CD,144056:CD,144061:CD,144065:CD,144069:CD,144074:CD,144079:CD,144081:CD,144085:CD,144090:CD,144095:CD,144108:CD,144114:CD,144118:CD,144126:CD,144131:CD,144132:CD,144133:CD,144164:CD,144165:CD,144166:CD,144167
144141 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
144147 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,143622:JM,144151:JM,143628
144151 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,143617:CD,143622:CD,144147:JM,144151:JM,143628
144154 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,143843
144155 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,143892
144153 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,143785
144158 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,144159:DD,144158:DD,144161
144159 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,143960:DD,143965:JM,143974:JM,143790
144156 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,144157:DD,143816:DD,143830:DD,143865:DD,143879:DD,143976:DD,144156
144157 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,144158:DD,143816:DD,143830:DD,143865:DD,143879:DD,143959
144162 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,144163:DD,143792:DD,144156:DD,144166
144163 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,143749:DD,143982:DD,144158:DD,144161:JM,143683
144160 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,144161:DD,144162
144161 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,143977
144166 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,144167:DD,144009:DD,144022:DD,144056:DD,144069:DD,144131
144167 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,144132:DD,144137
144164 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,144034
144165 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,144081
144377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,144400
144397 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,144400
144400 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,144467:CD,144471:CD,144475
144467 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,144471:CL,158209
144471 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,144472
144475 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,158477
144472 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,158296
144532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,144533:CD,144536:CD,144538:CD,144542:CD,144543:CD,144551:CD,144556:CD,144558:CD,144565:CD,144566
144533 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,126820
144538 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,144551:JM,144538:JM,144556
144536 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,144551:JM,144538:JM,144556
144542 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,144551:JM,144556
144543 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
144551 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,144551:JM,144556
144558 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
144556 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,144565
144566 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
144565 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,144533
144606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,144616:CD,144617:CD,144622:CD,144627:CD,144636:CD,144641:CD,144646:CD,144647:CD,144652:CD,144657:CD,144662
144616 :: NORM :: declaration :: Ljava/io/IOException :: v28 = new java.io.IOException::
144617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
144622 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
144627 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
144636 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,103718
144641 :: CALL :: call :: Z :: v10 = v8.exists()::
144646 :: NORM :: declaration :: Ljava/io/IOException :: v16 = new java.io.IOException::
144647 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
144652 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
144657 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
144662 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
144694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getStructure(java.io.InputStream)::JM,99769:JM,99792:JM,99799:JM,52046:CD,144717:CD,144724:CD,144728:CD,144729:CD,144738
144717 :: CALL :: call :: V :: v8.setFileParsingParameters(v10)::CL,99807
144724 :: CALL :: call :: V :: v4.addMMcifConsumer(v12)::CL,99818
144728 :: NORM :: declaration :: Ljava/io/BufferedReader :: v14 = new java.io.BufferedReader::CF,144729
144729 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v15 = new java.io.InputStreamReader::
144738 :: CALL :: call :: V :: v4.parse(v14)::CL,99835
144766 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,127058:JM,127500:JM,148004:JM,148392
144765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,144766:CD,144789:CD,144793:CD,144795:JM,144786:JM,144776
144771 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,144786:JM,144776:JM,144793
144776 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,144787
144777 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,144786:CL,77766
144781 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,144786:JM,144776:JM,144793
144786 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,144787:CD,144788:CD,144789:CD,144793:CD,144795
144787 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,144766
144788 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,144795
144789 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,144786:JM,144776:JM,144793
144794 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,144766
144795 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,144786:JM,144776:DD,144788:DD,144793
144793 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,144771:CD,144776:CD,144777:CD,144781:CD,144786:CD,144794:JM,144793
144810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,144818:CD,144839:CD,144843:JM,144837
144815 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,144843
144818 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,144843
144823 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,144843
144828 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,144837:CL,77766
144832 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,144837
144839 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,144843
144837 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,144839:CD,144843
144843 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,144844:CD,144823:CD,144828:CD,144832:CD,144837:JM,101666:JM,101654:JM,101673:JM,101659:CD,144848:CD,144855:JM,144843
144844 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
144848 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,101697
144855 :: CALL :: call :: Z :: v22 = v20.add(v17)::
144852 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
144879 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,101666:JM,101654:JM,101673:JM,101659:CD,144891:CD,144899:CD,144906:CD,144913:CD,144920:CD,144943:CD,144947:CD,144951
144891 :: CALL :: call :: V :: v3.setChainID(v6)::CL,101697
144899 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,139306
144906 :: CALL :: call :: V :: v3.setCompound(v11)::CL,116451
144913 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,145972
144917 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,144947
144920 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,144947
144925 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,144947
144930 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,52556:CL,52698:CL,52873
144935 :: CALL :: call :: V :: v3.addGroup(v26)::CL,101844
144939 :: CALL :: call :: V :: v26.setChain(v3)::CL,106357
144943 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,144947
144947 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,144925:CD,144930:CD,144935:CD,144939:CD,144943:JM,144947
144951 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,144952:CD,144959:CD,144998:CD,145002:CD,145003
144948 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,144951
144952 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
144959 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,145002
144956 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,145002
144964 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,145002
144972 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,144977:CL,158568
144978 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,145008:CL,142260
144977 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,144978:CD,144984:CD,144988:CD,145008
144984 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,144988:CL,52556:CL,52698:CL,52873
144988 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,145008
144989 :: CALL :: call :: V :: v50.setChain(v3)::CL,106357
144993 :: CALL :: call :: Z :: v53 = v31.add(v50)::
144998 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,145002
145002 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,144964:CD,144972:CD,144977:CD,144989:CD,144993:CD,144998:CD,145008:JM,145002
145003 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,101786
145008 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
145060 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,145061:CD,145065:JM,101666:JM,101654:JM,101673:JM,101659:CD,145069:CD,145073:CD,145146:CD,145150:CD,145151:CD,145152
145061 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
145065 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,145151
145069 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,145150:CL,60270
145073 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,145150
145078 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,145150
145083 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,145152
145114 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,145115:CD,145120:CD,145121
145115 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,145120:CL,44027
145120 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,145121:CD,145128:CD,145133:CD,145138
145121 :: CALL :: call :: V :: v4.addGroup(v16)::CL,101844
145128 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
145133 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
145138 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
145146 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,145150
145150 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,145078:CD,145083:JM,105813:JM,105816:JM,105819:CD,145114:CD,145146:CD,145152:JM,145150:CF,145151
145151 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,145061
145152 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,145150:DD,145114
145181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,145186:CD,145190:CD,145206:CD,145214:CD,145346:CD,145350:CD,145354:CD,145436:CD,145440:CD,145444:CD,145526:CD,145530:CD,145534:CD,145539:CD,145592:JM,145458:JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145368:JM,145228:JM,145372
145186 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,145186:JM,145458:JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145592:JM,145368:JM,145228:JM,145372
145190 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145592:JM,145372
145206 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,145248:JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311:CL,158616
145211 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,145350:JM,145223
145214 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,145350:JM,145223
145219 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,145350:JM,145223
145223 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,145232:JM,145237:JM,145224:JM,145324
145224 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,145232:JM,145237:JM,145224
145228 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,145186:JM,145458:JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145368:JM,145592:JM,145228:JM,145372
145232 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,145232:JM,145237:JM,145377:JM,145462:JM,145467:JM,145592:JM,145372
145237 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,145242:CD,145247
145242 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,145247:CL,158676
145247 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,145248:JM,145350:JM,145223
145248 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,145249:CD,145253:CD,145258:JM,145478:JM,145479:JM,145316:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311:JM,145350:JM,145223
145249 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145253 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145258 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,145259:CD,145269:CD,145276:CD,145282:CD,145297:CD,145301:CD,145306:JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145307:JM,145311
145259 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,158716
145269 :: CALL :: call :: V :: v53.setMolName(v55)::CL,139952
145276 :: CALL :: call :: V :: v57.addCompound(v53)::CL,158806
145282 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
145297 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145301 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145306 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,145307:CD,145311:CD,145316:JM,145249:JM,145478:JM,145479:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145350:JM,145223
145307 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145311 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145319 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
145316 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,145319:CD,145324:CD,145328:CD,145333:CD,145338:JM,145350:JM,145223
145324 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,145324
145328 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
145333 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
145338 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
145346 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,145350:JM,145223
145350 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,145219:CD,145223:CD,145224:CD,145228:CD,145232:CD,145237:CD,145346:JM,145350
145351 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,145363:JM,145440
145354 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,145363:JM,145440
145359 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,145363:JM,145440
145363 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,145377:JM,145364:JM,145372
145364 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,145377:JM,145364:JM,145372
145368 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,145186:JM,145458:JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145368:JM,145592:JM,145228:JM,145372
145372 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,145377:JM,145372:JM,145232:JM,145462:JM,145237:JM,145467:JM,145592
145377 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,145382:CD,145387
145382 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,145387:CL,158676
145387 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,145388:JM,145363:JM,145440
145388 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,145389:CD,145393:CD,145398:JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145548:JM,145549:JM,145488:JM,145297:JM,145553:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311:JM,145363:JM,145440
145389 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145393 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145398 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,145399:CD,145409:CD,145416:CD,145422:JM,145363:JM,145440
145399 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,158832
145409 :: CALL :: call :: V :: v103.setMolName(v105)::CL,139952
145416 :: CALL :: call :: V :: v107.addCompound(v103)::CL,158806
145422 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
145436 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,145363:JM,145440
145440 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,145359:CD,145363:CD,145364:CD,145368:CD,145372:CD,145377:CD,145436:JM,145440
145441 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,145530:JM,145453
145444 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,145530:JM,145453
145449 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,145530:JM,145453
145454 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,145462:JM,145467:JM,145454
145453 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,145462:JM,145467:JM,145454
145458 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,145186:JM,145458:JM,145232:JM,145377:JM,145462:JM,145237:JM,145467:JM,145368:JM,145592:JM,145228:JM,145372
145462 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,145462:JM,145467:JM,145232:JM,145377:JM,145237:JM,145592:JM,145372
145467 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,145472:CD,145477
145472 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,145477:CL,158676
145478 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,145479:CD,145483:CD,145488:JM,145249:JM,145316:JM,145253:JM,145258:JM,145548:JM,145389:JM,145549:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311:JM,145530:JM,145453
145479 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,145249:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145477 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,145478:JM,145530:JM,145453
145483 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145488 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,145489:CD,145499:CD,145506:CD,145512:JM,145530:JM,145453
145489 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,158902
145499 :: CALL :: call :: V :: v138.setMolName(v140)::CL,139952
145506 :: CALL :: call :: V :: v142.addCompound(v138)::CL,158806
145512 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
145526 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,145530:JM,145453
145530 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,145449:CD,145453:CD,145454:CD,145458:CD,145462:CD,145467:CD,145526:JM,145530
145534 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,145539:CL,158676
145539 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,108791:JM,108798:CD,145544:CD,145548
145544 :: CALL :: call :: V :: v153.setMolId(v16)::CL,124065
145548 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,145549:CD,145553:CD,145558:JM,145249:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145389:JM,145488:JM,145297:JM,145393:JM,145398:JM,145301:JM,145306:JM,145307:JM,145311
145549 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,145249:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311
145553 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,145488:JM,145393:JM,145553:JM,145398:JM,145558:JM,145316:JM,145253:JM,145301:JM,145258:JM,145306:JM,145483:JM,145311
145558 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,145563:CD,145570
145563 :: CALL :: call :: V :: v153.setMolName(v161)::CL,139952
145570 :: CALL :: call :: V :: v163.addCompound(v153)::CL,158806
145592 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
145721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,145881:CD,145885:CD,145895
145735 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,60253
145743 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,145876
145740 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,145876
145748 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,145876
145753 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,145758:CL,123504
145758 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,145771:CD,145797:CD,145801:CD,145805:CD,145863:CD,145867:CD,145868:CD,145887:CD,145888:CD,145892:CD,145893:CD,145894
145771 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,145867
145776 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,60270
145780 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
145786 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,145790:CL,52556:CL,52698:CL,52873
145790 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
145791 :: CALL :: call :: Z :: v44 = v29.add(v42)::
145796 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,145888:CF,145887
145797 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,145805:CL,60270
145801 :: CALL :: call :: I :: v34 = v32.size()::JM,145805
145807 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
145805 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,145776:CD,145780:CD,145786:CD,145790:CD,145791:CD,145796:CD,145797:CD,145801:CD,145887:CD,145888
145813 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,145826:JM,145856:CL,60270
145817 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,145826:JM,145856
145822 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,145826:JM,145856
145826 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
145827 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,145844:CL,158952
145836 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,145844:CL,156440
145840 :: CALL :: call :: I :: v69 = v67.intValue()::JM,145844
145844 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,145889:CD,145845:CD,145852:CD,145856:CD,145890:CD,145891
145845 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
145852 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,145826:JM,145856
145858 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,60626
145856 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,145891:CD,145822:CD,145826:CD,145827:CD,145836:CD,145840:CD,145844:CD,145889:CD,145890:JM,145856
145857 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,145858:CF,145862
145862 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,145893:CF,145892
145863 :: CALL :: call :: I :: v49 = v29.size()::JM,145867
145867 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,145807:CD,145813:CD,145817:CD,145852:CD,145856:CD,145857:CD,145862:CD,145863:CD,145889:CD,145890:CD,145891:CD,145892:CD,145893
145868 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,101786
145872 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,145876
145876 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,145748:CD,145753:CD,145758:CD,145872:CD,145894:JM,145876:CF,145877
145877 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,145895
145881 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,145885:CL,102086
145887 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,145888:DD,145887:DD,145892
145885 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,145735:CD,145743:CD,145872:CD,145876:CD,145877:CD,145881:CD,145894:CD,145895
145890 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,145826:JM,145856:DD,145862:DD,145890
145891 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,145857
145888 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,145796:DD,145805
145889 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,145890:DD,145889:DD,145892
145894 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,145876:DD,145877:DD,145887:DD,145894
145895 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,145885:DD,145894
145892 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,145893:DD,145889:DD,145894
145893 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,145867:DD,145890
145963 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,145964:CD,145970
145967 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,145970
145964 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,127335:JM,146059:JM,146384
145970 :: NORM :: compound :: Z :: return v3::CF,145964
145972 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,145977
145977 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
145983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,145999:CD,146005
145999 :: CALL :: call :: V :: v3.makeBonds()::CL,111874
146005 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,159044
146017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,146024
146024 :: CALL :: call :: V :: addCharges(v3)::CL,111895
146029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,146202:CD,146206:CD,146210:CD,146214:CD,146255:CD,146259:CD,146263
146037 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,146197:CL,60253
146042 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,146197
146047 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,146197
146055 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,146059:CL,145963
146059 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,146067:CD,146072:CD,146081:CD,146086:CD,146261
146067 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,146072
146072 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,146261
146081 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,146086
146086 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,146261
146087 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,146100:CD,146107:CD,146112:CD,146262
146100 :: CALL :: call :: I :: v40 = parseInt(v32)::
146107 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,146112:CL,158676
146115 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
146112 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,146115:JM,108791:JM,108798:CD,146133:CD,146137:CD,146141:CD,146148:CD,146172:CD,146185:CD,146189:CD,146262
146133 :: CALL :: call :: V :: v51.setMolId(v40)::CL,124065
146137 :: CALL :: call :: V :: v51.addChain(v16)::CL,124003
146141 :: CALL :: call :: V :: v16.setCompound(v51)::CL,116451
146148 :: CALL :: call :: V :: v56.addCompound(v51)::CL,158806
146172 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
146185 :: CALL :: call :: V :: v43.addChain(v16)::CL,124003
146189 :: CALL :: call :: V :: v16.setCompound(v43)::CL,116451
146193 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,146197
146198 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,146263
146197 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,146047:CD,146055:CD,146059:CD,146087:CD,146193:CD,146261:CD,146262:JM,146197:CF,146198
146202 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,146206:CL,102086
146206 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,146037:CD,146042:CD,146193:CD,146197:CD,146198:CD,146202:CD,146262:CD,146263
146210 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,146259:CL,100949
146214 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,146259
146219 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,146259
146255 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,146259
146259 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,146219:CD,146255:JM,146259
146262 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,146197:DD,146198:DD,146262
146263 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,146206:DD,146262
146261 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,146087
146339 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,146346:CD,146350:CD,146358:CD,146456:CD,146461:CD,146466:CD,146471:CD,146482:CD,146487:CD,146491:CD,146496:CD,146501:CD,146505:CD,146510:CD,146623:CD,146627:CD,146631:CD,146637:CD,146638
146346 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,146350:JM,146638:CL,101077
146350 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,146638:CF,146351
146351 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,146638
146355 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,146627:JM,146367
146358 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,146627:JM,146367
146363 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,146627:JM,146367
146367 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,146368:JM,146372:JM,146639:JM,146576:JM,146373:JM,146571:JM,146640:JM,146385:JM,146390:JM,146394:JM,146402:JM,146403:JM,146641:JM,146408:JM,146398
146368 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,146368:JM,146372:JM,146639
146372 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,146639
146373 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,146576:JM,146373:JM,146571
146380 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,146384:CL,145963
146384 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,146385:CD,146390:CD,146640
146385 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,146640:JM,146385
146390 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,146640:JM,146390
146394 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,146394
146398 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,146402:JM,146403:JM,146641:JM,146408:JM,146398
146402 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,146641:CD,146403:CD,146408
146403 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,146403:JM,146641:JM,146408
146408 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,146641
146412 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,146417:CL,124020
146418 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,146419:CD,146423
146419 :: CALL :: call :: I :: v45 = v40.length()::JM,146419:JM,146423
146417 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,146643:CD,146418:CD,146434:CD,146438:JM,105813:JM,105816:JM,105819:CD,146448
146423 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,146424:CD,146429
146424 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,146424
146429 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
146434 :: CALL :: call :: I :: v53 = parseInt(v34)::
146438 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
146448 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,146643:CL,141579
146456 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
146461 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
146466 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
146471 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
146482 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
146487 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
146491 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
146496 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
146501 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
146505 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
146510 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
146523 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,146524:CD,146544:CD,146548:CD,146549:CD,146558:CD,146562:CD,146567:CD,146571:CD,146576:CD,146617:CD,146644:CD,146645:CD,146646:CD,146647:JM,146533:JM,146627:JM,146367
146524 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,146548:JM,146533
146529 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,146548:JM,146533
146534 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,146543:CL,120236
146533 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,146644
146538 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,146543
146543 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,146644
146544 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,146548:JM,146533
146550 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,146645
146548 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,146529:CD,146533:CD,146534:CD,146538:CD,146543:CD,146544:CD,146644:JM,146548:CF,146549
146549 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,146645:CD,146550:JM,159689:CD,146554
146554 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,159712
146558 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,146562:JM,146647:CL,124103
146562 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,146647:CF,146563
146563 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,146647
146567 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,146576:JM,146571:CL,60637
146571 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,146576:JM,146571
146579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
146576 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,146579:CD,146584:CD,146589:CD,146594:CD,146599:CD,146608:CD,146613
146584 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
146589 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
146594 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
146599 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
146608 :: CALL :: call :: Z :: v139 = v119.add(v94)::
146613 :: CALL :: call :: V :: v113.setGroups(v119)::CL,159723
146618 :: CALL :: call :: Z :: v142 = v9.add(v113)::
146617 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,146618:JM,146627:JM,146367
146623 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,146627:JM,146367
146627 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,146363:CD,146367:CD,146368:CD,146372:CD,146373:CD,146380:CD,146384:CD,146394:CD,146398:CD,146402:CD,146412:CD,146417:CD,146523:CD,146623:CD,146639:CD,146640:CD,146641:CD,146643:JM,146627
146631 :: CALL :: call :: V :: v143.setSites(v9)::CL,101086
146638 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,146548:JM,146533
146639 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,146576:JM,146373:JM,146571:JM,146543
146637 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
146643 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,146523
146640 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,146394
146641 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,146418:JM,146419:JM,146423:JM,146424
146646 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,146617
146647 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
146644 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,146548:JM,146533:DD,146549:DD,146644:DD,146645
146645 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,146646
146757 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
146764 :: CALL :: call :: V :: p0 $this .init()::CL,159734
146772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,146779:CD,146785:CD,146835:CD,146839:CD,146844:CD,146853:CD,146858:CD,146863
146779 :: CALL :: call :: V :: p0 $this .init()::CL,159734
146785 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,146839
146790 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,146839
146795 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
146803 :: CALL :: call :: V :: v15.setId(v18)::CL,139844
146827 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
146830 :: CALL :: call :: Z :: v30 = v28.add(v15)::
146835 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,146839
146839 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,146790:CD,146795:JM,139717:CD,146803:CD,146830:CD,146835:JM,146839
146844 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,159759
146853 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,159925
146858 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
146863 :: CALL :: call :: V :: v34.trimToSize()::
146896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,146900:CD,146907:CD,147135:CD,147140:CD,147141:CD,147150:CD,147154:CD,147155:CD,147159
146900 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,147159:JM,147171
146907 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,147154:JM,146916
146904 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,147154:JM,146916
146912 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,147154:JM,146916
146916 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,146917:JM,146921:JM,146926:JM,147140
146917 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,146917:JM,146921:JM,146926
146921 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,146921:JM,146926
146926 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,146928:CD,147124
146928 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
147124 :: CALL :: call :: Z :: v91 = v3.add(v19)::
147135 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,147140
147132 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,147140
147140 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
147141 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
147150 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,147154:JM,146916
147154 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,146912:CD,146916:CD,146917:CD,146921:CD,146926:CD,147150:JM,147154:JM,147159
147155 :: CALL :: call :: I :: v104 = v3.size()::JM,147159
147159 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,147167:CD,147171:CD,147172:CD,147178
147167 :: CALL :: call :: I :: v109 = v3.size()::JM,147171
147171 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
147172 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
147178 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,111614
147270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,147277
147274 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,147277
147277 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,147285:CD,147289:CD,147303
147285 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,147289:CL,160132
147289 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,147297
147297 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,160141
147303 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,160235
147332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,147337
147337 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
147343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,147348
147348 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
147354 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,147359
147359 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
147365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,147370
147370 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
147376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,147381
147381 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
147387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,147392
147392 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
147398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,147403
147403 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
147410 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,128952
147409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,147410:CD,147413:CD,147417:CD,147418:CD,147419:CD,147443:CD,147444:CD,147449:CD,147450:CD,147452:CD,147453
147413 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,147419:JM,147417
147418 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,147444:JM,147449:CF,147419
147419 :: EXPR :: assign :: I :: v8 = v4.length::DD,147443
147417 :: EXPR :: assign :: I :: v5 = v4.length::CF,147418
147421 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,147430:JM,147435
147430 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,147430:JM,147435
147429 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,147430:JM,147435
147435 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,147436
147436 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,147451:CD,147441
147442 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,147453:CF,147452
147443 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,147429:CD,147430:CD,147435:CD,147436:CD,147442:CD,147451:CD,147452:CD,147453:JM,147444:JM,147449
147441 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,147451
147444 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,147444:JM,147449
147450 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,147410
147451 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,147452:CF,147442
147449 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,147450
147452 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,147453:DD,147441:JM,147444:JM,147449:DD,147451
147453 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,147442:DD,147443
147586 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,147594:CD,147599:CD,147604:CD,147609:CD,147613:CD,147618:CD,147623:CD,147628:CD,147633:CD,147637:CD,147638:CD,147646:CD,147651:CD,147655:CD,147660:CD,147664:CD,147669:CD,147696:JM,147675:JM,147676
147594 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
147599 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147604 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,147669:JM,147675
147609 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147613 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
147618 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
147623 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147628 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,147669:JM,147675
147633 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
147638 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
147637 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
147646 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
147651 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147655 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
147660 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
147664 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147670 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,147651:JM,147696:JM,147669:JM,147675:JM,147609:JM,147676
147669 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,147670:CD,147675:JM,147651:JM,147696:JM,147669:JM,147609:JM,147676
147675 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,147676
147676 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,147677
147677 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
147696 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,147697
147697 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
147736 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,147755
147755 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
147752 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
147779 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,147787:CD,147791:JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147787 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,147791:CL,97711
147791 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,147793:CD,147797:CD,147801:CD,147805:CD,147809:CD,147817:CD,147822:CD,147843:CD,147847:CD,147852:CD,147862:CD,147866:CD,147871:CD,147878:CD,147885:CD,147890:CD,147940:CD,147969:CD,147973:CD,147978:JM,105813:JM,105816:JM,105819:CD,148075:CD,148101:CD,148127:CD,148131:CD,148135:CD,148139:CD,148170:CD,148175:CD,148305:CD,148309:CD,148391:CD,148393:CD,148394:CD,148395:JM,147853:JM,148310:JM,148314:JM,148319:JM,148320:JM,147879:JM,148324:JM,148329:JM,148014:JM,148140:JM,147891:JM,148158
147793 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147797 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147801 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147805 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147809 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,147890:JM,148394:JM,148139:JM,148329:JM,148158:JM,148319:JM,147852
147817 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147822 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,147823:CD,147828:CD,147832
147823 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,103501
147828 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,147832:CL,103501
147832 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,147833
147833 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
147843 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147847 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147852 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,147853:CD,147858:JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147853 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147858 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,147890:JM,148394:JM,148139:JM,148329:JM,148158:JM,148319
147862 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147866 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147871 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
147875 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,147878
147878 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
147879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
147882 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,147890:JM,147885
147885 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,147890:JM,147885:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147853:JM,147891:JM,148314:JM,148158:JM,148319
147890 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,147897:CD,147920:CD,147924
147891 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
147894 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,147897
147897 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,147904:CD,147911
147904 :: CALL :: call :: V :: v59.addGroup(v60)::CL,101844
147911 :: CALL :: call :: V :: v62.trimToSize()::CL,106002
147920 :: CALL :: call :: V :: v64.addModel(v65)::CL,101097
147924 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,147928
147931 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
147928 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
147934 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
147937 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,147940
147940 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,148391:CD,147941:JM,101666:JM,101654:JM,101673:JM,101659:CD,147951:CD,147961
147941 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,147945
147945 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
147951 :: CALL :: call :: V :: v72.setChainID(v9)::CL,101697
147955 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
147958 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
147961 :: CALL :: call :: Z :: v77 = v74.add(v75)::
147969 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,147973:JM,147978:CL,77766
147973 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
147978 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,148393:CD,147985:CD,147999:CD,148004:CD,148023:CD,148048:CD,148053:CD,148392
147985 :: CALL :: call :: V :: v85.addGroup(v86)::CL,101844
147999 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,148004:JM,148392:CL,144765
148004 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,148005:CD,148009:CD,148014:CD,148018:CD,148392
148005 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,148014:CL,77766
148009 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,148014:JM,147879:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,147891:JM,148314:JM,148158:JM,148319
148014 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,148392:CD,148018
148018 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,148392:CL,144765
148023 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,148024:JM,101666:JM,101654:JM,101673:JM,101659:CD,148034
148024 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,148028
148028 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
148034 :: CALL :: call :: V :: v104.setChainID(v9)::CL,101697
148039 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
148042 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,148053
148045 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,148053
148048 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,148053
148054 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
148053 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,148393:CD,148060
148057 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
148060 :: CALL :: call :: Z :: v113 = v110.add(v111)::
148075 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,148076:CD,148090:CD,148097:CF,148101
148072 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,148075
148076 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148084:CL,160555
148084 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
148090 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,60626
148097 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,61059:CL,60646
148102 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148110:CL,160555
148101 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,148102:CD,148116:CD,148123:JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148110 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
148116 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,60626
148123 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,61059:CL,60646
148127 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148131 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,148394
148135 :: CALL :: call :: I :: v136 = v131.length()::JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,148314:JM,148158:JM,148319
148139 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,148394:CD,148140:CD,148145:CD,148149:CD,148153:CD,148158:JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,147852:JM,147885:JM,147853:JM,147890:JM,148314:JM,148319
148140 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,148314:JM,148158:JM,148319
148145 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,148394:JM,148329:JM,148158:JM,148319
148149 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,148158
148153 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,148394:JM,148158
148158 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,148394:CD,148159
148159 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,148394
148170 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,148175:CL,44027
148175 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,148182:CD,148189:CD,148192:CD,148206:CD,148213:CD,148218:CD,148222:CD,148227:CD,148395
148182 :: CALL :: call :: V :: v187.addGroup(v188)::CL,101844
148189 :: CALL :: call :: V :: v190.trimToSize()::CL,106002
148192 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148200:CL,160555
148200 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
148206 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,61059:CL,60646
148213 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,60626
148218 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,148227
148222 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,148227
148227 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,148395:CD,148228:CD,148232:CD,148237
148228 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,148237
148232 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,148237
148237 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,148395:CD,148240:CD,148245:CD,148250:CD,148258:CD,148263:CD,148268:CD,148273:CD,148281:CD,148290:CD,148294
148240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
148245 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
148250 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
148258 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
148263 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
148268 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
148273 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
148281 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,148395:CL,160765
148290 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,148294:CL,54975
148294 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,148395:CD,148298
148298 :: CALL :: call :: V :: v182.setChain(v185)::CL,106357
148305 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,148309:CL,91122
148310 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148309 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,148310:CD,148314:CD,148319:CD,148342:CD,148348:CD,148353:CD,148373:CD,148378:JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,147797:JM,147801:JM,147871:JM,148127:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148314 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,148314:JM,148158:JM,148319
148319 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,148320:CD,148324:CD,148329:JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,147879:JM,148135:JM,148394:JM,148139:JM,147817:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148320 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,147843:JM,147847:JM,147973:JM,147978:JM,147852:JM,147853:JM,147793:JM,147862:JM,148310:JM,147797:JM,148314:JM,147801:JM,147871:JM,148127:JM,148319:JM,148320:JM,147879:JM,148135:JM,148324:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147885:JM,147890:JM,147891:JM,148158
148324 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,148135:JM,147847:JM,148324:JM,147973:JM,147978:JM,148394:JM,148139:JM,147817:JM,148329:JM,148014:JM,147822:JM,148140:JM,147852:JM,147885:JM,147853:JM,147890:JM,148314:JM,148158:JM,148319
148329 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,148342:CD,148348:CD,148353:CD,148373:CD,148378
148342 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
148348 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,161014
148354 :: CALL :: call :: V :: v198.addAtom(v220)::CL,60796
148353 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,148354:CD,148362
148362 :: CALL :: call :: V :: v221.addAtom(v220)::CL,60796
148373 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,148378:CL,60371
148378 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,148382
148382 :: CALL :: call :: V :: v230.addAtom(v220)::CL,60796
148391 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,148393
148394 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,148227:JM,148237
148395 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,148353
148392 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,148023:DD,148039
148393 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,148101
148614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,148630:CD,148634:CD,148639:CD,148643:CD,148648:CD,148728
148630 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,148634:CL,100823
148634 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452
148639 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,148643:JM,148648:JM,148639
148643 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,148643:JM,148648
148648 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,148658:CD,148683:CD,148709
148658 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,106565
148683 :: CALL :: call :: V :: v14.setModDate(v48)::CL,107659
148709 :: CALL :: call :: V :: v14.setModDate(v24)::CL,107659
148728 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,100832
148773 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,148781:CD,148785:CD,148797:CD,148801:CD,148810:CD,148817
148781 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,148785:CL,100823
148785 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452:CD,148793
148793 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,100832
148797 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,148801:JM,148817:CL,161228
148802 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,148817
148801 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,148817:CF,148802:CD,148806
148806 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,161237
148810 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
148817 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
148847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,148852:CD,148856:CD,148861:CD,148890:CD,148895:CD,148900:JM,148866:JM,148871:JM,148862
148852 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,148866:JM,148871:JM,148852:JM,148856:JM,148862:JM,148861
148856 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,148866:JM,148871:JM,148856:JM,148861
148862 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,148866:JM,148871:JM,148852:JM,148856:JM,148862:JM,148861
148861 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,148862:CD,148866:CD,148871:JM,148852:JM,148856:JM,148861
148866 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,148866:JM,148871:JM,148856:JM,148861
148871 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,148916
148890 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
148895 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,148866:JM,148871:JM,148856:JM,148861
148900 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
148916 :: CALL :: call :: V :: v36.setResolution(v23)::CL,107562
148948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,148964
148964 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,106627
148989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,149047:CD,149052:CD,149057:CD,149062:CD,149067:CD,149072:CD,149076:CD,149080:CD,149120:CD,149126:CD,149131:CD,149135:CD,149140:CD,149145:CD,149154
149047 :: CALL :: call :: V :: v28.setA(v30)::CL,106680
149052 :: CALL :: call :: V :: v28.setB(v32)::CL,106691
149057 :: CALL :: call :: V :: v28.setC(v34)::CL,106702
149062 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,106713
149067 :: CALL :: call :: V :: v28.setBeta(v38)::CL,106733
149072 :: CALL :: call :: V :: v28.setGamma(v40)::CL,106753
149076 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,149080:CL,106773
149083 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,149083
149080 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,149083:CD,149104
149104 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,106808
149120 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,106808
149126 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
149131 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
149135 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
149140 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
149145 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
149154 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
149188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,149193:CD,149197:CD,149201
149193 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,149193
149197 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,149201:CL,106819
149201 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,149204:CD,149209:CD,149214:CD,149219:CD,149238:CD,149254:CD,149269
149204 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
149209 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
149214 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
149219 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
149238 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,106898
149254 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,106909
149269 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,106898
149297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,149305
149302 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
149305 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
149320 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,149325:CD,149467
149325 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,149441
149441 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
149467 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,160235
149500 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,149518
149515 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
149518 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
149541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,149546:CD,149554:CD,149562:CD,149570:CD,149578:CD,149586:CD,149591:CD,149643:CD,149647:CD,149651:CD,149655:CD,149659:CD,149660:CD,149664:CD,149673:CD,149674:CD,149678:CD,149687:CD,149691:CD,149696:CD,149700:CD,149705:CD,149713:CD,149717:CD,149725:CD,149729:CD,149733:CD,149737:CD,149741:CD,149745:CD,149746:CD,149750:CD,149759:CD,149760:CD,149764:CD,149773:CD,149777:CD,149782:CD,149786:CD,149791:CD,149799:CD,149803:CD,149811:CD,149818:CD,149822:CD,149827:CD,149834:CD,149845:CD,149854:JM,149599
149546 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
149554 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,107699
149562 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,107822
149570 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,107833
149578 :: CALL :: call :: V :: v4.setChainId(v16)::CL,107710
149586 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,149591:CL,161257
149591 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,149594:CD,149599:CD,149603:CD,149608:CD,149613:CD,149618:CD,149631:CD,149639
149594 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
149599 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149603 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149608 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,149745:JM,149659:JM,149673:JM,149759
149613 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
149618 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
149631 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,107811
149639 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,107833
149643 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149647 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149651 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149655 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149659 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,149745:JM,149659:JM,149673:JM,149759:JM,149691:JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149678:JM,149746:JM,149651:JM,149750:JM,149599:JM,149660
149660 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149664 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149674 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149673 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,149745:JM,149659:JM,149673:JM,149759:JM,149700:JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149678:JM,149746:JM,149651:JM,149750:JM,149599:JM,149660
149678 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149687 :: CALL :: call :: C :: v67 = v53.charValue()::JM,149691
149691 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,149692
149692 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
149696 :: CALL :: call :: C :: v74 = v60.charValue()::JM,149700
149700 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,149701
149701 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
149705 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,107767
149713 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,107778
149717 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,107789
149725 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,107800
149729 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149733 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149737 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149741 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149746 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149745 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,149745:JM,149659:JM,149673:JM,149759:JM,149777:JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149678:JM,149746:JM,149651:JM,149750:JM,149599:JM,149660
149750 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149759 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,149745:JM,149659:JM,149673:JM,149759:JM,149786:JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149678:JM,149746:JM,149651:JM,149750:JM,149599:JM,149660
149760 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,149760:JM,149664:JM,149729:JM,149764:JM,149674:JM,149643:JM,149737:JM,149673:JM,149678:JM,149746:JM,149651:JM,149745:JM,149750:JM,149659:JM,149599:JM,149759:JM,149660
149764 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,149664:JM,149745:JM,149750:JM,149764:JM,149659:JM,149673:JM,149678:JM,149759
149773 :: CALL :: call :: C :: v107 = v94.charValue()::JM,149777
149778 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
149777 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,149778
149782 :: CALL :: call :: C :: v112 = v100.charValue()::JM,149786
149786 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,149787
149787 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
149791 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,107844
149799 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,107855
149803 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,107866
149811 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,107877
149818 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,149822:JM,149854:CL,100853
149822 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,149854:CF,149823
149823 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,149854
149827 :: CALL :: call :: Z :: v131 = v129.add(v4)::
149834 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,161303
149845 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,100862
149854 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
149943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,149951
149951 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
149948 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
149972 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,149980
149977 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
149980 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
149995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,150003:CD,150007:JM,150035:JM,150044
150003 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,150007:CL,97711
150007 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,150012:CD,150016:CD,150021:CD,150045:CD,150049:CD,150050:CD,150059:CD,150067:CD,150071:CD,150080:CD,150085:CD,150086:CD,150087:CD,150088
150012 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,150016:JM,150085:CL,101077
150016 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,150085:CF,150017
150017 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,150085
150021 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,150049:JM,150030
150026 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,150049:JM,150030
150030 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,150086
150031 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,150044:CL,120236
150035 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,150035:JM,150044
150039 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,150044
150044 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,150086
150045 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,150049:JM,150030
150050 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,150087:CF,150051:JM,159689:CD,150088
150051 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,150087
150049 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,150026:CD,150030:CD,150031:CD,150035:CD,150039:CD,150044:CD,150045:CD,150086:JM,150049:CF,150050
150059 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,159712
150067 :: CALL :: call :: V :: v32.setDescription(v38)::CL,120301
150071 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,150072
150072 :: CALL :: call :: Z :: v41 = v14.add(v32)::
150080 :: CALL :: call :: V :: v42.setSites(v14)::CL,101086
150086 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,150049:JM,150030:DD,150050:DD,150086:DD,150087
150087 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,150088
150085 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,150049:JM,150030
150088 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,150071
150126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,150133:CD,150138:CD,150143:CD,150151:CD,150155:CD,150162:CD,150167:CD,150171:CD,150176:CD,150184:CD,150189:CD,150353:JM,150259:JM,150263:JM,150197:JM,150255
150133 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
150138 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
150143 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
150151 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,150259:JM,150151:JM,150263:JM,150197:JM,150255
150155 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,150259:JM,150263
150162 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
150167 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
150171 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
150176 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
150184 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,150189:CL,158616
150189 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,150192:CD,150197:CD,150201:CD,150206:CD,150211:CD,150224:CD,150233:CD,150237:CD,150332:CD,150336:CD,150344:CD,150348
150192 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
150197 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,150259:JM,150151:JM,150263:JM,150197:JM,150255
150201 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,150259:JM,150263
150206 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,150263
150211 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
150224 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,144810
150233 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,150247:JM,150237:CL,119578
150238 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,103352
150237 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,150238:CD,150242:CD,150246:CD,150255:CD,150259:CD,150263:JM,150151:JM,150197
150242 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,150246:CL,119811
150246 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,150247:CD,150248:CD,150255:CD,150259:CD,150263:JM,150151:JM,150197
150247 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,150248
150250 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,61090
150248 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,150250
150255 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,150259:JM,150151:JM,150263:JM,150197:JM,150255
150259 :: CALL :: call :: I :: v51 = v49.length()::JM,150259:JM,150263
150263 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,150268:CD,150272:CD,150298:CD,150302
150268 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,150272:CL,103501
150272 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,150277:CD,150285:CD,150289:CD,150298:CD,150302
150277 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,61090
150285 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,103501
150289 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,61079
150298 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,150302:CL,103516
150302 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,60550:JM,60566:JM,60568:JM,60570:JM,60543
150332 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,126852
150336 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,60626
150344 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,61059:CL,60646
150348 :: CALL :: call :: V :: v38.addGroup(v84)::CL,101844
150353 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
150431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,150439
150439 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
150436 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
150448 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,150456
150453 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
150456 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
150477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,150485
150482 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
150485 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
150500 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,150508
150505 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
150508 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
150523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,150535:CD,150540:JM,150546:JM,150542
150535 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,150540
150542 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,150546:JM,150542
150540 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,150542:CD,150546
150546 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,150558:CD,150576
150558 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
150576 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
150596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,150608:CD,150613:JM,150615:JM,150619
150608 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,150613
150615 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,150615:JM,150619
150613 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,150615:CD,150619
150619 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,150631:CD,150649
150631 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
150649 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
150693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,150701:CD,150705:CD,150714:CD,150722
150701 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,150705:CL,100823
150705 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,83445:JM,83412:JM,83428:JM,83420:JM,83452
150714 :: CALL :: call :: V :: v10.setDescription(v12)::CL,100938
150722 :: CALL :: call :: V :: v10.setClassification(v15)::CL,106554
150737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,150749:CD,150753:CD,150754:CD,150793:CD,150800:CD,150805:CD,150809:CD,150814:CD,150819:CD,150823:CD,150828:CD,150836:CD,150840:CD,150841:CD,150872:CD,150876:CD,150909
150749 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,150753:CL,107553
150754 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,150762:CD,150766:CD,150774
150753 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,150754
150762 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,150766:CL,107553
150766 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,150766
150774 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
150793 :: CALL :: call :: V :: v6.setResolution(v29)::CL,107562
150800 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
150805 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,150872:JM,150876
150809 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,150876
150814 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
150819 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
150823 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
150828 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
150836 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,150840:CL,161325
150840 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,150841
150841 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,150849:CD,150853:CD,150861:JM,150872:JM,150876
150849 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,150853:CL,161325
150853 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,150853
150861 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
150872 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,150872:JM,150876
150876 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,150892
150892 :: CALL :: call :: V :: v6.setRfree(v73)::CL,111625
150909 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
150947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,150952:CD,150956:CD,150977:CD,150987:JM,150981
150952 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,150977:JM,150981:JM,150952:JM,150956
150959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
150956 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,150959:CD,150964:CD,150969:JM,150977:JM,150981:JM,150952:JM,150956
150964 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
150969 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
150977 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,150977:JM,150981:JM,150952:JM,150956
150981 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
150987 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,161334
151038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,151043:CD,151047:CD,151051:CD,151055:CD,151059:CD,151082:CD,151083:CD,151087:CD,151092:CD,151104:CD,151108:CD,151151:CD,151152
151043 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,151043:JM,151059:JM,151055
151047 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
151051 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
151055 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,151059:JM,151055
151059 :: EXPR :: assign :: I :: v13 = v12.length::DD,151082
151061 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,151065:DD,151067
151067 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,151069:CD,151150
151065 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,151067:CD,151150
151070 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
151069 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,151070:CD,151076:CD,151150
151076 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
151082 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,151083:CD,151065:CD,151081:CD,151150:CD,151151:CD,151152
151083 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
151081 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,151152:CF,151151
151087 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
151092 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
151104 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,151108:CL,106587
151108 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,151118:CD,151109:CD,151113:CD,151119:CD,151127:CD,151132:CD,151136:CD,151141:CD,151145
151109 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
151113 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,106596
151118 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
151119 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
151127 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
151132 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
151136 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
151141 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
151145 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,106596
151150 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,151151:CF,151081
151151 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,151152:DD,151069:DD,151150
151152 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,151081:DD,151082
151216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,151227
151227 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153480
151254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,151262
151259 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
151262 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
151283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,151291
151291 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
151288 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
151300 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,151308
151305 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
151308 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
151329 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,151340
151340 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153480
151365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,151376
151376 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153480
151425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,151433
151430 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
151433 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
151507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::CE,151508:CD,151514:CD,151518:CD,151523:CD,151569:CD,151574:CD,151579:CD,151584:CD,151589:CD,151627:CD,151632:CD,151637:CD,151642:CD,151647:JM,151549
151508 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::JM,130713
151514 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $pdbId .toLowerCase()::JM,151518:JM,151549
151518 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p4 $provider .getAsymUnit(v7)::JM,151518:JM,151549
151523 :: PRED :: IF :: Z :: if (p2 $biolAssemblyNr  != #(0)) goto 52::CD,151526:CD,151531:CD,151536:CD,151541:CD,151549:JM,146757:JM,146764:CD,151660:CD,151666
151526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
151531 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(v7)::JM,151518:JM,151549
151536 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#(, returning asymmetri...))::
151541 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
151549 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v9::DD,151508
151569 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
151574 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(p2 $biolAssemblyNr )::
151579 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(#( of ))::
151584 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v7)::JM,151518:JM,151549
151589 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
151627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
151632 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p2 $biolAssemblyNr )::
151637 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#( of ))::
151642 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v45.append(v7)::JM,151518:JM,151549
151647 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::
151660 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v36 = v33.rebuildQuaternaryStructure(v9, v29)::JM,151666:CL,161427
151666 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v36::DD,151508
151695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,151696:CD,151700:CD,151706
151696 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
151700 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,151706:CL,101255
151706 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,151696
151712 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,151713:CD,151716:CD,151720:CD,151745:CD,151749
151713 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,130830:JM,131951
151716 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,151749:CL,60270
151720 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,151749
151725 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,151749
151730 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,151736:CL,60355:CL,60363:CL,60347
151734 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,151736
151736 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,151737:CD,151741:CD,151743:CD,151744
151737 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,151743:CL,60355:CL,60363:CL,60347
151743 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,151744:CD,151745:CD,151749
151741 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,151743
151744 :: NORM :: compound :: Z :: return #(0)::DD,151713
151745 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,151749
151750 :: NORM :: compound :: Z :: return #(1)::DD,151713
151749 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,151725:CD,151730:CD,151734:CD,151736:CD,151750:JM,151749
151763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,151764:CD,151769:CD,151980:CD,151984:CD,151985:CD,151989:CD,151997:CD,151998:JM,151779:JM,151904
151764 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,156475:JM,156479:JM,156480:JM,156484
151769 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,151989
151774 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,151779:JM,151984
151779 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,151780
151783 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,151990:JM,151791:CL,61070
151780 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,151781
151781 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,151783:CD,151787:CD,151791:CD,151792:CD,151796:CD,151800:CD,151806:CD,151811:CD,151813:CD,151817:CD,151990:CD,151995:CD,151996
151787 :: CALL :: call :: C :: v18 = v16.charValue()::JM,151990:JM,151791
151791 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,151990
151792 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
151796 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
151800 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
151806 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
151811 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,151995
151813 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,151817:CL,156423
151819 :: CALL :: call :: I :: v35 = v12.size()::JM,151823:CL,117185
151817 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,151819:CD,151823:CD,151995:CD,151996
151823 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,151824:CD,151829:CD,151841:CD,151845
151824 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,151829:CL,117198
151829 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,151835:CD,151839:CD,151995:CD,151996
151835 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,151839:CL,161644
151839 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,151841:CD,151845:CD,151995:CD,151996
151841 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,151845:CL,103352
151845 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,151848:CD,151858:CD,151860:CD,151864:CD,151869:CD,151995:CD,151996
151848 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,73959:CL,74149:CL,74247
151858 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,151864:JM,151869
151860 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,151864:JM,151869:CL,161657
151864 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,151864:JM,151869
151869 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,151876:CD,151881:CD,151894:CD,151898:CD,151903:CD,151918:CD,151922:CD,151962:CD,151966:CD,151991:CD,151992:CD,151993:CD,151994:CD,151995:CD,151996
151876 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,151881
151881 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,151888:CD,151893:CD,151894:CD,151898:CD,151903:CD,151918:CD,151922:CD,151962:CD,151966:CD,151991:CD,151992:CD,151993:CD,151994:CD,151995:CD,151996
151888 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,151893
151894 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,151991:JM,151903:CL,103412
151893 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,151894:CD,151898:CD,151903:CD,151918:CD,151922:CD,151962:CD,151966:CD,151970:CD,151991:CD,151992:CD,151993:CD,151994:CD,151995:CD,151996
151898 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,151991:JM,151903
151903 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,151991:CD,151904
151904 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,151911:CD,151916:CD,151991
151911 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,151916
151918 :: CALL :: call :: I :: v79 = v77.length()::JM,151922
151916 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,151991
151922 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,151925
151925 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,73959:CL,74149:CL,74247
151936 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
151940 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
151944 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
151950 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
151955 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
151962 :: CALL :: call :: I :: v86 = v77.length()::JM,151966
151960 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,151992:CF,151961
151961 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,151994:CF,151992
151966 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,151936:CD,151940:CD,151944:CD,151950:CD,151955:CD,151960:CD,151961:CD,151962:CD,151992:CD,151993:CD,151994
151970 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,73959:CL,74149:CL,74247
151979 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,151998:CF,151997
151980 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,151779:JM,151984
151984 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,151774:CD,151779:CD,151780:CD,151781:CD,151979:CD,151980:CD,151995:CD,151996:CD,151997:CD,151998:JM,151984:JM,151989
151985 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,151989
151990 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
151991 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,151922:JM,151966
151989 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,151764
151994 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,151961:DD,151966
151995 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,151996:DD,151997
151992 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,151993:DD,151960:DD,151995
151993 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,151994:DD,151993:DD,151996
151998 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,151779:DD,151984:DD,151993:DD,151996
151996 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,151979
151997 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,151998:DD,151811:DD,151992:DD,151995
152094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,152095:CF,152105:CD,152106
152095 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,130950:JM,130956
152106 :: NORM :: compound :: Z :: return #(1)::CF,152095
152105 :: NORM :: compound :: Z :: return #(0)::CF,152095
152110 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,152111:CF,152128:CD,152115:CD,152120
152111 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,131552:JM,130967:JM,131553:JM,130971
152115 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,152120
152120 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,152111
152128 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,152111
152135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,152136:CD,152141:CD,152144:CD,152150:CD,152151:CD,152159:CD,152163
152136 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,131554
152141 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,152163:JM,152151:JM,152159
152144 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152163:JM,152151:JM,152159
152150 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152163:JM,152151:JM,152159:JM,152141
152151 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152163:JM,152151:JM,152159:JM,152141
152159 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152163:JM,152151:JM,152159
152163 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152136
152175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,152176:CF,152186:CD,152187
152176 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,130987:JM,130993
152186 :: NORM :: compound :: Z :: return #(0)::CF,152176
152187 :: NORM :: compound :: Z :: return #(1)::CF,152176
152191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,152192:CF,152209:CD,152196:CD,152201
152192 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,131552:JM,131004:JM,131008:JM,131553
152196 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,152201
152201 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,152192
152209 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,152192
152216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,152217:CD,152222:CD,152225:CD,152231:CD,152232:CD,152240:CD,152244
152217 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,131554
152222 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,152240:JM,152244:JM,152232
152225 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152240:JM,152244:JM,152232
152231 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152240:JM,152244:JM,152232:JM,152222
152232 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152240:JM,152244:JM,152232:JM,152222
152240 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152240:JM,152244:JM,152232
152244 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152217
152256 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,152257:CF,152267:CD,152268
152257 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,131024:JM,131030
152267 :: NORM :: compound :: Z :: return #(0)::CF,152257
152268 :: NORM :: compound :: Z :: return #(1)::CF,152257
152272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,152273:CF,152290:CD,152277:CD,152282
152273 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,131041:JM,131552:JM,131553:JM,131045
152277 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,152282
152282 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,152273
152290 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,152273
152298 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,131554
152297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,152298:CD,152303:CD,152306:CD,152312:CD,152313:CD,152321:CD,152325
152303 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,152321:JM,152325:JM,152313
152306 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152321:JM,152325:JM,152313
152312 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152321:JM,152325:JM,152313:JM,152303
152313 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152321:JM,152325:JM,152313:JM,152303
152321 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152321:JM,152325:JM,152313
152325 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152298
152338 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131079
152337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152342:JM,152347:CF,152338:CD,152350:CD,152354:CD,152355:CD,152357:CD,152358
152342 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,152354:JM,152342:JM,152347:JM,152350
152347 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,152356:CD,152348
152350 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152354:JM,152342:JM,152347:JM,152350
152348 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,152356
152349 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,152358:CF,152357
152354 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,152342:CD,152347:CD,152349:CD,152350:CD,152356:CD,152357:CD,152358:JM,152354:CF,152355
152355 :: NORM :: compound :: I :: return v12::CF,152338
152358 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,152342:JM,152347:JM,152350:DD,152349:DD,152354
152356 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,152357:CF,152349
152357 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,152358:DD,152348:DD,152355:DD,152356
152374 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131087
152373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152378:JM,152383:CF,152374:CD,152396:CD,152400:CD,152401:CD,152403:CD,152404
152378 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,152400:JM,152378:JM,152383:JM,152396
152383 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,152384:JM,152388:JM,152393
152384 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,152384:JM,152388:JM,152393
152388 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,152388:JM,152393
152394 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,152402
152395 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,152404:CF,152403
152393 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,152402:CD,152394
152396 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152400:JM,152378:JM,152383:JM,152396
152402 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,152403:CF,152395
152403 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,152404:DD,152394:DD,152401:DD,152402
152400 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,152378:CD,152383:CD,152384:CD,152388:CD,152393:CD,152395:CD,152396:CD,152402:CD,152403:CD,152404:JM,152400:CF,152401
152401 :: NORM :: compound :: I :: return v18::CF,152374
152404 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,152378:JM,152383:JM,152396:DD,152395:DD,152400
152420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152425:JM,152430:CF,152421:CD,152443:CD,152447:CD,152448:CD,152450:CD,152451
152421 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131090
152425 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,152443:JM,152425:JM,152430:JM,152447
152430 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,152435:JM,152440:JM,152431
152431 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,152435:JM,152440:JM,152431
152435 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,152435:JM,152440
152442 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,152451:CF,152450
152443 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152443:JM,152425:JM,152430:JM,152447
152440 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,152449:CD,152441
152441 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,152449
152447 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,152425:CD,152430:CD,152431:CD,152435:CD,152440:CD,152442:CD,152443:CD,152449:CD,152450:CD,152451:JM,152447:CF,152448
152450 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,152451:DD,152441:DD,152448:DD,152449
152451 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,152443:JM,152425:JM,152430:DD,152442:DD,152447
152448 :: NORM :: compound :: I :: return v18::CF,152421
152449 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,152450:CF,152442
152491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,152496:CD,152500:CD,152504
152496 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,152506:JM,152504:CL,161666
152500 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,152504:CL,161666
152506 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,152509:CD,152517:CD,152674
152504 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,152506:CD,152522:CD,152605:CD,152609:CD,152674
152509 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,152674:CL,64975
152517 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,152674:CL,64975
152522 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,152609
152527 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,152609
152536 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,141579
152541 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,152554:CL,60637
152545 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,152554:CL,60637
152549 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,152554
152554 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,152605:CD,152609
152605 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,152609
152609 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,152527:CD,152536:CD,152541:CD,152545:CD,152549:CD,152554:JM,152609
152674 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,152609
152762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArrayCopy()::CE,152763:CD,152772:CD,152803:CD,152804:CD,152807
152763 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArrayCopy()::
152766 :: EXPR :: reference :: I :: v3 = p0 $this .m::DD,152772
152769 :: EXPR :: reference :: I :: v4 = p0 $this .n::DD,152772
152775 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v5[v18]::
152772 :: NORM :: declaration :: [[D :: v5 = new [][]::DD,152804
152779 :: EXPR :: reference :: [[D :: v10 = p0 $this .A::
152782 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v18]::
152786 :: EXPR :: reference :: D :: v12 = v11[v15]::DD,152790
152790 :: EXPR :: modify :: D :: v9[v15] = v12::
152794 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,152806:CF,152805
152795 :: EXPR :: reference :: I :: v8 = p0 $this .n::DD,152798
152798 :: PRED :: IF :: Z :: if (v15 < v8) goto 25::CD,152794:CD,152805:CD,152806:CF,152799
152799 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,152807
152803 :: PRED :: IF :: Z :: if (v17 < v7) goto 20::CD,152798:CD,152799:CD,152805:CD,152806:CD,152807:CF,152804
152800 :: EXPR :: reference :: I :: v7 = p0 $this .m::DD,152803
152806 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,152794:DD,152798
152807 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,152803:DD,152805
152804 :: NORM :: compound :: [[D :: return v5::DD,152763
152805 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,152806:DD,152799:DD,152805
152830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Maths.hypot(double,double)::JM,152871:JM,152858:JM,152856:JM,152846:JM,152860:JM,152845:JM,152861:CF,152831:CD,152835:CD,152839:CD,152843:CD,152844:CD,152873:CD,152874
152831 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Maths.hypot(double,double)::JM,132245:JM,132486:JM,133264:JM,133259:JM,133260:JM,133408:JM,133403:JM,133404:JM,133665:JM,133662:JM,133661:JM,133815:JM,133816:JM,133820
152835 :: CALL :: call :: D :: v5 = abs(p1 $a )::JM,152835:JM,152839:JM,152871:JM,152858:JM,152843:JM,152856:JM,152846:JM,152860:JM,152861:JM,152845
152839 :: CALL :: call :: D :: v7 = abs(p2 $null )::JM,152835:JM,152839:JM,152871:JM,152858:JM,152843:JM,152856:JM,152846:JM,152860:JM,152845:JM,152861
152843 :: EXPR :: assign :: Z :: v8 = v5 < v7::DD,152844
152846 :: CALL :: call :: D :: v23 = abs(p1 $a )::JM,152835:JM,152839:JM,152871:JM,152858:JM,152843:JM,152856:JM,152846:JM,152860:JM,152845:JM,152861
152844 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 39::CD,152845:CD,152846:CD,152850:CD,152851:CD,152852:CD,152856:CD,152858:CD,152859:CD,152874
152845 :: EXPR :: assign :: Ljava/lang/Object :: v21 = p2 $null  / p1 $a ::DD,152850:JM,152835:JM,152839:JM,152871:JM,152858:JM,152843:JM,152856:JM,152846:JM,152860:JM,152845:JM,152861
152850 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v21 * v21::CF,152851
152851 :: EXPR :: assign :: Ljava/lang/Object :: v25 = #(1.0 d) + v24::JM,152852:JM,152856
152852 :: CALL :: call :: D :: v27 = sqrt(v25)::JM,152852:JM,152856
152858 :: EXPR :: assign :: Z :: v11 = p2 $null  < #(0.0 d)::DD,152859
152859 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 73::CD,152860:CD,152861:CD,152865:CD,152866:CD,152867:CD,152871:CD,152874
152856 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v23 * v27::DD,152874
152860 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p1 $a  / p2 $null ::DD,152865:JM,152835:JM,152839:JM,152871:JM,152843:JM,152856:JM,152846:JM,152861
152861 :: CALL :: call :: D :: v14 = abs(p2 $null )::JM,152835:JM,152839:JM,152871:JM,152843:JM,152856:JM,152846:JM,152861
152866 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(1.0 d) + v16::JM,152867:JM,152871
152867 :: CALL :: call :: D :: v19 = sqrt(v17)::JM,152867:JM,152871
152865 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v12 * v12::CF,152866
152871 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 * v19::DD,152874
152874 :: EXPR :: assign :: null :: PHI v29 = v28, v20, #(0.0 d)::CF,152873
152873 :: NORM :: compound :: D :: return v29::CF,152831
152899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,152900:CD,152903:CD,152907:CD,152912:CD,152916
152903 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,153320
152900 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,136274:JM,136282
152907 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
152912 :: CALL :: call :: Z :: v8 = v5.exists()::JM,152916
152916 :: NORM :: compound :: Z :: return v8::DD,152900
152923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,152930
152927 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,152930
152930 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,152932:CD,152933:CD,152940:CD,152946:CD,152950
152932 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
152933 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
152940 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
152946 :: CALL :: call :: Z :: v13 = v9.exists()::JM,152950
152950 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,152951:CD,152960:CD,152965:CD,152966
152951 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,161683
152960 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,152965
152966 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,152967
152967 :: CALL :: call :: V :: p0 $this .split()::CL,161956
152965 :: EXPR :: assign :: I :: v18 = v17.length::DD,152966
153012 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,153013:CD,153016:CD,153020:CD,153025:CD,153030:CD,153034:CD,153051:CD,153052:CD,153057:CD,153062:CD,153067:CD,153073:CD,153078:CD,153083:CD,153091:CD,153096:CD,153100:CD,153115:CD,153116:CD,153134:CD,153138:CD,153139:CD,153142:CD,153148:CD,153152:CD,153165:CD,153199:CD,153202:CD,153207:CD,153211:CD,153216:CD,153221:CD,153226:CD,153231:CD,153235:CD,153240:CD,153248:CD,153252:CD,153257:CD,153262
153013 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,136414
153016 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,153320
153020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
153025 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
153030 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
153034 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
153051 :: NORM :: compound :: Z :: return #(0)::DD,153013
153052 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
153057 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
153062 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
153067 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
153073 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
153078 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
153083 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
153091 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,153262
153096 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,162184
153100 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,153152
153115 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,153138:DD,153142:CF,153116
153116 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
153130 :: CALL :: call :: V :: v47.println(v60)::
153134 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,153138
153138 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,153130:CD,153134
153139 :: CALL :: call :: V :: v47.flush()::
153142 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,153143:CF,153152
153143 :: CALL :: call :: V :: v53.close()::
153148 :: CALL :: call :: V :: v53.close()::
153152 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,153153
153153 :: CALL :: call :: V :: v47.close()::
153165 :: CALL :: call :: V :: v47.close()::
153199 :: NORM :: compound :: Z :: return #(1)::DD,153013
153202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
153207 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
153211 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
153216 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
153221 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
153226 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
153231 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
153235 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
153240 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
153248 :: CALL :: call :: Z :: v113 = v14.delete()::
153252 :: NORM :: compound :: Z :: return #(0)::DD,153013
153257 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
153262 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
153320 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,153321:CD,153324:CD,153326:CD,153331:CD,153346:CD,153348:CD,153349:CD,153356:CD,153360:CD,153393:CD,153394:CD,153395:CD,153403:CD,153408:CD,153417:CD,153421
153321 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
153326 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,153331
153324 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,153331
153331 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,153332:CD,153337:CD,153342
153332 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
153337 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,153331
153342 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
153346 :: CALL :: call :: V :: initPath()::CL,45735
153348 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
153349 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
153356 :: CALL :: call :: Z :: v21 = v16.exists()::JM,153360
153363 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
153360 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,153393:CD,153363:CD,153368:CD,153373:CD,153381
153368 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
153373 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
153381 :: CALL :: call :: Z :: v32 = v16.mkdir()::
153394 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
153395 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
153393 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,153421:CF,153394
153403 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
153408 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
153417 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,153421
153421 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,153321
153460 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,153464
153464 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
153480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,153481:CD,153488:CD,153493:CD,153494
153481 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,136348:JM,153644
153488 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,153493
153494 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,153481
153493 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,153494
153514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,153515:CD,153519:CD,153523:CD,153531:CD,153536:CD,153541:CD,153546:CD,153550:CD,153557:CD,153562:CD,153567:CD,153572:CD,153580:CD,153673:CD,153676:CD,153680
153515 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,136408
153519 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
153523 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
153531 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
153536 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
153541 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
153546 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
153550 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,153580
153557 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
153562 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
153567 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
153572 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
153580 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,153588:CD,153591:CD,153599:JM,99769:JM,162290:JM,153460:JM,162276:JM,162283:CD,153608:CD,153612:CD,153613:CD,153627:CD,153635:CD,153644
153591 :: CALL :: call :: V :: v55.setId(v7)::CL,162380
153588 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,153599:CL,162341
153599 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,153515
153608 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,99818
153612 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,153613
153613 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
153627 :: CALL :: call :: V :: v34.parse(v39)::CL,99835
153635 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,153644:CL,153480
153644 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,153515
153673 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,153680:CL,162341
153676 :: CALL :: call :: V :: v73.setId(v7)::CL,162380
153680 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,153515
153734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,153735:CD,153738:CD,153739:CD,153744:CD,153748:CD,153772:CD,153783:CD,153788:CD,153844:CD,153845:CD,153849:CD,153850:CD,153855:CD,153951:CD,153965:CD,153968:CD,153982:CD,153985:CD,153999:CD,154006:CD,154007
153735 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,136519:JM,136524:JM,137392:JM,137386:JM,137481
153738 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,153856:DD,154000:CF,153739
153739 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
153744 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,153744:JM,153748
153748 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,153761
153761 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
153772 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
153783 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,154006
153788 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,153844
153794 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,153813:JM,154005:JM,153805
153798 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,153805
153800 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,153805:JM,153813:JM,154005
153806 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,153813
153805 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,153820:CD,153806:CD,153808:CD,153813:CD,153814:CD,153821:CD,153829:CD,153834:CD,153839:CD,154005
153808 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,153813:JM,154005:JM,153805
153814 :: CALL :: call :: Z :: v38 = v3.add(v36)::
153813 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
153820 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,154005
153821 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
153829 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,154005:JM,153813:JM,153805
153834 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,154005
153839 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,154005
153843 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,154007:CF,154006
153844 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,153794:CD,153798:CD,153800:CD,153805:CD,153843:CD,154005:CD,154006:CD,154007:JM,153849
153845 :: CALL :: call :: I :: v55 = v52.length()::JM,153849
153850 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,153855
153849 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,153855
153855 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,153856:CD,153889:CD,153901:CD,153905:CD,153934:CD,153938:CD,153939:CD,153943:CD,154000
153856 :: NORM :: compound :: Ljava/util/List :: return v3::DD,153735
153889 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,153938:JM,153905:JM,153910:JM,153914:JM,153934:JM,153901:JM,153939
153901 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,153938:JM,153905:JM,153910:JM,153914:JM,153934:JM,153901
153905 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,153938:JM,153905:JM,153910:JM,153914:JM,153934
153910 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,153938:JM,153910:JM,153914:JM,153934
153914 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,153920:JM,153915
153915 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,153920:JM,153915
153920 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,153921:JM,153925
153921 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,153921:JM,153925
153926 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
153925 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,153926:CD,153928:JM,153938:JM,153910:JM,153914:JM,153934
153928 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
153934 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,153938:JM,153910:JM,153914:JM,153934
153938 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,153910:CD,153914:CD,153915:CD,153920:CD,153921:CD,153925:CD,153934:JM,153938:JM,153939
153939 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,153939
153943 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
153951 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
153965 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,153735
153968 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
153982 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,153735
153985 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
153999 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,153735
154000 :: NORM :: compound :: Ljava/util/List :: return v3::DD,153735
154006 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,154007:JM,153849:JM,153855:DD,154005
154007 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,153843:DD,153844
154005 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,154006:CF,153843
154104 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,154105:CD,154108:CD,154112:CD,154117:CD,154229:CD,154230:CD,154235:CD,154240:CD,154245:CD,154254:CD,154255
154105 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,136579:JM,137502
154108 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154112 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154118 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,154255
154117 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,154118:CD,154121:CD,154126:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154207:JM,154189
154121 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154126 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,154127:CD,154130:CD,154135:CD,154255:JM,154162:JM,154144:JM,154198:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154127 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,154255
154130 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154135 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,154136:CD,154139:CD,154144:CD,154255:JM,154162:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154139 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,154255
154144 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,154145:CD,154148:CD,154153:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154126:JM,154207:JM,154189
154145 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,154255
154148 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154154 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,154255
154153 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,154154:CD,154157:CD,154162:CD,154255:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154157 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154162 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,154163:CD,154166:CD,154171:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154163 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,154255
154166 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154171 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,154172:CD,154175:CD,154180:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154175 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154172 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,154255
154180 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,154181:CD,154184:CD,154189:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207
154181 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,154255
154184 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154190 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,154255
154189 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,154190:CD,154193:CD,154198:CD,154255:JM,154162:JM,154144:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154193 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154198 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,154199:CD,154202:CD,154207:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154189
154199 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,154255
154202 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154207 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,154208:CD,154211:CD,154216:CD,154255:JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154153:JM,154126:JM,154207:JM,154189
154211 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,154255
154216 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,154217:CD,154226:CD,154255
154217 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,154255
154226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,154255
154230 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
154229 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
154235 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,154162:JM,154144:JM,154198:JM,154135:JM,154180:JM,154117:JM,154171:JM,154216:JM,154153:JM,154126:JM,154207:JM,154189
154240 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
154245 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
154254 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,154105
154255 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,154254
154323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,154324:CD,154326:CD,154328
154326 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,154328:DD,154329
154324 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
154330 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,154333:CL,162391
154328 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,154329:CD,154330:CD,154333:CD,154334:CD,154335:CD,154337:CD,154346:CD,154348:CD,154357:CD,154359:CD,154368:CD,154370:CD,154379:CD,154381:CD,154390:CD,154392:CD,154401:CD,154403:CD,154412:CD,154414:CD,154423:CD,154425:CD,154434:CD,154436:CD,154445:CD,154447:CD,154456:CD,154458:CD,154467:CD,154469:CD,154480
154329 :: NORM :: compound :: [I :: return v2::DD,154324
154334 :: NORM :: declaration :: [I :: v7 = new []::DD,154480
154335 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
154333 :: EXPR :: assign :: I :: v6 = v5.length::CF,154334
154337 :: CALL :: call :: I :: v10 = v8.ordinal()::
154341 :: EXPR :: modify :: I :: v7[v10] = #(3)::
154346 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
154348 :: CALL :: call :: I :: v16 = v14.ordinal()::
154352 :: EXPR :: modify :: I :: v7[v16] = #(2)::
154359 :: CALL :: call :: I :: v22 = v20.ordinal()::
154357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
154363 :: EXPR :: modify :: I :: v7[v22] = #(4)::
154370 :: CALL :: call :: I :: v28 = v26.ordinal()::
154368 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
154374 :: EXPR :: modify :: I :: v7[v28] = #(5)::
154379 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
154381 :: CALL :: call :: I :: v34 = v32.ordinal()::
154385 :: EXPR :: modify :: I :: v7[v34] = #(12)::
154390 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
154392 :: CALL :: call :: I :: v40 = v38.ordinal()::
154396 :: EXPR :: modify :: I :: v7[v40] = #(1)::
154403 :: CALL :: call :: I :: v46 = v44.ordinal()::
154401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
154407 :: EXPR :: modify :: I :: v7[v46] = #(6)::
154414 :: CALL :: call :: I :: v52 = v50.ordinal()::
154412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
154418 :: EXPR :: modify :: I :: v7[v52] = #(7)::
154423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
154425 :: CALL :: call :: I :: v58 = v56.ordinal()::
154429 :: EXPR :: modify :: I :: v7[v58] = #(8)::
154434 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
154436 :: CALL :: call :: I :: v64 = v62.ordinal()::
154440 :: EXPR :: modify :: I :: v7[v64] = #(9)::
154447 :: CALL :: call :: I :: v70 = v68.ordinal()::
154445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
154451 :: EXPR :: modify :: I :: v7[v70] = #(13)::
154458 :: CALL :: call :: I :: v76 = v74.ordinal()::
154456 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
154462 :: EXPR :: modify :: I :: v7[v76] = #(10)::
154467 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
154469 :: CALL :: call :: I :: v82 = v80.ordinal()::
154473 :: EXPR :: modify :: I :: v7[v82] = #(11)::
154480 :: NORM :: compound :: [I :: return v7::DD,154324
154595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,154600:CD,154604:JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154600 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154606 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154604 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,154606:CD,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154610 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,154611:CD,154617:CD,154621:CD,154625:CD,154629:CD,154683:CD,154687:CD,154710:JM,154610:JM,154706:JM,154672:JM,154678:JM,154635:JM,154649:JM,154697:JM,154655:JM,154604
154611 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154617 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154621 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,154610:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154625 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154631 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154629 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,154710
154635 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,154661:JM,154667:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154636 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154641 :: CALL :: call :: V :: v10.add(v31)::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154645 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154651 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154649 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,154651:CD,154655:CD,154656:CD,154661:CD,154708:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687
154655 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,154708
154656 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,154661
154662 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,154667
154661 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,154641:CD,154645:CD,154649:CD,154662:CD,154667:CD,154709:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154697:JM,154687:JM,154655:JM,154604
154667 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,154709:CD,154668:CD,154672:CD,154679:CD,154683:CD,154687:CD,154710:JM,154706:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154655
154668 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154674 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154672 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,154674:CD,154678:CD,154679:CD,154683:CD,154687:CD,154709:CD,154710:JM,154706:JM,154672:JM,154629:JM,154635:JM,154649:JM,154697:JM,154655
154678 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,154709
154679 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154683 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154687 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,154631:CD,154635:CD,154636:CD,154656:CD,154661:CD,154688:CD,154702:CD,154706:CD,154708:JM,154672:JM,154678:JM,154629:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154688 :: CALL :: call :: V :: v10.add(v42)::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154693 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154698 :: CALL :: call :: V :: v10.add(v48)::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154697 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604
154702 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655
154706 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,154693:CD,154697:CD,154698:CD,154702:JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154687:JM,154655
154710 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604:DD,154708
154708 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154661:JM,154667:DD,154709
154709 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,154706:JM,154672:JM,154678:JM,154629:JM,154635:JM,154649:JM,154697:JM,154687:JM,154655:JM,154604:DD,154710
154868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,154869:CD,154872:CD,154876:CD,154881:CD,154882:CD,154886:CD,154892
154869 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
154872 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,154882:JM,154881:JM,154886:JM,154876:JM,154892
154876 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,154882:JM,154881:JM,154886:JM,154876:JM,154892
154882 :: CALL :: call :: I :: v12 = v4.length()::JM,154882:JM,154881:JM,154886:JM,154876:JM,154892
154881 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,154881:JM,154886:JM,154876:JM,154892:JM,154882
154886 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,154882:JM,154881:JM,154886:JM,154876:JM,154892
154892 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,154869
154921 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
154952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::CD,154966:CD,154971
154966 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v9 = new java.io.FileOutputStream::
154971 :: CALL :: call :: Ljava/nio/channels/FileChannel :: v12 = v9.getChannel()::
156114 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .rootURL = p1 $url ::
156122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,156130
156127 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
156130 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
156234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,156241:CD,156278
156238 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,156241
156242 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
156241 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,156242:CD,156249:CD,156254
156249 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
156254 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
156278 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
156423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,156424:CD,156427:CD,156432:CD,156437
156427 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,156437
156424 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,140497:JM,151817:JM,165737
156429 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,156437
156432 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,156437
156437 :: NORM :: compound :: Z :: return v6::CF,156424
156440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,156441:CD,156447
156441 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,140564:JM,140825:JM,140511:JM,140524:JM,145844
156447 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,156441
156444 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,156447
156450 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,140993
156449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,156450:CD,156455:CD,156459:CD,156463:CD,156469:CD,156475:CD,156479:CD,156612:CD,156617:CD,156622:CD,156630:CD,156656:CD,156661:CD,156666:CD,156674
156455 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
156459 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
156463 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,156475:JM,156479:CL,151763
156469 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,156480:JM,156484:CL,151763
156475 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,156475:JM,156479
156479 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,156480:CD,156484:CD,156491
156480 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,156480:JM,156484
156484 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,156491:CD,156494:CD,156499:CD,156503:CD,156508:CD,156513:CD,156518:CD,156528:CD,156533:CD,156537:CD,156542:CD,156547:CD,156552:CD,156560:CD,156565:CD,156570
156491 :: NORM :: compound :: Z :: return #(1)::DD,156450
156494 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
156499 :: CALL :: call :: I :: v24 = v11.length()::JM,156475:JM,156479
156503 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
156508 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
156513 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,156475:JM,156479
156518 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
156528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
156533 :: CALL :: call :: I :: v40 = v13.length()::JM,156480:JM,156484
156537 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
156542 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
156547 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,156480:JM,156484
156552 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
156560 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,156594:JM,156599:JM,156581:JM,156570:JM,156586:JM,156587:JM,156760:JM,156761:JM,156573:CL,163799
156565 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,156643:JM,156577:JM,156631:JM,156581:JM,156762:JM,156586:JM,156571:JM,156638:CL,163799
156570 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,156571:CD,156572
156571 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,156572:CD,156573:CD,156577:CD,156581:CD,156586:CD,156675:CD,156678:CD,156684:CD,156685:CD,156693:CD,156697:CD,156761:CD,156762:JM,156594:JM,156599:JM,156587:JM,156760
156572 :: NORM :: compound :: Z :: return #(1)::DD,156450
156573 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,156594:JM,156599:JM,156581:JM,156586:JM,156587:JM,156760:JM,156761:JM,156573
156577 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,156643:JM,156577:JM,156631:JM,156581:JM,156762:JM,156586:JM,156638
156581 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,156594:JM,156599:JM,156581:JM,156586:JM,156643:JM,156638
156586 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,156761:CD,156587:CD,156591:CD,156594:CD,156599:CD,156631:CD,156635:CD,156638:CD,156643:CD,156760:CD,156762:JM,156581:JM,156586:JM,156573
156587 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,156594:JM,156599:JM,156581:JM,156586:JM,156587:JM,156760:JM,156761:JM,156573
156591 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,156594:JM,156599
156594 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,156594:JM,156599:JM,156581:JM,156586
156599 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,156760:CF,156600
156600 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,156760
156612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
156617 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,156475:JM,156479
156622 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
156630 :: NORM :: compound :: Z :: return #(1)::DD,156450
156631 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,156643:JM,156577:JM,156631:JM,156581:JM,156762:JM,156586:JM,156638
156635 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,156643:JM,156638
156638 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,156643:JM,156581:JM,156586:JM,156638
156643 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,156761:CF,156644:CD,156762
156644 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,156762
156656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
156661 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,156480:JM,156484
156666 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
156674 :: NORM :: compound :: Z :: return #(1)::DD,156450
156675 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,156693:JM,156730:JM,156697:JM,156685
156678 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,156693:JM,156730:JM,156697:JM,156685
156684 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,156693:JM,156730:JM,156697:JM,156685
156685 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,156693:JM,156730:JM,156697:JM,156685
156693 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,156693:JM,156730:JM,156697:JM,156685
156697 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,156722:CD,156725:CD,156730:CD,156735:CD,156740:CD,156748:CD,156757
156722 :: NORM :: compound :: Z :: return #(1)::DD,156450
156725 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
156730 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,156730
156735 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
156740 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
156748 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,156757:CL,163873
156757 :: NORM :: compound :: Z :: return v126::DD,156450
156762 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,156675:JM,156693:JM,156730:JM,156697:JM,156685
156760 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,156643:JM,156577:JM,156631:JM,156581:JM,156762:JM,156586:JM,156638:DD,156761
156761 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,156762:JM,156693:JM,156730:JM,156697:JM,156685
156846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,156847:CD,156855:CD,156859:CD,156862:CD,157245:CD,157255:CD,157256:JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156885:JM,156891:JM,156892
156847 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,141221
156855 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156859 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,156898:JM,156897:JM,156903:JM,156862:JM,156892
156862 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,156898:JM,156897:JM,156903:JM,156862:JM,156892
156868 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156874 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156880 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156886 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156885 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156891 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,156898:JM,156897:JM,156903:JM,156885:JM,156874:JM,156891:JM,156905:JM,156910:JM,156892
156892 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,156898:JM,156897:JM,156903:JM,156885:JM,156874:JM,156891:JM,156905:JM,156910:JM,156892
156898 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,156898:JM,156897:JM,156903:JM,156885:JM,156891:JM,156905:JM,156910:JM,156892
156897 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,157254:CD,156898:CD,156903:CD,157244:CD,157245:CD,157255:CD,157256:JM,156897:JM,156885:JM,156891:JM,156905:JM,156910:JM,156892
156903 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,156905:CD,156910:CD,157244:CD,157245:CD,157254:CD,157255:CD,157256:JM,156898:JM,156897:JM,156903:JM,156885:JM,156874:JM,156891:JM,156892
156905 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,156898:JM,156897:JM,156903:JM,156885:JM,156874:JM,156891:JM,156905:JM,156910:JM,156892
156910 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,157254:CD,156911:CD,156915:CD,156920:CD,156921:CD,156925:CD,156930:CD,156931:CD,156935:CD,156940:CD,156941:CD,156945:CD,156950:CD,156951:CD,157244:CD,157245:CD,157255:CD,157256
156911 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
156915 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,156920
156920 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,156930
156921 :: CALL :: call :: I :: v40 = v38.intValue()::JM,156930
156925 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156930 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,156951
156931 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
156935 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,156940
156940 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,156950
156941 :: CALL :: call :: I :: v50 = v48.intValue()::JM,156950
156945 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
156950 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,156952:JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245:CF,156951
156951 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,156952:CD,156955:CD,156960:CD,156965:CD,156970:CD,156975:CD,156980:CD,156985:CD,156990:CD,156995:CD,157000:CD,157005:CD,157010:CD,157015:CD,157244:CD,157245:CD,157254:CD,157255:CD,157256
156955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
156952 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,156955:CD,156960:CD,156965:CD,156970:CD,156975:CD,156980:CD,156985:CD,156990:CD,156995:CD,157000:CD,157005:CD,157010:CD,157015:CD,157024:CD,157028:CD,157032:CD,157244:CD,157245:CD,157254:CD,157255:CD,157256
156960 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
156965 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
156970 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
156975 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
156980 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
156985 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
156990 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
156995 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
157000 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
157005 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
157010 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
157015 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
157024 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,157032:JM,157086:CL,60637
157028 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,157033:JM,157086:CL,60637
157032 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,157033:CD,157072
157033 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,157072:CD,157073:CD,157077:CD,157081:CD,157086:CD,157224:CD,157228:CD,157233:CD,157234:CD,157238:CD,157244:CD,157245:CD,157254:CD,157255:CD,157256
157072 :: NORM :: compound :: Z :: return #(1)::DD,156847
157073 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,157086
157077 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,157086
157081 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,157086
157086 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,157087:CD,157092:CD,157097:CD,157102:CD,157107:CD,157112:CD,157117:CD,157122:CD,157127:CD,157132:CD,157137:CD,157142:CD,157147:CD,157151:CD,157155:CD,157157:CD,157162
157087 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
157092 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
157097 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
157102 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
157107 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
157112 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
157117 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
157122 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
157127 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
157132 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
157137 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
157142 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
157147 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
157151 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,157157:JM,157162:CL,60355:CL,60363:CL,60347
157155 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,157157:JM,157162
157157 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,157157:JM,157162
157162 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,157163:CD,157167:CD,157169:CD,157174:CD,157202:CD,157203:CD,157211:CD,157216
157163 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,157169:JM,157174:CL,60355:CL,60363:CL,60347
157167 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,157169:JM,157174
157169 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,157169:JM,157174
157174 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,157177:CD,157178:CD,157186:CD,157191:CD,157202:CD,157203:CD,157211:CD,157216
157178 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
157177 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
157186 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
157191 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
157202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
157203 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
157211 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
157216 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
157224 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
157228 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,157233
157234 :: CALL :: call :: I :: v166 = v164.intValue()::
157233 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
157238 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,156930:JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156855:JM,156885:JM,156891:JM,156892:JM,157245
157244 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,157256:CF,157255
157245 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,156868:CD,156874:CD,156880:CD,156885:CD,156886:CD,156891:CD,156892:CD,156897:CD,157253:CD,157254:JM,156930:JM,156898:JM,156903:JM,156905:JM,156910:JM,156950:JM,156855:JM,157245
157254 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,157255:CF,157244
157255 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,157256:DD,157253:DD,157254
157253 :: NORM :: compound :: Z :: return v171::DD,156847
157256 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,156898:JM,156897:JM,156903:JM,156868:JM,156874:JM,156905:JM,156910:JM,156880:JM,156886:JM,156950:JM,156885:JM,156891:JM,156892:JM,156930:DD,157244:DD,157245
157426 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,157434
157434 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,164420
157444 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,157452
157452 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,164452
157462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,157469:CD,157473:CD,157486:CD,157514:CD,157518:CD,157519:CD,157535:CD,157536
157469 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,157473:JM,157535:CL,142238
157474 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,157535
157473 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,157535:CF,157474:CD,157482
157482 :: CALL :: call :: V :: v10.setBonds(v7)::CL,164484
157486 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,157518
157491 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,157518
157499 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,157507:JM,157512:CL,164495
157507 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,157507:JM,157512
157504 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,157507:JM,157512
157514 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,157518
157512 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,157514:CD,157518:CD,157536
157518 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,157536:CD,157491:CD,157499:CD,157507:CD,157512:JM,157518
157519 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,157523:CD,157530
157523 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,164534
157530 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,164534
157535 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,157518
157536 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,157519
157564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,157569:CD,157571:CD,157576:CD,157601
157571 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,157601:JM,157576
157569 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,157601:JM,157576
157578 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
157576 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,157601:CF,157577:CD,157578:CD,157586:CD,157588:CD,157593
157577 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,157601
157586 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,157601
157588 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,157601
157593 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,157601
157597 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
157601 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,157597
157610 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::JM,142431:JM,143606:JM,158034
157609 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,157610:CD,157622:CD,157627
157622 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,157627
157627 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,157610
157642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setFormat(java.lang.String)::JM,157647
157647 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .format = p1 $format ::
157653 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainName(java.lang.String)::JM,157658
157658 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainName = p1 $domainName ::
157664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setVersion(java.lang.String)::JM,157669
157669 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
157675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDate(java.util.Date)::JM,157680
157680 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .date = p1 $date ::
157686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,157691:CD,157700:CD,157704:CD,157708:CD,157716:CD,157720:CD,157724:CD,157732:CD,157736:CD,157740:CD,157748:CD,157756
157691 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
157696 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
157700 :: CALL :: call :: I :: v10 = parseInt(v8)::
157704 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
157708 :: CALL :: call :: V :: p0 $this .setClassId(v12)::CL,164568
157712 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
157716 :: CALL :: call :: I :: v17 = parseInt(v15)::
157720 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
157724 :: CALL :: call :: V :: p0 $this .setArchitectureId(v19)::CL,164579
157728 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
157732 :: CALL :: call :: I :: v24 = parseInt(v22)::
157736 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
157740 :: CALL :: call :: V :: p0 $this .setTopologyId(v26)::CL,164590
157744 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
157748 :: CALL :: call :: I :: v31 = parseInt(v29)::
157756 :: CALL :: call :: V :: p0 $this .setHomologyId(v33)::CL,164601
157776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLength(java.lang.Integer)::JM,157781
157781 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
157796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStart(java.lang.String)::JM,157801
157801 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .start = p1 $start ::
157807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStop(java.lang.String)::JM,157812
157812 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .stop = p1 $stop ::
157818 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setLength(java.lang.Integer)::JM,157823
157823 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
157829 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSegmentId(java.lang.Integer)::JM,157834
157834 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .segmentId = p1 $segmentId ::
157840 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequenceHeader(java.lang.String)::JM,157845
157845 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
157851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequence(java.lang.String)::JM,157856
157856 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
157862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setName(java.lang.String)::JM,157867
157867 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
157873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSource(java.lang.String)::JM,157878
157878 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .source = p1 $source ::
157884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceHeader(java.lang.String)::JM,157889
157889 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
157895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequence(java.lang.String)::JM,157900
157900 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
157906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSegments(java.util.List)::JM,157911
157911 :: EXPR :: modify :: Ljava/util/List :: p0 $this .segments = p1 $segments ::
157918 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
157917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,157918:CD,157921:CD,157925:CD,157931:CD,157942:CD,157948:CD,157953:CD,157978:CD,157983:CD,157987:CD,157988
157922 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
157921 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,157987
157925 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
157931 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
157939 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,157953
157942 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,157953
157948 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,157953
157954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,157988
157953 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,157954:CD,157962:CD,157968:CD,157973:CD,157988
157959 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,157988
157962 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,157988
157968 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,157988
157973 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,157988
157978 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,157987
157983 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,157987
157987 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,157918
157988 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,157987
158004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CE,158005:CD,158008:CD,158012:CD,158020:CD,158025:CD,158030:CD,158034
158005 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::
158008 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,158034
158012 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
158020 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::JM,158034:CL,157609
158025 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,158034
158030 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,158034
158034 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,158005
158039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,158117:CD,158121:JM,158050
158045 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,158050:JM,158121
158050 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,158052:CD,158057:CD,158061:CD,158070:CD,158075:CD,158099:CD,158111:CD,158123
158052 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,164612
158057 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,157917
158061 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
158070 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,158075
158075 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,158086:CD,158079:CD,158084:CD,158093:CD,158123
158079 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,158084
158086 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,158123
158084 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,158123
158093 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
158099 :: CALL :: call :: Z :: v32 = v30.add(v12)::
158111 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
158117 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,158050:JM,158121
158123 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
158121 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,158045:CD,158050:CD,158117:JM,158121
158210 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,144471
158209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,158210:CD,158229:CD,158233:CD,158237:CD,158261:CD,158280
158229 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,164853
158233 :: CALL :: call :: Z :: v13 = v11.exists()::JM,158237
158238 :: CALL :: call :: J :: v16 = v11.length()::JM,158242
158237 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,158238:CD,158242:CD,158243:CD,158280
158242 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,158243
158243 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,158280
158261 :: NORM :: compound :: Z :: return v28::DD,158210
158280 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,158261
158296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,158317:CD,158321:CD,158329:CD,158334:CD,158338:CD,158343:CD,158351:CD,158363:CD,158370:CD,158378:CD,158383:CD,158388:CD,158392:CD,158397
158317 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
158321 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
158329 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
158334 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,164875
158338 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
158343 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
158351 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,164853
158363 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,137208
158370 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
158375 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
158378 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
158383 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
158388 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,164875
158392 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
158397 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
158477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,158498:JM,168993:JM,167483:CD,158506:CD,158513
158498 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,164853
158506 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,158510:CL,164916
158510 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
158513 :: CALL :: call :: Ljava/lang/String :: v17 = v10.getVersion()::JM,158517:CL,164925
158517 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .parsedVersion = v17::
158568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,158569:CD,158573:CD,158586:CD,158590:CD,158592:JM,158582:JM,158583
158569 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,144977
158573 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,158582:JM,158583:JM,158590
158578 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,158582:JM,158590
158582 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,158583
158583 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,158584:CD,158585:CD,158586:CD,158590:CD,158592
158586 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,158582:JM,158590
158584 :: NORM :: compound :: I :: return v14::DD,158569
158585 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,158592
158590 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,158578:CD,158582:CD,158583:CD,158591:JM,158590
158591 :: NORM :: compound :: I :: return #(-1)::DD,158569
158592 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,158582:JM,158590:DD,158584:DD,158585
158616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,158617:CD,158624:CD,158644:CD,158648:JM,158642
158617 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,145248:JM,145249:JM,145478:JM,145479:JM,145316:JM,145253:JM,145258:JM,145483:JM,145388:JM,145548:JM,145389:JM,145549:JM,145488:JM,145297:JM,145393:JM,145553:JM,145398:JM,145558:JM,145301:JM,145306:JM,145307:JM,145311:JM,150189
158621 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,158648:JM,158633
158624 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,158648:JM,158633
158629 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,158648:JM,158633
158634 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,158642:JM,158634
158633 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,158642:JM,158634:DD,158643
158638 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,158642
158642 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,158643:CD,158644:CD,158648:JM,158633
158643 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,158617
158644 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,158648:JM,158633
158648 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,158629:CD,158633:CD,158634:CD,158638:CD,158642:CD,158661:JM,158648
158661 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,158617
158676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,158677:CD,158684:CD,158700:CD,158704:JM,158698
158677 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,145247:JM,145387:JM,145477:JM,145539:JM,146112
158681 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,158704:JM,158693
158684 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,158704:JM,158693
158689 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,158704:JM,158693
158694 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,158698:CL,123968
158693 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,158699
158698 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,158699:CD,158700:CD,158704:JM,158693
158699 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,158677
158700 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,158704:JM,158693
158704 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,158689:CD,158693:CD,158694:CD,158698:CD,158705:JM,158704
158705 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,158677
158716 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,108791:JM,108798:CD,158726:CD,158734:CD,158742:CD,158750:CD,158758:CD,158766:CD,158774:CD,158782
158726 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124065
158734 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,140117
158742 :: CALL :: call :: V :: v5.setCell(v12)::CL,140150
158750 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,140073
158758 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,140051
158766 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,140062
158774 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,140216
158782 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,140205
158806 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,158814
158811 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
158814 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
158832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,108791:JM,108798:CD,158842:CD,158850:CD,158858:CD,158866:CD,158874:CD,158882
158842 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124065
158850 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,140117
158858 :: CALL :: call :: V :: v5.setCell(v12)::CL,140150
158866 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,140073
158874 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,140051
158882 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,140062
158902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,108791:JM,108798:CD,158912:CD,158920:CD,158928:CD,158936
158912 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124065
158920 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,140073
158928 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,140051
158936 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,140062
158952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,158953:CD,158957:CD,158961:CD,158963:CD,158968
158953 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,145844
158957 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,158963:JM,158968:CL,60355:CL,60363:CL,60347
158963 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,158963:JM,158968
158961 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,158963:JM,158968
158970 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,158970:JM,158983
158971 :: CALL :: call :: J :: v32 = v29.getId()::JM,158970:CL,164934
158968 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,158970:CD,158971:CD,158979:CD,158983:CD,158984:CD,158988:CD,158990:CD,158995
158979 :: CALL :: call :: I :: v35 = v30.intValue()::JM,158983
158983 :: NORM :: compound :: I :: return v35::DD,158953
158984 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,158995:JM,158990:CL,60355:CL,60363:CL,60347
158990 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,158995:JM,158990
158988 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,158995:JM,158990
158995 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,158997:CD,158998:CD,159006:CD,159010:CD,159012:CD,159013:CD,159021:CD,159025
158998 :: CALL :: call :: J :: v25 = v22.getId()::JM,158997:CL,164934
158997 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,158997:JM,159010
159006 :: CALL :: call :: I :: v28 = v23.intValue()::JM,159010
159010 :: NORM :: compound :: I :: return v28::DD,158953
159012 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,159012:JM,159025
159013 :: CALL :: call :: J :: v18 = v15.getId()::JM,159012:CL,164934
159021 :: CALL :: call :: I :: v21 = v16.intValue()::JM,159025
159025 :: NORM :: compound :: I :: return v21::DD,158953
159044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,159049:CD,159053:CD,159462:CD,159466:CD,159470:JM,159062
159049 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
159053 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,159062:JM,159466
159058 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,159062:JM,159466
159062 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,159153:JM,159157:JM,159162:JM,159163:JM,159481:JM,159171:JM,159176:JM,159167:JM,159482:JM,159177:JM,159185:JM,159190:JM,159181:JM,159200:JM,159191:JM,159195:JM,159456:JM,159447:JM,159451
159069 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,159074
159074 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,159153:CD,159157:CD,159162:CD,159167:CD,159171:CD,159176:CD,159181:CD,159185:CD,159190:CD,159481:CD,159482
159153 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,159153:JM,159157:JM,159162
159157 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,159157:JM,159162
159162 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,159481:CD,159163
159163 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,159163:JM,159481
159167 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,159171:JM,159176:JM,159167
159171 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,159171:JM,159176
159176 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,159482:CD,159177
159177 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,159482:JM,159177
159181 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,159185:JM,159190:JM,159181
159185 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,159185:JM,159190
159190 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,159191:CD,159195:CD,159200
159191 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,159200:JM,159191:JM,159195
159195 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,159200:JM,159195
159200 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,159234:CD,159238:CD,159259:CD,159263:CD,159284:CD,159328:CD,159372
159234 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,159234:JM,159238
159238 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,159240:CD,159245:CD,159250:CD,159255
159240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
159245 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
159250 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
159255 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
159259 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,159259:JM,159263
159263 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,159265:CD,159270:CD,159275:CD,159280
159265 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
159270 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
159275 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
159280 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
159284 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,159372:CL,124175
159328 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,159406:CL,124175
159372 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,159406
159406 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,159440:JM,141793:JM,141799:JM,141796:JM,141790:CD,159447:CD,159451:CD,159456
159440 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
159447 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,159456:JM,159447:JM,159451
159451 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,159456:JM,159451
159456 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,159457:JM,159062:JM,159466
159457 :: CALL :: call :: Z :: v146 = v5.add(v112)::
159462 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,159062:JM,159466
159466 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,159058:CD,159062:CD,159069:CD,159074:CD,159462:JM,159466
159470 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,101066
159482 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,159185:JM,159190:JM,159181:JM,159259:JM,159263
159481 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,159234:JM,159238:JM,159171:JM,159176:JM,159167
159686 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
159689 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,159693
159693 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
159699 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
159696 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
159712 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,159717
159717 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
159723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,159728
159728 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
159734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,159745
159745 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,159750
159750 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
159759 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,159760:CD,159764:CD,159771:CD,159875:CD,159879:CD,159880:JM,159785:JM,159790
159760 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
159764 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,159880
159771 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,159879:JM,159780
159768 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,159879:JM,159780
159776 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,159879:JM,159780
159780 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,159781:JM,159785:JM,159790:JM,159874:JM,159809:JM,159813:JM,159818
159781 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,159781:JM,159785:JM,159790
159785 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,159785:JM,159790
159790 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,159798:CD,159805:CD,159809:CD,159813:CD,159818:CD,159822:CD,159870:CD,159874:JM,159879:JM,159780
159798 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,164966
159805 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,159869:CL,165014
159809 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,159874:JM,159809:JM,159813:JM,159818
159813 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,159874:JM,159813:JM,159818
159818 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,159874:JM,159818
159822 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,159874
159827 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,159874
159832 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,159869
159837 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,159869
159842 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,165023
159847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
159852 :: CALL :: call :: V :: v49.setChainId(v39)::CL,139855
159856 :: CALL :: call :: V :: v49.setId(v46)::CL,139844
159860 :: CALL :: call :: Z :: v54 = v4.add(v49)::
159865 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,159869
159870 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,159874
159869 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,159837:CD,159842:CD,159847:JM,165123:JM,165105:JM,165116:CD,159852:CD,159856:CD,159860:CD,159865:JM,159869:JM,159874
159874 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,159827:CD,159832:CD,159865:CD,159869:CD,159870:JM,159874:JM,159879:JM,159780
159875 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,159879:JM,159780
159879 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,159776:CD,159780:CD,159781:CD,159785:CD,159790:CD,159875:JM,159879:CF,159880
159880 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,159760
159926 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
159925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,159926:CD,159930:CD,159937:CD,159944:CD,160061:CD,160065:CD,160066:JM,159958:JM,159963
159930 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,160066
159937 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,160055:CL,165139
159941 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,159953:JM,160065
159944 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,159953:JM,160065
159949 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,159953:JM,160065
159954 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,159954:JM,159958:JM,159963
159953 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,159954:JM,159958:JM,159963:JM,159968:JM,159973:JM,159964:JM,160060
159958 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,159958:JM,159963
159963 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,159964:CD,159968:CD,159973:CD,159984:CD,159988:CD,160056:CD,160060:JM,159953:JM,160065
159964 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,159968:JM,159973:JM,159964:JM,160060
159968 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,159968:JM,159973:JM,160060
159973 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,159973:JM,160060
159984 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,164966
159988 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,160060
159993 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,160060
159998 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,160055
160003 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,160055
160013 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,165023
160023 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,165023
160028 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,165166
160033 :: CALL :: call :: V :: v59.setChainId(v39)::CL,139855
160037 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
160041 :: CALL :: call :: V :: v59.setId(v62)::CL,139844
160045 :: CALL :: call :: Z :: v65 = v4.add(v59)::
160050 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,160067
160051 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,160055
160055 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,160003:CD,160013:CD,160023:CD,160028:CD,160033:CD,160037:CD,160041:CD,160045:CD,160050:CD,160051:CD,160067:JM,160055:JM,160060
160056 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,160060
160060 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,159993:CD,159998:CD,160051:CD,160055:CD,160056:CD,160067:JM,160060:JM,159953:JM,160065
160061 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,159953:JM,160065
160066 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,159926
160067 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,160055:DD,160050
160065 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,159949:CD,159953:CD,159954:CD,159958:CD,159963:CD,160061:JM,160065:CF,160066
160132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,160133:CD,160139
160133 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,147289
160139 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,160133
160136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,160139
160141 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,160146
160146 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,165205
160235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,160240
160240 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
160555 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,160556:CD,160563:CD,160567:JM,160626:JM,160663:JM,160601:JM,160606:JM,160621
160556 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,148084:JM,148110:JM,148200:JM,160953
160563 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,160577:JM,160593:JM,160567:JM,160600:JM,160585:CL,119578
160567 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,160568:CD,160572:CD,160576:CD,160601:CD,160606:CD,160685:CD,160686:JM,160626:JM,160663:JM,160621
160568 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,103352
160572 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,160576:CL,119811
160578 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,160580:CD,160585:CD,160586
160576 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,160577:CD,160578:CD,160600:CD,160601:CD,160606:CD,160685:CD,160686:JM,160626:JM,160663:JM,160621
160577 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,160578
160580 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,165313
160586 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,160588:CD,160593:CD,160594
160585 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,160586
160588 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,165313
160594 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,160596:CF,160600
160593 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,160594
160596 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,165313
160600 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,160556
160601 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,160626:JM,160663:JM,160601:JM,160606:JM,160621
160606 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,160607:CD,160611:CD,160649:CD,160653
160607 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,160611:CL,103516
160611 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,160612:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,160616:CD,160621:CD,160686
160612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,160686
160616 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,165313
160622 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,160626:JM,160663:JM,160601:JM,160606
160621 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,160627:CD,160622:CD,160626:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,160631:CD,160686:JM,160663:JM,160601:JM,160606
160626 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,160636:CF,160627:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,160631:CD,160640:CD,160644:CD,160686
160627 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,160686
160631 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,165313
160636 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,160686
160640 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,61079
160644 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,165313
160649 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,160653:CL,103516
160654 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,160686
160653 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,160654:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,160658:CD,160663:CD,160686
160658 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,165313
160663 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,160677:CF,160664:JM,60550:JM,60566:JM,60568:JM,60570:JM,60543:CD,160668:CD,160672:CD,160681:CD,160686
160664 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,160686
160668 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,61079
160672 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,165313
160677 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,160686
160681 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,165313
160686 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,160685
160685 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,160556
160766 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,148395
160765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,160766:CD,160777:CD,160781:CD,160785:JM,160851:JM,160801:JM,160870:JM,160875
160777 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,160785:CL,119890
160781 :: CALL :: call :: I :: v12 = v10.size()::JM,160785
160786 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,160785
160785 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,160786:CD,160792:CD,160796:CD,160801:CD,160809:CD,160813:CD,160858:CD,160862:JM,160785
160792 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,160801:CL,73938
160796 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,160801:JM,160851
160802 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,160805
160801 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,160805:CD,160809:CD,160813:CD,160858:CD,160862
160805 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,160766
160809 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,160822:JM,160862:CL,61101
160813 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,160822:JM,160862
160818 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,160822:JM,160862
160822 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,160852
160823 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,160857:JM,160831:CL,119890
160827 :: CALL :: call :: I :: v34 = v32.size()::JM,160857:JM,160831
160831 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,160832:CD,160853:CD,160857:CD,160858:CD,160862:JM,160831:JM,160822
160832 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,160857:JM,160831
160837 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,160857
160842 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,160851:CL,73938
160846 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,160851:JM,160801
160851 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,160852:CD,160853:CD,160857
160852 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,160766
160853 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,160857
160858 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,160822:JM,160862
160857 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,160837:CD,160842:CD,160846:CD,160851:CD,160858:CD,160862:JM,160857:JM,160822
160862 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,160818:CD,160822:CD,160823:CD,160827:CD,160831:CD,160866:CD,160870:CD,160875:JM,160862
160866 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,160870:JM,160875:CL,60637
160870 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,160870:JM,160875
160875 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,160879:CD,160883:CD,160887:CD,160923:CD,160931:CD,160942:CD,160949:CD,160953
160879 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,160887:CL,119890
160883 :: CALL :: call :: I :: v65 = v63.size()::JM,160887
160887 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,160891:CD,160895:CD,160899:CD,160900:CD,160904:CD,160908:CD,160912:CD,160918:CD,160922
160891 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,160766
160888 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,160891
160895 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,160899:CL,52556:CL,52698:CL,52873
160899 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,160922:CF,160900
160900 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
160904 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,119899
160908 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,61101
160912 :: CALL :: call :: V :: v74.clear()::
160918 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,60988
160922 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,160766
160923 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,160953:CL,160555
160931 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,61059:CL,60646
160942 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,60626
160949 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,60988
160953 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,160766
161014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,73732:JM,73737:CD,161023:CD,161027:CD,161031:CD,161039:CD,161067:CD,161071:CD,161075:CD,161087:CD,161099:CD,161103:CD,161107:CD,161149:CD,161172:JM,161108:JM,161112:JM,161113:JM,161118
161023 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,161107:JM,161108:JM,161112:JM,161113:JM,161118:JM,161023:JM,161103
161027 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,161107:JM,161108:JM,161112:JM,161113:JM,161118
161031 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,73905
161039 :: CALL :: call :: V :: v4.setName(v12)::CL,73916
161067 :: CALL :: call :: V :: v4.setX(v17)::CL,73848
161071 :: CALL :: call :: V :: v4.setY(v21)::CL,73864
161075 :: CALL :: call :: V :: v4.setZ(v25)::CL,73880
161087 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,73788
161099 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,73808
161103 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,161107:JM,161108:JM,161112:JM,161113:JM,161118:JM,161023:JM,161103
161107 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,161108:CD,161112:CD,161139:JM,161113:JM,161118
161108 :: CALL :: call :: I :: v43 = v40.length()::JM,161108:JM,161112:JM,161113:JM,161118
161112 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,161113:CD,161118:CD,161139:JM,161108:JM,161112
161113 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,161108:JM,161112:JM,161113:JM,161118
161118 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,161129:CD,161139
161129 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,106475
161139 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,106475
161149 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,106510
161172 :: CALL :: call :: V :: v4.setElement(v72)::CL,73927
161228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,161229:CD,161235
161229 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,148801:JM,148817
161235 :: NORM :: compound :: Ljava/util/List :: return v3::CF,161229
161232 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,161235
161237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,161242
161242 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
161258 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,149591
161257 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,161258:CD,161265:CD,161286:CD,161290:JM,161284:JM,161279
161262 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,161274:JM,161290
161265 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,161274:JM,161290
161270 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,161274:JM,161290
161274 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,161284:JM,161275:JM,161279:DD,161285
161275 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,161284:JM,161275:JM,161279
161279 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,161284:JM,161279
161286 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,161274:JM,161290
161284 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,161285:CD,161286:CD,161290:JM,161274
161285 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,161258
161290 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,161270:CD,161274:CD,161275:CD,161279:CD,161284:CD,161291:JM,161290
161291 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,161258
161303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,161307:CD,161311:CD,161315
161307 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
161311 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,165324
161315 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
161326 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,150840:JM,150853
161325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,161326:CD,161332
161329 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,161332
161334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,161346:CD,161352:CD,161356:CD,161376:CD,161380:JM,161362:JM,161381:JM,161386:JM,161357
161332 :: NORM :: compound :: F :: return v3::CF,161326
161346 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
161352 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,161362:JM,161376:JM,161380:JM,161381:JM,161386:JM,161352:JM,161356:JM,161357
161356 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,161357:CD,161362:JM,161380:JM,161381:JM,161386:JM,161376:JM,161352:JM,161356
161357 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,161362:JM,161380:JM,161381:JM,161386:JM,161357
161362 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,161370:JM,161362:JM,161376:JM,161380:JM,161381:JM,161386:JM,161352:JM,161356:JM,161357
161370 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
161376 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,161362:JM,161376:JM,161380:JM,161381:JM,161386:JM,161352:JM,161356:JM,161357
161380 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,161381:CD,161386:JM,161362:JM,161357
161381 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,161362:JM,161381:JM,161386:JM,161357
161386 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,161394
161394 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
161427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::CE,161428:CD,161433:CD,161438:CD,161445:CD,161578:CD,161582:CD,161587:JM,161573:JM,161450:JM,161577:JM,161454:JM,161455:JM,161459:JM,161464:JM,161468
161428 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::JM,151666
161433 :: CALL :: call :: V :: p0 $this .orderTransformationsByChainId(p1 $asymUnit , p2 $transformations )::CL,165535
161438 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $asymUnit .clone()::JM,161445:JM,161573:JM,161450:JM,161578:JM,161577:JM,161454:JM,161582:JM,161455:JM,161587:JM,161459:JM,161464:JM,161438:JM,161468
161445 :: CALL :: call :: Ljava/util/Iterator :: v10 = p2 $transformations .iterator()::JM,161445:JM,161573:JM,161450:JM,161578:JM,161577:JM,161454:JM,161582:JM,161455:JM,161587:JM,161459:JM,161464:JM,161438:JM,161468
161450 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,161459:JM,161573:JM,161450:JM,161578:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161454 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,161506:JM,161511:JM,161502:JM,161445:JM,161573:JM,161450:JM,161578:JM,161577:JM,161454:JM,161582:JM,161455:JM,161587:JM,161459:JM,161464:JM,161438:JM,161468
161455 :: CALL :: call :: Ljava/util/List :: v18 = p1 $asymUnit .getChains()::JM,161445:JM,161573:JM,161450:JM,161578:JM,161577:JM,161454:JM,161582:JM,161455:JM,161587:JM,161459:JM,161464:JM,161438:JM,161468
161459 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,161459:JM,161573:JM,161450:JM,161578:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161464 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,161573:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161468 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,161473:JM,161588:JM,161469:JM,161481:JM,161498
161469 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getInternalChainID()::JM,161473:JM,161588:JM,161469
161473 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 125::CF,161588:CD,161476:CD,161481:CD,161485:CD,161490:CD,161498
161476 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
161481 :: CALL :: call :: Ljava/lang/String :: v34 = v25.getChainID()::JM,161481
161485 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::
161490 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::
161498 :: CALL :: call :: Ljava/lang/String :: v41 = v25.getChainID()::JM,161588:JM,161498
161502 :: CALL :: call :: Ljava/lang/String :: v44 = v16.getChainId()::JM,161506:JM,161511:JM,161502
161506 :: CALL :: call :: Z :: v46 = v44.equals(v42)::JM,161506:JM,161511
161511 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 256::CD,161567:JM,161573:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161567 :: CALL :: call :: V :: p0 $this .addChainAndModel(v7, v49, v72)::CL,165564
161573 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,161573:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161578 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,161459:JM,161573:JM,161450:JM,161578:JM,161464:JM,161577:JM,161454:JM,161582:JM,161468
161577 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 60::CD,161464:CD,161468:CD,161469:CD,161473:CD,161502:CD,161506:CD,161511:CD,161573:CD,161588:JM,161577:JM,161454:JM,161582:JM,161459:JM,161450:JM,161578
161582 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 32::CD,161450:CD,161454:CD,161455:CD,161459:CD,161573:CD,161577:CD,161578:JM,161464:JM,161582:JM,161468
161587 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,161428
161588 :: EXPR :: assign :: null :: PHI v42 = v27, v41::JM,161506:JM,161511:JM,161502
161644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,161645:CD,161651:CD,161655
161645 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,151839
161651 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,161655:CL,165677
161655 :: NORM :: compound :: Z :: return v5::CF,161645
161658 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,151864:JM,151869
161657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,161658:CD,161664
161661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,161664
161666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,161667:CD,161670:CD,161674:CD,161676
161667 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,152506:JM,152504
161664 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,161658
161670 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,161676:CL,165686
161674 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,161676
161678 :: NORM :: compound :: Z :: return #(0)::DD,161667
161676 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,161677:CD,161678
161677 :: NORM :: compound :: Z :: return #(1)::DD,161667
161683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,161700:CD,161702:CD,161706:CD,161713:CD,161718:CD,161722:CD,161727:CD,161777:CD,161779:CD,161799:CD,161801:CD,161843
161702 :: CALL :: call :: Z :: v12 = v10.get()::JM,161706
161700 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,161706
161706 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,161742:CD,161744:CD,161748:CD,161763:CD,161784:CD,161806:CD,161811:CD,161816:CD,161817:CD,161818:CD,161823:CD,161828:CD,161836:CD,161838
161713 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
161718 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
161722 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
161727 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
161742 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,161744
161744 :: CALL :: call :: V :: v13.set(#(1))::JM,161744
161748 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,161816
161763 :: CALL :: call :: V :: downloadFile()::CL,165955
161779 :: CALL :: call :: V :: v31.set(#(0))::
161777 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
161784 :: CALL :: call :: V :: p0 $this .split()::CL,161956
161799 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
161801 :: CALL :: call :: V :: v40.set(#(0))::
161806 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,161816
161811 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
161818 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
161816 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,161817
161817 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
161823 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
161828 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
161838 :: CALL :: call :: V :: v59.set(#(0))::JM,161838
161836 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,161838
161843 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
161956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,161966:CD,161967:CD,161974:CD,161984:CD,161985:CD,161999:CD,162003:CD,162050:CD,162051:CD,162055:CD,162060:CD,162061:CD,162067:CD,162081:CD,162086:CD,162091:CD,162096:CD,162111:CD,162112:CD,162113:CD,162114
161966 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
161967 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
161974 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
161984 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,162112:DD,162061:CF,161985
161985 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
161999 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,162112
162003 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,162113
162008 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,162013
162014 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,162107:CD,162015:CD,162019:CD,162024
162015 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
162013 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,162108:CD,162014:CD,162025:CD,162030:CD,162107:CD,162109:CD,162110
162019 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,166059
162024 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,162107
162025 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,162110
162030 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,162109
162034 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
162039 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
162041 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
162046 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,162112
162050 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,162008:CD,162013:CD,162034:CD,162039:CD,162041:CD,162046:CD,162108:CD,162109:CD,162110:CD,162111:CD,162112:CD,162113:CD,162114
162051 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
162055 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,166059
162062 :: CALL :: call :: V :: v17.close()::
162060 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,162061
162061 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,162062
162067 :: CALL :: call :: V :: v17.close()::
162081 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
162086 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
162091 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
162096 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
162107 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,162108:JM,162110
162110 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,162114
162111 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,162112:DD,162024:DD,162060:DD,162107:DD,162108
162108 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,162109:DD,162111
162109 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,162110:DD,162113
162114 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,162014:DD,162110:CF,162050
162112 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,162113:JM,162013:JM,162110:DD,162050
162113 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,162114:DD,162109
162184 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,162188
162188 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,103552
162276 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,162280
162283 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,162287
162280 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
162287 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
162290 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,162294
162294 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
162342 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,153599:JM,153680
162341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,162342:CD,162344:JM,166309:JM,166302:JM,166316:CD,162348:CD,162352:CD,162358:CD,162364:CD,162368
162344 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,162368
162348 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,166331
162352 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,166346
162358 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,166357
162364 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,166368
162368 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,162342
162380 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,162385
162385 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
162391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,162392:CD,162394:CD,162396:CD,162397:CD,162405
162394 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,162396
162392 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,154333
162396 :: EXPR :: assign :: I :: v4 = v2.length::DD,162397
162397 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,162405
162405 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,162392
163368 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,166992
163372 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333:DD,163376
163379 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,163382
163376 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
163382 :: CALL :: call :: V :: v8.set(#(0))::JM,163382
163386 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333:DD,163390
163390 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
163393 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,163396
163396 :: CALL :: call :: V :: v13.set(#(0))::JM,163396
163400 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333:DD,163404
163407 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,163410
163404 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
163410 :: CALL :: call :: V :: v17.set(#(0))::JM,163410
163414 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333:DD,163418
163418 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
163421 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,163424
163424 :: CALL :: call :: V :: v21.set(#(0))::JM,163424
163431 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333
163439 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333
163446 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333
163453 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,138338:JM,138337:JM,138310:JM,138346:JM,138283:JM,138315:JM,138319:JM,138351:JM,138284:JM,138320:JM,138292:JM,138328:JM,138297:JM,138302:JM,138301:JM,138333
163799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,163800:CD,163804:CD,163814:CD,163824:CD,163843:CD,163848:CD,163853:CD,163861:CD,163862:CD,163866
163800 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,156594:JM,156599:JM,156581:JM,156570:JM,156586:JM,156587:JM,156760:JM,156761:JM,156573:JM,156643:JM,156577:JM,156631:JM,156762:JM,156571:JM,156638
163804 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,163866
163814 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,163866
163824 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,163866
163843 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
163848 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
163853 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
163862 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,163800
163861 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,163800
163866 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,163862
163874 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,156757
163873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,163874:CD,163882:CD,163886:CD,163889:CD,164288:CD,164296:CD,164298:CD,164299:JM,163907:JM,163937:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163957:JM,163925:JM,163930:JM,163932:JM,163901
163882 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163886 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,163889:JM,163924:JM,163925:JM,163930:JM,163919
163889 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,163889:JM,163924:JM,163925:JM,163930:JM,163919
163895 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163901 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163907 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163912 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163913 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163918 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,163937:JM,163924:JM,163925:JM,163930:JM,163912:JM,163918:JM,163919:JM,163932:JM,163901
163919 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,163937:JM,163924:JM,163925:JM,163930:JM,163912:JM,163918:JM,163919:JM,163932:JM,163901
163924 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,164297:CD,163925:CD,163930:JM,163937:JM,163924:JM,163912:JM,163918:JM,163919:JM,163932
163925 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,163937:JM,163924:JM,163925:JM,163930:JM,163912:JM,163918:JM,163919:JM,163932
163930 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,163932:CD,163937:CD,164297:JM,163924:JM,163925:JM,163930:JM,163912:JM,163918:JM,163919:JM,163901
163932 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,163937:JM,163924:JM,163925:JM,163930:JM,163912:JM,163918:JM,163919:JM,163932:JM,163901
163938 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
163937 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,164297:CD,163938:CD,163942:CD,163947:CD,163948:CD,163952:CD,163957:CD,163958:CD,163962:CD,163967:CD,163968:CD,163972:CD,163977:CD,163978
163942 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,163947
163947 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,163957
163948 :: CALL :: call :: I :: v40 = v38.intValue()::JM,163957
163952 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163957:JM,163925:JM,163930:JM,163932:JM,163901
163958 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
163957 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,163978
163962 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,163967
163967 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,163977
163968 :: CALL :: call :: I :: v50 = v48.intValue()::JM,163977
163972 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163957:JM,163930:JM,163932:JM,163901
163978 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,163979:CD,163982:CD,163987:CD,163992:CD,163997:CD,164002:CD,164007:CD,164012:CD,164017:CD,164022:CD,164027:CD,164032:CD,164037:CD,164042:CD,164297
163979 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,163982:CD,163987:CD,163992:CD,163997:CD,164002:CD,164007:CD,164012:CD,164017:CD,164022:CD,164027:CD,164032:CD,164037:CD,164042:CD,164051:CD,164055:CD,164059:CD,164117:CD,164122:CD,164267:CD,164271:CD,164276:CD,164277:CD,164281:CD,164297
163977 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,163979:JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163957:JM,163925:JM,163930:JM,163932:JM,163901:CF,163978
163982 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
163987 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
163992 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
163997 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
164002 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
164007 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
164012 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
164017 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
164022 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
164027 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
164032 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
164037 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
164042 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
164051 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,164122:JM,164059:JM,164136:CL,60637
164055 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,164122:JM,164136:JM,164060:CL,60637
164059 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,164060:CD,164063:CD,164068:CD,164073:CD,164078:CD,164083:CD,164088:CD,164093:CD,164098:CD,164103
164063 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
164060 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,164063:CD,164068:CD,164073:CD,164078:CD,164083:CD,164088:CD,164093:CD,164098:CD,164103:JM,164122:JM,164136
164068 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
164073 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
164078 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
164083 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
164088 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
164093 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
164098 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
164103 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
164117 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,164122:JM,164136
164122 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,164123:CD,164127:CD,164131:CD,164136:JM,164122
164123 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,164122:JM,164136
164127 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,164122:JM,164136
164131 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,164136
164139 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
164136 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,164139:CD,164143:CD,164148:CD,164153:CD,164158:CD,164163:CD,164168:CD,164173:CD,164178:CD,164183:CD,164188:CD,164193:CD,164198:CD,164206:CD,164210:CD,164212:CD,164217
164143 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
164148 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
164153 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
164158 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
164163 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
164168 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
164173 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
164178 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
164183 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
164188 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
164193 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
164198 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
164206 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,164212:JM,164217:CL,60355:CL,60363:CL,60347
164210 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,164212:JM,164217
164212 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,164212:JM,164217
164218 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,164224:JM,164229:CL,60355:CL,60363:CL,60347
164217 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,164218:CD,164222:CD,164224:CD,164229:CD,164239:CD,164244:CD,164249:CD,164254:CD,164259
164222 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,164224:JM,164229
164224 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,164224:JM,164229
164229 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,164239:CD,164244:CD,164249:CD,164254:CD,164259
164239 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
164244 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
164249 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
164254 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
164259 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
164267 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
164271 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,164276
164276 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
164277 :: CALL :: call :: I :: v188 = v186.intValue()::
164281 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,163907:JM,164288:JM,163937:JM,163882:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163957:JM,163925:JM,163930:JM,163932:JM,163901
164287 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,164299:CF,164298
164288 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,163895:CD,163901:CD,163907:CD,163912:CD,163913:CD,163918:CD,163919:CD,163924:CD,164287:CD,164297:CD,164298:CD,164299:JM,164288:JM,163937:JM,163882:JM,163977:JM,163925:JM,163957:JM,163930:JM,163932
164298 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,164299:DD,164296:DD,164297
164299 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,163907:JM,163937:JM,163912:JM,163913:JM,163977:JM,163918:JM,163919:JM,163895:JM,163924:JM,163925:JM,163930:JM,163932:JM,163901:JM,163957:DD,164287:DD,164288
164296 :: NORM :: compound :: Z :: return v193::DD,163874
164297 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,164298:CF,164287
164420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,164426:CD,164427:CD,164435:CD,164439
164426 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,164426
164427 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,164426:CL,123968
164435 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,123968
164439 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
164452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,164458:CD,164459:CD,164467:CD,164471
164458 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,164458
164459 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,164458:CL,123968
164467 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,123968
164471 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
164484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,164489
164489 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
164495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,164496:CD,164508:CD,164517
164496 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,157507:JM,157512
164508 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
164514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,164517
164518 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,164521
164517 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,164521:CD,164525
164522 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,164525
164521 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,164496
164525 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,164496
164534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,164542:CD,164554
164539 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,164542
164542 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,164543
164543 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,164548
164551 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
164548 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
164554 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
164568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setClassId(java.lang.Integer)::JM,164573
164573 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .classId = p1 $classId ::
164579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setArchitectureId(java.lang.Integer)::JM,164584
164584 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .architectureId = p1 $architectureId ::
164590 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setTopologyId(java.lang.Integer)::JM,164595
164595 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .topologyId = p1 $topologyId ::
164601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setHomologyId(java.lang.Integer)::JM,164606
164606 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .homologyId = p1 $homologyId ::
164612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,164613:CD,164617:CD,164621:CD,164630:CD,164638:CD,164642:CD,164646:CD,164654:CD,164658:CD,164662:CD,164670:CD,164674:CD,164678:CD,164686:CD,164690:CD,164694:CD,164702:CD,164706:CD,164710:CD,164718:CD,164722:CD,164726:CD,164734:CD,164738:CD,164742:CD,164750:CD,164754:CD,164758:CD,164766:CD,164770:CD,164774:CD,164782:CD,164790:CD,164806:CD,164810
164613 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
164617 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,164810
164621 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
164630 :: CALL :: call :: V :: v4.setDomainName(v10)::CL,157653
164634 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
164638 :: CALL :: call :: I :: v15 = parseInt(v13)::
164642 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
164646 :: CALL :: call :: V :: v4.setClassId(v17)::CL,164568
164650 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
164654 :: CALL :: call :: I :: v22 = parseInt(v20)::
164658 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
164662 :: CALL :: call :: V :: v4.setArchitectureId(v24)::CL,164579
164666 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
164670 :: CALL :: call :: I :: v29 = parseInt(v27)::
164674 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
164678 :: CALL :: call :: V :: v4.setTopologyId(v31)::CL,164590
164682 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
164686 :: CALL :: call :: I :: v36 = parseInt(v34)::
164690 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
164694 :: CALL :: call :: V :: v4.setHomologyId(v38)::CL,164601
164698 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
164702 :: CALL :: call :: I :: v43 = parseInt(v41)::
164706 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
164710 :: CALL :: call :: V :: v4.setSequenceFamilyId(v45)::CL,167403
164714 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
164718 :: CALL :: call :: I :: v50 = parseInt(v48)::
164722 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
164726 :: CALL :: call :: V :: v4.setOrthologousSequenceFamilyId(v52)::CL,167414
164730 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
164734 :: CALL :: call :: I :: v57 = parseInt(v55)::
164738 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
164742 :: CALL :: call :: V :: v4.setLikeSequenceFamilyId(v59)::CL,167425
164746 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
164750 :: CALL :: call :: I :: v64 = parseInt(v62)::
164754 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
164758 :: CALL :: call :: V :: v4.setIdenticalSequenceFamilyId(v66)::CL,167436
164762 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
164766 :: CALL :: call :: I :: v71 = parseInt(v69)::
164770 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
164774 :: CALL :: call :: V :: v4.setDomainCounter(v73)::CL,167447
164778 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
164782 :: CALL :: call :: I :: v78 = parseInt(v76)::
164790 :: CALL :: call :: V :: v4.setLength(v80)::CL,157776
164806 :: CALL :: call :: V :: v4.setResolution(v87)::CL,167458
164810 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,164613
164853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,164862
164862 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,164875
164875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,164876:CD,164887:CD,164892
164876 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
164887 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,164892
164892 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,164876
164916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,164917:CD,164923
164917 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,158510
164923 :: NORM :: compound :: Ljava/util/List :: return v3::CF,164917
164920 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,164923
164926 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::JM,158517
164925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::CE,164926:CD,164932
164929 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,164932
164934 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,164935:CD,164941
164935 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,158970:JM,158997:JM,159012
164932 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,164926
164938 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,164941
164941 :: NORM :: compound :: J :: return v3::CF,164935
164966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,164981:CD,164985
164981 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,164985:CL,167496
164986 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,167535
164985 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,164986:CD,164994
164994 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,167545
165014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,165015:CD,165021
165015 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,159869
165018 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,165021
165023 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,165031:CD,165052:CD,165056:JM,165050
165021 :: NORM :: compound :: Ljava/util/List :: return v3::CF,165015
165031 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,165056
165028 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,165056
165036 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,165056
165041 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,165050:CL,167643
165045 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,165050
165050 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,165052:CD,165056
165052 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,165056
165059 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
165056 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,165036:CD,165041:CD,165045:CD,165050:CD,165059:CD,165064:CD,165069:JM,139717:JM,165056
165064 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,165050
165069 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
165105 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,165113
165113 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
165116 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,165120:CL,167643
165123 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,165127:CL,167652
165120 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
165127 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
165139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,165140:CD,165146
165143 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,165146
165140 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,160055
165146 :: NORM :: compound :: Ljava/util/List :: return v3::CF,165140
165166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,165167:CD,165186:JM,139717:CD,165190:CD,165194
165167 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
165186 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,165194
165190 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,167661
165194 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,165167
165205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,165212
165209 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,165212
165212 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,165217:CD,165221
165217 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,167672
165221 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,165225
165225 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
165313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,165318
165318 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
165324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,165329:CD,165330:CD,165334:CD,165359:CD,165370:CD,165381:CD,165392:CD,165424:CD,165435:CD,165446:CD,165457:CD,165465:CD,165471:CD,165475:CD,165480
165330 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
165329 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,165330
165334 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
165359 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
165356 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
165367 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
165370 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
165378 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
165381 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
165389 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
165392 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
165421 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
165424 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
165435 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
165432 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
165443 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
165446 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
165454 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
165457 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
165465 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
165471 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
165475 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
165480 :: CALL :: call :: V :: v4.close()::
165535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.orderTransformationsByChainId(org.biojava.nbio.structure.Structure,java.util.List)::CD,165541:CD,165552
165541 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChainIds(p1 $asymUnit )::CL,167735
165552 :: CALL :: call :: V :: sort(p2 $transformations , v7)::
165564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.addChainAndModel(org.biojava.nbio.structure.Structure,org.biojava.nbio.structure.Chain,java.lang.String)::CD,165574:CD,165578:CD,165590:CD,165595:CD,165612:CD,165644:JM,165618:JM,165622
165571 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .modelIndex::JM,165578
165574 :: CALL :: call :: I :: v8 = v6.size()::JM,165578
165578 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 25::CD,165582
165579 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .modelIndex::
165582 :: CALL :: call :: Z :: v13 = v10.add(#(PLACEHOLDER FOR ASYM UNIT))::
165587 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .modelIndex::JM,165595:JM,165644
165590 :: CALL :: call :: I :: v16 = v14.indexOf(p3 $modelId )::JM,165595:JM,165644:JM,165622
165595 :: PRED :: IF :: Z :: if (v16 != #(-1)) goto 67::CF,165644:CD,165599:CD,165607
165599 :: CALL :: call :: Z :: v20 = v18.add(p3 $modelId )::JM,165622:JM,165595:JM,165644
165596 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .modelIndex::
165607 :: CALL :: call :: I :: v23 = v21.indexOf(p3 $modelId )::JM,165644:JM,165622:JM,165595
165604 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .modelIndex::JM,165644
165612 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 83::CD,165618:CD,165622:JM,165595:JM,165644
165618 :: CALL :: call :: I :: v26 = p1 $s .nrModels()::JM,165618:JM,165622:JM,165595:JM,165644
165622 :: PRED :: IF :: Z :: if (v24 <= v26) goto 125::CF,165623:CD,165627
165623 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::
165627 :: CALL :: call :: Z :: v33 = v30.add(p2 $newChain )::JM,165618:JM,165622:JM,165595:JM,165644
165644 :: EXPR :: assign :: null :: PHI v24 = v16, v23::DD,165612:DD,165622
165678 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,161655
165677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,165678:CD,165684
165681 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,165684
165686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,165687:CD,165692:CD,165697:CD,165703:CD,165708:CD,165714:CD,165719:CD,165723:CD,165739:CD,165743:CD,165744:CD,165745:CD,165746:CD,165747:CD,165748:CD,165749:CD,165750:CD,165751:CD,165868
165687 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,161676
165684 :: NORM :: compound :: Z :: return v3::CF,165678
165692 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,165747:JM,165779:JM,165840:JM,165745:JM,165771:CL,64975
165697 :: CALL :: call :: I :: v7 = v5.size()::JM,165747:JM,165779:JM,165840:JM,165745:JM,165771
165703 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,165745:JM,165755:JM,165771:JM,165851:JM,165772:CL,64975
165708 :: CALL :: call :: I :: v12 = v10.size()::JM,165745:JM,165755:JM,165771:JM,165851:JM,165772
165714 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,165744:JM,165743:CL,64975
165719 :: CALL :: call :: I :: v17 = v15.size()::JM,165744:JM,165743
165723 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,165744:JM,165743
165728 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,165743
165733 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,165737:CL,156423
165738 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,165868
165739 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,165743
165737 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,165868:CD,165738
165743 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,165728:CD,165733:CD,165737:CD,165739:CD,165868:JM,165743:CF,165744
165746 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,165748:DD,165756:DD,165764:DD,165841:DD,165852:CF,165747
165747 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,165749:CF,165748
165744 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,165746:DD,165763:DD,165772:DD,165779:CF,165745
165745 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,165746
165750 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,165751
165751 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,165752:CD,165754:CD,165755:CD,165756:CD,165757:CD,165758:CD,165759
165748 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,165749
165749 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,165750
165754 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,165687
165755 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,165757:CF,165756
165752 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,165754
165758 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,165759
165759 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,165760:CD,165762:CD,165763:CD,165764:CD,165765:CD,165766:CD,165767
165756 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,165757
165757 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,165758
165762 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,165687
165763 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,165765:CF,165764
165760 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,165762
165766 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,165767
165767 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,165768:CD,165770:CD,165771:CD,165796:CD,165808:CD,165816:CD,165824:CD,165832:CD,165840:CD,165841:CD,165842:CD,165843:CD,165851:CD,165852:CD,165853:CD,165854:CD,165867:CD,165869
165764 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,165765
165765 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,165766
165770 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,165687
165771 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,165772:CD,165779
165768 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,165770
165772 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,165773:CD,165776:CD,165869
165773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,165869
165779 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,165780:CD,165783:CD,165869
165776 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,165869
165783 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,165869
165780 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,165869
165796 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,165796
165808 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,165840
165816 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,165851
165824 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
165832 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
165842 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,165843
165843 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,165843
165840 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,165842:CF,165841
165841 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,165842
165851 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,165853:CF,165852
165854 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,165854
165852 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,165853
165853 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,165854
165867 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,165687
165868 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,165743:DD,165738:DD,165744:DD,165868
165869 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,165867
165955 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,165958:CD,165960:CD,165962:CD,165965:CD,165968:CD,165976:CD,165981:CD,165986:CD,165995:CD,166000
165958 :: CALL :: call :: V :: initPath()::CL,167869
165962 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,167907
165960 :: CALL :: call :: V :: initServerName()::CL,167892
165965 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
165968 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
165976 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
165981 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
165986 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
165995 :: NORM :: declaration :: Ljava/io/File :: v21 = new java.io.File::
166000 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,167965
166046 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
166045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,166046:CD,166051:CD,166056
166051 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,166051:JM,166056
166059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,166065:CD,166069:CD,166088:CD,166092:CD,166095:CD,166101
166056 :: NORM :: compound :: Z :: return v7::CF,166046
166065 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,153320
166069 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,166095
166088 :: CALL :: call :: V :: v8.print(v15)::
166095 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,166096
166092 :: CALL :: call :: V :: v8.flush()::
166096 :: CALL :: call :: V :: v8.close()::
166101 :: CALL :: call :: V :: v8.close()::
166302 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,166306
166306 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
166309 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,166313
166313 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
166316 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,166320
166320 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
166331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,166339:JM,166336
166339 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,168133
166336 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
166346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,166351
166351 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
166357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,166362
166362 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
166368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,166373
166373 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
166379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,166380:CD,166387:CD,166393
166380 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
166387 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166393:CL,168147
166393 :: NORM :: compound :: I :: return v8::CF,166380
166398 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
166397 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,166398:CD,166405:CD,166411
166405 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166411:CL,168202
166411 :: NORM :: compound :: I :: return v8::CF,166398
166415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,166416:CD,166423:CD,166429
166416 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
166423 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166429:CL,168216
166429 :: NORM :: compound :: I :: return v8::CF,166416
166992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,166997:CD,166999:CD,167004
166999 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,167004
166997 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,167004
167006 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
167004 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,167005:CD,167006:CD,167014:CD,167016:CD,167021
167005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
167014 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::
167016 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::
167021 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
167403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceFamilyId(java.lang.Integer)::JM,167408
167408 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sequenceFamilyId = p1 $sequenceFamilyId ::
167414 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setOrthologousSequenceFamilyId(java.lang.Integer)::JM,167419
167419 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .orthologousSequenceFamilyId = p1 $orthologousSequenceFamilyId ::
167425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLikeSequenceFamilyId(java.lang.Integer)::JM,167430
167430 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .likeSequenceFamilyId = p1 $likeSequenceFamilyId ::
167436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setIdenticalSequenceFamilyId(java.lang.Integer)::JM,167441
167441 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .identicalSequenceFamilyId = p1 $identicalSequenceFamilyId ::
167447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainCounter(java.lang.Integer)::JM,167452
167452 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .domainCounter = p1 $domainCounter ::
167458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setResolution(java.lang.Double)::JM,167463
167463 :: EXPR :: modify :: Ljava/lang/Double :: p0 $this .resolution = p1 $resolution ::
167483 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,168993:JM,167483
167496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,167511:JM,167514:JM,167513:CF,167497:CD,167500:CD,167505:CD,167510
167497 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,164985
167500 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,167505:JM,167510:JM,167511:JM,167514:JM,167513:JM,167500
167505 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,167505:JM,167510:JM,167511:JM,167514:JM,167513:JM,167500
167510 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,167511:CD,167512
167511 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,167512:CD,167513:CD,167516:CD,167517
167514 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,167517
167512 :: NORM :: compound :: Z :: return #(1)::CF,167497
167513 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,167514:CD,167517
167516 :: NORM :: compound :: Z :: return v10::CF,167497
167517 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,167516
167535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,167539
167539 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,169003
167545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,167555:CD,167556:CD,167561:CD,167566:CD,167577:CD,167578:CD,167583:CD,167588:CD,167601:CD,167609:CD,167619
167555 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
167556 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
167561 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
167566 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
167578 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
167577 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
167583 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
167588 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
167601 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,169003
167609 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,169003
167619 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,169157
167643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,167644:CD,167650
167647 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,167650
167644 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,165050:JM,165120
167650 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,167644
167652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,167653:CD,167659
167653 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,165127
167659 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,167653
167656 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,167659
167661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,167666
167666 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
167672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,167679
167679 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,167684:CD,167694
167676 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,167679
167684 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,167688
167688 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
167694 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,169251
167735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getChainIds(org.biojava.nbio.structure.Structure)::CD,167740:CD,167744:CD,167748:CD,167772:CD,167776:JM,167753:JM,167757
167740 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
167744 :: CALL :: call :: Ljava/util/List :: v7 = p1 $asymUnit .getChains()::JM,167744:JM,167776:JM,167748:JM,167753:JM,167772:JM,167757
167748 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,167776:JM,167748:JM,167753:JM,167772:JM,167757
167753 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,167776:JM,167753:JM,167772:JM,167757
167758 :: CALL :: call :: Ljava/lang/String :: v17 = v15.getInternalChainID()::JM,167762:JM,167778:JM,167758
167757 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,167762:JM,167778:JM,167758:JM,167763
167762 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 59::CF,167778:CD,167763
167763 :: CALL :: call :: Ljava/lang/String :: v20 = v15.getChainID()::JM,167778:JM,167763
167767 :: CALL :: call :: Z :: v23 = v4.add(v21)::
167772 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,167776:JM,167753:JM,167772:JM,167757
167778 :: EXPR :: assign :: null :: PHI v21 = v17, v20::
167776 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,167753:CD,167757:CD,167758:CD,167762:CD,167767:CD,167772:CD,167778:JM,167776
167869 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,167872:CD,167874
167874 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,46758:JM,46765
167872 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,167874
167895 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,167897
167892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,167895:CD,167897
167898 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,59154
167897 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,167898
167907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CE,167908:CD,167910:CD,167911:CD,167918:CD,167922:CD,167938:CD,167944:CD,167948
167910 :: NORM :: declaration :: Ljava/io/File :: v2 = new java.io.File::
167911 :: EXPR :: reference :: Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::
167908 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::
167918 :: CALL :: call :: Z :: v7 = v2.exists()::JM,167922
167922 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CF,167938:CD,167934
167934 :: CALL :: call :: Z :: v15 = v2.mkdir()::
167938 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::JM,167948
167944 :: CALL :: call :: Ljava/lang/String :: v20 = v16.toString()::JM,167948
167948 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,167908
167965 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,167972:CD,167977:CD,167982:CD,167987:CD,167992
167972 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
167977 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
167982 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
167987 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
167992 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
168133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,168137
168137 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,168141:CL,169608
168141 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
168147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,168148:CD,168153:CD,168157:CD,168161:CD,168166:JM,168182:JM,168170:JM,168191
168148 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,166393
168153 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,168161:JM,168182:JM,168166:JM,168170:JM,168153:JM,168191:JM,168157
168157 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,168161:JM,168182:JM,168166:JM,168170:JM,168153:JM,168191:JM,168157
168161 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,168161:JM,168166:JM,168191
168166 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,168170:CD,168174:CD,168182:CD,168186:CD,168191:CD,168192:CD,168193
168167 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,168191
168170 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,168161:JM,168182:JM,168166:JM,168170:JM,168153:JM,168191:JM,168157
168174 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,168191:JM,168161:JM,168166
168179 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,168191
168182 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,168161:JM,168182:JM,168166:JM,168170:JM,168153:JM,168191:JM,168157
168186 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,168191:JM,168161:JM,168166
168191 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,168192
168192 :: NORM :: compound :: I :: return v22::CF,168148
168193 :: NORM :: compound :: I :: return #(0)::CF,168148
168202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,168203:CD,168208:CD,168213
168203 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,166411
168208 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,168213
168213 :: NORM :: compound :: I :: return v6::CF,168203
168216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,168217:CD,168222:CD,168227
168217 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,166429
168222 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,168227
168227 :: NORM :: compound :: I :: return v6::CF,168217
168993 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,171873
169003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,169007:CD,169013:CD,169019:CD,169024:CD,169029:CD,169030:CD,169035:CD,169040:CD,169049:CD,169053:CD,169084:CD,169088:JM,169062
169007 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,169024:JM,169088:JM,169062:JM,169013:JM,169019:JM,169007
169013 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,169024:JM,169088:JM,169062:JM,169013:JM,169019
169019 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,169024:JM,169088:JM,169062:JM,169019
169024 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,169024:JM,169088:JM,169062
169030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
169029 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
169035 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,169024:JM,169088:JM,169062:JM,169013:JM,169019:JM,169007
169040 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,169024:JM,169088:JM,169062:JM,169013:JM,169019
169049 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
169053 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,169088:JM,169062
169058 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,169088:JM,169062
169062 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,169068
169063 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,169068
169068 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,169069:CD,169073:CD,169079
169069 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,172762
169073 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
169079 :: CALL :: call :: Z :: v44 = v26.add(v35)::
169084 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,169088:JM,169062
169088 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,169058:CD,169062:CD,169063:CD,169068:CD,169084:JM,169088
169157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,169161:CD,169165:CD,169172:CD,169176:CD,169184:CD,169223:CD,169227
169162 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,169176
169161 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
169165 :: CALL :: call :: I :: v6 = v4.size()::JM,169176
169169 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,169176
169172 :: CALL :: call :: I :: v9 = v7.size()::JM,169176
169176 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
169181 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,169227
169184 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,169227
169189 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,169227
169194 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,169222
169197 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,169222
169202 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,169222
169207 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
169213 :: CALL :: call :: Z :: v32 = v3.add(v29)::
169218 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,169222
169222 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,169202:CD,169207:JM,172867:JM,172870:CD,169213:CD,169218:JM,169222:JM,169227
169223 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,169227
169227 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,169189:CD,169197:CD,169218:CD,169222:CD,169223:JM,169227
169251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,169258
169255 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,169258
169258 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,169263:CD,169317
169263 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,169334
169317 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,172928
169334 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
169608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,169609:CD,169612:CD,169616:CD,169620:CD,169624
169609 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,168141
169612 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,169624:JM,169625:JM,169630:CL,139279
169616 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,169637:JM,169631:CL,103412
169620 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,169652:JM,169643:JM,169640:JM,169660:CL,139270
169624 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,169625:CD,169630:CD,169631
169625 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,169625:JM,169630
169630 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,169631:CD,169667
169631 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,169632:CD,169637:CD,169667
169632 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,169637
169638 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,169640
169637 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,169638:CD,169640:CD,169667
169643 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,169644:CD,169649:CD,169650:CD,169652
169640 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,169641:CD,169643:CD,169644:CD,169649
169641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,169643
169644 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,169649:CL,173152
169650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,169652
169649 :: NORM :: compound :: Z :: return v25::DD,169609
169652 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,169653:CD,169657:CD,169658:CD,169660
169653 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,169657:CL,173191
169658 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,169660
169657 :: NORM :: compound :: Z :: return v23::DD,169609
169660 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,169661:CD,169665:CD,169666
169661 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,169665:CL,173210
169666 :: NORM :: compound :: Z :: return #(0)::DD,169609
169667 :: NORM :: compound :: Z :: return #(0)::DD,169609
169665 :: NORM :: compound :: Z :: return v21::DD,169609
171873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,171878:CD,171883:CD,171887:CD,171891:CD,172313:CD,172318:CD,172323:CD,172367:CD,172418:CD,172422:CD,172446:CD,172447:CD,172448:CD,172449:CD,172454:CD,172455:CD,172456:CD,172457:CD,172458
171878 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
171883 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
171887 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
171891 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,172422:JM,172457
171896 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,171905
171901 :: CALL :: call :: Z :: v22 = v20.matches()::JM,171905
171906 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,171905
171905 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,171906:CD,171915:CD,171920:CD,171924:CD,172450:CD,172451:CD,172452:CD,172453:JM,171905
171915 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,171924
171920 :: CALL :: call :: Z :: v27 = v25.matches()::JM,171924
171924 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,172450:CD,171925:CD,171930:CD,171931
171925 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,171954:JM,171930:JM,171934:JM,172126:JM,171932
171930 :: EXPR :: assign :: I :: v31 = v30.length::DD,171931
171931 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,171932:CD,171933:CD,171936:CD,171941:CD,171945:CD,171949:CD,171954:CD,171955:CD,171996:CD,172001:CD,172006:CD,172007:CD,172051:CD,172052:CD,172066:CD,172067:CD,172081:CD,172082:CD,172096:CD,172097:CD,172111:CD,172116:CD,172121:CD,172126:CD,172127:CD,172133:CD,172142:CD,172151:CD,172160:CD,172169:CD,172178:CD,172183:CD,172188:CD,172239:CD,172244:CD,172282:JM,173442:JM,173475:JM,173472:JM,173478:JM,173445:JM,173451:JM,173448:JM,173481:JM,173454:JM,173457:JM,173430:JM,173463:JM,173460:JM,173466:JM,173433:JM,173439:JM,173436:JM,173469:CD,172304:CD,172429:CD,172431:CD,172436:CD,172438:CD,172443:CD,172444:CD,172450:CD,172451:CD,172452:CD,172453
171934 :: EXPR :: assign :: I :: v35 = v30.length::DD,171935
171935 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,171936:CD,171941:CD,171945:CD,171949:CD,171954:CD,171955:CD,171996:CD,172001:CD,172006:CD,172007:CD,172051:CD,172052:CD,172066:CD,172067:CD,172081:CD,172082:CD,172096:CD,172097:CD,172111:CD,172116:CD,172121:CD,172126:CD,172127:CD,172133:CD,172142:CD,172151:CD,172160:CD,172169:CD,172178:CD,172183:CD,172188:CD,172239:CD,172244:CD,172282:JM,173442:JM,173475:JM,173472:JM,173478:JM,173445:JM,173451:JM,173448:JM,173481:JM,173454:JM,173457:JM,173430:JM,173463:JM,173460:JM,173466:JM,173433:JM,173439:JM,173436:JM,173469:CD,172304:CD,172333:CD,172429:CD,172431:CD,172436:CD,172438:CD,172443:CD,172444:CD,172450:CD,172451:CD,172452:CD,172453
171932 :: EXPR :: assign :: I :: v33 = v30.length::DD,171933
171933 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,171934:CD,171935:CD,171936:CD,171941:CD,171945:CD,171949:CD,171954:CD,171955:CD,171996:CD,172001:CD,172006:CD,172007:CD,172051:CD,172052:CD,172066:CD,172067:CD,172081:CD,172082:CD,172096:CD,172097:CD,172111:CD,172116:CD,172121:CD,172126:CD,172127:CD,172133:CD,172142:CD,172151:CD,172160:CD,172169:CD,172178:CD,172183:CD,172188:CD,172239:CD,172244:CD,172282:JM,173442:JM,173475:JM,173472:JM,173478:JM,173445:JM,173451:JM,173448:JM,173481:JM,173454:JM,173457:JM,173430:JM,173463:JM,173460:JM,173466:JM,173433:JM,173439:JM,173436:JM,173469:CD,172304:CD,172429:CD,172431:CD,172436:CD,172438:CD,172443:CD,172444:CD,172450:CD,172451:CD,172452:CD,172453
171936 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,171949
171937 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
171941 :: CALL :: call :: J :: v42 = parseLong(v40)::
171945 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
171949 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,171956:DD,172429
171954 :: EXPR :: assign :: I :: v47 = v30.length::DD,171955
171955 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,172429:CD,171956:CD,171961:CD,171966
171956 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,172429
171957 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,171966:JM,171977
171961 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,171966
171966 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,171972:CD,171977:CD,172429
171972 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,171977
171977 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,171986:CD,172429
171986 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
171996 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,172111
172001 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,172066:JM,172051:JM,172096:JM,172081:JM,172006:JM,172008
172006 :: EXPR :: assign :: I :: v73 = v72.length::DD,172007
172007 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,172008:CD,172009:CD,172010:CD,172431
172010 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,172019:CD,172029:CD,172031:CD,172431
172008 :: EXPR :: assign :: I :: v76 = v72.length::CF,172009
172009 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,172431:CD,172010
172019 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
172031 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,172431:CD,172040:CD,172050
172029 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,172431
172040 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
172050 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,172431
172051 :: EXPR :: assign :: I :: v97 = v72.length::DD,172052
172052 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,172057:CD,172061
172053 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
172057 :: CALL :: call :: I :: v100 = parseInt(v98)::
172061 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
172066 :: EXPR :: assign :: I :: v104 = v72.length::DD,172067
172067 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,172072:CD,172076
172068 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
172072 :: CALL :: call :: I :: v107 = parseInt(v105)::
172076 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
172082 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,172087:CD,172091
172083 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
172081 :: EXPR :: assign :: I :: v111 = v72.length::DD,172082
172087 :: CALL :: call :: I :: v115 = parseInt(v113)::
172091 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
172098 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
172096 :: EXPR :: assign :: I :: v119 = v72.length::DD,172097
172097 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,172102:CD,172106
172102 :: CALL :: call :: I :: v122 = parseInt(v120)::
172106 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
172111 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,172116
172116 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,172121
172121 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,172128:DD,172436
172126 :: EXPR :: assign :: I :: v132 = v30.length::DD,172127
172127 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,172436:CD,172128
172128 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,172436
172133 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,172142
172142 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,172151
172151 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,172160
172160 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,172169
172169 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,172178
172178 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
172179 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,172188:JM,172195
172183 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,172188
172190 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,172195
172188 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,172190:CD,172195:CD,172438
172195 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,172196:CD,172226:CD,172230:CD,172438
172196 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,172200:CD,172209:CD,172211:CD,172438
172200 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
172211 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,172438:CD,172215:CD,172224
172209 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,172438
172215 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
172226 :: CALL :: call :: J :: v180 = parseLong(v158)::
172224 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,172438
172230 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
172235 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,172244:JM,172245:JM,172249
172239 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,172244
172244 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,172245:CD,172249:CD,172443:CD,172444
172245 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,172245:JM,172249
172249 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,172254:CD,172259:CD,172260:CD,172265:CD,172281:CD,172440:CD,172441:CD,172442:CD,172443:CD,172444
172254 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,172260:JM,172265
172259 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,172260
172260 :: EXPR :: assign :: I :: v196 = v194.length::
172265 :: EXPR :: assign :: I :: v198 = v194.length::DD,172281
172275 :: CALL :: call :: Z :: v203 = v195.add(v201)::
172282 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
172280 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,172442:CF,172440
172281 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,172443:CD,172275:CD,172280:CD,172440:CD,172441:CD,172442
172304 :: CALL :: call :: Z :: v212 = v4.add(v209)::
172313 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
172318 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
172323 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
172333 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,172337:CD,172346:CD,172348:CD,172450:CD,172451:CD,172452:CD,172453
172337 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
172346 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,172452
172348 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,172450:CD,172352:CD,172361:CD,172451:CD,172452:CD,172453
172352 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
172362 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,172422:JM,172457
172361 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,172450
172366 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,172458:CF,172454
172367 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,171896:CD,171901:CD,171905:CD,172362:CD,172366:CD,172450:CD,172451:CD,172452:CD,172453:CD,172454:CD,172455:CD,172456:CD,172457:CD,172458
172418 :: CALL :: call :: V :: p1 $in .close()::JM,172422:JM,172457
172422 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,172423:JM,172457
172423 :: CALL :: call :: V :: p1 $in .close()::JM,172457
172431 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,172051:DD,172447:DD,172451
172429 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,171996
172438 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,172446:DD,172450
172436 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,172133
172442 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,172280:DD,172281
172443 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,172444:DD,172448:DD,172452
172440 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,172441:DD,172440:DD,172443:DD,172448
172441 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,172442:DD,172441:DD,172444:DD,172449
172446 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,172450
172447 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,172451
172444 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,172449:DD,172453
172450 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,172451:DD,172454
172451 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,172452:DD,172455
172448 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,172452
172449 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,172453
172454 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,172455:DD,172196:DD,172209:DD,172211:DD,172224:DD,172361:DD,172438:DD,172446:DD,172450
172455 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,172456:DD,172010:DD,172029:DD,172031:DD,172050:DD,172431:DD,172447:DD,172451
172452 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,172453:DD,172456
172453 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,172422:JM,172457:DD,172366
172458 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,172441:DD,172444:DD,172449:DD,172453:CF,172367
172456 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,172457:DD,172333:DD,172346:DD,172348:DD,172440:DD,172443:DD,172448:DD,172452
172457 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,172458:DD,172367
172762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,172763:CD,172766:CD,172775:CD,172783:CD,172788:CD,172789:CD,172794:CD,172799:CD,172808:CD,172809:CD,172810:CD,172826:CD,172827:CD,172829
172763 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
172766 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
172771 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,172809:JM,172829
172775 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,172809:JM,172829
172779 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,172826:JM,172809
172783 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,172826:JM,172809
172788 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
172789 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
172794 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
172799 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
172810 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
172808 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,172827:CF,172809
172809 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,172810
172816 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
172820 :: CALL :: call :: Z :: v32 = v25.add(v30)::
172826 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,172816:CD,172820:CD,172825:CD,172829:CF,172827
172827 :: NORM :: compound :: Ljava/util/List :: return v25::DD,172763
172825 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,172829
172829 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,172825:DD,172826
172867 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
172870 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
172928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,172947
172947 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,173522
173152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,173153:CD,173157:CD,173159:CD,173163:CD,173168
173153 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,169649
173159 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,173168
173157 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,173168
173163 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,173168
173168 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,173169:CD,173174:CD,173178
173169 :: NORM :: compound :: Z :: return #(0)::DD,173153
173174 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,173178:CL,173651
173178 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,173179:CD,173180
173179 :: NORM :: compound :: Z :: return #(0)::DD,173153
173180 :: NORM :: compound :: Z :: return #(1)::DD,173153
173191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173192:CD,173195:CD,173199:CD,173203
173195 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173203:CL,125671
173192 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,169657
173199 :: CALL :: call :: I :: v6 = v4.length()::JM,173203
173203 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,173204:CD,173205
173204 :: NORM :: compound :: Z :: return #(1)::CF,173192
173205 :: NORM :: compound :: Z :: return #(0)::CF,173192
173210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173211:CD,173214:CD,173218:CD,173220:CD,173224:CD,173229
173211 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,169665
173214 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173229:CL,125671
173218 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,173229
173220 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,173229
173224 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,173229
173230 :: NORM :: compound :: Z :: return #(0)::DD,173211
173229 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,173230:CD,173235:CD,173239
173235 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,173239:CL,173666
173239 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,173240:CD,173241
173240 :: NORM :: compound :: Z :: return #(0)::DD,173211
173241 :: NORM :: compound :: Z :: return #(1)::DD,173211
173430 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = p1 $uid ::
173433 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = p2 $domainId ::
173439 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = p4 $xGroup ::
173436 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = p3 $manual ::
173442 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = p5 $hGroup ::
173445 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = p6 $tGroup ::
173451 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p8 $pdbId ::
173448 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = p7 $fGroup ::
173454 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p9 $chainId ::
173457 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = p10 $range ::
173463 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = p12 $architectureName ::
173460 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = p11 $seqId ::
173466 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = p13 $xGroupName ::
173469 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = p14 $hGroupName ::
173475 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = p16 $fGroupName ::
173472 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = p15 $tGroupName ::
173478 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = p17 $assemblyId ::
173481 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = p18 $ligands ::
173522 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,173529:CD,173530
173526 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,173529
173530 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,173541:CD,173545:CD,173549:CD,173556:CD,173560:CD,173561:CD,173565:CD,173572:CD,173576:CD,173577:CD,173581:CD,173588:CD,173592:CD,173593:CD,173597:CD,173601:CD,173605:CD,173609:CD,173613:CD,173617:CD,173618:CD,173619:CD,173623
173529 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,173530
173535 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,173541
173538 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,173541
173542 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,173545
173541 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,173545
173546 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,173560:JM,173549
173545 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,173623
173549 :: CALL :: call :: D :: v15 = cos(v13)::JM,173560:JM,173549
173553 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,173556:JM,173560
173556 :: CALL :: call :: D :: v18 = cos(v16)::JM,173556:JM,173560
173562 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,173576:JM,173565
173560 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,173561
173561 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,173577
173565 :: CALL :: call :: D :: v23 = cos(v21)::JM,173576:JM,173565
173569 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,173572:JM,173576
173572 :: CALL :: call :: D :: v26 = cos(v24)::JM,173572:JM,173576
173578 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,173592:JM,173581
173576 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,173577
173577 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,173593
173581 :: CALL :: call :: D :: v31 = cos(v29)::JM,173592:JM,173581
173585 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,173588:JM,173592
173588 :: CALL :: call :: D :: v34 = cos(v32)::JM,173588:JM,173592
173594 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,173601:JM,173597
173592 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,173593
173593 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,173618
173597 :: CALL :: call :: D :: v40 = cos(v38)::JM,173601:JM,173597
173602 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,173605:JM,173609
173601 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,173609
173605 :: CALL :: call :: D :: v44 = cos(v42)::JM,173605:JM,173609
173610 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,173617:JM,173613
173609 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,173617
173613 :: CALL :: call :: D :: v48 = cos(v46)::JM,173617:JM,173613
173618 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,173619:JM,173623
173619 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,173619:JM,173623
173617 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,173618
173623 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,173624
173624 :: EXPR :: modify :: D :: p0 $this .volume = v53::
173651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,173652:CD,173657:CD,173662:CD,173663
173652 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,173178
173657 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,173662
173662 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,173663
173663 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,173652
173666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,173667:CD,173672:CD,173677:CD,173678
173667 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,173239
173672 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,173677
173678 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,173667
173677 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,173678
