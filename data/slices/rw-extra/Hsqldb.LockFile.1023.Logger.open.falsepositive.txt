[53290, 53295]
1 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.open()::CD,8:CD,12:CD,29:CD,152:CD,156:CD,194:CD,485:CD,491:JM,31833:CD,586:CD,590
5 :: EXPR :: reference :: Lorg/hsqldb/Database :: v3 = p0 $this .database::JM,8:JM,12:JM,29
8 :: CALL :: call :: Lorg/hsqldb/persist/HsqlProperties :: v5 = v3.getURLProperties()::JM,8:JM,12:JM,29
12 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getProperty(#(fileaccess_class_name))::JM,12:JM,29
29 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 214::CD,45:CD,84
45 :: CALL :: call :: Ljava/lang/ClassLoader :: v31 = v29.getContextClassLoader()::
84 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v60 = v43.getConstructor(v50)::
149 :: EXPR :: reference :: Lorg/hsqldb/Database :: v83 = p0 $this .database::JM,160:JM,152:JM,156
152 :: CALL :: call :: Lorg/hsqldb/DatabaseType :: v85 = v83.getType()::JM,160:JM,152:JM,156
156 :: CALL :: call :: Z :: v87 = v85.isFileBased()::JM,160:JM,156
160 :: EXPR :: modify :: Z :: p0 $this .propIsFileDatabase = v87::
191 :: EXPR :: reference :: Z :: v97 = p0 $this .propIsFileDatabase::DD,194
194 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 448::CD,216:CD,233:CD,244:CD,248
216 :: CALL :: call :: Ljava/lang/String :: v108 = valueOf(v106)::
233 :: CALL :: call :: Z :: v116 = v102.isStreamElement(v114)::JM,262:CL,30080:CL,30131
238 :: EXPR :: reference :: Lorg/hsqldb/Database :: v117 = p0 $this .database::
241 :: EXPR :: reference :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v118 = v117.databaseProperties::JM,244:JM,248
244 :: CALL :: call :: Z :: v120 = v118.isVersion18()::JM,244:JM,248
248 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 369::CD,262
262 :: PRED :: IF :: Z :: if (v116 != #(0)) goto 432::CD,274:CD,296
274 :: CALL :: call :: Ljava/lang/String :: v127 = valueOf(v125)::
296 :: CALL :: call :: Z :: v137 = v121.isStreamElement(v135)::CL,30080:CL,30131
485 :: CALL :: call :: V :: p0 $this .setVariables()::CL,30219
488 :: EXPR :: reference :: Z :: v210 = p0 $this .propIsFileDatabase::DD,491
491 :: PRED :: IF :: Z :: if (v210 == #(0)) goto 755::CD,495:CD,499
492 :: EXPR :: reference :: Lorg/hsqldb/Database :: v211 = p0 $this .database::JM,499:JM,495
495 :: CALL :: call :: Z :: v213 = v211.isFilesReadOnly()::JM,499:JM,495
499 :: PRED :: IF :: Z :: if (v213 != #(0)) goto 755::CD,508:CD,533
508 :: CALL :: call :: Ljava/lang/String :: v219 = valueOf(v217)::
533 :: CALL :: call :: Ljava/lang/String :: v231 = valueOf(v229)::
586 :: CALL :: call :: Z :: v250 = p0 $this .isFileDatabase()::JM,590:CL,31860
590 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 810::CD,605:CD,609:CD,614
602 :: EXPR :: reference :: Lorg/hsqldb/Database :: v253 = p0 $this .database::JM,609:JM,614:JM,605
605 :: CALL :: call :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v255 = v253.getProperties()::JM,609:JM,614:JM,605
609 :: CALL :: call :: Z :: v257 = v255.isPropertyTrue(#(hsqldb.lock_file))::JM,609:JM,614
614 :: PRED :: IF :: Z :: if (v257 == #(0)) goto 864::CD,618:CD,622
615 :: EXPR :: reference :: Lorg/hsqldb/Database :: v258 = p0 $this .database::JM,618:JM,622
618 :: CALL :: call :: Z :: v260 = v258.isFilesReadOnly()::JM,618:JM,622
622 :: PRED :: IF :: Z :: if (v260 != #(0)) goto 864::CD,630
630 :: CALL :: call :: V :: p0 $this .acquireLock(v263)::CL,31869
1372 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.<clinit>()::JM,32496:JM,32483:JM,32500:JM,32502:JM,32473:JM,32491:JM,32478:JM,32510:JM,32511
1396 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlDatabaseProperties.<clinit>()::CD,1399:CD,1403:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,1465:CD,1471:CD,1479:CD,1485:CD,1493:CD,1499:CD,1507:CD,1513:CD,1521:CD,1527:CD,1535:CD,1541:CD,1549:CD,1555:CD,1563:CD,1569:CD,1577:CD,1583:CD,1591:CD,1599:CD,1607:CD,1615:CD,1623:CD,1631:CD,1639:CD,1647:CD,1657:CD,1663:CD,1669:CD,1677:CD,1683:CD,1691:CD,1697:CD,1705:CD,1711:CD,1719:CD,1725:CD,1733:CD,1739:CD,1747:CD,1753:CD,1761:CD,1767:CD,1775:CD,1781:CD,1789:CD,1795:CD,1803:CD,1809:CD,1817:CD,1822:CD,1830:CD,1836:CD,1844:CD,1850:CD,1858:CD,1864:CD,1872:CD,1878:CD,1886:CD,1892:CD,1900:CD,1906:CD,1914:CD,1920:CD,1928:CD,1934:CD,1942:CD,1948:CD,1956:CD,1962:CD,1970:CD,1976:CD,1984:CD,1990:CD,1998:CD,2004:CD,2012:CD,2018:CD,2026:CD,2032:CD,2040:CD,2046:CD,2054:CD,2060:CD,2068:CD,2074:CD,2082:CD,2088:CD,2096:CD,2102:CD,2110:CD,2116:CD,2124:CD,2130:CD,2138:CD,2146:CD,2154:CD,2160:CD,2168:CD,2174:CD,2182:CD,2188:CD,2196:CD,2202:CD,2210:CD,2216:CD,2224:CD,2230:CD,2238:CD,2244:CD,2252:CD,2258:CD,2266:CD,2272:CD,2280:CD,2286:CD,2294:CD,2300:CD,2308:CD,2314:CD,2351:CD,2358:CD,2366:CD,2374:CD,2382:CD,2390:CD,2398:CD,2406:CD,2423:CD,2430:CD,2463:CD,2470:CD,2478:CD,2484:CD,2529:CD,2536:CD,2544:CD,2552:CD,2560:CD,2568:CD,2576:CD,2584:CD,2592:CD,2600:CD,2608:CD,2616:CD,2624:CD,2632:CD,2640:CD,2648:CD,2656:CD,2664:CD,2672:CD,2678:CD,2686:CD,2694
1399 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(hsqldb.method_class_names))::JM,1399:JM,1403
1403 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 54::JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,1410:CD,1428:CD,1429:CD,2702
1410 :: CALL :: call :: [Ljava/lang/String :: v10 = split(v4, #(;))::JM,1428:CL,32554
1422 :: CALL :: call :: Z :: v16 = v13.add(v14)::CL,32634
1427 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,2702
1428 :: EXPR :: assign :: I :: v12 = v10.length::CF,1429
1429 :: PRED :: IF :: Z :: if (v19 < v12) goto 33::CD,1422:CD,1427:CD,1428:CD,2702
1465 :: CALL :: call :: [Ljava/lang/Object :: v40 = getMeta(#(textdb.allow_full_path), #(0), v38)::CL,32690
1471 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.put(#(textdb.allow_full_path), v40)::CL,32743
1479 :: CALL :: call :: [Ljava/lang/Object :: v47 = getMeta(#(textdb.quoted), #(2), #(1))::CL,32690
1485 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(#(textdb.quoted), v47)::CL,32743
1493 :: CALL :: call :: [Ljava/lang/Object :: v53 = getMeta(#(textdb.all_quoted), #(2), #(0))::CL,32690
1499 :: CALL :: call :: Ljava/lang/Object :: v55 = v50.put(#(textdb.all_quoted), v53)::CL,32743
1507 :: CALL :: call :: [Ljava/lang/Object :: v59 = getMeta(#(textdb.ignore_first), #(2), #(0))::CL,32690
1513 :: CALL :: call :: Ljava/lang/Object :: v61 = v56.put(#(textdb.ignore_first), v59)::CL,32743
1521 :: CALL :: call :: [Ljava/lang/Object :: v66 = getMeta(#(textdb.fs), #(2), #(,))::CL,32765
1527 :: CALL :: call :: Ljava/lang/Object :: v68 = v62.put(#(textdb.fs), v66)::CL,32743
1535 :: CALL :: call :: [Ljava/lang/Object :: v72 = getMeta(#(textdb.vs), #(2), #(null))::CL,32765
1541 :: CALL :: call :: Ljava/lang/Object :: v74 = v69.put(#(textdb.vs), v72)::CL,32743
1549 :: CALL :: call :: [Ljava/lang/Object :: v78 = getMeta(#(textdb.lvs), #(2), #(null))::CL,32765
1555 :: CALL :: call :: Ljava/lang/Object :: v80 = v75.put(#(textdb.lvs), v78)::CL,32743
1563 :: CALL :: call :: [Ljava/lang/Object :: v85 = getMeta(#(textdb.qc), #(2), #('))::CL,32765
1569 :: CALL :: call :: Ljava/lang/Object :: v87 = v81.put(#(textdb.qc), v85)::CL,32743
1577 :: CALL :: call :: [Ljava/lang/Object :: v92 = getMeta(#(textdb.encoding), #(2), #(ISO-8859-1))::CL,32765
1583 :: CALL :: call :: Ljava/lang/Object :: v94 = v88.put(#(textdb.encoding), v92)::CL,32743
1591 :: CALL :: call :: [Ljava/lang/Object :: v101 = getMeta(#(textdb.cache_scale), #(2), #(10), #(8), #(16))::CL,32808
1599 :: CALL :: call :: Ljava/lang/Object :: v103 = v95.put(#(textdb.cache_scale), v101)::CL,32743
1607 :: CALL :: call :: [Ljava/lang/Object :: v109 = getMeta(#(textdb.cache_size_scale), #(2), #(10), #(6), #(20))::CL,32808
1615 :: CALL :: call :: Ljava/lang/Object :: v111 = v104.put(#(textdb.cache_size_scale), v109)::CL,32743
1623 :: CALL :: call :: [Ljava/lang/Object :: v118 = getMeta(#(textdb.cache_rows), #(2), #(1000), #(100), #(1000000))::CL,32808
1631 :: CALL :: call :: Ljava/lang/Object :: v120 = v112.put(#(textdb.cache_rows), v118)::CL,32743
1639 :: CALL :: call :: [Ljava/lang/Object :: v124 = getMeta(#(textdb.cache_size), #(2), #(100), #(10), #(1000000))::CL,32808
1647 :: CALL :: call :: Ljava/lang/Object :: v126 = v121.put(#(textdb.cache_size), v124)::CL,32743
1657 :: CALL :: call :: V :: v127.putAll(v128)::CL,32888
1663 :: CALL :: call :: [Ljava/lang/Object :: v133 = getMeta(#(version), #(1), #(null))::CL,32765
1669 :: CALL :: call :: Ljava/lang/Object :: v135 = v130.put(#(version), v133)::CL,32743
1677 :: CALL :: call :: [Ljava/lang/Object :: v139 = getMeta(#(modified), #(1), #(null))::CL,32765
1683 :: CALL :: call :: Ljava/lang/Object :: v141 = v136.put(#(modified), v139)::CL,32743
1691 :: CALL :: call :: [Ljava/lang/Object :: v145 = getMeta(#(hsqldb.cache_version), #(1), #(null))::CL,32765
1697 :: CALL :: call :: Ljava/lang/Object :: v147 = v142.put(#(hsqldb.cache_version), v145)::CL,32743
1705 :: CALL :: call :: [Ljava/lang/Object :: v151 = getMeta(#(readonly), #(1), #(0))::CL,32690
1711 :: CALL :: call :: Ljava/lang/Object :: v153 = v148.put(#(readonly), v151)::CL,32743
1719 :: CALL :: call :: [Ljava/lang/Object :: v157 = getMeta(#(files_readonly), #(1), #(0))::CL,32690
1725 :: CALL :: call :: Ljava/lang/Object :: v159 = v154.put(#(files_readonly), v157)::CL,32743
1733 :: CALL :: call :: [Ljava/lang/Object :: v164 = getMeta(#(hsqldb.tx), #(2), #(LOCKS))::CL,32765
1739 :: CALL :: call :: Ljava/lang/Object :: v166 = v160.put(#(hsqldb.tx), v164)::CL,32743
1747 :: CALL :: call :: [Ljava/lang/Object :: v171 = getMeta(#(hsqldb.tx_level), #(2), #(READ_COMMITTED))::CL,32765
1753 :: CALL :: call :: Ljava/lang/Object :: v173 = v167.put(#(hsqldb.tx_level), v171)::CL,32743
1761 :: CALL :: call :: [Ljava/lang/Object :: v177 = getMeta(#(hsqldb.temp_directory), #(2), #(null))::CL,32765
1767 :: CALL :: call :: Ljava/lang/Object :: v179 = v174.put(#(hsqldb.temp_directory), v177)::CL,32743
1775 :: CALL :: call :: [Ljava/lang/Object :: v184 = getMeta(#(hsqldb.default_table_type), #(2), #(MEMORY))::CL,32765
1781 :: CALL :: call :: Ljava/lang/Object :: v186 = v180.put(#(hsqldb.default_table_type), v184)::CL,32743
1789 :: CALL :: call :: [Ljava/lang/Object :: v191 = getMeta(#(hsqldb.digest), #(2), #(MD5))::CL,32765
1795 :: CALL :: call :: Ljava/lang/Object :: v193 = v187.put(#(hsqldb.digest), v191)::CL,32743
1803 :: CALL :: call :: [Ljava/lang/Object :: v197 = getMeta(#(sql.live_object), #(2), #(0))::CL,32690
1809 :: CALL :: call :: Ljava/lang/Object :: v199 = v194.put(#(sql.live_object), v197)::CL,32743
1817 :: CALL :: call :: [Ljava/lang/Object :: v203 = getMeta(#(tx_timestamp), #(0))::CL,32934
1822 :: CALL :: call :: Ljava/lang/Object :: v205 = v200.put(#(tx_timestamp), v203)::CL,32743
1830 :: CALL :: call :: [Ljava/lang/Object :: v209 = getMeta(#(hsqldb.tx_conflict_ro...), #(2), #(1))::CL,32690
1836 :: CALL :: call :: Ljava/lang/Object :: v211 = v206.put(#(hsqldb.tx_conflict_ro...), v209)::CL,32743
1844 :: CALL :: call :: [Ljava/lang/Object :: v215 = getMeta(#(jdbc.translate_tti_types), #(2), #(1))::CL,32690
1850 :: CALL :: call :: Ljava/lang/Object :: v217 = v212.put(#(jdbc.translate_tti_types), v215)::CL,32743
1858 :: CALL :: call :: [Ljava/lang/Object :: v221 = getMeta(#(hsqldb.inc_backup), #(2), #(1))::CL,32690
1864 :: CALL :: call :: Ljava/lang/Object :: v223 = v218.put(#(hsqldb.inc_backup), v221)::CL,32743
1872 :: CALL :: call :: [Ljava/lang/Object :: v227 = getMeta(#(hsqldb.lock_file), #(2), #(1))::CL,32690
1878 :: CALL :: call :: Ljava/lang/Object :: v229 = v224.put(#(hsqldb.lock_file), v227)::CL,32743
1886 :: CALL :: call :: [Ljava/lang/Object :: v233 = getMeta(#(hsqldb.log_data), #(2), #(1))::CL,32690
1892 :: CALL :: call :: Ljava/lang/Object :: v235 = v230.put(#(hsqldb.log_data), v233)::CL,32743
1900 :: CALL :: call :: [Ljava/lang/Object :: v239 = getMeta(#(hsqldb.nio_data_file), #(2), #(1))::CL,32690
1906 :: CALL :: call :: Ljava/lang/Object :: v241 = v236.put(#(hsqldb.nio_data_file), v239)::CL,32743
1914 :: CALL :: call :: [Ljava/lang/Object :: v245 = getMeta(#(hsqldb.full_log_replay), #(2), #(0))::CL,32690
1920 :: CALL :: call :: Ljava/lang/Object :: v247 = v242.put(#(hsqldb.full_log_replay), v245)::CL,32743
1928 :: CALL :: call :: [Ljava/lang/Object :: v251 = getMeta(#(sql.ref_integrity), #(2), #(1))::CL,32690
1934 :: CALL :: call :: Ljava/lang/Object :: v253 = v248.put(#(sql.ref_integrity), v251)::CL,32743
1942 :: CALL :: call :: [Ljava/lang/Object :: v257 = getMeta(#(sql.restrict_exec), #(2), #(0))::CL,32690
1948 :: CALL :: call :: Ljava/lang/Object :: v259 = v254.put(#(sql.restrict_exec), v257)::CL,32743
1956 :: CALL :: call :: [Ljava/lang/Object :: v263 = getMeta(#(sql.enforce_names), #(2), #(0))::CL,32690
1962 :: CALL :: call :: Ljava/lang/Object :: v265 = v260.put(#(sql.enforce_names), v263)::CL,32743
1970 :: CALL :: call :: [Ljava/lang/Object :: v269 = getMeta(#(sql.regular_names), #(2), #(1))::CL,32690
1976 :: CALL :: call :: Ljava/lang/Object :: v271 = v266.put(#(sql.regular_names), v269)::CL,32743
1984 :: CALL :: call :: [Ljava/lang/Object :: v275 = getMeta(#(sql.enforce_refs), #(2), #(0))::CL,32690
1990 :: CALL :: call :: Ljava/lang/Object :: v277 = v272.put(#(sql.enforce_refs), v275)::CL,32743
1998 :: CALL :: call :: [Ljava/lang/Object :: v281 = getMeta(#(sql.enforce_size), #(2), #(1))::CL,32690
2004 :: CALL :: call :: Ljava/lang/Object :: v283 = v278.put(#(sql.enforce_size), v281)::CL,32743
2012 :: CALL :: call :: [Ljava/lang/Object :: v287 = getMeta(#(sql.enforce_types), #(2), #(0))::CL,32690
2018 :: CALL :: call :: Ljava/lang/Object :: v289 = v284.put(#(sql.enforce_types), v287)::CL,32743
2026 :: CALL :: call :: [Ljava/lang/Object :: v293 = getMeta(#(sql.enforce_tdc_delete), #(2), #(1))::CL,32690
2032 :: CALL :: call :: Ljava/lang/Object :: v295 = v290.put(#(sql.enforce_tdc_delete), v293)::CL,32743
2040 :: CALL :: call :: [Ljava/lang/Object :: v299 = getMeta(#(sql.enforce_tdc_update), #(2), #(1))::CL,32690
2046 :: CALL :: call :: Ljava/lang/Object :: v301 = v296.put(#(sql.enforce_tdc_update), v299)::CL,32743
2054 :: CALL :: call :: [Ljava/lang/Object :: v305 = getMeta(#(sql.char_literal), #(2), #(1))::CL,32690
2060 :: CALL :: call :: Ljava/lang/Object :: v307 = v302.put(#(sql.char_literal), v305)::CL,32743
2068 :: CALL :: call :: [Ljava/lang/Object :: v311 = getMeta(#(sql.concat_nulls), #(2), #(1))::CL,32690
2074 :: CALL :: call :: Ljava/lang/Object :: v313 = v308.put(#(sql.concat_nulls), v311)::CL,32743
2082 :: CALL :: call :: [Ljava/lang/Object :: v317 = getMeta(#(sql.nulls_first), #(2), #(1))::CL,32690
2088 :: CALL :: call :: Ljava/lang/Object :: v319 = v314.put(#(sql.nulls_first), v317)::CL,32743
2096 :: CALL :: call :: [Ljava/lang/Object :: v323 = getMeta(#(sql.nulls_order), #(2), #(1))::CL,32690
2102 :: CALL :: call :: Ljava/lang/Object :: v325 = v320.put(#(sql.nulls_order), v323)::CL,32743
2110 :: CALL :: call :: [Ljava/lang/Object :: v329 = getMeta(#(sql.unique_nulls), #(2), #(1))::CL,32690
2116 :: CALL :: call :: Ljava/lang/Object :: v331 = v326.put(#(sql.unique_nulls), v329)::CL,32743
2124 :: CALL :: call :: [Ljava/lang/Object :: v335 = getMeta(#(sql.convert_trunc), #(2), #(1))::CL,32690
2130 :: CALL :: call :: Ljava/lang/Object :: v337 = v332.put(#(sql.convert_trunc), v335)::CL,32743
2138 :: CALL :: call :: [Ljava/lang/Object :: v341 = getMeta(#(sql.avg_scale), #(2), #(0), #(0), #(10))::CL,32808
2146 :: CALL :: call :: Ljava/lang/Object :: v343 = v338.put(#(sql.avg_scale), v341)::CL,32743
2154 :: CALL :: call :: [Ljava/lang/Object :: v347 = getMeta(#(sql.double_nan), #(2), #(1))::CL,32690
2160 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(sql.double_nan), v347)::CL,32743
2168 :: CALL :: call :: [Ljava/lang/Object :: v353 = getMeta(#(sql.syntax_db2), #(2), #(0))::CL,32690
2174 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(sql.syntax_db2), v353)::CL,32743
2182 :: CALL :: call :: [Ljava/lang/Object :: v359 = getMeta(#(sql.syntax_mss), #(2), #(0))::CL,32690
2188 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(sql.syntax_mss), v359)::CL,32743
2196 :: CALL :: call :: [Ljava/lang/Object :: v365 = getMeta(#(sql.syntax_mys), #(2), #(0))::CL,32690
2202 :: CALL :: call :: Ljava/lang/Object :: v367 = v362.put(#(sql.syntax_mys), v365)::CL,32743
2210 :: CALL :: call :: [Ljava/lang/Object :: v371 = getMeta(#(sql.syntax_ora), #(2), #(0))::CL,32690
2216 :: CALL :: call :: Ljava/lang/Object :: v373 = v368.put(#(sql.syntax_ora), v371)::CL,32743
2224 :: CALL :: call :: [Ljava/lang/Object :: v377 = getMeta(#(sql.syntax_pgs), #(2), #(0))::CL,32690
2230 :: CALL :: call :: Ljava/lang/Object :: v379 = v374.put(#(sql.syntax_pgs), v377)::CL,32743
2238 :: CALL :: call :: [Ljava/lang/Object :: v383 = getMeta(#(sql.compare_in_locale), #(2), #(0))::CL,32690
2244 :: CALL :: call :: Ljava/lang/Object :: v385 = v380.put(#(sql.compare_in_locale), v383)::CL,32743
2252 :: CALL :: call :: [Ljava/lang/Object :: v389 = getMeta(#(sql.longvar_is_lob), #(2), #(0))::CL,32690
2258 :: CALL :: call :: Ljava/lang/Object :: v391 = v386.put(#(sql.longvar_is_lob), v389)::CL,32743
2266 :: CALL :: call :: [Ljava/lang/Object :: v395 = getMeta(#(sql.pad_space), #(2), #(1))::CL,32690
2272 :: CALL :: call :: Ljava/lang/Object :: v397 = v392.put(#(sql.pad_space), v395)::CL,32743
2280 :: CALL :: call :: [Ljava/lang/Object :: v401 = getMeta(#(sql.ignore_case), #(2), #(0))::CL,32690
2286 :: CALL :: call :: Ljava/lang/Object :: v403 = v398.put(#(sql.ignore_case), v401)::CL,32743
2294 :: CALL :: call :: [Ljava/lang/Object :: v407 = getMeta(#(hsqldb.write_delay), #(2), #(1))::CL,32690
2300 :: CALL :: call :: Ljava/lang/Object :: v409 = v404.put(#(hsqldb.write_delay), v407)::CL,32743
2308 :: CALL :: call :: [Ljava/lang/Object :: v413 = getMeta(#(hsqldb.large_data), #(2), #(0))::CL,32690
2314 :: CALL :: call :: Ljava/lang/Object :: v415 = v410.put(#(hsqldb.large_data), v413)::CL,32743
2351 :: CALL :: call :: [Ljava/lang/Object :: v426 = getMeta(#(hsqldb.files_space), #(2), #(0), v418)::CL,32980
2358 :: CALL :: call :: Ljava/lang/Object :: v428 = v416.put(#(hsqldb.files_space), v426)::CL,32743
2366 :: CALL :: call :: [Ljava/lang/Object :: v434 = getMeta(#(hsqldb.write_delay_millis), #(2), #(500), #(0), #(10000))::CL,32808
2374 :: CALL :: call :: Ljava/lang/Object :: v436 = v429.put(#(hsqldb.write_delay_millis), v434)::CL,32743
2382 :: CALL :: call :: [Ljava/lang/Object :: v440 = getMeta(#(hsqldb.applog), #(2), #(0), #(0), #(3))::CL,32808
2390 :: CALL :: call :: Ljava/lang/Object :: v442 = v437.put(#(hsqldb.applog), v440)::CL,32743
2398 :: CALL :: call :: [Ljava/lang/Object :: v446 = getMeta(#(hsqldb.sqllog), #(2), #(0), #(0), #(4))::CL,32808
2406 :: CALL :: call :: Ljava/lang/Object :: v448 = v443.put(#(hsqldb.sqllog), v446)::CL,32743
2423 :: CALL :: call :: [Ljava/lang/Object :: v453 = getMeta(#(hsqldb.script_format), #(2), #(0), v451)::CL,32980
2430 :: CALL :: call :: Ljava/lang/Object :: v455 = v449.put(#(hsqldb.script_format), v453)::CL,32743
2463 :: CALL :: call :: [Ljava/lang/Object :: v460 = getMeta(#(hsqldb.lob_file_scale), #(2), #(32), v458)::CL,32980
2470 :: CALL :: call :: Ljava/lang/Object :: v462 = v456.put(#(hsqldb.lob_file_scale), v460)::CL,32743
2478 :: CALL :: call :: [Ljava/lang/Object :: v466 = getMeta(#(hsqldb.lob_compressed), #(2), #(0))::CL,32690
2484 :: CALL :: call :: Ljava/lang/Object :: v468 = v463.put(#(hsqldb.lob_compressed), v466)::CL,32743
2529 :: CALL :: call :: [Ljava/lang/Object :: v478 = getMeta(#(hsqldb.cache_file_scale), #(2), #(32), v472)::CL,32980
2536 :: CALL :: call :: Ljava/lang/Object :: v480 = v469.put(#(hsqldb.cache_file_scale), v478)::CL,32743
2544 :: CALL :: call :: [Ljava/lang/Object :: v486 = getMeta(#(hsqldb.log_size), #(2), #(50), #(0), #(4096))::CL,32808
2552 :: CALL :: call :: Ljava/lang/Object :: v488 = v481.put(#(hsqldb.log_size), v486)::CL,32743
2560 :: CALL :: call :: [Ljava/lang/Object :: v492 = getMeta(#(hsqldb.defrag_limit), #(2), #(0), #(0), #(100))::CL,32808
2568 :: CALL :: call :: Ljava/lang/Object :: v494 = v489.put(#(hsqldb.defrag_limit), v492)::CL,32743
2576 :: CALL :: call :: [Ljava/lang/Object :: v498 = getMeta(#(runtime.gc_interval), #(2), #(0), #(0), #(1000000))::CL,32808
2584 :: CALL :: call :: Ljava/lang/Object :: v500 = v495.put(#(runtime.gc_interval), v498)::CL,32743
2592 :: CALL :: call :: [Ljava/lang/Object :: v505 = getMeta(#(hsqldb.cache_size), #(2), #(10000), #(100), #(4194304))::CL,32808
2600 :: CALL :: call :: Ljava/lang/Object :: v507 = v501.put(#(hsqldb.cache_size), v505)::CL,32743
2608 :: CALL :: call :: [Ljava/lang/Object :: v512 = getMeta(#(hsqldb.cache_rows), #(2), #(50000), #(100), #(4194304))::CL,32808
2616 :: CALL :: call :: Ljava/lang/Object :: v514 = v508.put(#(hsqldb.cache_rows), v512)::CL,32743
2624 :: CALL :: call :: [Ljava/lang/Object :: v518 = getMeta(#(hsqldb.cache_free_count), #(2), #(512), #(0), #(4096))::CL,32808
2632 :: CALL :: call :: Ljava/lang/Object :: v520 = v515.put(#(hsqldb.cache_free_count), v518)::CL,32743
2640 :: CALL :: call :: [Ljava/lang/Object :: v524 = getMeta(#(hsqldb.result_max_mem...), #(2), #(0), #(0), #(4194304))::CL,32808
2648 :: CALL :: call :: Ljava/lang/Object :: v526 = v521.put(#(hsqldb.result_max_mem...), v524)::CL,32743
2656 :: CALL :: call :: [Ljava/lang/Object :: v531 = getMeta(#(hsqldb.nio_max_size), #(2), #(256), #(64), #(262144))::CL,32808
2664 :: CALL :: call :: Ljava/lang/Object :: v533 = v527.put(#(hsqldb.nio_max_size), v531)::CL,32743
2672 :: CALL :: call :: [Ljava/lang/Object :: v537 = getMeta(#(sql.sys_index_names), #(2), #(0))::CL,32690
2678 :: CALL :: call :: Ljava/lang/Object :: v539 = v534.put(#(sql.sys_index_names), v537)::CL,32743
2686 :: CALL :: call :: [Ljava/lang/Object :: v544 = getMeta(#(hsqldb.min_reuse), #(2), #(0), #(0), #(1048576))::CL,32808
2694 :: CALL :: call :: Ljava/lang/Object :: v546 = v540.put(#(hsqldb.min_reuse), v544)::CL,32743
2702 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,1427:DD,1429:CF,1428
3237 :: ENTR :: entry :: null :: org.hsqldb.error.Error.<clinit>()::CD,3244
3244 :: CALL :: call :: I :: v6 = getBundleHandle(#(sql-state-messages), #(null))::CL,33035
3259 :: ENTR :: entry :: null :: org.hsqldb.lib.SimpleLog.<clinit>()::CD,3262:CD,3281
3262 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
3263 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #()::
3267 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(ERROR )::
3271 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(NORMAL)::
3275 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(DETAIL)::
3281 :: NORM :: declaration :: [Ljava/lang/String :: v13 = new java.lang.String[]::
3282 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(0)] = #()::
3286 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(1)] = #(BASIC )::
3290 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(2)] = #(NORMAL)::
3294 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(3)] = #(DETAIL)::
3298 :: EXPR :: modify :: Ljava/lang/Object :: v13[#(4)] = #(RESULT)::
3345 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.<clinit>()::CD,3354:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:JM,33306:CD,3371
3354 :: CALL :: call :: Ljava/util/Locale :: v5 = getDefault()::
3371 :: CALL :: call :: Ljava/lang/reflect/Method :: v11 = getNewGetBundleMethod()::CL,33314
3385 :: ENTR :: entry :: null :: org.hsqldb.DatabaseType.<clinit>()::CD,3388:JM,33367:CD,3395:CD,3397:CD,3404:CD,3406:CD,3413:CD,3415:CD,3416:CD,3422:CD,3428
3388 :: NORM :: declaration :: Lorg/hsqldb/DatabaseType :: v2 = new org.hsqldb.DatabaseType::DD,3395
3395 :: EXPR :: modify :: Lorg/hsqldb/DatabaseType :: org.hsqldb.DatabaseType.DB_MEM = v2::
3397 :: NORM :: declaration :: Lorg/hsqldb/DatabaseType :: v7 = new org.hsqldb.DatabaseType::DD,3404
3404 :: EXPR :: modify :: Lorg/hsqldb/DatabaseType :: org.hsqldb.DatabaseType.DB_FILE = v7::
3406 :: NORM :: declaration :: Lorg/hsqldb/DatabaseType :: v12 = new org.hsqldb.DatabaseType::DD,3413
3413 :: EXPR :: modify :: Lorg/hsqldb/DatabaseType :: org.hsqldb.DatabaseType.DB_RES = v12::
3415 :: NORM :: declaration :: [Lorg/hsqldb/DatabaseType :: v18 = new org.hsqldb.DatabaseType[]::
3416 :: EXPR :: reference :: Lorg/hsqldb/DatabaseType :: v19 = org.hsqldb.DatabaseType.DB_MEM::DD,3418
3418 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
3422 :: EXPR :: reference :: Lorg/hsqldb/DatabaseType :: v20 = org.hsqldb.DatabaseType.DB_FILE::DD,3424
3424 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
3428 :: EXPR :: reference :: Lorg/hsqldb/DatabaseType :: v21 = org.hsqldb.DatabaseType.DB_RES::DD,3430
3430 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
3463 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.<clinit>()::JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,3476:CD,3486:CD,3496:CD,3506:CD,3516:CD,3526:CD,3536:CD,3546:CD,3555
3476 :: CALL :: call :: Z :: v8 = v4.put(v5, #(66))::CL,33387
3486 :: CALL :: call :: Z :: v13 = v9.put(v10, #(83))::CL,33387
3496 :: CALL :: call :: Z :: v17 = v14.put(v15, #(83))::CL,33387
3506 :: CALL :: call :: Z :: v22 = v18.put(v19, #(73))::CL,33387
3516 :: CALL :: call :: Z :: v27 = v23.put(v24, #(74))::CL,33387
3526 :: CALL :: call :: Z :: v32 = v28.put(v29, #(70))::CL,33387
3536 :: CALL :: call :: Z :: v37 = v33.put(v34, #(68))::CL,33387
3546 :: CALL :: call :: Z :: v42 = v38.put(v39, #(90))::CL,33387
3555 :: CALL :: call :: Z :: v47 = v43.put(v44, #(76))::CL,33387
3591 :: ENTR :: entry :: null :: org.hsqldb.TransactionManagerCommon.<clinit>()::CD,3595
3595 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
3609 :: ENTR :: entry :: null :: org.hsqldb.persist.LockFile.<clinit>()::CD,3612
3612 :: NORM :: declaration :: [B :: v3 = new []::
3613 :: EXPR :: modify :: B :: v3[#(0)] = #(72)::
3617 :: EXPR :: modify :: B :: v3[#(1)] = #(83)::
3621 :: EXPR :: modify :: B :: v3[#(2)] = #(81)::
3625 :: EXPR :: modify :: B :: v3[#(3)] = #(76)::
3629 :: EXPR :: modify :: B :: v3[#(4)] = #(76)::
3633 :: EXPR :: modify :: B :: v3[#(5)] = #(79)::
3637 :: EXPR :: modify :: B :: v3[#(6)] = #(67)::
3641 :: EXPR :: modify :: B :: v3[#(7)] = #(75)::
3841 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.<clinit>()::CD,3844:CD,3872:CD,3879:CD,3880:CD,3887:CD,3889:CD,3895:CD,3901:CD,3907:CD,3913:CD,3917:CD,3923:CD,3928:CD,3944
3844 :: NORM :: declaration :: [I :: v3 = new []::
3845 :: EXPR :: modify :: I :: v3[#(0)] = #(4096)::
3849 :: EXPR :: modify :: I :: v3[#(1)] = #(4096)::
3853 :: EXPR :: modify :: I :: v3[#(2)] = #(4096)::
3857 :: EXPR :: modify :: I :: v3[#(3)] = #(4096)::
3861 :: EXPR :: modify :: I :: v3[#(4)] = #(4096)::
3872 :: NORM :: declaration :: [C :: v13 = new []::JM,3880
3874 :: EXPR :: modify :: C :: v13[v16] = #(32)::
3878 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,3944
3879 :: PRED :: IF :: Z :: if (v16 < #(64)) goto 57::CF,3880:CD,3878:CD,3944
3880 :: NORM :: declaration :: Ljava/lang/String :: v17 = new java.lang.String::JM,3880
3887 :: CALL :: call :: V :: initPool()::CL,33494
3889 :: CALL :: call :: Ljava/lang/Integer :: v21 = getInt(#(0))::CL,33614
3895 :: CALL :: call :: Ljava/lang/Integer :: v23 = getInt(#(1))::CL,33614
3901 :: CALL :: call :: Ljava/lang/Integer :: v25 = getInt(#(2))::CL,33614
3907 :: CALL :: call :: Ljava/lang/Integer :: v28 = getInt(#(2147483647))::CL,33614
3913 :: CALL :: call :: Ljava/math/BigDecimal :: v31 = valueOf(#(0 l))::
3917 :: CALL :: call :: Ljava/math/BigDecimal :: v33 = getBigDecimal(v31)::CL,33638
3923 :: NORM :: declaration :: Ljava/math/BigDecimal :: v34 = new java.math.BigDecimal::
3928 :: CALL :: call :: Ljava/math/BigDecimal :: v37 = getBigDecimal(v34)::CL,33638
3944 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,3878:DD,3879
3997 :: ENTR :: entry :: null :: org.hsqldb.HsqlException.<clinit>()::CD,4003
4003 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(1100))::CL,33668
4014 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.<clinit>()::CD,4017
4017 :: NORM :: declaration :: [B :: v3 = new []::
4018 :: EXPR :: modify :: B :: v3[#(0)] = #(48)::
4022 :: EXPR :: modify :: B :: v3[#(1)] = #(49)::
4026 :: EXPR :: modify :: B :: v3[#(2)] = #(50)::
4030 :: EXPR :: modify :: B :: v3[#(3)] = #(51)::
4034 :: EXPR :: modify :: B :: v3[#(4)] = #(52)::
4038 :: EXPR :: modify :: B :: v3[#(5)] = #(53)::
4042 :: EXPR :: modify :: B :: v3[#(6)] = #(54)::
4046 :: EXPR :: modify :: B :: v3[#(7)] = #(55)::
4050 :: EXPR :: modify :: B :: v3[#(8)] = #(56)::
4054 :: EXPR :: modify :: B :: v3[#(9)] = #(57)::
4058 :: EXPR :: modify :: B :: v3[#(10)] = #(97)::
4062 :: EXPR :: modify :: B :: v3[#(11)] = #(98)::
4066 :: EXPR :: modify :: B :: v3[#(12)] = #(99)::
4070 :: EXPR :: modify :: B :: v3[#(13)] = #(100)::
4074 :: EXPR :: modify :: B :: v3[#(14)] = #(101)::
4078 :: EXPR :: modify :: B :: v3[#(15)] = #(102)::
4138 :: ENTR :: entry :: null :: org.hsqldb.DatabaseManager.<clinit>()::JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:JM,49184:JM,59616:JM,40113:JM,40130:JM,59635:JM,59620:JM,40136:JM,59625:JM,59641:JM,40122:JM,59645:JM,59615
4190 :: ENTR :: entry :: null :: org.hsqldb.scriptio.ScriptWriterText.<clinit>()::CD,4193:CD,4198:CD,4202:CD,4204:CD,4211:CD,4218:CD,4225:CD,4232:CD,4239:CD,4246:CD,4253:CD,4260:CD,4267:CD,4274:CD,4282:CD,4288:CD,4294
4193 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator), #())::JM,4193:JM,4202
4198 :: CALL :: call :: [B :: v7 = v5.getBytes()::JM,4202
4202 :: EXPR :: modify :: [B :: org.hsqldb.scriptio.ScriptWriterText.BYTES_LINE_SEP = v7::
4204 :: CALL :: call :: [B :: v11 = #(COMMIT).getBytes(#(ISO-8859-1))::
4211 :: CALL :: call :: [B :: v14 = #(INSERT INTO ).getBytes(#(ISO-8859-1))::
4218 :: CALL :: call :: [B :: v17 = #( VALUES().getBytes(#(ISO-8859-1))::
4225 :: CALL :: call :: [B :: v20 = #()).getBytes(#(ISO-8859-1))::
4232 :: CALL :: call :: [B :: v23 = #(DELETE FROM ).getBytes(#(ISO-8859-1))::
4239 :: CALL :: call :: [B :: v26 = #( WHERE ).getBytes(#(ISO-8859-1))::
4246 :: CALL :: call :: [B :: v29 = #(ALTER SEQUENCE ).getBytes(#(ISO-8859-1))::
4253 :: CALL :: call :: [B :: v32 = #( RESTART WITH ).getBytes(#(ISO-8859-1))::
4260 :: CALL :: call :: [B :: v35 = #(/*C).getBytes(#(ISO-8859-1))::
4267 :: CALL :: call :: [B :: v38 = #(*/).getBytes(#(ISO-8859-1))::
4274 :: CALL :: call :: [B :: v41 = #(SET SCHEMA ).getBytes(#(ISO-8859-1))::
4282 :: CALL :: call :: Ljava/lang/RuntimeException :: v46 = runtimeError(#(201), #(ScriptWriterText))::CL,33706
4288 :: EXPR :: reference :: [B :: v47 = org.hsqldb.scriptio.ScriptWriterText.BYTES_LINE_SEP::
4290 :: EXPR :: reference :: B :: v49 = v47[#(0)]::DD,4294
4294 :: PRED :: IF :: Z :: if (v49 == #(10)) goto 169::CD,4295:CD,4301
4295 :: EXPR :: reference :: [B :: v51 = org.hsqldb.scriptio.ScriptWriterText.BYTES_LINE_SEP::
4297 :: EXPR :: reference :: B :: v52 = v51[#(0)]::DD,4301
4301 :: PRED :: IF :: Z :: if (v52 == #(13)) goto 169::CD,4302
4302 :: NORM :: declaration :: [B :: v55 = new []::
4303 :: EXPR :: modify :: B :: v55[#(0)] = #(10)::
4358 :: ENTR :: entry :: null :: org.hsqldb.scriptio.ScriptWriterBase.<clinit>()::CD,4361
4361 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
4362 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(TEXT)::
4366 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(BINARY)::
4370 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(COMPRESSED)::
4434 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
4442 :: NORM :: declaration :: [Ljava/math/BigDecimal :: v9 = new java.math.BigDecimal[]::CF,4443
4443 :: NORM :: declaration :: Ljava/math/BigDecimal :: v10 = new java.math.BigDecimal::DD,4452
4444 :: EXPR :: reference :: Ljava/math/BigInteger :: v11 = java.math.BigInteger.ZERO::
4452 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(0)] = v10::
4456 :: NORM :: declaration :: Ljava/math/BigDecimal :: v14 = new java.math.BigDecimal::DD,4465
4457 :: EXPR :: reference :: Ljava/math/BigInteger :: v15 = java.math.BigInteger.ONE::
4465 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(1)] = v14::
4469 :: NORM :: declaration :: Ljava/math/BigDecimal :: v19 = new java.math.BigDecimal::DD,4480
4470 :: CALL :: call :: Ljava/math/BigInteger :: v22 = valueOf(#(2 l))::
4480 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(2)] = v19::
4484 :: NORM :: declaration :: Ljava/math/BigDecimal :: v25 = new java.math.BigDecimal::DD,4495
4485 :: CALL :: call :: Ljava/math/BigInteger :: v28 = valueOf(#(3 l))::
4495 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(3)] = v25::
4499 :: NORM :: declaration :: Ljava/math/BigDecimal :: v31 = new java.math.BigDecimal::DD,4510
4500 :: CALL :: call :: Ljava/math/BigInteger :: v34 = valueOf(#(4 l))::
4510 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(4)] = v31::
4514 :: NORM :: declaration :: Ljava/math/BigDecimal :: v37 = new java.math.BigDecimal::DD,4525
4515 :: CALL :: call :: Ljava/math/BigInteger :: v40 = valueOf(#(5 l))::
4525 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(5)] = v37::
4529 :: NORM :: declaration :: Ljava/math/BigDecimal :: v43 = new java.math.BigDecimal::DD,4540
4530 :: CALL :: call :: Ljava/math/BigInteger :: v46 = valueOf(#(6 l))::
4540 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(6)] = v43::
4544 :: NORM :: declaration :: Ljava/math/BigDecimal :: v49 = new java.math.BigDecimal::DD,4555
4545 :: CALL :: call :: Ljava/math/BigInteger :: v52 = valueOf(#(7 l))::
4555 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(7)] = v49::
4559 :: NORM :: declaration :: Ljava/math/BigDecimal :: v55 = new java.math.BigDecimal::DD,4570
4560 :: CALL :: call :: Ljava/math/BigInteger :: v58 = valueOf(#(8 l))::
4570 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(8)] = v55::
4574 :: NORM :: declaration :: Ljava/math/BigDecimal :: v61 = new java.math.BigDecimal::DD,4585
4575 :: CALL :: call :: Ljava/math/BigInteger :: v64 = valueOf(#(9 l))::
4585 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(9)] = v61::
4589 :: NORM :: declaration :: Ljava/math/BigDecimal :: v67 = new java.math.BigDecimal::DD,4598
4590 :: EXPR :: reference :: Ljava/math/BigInteger :: v68 = java.math.BigInteger.TEN::
4598 :: EXPR :: modify :: Ljava/lang/Object :: v9[#(10)] = v67::
4632 :: NORM :: declaration :: [Ljava/math/BigInteger :: v78 = new java.math.BigInteger[]::
4633 :: EXPR :: reference :: Ljava/math/BigInteger :: v79 = java.math.BigInteger.ONE::DD,4635
4635 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(0)] = v79::
4639 :: CALL :: call :: Ljava/math/BigInteger :: v81 = valueOf(#(10 l))::JM,4643
4643 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(1)] = v81::
4647 :: CALL :: call :: Ljava/math/BigInteger :: v84 = valueOf(#(100 l))::JM,4651
4651 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(2)] = v84::
4655 :: CALL :: call :: Ljava/math/BigInteger :: v87 = valueOf(#(1000 l))::JM,4659
4659 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(3)] = v87::
4663 :: CALL :: call :: Ljava/math/BigInteger :: v90 = valueOf(#(10000 l))::JM,4667
4667 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(4)] = v90::
4671 :: CALL :: call :: Ljava/math/BigInteger :: v93 = valueOf(#(100000 l))::JM,4675
4675 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(5)] = v93::
4679 :: CALL :: call :: Ljava/math/BigInteger :: v96 = valueOf(#(1000000 l))::JM,4683
4683 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(6)] = v96::
4687 :: CALL :: call :: Ljava/math/BigInteger :: v99 = valueOf(#(10000000 l))::JM,4691
4691 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(7)] = v99::
4695 :: CALL :: call :: Ljava/math/BigInteger :: v102 = valueOf(#(100000000 l))::JM,4699
4699 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(8)] = v102::
4703 :: CALL :: call :: Ljava/math/BigInteger :: v105 = valueOf(#(1000000000 l))::JM,4707
4707 :: EXPR :: modify :: Ljava/lang/Object :: v78[#(9)] = v105::
4713 :: NORM :: declaration :: [[J :: v107 = new [][]::CF,4714
4714 :: NORM :: declaration :: [J :: v108 = new []::DD,4723
4715 :: EXPR :: modify :: J :: v108[#(0)] = #(9223372036854775807 l)::
4719 :: EXPR :: modify :: J :: v108[#(1)] = #(1 l)::
4723 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(0)] = v108::
4727 :: NORM :: declaration :: [J :: v110 = new []::DD,4736
4728 :: EXPR :: modify :: J :: v110[#(0)] = #(922337203685477580 l)::
4732 :: EXPR :: modify :: J :: v110[#(1)] = #(10 l)::
4736 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(1)] = v110::
4740 :: NORM :: declaration :: [J :: v112 = new []::DD,4749
4741 :: EXPR :: modify :: J :: v112[#(0)] = #(92233720368547758 l)::
4745 :: EXPR :: modify :: J :: v112[#(1)] = #(100 l)::
4749 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(2)] = v112::
4753 :: NORM :: declaration :: [J :: v114 = new []::DD,4762
4754 :: EXPR :: modify :: J :: v114[#(0)] = #(9223372036854775 l)::
4758 :: EXPR :: modify :: J :: v114[#(1)] = #(1000 l)::
4762 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(3)] = v114::
4766 :: NORM :: declaration :: [J :: v116 = new []::DD,4775
4767 :: EXPR :: modify :: J :: v116[#(0)] = #(922337203685477 l)::
4771 :: EXPR :: modify :: J :: v116[#(1)] = #(10000 l)::
4775 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(4)] = v116::
4779 :: NORM :: declaration :: [J :: v118 = new []::DD,4788
4780 :: EXPR :: modify :: J :: v118[#(0)] = #(92233720368547 l)::
4784 :: EXPR :: modify :: J :: v118[#(1)] = #(100000 l)::
4788 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(5)] = v118::
4792 :: NORM :: declaration :: [J :: v120 = new []::DD,4801
4793 :: EXPR :: modify :: J :: v120[#(0)] = #(9223372036854 l)::
4797 :: EXPR :: modify :: J :: v120[#(1)] = #(1000000 l)::
4801 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(6)] = v120::
4805 :: NORM :: declaration :: [J :: v122 = new []::DD,4814
4806 :: EXPR :: modify :: J :: v122[#(0)] = #(922337203685 l)::
4810 :: EXPR :: modify :: J :: v122[#(1)] = #(10000000 l)::
4814 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(7)] = v122::
4818 :: NORM :: declaration :: [J :: v124 = new []::DD,4827
4819 :: EXPR :: modify :: J :: v124[#(0)] = #(92233720368 l)::
4823 :: EXPR :: modify :: J :: v124[#(1)] = #(100000000 l)::
4827 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(8)] = v124::
4831 :: NORM :: declaration :: [J :: v126 = new []::DD,4840
4832 :: EXPR :: modify :: J :: v126[#(0)] = #(9223372036 l)::
4836 :: EXPR :: modify :: J :: v126[#(1)] = #(1000000000 l)::
4840 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(9)] = v126::
4844 :: NORM :: declaration :: [J :: v128 = new []::DD,4853
4845 :: EXPR :: modify :: J :: v128[#(0)] = #(922337203 l)::
4849 :: EXPR :: modify :: J :: v128[#(1)] = #(10000000000 l)::
4853 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(10)] = v128::
4857 :: NORM :: declaration :: [J :: v131 = new []::DD,4866
4858 :: EXPR :: modify :: J :: v131[#(0)] = #(92233720 l)::
4862 :: EXPR :: modify :: J :: v131[#(1)] = #(100000000000 l)::
4866 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(11)] = v131::
4870 :: NORM :: declaration :: [J :: v135 = new []::DD,4879
4871 :: EXPR :: modify :: J :: v135[#(0)] = #(9223372 l)::
4875 :: EXPR :: modify :: J :: v135[#(1)] = #(1000000000000 l)::
4879 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(12)] = v135::
4883 :: NORM :: declaration :: [J :: v139 = new []::DD,4892
4884 :: EXPR :: modify :: J :: v139[#(0)] = #(92233 l)::
4888 :: EXPR :: modify :: J :: v139[#(1)] = #(10000000000000 l)::
4892 :: EXPR :: modify :: Ljava/lang/Object :: v107[#(13)] = v139::
4898 :: NORM :: declaration :: [I :: v142 = new []::
4899 :: EXPR :: modify :: I :: v142[#(1)] = #(9)::
4903 :: EXPR :: modify :: I :: v142[#(2)] = #(99)::
4907 :: EXPR :: modify :: I :: v142[#(3)] = #(999)::
4911 :: EXPR :: modify :: I :: v142[#(4)] = #(9999)::
4915 :: EXPR :: modify :: I :: v142[#(5)] = #(99999)::
4919 :: EXPR :: modify :: I :: v142[#(6)] = #(999999)::
4923 :: EXPR :: modify :: I :: v142[#(7)] = #(9999999)::
4927 :: EXPR :: modify :: I :: v142[#(8)] = #(99999999)::
4931 :: EXPR :: modify :: I :: v142[#(9)] = #(999999999)::
4935 :: EXPR :: modify :: I :: v142[#(10)] = #(2147483647)::
5245 :: ENTR :: entry :: null :: org.hsqldb.lib.java.JavaSystem.<clinit>()::CD,5248:CD,5254
5248 :: CALL :: call :: Ljava/math/BigDecimal :: v4 = valueOf(#(1 l))::
5254 :: CALL :: call :: Ljava/math/BigDecimal :: v7 = valueOf(#(-1 l))::
5269 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
5277 :: NORM :: declaration :: [J :: v9 = new []::
5278 :: EXPR :: modify :: J :: v9[#(2)] = #(1024 l)::
5282 :: EXPR :: modify :: J :: v9[#(3)] = #(1624 l)::
5286 :: EXPR :: modify :: J :: v9[#(4)] = #(2048 l)::
5290 :: EXPR :: modify :: J :: v9[#(5)] = #(2378 l)::
5294 :: EXPR :: modify :: J :: v9[#(6)] = #(2648 l)::
5298 :: EXPR :: modify :: J :: v9[#(7)] = #(2875 l)::
5302 :: EXPR :: modify :: J :: v9[#(8)] = #(3072 l)::
5306 :: EXPR :: modify :: J :: v9[#(9)] = #(3247 l)::
5310 :: EXPR :: modify :: J :: v9[#(10)] = #(3402 l)::
5314 :: EXPR :: modify :: J :: v9[#(11)] = #(3543 l)::
5318 :: EXPR :: modify :: J :: v9[#(12)] = #(3672 l)::
5322 :: EXPR :: modify :: J :: v9[#(13)] = #(3790 l)::
5326 :: EXPR :: modify :: J :: v9[#(14)] = #(3899 l)::
5330 :: EXPR :: modify :: J :: v9[#(15)] = #(4001 l)::
5334 :: EXPR :: modify :: J :: v9[#(16)] = #(4096 l)::
5338 :: EXPR :: modify :: J :: v9[#(17)] = #(4186 l)::
5342 :: EXPR :: modify :: J :: v9[#(18)] = #(4271 l)::
5346 :: EXPR :: modify :: J :: v9[#(19)] = #(4350 l)::
5350 :: EXPR :: modify :: J :: v9[#(20)] = #(4426 l)::
5354 :: EXPR :: modify :: J :: v9[#(21)] = #(4498 l)::
5358 :: EXPR :: modify :: J :: v9[#(22)] = #(4567 l)::
5362 :: EXPR :: modify :: J :: v9[#(23)] = #(4633 l)::
5366 :: EXPR :: modify :: J :: v9[#(24)] = #(4696 l)::
5370 :: EXPR :: modify :: J :: v9[#(25)] = #(4756 l)::
5374 :: EXPR :: modify :: J :: v9[#(26)] = #(4814 l)::
5378 :: EXPR :: modify :: J :: v9[#(27)] = #(4870 l)::
5382 :: EXPR :: modify :: J :: v9[#(28)] = #(4923 l)::
5386 :: EXPR :: modify :: J :: v9[#(29)] = #(4975 l)::
5390 :: EXPR :: modify :: J :: v9[#(30)] = #(5025 l)::
5394 :: EXPR :: modify :: J :: v9[#(31)] = #(5074 l)::
5398 :: EXPR :: modify :: J :: v9[#(32)] = #(5120 l)::
5402 :: EXPR :: modify :: J :: v9[#(33)] = #(5166 l)::
5406 :: EXPR :: modify :: J :: v9[#(34)] = #(5210 l)::
5410 :: EXPR :: modify :: J :: v9[#(35)] = #(5253 l)::
5414 :: EXPR :: modify :: J :: v9[#(36)] = #(5295 l)::
5420 :: CALL :: call :: Ljava/math/BigInteger :: v82 = valueOf(#(152125131763605 l))::
5426 :: NORM :: declaration :: [Ljava/math/BigInteger :: v83 = new java.math.BigInteger[]::CF,5427
5427 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.posConst = v83::
5429 :: NORM :: declaration :: [Ljava/math/BigInteger :: v84 = new java.math.BigInteger[]::CF,5430
5430 :: EXPR :: modify :: [Ljava/math/BigInteger :: java.math.BigInteger.negConst = v84::
5433 :: NORM :: declaration :: [I :: v85 = new []::
5434 :: EXPR :: modify :: I :: v85[#(0)] = v94::
5438 :: EXPR :: reference :: [Ljava/math/BigInteger :: v86 = java.math.BigInteger.posConst::CF,5440
5440 :: NORM :: declaration :: Ljava/math/BigInteger :: v87 = new java.math.BigInteger::DD,5446
5446 :: EXPR :: modify :: Ljava/lang/Object :: v86[v94] = v87::
5450 :: EXPR :: reference :: [Ljava/math/BigInteger :: v89 = java.math.BigInteger.negConst::CF,5452
5452 :: NORM :: declaration :: Ljava/math/BigInteger :: v90 = new java.math.BigInteger::DD,5458
5458 :: EXPR :: modify :: Ljava/lang/Object :: v89[v94] = v90::
5462 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v94 + #(1)::DD,6855
5463 :: PRED :: IF :: Z :: if (v94 <= #(16)) goto 295::CF,5464:CD,5433:CD,5438:CD,5440:CD,5450:CD,5452:CD,5462:CD,6855
5464 :: NORM :: declaration :: Ljava/math/BigInteger :: v95 = new java.math.BigInteger::CF,5465
5465 :: NORM :: declaration :: [I :: v96 = new []::
5473 :: CALL :: call :: Ljava/math/BigInteger :: v100 = valueOf(#(1 l))::
5479 :: CALL :: call :: Ljava/math/BigInteger :: v103 = valueOf(#(2 l))::
5485 :: CALL :: call :: Ljava/math/BigInteger :: v106 = valueOf(#(10 l))::
5491 :: NORM :: declaration :: [I :: v107 = new []::
5492 :: EXPR :: modify :: I :: v107[#(0)] = #(7)::
5496 :: EXPR :: modify :: I :: v107[#(1)] = #(25)::
5500 :: EXPR :: modify :: I :: v107[#(2)] = #(81)::
5504 :: EXPR :: modify :: I :: v107[#(3)] = #(241)::
5508 :: EXPR :: modify :: I :: v107[#(4)] = #(673)::
5512 :: EXPR :: modify :: I :: v107[#(5)] = #(1793)::
5516 :: EXPR :: modify :: I :: v107[#(6)] = #(2147483647)::
5522 :: NORM :: declaration :: [B :: v114 = new []::
5523 :: EXPR :: modify :: B :: v114[#(0)] = #(-25)::
5527 :: EXPR :: modify :: B :: v114[#(2)] = #(1)::
5531 :: EXPR :: modify :: B :: v114[#(4)] = #(2)::
5535 :: EXPR :: modify :: B :: v114[#(6)] = #(1)::
5539 :: EXPR :: modify :: B :: v114[#(8)] = #(3)::
5543 :: EXPR :: modify :: B :: v114[#(10)] = #(1)::
5547 :: EXPR :: modify :: B :: v114[#(12)] = #(2)::
5551 :: EXPR :: modify :: B :: v114[#(14)] = #(1)::
5555 :: EXPR :: modify :: B :: v114[#(16)] = #(4)::
5559 :: EXPR :: modify :: B :: v114[#(18)] = #(1)::
5563 :: EXPR :: modify :: B :: v114[#(20)] = #(2)::
5567 :: EXPR :: modify :: B :: v114[#(22)] = #(1)::
5571 :: EXPR :: modify :: B :: v114[#(24)] = #(3)::
5575 :: EXPR :: modify :: B :: v114[#(26)] = #(1)::
5579 :: EXPR :: modify :: B :: v114[#(28)] = #(2)::
5583 :: EXPR :: modify :: B :: v114[#(30)] = #(1)::
5587 :: EXPR :: modify :: B :: v114[#(32)] = #(5)::
5591 :: EXPR :: modify :: B :: v114[#(34)] = #(1)::
5595 :: EXPR :: modify :: B :: v114[#(36)] = #(2)::
5599 :: EXPR :: modify :: B :: v114[#(38)] = #(1)::
5603 :: EXPR :: modify :: B :: v114[#(40)] = #(3)::
5607 :: EXPR :: modify :: B :: v114[#(42)] = #(1)::
5611 :: EXPR :: modify :: B :: v114[#(44)] = #(2)::
5615 :: EXPR :: modify :: B :: v114[#(46)] = #(1)::
5619 :: EXPR :: modify :: B :: v114[#(48)] = #(4)::
5623 :: EXPR :: modify :: B :: v114[#(50)] = #(1)::
5627 :: EXPR :: modify :: B :: v114[#(52)] = #(2)::
5631 :: EXPR :: modify :: B :: v114[#(54)] = #(1)::
5635 :: EXPR :: modify :: B :: v114[#(56)] = #(3)::
5639 :: EXPR :: modify :: B :: v114[#(58)] = #(1)::
5643 :: EXPR :: modify :: B :: v114[#(60)] = #(2)::
5647 :: EXPR :: modify :: B :: v114[#(62)] = #(1)::
5651 :: EXPR :: modify :: B :: v114[#(64)] = #(6)::
5655 :: EXPR :: modify :: B :: v114[#(66)] = #(1)::
5659 :: EXPR :: modify :: B :: v114[#(68)] = #(2)::
5663 :: EXPR :: modify :: B :: v114[#(70)] = #(1)::
5667 :: EXPR :: modify :: B :: v114[#(72)] = #(3)::
5671 :: EXPR :: modify :: B :: v114[#(74)] = #(1)::
5675 :: EXPR :: modify :: B :: v114[#(76)] = #(2)::
5679 :: EXPR :: modify :: B :: v114[#(78)] = #(1)::
5683 :: EXPR :: modify :: B :: v114[#(80)] = #(4)::
5687 :: EXPR :: modify :: B :: v114[#(82)] = #(1)::
5691 :: EXPR :: modify :: B :: v114[#(84)] = #(2)::
5695 :: EXPR :: modify :: B :: v114[#(86)] = #(1)::
5699 :: EXPR :: modify :: B :: v114[#(88)] = #(3)::
5703 :: EXPR :: modify :: B :: v114[#(90)] = #(1)::
5707 :: EXPR :: modify :: B :: v114[#(92)] = #(2)::
5711 :: EXPR :: modify :: B :: v114[#(94)] = #(1)::
5715 :: EXPR :: modify :: B :: v114[#(96)] = #(5)::
5719 :: EXPR :: modify :: B :: v114[#(98)] = #(1)::
5723 :: EXPR :: modify :: B :: v114[#(100)] = #(2)::
5727 :: EXPR :: modify :: B :: v114[#(102)] = #(1)::
5731 :: EXPR :: modify :: B :: v114[#(104)] = #(3)::
5735 :: EXPR :: modify :: B :: v114[#(106)] = #(1)::
5739 :: EXPR :: modify :: B :: v114[#(108)] = #(2)::
5743 :: EXPR :: modify :: B :: v114[#(110)] = #(1)::
5747 :: EXPR :: modify :: B :: v114[#(112)] = #(4)::
5751 :: EXPR :: modify :: B :: v114[#(114)] = #(1)::
5755 :: EXPR :: modify :: B :: v114[#(116)] = #(2)::
5759 :: EXPR :: modify :: B :: v114[#(118)] = #(1)::
5763 :: EXPR :: modify :: B :: v114[#(120)] = #(3)::
5767 :: EXPR :: modify :: B :: v114[#(122)] = #(1)::
5771 :: EXPR :: modify :: B :: v114[#(124)] = #(2)::
5775 :: EXPR :: modify :: B :: v114[#(126)] = #(1)::
5779 :: EXPR :: modify :: B :: v114[#(128)] = #(7)::
5783 :: EXPR :: modify :: B :: v114[#(130)] = #(1)::
5787 :: EXPR :: modify :: B :: v114[#(132)] = #(2)::
5791 :: EXPR :: modify :: B :: v114[#(134)] = #(1)::
5795 :: EXPR :: modify :: B :: v114[#(136)] = #(3)::
5799 :: EXPR :: modify :: B :: v114[#(138)] = #(1)::
5803 :: EXPR :: modify :: B :: v114[#(140)] = #(2)::
5807 :: EXPR :: modify :: B :: v114[#(142)] = #(1)::
5811 :: EXPR :: modify :: B :: v114[#(144)] = #(4)::
5815 :: EXPR :: modify :: B :: v114[#(146)] = #(1)::
5819 :: EXPR :: modify :: B :: v114[#(148)] = #(2)::
5823 :: EXPR :: modify :: B :: v114[#(150)] = #(1)::
5827 :: EXPR :: modify :: B :: v114[#(152)] = #(3)::
5831 :: EXPR :: modify :: B :: v114[#(154)] = #(1)::
5835 :: EXPR :: modify :: B :: v114[#(156)] = #(2)::
5839 :: EXPR :: modify :: B :: v114[#(158)] = #(1)::
5843 :: EXPR :: modify :: B :: v114[#(160)] = #(5)::
5847 :: EXPR :: modify :: B :: v114[#(162)] = #(1)::
5851 :: EXPR :: modify :: B :: v114[#(164)] = #(2)::
5855 :: EXPR :: modify :: B :: v114[#(166)] = #(1)::
5859 :: EXPR :: modify :: B :: v114[#(168)] = #(3)::
5863 :: EXPR :: modify :: B :: v114[#(170)] = #(1)::
5867 :: EXPR :: modify :: B :: v114[#(172)] = #(2)::
5871 :: EXPR :: modify :: B :: v114[#(174)] = #(1)::
5875 :: EXPR :: modify :: B :: v114[#(176)] = #(4)::
5879 :: EXPR :: modify :: B :: v114[#(178)] = #(1)::
5883 :: EXPR :: modify :: B :: v114[#(180)] = #(2)::
5887 :: EXPR :: modify :: B :: v114[#(182)] = #(1)::
5891 :: EXPR :: modify :: B :: v114[#(184)] = #(3)::
5895 :: EXPR :: modify :: B :: v114[#(186)] = #(1)::
5899 :: EXPR :: modify :: B :: v114[#(188)] = #(2)::
5903 :: EXPR :: modify :: B :: v114[#(190)] = #(1)::
5907 :: EXPR :: modify :: B :: v114[#(192)] = #(6)::
5911 :: EXPR :: modify :: B :: v114[#(194)] = #(1)::
5915 :: EXPR :: modify :: B :: v114[#(196)] = #(2)::
5919 :: EXPR :: modify :: B :: v114[#(198)] = #(1)::
5923 :: EXPR :: modify :: B :: v114[#(200)] = #(3)::
5927 :: EXPR :: modify :: B :: v114[#(202)] = #(1)::
5931 :: EXPR :: modify :: B :: v114[#(204)] = #(2)::
5935 :: EXPR :: modify :: B :: v114[#(206)] = #(1)::
5939 :: EXPR :: modify :: B :: v114[#(208)] = #(4)::
5943 :: EXPR :: modify :: B :: v114[#(210)] = #(1)::
5947 :: EXPR :: modify :: B :: v114[#(212)] = #(2)::
5951 :: EXPR :: modify :: B :: v114[#(214)] = #(1)::
5955 :: EXPR :: modify :: B :: v114[#(216)] = #(3)::
5959 :: EXPR :: modify :: B :: v114[#(218)] = #(1)::
5963 :: EXPR :: modify :: B :: v114[#(220)] = #(2)::
5967 :: EXPR :: modify :: B :: v114[#(222)] = #(1)::
5971 :: EXPR :: modify :: B :: v114[#(224)] = #(5)::
5975 :: EXPR :: modify :: B :: v114[#(226)] = #(1)::
5979 :: EXPR :: modify :: B :: v114[#(228)] = #(2)::
5983 :: EXPR :: modify :: B :: v114[#(230)] = #(1)::
5987 :: EXPR :: modify :: B :: v114[#(232)] = #(3)::
5991 :: EXPR :: modify :: B :: v114[#(234)] = #(1)::
5995 :: EXPR :: modify :: B :: v114[#(236)] = #(2)::
5999 :: EXPR :: modify :: B :: v114[#(238)] = #(1)::
6003 :: EXPR :: modify :: B :: v114[#(240)] = #(4)::
6007 :: EXPR :: modify :: B :: v114[#(242)] = #(1)::
6011 :: EXPR :: modify :: B :: v114[#(244)] = #(2)::
6015 :: EXPR :: modify :: B :: v114[#(246)] = #(1)::
6019 :: EXPR :: modify :: B :: v114[#(248)] = #(3)::
6023 :: EXPR :: modify :: B :: v114[#(250)] = #(1)::
6027 :: EXPR :: modify :: B :: v114[#(252)] = #(2)::
6031 :: EXPR :: modify :: B :: v114[#(254)] = #(1)::
6037 :: NORM :: declaration :: [Ljava/lang/String :: v225 = new java.lang.String[]::CF,6038
6038 :: EXPR :: modify :: [Ljava/lang/String :: java.math.BigInteger.zeros = v225::
6040 :: EXPR :: reference :: [Ljava/lang/String :: v226 = java.math.BigInteger.zeros::
6042 :: EXPR :: modify :: Ljava/lang/Object :: v226[#(63)] = #(000000000000000000000...)::
6047 :: EXPR :: reference :: [Ljava/lang/String :: v229 = java.math.BigInteger.zeros::
6049 :: EXPR :: reference :: [Ljava/lang/String :: v230 = java.math.BigInteger.zeros::
6051 :: EXPR :: reference :: Ljava/lang/Object :: v231 = v230[#(63)]::JM,6061
6055 :: CALL :: call :: Ljava/lang/String :: v233 = v231.substring(#(0), v235)::JM,6061
6061 :: EXPR :: modify :: Ljava/lang/Object :: v229[v235] = v233::
6065 :: EXPR :: assign :: Ljava/lang/Object :: v234 = v235 + #(1)::DD,6856
6066 :: PRED :: IF :: Z :: if (v235 < #(63)) goto 1158::CD,6047:CD,6049:CD,6055:CD,6065:CD,6856:CF,6067
6067 :: NORM :: declaration :: [I :: v236 = new []::
6068 :: EXPR :: modify :: I :: v236[#(2)] = #(62)::
6072 :: EXPR :: modify :: I :: v236[#(3)] = #(39)::
6076 :: EXPR :: modify :: I :: v236[#(4)] = #(31)::
6080 :: EXPR :: modify :: I :: v236[#(5)] = #(27)::
6084 :: EXPR :: modify :: I :: v236[#(6)] = #(24)::
6088 :: EXPR :: modify :: I :: v236[#(7)] = #(22)::
6092 :: EXPR :: modify :: I :: v236[#(8)] = #(20)::
6096 :: EXPR :: modify :: I :: v236[#(9)] = #(19)::
6100 :: EXPR :: modify :: I :: v236[#(10)] = #(18)::
6104 :: EXPR :: modify :: I :: v236[#(11)] = #(18)::
6108 :: EXPR :: modify :: I :: v236[#(12)] = #(17)::
6112 :: EXPR :: modify :: I :: v236[#(13)] = #(17)::
6116 :: EXPR :: modify :: I :: v236[#(14)] = #(16)::
6120 :: EXPR :: modify :: I :: v236[#(15)] = #(16)::
6124 :: EXPR :: modify :: I :: v236[#(16)] = #(15)::
6128 :: EXPR :: modify :: I :: v236[#(17)] = #(15)::
6132 :: EXPR :: modify :: I :: v236[#(18)] = #(15)::
6136 :: EXPR :: modify :: I :: v236[#(19)] = #(14)::
6140 :: EXPR :: modify :: I :: v236[#(20)] = #(14)::
6144 :: EXPR :: modify :: I :: v236[#(21)] = #(14)::
6148 :: EXPR :: modify :: I :: v236[#(22)] = #(14)::
6152 :: EXPR :: modify :: I :: v236[#(23)] = #(13)::
6156 :: EXPR :: modify :: I :: v236[#(24)] = #(13)::
6160 :: EXPR :: modify :: I :: v236[#(25)] = #(13)::
6164 :: EXPR :: modify :: I :: v236[#(26)] = #(13)::
6168 :: EXPR :: modify :: I :: v236[#(27)] = #(13)::
6172 :: EXPR :: modify :: I :: v236[#(28)] = #(13)::
6176 :: EXPR :: modify :: I :: v236[#(29)] = #(12)::
6180 :: EXPR :: modify :: I :: v236[#(30)] = #(12)::
6184 :: EXPR :: modify :: I :: v236[#(31)] = #(12)::
6188 :: EXPR :: modify :: I :: v236[#(32)] = #(12)::
6192 :: EXPR :: modify :: I :: v236[#(33)] = #(12)::
6196 :: EXPR :: modify :: I :: v236[#(34)] = #(12)::
6200 :: EXPR :: modify :: I :: v236[#(35)] = #(12)::
6204 :: EXPR :: modify :: I :: v236[#(36)] = #(12)::
6210 :: NORM :: declaration :: [Ljava/math/BigInteger :: v238 = new java.math.BigInteger[]::JM,6215
6211 :: CALL :: call :: Ljava/math/BigInteger :: v241 = valueOf(#(4611686018427387904 l))::JM,6215
6215 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(2)] = v241::
6219 :: CALL :: call :: Ljava/math/BigInteger :: v244 = valueOf(#(4052555153018976267 l))::JM,6223
6223 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(3)] = v244::
6227 :: CALL :: call :: Ljava/math/BigInteger :: v246 = valueOf(#(4611686018427387904 l))::JM,6231
6231 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(4)] = v246::
6235 :: CALL :: call :: Ljava/math/BigInteger :: v249 = valueOf(#(7450580596923828125 l))::JM,6239
6239 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(5)] = v249::
6243 :: CALL :: call :: Ljava/math/BigInteger :: v252 = valueOf(#(4738381338321616896 l))::JM,6247
6247 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(6)] = v252::
6251 :: CALL :: call :: Ljava/math/BigInteger :: v255 = valueOf(#(3909821048582988049 l))::JM,6255
6255 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(7)] = v255::
6259 :: CALL :: call :: Ljava/math/BigInteger :: v258 = valueOf(#(1152921504606846976 l))::JM,6263
6263 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(8)] = v258::
6267 :: CALL :: call :: Ljava/math/BigInteger :: v261 = valueOf(#(1350851717672992089 l))::JM,6271
6271 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(9)] = v261::
6275 :: CALL :: call :: Ljava/math/BigInteger :: v264 = valueOf(#(1000000000000000000 l))::JM,6279
6279 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(10)] = v264::
6283 :: CALL :: call :: Ljava/math/BigInteger :: v267 = valueOf(#(5559917313492231481 l))::JM,6287
6287 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(11)] = v267::
6291 :: CALL :: call :: Ljava/math/BigInteger :: v270 = valueOf(#(2218611106740436992 l))::JM,6295
6295 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(12)] = v270::
6299 :: CALL :: call :: Ljava/math/BigInteger :: v273 = valueOf(#(8650415919381337933 l))::JM,6303
6303 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(13)] = v273::
6307 :: CALL :: call :: Ljava/math/BigInteger :: v276 = valueOf(#(2177953337809371136 l))::JM,6311
6311 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(14)] = v276::
6315 :: CALL :: call :: Ljava/math/BigInteger :: v279 = valueOf(#(6568408355712890625 l))::JM,6319
6319 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(15)] = v279::
6323 :: CALL :: call :: Ljava/math/BigInteger :: v281 = valueOf(#(1152921504606846976 l))::JM,6327
6327 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(16)] = v281::
6331 :: CALL :: call :: Ljava/math/BigInteger :: v284 = valueOf(#(2862423051509815793 l))::JM,6335
6335 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(17)] = v284::
6339 :: CALL :: call :: Ljava/math/BigInteger :: v287 = valueOf(#(6746640616477458432 l))::JM,6343
6343 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(18)] = v287::
6347 :: CALL :: call :: Ljava/math/BigInteger :: v290 = valueOf(#(799006685782884121 l))::JM,6351
6351 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(19)] = v290::
6355 :: CALL :: call :: Ljava/math/BigInteger :: v293 = valueOf(#(1638400000000000000 l))::JM,6359
6359 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(20)] = v293::
6363 :: CALL :: call :: Ljava/math/BigInteger :: v296 = valueOf(#(3243919932521508681 l))::JM,6367
6367 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(21)] = v296::
6371 :: CALL :: call :: Ljava/math/BigInteger :: v299 = valueOf(#(6221821273427820544 l))::JM,6375
6375 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(22)] = v299::
6379 :: CALL :: call :: Ljava/math/BigInteger :: v302 = valueOf(#(504036361936467383 l))::JM,6383
6383 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(23)] = v302::
6387 :: CALL :: call :: Ljava/math/BigInteger :: v305 = valueOf(#(876488338465357824 l))::JM,6391
6391 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(24)] = v305::
6395 :: CALL :: call :: Ljava/math/BigInteger :: v308 = valueOf(#(1490116119384765625 l))::JM,6399
6399 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(25)] = v308::
6403 :: CALL :: call :: Ljava/math/BigInteger :: v311 = valueOf(#(2481152873203736576 l))::JM,6407
6407 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(26)] = v311::
6411 :: CALL :: call :: Ljava/math/BigInteger :: v313 = valueOf(#(4052555153018976267 l))::JM,6415
6415 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(27)] = v313::
6419 :: CALL :: call :: Ljava/math/BigInteger :: v316 = valueOf(#(6502111422497947648 l))::JM,6423
6423 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(28)] = v316::
6427 :: CALL :: call :: Ljava/math/BigInteger :: v319 = valueOf(#(353814783205469041 l))::JM,6431
6431 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(29)] = v319::
6435 :: CALL :: call :: Ljava/math/BigInteger :: v322 = valueOf(#(531441000000000000 l))::JM,6439
6439 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(30)] = v322::
6443 :: CALL :: call :: Ljava/math/BigInteger :: v325 = valueOf(#(787662783788549761 l))::JM,6447
6447 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(31)] = v325::
6451 :: CALL :: call :: Ljava/math/BigInteger :: v327 = valueOf(#(1152921504606846976 l))::JM,6455
6455 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(32)] = v327::
6459 :: CALL :: call :: Ljava/math/BigInteger :: v330 = valueOf(#(1667889514952984961 l))::JM,6463
6463 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(33)] = v330::
6467 :: CALL :: call :: Ljava/math/BigInteger :: v333 = valueOf(#(2386420683693101056 l))::JM,6471
6471 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(34)] = v333::
6475 :: CALL :: call :: Ljava/math/BigInteger :: v336 = valueOf(#(3379220508056640625 l))::JM,6479
6479 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(35)] = v336::
6483 :: CALL :: call :: Ljava/math/BigInteger :: v338 = valueOf(#(4738381338321616896 l))::JM,6487
6487 :: EXPR :: modify :: Ljava/lang/Object :: v238[#(36)] = v338::
6493 :: NORM :: declaration :: [I :: v339 = new []::
6494 :: EXPR :: modify :: I :: v339[#(2)] = #(30)::
6498 :: EXPR :: modify :: I :: v339[#(3)] = #(19)::
6502 :: EXPR :: modify :: I :: v339[#(4)] = #(15)::
6506 :: EXPR :: modify :: I :: v339[#(5)] = #(13)::
6510 :: EXPR :: modify :: I :: v339[#(6)] = #(11)::
6514 :: EXPR :: modify :: I :: v339[#(7)] = #(11)::
6518 :: EXPR :: modify :: I :: v339[#(8)] = #(10)::
6522 :: EXPR :: modify :: I :: v339[#(9)] = #(9)::
6526 :: EXPR :: modify :: I :: v339[#(10)] = #(9)::
6530 :: EXPR :: modify :: I :: v339[#(11)] = #(8)::
6534 :: EXPR :: modify :: I :: v339[#(12)] = #(8)::
6538 :: EXPR :: modify :: I :: v339[#(13)] = #(8)::
6542 :: EXPR :: modify :: I :: v339[#(14)] = #(8)::
6546 :: EXPR :: modify :: I :: v339[#(15)] = #(7)::
6550 :: EXPR :: modify :: I :: v339[#(16)] = #(7)::
6554 :: EXPR :: modify :: I :: v339[#(17)] = #(7)::
6558 :: EXPR :: modify :: I :: v339[#(18)] = #(7)::
6562 :: EXPR :: modify :: I :: v339[#(19)] = #(7)::
6566 :: EXPR :: modify :: I :: v339[#(20)] = #(7)::
6570 :: EXPR :: modify :: I :: v339[#(21)] = #(7)::
6574 :: EXPR :: modify :: I :: v339[#(22)] = #(6)::
6578 :: EXPR :: modify :: I :: v339[#(23)] = #(6)::
6582 :: EXPR :: modify :: I :: v339[#(24)] = #(6)::
6586 :: EXPR :: modify :: I :: v339[#(25)] = #(6)::
6590 :: EXPR :: modify :: I :: v339[#(26)] = #(6)::
6594 :: EXPR :: modify :: I :: v339[#(27)] = #(6)::
6598 :: EXPR :: modify :: I :: v339[#(28)] = #(6)::
6602 :: EXPR :: modify :: I :: v339[#(29)] = #(6)::
6606 :: EXPR :: modify :: I :: v339[#(30)] = #(6)::
6610 :: EXPR :: modify :: I :: v339[#(31)] = #(6)::
6614 :: EXPR :: modify :: I :: v339[#(32)] = #(6)::
6618 :: EXPR :: modify :: I :: v339[#(33)] = #(6)::
6622 :: EXPR :: modify :: I :: v339[#(34)] = #(6)::
6626 :: EXPR :: modify :: I :: v339[#(35)] = #(6)::
6630 :: EXPR :: modify :: I :: v339[#(36)] = #(5)::
6636 :: NORM :: declaration :: [I :: v340 = new []::
6637 :: EXPR :: modify :: I :: v340[#(2)] = #(1073741824)::
6641 :: EXPR :: modify :: I :: v340[#(3)] = #(1162261467)::
6645 :: EXPR :: modify :: I :: v340[#(4)] = #(1073741824)::
6649 :: EXPR :: modify :: I :: v340[#(5)] = #(1220703125)::
6653 :: EXPR :: modify :: I :: v340[#(6)] = #(362797056)::
6657 :: EXPR :: modify :: I :: v340[#(7)] = #(1977326743)::
6661 :: EXPR :: modify :: I :: v340[#(8)] = #(1073741824)::
6665 :: EXPR :: modify :: I :: v340[#(9)] = #(387420489)::
6669 :: EXPR :: modify :: I :: v340[#(10)] = #(1000000000)::
6673 :: EXPR :: modify :: I :: v340[#(11)] = #(214358881)::
6677 :: EXPR :: modify :: I :: v340[#(12)] = #(429981696)::
6681 :: EXPR :: modify :: I :: v340[#(13)] = #(815730721)::
6685 :: EXPR :: modify :: I :: v340[#(14)] = #(1475789056)::
6689 :: EXPR :: modify :: I :: v340[#(15)] = #(170859375)::
6693 :: EXPR :: modify :: I :: v340[#(16)] = #(268435456)::
6697 :: EXPR :: modify :: I :: v340[#(17)] = #(410338673)::
6701 :: EXPR :: modify :: I :: v340[#(18)] = #(612220032)::
6705 :: EXPR :: modify :: I :: v340[#(19)] = #(893871739)::
6709 :: EXPR :: modify :: I :: v340[#(20)] = #(1280000000)::
6713 :: EXPR :: modify :: I :: v340[#(21)] = #(1801088541)::
6717 :: EXPR :: modify :: I :: v340[#(22)] = #(113379904)::
6721 :: EXPR :: modify :: I :: v340[#(23)] = #(148035889)::
6725 :: EXPR :: modify :: I :: v340[#(24)] = #(191102976)::
6729 :: EXPR :: modify :: I :: v340[#(25)] = #(244140625)::
6733 :: EXPR :: modify :: I :: v340[#(26)] = #(308915776)::
6737 :: EXPR :: modify :: I :: v340[#(27)] = #(387420489)::
6741 :: EXPR :: modify :: I :: v340[#(28)] = #(481890304)::
6745 :: EXPR :: modify :: I :: v340[#(29)] = #(594823321)::
6749 :: EXPR :: modify :: I :: v340[#(30)] = #(729000000)::
6753 :: EXPR :: modify :: I :: v340[#(31)] = #(887503681)::
6757 :: EXPR :: modify :: I :: v340[#(32)] = #(1073741824)::
6761 :: EXPR :: modify :: I :: v340[#(33)] = #(1291467969)::
6765 :: EXPR :: modify :: I :: v340[#(34)] = #(1544804416)::
6769 :: EXPR :: modify :: I :: v340[#(35)] = #(1838265625)::
6773 :: EXPR :: modify :: I :: v340[#(36)] = #(60466176)::
6779 :: NORM :: declaration :: [Ljava/io/ObjectStreamField :: v372 = new java.io.ObjectStreamField[]::CF,6780
6780 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v373 = new java.io.ObjectStreamField::DD,6788
6781 :: EXPR :: reference :: Ljava/lang/Class :: v375 = java.lang.Integer.TYPE::
6788 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(0)] = v373::
6792 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v377 = new java.io.ObjectStreamField::DD,6799:CF,6793
6793 :: EXPR :: assign :: Ljava/lang/Class :: v379 = metadata <Primordial,[B>-><Primordial,Ljava/lang/Class>::
6799 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(1)] = v377::
6803 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v381 = new java.io.ObjectStreamField::DD,6811
6804 :: EXPR :: reference :: Ljava/lang/Class :: v383 = java.lang.Integer.TYPE::
6811 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(2)] = v381::
6815 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v385 = new java.io.ObjectStreamField::DD,6823
6816 :: EXPR :: reference :: Ljava/lang/Class :: v387 = java.lang.Integer.TYPE::
6823 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(3)] = v385::
6827 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v389 = new java.io.ObjectStreamField::DD,6835
6828 :: EXPR :: reference :: Ljava/lang/Class :: v391 = java.lang.Integer.TYPE::
6835 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(4)] = v389::
6839 :: NORM :: declaration :: Ljava/io/ObjectStreamField :: v393 = new java.io.ObjectStreamField::DD,6847
6840 :: EXPR :: reference :: Ljava/lang/Class :: v395 = java.lang.Integer.TYPE::
6847 :: EXPR :: modify :: Ljava/lang/Object :: v372[#(5)] = v393::
6855 :: EXPR :: assign :: null :: PHI v94 = #(1), v93::DD,5434:DD,5462:DD,5463
6856 :: EXPR :: assign :: null :: PHI v235 = #(0), v234::JM,6061:DD,6065:DD,6066
8540 :: ENTR :: entry :: null :: org.hsqldb.Scanner.<clinit>()::CD,8543:CD,8650:CD,8701:CD,8810:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,8834:CD,8836:CD,8837:CD,8844
8543 :: NORM :: declaration :: [C :: v3 = new []::
8544 :: EXPR :: modify :: C :: v3[#(0)] = #(34)::
8548 :: EXPR :: modify :: C :: v3[#(1)] = #(37)::
8552 :: EXPR :: modify :: C :: v3[#(2)] = #(38)::
8556 :: EXPR :: modify :: C :: v3[#(3)] = #(39)::
8560 :: EXPR :: modify :: C :: v3[#(4)] = #(40)::
8564 :: EXPR :: modify :: C :: v3[#(5)] = #(41)::
8568 :: EXPR :: modify :: C :: v3[#(6)] = #(42)::
8572 :: EXPR :: modify :: C :: v3[#(7)] = #(43)::
8576 :: EXPR :: modify :: C :: v3[#(8)] = #(44)::
8580 :: EXPR :: modify :: C :: v3[#(9)] = #(45)::
8584 :: EXPR :: modify :: C :: v3[#(10)] = #(46)::
8588 :: EXPR :: modify :: C :: v3[#(11)] = #(47)::
8592 :: EXPR :: modify :: C :: v3[#(12)] = #(92)::
8596 :: EXPR :: modify :: C :: v3[#(13)] = #(58)::
8600 :: EXPR :: modify :: C :: v3[#(14)] = #(59)::
8604 :: EXPR :: modify :: C :: v3[#(15)] = #(60)::
8608 :: EXPR :: modify :: C :: v3[#(16)] = #(61)::
8612 :: EXPR :: modify :: C :: v3[#(17)] = #(62)::
8616 :: EXPR :: modify :: C :: v3[#(18)] = #(63)::
8620 :: EXPR :: modify :: C :: v3[#(19)] = #(91)::
8624 :: EXPR :: modify :: C :: v3[#(20)] = #(93)::
8628 :: EXPR :: modify :: C :: v3[#(21)] = #(94)::
8632 :: EXPR :: modify :: C :: v3[#(22)] = #(95)::
8636 :: EXPR :: modify :: C :: v3[#(23)] = #(124)::
8640 :: EXPR :: modify :: C :: v3[#(24)] = #(123)::
8644 :: EXPR :: modify :: C :: v3[#(25)] = #(125)::
8650 :: NORM :: declaration :: [Ljava/lang/String :: v56 = new java.lang.String[]::
8651 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(0)] = #(??()::
8655 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(1)] = #(??))::
8659 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(2)] = #(<>)::
8663 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(3)] = #(>=)::
8667 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(4)] = #(<=)::
8671 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(5)] = #(||)::
8675 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(6)] = #(->)::
8679 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(7)] = #(:)::
8683 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(8)] = #(..)::
8687 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(9)] = #(--)::
8691 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(10)] = #(/*)::
8695 :: EXPR :: modify :: Ljava/lang/Object :: v56[#(11)] = #(*/)::
8701 :: NORM :: declaration :: [C :: v70 = new []::DD,8810
8702 :: EXPR :: modify :: C :: v70[#(0)] = #(9)::
8706 :: EXPR :: modify :: C :: v70[#(1)] = #(10)::
8710 :: EXPR :: modify :: C :: v70[#(2)] = #(11)::
8714 :: EXPR :: modify :: C :: v70[#(3)] = #(12)::
8718 :: EXPR :: modify :: C :: v70[#(4)] = #(13)::
8722 :: EXPR :: modify :: C :: v70[#(5)] = #(32)::
8726 :: EXPR :: modify :: C :: v70[#(6)] = #(133)::
8730 :: EXPR :: modify :: C :: v70[#(7)] = #(32)::
8734 :: EXPR :: modify :: C :: v70[#(8)] = #(160)::
8738 :: EXPR :: modify :: C :: v70[#(9)] = #(5760)::
8742 :: EXPR :: modify :: C :: v70[#(10)] = #(6158)::
8746 :: EXPR :: modify :: C :: v70[#(11)] = #(8192)::
8750 :: EXPR :: modify :: C :: v70[#(12)] = #(8193)::
8754 :: EXPR :: modify :: C :: v70[#(13)] = #(8194)::
8758 :: EXPR :: modify :: C :: v70[#(14)] = #(8195)::
8762 :: EXPR :: modify :: C :: v70[#(15)] = #(8196)::
8766 :: EXPR :: modify :: C :: v70[#(16)] = #(8197)::
8770 :: EXPR :: modify :: C :: v70[#(17)] = #(8198)::
8774 :: EXPR :: modify :: C :: v70[#(18)] = #(8199)::
8778 :: EXPR :: modify :: C :: v70[#(19)] = #(8200)::
8782 :: EXPR :: modify :: C :: v70[#(20)] = #(8201)::
8786 :: EXPR :: modify :: C :: v70[#(21)] = #(8202)::
8790 :: EXPR :: modify :: C :: v70[#(22)] = #(8239)::
8794 :: EXPR :: modify :: C :: v70[#(23)] = #(8287)::
8798 :: EXPR :: modify :: C :: v70[#(24)] = #(12288)::
8802 :: EXPR :: modify :: C :: v70[#(25)] = #(8232)::
8806 :: EXPR :: modify :: C :: v70[#(26)] = #(8233)::
8810 :: EXPR :: modify :: [C :: org.hsqldb.Scanner.whitespace = v70::
8828 :: CALL :: call :: Z :: v100 = v96.add(v98)::CL,33826
8833 :: EXPR :: assign :: Ljava/lang/Object :: v101 = v102 + #(1)::DD,8844
8834 :: EXPR :: reference :: [C :: v94 = org.hsqldb.Scanner.whitespace::CF,8836
8836 :: EXPR :: assign :: I :: v95 = v94.length::CF,8837
8837 :: PRED :: IF :: Z :: if (v102 < v95) goto 431::CD,8828:CD,8833:CD,8834:CD,8836:CD,8844
8844 :: EXPR :: assign :: null :: PHI v102 = #(0), v101::DD,8833:DD,8837
9059 :: ENTR :: entry :: null :: org.hsqldb.result.Result.<clinit>()::CD,9075:CD,9079:CD,9100:CD,9112:CD,9127:CD,9142:CD,9157:CD,9163:CD,9166:CD,9174:CD,9180:CD,9186:CD,9193
9075 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v13 = newResultMetaData(#(4))::JM,9079:CL,33930
9079 :: EXPR :: modify :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.Result.sessionAttributesMetaData = v13::
9082 :: EXPR :: reference :: Lorg/hsqldb/result/ResultMetaData :: v14 = org.hsqldb.result.Result.sessionAttributesMetaData::
9084 :: EXPR :: reference :: [Lorg/hsqldb/ColumnBase :: v15 = v14.columns::
9087 :: NORM :: declaration :: Lorg/hsqldb/ColumnBase :: v16 = new org.hsqldb.ColumnBase::DD,9095
9095 :: EXPR :: modify :: Ljava/lang/Object :: v15[v21] = v16::
9099 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,9193
9100 :: PRED :: IF :: Z :: if (v21 < #(4)) goto 33::CD,9082:CD,9087:JM,33969:JM,33972:JM,33963:JM,33966:CD,9099:CD,9193
9112 :: CALL :: call :: V :: v24.setType(v25)::CL,33987
9127 :: CALL :: call :: V :: v29.setType(v30)::CL,33987
9142 :: CALL :: call :: V :: v35.setType(v36)::CL,33987
9157 :: CALL :: call :: V :: v41.setType(v42)::CL,33987
9163 :: CALL :: call :: V :: v44.prepareData()::CL,33998
9166 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v47 = newResultMetaData(#(0))::CL,33930
9174 :: CALL :: call :: Lorg/hsqldb/result/Result :: v50 = newDataResult(v48)::CL,34055
9180 :: CALL :: call :: Lorg/hsqldb/result/Result :: v52 = newUpdateCountResult(#(0))::CL,34081
9186 :: CALL :: call :: Lorg/hsqldb/result/Result :: v54 = newUpdateCountResult(#(1))::CL,34081
9193 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,9099:DD,9100
9239 :: ENTR :: entry :: null :: org.hsqldb.types.Type.<clinit>()::JM,40625:JM,34115:JM,40628:JM,40646:JM,40631:JM,34121:JM,40637:JM,40622:JM,34127:JM,34272:JM,34247:JM,34311:JM,40743:JM,34312:JM,34317:JM,40719:JM,34325:JM,40697:JM,40730:CD,9519:CD,9527:CD,9535:CD,9543:CD,9551:CD,9559:CD,9567:CD,9575:CD,9583:CD,9591:CD,9599:CD,9607:CD,9615:CD,9623:CD,9631:CD,9639:CD,9647:CD,9655:CD,9663:CD,9671:CD,9679:CD,9687:CD,9695:JM,34404:JM,34408:JM,34398:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,9722:CD,9730:CD,9738:CD,9746:CD,9754:CD,9762:CD,9770:CD,9778:CD,9786:CD,9794:CD,9802:CD,9810:CD,9818:CD,9826:CD,9834:CD,9842:CD,9850:CD,9858:CD,9866:CD,9874:CD,9882:CD,9890:CD,9898:CD,9906:CD,9914:CD,9929:CD,9937:CD,9945:CD,9953:CD,9961:CD,9969:CD,9977:CD,9994:CD,10004:CD,10014:CD,10024:CD,10034:CD,10044:CD,10054:CD,10064:CD,10074:CD,10084:CD,10094:CD,10104:CD,10114:CD,10124:CD,10134:CD,10144:CD,10154:CD,10164:CD,10174:CD,10184:CD,10194:CD,10204:CD,10214
9519 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v108 = newIntervalType(#(101), #(2 l), #(0))::CL,34340
9527 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v111 = newIntervalType(#(102), #(2 l), #(0))::CL,34340
9535 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v114 = newIntervalType(#(103), #(2 l), #(0))::CL,34340
9543 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v117 = newIntervalType(#(104), #(2 l), #(0))::CL,34340
9551 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v120 = newIntervalType(#(105), #(2 l), #(0))::CL,34340
9559 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v123 = newIntervalType(#(106), #(2 l), #(6))::CL,34340
9567 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v126 = newIntervalType(#(106), #(2 l), #(9))::CL,34340
9575 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v129 = newIntervalType(#(107), #(2 l), #(0))::CL,34340
9583 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v132 = newIntervalType(#(108), #(2 l), #(0))::CL,34340
9591 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v135 = newIntervalType(#(109), #(2 l), #(0))::CL,34340
9599 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v138 = newIntervalType(#(110), #(2 l), #(6))::CL,34340
9607 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v141 = newIntervalType(#(111), #(2 l), #(0))::CL,34340
9615 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v144 = newIntervalType(#(112), #(2 l), #(6))::CL,34340
9623 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v147 = newIntervalType(#(113), #(2 l), #(6))::CL,34340
9631 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v150 = newIntervalType(#(101), #(9 l), #(0))::CL,34340
9639 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v152 = newIntervalType(#(102), #(9 l), #(0))::CL,34340
9647 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v154 = newIntervalType(#(103), #(9 l), #(0))::CL,34340
9655 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v156 = newIntervalType(#(104), #(9 l), #(0))::CL,34340
9663 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v158 = newIntervalType(#(105), #(9 l), #(0))::CL,34340
9671 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v161 = newIntervalType(#(106), #(12 l), #(6))::CL,34340
9679 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v163 = newIntervalType(#(106), #(12 l), #(9))::CL,34340
9687 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v165 = newIntervalType(#(107), #(9 l), #(0))::CL,34340
9695 :: CALL :: call :: Lorg/hsqldb/types/IntervalType :: v167 = newIntervalType(#(110), #(9 l), #(9))::CL,34340
9722 :: CALL :: call :: Z :: v177 = v174.put(#(CHARACTER), #(1))::CL,33387
9730 :: CALL :: call :: Z :: v181 = v178.put(#(VARCHAR), #(12))::CL,33387
9738 :: CALL :: call :: Z :: v186 = v182.put(#(VARCHAR_IGNORECASE), #(100))::CL,33387
9746 :: CALL :: call :: Z :: v190 = v187.put(#(NVARCHAR), #(12))::CL,33387
9754 :: CALL :: call :: Z :: v194 = v191.put(#(DATE), #(91))::CL,33387
9762 :: CALL :: call :: Z :: v198 = v195.put(#(TIME), #(92))::CL,33387
9770 :: CALL :: call :: Z :: v202 = v199.put(#(TIMESTAMP), #(93))::CL,33387
9778 :: CALL :: call :: Z :: v207 = v203.put(#(INTERVAL), #(10))::CL,33387
9786 :: CALL :: call :: Z :: v211 = v208.put(#(TINYINT), #(-6))::CL,33387
9794 :: CALL :: call :: Z :: v215 = v212.put(#(SMALLINT), #(5))::CL,33387
9802 :: CALL :: call :: Z :: v219 = v216.put(#(INTEGER), #(4))::CL,33387
9810 :: CALL :: call :: Z :: v223 = v220.put(#(BIGINT), #(25))::CL,33387
9818 :: CALL :: call :: Z :: v228 = v224.put(#(REAL), #(7))::CL,33387
9826 :: CALL :: call :: Z :: v232 = v229.put(#(FLOAT), #(6))::CL,33387
9834 :: CALL :: call :: Z :: v236 = v233.put(#(DOUBLE), #(8))::CL,33387
9842 :: CALL :: call :: Z :: v240 = v237.put(#(NUMERIC), #(2))::CL,33387
9850 :: CALL :: call :: Z :: v244 = v241.put(#(DECIMAL), #(3))::CL,33387
9858 :: CALL :: call :: Z :: v249 = v245.put(#(BOOLEAN), #(16))::CL,33387
9866 :: CALL :: call :: Z :: v253 = v250.put(#(BINARY), #(60))::CL,33387
9874 :: CALL :: call :: Z :: v257 = v254.put(#(VARBINARY), #(61))::CL,33387
9882 :: CALL :: call :: Z :: v262 = v258.put(#(CLOB), #(40))::CL,33387
9890 :: CALL :: call :: Z :: v267 = v263.put(#(BLOB), #(30))::CL,33387
9898 :: CALL :: call :: Z :: v271 = v268.put(#(BIT), #(14))::CL,33387
9906 :: CALL :: call :: Z :: v276 = v272.put(#(OTHER), #(1111))::CL,33387
9914 :: CALL :: call :: Z :: v281 = v277.put(#(UUID), #(-11))::CL,33387
9929 :: CALL :: call :: Z :: v288 = v285.put(#(CHAR), #(1))::CL,33387
9937 :: CALL :: call :: Z :: v292 = v289.put(#(INT), #(4))::CL,33387
9945 :: CALL :: call :: Z :: v296 = v293.put(#(DEC), #(3))::CL,33387
9953 :: CALL :: call :: Z :: v301 = v297.put(#(LONGVARCHAR), #(-1))::CL,33387
9961 :: CALL :: call :: Z :: v305 = v302.put(#(DATETIME), #(93))::CL,33387
9969 :: CALL :: call :: Z :: v310 = v306.put(#(LONGVARBINARY), #(-4))::CL,33387
9977 :: CALL :: call :: Z :: v314 = v311.put(#(OBJECT), #(1111))::CL,33387
9994 :: CALL :: call :: Ljava/lang/Object :: v321 = v317.put(#(956), v319)::CL,34457
10004 :: CALL :: call :: Ljava/lang/Object :: v326 = v322.put(#(979), v324)::CL,34457
10014 :: CALL :: call :: Ljava/lang/Object :: v331 = v327.put(#(966), v329)::CL,34457
10024 :: CALL :: call :: Ljava/lang/Object :: v336 = v332.put(#(970), v334)::CL,34457
10034 :: CALL :: call :: Ljava/lang/Object :: v341 = v337.put(#(958), v339)::CL,34457
10044 :: CALL :: call :: Ljava/lang/Object :: v346 = v342.put(#(975), v344)::CL,34457
10054 :: CALL :: call :: Ljava/lang/Object :: v351 = v347.put(#(976), v349)::CL,34457
10064 :: CALL :: call :: Ljava/lang/Object :: v356 = v352.put(#(977), v354)::CL,34457
10074 :: CALL :: call :: Ljava/lang/Object :: v361 = v357.put(#(974), v359)::CL,34457
10084 :: CALL :: call :: Ljava/lang/Object :: v366 = v362.put(#(963), v364)::CL,34457
10094 :: CALL :: call :: Ljava/lang/Object :: v371 = v367.put(#(951), v369)::CL,34457
10104 :: CALL :: call :: Ljava/lang/Object :: v376 = v372.put(#(971), v374)::CL,34457
10114 :: CALL :: call :: Ljava/lang/Object :: v381 = v377.put(#(962), v379)::CL,34457
10124 :: CALL :: call :: Ljava/lang/Object :: v386 = v382.put(#(961), v384)::CL,34457
10134 :: CALL :: call :: Ljava/lang/Object :: v391 = v387.put(#(969), v389)::CL,34457
10144 :: CALL :: call :: Ljava/lang/Object :: v396 = v392.put(#(959), v394)::CL,34457
10154 :: CALL :: call :: Ljava/lang/Object :: v401 = v397.put(#(955), v399)::CL,34457
10164 :: CALL :: call :: Ljava/lang/Object :: v406 = v402.put(#(952), v404)::CL,34457
10174 :: CALL :: call :: Ljava/lang/Object :: v411 = v407.put(#(978), v409)::CL,34457
10184 :: CALL :: call :: Ljava/lang/Object :: v416 = v412.put(#(964), v414)::CL,34457
10194 :: CALL :: call :: Ljava/lang/Object :: v421 = v417.put(#(957), v419)::CL,34457
10204 :: CALL :: call :: Ljava/lang/Object :: v426 = v422.put(#(954), v424)::CL,34457
10214 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.put(#(953), v429)::CL,34457
10629 :: ENTR :: entry :: null :: org.hsqldb.lib.FrameworkLogger.<clinit>()::CD,10632:CD,10638:CD,10646
10632 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
10638 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::
10646 :: CALL :: call :: V :: reconfigure()::CL,34478
10657 :: ENTR :: entry :: null :: org.hsqldb.HsqlDateTime.<clinit>()::CD,10670:CD,10671:CD,10682:CD,10684:CD,10719:CD,10721:CD,10728:CD,10752:CD,10776:CD,10803:CD,10804:CD,10825:CD,10846:CD,10867:CD,10880:CD,10893:CD,10906:CD,10927:CD,10940:CD,10961:CD,10978:CD,11003:CD,11016:CD,11033:CD,11046:CD,11059:CD,11072:CD,11085:CD,11102:CD,11111:CD,11132:CD,11153:CD,11166:CD,11179:CD,11192:CD,11205:CD,11218:CD,11239:CD,11260:CD,11275:CD,11394
10670 :: NORM :: declaration :: Ljava/util/GregorianCalendar :: v5 = new java.util.GregorianCalendar::DD,10682
10671 :: CALL :: call :: Ljava/util/TimeZone :: v8 = getTimeZone(#(GMT))::
10682 :: EXPR :: modify :: Ljava/util/Calendar :: org.hsqldb.HsqlDateTime.tempCalGMT = v5::
10684 :: NORM :: declaration :: Ljava/util/Date :: v11 = new java.util.Date::
10719 :: EXPR :: reference :: Ljava/util/Calendar :: v26 = org.hsqldb.HsqlDateTime.tempCalGMT::JM,10721
10721 :: CALL :: call :: V :: v26.setLenient(#(0))::JM,10721
10728 :: CALL :: call :: Ljava/util/TimeZone :: v32 = getTimeZone(#(GMT))::
10752 :: CALL :: call :: Ljava/util/TimeZone :: v41 = getTimeZone(#(GMT))::
10776 :: CALL :: call :: Ljava/util/TimeZone :: v50 = getTimeZone(#(GMT))::
10803 :: NORM :: declaration :: [[C :: v59 = new [][]::CF,10804
10804 :: NORM :: declaration :: [C :: v61 = new []::DD,10821
10805 :: EXPR :: modify :: C :: v61[#(0)] = #(82)::
10809 :: EXPR :: modify :: C :: v61[#(1)] = #(82)::
10813 :: EXPR :: modify :: C :: v61[#(2)] = #(82)::
10817 :: EXPR :: modify :: C :: v61[#(3)] = #(82)::
10821 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(0)] = v61::
10825 :: NORM :: declaration :: [C :: v66 = new []::DD,10842
10826 :: EXPR :: modify :: C :: v66[#(0)] = #(73)::
10830 :: EXPR :: modify :: C :: v66[#(1)] = #(89)::
10834 :: EXPR :: modify :: C :: v66[#(2)] = #(89)::
10838 :: EXPR :: modify :: C :: v66[#(3)] = #(89)::
10842 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(1)] = v66::
10846 :: NORM :: declaration :: [C :: v69 = new []::DD,10863
10847 :: EXPR :: modify :: C :: v69[#(0)] = #(89)::
10851 :: EXPR :: modify :: C :: v69[#(1)] = #(89)::
10855 :: EXPR :: modify :: C :: v69[#(2)] = #(89)::
10859 :: EXPR :: modify :: C :: v69[#(3)] = #(89)::
10863 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(2)] = v69::
10867 :: NORM :: declaration :: [C :: v70 = new []::DD,10876
10868 :: EXPR :: modify :: C :: v70[#(0)] = #(73)::
10872 :: EXPR :: modify :: C :: v70[#(1)] = #(89)::
10876 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(3)] = v70::
10880 :: NORM :: declaration :: [C :: v71 = new []::DD,10889
10881 :: EXPR :: modify :: C :: v71[#(0)] = #(89)::
10885 :: EXPR :: modify :: C :: v71[#(1)] = #(89)::
10889 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(4)] = v71::
10893 :: NORM :: declaration :: [C :: v73 = new []::DD,10902
10894 :: EXPR :: modify :: C :: v73[#(0)] = #(66)::
10898 :: EXPR :: modify :: C :: v73[#(1)] = #(67)::
10902 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(5)] = v73::
10906 :: NORM :: declaration :: [C :: v77 = new []::DD,10923
10907 :: EXPR :: modify :: C :: v77[#(0)] = #(66)::
10911 :: EXPR :: modify :: C :: v77[#(1)] = #(46)::
10915 :: EXPR :: modify :: C :: v77[#(2)] = #(67)::
10919 :: EXPR :: modify :: C :: v77[#(3)] = #(46)::
10923 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(6)] = v77::
10927 :: NORM :: declaration :: [C :: v80 = new []::DD,10936
10928 :: EXPR :: modify :: C :: v80[#(0)] = #(65)::
10932 :: EXPR :: modify :: C :: v80[#(1)] = #(68)::
10936 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(7)] = v80::
10940 :: NORM :: declaration :: [C :: v84 = new []::DD,10957
10941 :: EXPR :: modify :: C :: v84[#(0)] = #(65)::
10945 :: EXPR :: modify :: C :: v84[#(1)] = #(46)::
10949 :: EXPR :: modify :: C :: v84[#(2)] = #(68)::
10953 :: EXPR :: modify :: C :: v84[#(3)] = #(46)::
10957 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(8)] = v84::
10961 :: NORM :: declaration :: [C :: v86 = new []::DD,10974
10962 :: EXPR :: modify :: C :: v86[#(0)] = #(77)::
10966 :: EXPR :: modify :: C :: v86[#(1)] = #(79)::
10970 :: EXPR :: modify :: C :: v86[#(2)] = #(78)::
10974 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(9)] = v86::
10978 :: NORM :: declaration :: [C :: v91 = new []::DD,10999
10979 :: EXPR :: modify :: C :: v91[#(0)] = #(77)::
10983 :: EXPR :: modify :: C :: v91[#(1)] = #(79)::
10987 :: EXPR :: modify :: C :: v91[#(2)] = #(78)::
10991 :: EXPR :: modify :: C :: v91[#(3)] = #(84)::
10995 :: EXPR :: modify :: C :: v91[#(4)] = #(72)::
10999 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(10)] = v91::
11003 :: NORM :: declaration :: [C :: v95 = new []::DD,11012
11004 :: EXPR :: modify :: C :: v95[#(0)] = #(77)::
11008 :: EXPR :: modify :: C :: v95[#(1)] = #(77)::
11012 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(11)] = v95::
11016 :: NORM :: declaration :: [C :: v97 = new []::DD,11029
11017 :: EXPR :: modify :: C :: v97[#(0)] = #(68)::
11021 :: EXPR :: modify :: C :: v97[#(1)] = #(65)::
11025 :: EXPR :: modify :: C :: v97[#(2)] = #(89)::
11029 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(12)] = v97::
11033 :: NORM :: declaration :: [C :: v99 = new []::DD,11042
11034 :: EXPR :: modify :: C :: v99[#(0)] = #(68)::
11038 :: EXPR :: modify :: C :: v99[#(1)] = #(89)::
11042 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(13)] = v99::
11046 :: NORM :: declaration :: [C :: v101 = new []::DD,11055
11047 :: EXPR :: modify :: C :: v101[#(0)] = #(87)::
11051 :: EXPR :: modify :: C :: v101[#(1)] = #(87)::
11055 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(14)] = v101::
11059 :: NORM :: declaration :: [C :: v104 = new []::DD,11068
11060 :: EXPR :: modify :: C :: v104[#(0)] = #(73)::
11064 :: EXPR :: modify :: C :: v104[#(1)] = #(87)::
11068 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(15)] = v104::
11072 :: NORM :: declaration :: [C :: v106 = new []::DD,11081
11073 :: EXPR :: modify :: C :: v106[#(0)] = #(68)::
11077 :: EXPR :: modify :: C :: v106[#(1)] = #(68)::
11081 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(16)] = v106::
11085 :: NORM :: declaration :: [C :: v108 = new []::DD,11098
11086 :: EXPR :: modify :: C :: v108[#(0)] = #(68)::
11090 :: EXPR :: modify :: C :: v108[#(1)] = #(68)::
11094 :: EXPR :: modify :: C :: v108[#(2)] = #(68)::
11098 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(17)] = v108::
11102 :: NORM :: declaration :: [C :: v110 = new []::DD,11107
11103 :: EXPR :: modify :: C :: v110[#(0)] = #(87)::
11107 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(18)] = v110::
11111 :: NORM :: declaration :: [C :: v112 = new []::DD,11128
11112 :: EXPR :: modify :: C :: v112[#(0)] = #(72)::
11116 :: EXPR :: modify :: C :: v112[#(1)] = #(72)::
11120 :: EXPR :: modify :: C :: v112[#(2)] = #(50)::
11124 :: EXPR :: modify :: C :: v112[#(3)] = #(52)::
11128 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(19)] = v112::
11132 :: NORM :: declaration :: [C :: v116 = new []::DD,11149
11133 :: EXPR :: modify :: C :: v116[#(0)] = #(72)::
11137 :: EXPR :: modify :: C :: v116[#(1)] = #(72)::
11141 :: EXPR :: modify :: C :: v116[#(2)] = #(49)::
11145 :: EXPR :: modify :: C :: v116[#(3)] = #(50)::
11149 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(20)] = v116::
11153 :: NORM :: declaration :: [C :: v119 = new []::DD,11162
11154 :: EXPR :: modify :: C :: v119[#(0)] = #(72)::
11158 :: EXPR :: modify :: C :: v119[#(1)] = #(72)::
11162 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(21)] = v119::
11166 :: NORM :: declaration :: [C :: v121 = new []::DD,11175
11167 :: EXPR :: modify :: C :: v121[#(0)] = #(77)::
11171 :: EXPR :: modify :: C :: v121[#(1)] = #(73)::
11175 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(22)] = v121::
11179 :: NORM :: declaration :: [C :: v123 = new []::DD,11188
11180 :: EXPR :: modify :: C :: v123[#(0)] = #(83)::
11184 :: EXPR :: modify :: C :: v123[#(1)] = #(83)::
11188 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(23)] = v123::
11192 :: NORM :: declaration :: [C :: v126 = new []::DD,11201
11193 :: EXPR :: modify :: C :: v126[#(0)] = #(65)::
11197 :: EXPR :: modify :: C :: v126[#(1)] = #(77)::
11201 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(24)] = v126::
11205 :: NORM :: declaration :: [C :: v128 = new []::DD,11214
11206 :: EXPR :: modify :: C :: v128[#(0)] = #(80)::
11210 :: EXPR :: modify :: C :: v128[#(1)] = #(77)::
11214 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(25)] = v128::
11218 :: NORM :: declaration :: [C :: v131 = new []::DD,11235
11219 :: EXPR :: modify :: C :: v131[#(0)] = #(65)::
11223 :: EXPR :: modify :: C :: v131[#(1)] = #(46)::
11227 :: EXPR :: modify :: C :: v131[#(2)] = #(77)::
11231 :: EXPR :: modify :: C :: v131[#(3)] = #(46)::
11235 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(26)] = v131::
11239 :: NORM :: declaration :: [C :: v133 = new []::DD,11256
11240 :: EXPR :: modify :: C :: v133[#(0)] = #(80)::
11244 :: EXPR :: modify :: C :: v133[#(1)] = #(46)::
11248 :: EXPR :: modify :: C :: v133[#(2)] = #(77)::
11252 :: EXPR :: modify :: C :: v133[#(3)] = #(46)::
11256 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(27)] = v133::
11260 :: NORM :: declaration :: [C :: v135 = new []::DD,11269
11261 :: EXPR :: modify :: C :: v135[#(0)] = #(70)::
11265 :: EXPR :: modify :: C :: v135[#(1)] = #(70)::
11269 :: EXPR :: modify :: Ljava/lang/Object :: v59[#(28)] = v135::
11275 :: NORM :: declaration :: [Ljava/lang/String :: v137 = new java.lang.String[]::
11276 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(0)] = #(yyyy)::
11280 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(1)] = #('*IYYY')::
11284 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(2)] = #(yyyy)::
11288 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(3)] = #('*IY')::
11292 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(4)] = #(yy)::
11296 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(5)] = #(G)::
11300 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(6)] = #(G)::
11304 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(7)] = #(G)::
11308 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(8)] = #(G)::
11312 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(9)] = #(MMM)::
11316 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(10)] = #(MMMMM)::
11320 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(11)] = #(MM)::
11324 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(12)] = #(EEEE)::
11328 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(13)] = #(EE)::
11332 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(14)] = #('*WW')::
11336 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(15)] = #('*IW')::
11340 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(16)] = #(dd)::
11344 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(17)] = #(D)::
11348 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(18)] = #('*W')::
11352 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(19)] = #(HH)::
11356 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(20)] = #(KK)::
11360 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(21)] = #(KK)::
11364 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(22)] = #(mm)::
11368 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(23)] = #(ss)::
11372 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(24)] = #(aaa)::
11376 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(25)] = #(aaa)::
11380 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(26)] = #(aaa)::
11384 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(27)] = #(aaa)::
11388 :: EXPR :: modify :: Ljava/lang/Object :: v137[#(28)] = #(S)::
11394 :: NORM :: declaration :: [I :: v159 = new []::
11395 :: EXPR :: modify :: I :: v159[#(0)] = #(-1)::
11399 :: EXPR :: modify :: I :: v159[#(1)] = #(-1)::
11403 :: EXPR :: modify :: I :: v159[#(2)] = #(101)::
11407 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
11411 :: EXPR :: modify :: I :: v159[#(4)] = #(101)::
11415 :: EXPR :: modify :: I :: v159[#(5)] = #(-1)::
11419 :: EXPR :: modify :: I :: v159[#(6)] = #(-1)::
11423 :: EXPR :: modify :: I :: v159[#(7)] = #(-1)::
11427 :: EXPR :: modify :: I :: v159[#(8)] = #(-1)::
11431 :: EXPR :: modify :: I :: v159[#(9)] = #(102)::
11435 :: EXPR :: modify :: I :: v159[#(10)] = #(102)::
11439 :: EXPR :: modify :: I :: v159[#(11)] = #(102)::
11443 :: EXPR :: modify :: I :: v159[#(12)] = #(-1)::
11447 :: EXPR :: modify :: I :: v159[#(13)] = #(-1)::
11451 :: EXPR :: modify :: I :: v159[#(14)] = #(262)::
11455 :: EXPR :: modify :: I :: v159[#(15)] = #(-1)::
11459 :: EXPR :: modify :: I :: v159[#(16)] = #(103)::
11463 :: EXPR :: modify :: I :: v159[#(17)] = #(103)::
11467 :: EXPR :: modify :: I :: v159[#(18)] = #(-1)::
11471 :: EXPR :: modify :: I :: v159[#(19)] = #(104)::
11475 :: EXPR :: modify :: I :: v159[#(20)] = #(-1)::
11479 :: EXPR :: modify :: I :: v159[#(21)] = #(104)::
11483 :: EXPR :: modify :: I :: v159[#(22)] = #(105)::
11487 :: EXPR :: modify :: I :: v159[#(23)] = #(106)::
11491 :: EXPR :: modify :: I :: v159[#(24)] = #(-1)::
11495 :: EXPR :: modify :: I :: v159[#(25)] = #(-1)::
11499 :: EXPR :: modify :: I :: v159[#(26)] = #(-1)::
11503 :: EXPR :: modify :: I :: v159[#(27)] = #(-1)::
11507 :: EXPR :: modify :: I :: v159[#(28)] = #(-1)::
12103 :: ENTR :: entry :: null :: org.hsqldb.SqlInvariants.<clinit>()::CD,12106:CD,12113:CD,12118:CD,12120:CD,12127:CD,12134:CD,12141:CD,12148:CD,12153:CD,12155:CD,12157:CD,12162:CD,12167:CD,12169:CD,12171:CD,12176:CD,12187
12106 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5 = newSystemObjectName(#(INFORMATION_SCHEMA), #(2))::CL,35041
12113 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v8 = newSystemObjectName(#(SYSTEM_SCHEMA), #(2))::JM,12118:CL,35041
12118 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.SYSTEM_SCHEMA_HSQLNAME = v8::
12120 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v11 = newSystemObjectName(#(SYSTEM_LOBS), #(2))::CL,35041
12127 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v14 = newSystemObjectName(#(SQLJ), #(2))::CL,35041
12134 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v18 = newSystemObjectName(#(SYSTEM_SUBQUERY), #(3))::CL,35041
12141 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v21 = newSystemObjectName(#(MODULE), #(2))::CL,35041
12148 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v24 = newSystemObjectName(#(DUAL), #(3))::JM,12153:CL,35041
12153 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME = v24::
12155 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v25 = org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME::
12157 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v26 = org.hsqldb.SqlInvariants.SYSTEM_SCHEMA_HSQLNAME::DD,12159
12159 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v25.schema = v26::
12162 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v30 = newSystemObjectName(#(DUMMY), #(9))::JM,12167:CL,35041
12167 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.SqlInvariants.DUAL_COLUMN_HSQLNAME = v30::
12169 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v31 = org.hsqldb.SqlInvariants.DUAL_COLUMN_HSQLNAME::
12171 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v32 = org.hsqldb.SqlInvariants.DUAL_TABLE_HSQLNAME::DD,12173
12173 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v31.parent = v32::
12176 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v36 = newSystemObjectName(#(IDX), #(20))::CL,35041
12187 :: CALL :: call :: V :: v37.setSchemaIfNull(v38)::CL,35064
12223 :: ENTR :: entry :: null :: org.hsqldb.types.Charset.<clinit>()::CD,12226:CD,12227:CD,12242:CD,12243:CD,12256:CD,12269:CD,12284:CD,12285:CD,12298:CD,12311:CD,12324:CD,12339:JM,35122:CD,12352:CD,12365:CD,12378:CD,12391:CD,12404:CD,12417:CD,12430:CD,12443:CD,12456:CD,12469
12226 :: NORM :: declaration :: [[I :: v3 = new [][]::CF,12227
12227 :: NORM :: declaration :: [I :: v6 = new []::DD,12236
12228 :: EXPR :: modify :: I :: v6[#(0)] = #(65)::
12232 :: EXPR :: modify :: I :: v6[#(1)] = #(90)::
12236 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = v6::
12242 :: NORM :: declaration :: [[I :: v10 = new [][]::CF,12243
12243 :: NORM :: declaration :: [I :: v11 = new []::DD,12252
12244 :: EXPR :: modify :: I :: v11[#(0)] = #(48)::
12248 :: EXPR :: modify :: I :: v11[#(1)] = #(57)::
12252 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = v11::
12256 :: NORM :: declaration :: [I :: v14 = new []::DD,12265
12257 :: EXPR :: modify :: I :: v14[#(0)] = #(65)::
12261 :: EXPR :: modify :: I :: v14[#(1)] = #(90)::
12265 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = v14::
12269 :: NORM :: declaration :: [I :: v15 = new []::DD,12278
12270 :: EXPR :: modify :: I :: v15[#(0)] = #(95)::
12274 :: EXPR :: modify :: I :: v15[#(1)] = #(95)::
12278 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = v15::
12284 :: NORM :: declaration :: [[I :: v18 = new [][]::CF,12285
12285 :: NORM :: declaration :: [I :: v19 = new []::DD,12294
12286 :: EXPR :: modify :: I :: v19[#(0)] = #(48)::
12290 :: EXPR :: modify :: I :: v19[#(1)] = #(57)::
12294 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
12298 :: NORM :: declaration :: [I :: v20 = new []::DD,12307
12299 :: EXPR :: modify :: I :: v20[#(0)] = #(65)::
12303 :: EXPR :: modify :: I :: v20[#(1)] = #(90)::
12307 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
12311 :: NORM :: declaration :: [I :: v21 = new []::DD,12320
12312 :: EXPR :: modify :: I :: v21[#(0)] = #(95)::
12316 :: EXPR :: modify :: I :: v21[#(1)] = #(95)::
12320 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
12324 :: NORM :: declaration :: [I :: v22 = new []::DD,12333
12325 :: EXPR :: modify :: I :: v22[#(0)] = #(97)::
12329 :: EXPR :: modify :: I :: v22[#(1)] = #(122)::
12333 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(3)] = v22::
12339 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v28 = newInfoSchemaObjectName(#(SQL_TEXT), #(0), #(14))::CL,35081
12352 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v33 = newInfoSchemaObjectName(#(SQL_IDENTIFIER), #(0), #(14))::CL,35081
12365 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v38 = newInfoSchemaObjectName(#(SQL_CHARACTER), #(0), #(14))::CL,35081
12378 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v43 = newInfoSchemaObjectName(#(LATIN1), #(0), #(14))::CL,35081
12391 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v48 = newInfoSchemaObjectName(#(ASCII_GRAPHIC), #(0), #(14))::CL,35081
12404 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v53 = newInfoSchemaObjectName(#(GRAPHIC_IRV), #(0), #(14))::CL,35081
12417 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v58 = newInfoSchemaObjectName(#(ASCII_FULL), #(0), #(14))::CL,35081
12430 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v63 = newInfoSchemaObjectName(#(ISO8BIT), #(0), #(14))::CL,35081
12443 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v68 = newInfoSchemaObjectName(#(UTF32), #(0), #(14))::CL,35081
12456 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v73 = newInfoSchemaObjectName(#(UTF16), #(0), #(14))::CL,35081
12469 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v78 = newInfoSchemaObjectName(#(UTF8), #(0), #(14))::CL,35081
12638 :: ENTR :: entry :: null :: org.hsqldb.types.Collation.<clinit>()::JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,12668:CD,12676:CD,12684:CD,12692:CD,12700:CD,12708:CD,12716:CD,12724:CD,12732:CD,12740:CD,12748:CD,12756:CD,12764:CD,12772:CD,12780:CD,12788:CD,12796:CD,12804:CD,12812:CD,12820:CD,12828:CD,12836:CD,12844:CD,12852:CD,12860:CD,12868:CD,12876:CD,12884:CD,12892:CD,12900:CD,12908:CD,12916:CD,12924:CD,12932:CD,12940:CD,12948:CD,12956:CD,12964:CD,12972:CD,12980:CD,12988:CD,12996:CD,13004:CD,13012:CD,13020:CD,13028:CD,13036:CD,13044:CD,13052:CD,13060:CD,13068:CD,13076:CD,13084:CD,13092:CD,13100:CD,13108:CD,13116:CD,13124:CD,13132:CD,13140:CD,13148:CD,13156:CD,13164:CD,13172:CD,13180:CD,13188:CD,13196:CD,13204:CD,13212:CD,13220:CD,13228:CD,13236:CD,13244:CD,13252:CD,13260:CD,13268:CD,13276:CD,13284:CD,13292:CD,13300:CD,13308:CD,13316:CD,13324:CD,13332:CD,13340:CD,13348:CD,13356:CD,13364:CD,13372:CD,13380:CD,13388:CD,13396:CD,13404:CD,13412:CD,13420:CD,13428:CD,13432:CD,13463:CD,13467:CD,13468:JM,35346:JM,35355:JM,35341:CD,13473:CD,13475:CD,13480:CD,13482:CD,13484:CD,13489:CD,13491:CD,13502:CD,13514
12668 :: CALL :: call :: Ljava/lang/Object :: v16 = v12.put(#(Afrikaans), #(af-ZA))::CL,32743
12676 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.put(#(Amharic), #(am-ET))::CL,32743
12684 :: CALL :: call :: Ljava/lang/Object :: v26 = v22.put(#(Arabic), #(ar))::CL,32743
12692 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.put(#(Assamese), #(as-IN))::CL,32743
12700 :: CALL :: call :: Ljava/lang/Object :: v36 = v32.put(#(Azerbaijani_Latin), #(az-AZ))::CL,32743
12708 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(#(Azerbaijani_Cyrillic), #(az-cyrillic))::CL,32743
12716 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.put(#(Belarusian), #(be-BY))::CL,32743
12724 :: CALL :: call :: Ljava/lang/Object :: v51 = v47.put(#(Bulgarian), #(bg-BG))::CL,32743
12732 :: CALL :: call :: Ljava/lang/Object :: v56 = v52.put(#(Bengali), #(bn-IN))::CL,32743
12740 :: CALL :: call :: Ljava/lang/Object :: v61 = v57.put(#(Tibetan), #(bo-CN))::CL,32743
12748 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.put(#(Bosnian), #(bs-BA))::CL,32743
12756 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.put(#(Catalan), #(ca-ES))::CL,32743
12764 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.put(#(Czech), #(cs-CZ))::CL,32743
12772 :: CALL :: call :: Ljava/lang/Object :: v81 = v77.put(#(Welsh), #(cy-GB))::CL,32743
12780 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.put(#(Danish), #(da-DK))::CL,32743
12788 :: CALL :: call :: Ljava/lang/Object :: v91 = v87.put(#(German), #(de-DE))::CL,32743
12796 :: CALL :: call :: Ljava/lang/Object :: v96 = v92.put(#(Greek), #(el-GR))::CL,32743
12804 :: CALL :: call :: Ljava/lang/Object :: v101 = v97.put(#(Latin1_General), #(en-US))::CL,32743
12812 :: CALL :: call :: Ljava/lang/Object :: v105 = v102.put(#(English), #(en-US))::CL,32743
12820 :: CALL :: call :: Ljava/lang/Object :: v110 = v106.put(#(Spanish), #(es-ES))::CL,32743
12828 :: CALL :: call :: Ljava/lang/Object :: v115 = v111.put(#(Estonian), #(et-EE))::CL,32743
12836 :: CALL :: call :: Ljava/lang/Object :: v120 = v116.put(#(Basque), #(eu))::CL,32743
12844 :: CALL :: call :: Ljava/lang/Object :: v125 = v121.put(#(Finnish), #(fi-FI))::CL,32743
12852 :: CALL :: call :: Ljava/lang/Object :: v130 = v126.put(#(French), #(fr-FR))::CL,32743
12860 :: CALL :: call :: Ljava/lang/Object :: v135 = v131.put(#(Guarani), #(gn-PY))::CL,32743
12868 :: CALL :: call :: Ljava/lang/Object :: v140 = v136.put(#(Gujarati), #(gu-IN))::CL,32743
12876 :: CALL :: call :: Ljava/lang/Object :: v145 = v141.put(#(Hausa), #(ha-NG))::CL,32743
12884 :: CALL :: call :: Ljava/lang/Object :: v150 = v146.put(#(Hebrew), #(he-IL))::CL,32743
12892 :: CALL :: call :: Ljava/lang/Object :: v155 = v151.put(#(Hindi), #(hi-IN))::CL,32743
12900 :: CALL :: call :: Ljava/lang/Object :: v160 = v156.put(#(Croatian), #(hr-HR))::CL,32743
12908 :: CALL :: call :: Ljava/lang/Object :: v165 = v161.put(#(Hungarian), #(hu-HU))::CL,32743
12916 :: CALL :: call :: Ljava/lang/Object :: v170 = v166.put(#(Armenian), #(hy-AM))::CL,32743
12924 :: CALL :: call :: Ljava/lang/Object :: v175 = v171.put(#(Indonesian), #(id-ID))::CL,32743
12932 :: CALL :: call :: Ljava/lang/Object :: v180 = v176.put(#(Igbo), #(ig-NG))::CL,32743
12940 :: CALL :: call :: Ljava/lang/Object :: v185 = v181.put(#(Icelandic), #(is-IS))::CL,32743
12948 :: CALL :: call :: Ljava/lang/Object :: v190 = v186.put(#(Italian), #(it-IT))::CL,32743
12956 :: CALL :: call :: Ljava/lang/Object :: v195 = v191.put(#(Inuktitut), #(iu-CA))::CL,32743
12964 :: CALL :: call :: Ljava/lang/Object :: v200 = v196.put(#(Japanese), #(ja-JP))::CL,32743
12972 :: CALL :: call :: Ljava/lang/Object :: v205 = v201.put(#(Georgian), #(ka-GE))::CL,32743
12980 :: CALL :: call :: Ljava/lang/Object :: v210 = v206.put(#(Kazakh), #(kk-KZ))::CL,32743
12988 :: CALL :: call :: Ljava/lang/Object :: v215 = v211.put(#(Khmer), #(km-KH))::CL,32743
12996 :: CALL :: call :: Ljava/lang/Object :: v220 = v216.put(#(Kannada), #(kn-IN))::CL,32743
13004 :: CALL :: call :: Ljava/lang/Object :: v225 = v221.put(#(Korean), #(ko-KR))::CL,32743
13012 :: CALL :: call :: Ljava/lang/Object :: v230 = v226.put(#(Konkani), #(kok-IN))::CL,32743
13020 :: CALL :: call :: Ljava/lang/Object :: v235 = v231.put(#(Kashmiri), #(ks))::CL,32743
13028 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.put(#(Kirghiz), #(ky-KG))::CL,32743
13036 :: CALL :: call :: Ljava/lang/Object :: v245 = v241.put(#(Lao), #(lo-LA))::CL,32743
13044 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.put(#(Lithuanian), #(lt-LT))::CL,32743
13052 :: CALL :: call :: Ljava/lang/Object :: v255 = v251.put(#(Latvian), #(lv-LV))::CL,32743
13060 :: CALL :: call :: Ljava/lang/Object :: v260 = v256.put(#(Maori), #(mi-NZ))::CL,32743
13068 :: CALL :: call :: Ljava/lang/Object :: v265 = v261.put(#(Macedonian), #(mk-MK))::CL,32743
13076 :: CALL :: call :: Ljava/lang/Object :: v270 = v266.put(#(Malayalam), #(ml-IN))::CL,32743
13084 :: CALL :: call :: Ljava/lang/Object :: v275 = v271.put(#(Mongolian), #(mn-MN))::CL,32743
13092 :: CALL :: call :: Ljava/lang/Object :: v280 = v276.put(#(Manipuri), #(mni-IN))::CL,32743
13100 :: CALL :: call :: Ljava/lang/Object :: v285 = v281.put(#(Marathi), #(mr-IN))::CL,32743
13108 :: CALL :: call :: Ljava/lang/Object :: v290 = v286.put(#(Malay), #(ms-MY))::CL,32743
13116 :: CALL :: call :: Ljava/lang/Object :: v295 = v291.put(#(Maltese), #(mt-MT))::CL,32743
13124 :: CALL :: call :: Ljava/lang/Object :: v300 = v296.put(#(Burmese), #(my-MM))::CL,32743
13132 :: CALL :: call :: Ljava/lang/Object :: v305 = v301.put(#(Danish_Norwegian), #(nb-NO))::CL,32743
13140 :: CALL :: call :: Ljava/lang/Object :: v310 = v306.put(#(Nepali), #(ne-NP))::CL,32743
13148 :: CALL :: call :: Ljava/lang/Object :: v315 = v311.put(#(Dutch), #(nl-NL))::CL,32743
13156 :: CALL :: call :: Ljava/lang/Object :: v320 = v316.put(#(Norwegian), #(nn-NO))::CL,32743
13164 :: CALL :: call :: Ljava/lang/Object :: v325 = v321.put(#(Oriya), #(or-IN))::CL,32743
13172 :: CALL :: call :: Ljava/lang/Object :: v330 = v326.put(#(Punjabi), #(pa-IN))::CL,32743
13180 :: CALL :: call :: Ljava/lang/Object :: v335 = v331.put(#(Polish), #(pl-PL))::CL,32743
13188 :: CALL :: call :: Ljava/lang/Object :: v340 = v336.put(#(Pashto), #(ps-AF))::CL,32743
13196 :: CALL :: call :: Ljava/lang/Object :: v345 = v341.put(#(Portuguese), #(pt-PT))::CL,32743
13204 :: CALL :: call :: Ljava/lang/Object :: v350 = v346.put(#(Romanian), #(ro-RO))::CL,32743
13212 :: CALL :: call :: Ljava/lang/Object :: v355 = v351.put(#(Russian), #(ru-RU))::CL,32743
13220 :: CALL :: call :: Ljava/lang/Object :: v360 = v356.put(#(Sanskrit), #(sa-IN))::CL,32743
13228 :: CALL :: call :: Ljava/lang/Object :: v365 = v361.put(#(Sindhi), #(sd-IN))::CL,32743
13236 :: CALL :: call :: Ljava/lang/Object :: v370 = v366.put(#(Slovak), #(sk-SK))::CL,32743
13244 :: CALL :: call :: Ljava/lang/Object :: v375 = v371.put(#(Slovenian), #(sl-SI))::CL,32743
13252 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.put(#(Somali), #(so-SO))::CL,32743
13260 :: CALL :: call :: Ljava/lang/Object :: v385 = v381.put(#(Albanian), #(sq-AL))::CL,32743
13268 :: CALL :: call :: Ljava/lang/Object :: v390 = v386.put(#(Serbian_Cyrillic), #(sr-YU))::CL,32743
13276 :: CALL :: call :: Ljava/lang/Object :: v395 = v391.put(#(Serbian_Latin), #(sh-BA))::CL,32743
13284 :: CALL :: call :: Ljava/lang/Object :: v400 = v396.put(#(Swedish), #(sv-SE))::CL,32743
13292 :: CALL :: call :: Ljava/lang/Object :: v405 = v401.put(#(Swahili), #(sw-KE))::CL,32743
13300 :: CALL :: call :: Ljava/lang/Object :: v410 = v406.put(#(Tamil), #(ta-IN))::CL,32743
13308 :: CALL :: call :: Ljava/lang/Object :: v415 = v411.put(#(Telugu), #(te-IN))::CL,32743
13316 :: CALL :: call :: Ljava/lang/Object :: v420 = v416.put(#(Tajik), #(tg-TJ))::CL,32743
13324 :: CALL :: call :: Ljava/lang/Object :: v425 = v421.put(#(Thai), #(th-TH))::CL,32743
13332 :: CALL :: call :: Ljava/lang/Object :: v430 = v426.put(#(Turkmen), #(tk-TM))::CL,32743
13340 :: CALL :: call :: Ljava/lang/Object :: v435 = v431.put(#(Tswana), #(tn-BW))::CL,32743
13348 :: CALL :: call :: Ljava/lang/Object :: v440 = v436.put(#(Turkish), #(tr-TR))::CL,32743
13356 :: CALL :: call :: Ljava/lang/Object :: v445 = v441.put(#(Tatar), #(tt-RU))::CL,32743
13364 :: CALL :: call :: Ljava/lang/Object :: v450 = v446.put(#(Ukrainian), #(uk-UA))::CL,32743
13372 :: CALL :: call :: Ljava/lang/Object :: v455 = v451.put(#(Urdu), #(ur-PK))::CL,32743
13380 :: CALL :: call :: Ljava/lang/Object :: v460 = v456.put(#(Uzbek_Latin), #(uz-UZ))::CL,32743
13388 :: CALL :: call :: Ljava/lang/Object :: v465 = v461.put(#(Venda), #(ven-ZA))::CL,32743
13396 :: CALL :: call :: Ljava/lang/Object :: v470 = v466.put(#(Vietnamese), #(vi-VN))::CL,32743
13404 :: CALL :: call :: Ljava/lang/Object :: v475 = v471.put(#(Yoruba), #(yo-NG))::CL,32743
13412 :: CALL :: call :: Ljava/lang/Object :: v480 = v476.put(#(Chinese), #(zh-CN))::CL,32743
13420 :: CALL :: call :: Ljava/lang/Object :: v485 = v481.put(#(Zulu), #(zu-ZA))::CL,32743
13428 :: CALL :: call :: Lorg/hsqldb/lib/Collection :: v488 = v486.values()::CL,35129
13432 :: CALL :: call :: Lorg/hsqldb/lib/Iterator :: v490 = v488.iterator()::CL,35155
13437 :: CALL :: call :: Ljava/lang/Object :: v495 = v490.next()::JM,13441:CL,35178
13441 :: EXPR :: assign :: Ljava/lang/Object :: v496 = CHECKCAST v495::
13442 :: CALL :: call :: Ljava/lang/String :: v500 = v496.replace(#(45), #(95))::
13448 :: EXPR :: reference :: Ljava/util/Locale :: v501 = java.util.Locale.ENGLISH::
13450 :: CALL :: call :: Ljava/lang/String :: v503 = v500.toUpperCase(v501)::
13457 :: CALL :: call :: Ljava/lang/Object :: v506 = v504.put(v503, v496)::CL,32743
13463 :: CALL :: call :: Z :: v492 = v490.hasNext()::JM,13467:CL,35301
13467 :: PRED :: IF :: Z :: if (v492 != #(0)) goto 1197::CF,13468:CD,13437:CD,13441:CD,13442:CD,13448:CD,13450:CD,13457:CD,13463
13468 :: NORM :: declaration :: Lorg/hsqldb/types/Collation :: v507 = new org.hsqldb.types.Collation::DD,13473
13473 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.defaultCollation = v507::
13475 :: NORM :: declaration :: Lorg/hsqldb/types/Collation :: v510 = new org.hsqldb.types.Collation::DD,13480
13480 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.defaultIgnoreCaseCollation = v510::
13482 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v512 = org.hsqldb.types.Collation.defaultCollation::
13484 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v513 = org.hsqldb.types.Charset.SQL_TEXT::DD,13486
13486 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: v512.charset = v513::
13489 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v514 = org.hsqldb.types.Collation.defaultIgnoreCaseCollation::
13491 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v515 = org.hsqldb.types.Charset.SQL_TEXT::DD,13493
13493 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: v514.charset = v515::
13502 :: CALL :: call :: Ljava/lang/Object :: v520 = v516.put(v517, v518)::CL,32743
13514 :: CALL :: call :: Ljava/lang/Object :: v525 = v521.put(v522, v523)::CL,32743
13848 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.<clinit>()::CD,13851:CD,13857
13851 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v4 = newResultMetaData(#(0))::CL,33930
13857 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v6 = newParameterMetaData(#(0))::CL,35380
13868 :: ENTR :: entry :: null :: org.hsqldb.types.NullType.<clinit>()::JM,40625:JM,40628:JM,40646:JM,40631:JM,40637:JM,40622
13880 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.<clinit>()::CD,13883:CD,13884:CD,13901:CD,13903:CD,13904:CD,13906
13883 :: NORM :: declaration :: [Lorg/hsqldb/types/CharacterType :: v3 = new org.hsqldb.types.CharacterType[]::CF,13884
13884 :: EXPR :: modify :: [Lorg/hsqldb/types/CharacterType :: org.hsqldb.types.CharacterType.charArray = v3::
13887 :: EXPR :: reference :: [Lorg/hsqldb/types/CharacterType :: v7 = org.hsqldb.types.CharacterType.charArray::CF,13889
13889 :: NORM :: declaration :: Lorg/hsqldb/types/CharacterType :: v8 = new org.hsqldb.types.CharacterType::DD,13896
13896 :: EXPR :: modify :: Ljava/lang/Object :: v7[v13] = v8::
13900 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(1)::DD,13906
13901 :: EXPR :: reference :: [Lorg/hsqldb/types/CharacterType :: v5 = org.hsqldb.types.CharacterType.charArray::CF,13903
13903 :: EXPR :: assign :: I :: v6 = v5.length::CF,13904
13904 :: PRED :: IF :: Z :: if (v13 < v6) goto 13::CD,13887:CD,13889:JM,40625:JM,34115:JM,40628:JM,40646:JM,40631:JM,34121:JM,40637:JM,40622:JM,34127:CD,13900:CD,13901:CD,13903:CD,13906
13906 :: EXPR :: assign :: null :: PHI v13 = #(0), v12::DD,13900:DD,13904
13919 :: ENTR :: entry :: null :: org.hsqldb.types.OtherType.<clinit>()::JM,40625:JM,40628:JM,40646:JM,40631:JM,40637:JM,40622
13931 :: ENTR :: entry :: null :: org.hsqldb.types.BooleanType.<clinit>()::JM,40625:JM,40628:JM,40646:JM,40631:JM,40637:JM,40622
13943 :: ENTR :: entry :: null :: org.hsqldb.types.NumberType.<clinit>()::JM,34272:JM,40625:JM,40628:JM,40646:JM,34247:JM,40631:JM,40637:JM,40622:CD,13955:CD,13961:CD,13965:CD,13967:CD,13971:CD,13973:CD,13979:CD,13985:CD,13987:CD,13993:CD,13995
13955 :: CALL :: call :: Ljava/math/BigDecimal :: v9 = valueOf(#(1.7976931348623157E308 d))::
13961 :: CALL :: call :: Ljava/math/BigDecimal :: v12 = valueOf(#(9223372036854775807 l))::JM,13965
13965 :: EXPR :: modify :: Ljava/math/BigDecimal :: org.hsqldb.types.NumberType.MAX_LONG = v12::
13967 :: CALL :: call :: Ljava/math/BigDecimal :: v15 = valueOf(#(-9223372036854775808 l))::JM,13971
13971 :: EXPR :: modify :: Ljava/math/BigDecimal :: org.hsqldb.types.NumberType.MIN_LONG = v15::
13973 :: CALL :: call :: Ljava/math/BigDecimal :: v18 = valueOf(#(2147483647 l))::
13979 :: CALL :: call :: Ljava/math/BigDecimal :: v21 = valueOf(#(-2147483648 l))::
13985 :: EXPR :: reference :: Ljava/math/BigDecimal :: v22 = org.hsqldb.types.NumberType.MIN_LONG::
13987 :: CALL :: call :: Ljava/math/BigInteger :: v24 = v22.toBigInteger()::
13993 :: EXPR :: reference :: Ljava/math/BigDecimal :: v25 = org.hsqldb.types.NumberType.MAX_LONG::
13995 :: CALL :: call :: Ljava/math/BigInteger :: v27 = v25.toBigInteger()::
14021 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.<clinit>()::CD,14024:JM,35525:CD,14039
14024 :: CALL :: call :: J :: v4 = getDateSeconds(#(1-01-01))::CL,35479
14039 :: CALL :: call :: J :: v10 = getDateSeconds(#(10000-01-01))::CL,35479
14053 :: ENTR :: entry :: null :: org.hsqldb.types.DTIType.<clinit>()::CD,14056:CD,14083:CD,14110:CD,14133:CD,14188:CD,14227:CD,14270:CD,14297:CD,14298:CD,14311:CD,14320:CD,14341:CD,14358:CD,14371:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,14390:CD,14398:CD,14406:CD,14414:CD,14422:CD,14430
14056 :: NORM :: declaration :: [B :: v3 = new []::
14057 :: EXPR :: modify :: B :: v3[#(0)] = #(45)::
14061 :: EXPR :: modify :: B :: v3[#(1)] = #(45)::
14065 :: EXPR :: modify :: B :: v3[#(2)] = #(32)::
14069 :: EXPR :: modify :: B :: v3[#(3)] = #(58)::
14073 :: EXPR :: modify :: B :: v3[#(4)] = #(58)::
14077 :: EXPR :: modify :: B :: v3[#(5)] = #(46)::
14083 :: NORM :: declaration :: [I :: v15 = new []::
14084 :: EXPR :: modify :: I :: v15[#(0)] = #(12)::
14088 :: EXPR :: modify :: I :: v15[#(1)] = #(1)::
14092 :: EXPR :: modify :: I :: v15[#(2)] = #(86400)::
14096 :: EXPR :: modify :: I :: v15[#(3)] = #(3600)::
14100 :: EXPR :: modify :: I :: v15[#(4)] = #(60)::
14104 :: EXPR :: modify :: I :: v15[#(5)] = #(1)::
14110 :: NORM :: declaration :: [I :: v20 = new []::
14111 :: EXPR :: modify :: I :: v20[#(1)] = #(12)::
14115 :: EXPR :: modify :: I :: v20[#(3)] = #(24)::
14119 :: EXPR :: modify :: I :: v20[#(4)] = #(60)::
14123 :: EXPR :: modify :: I :: v20[#(5)] = #(60)::
14127 :: EXPR :: modify :: I :: v20[#(6)] = #(1000000000)::
14133 :: NORM :: declaration :: [J :: v24 = new []::
14134 :: EXPR :: modify :: J :: v24[#(0)] = #(1 l)::
14138 :: EXPR :: modify :: J :: v24[#(1)] = #(10 l)::
14142 :: EXPR :: modify :: J :: v24[#(2)] = #(100 l)::
14146 :: EXPR :: modify :: J :: v24[#(3)] = #(1000 l)::
14150 :: EXPR :: modify :: J :: v24[#(4)] = #(10000 l)::
14154 :: EXPR :: modify :: J :: v24[#(5)] = #(100000 l)::
14158 :: EXPR :: modify :: J :: v24[#(6)] = #(1000000 l)::
14162 :: EXPR :: modify :: J :: v24[#(7)] = #(10000000 l)::
14166 :: EXPR :: modify :: J :: v24[#(8)] = #(100000000 l)::
14170 :: EXPR :: modify :: J :: v24[#(9)] = #(1000000000 l)::
14174 :: EXPR :: modify :: J :: v24[#(10)] = #(10000000000 l)::
14178 :: EXPR :: modify :: J :: v24[#(11)] = #(100000000000 l)::
14182 :: EXPR :: modify :: J :: v24[#(12)] = #(1000000000000 l)::
14188 :: NORM :: declaration :: [I :: v42 = new []::
14189 :: EXPR :: modify :: I :: v42[#(0)] = #(100000000)::
14193 :: EXPR :: modify :: I :: v42[#(1)] = #(10000000)::
14197 :: EXPR :: modify :: I :: v42[#(2)] = #(1000000)::
14201 :: EXPR :: modify :: I :: v42[#(3)] = #(100000)::
14205 :: EXPR :: modify :: I :: v42[#(4)] = #(10000)::
14209 :: EXPR :: modify :: I :: v42[#(5)] = #(1000)::
14213 :: EXPR :: modify :: I :: v42[#(6)] = #(100)::
14217 :: EXPR :: modify :: I :: v42[#(7)] = #(10)::
14221 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
14227 :: NORM :: declaration :: [I :: v50 = new []::
14228 :: EXPR :: modify :: I :: v50[#(0)] = #(1000000000)::
14232 :: EXPR :: modify :: I :: v50[#(1)] = #(100000000)::
14236 :: EXPR :: modify :: I :: v50[#(2)] = #(10000000)::
14240 :: EXPR :: modify :: I :: v50[#(3)] = #(1000000)::
14244 :: EXPR :: modify :: I :: v50[#(4)] = #(100000)::
14248 :: EXPR :: modify :: I :: v50[#(5)] = #(10000)::
14252 :: EXPR :: modify :: I :: v50[#(6)] = #(1000)::
14256 :: EXPR :: modify :: I :: v50[#(7)] = #(100)::
14260 :: EXPR :: modify :: I :: v50[#(8)] = #(10)::
14264 :: EXPR :: modify :: I :: v50[#(9)] = #(1)::
14270 :: NORM :: declaration :: [I :: v51 = new []::
14271 :: EXPR :: modify :: I :: v51[#(0)] = #(101)::
14275 :: EXPR :: modify :: I :: v51[#(1)] = #(102)::
14279 :: EXPR :: modify :: I :: v51[#(2)] = #(103)::
14283 :: EXPR :: modify :: I :: v51[#(3)] = #(104)::
14287 :: EXPR :: modify :: I :: v51[#(4)] = #(105)::
14291 :: EXPR :: modify :: I :: v51[#(5)] = #(106)::
14297 :: NORM :: declaration :: [[I :: v58 = new [][]::CF,14298
14298 :: NORM :: declaration :: [I :: v59 = new []::DD,14307
14299 :: EXPR :: modify :: I :: v59[#(0)] = #(101)::
14303 :: EXPR :: modify :: I :: v59[#(1)] = #(107)::
14307 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
14311 :: NORM :: declaration :: [I :: v61 = new []::DD,14316
14312 :: EXPR :: modify :: I :: v61[#(1)] = #(102)::
14316 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v61::
14320 :: NORM :: declaration :: [I :: v62 = new []::DD,14337
14321 :: EXPR :: modify :: I :: v62[#(2)] = #(103)::
14325 :: EXPR :: modify :: I :: v62[#(3)] = #(108)::
14329 :: EXPR :: modify :: I :: v62[#(4)] = #(109)::
14333 :: EXPR :: modify :: I :: v62[#(5)] = #(110)::
14337 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v62::
14341 :: NORM :: declaration :: [I :: v66 = new []::DD,14354
14342 :: EXPR :: modify :: I :: v66[#(3)] = #(104)::
14346 :: EXPR :: modify :: I :: v66[#(4)] = #(111)::
14350 :: EXPR :: modify :: I :: v66[#(5)] = #(112)::
14354 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v66::
14358 :: NORM :: declaration :: [I :: v69 = new []::DD,14367
14359 :: EXPR :: modify :: I :: v69[#(4)] = #(105)::
14363 :: EXPR :: modify :: I :: v69[#(5)] = #(113)::
14367 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v69::
14371 :: NORM :: declaration :: [I :: v71 = new []::DD,14376
14372 :: EXPR :: modify :: I :: v71[#(5)] = #(106)::
14376 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v71::
14390 :: CALL :: call :: Z :: v76 = v74.put(#(101), #(0))::CL,35553
14398 :: CALL :: call :: Z :: v79 = v77.put(#(102), #(1))::CL,35553
14406 :: CALL :: call :: Z :: v82 = v80.put(#(103), #(2))::CL,35553
14414 :: CALL :: call :: Z :: v85 = v83.put(#(104), #(3))::CL,35553
14422 :: CALL :: call :: Z :: v88 = v86.put(#(105), #(4))::CL,35553
14430 :: CALL :: call :: Z :: v91 = v89.put(#(106), #(5))::CL,35553
14696 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.<clinit>()::CD,14699
14699 :: CALL :: call :: Lorg/hsqldb/types/NumberType :: v6 = getNumberType(#(3), #(40 l), #(9))::CL,35594
14712 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputTextLog.<clinit>()::CD,14715:CD,14722:CD,14729:CD,14736:CD,14743:CD,14750:CD,14758
14715 :: CALL :: call :: [B :: v5 = #(NULL).getBytes(#(ISO-8859-1))::
14722 :: CALL :: call :: [B :: v8 = #(TRUE).getBytes(#(ISO-8859-1))::
14729 :: CALL :: call :: [B :: v11 = #(FALSE).getBytes(#(ISO-8859-1))::
14736 :: CALL :: call :: [B :: v14 = #( AND ).getBytes(#(ISO-8859-1))::
14743 :: CALL :: call :: [B :: v17 = #( IS ).getBytes(#(ISO-8859-1))::
14750 :: CALL :: call :: [B :: v20 = #( ARRAY[).getBytes(#(ISO-8859-1))::
14758 :: CALL :: call :: Ljava/lang/RuntimeException :: v25 = runtimeError(#(201), #(RowOutputTextLog))::CL,33706
20149 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.<clinit>()::CD,20152:JM,35763:JM,35771:CD,20156:CD,20158:CD,20163:CD,20167:CD,20168:CD,20170:CD,20171:CD,20217:CD,20219:CD,20220:CD,20222
20152 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager :: v2 = new org.hsqldb.HsqlNameManager::DD,20156
20156 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager :: org.hsqldb.HsqlNameManager.staticManager = v2::
20158 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager :: v4 = org.hsqldb.HsqlNameManager.staticManager::
20160 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicLong :: v5 = v4.serialNumber::JM,20163
20163 :: CALL :: call :: V :: v5.set(#(-9223372036854775808 l))::JM,20163
20167 :: NORM :: declaration :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v9 = new org.hsqldb.HsqlNameManager$HsqlName[]::CF,20168
20168 :: EXPR :: modify :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.autoColumnNames = v9::
20170 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::CF,20171
20171 :: EXPR :: modify :: [Ljava/lang/String :: org.hsqldb.HsqlNameManager.autoNoNameColumnNames = v10::
20174 :: EXPR :: reference :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v14 = org.hsqldb.HsqlNameManager.autoColumnNames::CF,20176
20176 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v15 = new org.hsqldb.HsqlNameManager$HsqlName::DD,20202
20179 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
20184 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v32 + #(1)::
20185 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
20190 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
20202 :: EXPR :: modify :: Ljava/lang/Object :: v14[v32] = v15::
20206 :: EXPR :: reference :: [Ljava/lang/String :: v28 = org.hsqldb.HsqlNameManager.autoNoNameColumnNames::JM,20212
20208 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v32)::JM,20212
20212 :: EXPR :: modify :: Ljava/lang/Object :: v28[v32] = v30::
20216 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v32 + #(1)::DD,20222
20217 :: EXPR :: reference :: [Lorg/hsqldb/HsqlNameManager$HsqlName :: v12 = org.hsqldb.HsqlNameManager.autoColumnNames::CF,20219
20219 :: EXPR :: assign :: I :: v13 = v12.length::CF,20220
20220 :: PRED :: IF :: Z :: if (v32 < v13) goto 43::CD,20174:CD,20176:CD,20179:CD,20184:CD,20185:CD,20190:JM,51554:JM,44101:JM,51558:JM,44089:JM,51545:JM,44092:JM,51548:JM,44095:CD,20206:CD,20208:CD,20216:CD,20217:CD,20219:CD,20222
20222 :: EXPR :: assign :: null :: PHI v32 = #(0), v31::DD,20184:JM,20212:DD,20216:DD,20220
20258 :: ENTR :: entry :: null :: org.hsqldb.RangeVariable.<clinit>()::
20275 :: ENTR :: entry :: null :: org.hsqldb.Expression.<clinit>()::JM,35847:JM,35832:JM,44153:JM,44156:JM,35837:JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,20303:CD,20310:CD,20317:CD,20324:CD,20331:CD,20338:CD,20345:CD,20352:CD,20359:CD,20366:CD,20373:CD,20380:CD,20387:CD,20394:CD,20401:CD,20414:CD,20427:CD,20434:CD,20449:CD,20458:CD,20471:CD,20478:CD,20491:CD,20498
20303 :: CALL :: call :: Z :: v14 = v11.add(#(71))::CL,33826
20310 :: CALL :: call :: Z :: v18 = v15.add(#(75))::CL,33826
20317 :: CALL :: call :: Z :: v22 = v19.add(#(74))::CL,33826
20324 :: CALL :: call :: Z :: v26 = v23.add(#(73))::CL,33826
20331 :: CALL :: call :: Z :: v30 = v27.add(#(72))::CL,33826
20338 :: CALL :: call :: Z :: v34 = v31.add(#(76))::CL,33826
20345 :: CALL :: call :: Z :: v38 = v35.add(#(77))::CL,33826
20352 :: CALL :: call :: Z :: v42 = v39.add(#(78))::CL,33826
20359 :: CALL :: call :: Z :: v46 = v43.add(#(79))::CL,33826
20366 :: CALL :: call :: Z :: v50 = v47.add(#(80))::CL,33826
20373 :: CALL :: call :: Z :: v54 = v51.add(#(81))::CL,33826
20380 :: CALL :: call :: Z :: v58 = v55.add(#(82))::CL,33826
20387 :: CALL :: call :: Z :: v62 = v59.add(#(94))::CL,33826
20394 :: CALL :: call :: Z :: v66 = v63.add(#(83))::CL,33826
20401 :: CALL :: call :: Z :: v70 = v67.add(#(85))::CL,33826
20414 :: CALL :: call :: Z :: v76 = v73.add(#(2))::CL,33826
20427 :: CALL :: call :: Z :: v82 = v79.add(#(22))::CL,33826
20434 :: CALL :: call :: Z :: v86 = v83.add(#(23))::CL,33826
20449 :: CALL :: call :: Z :: v92 = v89.addAll(v90)::CL,35868
20458 :: CALL :: call :: Z :: v96 = v93.addAll(v94)::CL,35868
20471 :: CALL :: call :: Z :: v102 = v99.add(#(28))::CL,33826
20478 :: CALL :: call :: Z :: v106 = v103.add(#(27))::CL,33826
20491 :: CALL :: call :: Z :: v112 = v109.add(#(14))::CL,33826
20498 :: CALL :: call :: Z :: v116 = v113.add(#(12))::CL,33826
20670 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.HsqlName.<clinit>()::CD,20676
20676 :: NORM :: declaration :: [Ljava/lang/String :: v5 = new java.lang.String[]::
20677 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(0)] = #(SYS_IDX_)::
20681 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(1)] = #(SYS_PK_)::
20685 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(2)] = #(SYS_REF_)::
20689 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(3)] = #(SYS_CT_)::
20693 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(4)] = #(SYS_FK_)::
20719 :: ENTR :: entry :: null :: org.hsqldb.types.BinaryData.<clinit>()::JM,35937:JM,35934:CD,20732:JM,35974:JM,35975:JM,35976:JM,35965:JM,35981
20732 :: NORM :: declaration :: [B :: v8 = new []::
20733 :: EXPR :: modify :: B :: v8[#(0)] = #(-128)::
20775 :: ENTR :: entry :: null :: org.hsqldb.Tokens.<clinit>()::JM,39266:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,20787:CD,20795:CD,20803:CD,20811:CD,20819:CD,20827:CD,20835:CD,20843:CD,20851:CD,20859:CD,20867:CD,20875:CD,20883:CD,20891:CD,20899:CD,20907:CD,20915:CD,20923:CD,20931:CD,20939:CD,20947:CD,20955:CD,20963:CD,20971:CD,20979:CD,20987:CD,20995:CD,21003:CD,21011:CD,21019:CD,21027:CD,21035:CD,21043:CD,21051:CD,21059:CD,21067:CD,21075:CD,21083:CD,21091:CD,21099:CD,21107:CD,21115:CD,21123:CD,21131:CD,21139:CD,21147:CD,21155:CD,21163:CD,21171:CD,21179:CD,21187:CD,21195:CD,21203:CD,21211:CD,21219:CD,21227:CD,21235:CD,21243:CD,21251:CD,21259:CD,21267:CD,21275:CD,21283:CD,21291:CD,21299:CD,21307:CD,21315:CD,21323:CD,21331:CD,21339:CD,21347:CD,21355:CD,21363:CD,21371:CD,21379:CD,21387:CD,21395:CD,21403:CD,21411:CD,21419:CD,21427:CD,21435:CD,21443:CD,21451:CD,21459:CD,21467:CD,21475:CD,21483:CD,21491:CD,21499:CD,21507:CD,21515:CD,21523:CD,21531:CD,21539:CD,21547:CD,21555:CD,21563:CD,21571:CD,21579:CD,21587:CD,21595:CD,21603:CD,21611:CD,21619:CD,21627:CD,21635:CD,21643:CD,21651:CD,21659:CD,21667:CD,21675:CD,21683:CD,21691:CD,21699:CD,21707:CD,21715:CD,21723:CD,21731:CD,21739:CD,21747:CD,21755:CD,21763:CD,21771:CD,21779:CD,21787:CD,21795:CD,21803:CD,21811:CD,21819:CD,21827:CD,21835:CD,21843:CD,21851:CD,21859:CD,21867:CD,21875:CD,21883:CD,21891:CD,21899:CD,21907:CD,21915:CD,21923:CD,21931:CD,21939:CD,21947:CD,21955:CD,21963:CD,21971:CD,21979:CD,21987:CD,21995:CD,22003:CD,22011:CD,22019:CD,22027:CD,22035:CD,22043:CD,22051:CD,22059:CD,22067:CD,22075:CD,22083:CD,22091:CD,22099:CD,22107:CD,22115:CD,22123:CD,22131:CD,22139:CD,22147:CD,22155:CD,22163:CD,22171:CD,22179:CD,22187:CD,22195:CD,22203:CD,22211:CD,22219:CD,22227:CD,22235:CD,22243:CD,22251:CD,22259:CD,22267:CD,22275:CD,22283:CD,22291:CD,22299:CD,22307:CD,22315:CD,22323:CD,22331:CD,22339:CD,22347:CD,22355:CD,22363:CD,22371:CD,22379:CD,22387:CD,22395:CD,22403:CD,22411:CD,22419:CD,22427:CD,22435:CD,22443:CD,22451:CD,22459:CD,22467:CD,22475:CD,22483:CD,22491:CD,22499:CD,22507:CD,22515:CD,22523:CD,22531:CD,22539:CD,22547:CD,22555:CD,22563:CD,22571:CD,22579:CD,22587:CD,22595:CD,22603:CD,22611:CD,22619:CD,22627:CD,22635:CD,22643:CD,22651:CD,22659:CD,22667:CD,22675:CD,22683:CD,22691:CD,22699:CD,22707:CD,22715:CD,22723:CD,22731:CD,22739:CD,22747:CD,22755:CD,22763:CD,22771:CD,22779:CD,22787:CD,22795:CD,22803:CD,22811:CD,22819:CD,22827:CD,22835:CD,22843:CD,22851:CD,22859:CD,22867:CD,22875:CD,22883:CD,22891:CD,22899:CD,22907:CD,22915:CD,22923:CD,22931:CD,22939:CD,22947:CD,22955:CD,22963:CD,22971:CD,22979:CD,22987:CD,22995:CD,23003:CD,23011:CD,23019:CD,23027:CD,23035:CD,23043:CD,23051:CD,23059:CD,23067:CD,23075:CD,23083:CD,23091:CD,23099:CD,23107:CD,23115:CD,23123:CD,23131:CD,23139:CD,23147:CD,23155:CD,23163:CD,23171:CD,23179:CD,23187:CD,23195:CD,23203:CD,23211:CD,23219:CD,23227:CD,23235:CD,23243:CD,23251:CD,23259:CD,23267:CD,23275:CD,23283:CD,23291:CD,23299:CD,23307:CD,23315:CD,23323:CD,23331:CD,23339:CD,23347:CD,23355:CD,23363:CD,23371:CD,23379:CD,23387:CD,23395:CD,23403:CD,23411:CD,23419:CD,23427:CD,23435:CD,23443:CD,23451:CD,23459:CD,23467:CD,23482:CD,23490:CD,23498:CD,23506:CD,23514:CD,23522:CD,23530:CD,23538:CD,23546:CD,23554:CD,23562:CD,23570:CD,23578:CD,23586:CD,23594:CD,23602:CD,23610:CD,23618:CD,23626:CD,23634:CD,23642:CD,23650:CD,23658:CD,23666:CD,23674:CD,23682:CD,23690:CD,23698:CD,23706:CD,23714:CD,23722:CD,23730:CD,23738:CD,23746:CD,23754:CD,23762:CD,23770:CD,23778:CD,23786:CD,23794:CD,23802:CD,23810:CD,23818:CD,23826:CD,23834:CD,23842:CD,23850:CD,23858:CD,23866:CD,23874:CD,23882:CD,23890:CD,23898:CD,23906:CD,23914:CD,23922:CD,23930:CD,23938:CD,23946:CD,23954:CD,23962:CD,23970:CD,23978:CD,23986:CD,23994:CD,24002:CD,24010:CD,24018:CD,24026:CD,24034:CD,24042:CD,24050:CD,24058:CD,24066:CD,24074:CD,24082:CD,24090:CD,24098:CD,24106:CD,24114:CD,24122:CD,24130:CD,24138:CD,24146:CD,24154:CD,24162:CD,24170:CD,24178:CD,24186:CD,24194:CD,24202:CD,24210:CD,24218:CD,24226:CD,24234:CD,24242:CD,24250:CD,24258:CD,24266:CD,24274:CD,24282:CD,24290:CD,24298:CD,24306:CD,24314:CD,24322:CD,24330:CD,24338:CD,24346:CD,24354:CD,24362:CD,24370:CD,24378:CD,24386:CD,24394:CD,24402:CD,24410:CD,24418:CD,24426:CD,24434:CD,24442:CD,24450:CD,24458:CD,24466:CD,24474:CD,24482:CD,24490:CD,24498:CD,24506:CD,24514:CD,24522:CD,24530:CD,24538:CD,24546:CD,24554:CD,24562:CD,24570:CD,24578:CD,24586:CD,24594:CD,24602:CD,24610:CD,24618:CD,24626:CD,24634:CD,24642:CD,24650:CD,24658:CD,24666:CD,24674:CD,24682:CD,24690:CD,24698:CD,24706:CD,24714:CD,24722:CD,24730:CD,24738:CD,24746:CD,24754:CD,24762:CD,24770:CD,24778:CD,24786:CD,24794:CD,24802:CD,24810:CD,24818:CD,24826:CD,24834:CD,24842:CD,24850:CD,24858:CD,24866:CD,24874:CD,24882:CD,24890:CD,24898:CD,24906:CD,24914:CD,24922:CD,24930:CD,24938:CD,24946:CD,24954:CD,24962:CD,24970:CD,24978:CD,24986:CD,24994:CD,25002:CD,25010:CD,25018:CD,25026:CD,25034:CD,25042:CD,25050:CD,25058:CD,25066:CD,25074:CD,25082:CD,25090:CD,25098:CD,25106:CD,25114:CD,25122:CD,25130:CD,25138:CD,25146:CD,25154:CD,25162:CD,25170:CD,25178:CD,25186:CD,25194:CD,25202:CD,25210:CD,25218:CD,25226:CD,25234:CD,25242:CD,25250:CD,25258:CD,25266:CD,25274:CD,25282:CD,25290:CD,25298:CD,25306:CD,25314:CD,25322:CD,25330:CD,25338:CD,25346:CD,25354:CD,25362:CD,25370:CD,25378:CD,25386:CD,25394:CD,25402:CD,25410:CD,25418:CD,25426:CD,25434:CD,25442:CD,25450:CD,25458:CD,25466:CD,25474:CD,25482:CD,25490:CD,25498:CD,25506:CD,25514:CD,25522:CD,25530:CD,25538:CD,25546:CD,25554:CD,25562:CD,25570:CD,25578:CD,25586:CD,25594:CD,25602:CD,25610:CD,25618:CD,25626:CD,25634:CD,25642:CD,25650:CD,25658:CD,25666:CD,25674:CD,25682:CD,25690:CD,25698:CD,25706:CD,25714:CD,25722:CD,25730:CD,25738:CD,25746:CD,25754:CD,25762:CD,25770:CD,25778:CD,25786:CD,25794:CD,25802:CD,25810:CD,25818:CD,25826:CD,25834:CD,25842:CD,25850:CD,25858:CD,25866:CD,25874:CD,25882:CD,25890:CD,25898:CD,25906:CD,25914:CD,25922:CD,25930:CD,25938:CD,25946:CD,25954:CD,25962:CD,25970:CD,25978:CD,25986:CD,25994:CD,26002:CD,26010:CD,26018:CD,26026:CD,26034:CD,26042:CD,26050:CD,26058:CD,26066:CD,26074:CD,26082:CD,26090:CD,26098:CD,26106:CD,26114:CD,26122:CD,26130:CD,26138:CD,26146:CD,26154:CD,26162:CD,26170:CD,26178:CD,26186:CD,26194:CD,26202:CD,26210:CD,26218:CD,26226:CD,26234:CD,26242:CD,26250:CD,26258:CD,26266:CD,26274:CD,26282:CD,26290:CD,26298:CD,26306:CD,26314:CD,26322:CD,26330:CD,26338:CD,26346:CD,26354:CD,26362:CD,26370:CD,26378:CD,26386:CD,26394:CD,26402:CD,26410:CD,26418:CD,26426:CD,26434:CD,26442:CD,26450:CD,26458:CD,26466:CD,26474:CD,26482:CD,26490:CD,26498:CD,26506:CD,26514:CD,26522:CD,26530:CD,26538:CD,26546:CD,26554:CD,26562:CD,26570:CD,26578:CD,26586:CD,26594:CD,26602:CD,26610:CD,26618:CD,26626:CD,26634:CD,26642:CD,26650:CD,26658:CD,26666:CD,26674:CD,26682:CD,26690:CD,26698:CD,26706:CD,26714:CD,26722:CD,26730:CD,26738:CD,26746:CD,26754:CD,26762:CD,26770:CD,26778:CD,26791:CD,27065:CD,27066:CD,27067:CD,27094:CD,27130:CD,27138:CD,27146:CD,27154:CD,27162:CD,27170:CD,27178:CD,27186:CD,27194:CD,27202:CD,27210:CD,27217
20787 :: CALL :: call :: Z :: v9 = v5.put(#(ABS), #(1))::CL,33387
20795 :: CALL :: call :: Z :: v14 = v10.put(#(ALL), #(2))::CL,33387
20803 :: CALL :: call :: Z :: v19 = v15.put(#(ALLOCATE), #(3))::CL,33387
20811 :: CALL :: call :: Z :: v24 = v20.put(#(ALTER), #(4))::CL,33387
20819 :: CALL :: call :: Z :: v29 = v25.put(#(AND), #(5))::CL,33387
20827 :: CALL :: call :: Z :: v34 = v30.put(#(ANY), #(6))::CL,33387
20835 :: CALL :: call :: Z :: v39 = v35.put(#(ARE), #(7))::CL,33387
20843 :: CALL :: call :: Z :: v44 = v40.put(#(ARRAY), #(8))::CL,33387
20851 :: CALL :: call :: Z :: v49 = v45.put(#(ARRAY_AGG), #(9))::CL,33387
20859 :: CALL :: call :: Z :: v54 = v50.put(#(ARRAY_MAX_CARDINALITY), #(10))::CL,33387
20867 :: CALL :: call :: Z :: v59 = v55.put(#(AS), #(11))::CL,33387
20875 :: CALL :: call :: Z :: v64 = v60.put(#(ASENSITIVE), #(12))::CL,33387
20883 :: CALL :: call :: Z :: v69 = v65.put(#(ASYMMETRIC), #(13))::CL,33387
20891 :: CALL :: call :: Z :: v74 = v70.put(#(AT), #(14))::CL,33387
20899 :: CALL :: call :: Z :: v79 = v75.put(#(ATOMIC), #(15))::CL,33387
20907 :: CALL :: call :: Z :: v84 = v80.put(#(AUTHORIZATION), #(16))::CL,33387
20915 :: CALL :: call :: Z :: v89 = v85.put(#(AVG), #(17))::CL,33387
20923 :: CALL :: call :: Z :: v94 = v90.put(#(BEGIN), #(18))::CL,33387
20931 :: CALL :: call :: Z :: v99 = v95.put(#(BEGIN_FRAME), #(19))::CL,33387
20939 :: CALL :: call :: Z :: v104 = v100.put(#(BEGIN_PARTITION), #(20))::CL,33387
20947 :: CALL :: call :: Z :: v109 = v105.put(#(BETWEEN), #(21))::CL,33387
20955 :: CALL :: call :: Z :: v114 = v110.put(#(BIGINT), #(22))::CL,33387
20963 :: CALL :: call :: Z :: v119 = v115.put(#(BINARY), #(23))::CL,33387
20971 :: CALL :: call :: Z :: v124 = v120.put(#(BIT_LENGTH), #(709))::CL,33387
20979 :: CALL :: call :: Z :: v129 = v125.put(#(BLOB), #(24))::CL,33387
20987 :: CALL :: call :: Z :: v134 = v130.put(#(BOOLEAN), #(25))::CL,33387
20995 :: CALL :: call :: Z :: v139 = v135.put(#(BOTH), #(26))::CL,33387
21003 :: CALL :: call :: Z :: v144 = v140.put(#(BY), #(27))::CL,33387
21011 :: CALL :: call :: Z :: v149 = v145.put(#(CALL), #(28))::CL,33387
21019 :: CALL :: call :: Z :: v154 = v150.put(#(CALLED), #(29))::CL,33387
21027 :: CALL :: call :: Z :: v159 = v155.put(#(CARDINALITY), #(30))::CL,33387
21035 :: CALL :: call :: Z :: v164 = v160.put(#(CASCADED), #(31))::CL,33387
21043 :: CALL :: call :: Z :: v169 = v165.put(#(CASE), #(32))::CL,33387
21051 :: CALL :: call :: Z :: v174 = v170.put(#(CAST), #(33))::CL,33387
21059 :: CALL :: call :: Z :: v179 = v175.put(#(CEIL), #(34))::CL,33387
21067 :: CALL :: call :: Z :: v184 = v180.put(#(CEILING), #(35))::CL,33387
21075 :: CALL :: call :: Z :: v189 = v185.put(#(CHAR), #(36))::CL,33387
21083 :: CALL :: call :: Z :: v194 = v190.put(#(CHAR_LENGTH), #(37))::CL,33387
21091 :: CALL :: call :: Z :: v199 = v195.put(#(CHARACTER), #(38))::CL,33387
21099 :: CALL :: call :: Z :: v204 = v200.put(#(CHARACTER_LENGTH), #(39))::CL,33387
21107 :: CALL :: call :: Z :: v209 = v205.put(#(CHECK), #(40))::CL,33387
21115 :: CALL :: call :: Z :: v214 = v210.put(#(CLOB), #(41))::CL,33387
21123 :: CALL :: call :: Z :: v219 = v215.put(#(CLOSE), #(42))::CL,33387
21131 :: CALL :: call :: Z :: v224 = v220.put(#(COALESCE), #(43))::CL,33387
21139 :: CALL :: call :: Z :: v229 = v225.put(#(COLLATE), #(44))::CL,33387
21147 :: CALL :: call :: Z :: v234 = v230.put(#(COLLECT), #(45))::CL,33387
21155 :: CALL :: call :: Z :: v239 = v235.put(#(COLUMN), #(46))::CL,33387
21163 :: CALL :: call :: Z :: v244 = v240.put(#(COMMIT), #(47))::CL,33387
21171 :: CALL :: call :: Z :: v249 = v245.put(#(COMPARABLE), #(48))::CL,33387
21179 :: CALL :: call :: Z :: v254 = v250.put(#(CONDIITON), #(49))::CL,33387
21187 :: CALL :: call :: Z :: v259 = v255.put(#(CONNECT), #(50))::CL,33387
21195 :: CALL :: call :: Z :: v264 = v260.put(#(CONSTRAINT), #(51))::CL,33387
21203 :: CALL :: call :: Z :: v269 = v265.put(#(CONTAINS), #(52))::CL,33387
21211 :: CALL :: call :: Z :: v274 = v270.put(#(CONVERT), #(53))::CL,33387
21219 :: CALL :: call :: Z :: v279 = v275.put(#(CORR), #(54))::CL,33387
21227 :: CALL :: call :: Z :: v284 = v280.put(#(CORRESPONDING), #(55))::CL,33387
21235 :: CALL :: call :: Z :: v289 = v285.put(#(COUNT), #(56))::CL,33387
21243 :: CALL :: call :: Z :: v294 = v290.put(#(COVAR_POP), #(57))::CL,33387
21251 :: CALL :: call :: Z :: v299 = v295.put(#(COVAR_SAMP), #(58))::CL,33387
21259 :: CALL :: call :: Z :: v304 = v300.put(#(CREATE), #(59))::CL,33387
21267 :: CALL :: call :: Z :: v309 = v305.put(#(CROSS), #(60))::CL,33387
21275 :: CALL :: call :: Z :: v314 = v310.put(#(CUBE), #(61))::CL,33387
21283 :: CALL :: call :: Z :: v319 = v315.put(#(CUME_DIST), #(62))::CL,33387
21291 :: CALL :: call :: Z :: v324 = v320.put(#(CURRENT), #(63))::CL,33387
21299 :: CALL :: call :: Z :: v329 = v325.put(#(CURRENT_CATALOG), #(64))::CL,33387
21307 :: CALL :: call :: Z :: v334 = v330.put(#(CURRENT_DATE), #(65))::CL,33387
21315 :: CALL :: call :: Z :: v339 = v335.put(#(CURRENT_DEFAULT_TRANS...), #(66))::CL,33387
21323 :: CALL :: call :: Z :: v344 = v340.put(#(CURRENT_PATH), #(67))::CL,33387
21331 :: CALL :: call :: Z :: v349 = v345.put(#(CURRENT_ROLE), #(68))::CL,33387
21339 :: CALL :: call :: Z :: v354 = v350.put(#(CURRENT_SCHEMA), #(70))::CL,33387
21347 :: CALL :: call :: Z :: v359 = v355.put(#(CURRENT_TIME), #(71))::CL,33387
21355 :: CALL :: call :: Z :: v364 = v360.put(#(CURRENT_TIMESTAMP), #(72))::CL,33387
21363 :: CALL :: call :: Z :: v369 = v365.put(#(DO), #(91))::CL,33387
21371 :: CALL :: call :: Z :: v374 = v370.put(#(CURRENT_TRANSFORM_GRO...), #(73))::CL,33387
21379 :: CALL :: call :: Z :: v379 = v375.put(#(CURRENT_USER), #(74))::CL,33387
21387 :: CALL :: call :: Z :: v384 = v380.put(#(CURSOR), #(75))::CL,33387
21395 :: CALL :: call :: Z :: v389 = v385.put(#(CYCLE), #(76))::CL,33387
21403 :: CALL :: call :: Z :: v394 = v390.put(#(DATE), #(77))::CL,33387
21411 :: CALL :: call :: Z :: v399 = v395.put(#(DAY), #(78))::CL,33387
21419 :: CALL :: call :: Z :: v404 = v400.put(#(DEALLOCATE), #(79))::CL,33387
21427 :: CALL :: call :: Z :: v409 = v405.put(#(DEC), #(80))::CL,33387
21435 :: CALL :: call :: Z :: v414 = v410.put(#(DECIMAL), #(81))::CL,33387
21443 :: CALL :: call :: Z :: v419 = v415.put(#(DECLARE), #(82))::CL,33387
21451 :: CALL :: call :: Z :: v424 = v420.put(#(DEFAULT), #(83))::CL,33387
21459 :: CALL :: call :: Z :: v429 = v425.put(#(DELETE), #(84))::CL,33387
21467 :: CALL :: call :: Z :: v434 = v430.put(#(DENSE_RANK), #(85))::CL,33387
21475 :: CALL :: call :: Z :: v439 = v435.put(#(DEREF), #(86))::CL,33387
21483 :: CALL :: call :: Z :: v444 = v440.put(#(DESCRIBE), #(87))::CL,33387
21491 :: CALL :: call :: Z :: v449 = v445.put(#(DETERMINISTIC), #(88))::CL,33387
21499 :: CALL :: call :: Z :: v454 = v450.put(#(DISCONNECT), #(89))::CL,33387
21507 :: CALL :: call :: Z :: v459 = v455.put(#(DISTINCT), #(90))::CL,33387
21515 :: CALL :: call :: Z :: v464 = v460.put(#(DOUBLE), #(92))::CL,33387
21523 :: CALL :: call :: Z :: v469 = v465.put(#(DROP), #(93))::CL,33387
21531 :: CALL :: call :: Z :: v474 = v470.put(#(DYNAMIC), #(94))::CL,33387
21539 :: CALL :: call :: Z :: v479 = v475.put(#(EACH), #(95))::CL,33387
21547 :: CALL :: call :: Z :: v484 = v480.put(#(ELEMENT), #(96))::CL,33387
21555 :: CALL :: call :: Z :: v489 = v485.put(#(ELSE), #(97))::CL,33387
21563 :: CALL :: call :: Z :: v494 = v490.put(#(ELSEIF), #(98))::CL,33387
21571 :: CALL :: call :: Z :: v499 = v495.put(#(END), #(99))::CL,33387
21579 :: CALL :: call :: Z :: v504 = v500.put(#(END_FRAME), #(101))::CL,33387
21587 :: CALL :: call :: Z :: v509 = v505.put(#(END_PARTITION), #(102))::CL,33387
21595 :: CALL :: call :: Z :: v514 = v510.put(#(END_EXEC), #(100))::CL,33387
21603 :: CALL :: call :: Z :: v519 = v515.put(#(EQUALS), #(103))::CL,33387
21611 :: CALL :: call :: Z :: v524 = v520.put(#(ESCAPE), #(104))::CL,33387
21619 :: CALL :: call :: Z :: v529 = v525.put(#(EVERY), #(105))::CL,33387
21627 :: CALL :: call :: Z :: v534 = v530.put(#(EXCEPT), #(106))::CL,33387
21635 :: CALL :: call :: Z :: v539 = v535.put(#(EXEC), #(107))::CL,33387
21643 :: CALL :: call :: Z :: v544 = v540.put(#(EXECUTE), #(108))::CL,33387
21651 :: CALL :: call :: Z :: v549 = v545.put(#(EXISTS), #(109))::CL,33387
21659 :: CALL :: call :: Z :: v554 = v550.put(#(EXIT), #(110))::CL,33387
21667 :: CALL :: call :: Z :: v559 = v555.put(#(EXP), #(111))::CL,33387
21675 :: CALL :: call :: Z :: v564 = v560.put(#(EXTERNAL), #(112))::CL,33387
21683 :: CALL :: call :: Z :: v569 = v565.put(#(EXTRACT), #(113))::CL,33387
21691 :: CALL :: call :: Z :: v574 = v570.put(#(FALSE), #(114))::CL,33387
21699 :: CALL :: call :: Z :: v579 = v575.put(#(FETCH), #(115))::CL,33387
21707 :: CALL :: call :: Z :: v584 = v580.put(#(FILTER), #(116))::CL,33387
21715 :: CALL :: call :: Z :: v589 = v585.put(#(FIRST_VALUE), #(117))::CL,33387
21723 :: CALL :: call :: Z :: v594 = v590.put(#(FLOAT), #(118))::CL,33387
21731 :: CALL :: call :: Z :: v599 = v595.put(#(FLOOR), #(119))::CL,33387
21739 :: CALL :: call :: Z :: v604 = v600.put(#(FOR), #(120))::CL,33387
21747 :: CALL :: call :: Z :: v609 = v605.put(#(FOREIGN), #(121))::CL,33387
21755 :: CALL :: call :: Z :: v614 = v610.put(#(FRAME_ROW), #(122))::CL,33387
21763 :: CALL :: call :: Z :: v619 = v615.put(#(FREE), #(123))::CL,33387
21771 :: CALL :: call :: Z :: v624 = v620.put(#(FROM), #(124))::CL,33387
21779 :: CALL :: call :: Z :: v629 = v625.put(#(FULL), #(125))::CL,33387
21787 :: CALL :: call :: Z :: v634 = v630.put(#(FUNCTION), #(126))::CL,33387
21795 :: CALL :: call :: Z :: v639 = v635.put(#(FUSION), #(127))::CL,33387
21803 :: CALL :: call :: Z :: v644 = v640.put(#(GET), #(128))::CL,33387
21811 :: CALL :: call :: Z :: v649 = v645.put(#(GLOBAL), #(129))::CL,33387
21819 :: CALL :: call :: Z :: v654 = v650.put(#(GRANT), #(130))::CL,33387
21827 :: CALL :: call :: Z :: v659 = v655.put(#(GROUP), #(131))::CL,33387
21835 :: CALL :: call :: Z :: v664 = v660.put(#(GROUPING), #(133))::CL,33387
21843 :: CALL :: call :: Z :: v669 = v665.put(#(HANDLER), #(134))::CL,33387
21851 :: CALL :: call :: Z :: v674 = v670.put(#(HAVING), #(135))::CL,33387
21859 :: CALL :: call :: Z :: v679 = v675.put(#(HOLD), #(136))::CL,33387
21867 :: CALL :: call :: Z :: v684 = v680.put(#(HOUR), #(137))::CL,33387
21875 :: CALL :: call :: Z :: v689 = v685.put(#(IDENTITY), #(138))::CL,33387
21883 :: CALL :: call :: Z :: v694 = v690.put(#(IF), #(434))::CL,33387
21891 :: CALL :: call :: Z :: v699 = v695.put(#(IMPORT), #(139))::CL,33387
21899 :: CALL :: call :: Z :: v704 = v700.put(#(IN), #(140))::CL,33387
21907 :: CALL :: call :: Z :: v709 = v705.put(#(INDICATOR), #(141))::CL,33387
21915 :: CALL :: call :: Z :: v714 = v710.put(#(INNER), #(142))::CL,33387
21923 :: CALL :: call :: Z :: v719 = v715.put(#(INOUT), #(143))::CL,33387
21931 :: CALL :: call :: Z :: v724 = v720.put(#(INSENSITIVE), #(144))::CL,33387
21939 :: CALL :: call :: Z :: v729 = v725.put(#(INSERT), #(145))::CL,33387
21947 :: CALL :: call :: Z :: v734 = v730.put(#(INT), #(146))::CL,33387
21955 :: CALL :: call :: Z :: v739 = v735.put(#(INTEGER), #(147))::CL,33387
21963 :: CALL :: call :: Z :: v744 = v740.put(#(INTERSECT), #(148))::CL,33387
21971 :: CALL :: call :: Z :: v749 = v745.put(#(INTERSECTION), #(149))::CL,33387
21979 :: CALL :: call :: Z :: v754 = v750.put(#(INTERVAL), #(150))::CL,33387
21987 :: CALL :: call :: Z :: v759 = v755.put(#(INTO), #(151))::CL,33387
21995 :: CALL :: call :: Z :: v764 = v760.put(#(IS), #(152))::CL,33387
22003 :: CALL :: call :: Z :: v769 = v765.put(#(ITERATE), #(153))::CL,33387
22011 :: CALL :: call :: Z :: v774 = v770.put(#(JOIN), #(154))::CL,33387
22019 :: CALL :: call :: Z :: v779 = v775.put(#(LAG), #(155))::CL,33387
22027 :: CALL :: call :: Z :: v784 = v780.put(#(LANGUAGE), #(156))::CL,33387
22035 :: CALL :: call :: Z :: v789 = v785.put(#(LARGE), #(157))::CL,33387
22043 :: CALL :: call :: Z :: v794 = v790.put(#(LAST_VALUE), #(158))::CL,33387
22051 :: CALL :: call :: Z :: v799 = v795.put(#(LATERAL), #(159))::CL,33387
22059 :: CALL :: call :: Z :: v804 = v800.put(#(LEAD), #(160))::CL,33387
22067 :: CALL :: call :: Z :: v809 = v805.put(#(LEADING), #(161))::CL,33387
22075 :: CALL :: call :: Z :: v814 = v810.put(#(LEAVE), #(162))::CL,33387
22083 :: CALL :: call :: Z :: v819 = v815.put(#(LEFT), #(163))::CL,33387
22091 :: CALL :: call :: Z :: v824 = v820.put(#(LIKE), #(164))::CL,33387
22099 :: CALL :: call :: Z :: v829 = v825.put(#(LIKE_REGX), #(165))::CL,33387
22107 :: CALL :: call :: Z :: v834 = v830.put(#(LN), #(166))::CL,33387
22115 :: CALL :: call :: Z :: v839 = v835.put(#(LOCAL), #(167))::CL,33387
22123 :: CALL :: call :: Z :: v844 = v840.put(#(LOCALTIME), #(168))::CL,33387
22131 :: CALL :: call :: Z :: v849 = v845.put(#(LOCALTIMESTAMP), #(169))::CL,33387
22139 :: CALL :: call :: Z :: v854 = v850.put(#(LOOP), #(170))::CL,33387
22147 :: CALL :: call :: Z :: v859 = v855.put(#(LOWER), #(171))::CL,33387
22155 :: CALL :: call :: Z :: v864 = v860.put(#(MATCH), #(172))::CL,33387
22163 :: CALL :: call :: Z :: v869 = v865.put(#(MAX), #(173))::CL,33387
22171 :: CALL :: call :: Z :: v874 = v870.put(#(MAX_CARDINALITY), #(174))::CL,33387
22179 :: CALL :: call :: Z :: v879 = v875.put(#(MEMBER), #(175))::CL,33387
22187 :: CALL :: call :: Z :: v884 = v880.put(#(MERGE), #(176))::CL,33387
22195 :: CALL :: call :: Z :: v889 = v885.put(#(METHOD), #(177))::CL,33387
22203 :: CALL :: call :: Z :: v894 = v890.put(#(MIN), #(178))::CL,33387
22211 :: CALL :: call :: Z :: v899 = v895.put(#(MINUTE), #(179))::CL,33387
22219 :: CALL :: call :: Z :: v904 = v900.put(#(MOD), #(180))::CL,33387
22227 :: CALL :: call :: Z :: v909 = v905.put(#(MODIFIES), #(181))::CL,33387
22235 :: CALL :: call :: Z :: v914 = v910.put(#(MODULE), #(182))::CL,33387
22243 :: CALL :: call :: Z :: v919 = v915.put(#(MONTH), #(183))::CL,33387
22251 :: CALL :: call :: Z :: v924 = v920.put(#(MULTISET), #(184))::CL,33387
22259 :: CALL :: call :: Z :: v929 = v925.put(#(NATIONAL), #(185))::CL,33387
22267 :: CALL :: call :: Z :: v934 = v930.put(#(NATURAL), #(186))::CL,33387
22275 :: CALL :: call :: Z :: v939 = v935.put(#(NCHAR), #(187))::CL,33387
22283 :: CALL :: call :: Z :: v944 = v940.put(#(NCLOB), #(188))::CL,33387
22291 :: CALL :: call :: Z :: v949 = v945.put(#(NEW), #(189))::CL,33387
22299 :: CALL :: call :: Z :: v954 = v950.put(#(NO), #(190))::CL,33387
22307 :: CALL :: call :: Z :: v959 = v955.put(#(NONE), #(191))::CL,33387
22315 :: CALL :: call :: Z :: v964 = v960.put(#(NORMALIZE), #(192))::CL,33387
22323 :: CALL :: call :: Z :: v969 = v965.put(#(NOT), #(193))::CL,33387
22331 :: CALL :: call :: Z :: v974 = v970.put(#(NTH_VALUE), #(194))::CL,33387
22339 :: CALL :: call :: Z :: v979 = v975.put(#(NTILE), #(195))::CL,33387
22347 :: CALL :: call :: Z :: v984 = v980.put(#(NULL), #(196))::CL,33387
22355 :: CALL :: call :: Z :: v989 = v985.put(#(NULLIF), #(197))::CL,33387
22363 :: CALL :: call :: Z :: v994 = v990.put(#(NUMERIC), #(198))::CL,33387
22371 :: CALL :: call :: Z :: v999 = v995.put(#(OCCURRENCES_REGEX), #(199))::CL,33387
22379 :: CALL :: call :: Z :: v1004 = v1000.put(#(OCTET_LENGTH), #(200))::CL,33387
22387 :: CALL :: call :: Z :: v1009 = v1005.put(#(OF), #(201))::CL,33387
22395 :: CALL :: call :: Z :: v1014 = v1010.put(#(OFFSET), #(202))::CL,33387
22403 :: CALL :: call :: Z :: v1019 = v1015.put(#(OLD), #(203))::CL,33387
22411 :: CALL :: call :: Z :: v1024 = v1020.put(#(ON), #(204))::CL,33387
22419 :: CALL :: call :: Z :: v1029 = v1025.put(#(ONLY), #(205))::CL,33387
22427 :: CALL :: call :: Z :: v1034 = v1030.put(#(OPEN), #(206))::CL,33387
22435 :: CALL :: call :: Z :: v1039 = v1035.put(#(OR), #(207))::CL,33387
22443 :: CALL :: call :: Z :: v1044 = v1040.put(#(ORDER), #(208))::CL,33387
22451 :: CALL :: call :: Z :: v1049 = v1045.put(#(OUT), #(209))::CL,33387
22459 :: CALL :: call :: Z :: v1054 = v1050.put(#(OUTER), #(210))::CL,33387
22467 :: CALL :: call :: Z :: v1059 = v1055.put(#(OVER), #(211))::CL,33387
22475 :: CALL :: call :: Z :: v1064 = v1060.put(#(OVERLAPS), #(212))::CL,33387
22483 :: CALL :: call :: Z :: v1069 = v1065.put(#(OVERLAY), #(213))::CL,33387
22491 :: CALL :: call :: Z :: v1074 = v1070.put(#(PARAMETER), #(214))::CL,33387
22499 :: CALL :: call :: Z :: v1079 = v1075.put(#(PARTITION), #(215))::CL,33387
22507 :: CALL :: call :: Z :: v1084 = v1080.put(#(PERCENT_RANK), #(217))::CL,33387
22515 :: CALL :: call :: Z :: v1089 = v1085.put(#(PERCENTILE_CONT), #(218))::CL,33387
22523 :: CALL :: call :: Z :: v1094 = v1090.put(#(PERCENTILE_DISC), #(219))::CL,33387
22531 :: CALL :: call :: Z :: v1099 = v1095.put(#(PERIOD), #(220))::CL,33387
22539 :: CALL :: call :: Z :: v1104 = v1100.put(#(POSITION), #(222))::CL,33387
22547 :: CALL :: call :: Z :: v1109 = v1105.put(#(POSITION_REGEX), #(223))::CL,33387
22555 :: CALL :: call :: Z :: v1114 = v1110.put(#(POWER), #(224))::CL,33387
22563 :: CALL :: call :: Z :: v1119 = v1115.put(#(PRECEDES), #(225))::CL,33387
22571 :: CALL :: call :: Z :: v1124 = v1120.put(#(PRECISION), #(226))::CL,33387
22579 :: CALL :: call :: Z :: v1129 = v1125.put(#(PREPARE), #(227))::CL,33387
22587 :: CALL :: call :: Z :: v1134 = v1130.put(#(PRIMARY), #(228))::CL,33387
22595 :: CALL :: call :: Z :: v1139 = v1135.put(#(PROCEDURE), #(229))::CL,33387
22603 :: CALL :: call :: Z :: v1144 = v1140.put(#(RANGE), #(230))::CL,33387
22611 :: CALL :: call :: Z :: v1149 = v1145.put(#(RANK), #(231))::CL,33387
22619 :: CALL :: call :: Z :: v1154 = v1150.put(#(READS), #(232))::CL,33387
22627 :: CALL :: call :: Z :: v1159 = v1155.put(#(REAL), #(233))::CL,33387
22635 :: CALL :: call :: Z :: v1164 = v1160.put(#(RECURSIVE), #(234))::CL,33387
22643 :: CALL :: call :: Z :: v1169 = v1165.put(#(REF), #(235))::CL,33387
22651 :: CALL :: call :: Z :: v1174 = v1170.put(#(REFERENCES), #(236))::CL,33387
22659 :: CALL :: call :: Z :: v1179 = v1175.put(#(REFERENCING), #(237))::CL,33387
22667 :: CALL :: call :: Z :: v1184 = v1180.put(#(REGR_AVGX), #(238))::CL,33387
22675 :: CALL :: call :: Z :: v1189 = v1185.put(#(REGR_AVGY), #(239))::CL,33387
22683 :: CALL :: call :: Z :: v1194 = v1190.put(#(REGR_COUNT), #(240))::CL,33387
22691 :: CALL :: call :: Z :: v1199 = v1195.put(#(REGR_INTERCEPT), #(241))::CL,33387
22699 :: CALL :: call :: Z :: v1204 = v1200.put(#(REGR_R2), #(242))::CL,33387
22707 :: CALL :: call :: Z :: v1209 = v1205.put(#(REGR_SLOPE), #(243))::CL,33387
22715 :: CALL :: call :: Z :: v1214 = v1210.put(#(REGR_SXX), #(244))::CL,33387
22723 :: CALL :: call :: Z :: v1219 = v1215.put(#(REGR_SXY), #(245))::CL,33387
22731 :: CALL :: call :: Z :: v1224 = v1220.put(#(REGR_SYY), #(246))::CL,33387
22739 :: CALL :: call :: Z :: v1229 = v1225.put(#(RELEASE), #(247))::CL,33387
22747 :: CALL :: call :: Z :: v1234 = v1230.put(#(REPEAT), #(248))::CL,33387
22755 :: CALL :: call :: Z :: v1239 = v1235.put(#(RESIGNAL), #(249))::CL,33387
22763 :: CALL :: call :: Z :: v1244 = v1240.put(#(RETURN), #(251))::CL,33387
22771 :: CALL :: call :: Z :: v1249 = v1245.put(#(RETURNS), #(252))::CL,33387
22779 :: CALL :: call :: Z :: v1254 = v1250.put(#(REVOKE), #(253))::CL,33387
22787 :: CALL :: call :: Z :: v1259 = v1255.put(#(RIGHT), #(254))::CL,33387
22795 :: CALL :: call :: Z :: v1264 = v1260.put(#(ROLLBACK), #(255))::CL,33387
22803 :: CALL :: call :: Z :: v1269 = v1265.put(#(ROLLUP), #(256))::CL,33387
22811 :: CALL :: call :: Z :: v1274 = v1270.put(#(ROW), #(257))::CL,33387
22819 :: CALL :: call :: Z :: v1279 = v1275.put(#(ROW_NUMBER), #(258))::CL,33387
22827 :: CALL :: call :: Z :: v1284 = v1280.put(#(ROWS), #(259))::CL,33387
22835 :: CALL :: call :: Z :: v1289 = v1285.put(#(SAVEPOINT), #(260))::CL,33387
22843 :: CALL :: call :: Z :: v1294 = v1290.put(#(SCOPE), #(261))::CL,33387
22851 :: CALL :: call :: Z :: v1299 = v1295.put(#(SCROLL), #(262))::CL,33387
22859 :: CALL :: call :: Z :: v1304 = v1300.put(#(SEARCH), #(263))::CL,33387
22867 :: CALL :: call :: Z :: v1309 = v1305.put(#(SECOND), #(264))::CL,33387
22875 :: CALL :: call :: Z :: v1314 = v1310.put(#(SELECT), #(265))::CL,33387
22883 :: CALL :: call :: Z :: v1319 = v1315.put(#(SENSITIVE), #(266))::CL,33387
22891 :: CALL :: call :: Z :: v1324 = v1320.put(#(SESSION_USER), #(267))::CL,33387
22899 :: CALL :: call :: Z :: v1329 = v1325.put(#(SET), #(268))::CL,33387
22907 :: CALL :: call :: Z :: v1334 = v1330.put(#(SIGNAL), #(269))::CL,33387
22915 :: CALL :: call :: Z :: v1339 = v1335.put(#(SIMILAR), #(270))::CL,33387
22923 :: CALL :: call :: Z :: v1344 = v1340.put(#(SMALLINT), #(271))::CL,33387
22931 :: CALL :: call :: Z :: v1349 = v1345.put(#(SOME), #(272))::CL,33387
22939 :: CALL :: call :: Z :: v1354 = v1350.put(#(SPECIFIC), #(273))::CL,33387
22947 :: CALL :: call :: Z :: v1359 = v1355.put(#(SPECIFICTYPE), #(274))::CL,33387
22955 :: CALL :: call :: Z :: v1364 = v1360.put(#(SQL), #(275))::CL,33387
22963 :: CALL :: call :: Z :: v1369 = v1365.put(#(SQLEXCEPTION), #(276))::CL,33387
22971 :: CALL :: call :: Z :: v1374 = v1370.put(#(SQLSTATE), #(277))::CL,33387
22979 :: CALL :: call :: Z :: v1379 = v1375.put(#(SQLWARNING), #(278))::CL,33387
22987 :: CALL :: call :: Z :: v1384 = v1380.put(#(SQRT), #(279))::CL,33387
22995 :: CALL :: call :: Z :: v1389 = v1385.put(#(STACKED), #(280))::CL,33387
23003 :: CALL :: call :: Z :: v1394 = v1390.put(#(START), #(281))::CL,33387
23011 :: CALL :: call :: Z :: v1399 = v1395.put(#(STATIC), #(282))::CL,33387
23019 :: CALL :: call :: Z :: v1404 = v1400.put(#(STDDEV_POP), #(283))::CL,33387
23027 :: CALL :: call :: Z :: v1409 = v1405.put(#(STDDEV_SAMP), #(284))::CL,33387
23035 :: CALL :: call :: Z :: v1414 = v1410.put(#(SUBMULTISET), #(285))::CL,33387
23043 :: CALL :: call :: Z :: v1419 = v1415.put(#(SUBSTRING), #(286))::CL,33387
23051 :: CALL :: call :: Z :: v1424 = v1420.put(#(SUBSTRING_REGEX), #(287))::CL,33387
23059 :: CALL :: call :: Z :: v1429 = v1425.put(#(SUCCEEDS), #(288))::CL,33387
23067 :: CALL :: call :: Z :: v1434 = v1430.put(#(SUM), #(289))::CL,33387
23075 :: CALL :: call :: Z :: v1439 = v1435.put(#(SYMMETRIC), #(290))::CL,33387
23083 :: CALL :: call :: Z :: v1444 = v1440.put(#(SYSTEM), #(291))::CL,33387
23091 :: CALL :: call :: Z :: v1449 = v1445.put(#(SYSTEM_TIME), #(292))::CL,33387
23099 :: CALL :: call :: Z :: v1454 = v1450.put(#(SYSTEM_USER), #(293))::CL,33387
23107 :: CALL :: call :: Z :: v1459 = v1455.put(#(TABLE), #(294))::CL,33387
23115 :: CALL :: call :: Z :: v1464 = v1460.put(#(TABLESAMPLE), #(295))::CL,33387
23123 :: CALL :: call :: Z :: v1469 = v1465.put(#(THEN), #(296))::CL,33387
23131 :: CALL :: call :: Z :: v1474 = v1470.put(#(TIME), #(297))::CL,33387
23139 :: CALL :: call :: Z :: v1479 = v1475.put(#(TIMESTAMP), #(298))::CL,33387
23147 :: CALL :: call :: Z :: v1484 = v1480.put(#(TIMEZONE_HOUR), #(299))::CL,33387
23155 :: CALL :: call :: Z :: v1489 = v1485.put(#(TIMEZONE_MINUTE), #(300))::CL,33387
23163 :: CALL :: call :: Z :: v1494 = v1490.put(#(TO), #(301))::CL,33387
23171 :: CALL :: call :: Z :: v1499 = v1495.put(#(TRAILING), #(302))::CL,33387
23179 :: CALL :: call :: Z :: v1504 = v1500.put(#(TRANSLATE), #(303))::CL,33387
23187 :: CALL :: call :: Z :: v1509 = v1505.put(#(TRANSLATE_REGEX), #(304))::CL,33387
23195 :: CALL :: call :: Z :: v1514 = v1510.put(#(TRANSLATION), #(305))::CL,33387
23203 :: CALL :: call :: Z :: v1519 = v1515.put(#(TREAT), #(306))::CL,33387
23211 :: CALL :: call :: Z :: v1524 = v1520.put(#(TRIGGER), #(307))::CL,33387
23219 :: CALL :: call :: Z :: v1529 = v1525.put(#(TRIM), #(308))::CL,33387
23227 :: CALL :: call :: Z :: v1534 = v1530.put(#(TRIM_ARRAY), #(309))::CL,33387
23235 :: CALL :: call :: Z :: v1539 = v1535.put(#(TRUE), #(310))::CL,33387
23243 :: CALL :: call :: Z :: v1544 = v1540.put(#(TRUNCATE), #(311))::CL,33387
23251 :: CALL :: call :: Z :: v1549 = v1545.put(#(UESCAPE), #(312))::CL,33387
23259 :: CALL :: call :: Z :: v1554 = v1550.put(#(UNDO), #(313))::CL,33387
23267 :: CALL :: call :: Z :: v1559 = v1555.put(#(UNION), #(314))::CL,33387
23275 :: CALL :: call :: Z :: v1564 = v1560.put(#(UNIQUE), #(315))::CL,33387
23283 :: CALL :: call :: Z :: v1569 = v1565.put(#(UNKNOWN), #(316))::CL,33387
23291 :: CALL :: call :: Z :: v1574 = v1570.put(#(UNNEST), #(317))::CL,33387
23299 :: CALL :: call :: Z :: v1579 = v1575.put(#(UNTIL), #(318))::CL,33387
23307 :: CALL :: call :: Z :: v1584 = v1580.put(#(UPDATE), #(319))::CL,33387
23315 :: CALL :: call :: Z :: v1589 = v1585.put(#(UPPER), #(320))::CL,33387
23323 :: CALL :: call :: Z :: v1594 = v1590.put(#(USER), #(321))::CL,33387
23331 :: CALL :: call :: Z :: v1599 = v1595.put(#(USING), #(322))::CL,33387
23339 :: CALL :: call :: Z :: v1604 = v1600.put(#(VALUE), #(323))::CL,33387
23347 :: CALL :: call :: Z :: v1609 = v1605.put(#(VALUES), #(324))::CL,33387
23355 :: CALL :: call :: Z :: v1614 = v1610.put(#(VAR_POP), #(325))::CL,33387
23363 :: CALL :: call :: Z :: v1619 = v1615.put(#(VAR_SAMP), #(326))::CL,33387
23371 :: CALL :: call :: Z :: v1624 = v1620.put(#(VARBINARY), #(327))::CL,33387
23379 :: CALL :: call :: Z :: v1629 = v1625.put(#(VARCHAR), #(328))::CL,33387
23387 :: CALL :: call :: Z :: v1634 = v1630.put(#(VARYING), #(329))::CL,33387
23395 :: CALL :: call :: Z :: v1639 = v1635.put(#(WHEN), #(331))::CL,33387
23403 :: CALL :: call :: Z :: v1644 = v1640.put(#(WHENEVER), #(332))::CL,33387
23411 :: CALL :: call :: Z :: v1649 = v1645.put(#(WHERE), #(333))::CL,33387
23419 :: CALL :: call :: Z :: v1654 = v1650.put(#(WIDTH_BUCKET), #(334))::CL,33387
23427 :: CALL :: call :: Z :: v1659 = v1655.put(#(WINDOW), #(335))::CL,33387
23435 :: CALL :: call :: Z :: v1664 = v1660.put(#(WITH), #(336))::CL,33387
23443 :: CALL :: call :: Z :: v1669 = v1665.put(#(WITHIN), #(337))::CL,33387
23451 :: CALL :: call :: Z :: v1674 = v1670.put(#(WITHOUT), #(338))::CL,33387
23459 :: CALL :: call :: Z :: v1679 = v1675.put(#(WHILE), #(339))::CL,33387
23467 :: CALL :: call :: Z :: v1684 = v1680.put(#(YEAR), #(340))::CL,33387
23482 :: CALL :: call :: Z :: v1692 = v1688.put(#(ACTION), #(353))::CL,33387
23490 :: CALL :: call :: Z :: v1697 = v1693.put(#(ADD), #(355))::CL,33387
23498 :: CALL :: call :: Z :: v1702 = v1698.put(#(ADMIN), #(356))::CL,33387
23506 :: CALL :: call :: Z :: v1707 = v1703.put(#(AFTER), #(357))::CL,33387
23514 :: CALL :: call :: Z :: v1712 = v1708.put(#(AGGREGATE), #(582))::CL,33387
23522 :: CALL :: call :: Z :: v1717 = v1713.put(#(ALIAS), #(581))::CL,33387
23530 :: CALL :: call :: Z :: v1722 = v1718.put(#(ALWAYS), #(358))::CL,33387
23538 :: CALL :: call :: Z :: v1727 = v1723.put(#(ASC), #(359))::CL,33387
23546 :: CALL :: call :: Z :: v1732 = v1728.put(#(AUTHENTICATION), #(584))::CL,33387
23554 :: CALL :: call :: Z :: v1737 = v1733.put(#(AUTOCOMMIT), #(583))::CL,33387
23562 :: CALL :: call :: Z :: v1742 = v1738.put(#(BACKUP), #(585))::CL,33387
23570 :: CALL :: call :: Z :: v1747 = v1743.put(#(BEFORE), #(364))::CL,33387
23578 :: CALL :: call :: Z :: v1752 = v1748.put(#(BINARY_DOUBLE), #(587))::CL,33387
23586 :: CALL :: call :: Z :: v1757 = v1753.put(#(BINARY_FLOAT), #(586))::CL,33387
23594 :: CALL :: call :: Z :: v1762 = v1758.put(#(BIT), #(588))::CL,33387
23602 :: CALL :: call :: Z :: v1767 = v1763.put(#(BYTE), #(591))::CL,33387
23610 :: CALL :: call :: Z :: v1772 = v1768.put(#(BLOCKING), #(589))::CL,33387
23618 :: CALL :: call :: Z :: v1777 = v1773.put(#(BODY), #(590))::CL,33387
23626 :: CALL :: call :: Z :: v1782 = v1778.put(#(CACHE), #(592))::CL,33387
23634 :: CALL :: call :: Z :: v1787 = v1783.put(#(CACHED), #(593))::CL,33387
23642 :: CALL :: call :: Z :: v1792 = v1788.put(#(CASCADE), #(368))::CL,33387
23650 :: CALL :: call :: Z :: v1797 = v1793.put(#(CATALOG), #(369))::CL,33387
23658 :: CALL :: call :: Z :: v1802 = v1798.put(#(CHARACTERISTICS), #(375))::CL,33387
23666 :: CALL :: call :: Z :: v1807 = v1803.put(#(CHARACTERS), #(376))::CL,33387
23674 :: CALL :: call :: Z :: v1812 = v1808.put(#(CHECKPOINT), #(595))::CL,33387
23682 :: CALL :: call :: Z :: v1817 = v1813.put(#(CITEXT), #(596))::CL,33387
23690 :: CALL :: call :: Z :: v1822 = v1818.put(#(CRYPT_KEY), #(722))::CL,33387
23698 :: CALL :: call :: Z :: v1827 = v1823.put(#(CLASS), #(597))::CL,33387
23706 :: CALL :: call :: Z :: v1832 = v1828.put(#(CLUSTERED), #(598))::CL,33387
23714 :: CALL :: call :: Z :: v1835 = v1833.put(#(COLLATE), #(44))::CL,33387
23722 :: CALL :: call :: Z :: v1840 = v1836.put(#(COLLATION), #(379))::CL,33387
23730 :: CALL :: call :: Z :: v1845 = v1841.put(#(COMMENT), #(599))::CL,33387
23738 :: CALL :: call :: Z :: v1850 = v1846.put(#(COMMITTED), #(386))::CL,33387
23746 :: CALL :: call :: Z :: v1855 = v1851.put(#(COMPACT), #(600))::CL,33387
23754 :: CALL :: call :: Z :: v1860 = v1856.put(#(COMPRESSED), #(601))::CL,33387
23762 :: CALL :: call :: Z :: v1865 = v1861.put(#(CONDIITON_IDENTIFIER), #(387))::CL,33387
23770 :: CALL :: call :: Z :: v1870 = v1866.put(#(CONFLICT), #(602))::CL,33387
23778 :: CALL :: call :: Z :: v1875 = v1871.put(#(CONSTRAINTS), #(394))::CL,33387
23786 :: CALL :: call :: Z :: v1880 = v1876.put(#(CONTINUE), #(397))::CL,33387
23794 :: CALL :: call :: Z :: v1885 = v1881.put(#(CONTROL), #(603))::CL,33387
23802 :: CALL :: call :: Z :: v1890 = v1886.put(#(CURDATE), #(723))::CL,33387
23810 :: CALL :: call :: Z :: v1895 = v1891.put(#(CURRVAL), #(604))::CL,33387
23818 :: CALL :: call :: Z :: v1900 = v1896.put(#(CURTIME), #(724))::CL,33387
23826 :: CALL :: call :: Z :: v1905 = v1901.put(#(DATA), #(399))::CL,33387
23834 :: CALL :: call :: Z :: v1910 = v1906.put(#(DATABASE), #(605))::CL,33387
23842 :: CALL :: call :: Z :: v1915 = v1911.put(#(DEADLOCK), #(606))::CL,33387
23850 :: CALL :: call :: Z :: v1920 = v1916.put(#(DEFERRABLE), #(403))::CL,33387
23858 :: CALL :: call :: Z :: v1925 = v1921.put(#(DEFAULTS), #(402))::CL,33387
23866 :: CALL :: call :: Z :: v1930 = v1926.put(#(DEFINER), #(406))::CL,33387
23874 :: CALL :: call :: Z :: v1935 = v1931.put(#(DEFRAG), #(607))::CL,33387
23882 :: CALL :: call :: Z :: v1940 = v1936.put(#(DELAY), #(608))::CL,33387
23890 :: CALL :: call :: Z :: v1945 = v1941.put(#(DESC), #(410))::CL,33387
23898 :: CALL :: call :: Z :: v1950 = v1946.put(#(DIAGNOSTICS), #(412))::CL,33387
23906 :: CALL :: call :: Z :: v1955 = v1951.put(#(DIGEST), #(609))::CL,33387
23914 :: CALL :: call :: Z :: v1960 = v1956.put(#(DOMAIN), #(414))::CL,33387
23922 :: CALL :: call :: Z :: v1965 = v1961.put(#(ENUM), #(610))::CL,33387
23930 :: CALL :: call :: Z :: v1970 = v1966.put(#(EVENT), #(611))::CL,33387
23938 :: CALL :: call :: Z :: v1975 = v1971.put(#(EXCEPTION), #(418))::CL,33387
23946 :: CALL :: call :: Z :: v1980 = v1976.put(#(EXCLUDING), #(420))::CL,33387
23954 :: CALL :: call :: Z :: v1985 = v1981.put(#(EXPLAIN), #(612))::CL,33387
23962 :: CALL :: call :: Z :: v1990 = v1986.put(#(EXPRESSION), #(421))::CL,33387
23970 :: CALL :: call :: Z :: v1995 = v1991.put(#(FEATURE), #(613))::CL,33387
23978 :: CALL :: call :: Z :: v2000 = v1996.put(#(FILE), #(614))::CL,33387
23986 :: CALL :: call :: Z :: v2005 = v2001.put(#(FILES), #(615))::CL,33387
23994 :: CALL :: call :: Z :: v2010 = v2006.put(#(FINAL), #(422))::CL,33387
24002 :: CALL :: call :: Z :: v2015 = v2011.put(#(FIRST), #(423))::CL,33387
24010 :: CALL :: call :: Z :: v2020 = v2016.put(#(FOLLOWING), #(424))::CL,33387
24018 :: CALL :: call :: Z :: v2025 = v2021.put(#(FORMAT), #(616))::CL,33387
24026 :: CALL :: call :: Z :: v2030 = v2026.put(#(FOUND), #(426))::CL,33387
24034 :: CALL :: call :: Z :: v2035 = v2031.put(#(G), #(427))::CL,33387
24042 :: CALL :: call :: Z :: v2040 = v2036.put(#(GC), #(617))::CL,33387
24050 :: CALL :: call :: Z :: v2045 = v2041.put(#(GENERATED), #(429))::CL,33387
24058 :: CALL :: call :: Z :: v2050 = v2046.put(#(GRANTED), #(432))::CL,33387
24066 :: CALL :: call :: Z :: v2055 = v2051.put(#(GROUP_CONCAT), #(750))::CL,33387
24074 :: CALL :: call :: Z :: v2060 = v2056.put(#(HEADER), #(618))::CL,33387
24082 :: CALL :: call :: Z :: v2063 = v2061.put(#(IF), #(434))::CL,33387
24090 :: CALL :: call :: Z :: v2068 = v2064.put(#(IGNORE), #(435))::CL,33387
24098 :: CALL :: call :: Z :: v2073 = v2069.put(#(IGNORECASE), #(619))::CL,33387
24106 :: CALL :: call :: Z :: v2078 = v2074.put(#(IMMEDIATELY), #(620))::CL,33387
24114 :: CALL :: call :: Z :: v2083 = v2079.put(#(INCLUDING), #(438))::CL,33387
24122 :: CALL :: call :: Z :: v2088 = v2084.put(#(INCREMENT), #(439))::CL,33387
24130 :: CALL :: call :: Z :: v2093 = v2089.put(#(INDEX), #(622))::CL,33387
24138 :: CALL :: call :: Z :: v2098 = v2094.put(#(INDEXER), #(623))::CL,33387
24146 :: CALL :: call :: Z :: v2103 = v2099.put(#(INITIAL), #(624))::CL,33387
24154 :: CALL :: call :: Z :: v2108 = v2104.put(#(INPUT), #(441))::CL,33387
24162 :: CALL :: call :: Z :: v2113 = v2109.put(#(INSTEAD), #(444))::CL,33387
24170 :: CALL :: call :: Z :: v2118 = v2114.put(#(INTEGRITY), #(621))::CL,33387
24178 :: CALL :: call :: Z :: v2123 = v2119.put(#(IS_AUTOCOMMIT), #(753))::CL,33387
24186 :: CALL :: call :: Z :: v2128 = v2124.put(#(ISOLATION), #(446))::CL,33387
24194 :: CALL :: call :: Z :: v2133 = v2129.put(#(IS_READONLY_DATABASE), #(754))::CL,33387
24202 :: CALL :: call :: Z :: v2138 = v2134.put(#(IS_READONLY_DATABASE_...), #(755))::CL,33387
24210 :: CALL :: call :: Z :: v2143 = v2139.put(#(IS_READONLY_SESSION), #(756))::CL,33387
24218 :: CALL :: call :: Z :: v2148 = v2144.put(#(JAVA), #(447))::CL,33387
24226 :: CALL :: call :: Z :: v2153 = v2149.put(#(K), #(448))::CL,33387
24234 :: CALL :: call :: Z :: v2157 = v2154.put(#(KEY), #(449))::CL,33387
24242 :: CALL :: call :: Z :: v2162 = v2158.put(#(LAST), #(452))::CL,33387
24250 :: CALL :: call :: Z :: v2167 = v2163.put(#(LASTVAL), #(625))::CL,33387
24258 :: CALL :: call :: Z :: v2172 = v2168.put(#(LENGTH), #(453))::CL,33387
24266 :: CALL :: call :: Z :: v2177 = v2173.put(#(LEVEL), #(454))::CL,33387
24274 :: CALL :: call :: Z :: v2182 = v2178.put(#(LIBRARY), #(455))::CL,33387
24282 :: CALL :: call :: Z :: v2187 = v2183.put(#(LIMIT), #(626))::CL,33387
24290 :: CALL :: call :: Z :: v2192 = v2188.put(#(LOB), #(764))::CL,33387
24298 :: CALL :: call :: Z :: v2197 = v2193.put(#(LOCK), #(630))::CL,33387
24306 :: CALL :: call :: Z :: v2202 = v2198.put(#(LOCKS), #(631))::CL,33387
24314 :: CALL :: call :: Z :: v2207 = v2203.put(#(LONG), #(632))::CL,33387
24322 :: CALL :: call :: Z :: v2212 = v2208.put(#(LONGBLOB), #(840))::CL,33387
24330 :: CALL :: call :: Z :: v2217 = v2213.put(#(LONGTEXT), #(841))::CL,33387
24338 :: CALL :: call :: Z :: v2222 = v2218.put(#(LONGVAR), #(633))::CL,33387
24346 :: CALL :: call :: Z :: v2227 = v2223.put(#(M), #(457))::CL,33387
24354 :: CALL :: call :: Z :: v2232 = v2228.put(#(MATCHED), #(459))::CL,33387
24362 :: CALL :: call :: Z :: v2237 = v2233.put(#(MAXROWS), #(634))::CL,33387
24370 :: CALL :: call :: Z :: v2242 = v2238.put(#(MAXVALUE), #(460))::CL,33387
24378 :: CALL :: call :: Z :: v2247 = v2243.put(#(MEDIAN), #(635))::CL,33387
24386 :: CALL :: call :: Z :: v2252 = v2248.put(#(MEDIUMBLOB), #(842))::CL,33387
24394 :: CALL :: call :: Z :: v2257 = v2253.put(#(MEDIUMTEXT), #(843))::CL,33387
24402 :: CALL :: call :: Z :: v2262 = v2258.put(#(MEMORY), #(636))::CL,33387
24410 :: CALL :: call :: Z :: v2267 = v2263.put(#(MESSAGE_TEXT), #(463))::CL,33387
24418 :: CALL :: call :: Z :: v2272 = v2268.put(#(MILLIS), #(637))::CL,33387
24426 :: CALL :: call :: Z :: v2277 = v2273.put(#(MICROSECOND), #(871))::CL,33387
24434 :: CALL :: call :: Z :: v2282 = v2278.put(#(MILLISECOND), #(872))::CL,33387
24442 :: CALL :: call :: Z :: v2287 = v2283.put(#(MINUS), #(638))::CL,33387
24450 :: CALL :: call :: Z :: v2292 = v2288.put(#(MINVALUE), #(464))::CL,33387
24458 :: CALL :: call :: Z :: v2297 = v2293.put(#(MORE), #(465))::CL,33387
24466 :: CALL :: call :: Z :: v2302 = v2298.put(#(MVCC), #(773))::CL,33387
24474 :: CALL :: call :: Z :: v2307 = v2303.put(#(MVLOCKS), #(774))::CL,33387
24482 :: CALL :: call :: Z :: v2312 = v2308.put(#(NAME), #(467))::CL,33387
24490 :: CALL :: call :: Z :: v2317 = v2313.put(#(NEXT), #(470))::CL,33387
24498 :: CALL :: call :: Z :: v2322 = v2318.put(#(NEXTVAL), #(640))::CL,33387
24506 :: CALL :: call :: Z :: v2327 = v2323.put(#(NAN), #(639))::CL,33387
24514 :: CALL :: call :: Z :: v2332 = v2328.put(#(NANOSECOND), #(873))::CL,33387
24522 :: CALL :: call :: Z :: v2337 = v2333.put(#(NIO), #(777))::CL,33387
24530 :: CALL :: call :: Z :: v2342 = v2338.put(#(NOW), #(778))::CL,33387
24538 :: CALL :: call :: Z :: v2347 = v2343.put(#(NULLS), #(473))::CL,33387
24546 :: CALL :: call :: Z :: v2352 = v2348.put(#(NUMBER), #(474))::CL,33387
24554 :: CALL :: call :: Z :: v2357 = v2353.put(#(NVARCHAR2), #(642))::CL,33387
24562 :: CALL :: call :: Z :: v2362 = v2358.put(#(NVL2), #(643))::CL,33387
24570 :: CALL :: call :: Z :: v2367 = v2363.put(#(OBJECT), #(475))::CL,33387
24578 :: CALL :: call :: Z :: v2372 = v2368.put(#(OCTETS), #(476))::CL,33387
24586 :: CALL :: call :: Z :: v2377 = v2373.put(#(OFF), #(644))::CL,33387
24594 :: CALL :: call :: Z :: v2382 = v2378.put(#(OPTION), #(477))::CL,33387
24602 :: CALL :: call :: Z :: v2387 = v2383.put(#(ORDINALITY), #(480))::CL,33387
24610 :: CALL :: call :: Z :: v2392 = v2388.put(#(OTHERS), #(481))::CL,33387
24618 :: CALL :: call :: Z :: v2397 = v2393.put(#(OVERRIDING), #(483))::CL,33387
24626 :: CALL :: call :: Z :: v2402 = v2398.put(#(P), #(484))::CL,33387
24634 :: CALL :: call :: Z :: v2407 = v2403.put(#(PAD), #(485))::CL,33387
24642 :: CALL :: call :: Z :: v2412 = v2408.put(#(PARTIAL), #(492))::CL,33387
24650 :: CALL :: call :: Z :: v2417 = v2413.put(#(PASSWORD), #(645))::CL,33387
24658 :: CALL :: call :: Z :: v2422 = v2418.put(#(PERFORM), #(646))::CL,33387
24666 :: CALL :: call :: Z :: v2427 = v2423.put(#(PLACING), #(495))::CL,33387
24674 :: CALL :: call :: Z :: v2432 = v2428.put(#(PLAN), #(647))::CL,33387
24682 :: CALL :: call :: Z :: v2437 = v2433.put(#(PRECEDING), #(497))::CL,33387
24690 :: CALL :: call :: Z :: v2442 = v2438.put(#(PRESERVE), #(498))::CL,33387
24698 :: CALL :: call :: Z :: v2447 = v2443.put(#(PREVVAL), #(648))::CL,33387
24706 :: CALL :: call :: Z :: v2452 = v2448.put(#(PRIVILEGES), #(500))::CL,33387
24714 :: CALL :: call :: Z :: v2457 = v2453.put(#(PROPERTY), #(649))::CL,33387
24722 :: CALL :: call :: Z :: v2462 = v2458.put(#(RAW), #(650))::CL,33387
24730 :: CALL :: call :: Z :: v2467 = v2463.put(#(READ), #(502))::CL,33387
24738 :: CALL :: call :: Z :: v2472 = v2468.put(#(READONLY), #(651))::CL,33387
24746 :: CALL :: call :: Z :: v2477 = v2473.put(#(REFERENTIAL), #(652))::CL,33387
24754 :: CALL :: call :: Z :: v2482 = v2478.put(#(REGULAR), #(653))::CL,33387
24762 :: CALL :: call :: Z :: v2487 = v2483.put(#(RENAME), #(654))::CL,33387
24770 :: CALL :: call :: Z :: v2492 = v2488.put(#(REPEATABLE), #(504))::CL,33387
24778 :: CALL :: call :: Z :: v2497 = v2493.put(#(RESET), #(655))::CL,33387
24786 :: CALL :: call :: Z :: v2502 = v2498.put(#(RESTART), #(506))::CL,33387
24794 :: CALL :: call :: Z :: v2507 = v2503.put(#(RESTRICT), #(507))::CL,33387
24802 :: CALL :: call :: Z :: v2512 = v2508.put(#(RESULT), #(250))::CL,33387
24810 :: CALL :: call :: Z :: v2517 = v2513.put(#(ROLE), #(512))::CL,33387
24818 :: CALL :: call :: Z :: v2522 = v2518.put(#(ROUTINE), #(513))::CL,33387
24826 :: CALL :: call :: Z :: v2527 = v2523.put(#(ROW_COUNT), #(517))::CL,33387
24834 :: CALL :: call :: Z :: v2532 = v2528.put(#(ROWNUM), #(656))::CL,33387
24842 :: CALL :: call :: Z :: v2537 = v2533.put(#(SCALE), #(518))::CL,33387
24850 :: CALL :: call :: Z :: v2542 = v2538.put(#(SCHEMA), #(519))::CL,33387
24858 :: CALL :: call :: Z :: v2547 = v2543.put(#(SCRIPT), #(657))::CL,33387
24866 :: CALL :: call :: Z :: v2552 = v2548.put(#(SEQUENCE), #(527))::CL,33387
24874 :: CALL :: call :: Z :: v2557 = v2553.put(#(SEPARATOR), #(658))::CL,33387
24882 :: CALL :: call :: Z :: v2562 = v2558.put(#(SERIALIZABLE), #(528))::CL,33387
24890 :: CALL :: call :: Z :: v2567 = v2563.put(#(SERVER), #(531))::CL,33387
24898 :: CALL :: call :: Z :: v2572 = v2568.put(#(SESSION), #(530))::CL,33387
24906 :: CALL :: call :: Z :: v2577 = v2573.put(#(SETS), #(532))::CL,33387
24914 :: CALL :: call :: Z :: v2582 = v2578.put(#(SHUTDOWN), #(659))::CL,33387
24922 :: CALL :: call :: Z :: v2587 = v2583.put(#(SIMPLE), #(533))::CL,33387
24930 :: CALL :: call :: Z :: v2592 = v2588.put(#(SIZE), #(534))::CL,33387
24938 :: CALL :: call :: Z :: v2597 = v2593.put(#(SOURCE), #(535))::CL,33387
24946 :: CALL :: call :: Z :: v2602 = v2598.put(#(SQL_BIGINT), #(951))::CL,33387
24954 :: CALL :: call :: Z :: v2607 = v2603.put(#(SQL_BINARY), #(952))::CL,33387
24962 :: CALL :: call :: Z :: v2612 = v2608.put(#(SQL_BIT), #(953))::CL,33387
24970 :: CALL :: call :: Z :: v2617 = v2613.put(#(SQL_BLOB), #(954))::CL,33387
24978 :: CALL :: call :: Z :: v2622 = v2618.put(#(SQL_BOOLEAN), #(955))::CL,33387
24986 :: CALL :: call :: Z :: v2627 = v2623.put(#(SQL_CHAR), #(956))::CL,33387
24994 :: CALL :: call :: Z :: v2632 = v2628.put(#(SQL_CLOB), #(957))::CL,33387
25002 :: CALL :: call :: Z :: v2637 = v2633.put(#(SQL_DATALINK), #(960))::CL,33387
25010 :: CALL :: call :: Z :: v2642 = v2638.put(#(SQL_DATE), #(958))::CL,33387
25018 :: CALL :: call :: Z :: v2647 = v2643.put(#(SQL_DECIMAL), #(959))::CL,33387
25026 :: CALL :: call :: Z :: v2652 = v2648.put(#(SQL_DOUBLE), #(961))::CL,33387
25034 :: CALL :: call :: Z :: v2657 = v2653.put(#(SQL_FLOAT), #(962))::CL,33387
25042 :: CALL :: call :: Z :: v2662 = v2658.put(#(SQL_INTEGER), #(963))::CL,33387
25050 :: CALL :: call :: Z :: v2667 = v2663.put(#(SQL_LONGNVARCHAR), #(965))::CL,33387
25058 :: CALL :: call :: Z :: v2672 = v2668.put(#(SQL_LONGVARBINARY), #(964))::CL,33387
25066 :: CALL :: call :: Z :: v2677 = v2673.put(#(SQL_LONGVARCHAR), #(966))::CL,33387
25074 :: CALL :: call :: Z :: v2682 = v2678.put(#(SQL_NCHAR), #(967))::CL,33387
25082 :: CALL :: call :: Z :: v2687 = v2683.put(#(SQL_NCLOB), #(968))::CL,33387
25090 :: CALL :: call :: Z :: v2692 = v2688.put(#(SQL_NUMERIC), #(969))::CL,33387
25098 :: CALL :: call :: Z :: v2697 = v2693.put(#(SQL_NVARCHAR), #(970))::CL,33387
25106 :: CALL :: call :: Z :: v2702 = v2698.put(#(SQL_REAL), #(971))::CL,33387
25114 :: CALL :: call :: Z :: v2707 = v2703.put(#(SQL_ROWID), #(972))::CL,33387
25122 :: CALL :: call :: Z :: v2712 = v2708.put(#(SQL_SMALLINT), #(974))::CL,33387
25130 :: CALL :: call :: Z :: v2717 = v2713.put(#(SQL_SQLXML), #(973))::CL,33387
25138 :: CALL :: call :: Z :: v2722 = v2718.put(#(SQL_TIME), #(975))::CL,33387
25146 :: CALL :: call :: Z :: v2727 = v2723.put(#(SQL_TIMESTAMP), #(976))::CL,33387
25154 :: CALL :: call :: Z :: v2732 = v2728.put(#(SQL_TINYINT), #(977))::CL,33387
25162 :: CALL :: call :: Z :: v2737 = v2733.put(#(SQL_VARBINARY), #(978))::CL,33387
25170 :: CALL :: call :: Z :: v2742 = v2738.put(#(SQL_VARCHAR), #(979))::CL,33387
25178 :: CALL :: call :: Z :: v2747 = v2743.put(#(SQL_TSI_DAY), #(987))::CL,33387
25186 :: CALL :: call :: Z :: v2752 = v2748.put(#(SQL_TSI_FRAC_SECOND), #(981))::CL,33387
25194 :: CALL :: call :: Z :: v2757 = v2753.put(#(SQL_TSI_MILLI_SECOND), #(982))::CL,33387
25202 :: CALL :: call :: Z :: v2762 = v2758.put(#(SQL_TSI_HOUR), #(986))::CL,33387
25210 :: CALL :: call :: Z :: v2767 = v2763.put(#(SQL_TSI_MINUTE), #(985))::CL,33387
25218 :: CALL :: call :: Z :: v2772 = v2768.put(#(SQL_TSI_MONTH), #(989))::CL,33387
25226 :: CALL :: call :: Z :: v2777 = v2773.put(#(SQL_TSI_QUARTER), #(990))::CL,33387
25234 :: CALL :: call :: Z :: v2782 = v2778.put(#(SQL_TSI_SECOND), #(984))::CL,33387
25242 :: CALL :: call :: Z :: v2787 = v2783.put(#(SQL_TSI_WEEK), #(988))::CL,33387
25250 :: CALL :: call :: Z :: v2792 = v2788.put(#(SQL_TSI_YEAR), #(991))::CL,33387
25258 :: CALL :: call :: Z :: v2797 = v2793.put(#(STATEMENT), #(539))::CL,33387
25266 :: CALL :: call :: Z :: v2802 = v2798.put(#(STRUCTURE), #(540))::CL,33387
25274 :: CALL :: call :: Z :: v2807 = v2803.put(#(STYLE), #(541))::CL,33387
25282 :: CALL :: call :: Z :: v2812 = v2808.put(#(SYNONYM), #(660))::CL,33387
25290 :: CALL :: call :: Z :: v2817 = v2813.put(#(SYNTAX), #(661))::CL,33387
25298 :: CALL :: call :: Z :: v2822 = v2818.put(#(T), #(543))::CL,33387
25306 :: CALL :: call :: Z :: v2827 = v2823.put(#(TDC), #(662))::CL,33387
25314 :: CALL :: call :: Z :: v2832 = v2828.put(#(TEMP), #(663))::CL,33387
25322 :: CALL :: call :: Z :: v2837 = v2833.put(#(TEMPORARY), #(545))::CL,33387
25330 :: CALL :: call :: Z :: v2842 = v2838.put(#(TEXT), #(664))::CL,33387
25338 :: CALL :: call :: Z :: v2847 = v2843.put(#(TYPES), #(667))::CL,33387
25346 :: CALL :: call :: Z :: v2852 = v2848.put(#(TIMESTAMP_WITH_ZONE), #(817))::CL,33387
25354 :: CALL :: call :: Z :: v2857 = v2853.put(#(TIMESTAMPADD), #(818))::CL,33387
25362 :: CALL :: call :: Z :: v2862 = v2858.put(#(TIMESTAMPDIFF), #(819))::CL,33387
25370 :: CALL :: call :: Z :: v2867 = v2863.put(#(TINYBLOB), #(844))::CL,33387
25378 :: CALL :: call :: Z :: v2872 = v2868.put(#(TINYTEXT), #(845))::CL,33387
25386 :: CALL :: call :: Z :: v2877 = v2873.put(#(TOP), #(665))::CL,33387
25394 :: CALL :: call :: Z :: v2882 = v2878.put(#(TRANSACTION), #(548))::CL,33387
25402 :: CALL :: call :: Z :: v2887 = v2883.put(#(TRANSACTION_ACTIVE), #(549))::CL,33387
25410 :: CALL :: call :: Z :: v2892 = v2888.put(#(TRANSACTIONS_COMMITTED), #(550))::CL,33387
25418 :: CALL :: call :: Z :: v2897 = v2893.put(#(TRANSACTIONS_ROLLED_BACK), #(551))::CL,33387
25426 :: CALL :: call :: Z :: v2902 = v2898.put(#(TTI), #(666))::CL,33387
25434 :: CALL :: call :: Z :: v2907 = v2903.put(#(TYPE), #(557))::CL,33387
25442 :: CALL :: call :: Z :: v2912 = v2908.put(#(UNBOUNDED), #(558))::CL,33387
25450 :: CALL :: call :: Z :: v2917 = v2913.put(#(UNCOMMITTED), #(559))::CL,33387
25458 :: CALL :: call :: Z :: v2922 = v2918.put(#(USAGE), #(562))::CL,33387
25466 :: CALL :: call :: Z :: v2927 = v2923.put(#(USE), #(668))::CL,33387
25474 :: CALL :: call :: Z :: v2932 = v2928.put(#(VIEW), #(567))::CL,33387
25482 :: CALL :: call :: Z :: v2937 = v2933.put(#(VARCHAR2), #(669))::CL,33387
25490 :: CALL :: call :: Z :: v2942 = v2938.put(#(WORK), #(568))::CL,33387
25498 :: CALL :: call :: Z :: v2947 = v2943.put(#(WRAPPER), #(570))::CL,33387
25506 :: CALL :: call :: Z :: v2952 = v2948.put(#(WRITE), #(569))::CL,33387
25514 :: CALL :: call :: Z :: v2957 = v2953.put(#(WRITE_DELAY), #(670))::CL,33387
25522 :: CALL :: call :: Z :: v2962 = v2958.put(#(ZONE), #(571))::CL,33387
25530 :: CALL :: call :: Z :: v2967 = v2963.put(#(ACOS), #(701))::CL,33387
25538 :: CALL :: call :: Z :: v2972 = v2968.put(#(ACTION_ID), #(702))::CL,33387
25546 :: CALL :: call :: Z :: v2977 = v2973.put(#(ADD_MONTHS), #(705))::CL,33387
25554 :: CALL :: call :: Z :: v2982 = v2978.put(#(ARRAY_SORT), #(703))::CL,33387
25562 :: CALL :: call :: Z :: v2987 = v2983.put(#(ASCII), #(704))::CL,33387
25570 :: CALL :: call :: Z :: v2992 = v2988.put(#(ASIN), #(706))::CL,33387
25578 :: CALL :: call :: Z :: v2997 = v2993.put(#(ATAN), #(707))::CL,33387
25586 :: CALL :: call :: Z :: v3002 = v2998.put(#(ATAN2), #(708))::CL,33387
25594 :: CALL :: call :: Z :: v3007 = v3003.put(#(BITAND), #(710))::CL,33387
25602 :: CALL :: call :: Z :: v3012 = v3008.put(#(BITANDNOT), #(711))::CL,33387
25610 :: CALL :: call :: Z :: v3017 = v3013.put(#(BITLENGTH), #(712))::CL,33387
25618 :: CALL :: call :: Z :: v3022 = v3018.put(#(BITNOT), #(713))::CL,33387
25626 :: CALL :: call :: Z :: v3027 = v3023.put(#(BITOR), #(714))::CL,33387
25634 :: CALL :: call :: Z :: v3032 = v3028.put(#(BITXOR), #(715))::CL,33387
25642 :: CALL :: call :: Z :: v3037 = v3033.put(#(CASEWHEN), #(594))::CL,33387
25650 :: CALL :: call :: Z :: v3042 = v3038.put(#(CONCAT), #(717))::CL,33387
25658 :: CALL :: call :: Z :: v3047 = v3043.put(#(CONCAT_WS), #(718))::CL,33387
25666 :: CALL :: call :: Z :: v3052 = v3048.put(#(CHR), #(716))::CL,33387
25674 :: CALL :: call :: Z :: v3057 = v3053.put(#(COS), #(719))::CL,33387
25682 :: CALL :: call :: Z :: v3062 = v3058.put(#(COSH), #(720))::CL,33387
25690 :: CALL :: call :: Z :: v3067 = v3063.put(#(COT), #(721))::CL,33387
25698 :: CALL :: call :: Z :: v3072 = v3068.put(#(DATABASE_NAME), #(726))::CL,33387
25706 :: CALL :: call :: Z :: v3077 = v3073.put(#(DATE_ADD), #(729))::CL,33387
25714 :: CALL :: call :: Z :: v3082 = v3078.put(#(DATE_SUB), #(730))::CL,33387
25722 :: CALL :: call :: Z :: v3087 = v3083.put(#(DATEADD), #(731))::CL,33387
25730 :: CALL :: call :: Z :: v3092 = v3088.put(#(DATEDIFF), #(732))::CL,33387
25738 :: CALL :: call :: Z :: v3097 = v3093.put(#(DATETIMEOFFSET), #(847))::CL,33387
25746 :: CALL :: call :: Z :: v3102 = v3098.put(#(DATENAME), #(848))::CL,33387
25754 :: CALL :: call :: Z :: v3107 = v3103.put(#(DATEPART), #(849))::CL,33387
25762 :: CALL :: call :: Z :: v3112 = v3108.put(#(DAY_NAME), #(733))::CL,33387
25770 :: CALL :: call :: Z :: v3117 = v3113.put(#(DAY_OF_MONTH), #(734))::CL,33387
25778 :: CALL :: call :: Z :: v3122 = v3118.put(#(DAY_OF_WEEK), #(735))::CL,33387
25786 :: CALL :: call :: Z :: v3127 = v3123.put(#(DAY_OF_YEAR), #(736))::CL,33387
25794 :: CALL :: call :: Z :: v3132 = v3128.put(#(DAYNAME), #(737))::CL,33387
25802 :: CALL :: call :: Z :: v3137 = v3133.put(#(DAYOFMONTH), #(738))::CL,33387
25810 :: CALL :: call :: Z :: v3142 = v3138.put(#(DAYOFWEEK), #(739))::CL,33387
25818 :: CALL :: call :: Z :: v3147 = v3143.put(#(DAYOFYEAR), #(740))::CL,33387
25826 :: CALL :: call :: Z :: v3152 = v3148.put(#(DAYS), #(741))::CL,33387
25834 :: CALL :: call :: Z :: v3157 = v3153.put(#(DBTIMEZONE), #(742))::CL,33387
25842 :: CALL :: call :: Z :: v3162 = v3158.put(#(DECODE), #(743))::CL,33387
25850 :: CALL :: call :: Z :: v3167 = v3163.put(#(DEGREES), #(744))::CL,33387
25858 :: CALL :: call :: Z :: v3172 = v3168.put(#(DIFFERENCE), #(745))::CL,33387
25866 :: CALL :: call :: Z :: v3177 = v3173.put(#(DMOD), #(746))::CL,33387
25874 :: CALL :: call :: Z :: v3182 = v3178.put(#(DUPLICATE), #(846))::CL,33387
25882 :: CALL :: call :: Z :: v3187 = v3183.put(#(EOMONTH), #(850))::CL,33387
25890 :: CALL :: call :: Z :: v3192 = v3188.put(#(FROM_TZ), #(747))::CL,33387
25898 :: CALL :: call :: Z :: v3197 = v3193.put(#(GREATEST), #(749))::CL,33387
25906 :: CALL :: call :: Z :: v3202 = v3198.put(#(HEXTORAW), #(748))::CL,33387
25914 :: CALL :: call :: Z :: v3207 = v3203.put(#(INSTR), #(752))::CL,33387
25922 :: CALL :: call :: Z :: v3212 = v3208.put(#(IFNULL), #(751))::CL,33387
25930 :: CALL :: call :: Z :: v3217 = v3213.put(#(ISNULL), #(758))::CL,33387
25938 :: CALL :: call :: Z :: v3222 = v3218.put(#(LAST_DAY), #(759))::CL,33387
25946 :: CALL :: call :: Z :: v3227 = v3223.put(#(LCASE), #(760))::CL,33387
25954 :: CALL :: call :: Z :: v3232 = v3228.put(#(LEAST), #(761))::CL,33387
25962 :: CALL :: call :: Z :: v3237 = v3233.put(#(LITERAL), #(627))::CL,33387
25970 :: CALL :: call :: Z :: v3242 = v3238.put(#(LIVE), #(628))::CL,33387
25978 :: CALL :: call :: Z :: v3247 = v3243.put(#(LOAD), #(629))::CL,33387
25986 :: CALL :: call :: Z :: v3252 = v3248.put(#(LOAD_FILE), #(762))::CL,33387
25994 :: CALL :: call :: Z :: v3257 = v3253.put(#(LOCATE), #(763))::CL,33387
26002 :: CALL :: call :: Z :: v3262 = v3258.put(#(LOG), #(765))::CL,33387
26010 :: CALL :: call :: Z :: v3267 = v3263.put(#(LOG10), #(766))::CL,33387
26018 :: CALL :: call :: Z :: v3272 = v3268.put(#(LPAD), #(767))::CL,33387
26026 :: CALL :: call :: Z :: v3277 = v3273.put(#(LTRIM), #(768))::CL,33387
26034 :: CALL :: call :: Z :: v3282 = v3278.put(#(MONTH_NAME), #(770))::CL,33387
26042 :: CALL :: call :: Z :: v3287 = v3283.put(#(MONTHNAME), #(771))::CL,33387
26050 :: CALL :: call :: Z :: v3292 = v3288.put(#(MONTHS_BETWEEN), #(772))::CL,33387
26058 :: CALL :: call :: Z :: v3297 = v3293.put(#(NAMES), #(468))::CL,33387
26066 :: CALL :: call :: Z :: v3302 = v3298.put(#(NANVL), #(852))::CL,33387
26074 :: CALL :: call :: Z :: v3307 = v3303.put(#(NEWID), #(851))::CL,33387
26082 :: CALL :: call :: Z :: v3312 = v3308.put(#(NEW_TIME), #(775))::CL,33387
26090 :: CALL :: call :: Z :: v3317 = v3313.put(#(NEXT_DAY), #(776))::CL,33387
26098 :: CALL :: call :: Z :: v3322 = v3318.put(#(NOWAIT), #(641))::CL,33387
26106 :: CALL :: call :: Z :: v3327 = v3323.put(#(NUMTODSINTERVAL), #(779))::CL,33387
26114 :: CALL :: call :: Z :: v3332 = v3328.put(#(NUMTOYMINTERVAL), #(780))::CL,33387
26122 :: CALL :: call :: Z :: v3336 = v3333.put(#(NVL), #(751))::CL,33387
26130 :: CALL :: call :: Z :: v3341 = v3337.put(#(OCTETLENGTH), #(781))::CL,33387
26138 :: CALL :: call :: Z :: v3346 = v3342.put(#(PI), #(782))::CL,33387
26146 :: CALL :: call :: Z :: v3351 = v3347.put(#(POSITION_ARRAY), #(783))::CL,33387
26154 :: CALL :: call :: Z :: v3356 = v3352.put(#(QUARTER), #(784))::CL,33387
26162 :: CALL :: call :: Z :: v3361 = v3357.put(#(RADIANS), #(785))::CL,33387
26170 :: CALL :: call :: Z :: v3366 = v3362.put(#(RAND), #(786))::CL,33387
26178 :: CALL :: call :: Z :: v3371 = v3367.put(#(RAWTOHEX), #(787))::CL,33387
26186 :: CALL :: call :: Z :: v3376 = v3372.put(#(REGEXP_MATCHES), #(788))::CL,33387
26194 :: CALL :: call :: Z :: v3381 = v3377.put(#(REGEXP_REPLACE), #(789))::CL,33387
26202 :: CALL :: call :: Z :: v3386 = v3382.put(#(REGEXP_SUBSTRING), #(790))::CL,33387
26210 :: CALL :: call :: Z :: v3391 = v3387.put(#(REGEXP_SUBSTRING_ARRAY), #(791))::CL,33387
26218 :: CALL :: call :: Z :: v3396 = v3392.put(#(REPLACE), #(792))::CL,33387
26226 :: CALL :: call :: Z :: v3401 = v3397.put(#(REVERSE), #(793))::CL,33387
26234 :: CALL :: call :: Z :: v3406 = v3402.put(#(ROUND), #(794))::CL,33387
26242 :: CALL :: call :: Z :: v3411 = v3407.put(#(ROUNDMAGIC), #(795))::CL,33387
26250 :: CALL :: call :: Z :: v3416 = v3412.put(#(RPAD), #(797))::CL,33387
26258 :: CALL :: call :: Z :: v3421 = v3417.put(#(RTRIM), #(796))::CL,33387
26266 :: CALL :: call :: Z :: v3426 = v3422.put(#(SECONDS_SINCE_MIDNIGHT), #(798))::CL,33387
26274 :: CALL :: call :: Z :: v3431 = v3427.put(#(SESSION_ID), #(800))::CL,33387
26282 :: CALL :: call :: Z :: v3436 = v3432.put(#(SESSIONTIMEZONE), #(803))::CL,33387
26290 :: CALL :: call :: Z :: v3441 = v3437.put(#(SIGN), #(804))::CL,33387
26298 :: CALL :: call :: Z :: v3446 = v3442.put(#(SIN), #(805))::CL,33387
26306 :: CALL :: call :: Z :: v3451 = v3447.put(#(SINH), #(806))::CL,33387
26314 :: CALL :: call :: Z :: v3456 = v3452.put(#(SORT_ARRAY), #(807))::CL,33387
26322 :: CALL :: call :: Z :: v3461 = v3457.put(#(SOUNDEX), #(808))::CL,33387
26330 :: CALL :: call :: Z :: v3466 = v3462.put(#(SPACE), #(536))::CL,33387
26338 :: CALL :: call :: Z :: v3471 = v3467.put(#(SUBSTR), #(810))::CL,33387
26346 :: CALL :: call :: Z :: v3476 = v3472.put(#(SYS), #(811))::CL,33387
26354 :: CALL :: call :: Z :: v3481 = v3477.put(#(SYS_EXTRACT_UTC), #(812))::CL,33387
26362 :: CALL :: call :: Z :: v3486 = v3482.put(#(SYS_GUID), #(853))::CL,33387
26370 :: CALL :: call :: Z :: v3491 = v3487.put(#(SYSDATE), #(813))::CL,33387
26378 :: CALL :: call :: Z :: v3496 = v3492.put(#(SYSTIMESTAMP), #(814))::CL,33387
26386 :: CALL :: call :: Z :: v3501 = v3497.put(#(TAN), #(815))::CL,33387
26394 :: CALL :: call :: Z :: v3506 = v3502.put(#(TANH), #(816))::CL,33387
26402 :: CALL :: call :: Z :: v3511 = v3507.put(#(TO_CHAR), #(821))::CL,33387
26410 :: CALL :: call :: Z :: v3516 = v3512.put(#(TO_DATE), #(822))::CL,33387
26418 :: CALL :: call :: Z :: v3521 = v3517.put(#(TO_DSINTERVAL), #(823))::CL,33387
26426 :: CALL :: call :: Z :: v3526 = v3522.put(#(TO_YMINTERVAL), #(824))::CL,33387
26434 :: CALL :: call :: Z :: v3531 = v3527.put(#(TO_NUMBER), #(825))::CL,33387
26442 :: CALL :: call :: Z :: v3536 = v3532.put(#(TO_TIMESTAMP), #(826))::CL,33387
26450 :: CALL :: call :: Z :: v3541 = v3537.put(#(TO_TIMESTAMP_TZ), #(827))::CL,33387
26458 :: CALL :: call :: Z :: v3546 = v3542.put(#(TODAY), #(828))::CL,33387
26466 :: CALL :: call :: Z :: v3551 = v3547.put(#(TRUNC), #(832))::CL,33387
26474 :: CALL :: call :: Z :: v3556 = v3552.put(#(UCASE), #(834))::CL,33387
26482 :: CALL :: call :: Z :: v3561 = v3557.put(#(TRANSACTION_ID), #(830))::CL,33387
26490 :: CALL :: call :: Z :: v3566 = v3562.put(#(TRANSACTION_SIZE), #(831))::CL,33387
26498 :: CALL :: call :: Z :: v3571 = v3567.put(#(TZ_OFFSET), #(833))::CL,33387
26506 :: CALL :: call :: Z :: v3576 = v3572.put(#(UUID), #(837))::CL,33387
26514 :: CALL :: call :: Z :: v3581 = v3577.put(#(UNIX_MILLIS), #(835))::CL,33387
26522 :: CALL :: call :: Z :: v3586 = v3582.put(#(UNIX_TIMESTAMP), #(836))::CL,33387
26530 :: CALL :: call :: Z :: v3591 = v3587.put(#(WEEK), #(838))::CL,33387
26538 :: CALL :: call :: Z :: v3596 = v3592.put(#(WEEK_OF_YEAR), #(839))::CL,33387
26546 :: CALL :: call :: Z :: v3601 = v3597.put(#(ISOLATION_LEVEL), #(757))::CL,33387
26554 :: CALL :: call :: Z :: v3606 = v3602.put(#(SESSION_ISOLATION_LEVEL), #(801))::CL,33387
26562 :: CALL :: call :: Z :: v3611 = v3607.put(#(DATABASE_ISOLATION_LEVEL), #(725))::CL,33387
26570 :: CALL :: call :: Z :: v3616 = v3612.put(#(TRANSACTION_CONTROL), #(829))::CL,33387
26578 :: CALL :: call :: Z :: v3621 = v3617.put(#(TIMEZONE), #(820))::CL,33387
26586 :: CALL :: call :: Z :: v3626 = v3622.put(#(SESSION_TIMEZONE), #(802))::CL,33387
26594 :: CALL :: call :: Z :: v3631 = v3627.put(#(DATABASE_TIMEZONE), #(727))::CL,33387
26602 :: CALL :: call :: Z :: v3636 = v3632.put(#(DATABASE_VERSION), #(728))::CL,33387
26610 :: CALL :: call :: Z :: v3641 = v3637.put(#(LOB_ID), #(769))::CL,33387
26618 :: CALL :: call :: Z :: v3646 = v3642.put(#(SEQUENCE_ARRAY), #(799))::CL,33387
26626 :: CALL :: call :: Z :: v3651 = v3647.put(#(*), #(921))::CL,33387
26634 :: CALL :: call :: Z :: v3656 = v3652.put(#()), #(922))::CL,33387
26642 :: CALL :: call :: Z :: v3661 = v3657.put(#(:), #(923))::CL,33387
26650 :: CALL :: call :: Z :: v3666 = v3662.put(#(,), #(924))::CL,33387
26658 :: CALL :: call :: Z :: v3671 = v3667.put(#(||), #(925))::CL,33387
26666 :: CALL :: call :: Z :: v3676 = v3672.put(#(/), #(926))::CL,33387
26674 :: CALL :: call :: Z :: v3681 = v3677.put(#(=), #(417))::CL,33387
26682 :: CALL :: call :: Z :: v3686 = v3682.put(#(>), #(929))::CL,33387
26690 :: CALL :: call :: Z :: v3691 = v3687.put(#(>=), #(930))::CL,33387
26698 :: CALL :: call :: Z :: v3696 = v3692.put(#([), #(931))::CL,33387
26706 :: CALL :: call :: Z :: v3701 = v3697.put(#(<), #(932))::CL,33387
26714 :: CALL :: call :: Z :: v3706 = v3702.put(#(<=), #(933))::CL,33387
26722 :: CALL :: call :: Z :: v3711 = v3707.put(#(-), #(934))::CL,33387
26730 :: CALL :: call :: Z :: v3716 = v3712.put(#(<>), #(935))::CL,33387
26738 :: CALL :: call :: Z :: v3720 = v3717.put(#(!=), #(935))::CL,33387
26746 :: CALL :: call :: Z :: v3725 = v3721.put(#((), #(936))::CL,33387
26754 :: CALL :: call :: Z :: v3730 = v3726.put(#(+), #(937))::CL,33387
26762 :: CALL :: call :: Z :: v3735 = v3731.put(#(?), #(938))::CL,33387
26770 :: CALL :: call :: Z :: v3740 = v3736.put(#(]), #(940))::CL,33387
26778 :: CALL :: call :: Z :: v3745 = v3741.put(#(;), #(941))::CL,33387
26791 :: NORM :: declaration :: [S :: v3748 = new []::DD,27065
27059 :: CALL :: call :: Z :: v3754 = v3751.add(v3752)::CL,33826
27064 :: EXPR :: assign :: Ljava/lang/Object :: v3755 = v3756 + #(1)::DD,27217
27065 :: EXPR :: assign :: I :: v3750 = v3748.length::CF,27066
27066 :: PRED :: IF :: Z :: if (v3756 < v3750) goto 9991::CD,27059:CD,27064:CD,27065:CD,27217:CF,27067
27067 :: NORM :: declaration :: [S :: v3757 = new []::
27068 :: EXPR :: modify :: S :: v3757[#(0)] = #(340)::
27072 :: EXPR :: modify :: S :: v3757[#(1)] = #(183)::
27076 :: EXPR :: modify :: S :: v3757[#(2)] = #(78)::
27080 :: EXPR :: modify :: S :: v3757[#(3)] = #(137)::
27084 :: EXPR :: modify :: S :: v3757[#(4)] = #(179)::
27088 :: EXPR :: modify :: S :: v3757[#(5)] = #(264)::
27094 :: NORM :: declaration :: [Ljava/lang/String :: v3758 = new java.lang.String[]::
27095 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(0)] = #(YEAR)::
27099 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(1)] = #(MONTH)::
27103 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(2)] = #(DAY)::
27107 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(3)] = #(HOUR)::
27111 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(4)] = #(MINUTE)::
27115 :: EXPR :: modify :: Ljava/lang/Object :: v3758[#(5)] = #(SECOND)::
27130 :: CALL :: call :: Ljava/lang/Object :: v3763 = v3761.put(#(987), #(SQL_TSI_DAY))::CL,34457
27138 :: CALL :: call :: Ljava/lang/Object :: v3766 = v3764.put(#(981), #(SQL_TSI_FRAC_SECOND))::CL,34457
27146 :: CALL :: call :: Ljava/lang/Object :: v3771 = v3767.put(#(983), #(SQL_TSI_MICRO_SECOND))::CL,34457
27154 :: CALL :: call :: Ljava/lang/Object :: v3774 = v3772.put(#(982), #(SQL_TSI_MILLI_SECOND))::CL,34457
27162 :: CALL :: call :: Ljava/lang/Object :: v3777 = v3775.put(#(986), #(SQL_TSI_HOUR))::CL,34457
27170 :: CALL :: call :: Ljava/lang/Object :: v3780 = v3778.put(#(985), #(SQL_TSI_MINUTE))::CL,34457
27178 :: CALL :: call :: Ljava/lang/Object :: v3783 = v3781.put(#(989), #(SQL_TSI_MONTH))::CL,34457
27186 :: CALL :: call :: Ljava/lang/Object :: v3786 = v3784.put(#(990), #(SQL_TSI_QUARTER))::CL,34457
27194 :: CALL :: call :: Ljava/lang/Object :: v3789 = v3787.put(#(984), #(SQL_TSI_SECOND))::CL,34457
27202 :: CALL :: call :: Ljava/lang/Object :: v3792 = v3790.put(#(988), #(SQL_TSI_WEEK))::CL,34457
27210 :: CALL :: call :: Ljava/lang/Object :: v3795 = v3793.put(#(991), #(SQL_TSI_YEAR))::CL,34457
27217 :: EXPR :: assign :: null :: PHI v3756 = #(0), v3755::DD,27064:DD,27066:CF,27065
29760 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalSecondData.<clinit>()::CD,29765
29765 :: CALL :: call :: Lorg/hsqldb/types/IntervalSecondData :: v5 = newIntervalDay(#(1 l), v3)::CL,35993
30080 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.FileAccessRes.isStreamElement(java.lang.String)::CE,30081:CD,30089:CD,30094:CD,30109:CD,30113:CD,30114:JM,30103
30081 :: EXIT :: exit :: Z :: org.hsqldb.lib.FileUtil.FileAccessRes.isStreamElement(java.lang.String)::JM,262
30089 :: CALL :: call :: Ljava/net/URL :: v8 = v6.getResource(p1 $fileName )::JM,30113:JM,30114:JM,30094
30094 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 37::CF,30114:CD,30098:CD,30102
30098 :: CALL :: call :: Ljava/lang/ClassLoader :: v12 = v10.getContextClassLoader()::JM,30114:JM,30102:JM,30103
30102 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 37::CF,30114:CD,30103
30103 :: CALL :: call :: Ljava/net/URL :: v14 = v12.getResource(p1 $fileName )::JM,30114:JM,30103
30109 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 43::CD,30110:CD,30111
30110 :: NORM :: compound :: Z :: return #(1)::DD,30081
30111 :: NORM :: compound :: Z :: return #(0)::DD,30081
30113 :: EXPR :: assign :: null :: PHI v16 = #(null), #(null), v8, v8, v8::DD,30114
30114 :: EXPR :: assign :: null :: PHI v18 = v8, v8, v14, v16::DD,30109
30131 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.isStreamElement(java.lang.String)::CE,30132:CD,30136:CD,30141:CD,30145
30132 :: EXIT :: exit :: Z :: org.hsqldb.lib.FileUtil.isStreamElement(java.lang.String)::JM,262
30136 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::
30141 :: CALL :: call :: Z :: v7 = v4.exists()::JM,30145
30145 :: NORM :: compound :: Z :: return v7::DD,30132
30204 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(int,java.lang.String)::CD,30209
30209 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(null), p1 $code , p2 $add )::CL,36514
30219 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.setVariables()::CD,30229:CD,30234:CD,30321:CD,30325:CD,30418:CD,30525
30223 :: EXPR :: reference :: Lorg/hsqldb/Database :: v3 = p0 $this .database::
30226 :: EXPR :: reference :: Lorg/hsqldb/persist/HsqlProperties :: v4 = v3.urlProperties::JM,30229:JM,30234
30229 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getProperty(#(crypt_key))::JM,30229:JM,30234
30234 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 79::JM,36723:JM,36711:JM,36729:JM,36717:JM,36735
30318 :: EXPR :: reference :: Lorg/hsqldb/Database :: v42 = p0 $this .database::JM,30321:JM,30325
30321 :: CALL :: call :: Z :: v44 = v42.isFilesReadOnly()::JM,30321:JM,30325
30325 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 224::CD,30329:CD,30333:CD,30335:CD,30387
30326 :: EXPR :: reference :: Lorg/hsqldb/Database :: v45 = p0 $this .database::JM,30329:JM,30335
30329 :: CALL :: call :: Lorg/hsqldb/DatabaseType :: v47 = v45.getType()::JM,30329:JM,30335
30333 :: EXPR :: reference :: Lorg/hsqldb/DatabaseType :: v48 = org.hsqldb.DatabaseType.DB_MEM::CF,30335
30335 :: PRED :: IF :: Z :: if (v47 == v48) goto 156::CD,30339:CD,30343:CD,30347
30336 :: EXPR :: reference :: Z :: v49 = p0 $this .isStoredFileAccess::DD,30339
30339 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 175::CD,30343:CD,30347:CD,30356:CD,30364:CD,30372:CD,30377
30340 :: EXPR :: reference :: Lorg/hsqldb/Database :: v62 = p0 $this .database::JM,30352:JM,30343:JM,30347
30343 :: CALL :: call :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v64 = v62.getProperties()::JM,30352:JM,30343:JM,30347
30347 :: CALL :: call :: Ljava/lang/String :: v67 = v64.getStringProperty(#(hsqldb.temp_directory))::JM,30352:JM,30347
30352 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tempDirectoryPath = v67::
30356 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,30381
30364 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v53)::
30372 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v50.append(#(.tmp))::JM,30381
30377 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::JM,30381
30381 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tempDirectoryPath = v61::
30384 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .tempDirectoryPath::DD,30387
30387 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 224::CD,30391
30391 :: CALL :: call :: Ljava/lang/String :: v71 = makeDirectories(v69)::CL,36793
30412 :: EXPR :: reference :: Lorg/hsqldb/Database :: v77 = p0 $this .database::
30415 :: EXPR :: reference :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v78 = v77.databaseProperties::JM,30418:JM,30526
30418 :: CALL :: call :: Z :: v80 = v78.isVersion18()::JM,30418:JM,30526
30522 :: EXPR :: reference :: Z :: v115 = p0 $this .isNewDatabase::DD,30525
30525 :: PRED :: IF :: Z :: if (v115 != #(0)) goto 388::CD,30526:CD,31332:CD,31362:CD,31372:CD,31378
30526 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 388::CD,31332:CD,31362:CD,31372:CD,31378
31332 :: CALL :: call :: V :: p0 $this .setLobFileScaleNoCheck(v405)::CL,36965
31362 :: CALL :: call :: V :: p0 $this .setDataFileScaleNoCheck(v417)::CL,36995
31366 :: EXPR :: reference :: Lorg/hsqldb/Database :: v419 = p0 $this .database::
31369 :: EXPR :: reference :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v420 = v419.databaseProperties::JM,31378:JM,31372
31372 :: CALL :: call :: I :: v423 = v420.getIntegerProperty(#(hsqldb.files_space), #(0))::JM,31378:JM,31372
31378 :: PRED :: IF :: Z :: if (v423 == #(0)) goto 1493::CD,31379
31379 :: CALL :: call :: V :: p0 $this .setDataFileSpaces(v423)::CL,37023
31833 :: CALL :: call :: V :: p0 $this .setLevel(p2 $level )::CL,37113
31860 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.isFileDatabase()::CE,31861:CD,31867
31861 :: EXIT :: exit :: Z :: org.hsqldb.persist.Logger.isFileDatabase()::JM,590
31864 :: EXPR :: reference :: Z :: v3 = p0 $this .propIsFileDatabase::DD,31867
31867 :: NORM :: compound :: Z :: return v3::CF,31861
31869 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.acquireLock(java.lang.String)::CD,31877
31874 :: EXPR :: reference :: Lorg/hsqldb/persist/LockFile :: v4 = p0 $this .lockFile::DD,31877
31877 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 10::CD,31879
31879 :: CALL :: call :: Lorg/hsqldb/persist/LockFile :: v7 = newLockFileLock(p1 $path )::CL,37128
32473 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::JM,32483:JM,32488
32478 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::JM,32483:JM,32488
32483 :: CALL :: call :: Z :: v11 = v4.equals(v7)::JM,32483:JM,32488
32488 :: EXPR :: modify :: Z :: p0 $this .fsIsIgnoreCase = v11::
32491 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::JM,32502:JM,32507
32496 :: CALL :: call :: Ljava/lang/String :: v16 = v12.getPath()::JM,32502:JM,32507
32500 :: EXPR :: reference :: Ljava/lang/String :: v17 = java.io.File.separator::JM,32502:JM,32507
32502 :: CALL :: call :: Z :: v19 = v16.endsWith(v17)::JM,32502:JM,32507
32507 :: EXPR :: modify :: Z :: p0 $this .fsNormalizesPosixSeparator = v19::
32510 :: NORM :: declaration :: Ljava/util/Random :: v20 = new java.util.Random::DD,32518:CF,32511
32511 :: CALL :: call :: J :: v22 = currentTimeMillis()::
32518 :: EXPR :: modify :: Ljava/util/Random :: p0 $this .random = v20::
32554 :: ENTR :: entry :: null :: org.hsqldb.lib.StringUtil.split(java.lang.String,java.lang.String)::CE,32555:JM,33306:CD,32591:CD,32597:CD,32602:CD,32603:CD,32606:CD,32607:JM,32570:JM,32605:JM,32590
32555 :: EXIT :: exit :: [Ljava/lang/String :: org.hsqldb.lib.StringUtil.split(java.lang.String,java.lang.String)::JM,1428
32564 :: CALL :: call :: I :: v9 = p1 $s .indexOf(p2 $separator , v22)::JM,32570:JM,32605:JM,32590
32570 :: PRED :: IF :: Z :: if (v9 != #(-1)) goto 44::CF,32604:CD,32571:CD,32605:JM,32570:JM,32590
32571 :: CALL :: call :: I :: v12 = p1 $s .length()::JM,32570:JM,32605:JM,32590
32575 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $s .substring(v22, v14)::JM,32570:JM,32605:JM,32590
32581 :: CALL :: call :: Z :: v18 = v4.add(v16)::CL,38308
32586 :: CALL :: call :: I :: v20 = p2 $separator .length()::JM,32570:JM,32605:JM,32590
32590 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v14 + v20::DD,32606
32591 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 19::CD,32564:CD,32570:CD,32575:CD,32581:CD,32586:CD,32590:CD,32604:CD,32605:CD,32606:CD,32607
32597 :: CALL :: call :: Ljava/lang/Object :: v28 = v4.toArray(v26)::JM,32602:CL,38361
32602 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::CF,32603
32603 :: NORM :: compound :: [Ljava/lang/String :: return v29::DD,32555
32604 :: EXPR :: assign :: null :: PHI v13 = v23, #(0)::CF,32605:DD,32607
32605 :: EXPR :: assign :: null :: PHI v14 = v9, v12::JM,32570:JM,32605:DD,32590
32606 :: EXPR :: assign :: null :: PHI v22 = #(0), v21::CF,32607:JM,32570:JM,32605:JM,32590
32607 :: EXPR :: assign :: null :: PHI v23 = #(1), v13::DD,32591:DD,32604
32634 :: ENTR :: entry :: null :: org.hsqldb.lib.HashSet.add(java.lang.Object)::CD,32643
32643 :: CALL :: call :: Ljava/lang/Object :: v10 = p0 $this .addOrRemove(#(0 l), #(0 l), p1 $key , #(null), #(0))::CL,38427
32690 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlProperties.getMeta(java.lang.String,int,boolean)::CD,32696:CD,32701:CD,32713:CD,32724:JM,32697
32696 :: NORM :: declaration :: [Ljava/lang/Object :: v6 = new java.lang.Object[]::
32697 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = p1 $name ::
32701 :: CALL :: call :: Ljava/lang/Integer :: v10 = getInt(p2 $type )::JM,32705:CL,33614
32705 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v10::
32709 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = #(Boolean)::
32713 :: PRED :: IF :: Z :: if (p3 $defaultValue  == #(0)) goto 35::CD,32714:CD,32717:CD,32724
32714 :: EXPR :: reference :: Ljava/lang/Boolean :: v15 = java.lang.Boolean.TRUE::DD,32724
32717 :: EXPR :: reference :: Ljava/lang/Boolean :: v14 = java.lang.Boolean.FALSE::CF,32724
32719 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v16::
32724 :: EXPR :: assign :: null :: PHI v16 = v15, v14::DD,32719
32743 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.put(java.lang.Object,java.lang.Object)::CD,32749
32749 :: CALL :: call :: Ljava/lang/Object :: v8 = p0 $this .addOrRemove(#(0 l), #(0 l), p1 $key , p2 $value , #(0))::CL,38427
32765 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlProperties.getMeta(java.lang.String,int,java.lang.String)::CD,32771:CD,32776:JM,32772:JM,32788
32771 :: NORM :: declaration :: [Ljava/lang/Object :: v6 = new java.lang.Object[]::
32772 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = p1 $name ::
32776 :: CALL :: call :: Ljava/lang/Integer :: v10 = getInt(p2 $type )::JM,32780:CL,33614
32780 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v10::
32784 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = #(String)::
32788 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = p3 $defaultValue ::
32808 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlProperties.getMeta(java.lang.String,int,int,int,int)::CD,32816:CD,32821:CD,32833:CD,32841:CD,32847:CD,32855:JM,32817
32816 :: NORM :: declaration :: [Ljava/lang/Object :: v8 = new java.lang.Object[]::
32817 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(0)] = p1 $name ::
32821 :: CALL :: call :: Ljava/lang/Integer :: v12 = getInt(p2 $type )::JM,32825:CL,33614
32825 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(1)] = v12::
32829 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(2)] = #(Integer)::
32833 :: CALL :: call :: Ljava/lang/Integer :: v17 = getInt(p3 $defaultValue )::JM,32837:CL,33614
32837 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(4)] = v17::
32841 :: EXPR :: reference :: Ljava/lang/Boolean :: v19 = java.lang.Boolean.TRUE::DD,32843
32843 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(3)] = v19::
32847 :: CALL :: call :: Ljava/lang/Integer :: v22 = getInt(p4 $rangeLow )::JM,32851:CL,33614
32851 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(5)] = v22::
32855 :: CALL :: call :: Ljava/lang/Integer :: v25 = getInt(p5 $rangeHigh )::JM,32859:CL,33614
32859 :: EXPR :: modify :: Ljava/lang/Object :: v8[#(6)] = v25::
32888 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.putAll(org.hsqldb.lib.HashMap)::CD,32893:CD,32897:CD,32917:CD,32921
32893 :: CALL :: call :: Lorg/hsqldb/lib/Set :: v5 = p1 $t .keySet()::CL,39348
32897 :: CALL :: call :: Lorg/hsqldb/lib/Iterator :: v7 = v5.iterator()::CL,39374
32902 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::CL,35178
32906 :: CALL :: call :: Ljava/lang/Object :: v14 = p1 $t .get(v12)::CL,39397
32911 :: CALL :: call :: Ljava/lang/Object :: v16 = p0 $this .put(v12, v14)::CL,32743
32917 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,32921:CL,35301
32921 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 14::CD,32902:CD,32906:CD,32911:CD,32917
32934 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlProperties.getMeta(java.lang.String,int)::CD,32939:CD,32944:CD,32956:JM,32940
32939 :: NORM :: declaration :: [Ljava/lang/Object :: v5 = new java.lang.Object[]::
32940 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(0)] = p1 $name ::
32944 :: CALL :: call :: Ljava/lang/Integer :: v9 = getInt(p2 $type )::JM,32948:CL,33614
32948 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(1)] = v9::
32952 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(2)] = #(Long)::
32956 :: CALL :: call :: Ljava/lang/Long :: v15 = valueOf(#(0 l))::JM,32960
32960 :: EXPR :: modify :: Ljava/lang/Object :: v5[#(4)] = v15::
32980 :: ENTR :: entry :: null :: org.hsqldb.persist.HsqlProperties.getMeta(java.lang.String,int,int,[])::CD,32987:CD,32992:CD,33004:JM,32988:JM,33012
32987 :: NORM :: declaration :: [Ljava/lang/Object :: v7 = new java.lang.Object[]::
32988 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = p1 $name ::
32992 :: CALL :: call :: Ljava/lang/Integer :: v11 = getInt(p2 $type )::JM,32996:CL,33614
32996 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(1)] = v11::
33000 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(2)] = #(Integer)::
33004 :: CALL :: call :: Ljava/lang/Integer :: v16 = getInt(p3 $defaultValue )::JM,33008:CL,33614
33008 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(4)] = v16::
33012 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(7)] = p4 $values ::
33035 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getBundleHandle(java.lang.String,java.lang.ClassLoader)::CD,33040:CD,33045:CD,33050:CD,33057:CD,33058:CD,33060:CD,33064:CD,33072:CD,33077:CD,33083:CD,33088:CD,33089
33040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
33045 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v4.append(p1 $name )::
33050 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::
33057 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
33058 :: EXPR :: reference :: Ljava/util/Locale :: v13 = org.hsqldb.resources.ResourceBundleHandler.locale::
33060 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
33064 :: CALL :: call :: Ljava/lang/String :: v17 = valueOf(v15)::
33072 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v12.append(v10)::
33077 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
33083 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(v22)::JM,33088:CL,39397
33088 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,33089
33089 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 109::CD,33092:CD,33100:CD,33107:CD,33111:CD,33112:CD,33118
33092 :: CALL :: call :: Ljava/util/ResourceBundle :: v30 = getBundle(v10, v28, p2 $cl )::CL,39433
33100 :: CALL :: call :: Z :: v33 = v31.add(v30)::CL,38308
33107 :: CALL :: call :: I :: v36 = v34.size()::JM,33111:CL,38352
33111 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v36 - #(1)::
33112 :: CALL :: call :: Ljava/lang/Integer :: v40 = valueOf(v38)::
33118 :: CALL :: call :: Ljava/lang/Object :: v43 = v41.put(v22, v40)::CL,32743
33306 :: NORM :: declaration :: [Ljava/lang/Object :: v5 = new java.lang.Object[]::DD,33307
33307 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .elementData = v5::
33314 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getNewGetBundleMethod()::CD,33334
33334 :: CALL :: call :: Ljava/lang/reflect/Method :: v13 = v2.getMethod(#(getBundle), v4)::
33367 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .value = p3 $value ::
33387 :: ENTR :: entry :: null :: org.hsqldb.lib.IntValueHashMap.put(java.lang.Object,int)::CD,33394:CD,33404
33394 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v16 = new java.util.NoSuchElementException::
33404 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .addOrRemove(#(0 l), v9, p1 $key , #(null), #(0))::CL,38427
33494 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.initPool()::CD,33503:CD,33505:CD,33506:CD,33528:CD,33530:CD,33577
33503 :: EXPR :: reference :: I :: v6 = org.hsqldb.map.ValuePool.POOLS_COUNT::CF,33505
33505 :: NORM :: declaration :: [Lorg/hsqldb/map/ValuePoolHashMap :: v7 = new org.hsqldb.map.ValuePoolHashMap[]::CF,33506
33506 :: EXPR :: modify :: [Lorg/hsqldb/map/ValuePoolHashMap :: org.hsqldb.map.ValuePool.poolList = v7::
33513 :: EXPR :: reference :: [Lorg/hsqldb/map/ValuePoolHashMap :: v11 = org.hsqldb.map.ValuePool.poolList::CF,33515
33515 :: NORM :: declaration :: Lorg/hsqldb/map/ValuePoolHashMap :: v12 = new org.hsqldb.map.ValuePoolHashMap::DD,33523
33523 :: EXPR :: modify :: Ljava/lang/Object :: v11[v17] = v12::
33527 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,33577
33528 :: EXPR :: reference :: I :: v9 = org.hsqldb.map.ValuePool.POOLS_COUNT::CF,33530
33530 :: PRED :: IF :: Z :: if (v17 < v9) goto 32::CD,33513:CD,33515:JM,39649:JM,39266:JM,39652:JM,39236:JM,39269:JM,39176:JM,39211:JM,39275:JM,39181:JM,39245:JM,48782:JM,48787:JM,39220:JM,39254:JM,39198:CD,33527:CD,33528:CD,33577
33577 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,33527:DD,33530
33614 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.getInt(int)::CE,33615:CD,33623:CD,33629
33615 :: EXIT :: exit :: Ljava/lang/Integer :: org.hsqldb.map.ValuePool.getInt(int)::JM,32705:JM,32780:JM,32825:JM,32837:JM,32851:JM,32859:JM,32948:JM,32996:JM,33008
33623 :: CALL :: call :: Ljava/lang/Integer :: v6 = v4.getOrAddInteger(p1 $val )::JM,33629:CL,39665
33629 :: NORM :: compound :: Ljava/lang/Integer :: return v6::DD,33615
33638 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePool.getBigDecimal(java.math.BigDecimal)::CD,33642
33642 :: PRED :: IF :: Z :: if (p1 $val  != #(null)) goto 6::CD,33649
33649 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.getOrAddObject(p1 $val )::CL,39867
33668 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(int)::CD,33672
33672 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v6 = error(#(null), p1 $code , #(0), #(null))::CL,40052
33706 :: ENTR :: entry :: null :: org.hsqldb.error.Error.runtimeError(int,java.lang.String)::CD,33711:CD,33716:CD,33717
33711 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v5 = error(p1 $code , p2 $add )::CL,30204
33716 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v6 = new java.lang.RuntimeException::
33717 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getMessage()::CL,40150
33815 :: EXPR :: modify :: Z :: p0 $this .isList = #(1)::
33826 :: ENTR :: entry :: null :: org.hsqldb.lib.OrderedIntHashSet.add(int)::CD,33836
33836 :: CALL :: call :: Ljava/lang/Object :: v11 = p0 $this .addOrRemove(v6, #(0 l), #(null), #(null), #(0))::CL,38427
33916 :: ENTR :: entry :: null :: org.hsqldb.types.Charset.getDefaultInstance()::CF,33917:CD,33919:CD,33921
33917 :: EXIT :: exit :: Lorg/hsqldb/types/Charset :: org.hsqldb.types.Charset.getDefaultInstance()::JM,34124
33919 :: EXPR :: reference :: Lorg/hsqldb/types/Charset :: v2 = org.hsqldb.types.Charset.SQL_TEXT::CF,33921
33921 :: NORM :: compound :: Lorg/hsqldb/types/Charset :: return v2::CF,33917
33923 :: ENTR :: entry :: null :: org.hsqldb.types.Collation.getDefaultInstance()::CF,33924:CD,33926:CD,33928
33924 :: EXIT :: exit :: Lorg/hsqldb/types/Collation :: org.hsqldb.types.Collation.getDefaultInstance()::JM,34118
33926 :: EXPR :: reference :: Lorg/hsqldb/types/Collation :: v2 = org.hsqldb.types.Collation.defaultCollation::CF,33928
33928 :: NORM :: compound :: Lorg/hsqldb/types/Collation :: return v2::CF,33924
33930 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newResultMetaData(int)::CE,33931:CD,33935:CD,33942
33931 :: EXIT :: exit :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.ResultMetaData.newResultMetaData(int)::JM,9079
33935 :: CALL :: call :: Lorg/hsqldb/result/ResultMetaData :: v6 = newResultMetaData(v3, #(null), p1 $colCount , p1 $colCount )::JM,33942:CL,40454
33942 :: NORM :: compound :: Lorg/hsqldb/result/ResultMetaData :: return v6::DD,33931
33960 :: EXPR :: modify :: B :: p0 $this .nullability = #(1)::
33963 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .catalog = p1 $catalog ::
33966 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .schema = p2 $schema ::
33969 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .table = p3 $table ::
33972 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p4 $name ::
33987 :: ENTR :: entry :: null :: org.hsqldb.ColumnBase.setType(org.hsqldb.types.Type)::JM,33992
33992 :: EXPR :: modify :: Lorg/hsqldb/types/Type :: p0 $this .dataType = p1 $type ::
33998 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.prepareData()::CD,34005
34002 :: EXPR :: reference :: [Lorg/hsqldb/ColumnBase :: v3 = p0 $this .columns::DD,34005
34005 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,34037:CD,34039
34007 :: EXPR :: reference :: [Lorg/hsqldb/types/Type :: v7 = p0 $this .columnTypes::
34010 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v7[v16]::DD,34014
34014 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 36::CD,34025:CF,34033
34015 :: EXPR :: reference :: [Lorg/hsqldb/types/Type :: v9 = p0 $this .columnTypes::
34025 :: CALL :: call :: Lorg/hsqldb/types/Type :: v13 = v11.getDataType()::JM,34029:CL,40503
34029 :: EXPR :: modify :: Ljava/lang/Object :: v9[v16] = v13::
34033 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,34039
34034 :: EXPR :: reference :: I :: v6 = p0 $this .columnCount::DD,34037
34037 :: PRED :: IF :: Z :: if (v16 < v6) goto 13::CD,34014:CD,34033:CD,34039
34039 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,34033:DD,34037
34055 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newDataResult(org.hsqldb.result.ResultMetaData)::CD,34059:CD,34063:JM,40580:JM,34070
34059 :: CALL :: call :: Lorg/hsqldb/result/Result :: v5 = newResult(#(3))::CL,40512
34063 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v6 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,34067
34067 :: EXPR :: modify :: Lorg/hsqldb/navigator/RowSetNavigator :: v5.navigator = v6::
34070 :: EXPR :: modify :: Lorg/hsqldb/result/ResultMetaData :: v5.metaData = p1 $md ::
34081 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newUpdateCountResult(int)::JM,40598:JM,40602
34115 :: CALL :: call :: Lorg/hsqldb/types/Collation :: v9 = getDefaultInstance()::JM,34118:CL,33923
34118 :: EXPR :: modify :: Lorg/hsqldb/types/Collation :: p0 $this .collation = v9::
34121 :: CALL :: call :: Lorg/hsqldb/types/Charset :: v11 = getDefaultInstance()::JM,34124:CL,33916
34124 :: EXPR :: modify :: Lorg/hsqldb/types/Charset :: p0 $this .charset = v11::
34127 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .getNameStringPrivate()::JM,34131:CL,40661
34131 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .nameString = v13::
34247 :: PRED :: IF :: null :: switch p1 $type ::
34248 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(8)::
34252 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(16)::
34256 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(32)::
34260 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(64)::
34264 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(128)::
34268 :: EXPR :: modify :: I :: p0 $this .typeWidth = #(256)::
34272 :: CALL :: call :: Ljava/lang/RuntimeException :: v11 = runtimeError(#(201), #(NumberType))::CL,33706
34311 :: PRED :: IF :: Z :: if (p2 $type  == #(94)) goto 26::CD,34312:CD,34325
34312 :: PRED :: IF :: Z :: if (p2 $type  == #(95)) goto 26::CD,34325
34314 :: EXPR :: modify :: Z :: p0 $this .withTimeZone = v12::
34317 :: CALL :: call :: Ljava/lang/String :: v14 = p0 $this .getNameStringPrivate()::JM,34321:CL,40775
34321 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .nameString = v14::
34325 :: EXPR :: assign :: null :: PHI v12 = #(0), #(1)::DD,34314
34340 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.newIntervalType(int,long,int)::CD,34346:CD,34350:JM,49344:JM,49347:JM,40646:JM,49352:JM,40907:JM,40622:JM,40912:JM,40625:JM,49362:JM,40628:JM,40631:JM,40920:JM,40637
34346 :: CALL :: call :: I :: v6 = getStartIntervalType(p1 $type )::CL,40800
34350 :: CALL :: call :: I :: v8 = getEndIntervalType(p1 $type )::CL,40832
34398 :: PRED :: IF :: Z :: if (p1 $dataType  != #(null)) goto 20::CF,34408:CD,34399
34399 :: EXPR :: reference :: Lorg/hsqldb/types/Type :: v10 = org.hsqldb.types.Type.SQL_ALL_TYPES::DD,34408
34401 :: EXPR :: modify :: Lorg/hsqldb/types/Type :: p0 $this .dataType = v11::
34404 :: EXPR :: modify :: I :: p0 $this .maxCardinality = p2 $cardinality ::
34408 :: EXPR :: assign :: null :: PHI v11 = p1 $dataType , v10::DD,34401
34457 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyHashMap.put(int,java.lang.Object)::CD,34464
34464 :: CALL :: call :: Ljava/lang/Object :: v9 = p0 $this .addOrRemove(v5, p2 $value , #(null), #(0))::CL,40942
34478 :: ENTR :: entry :: null :: org.hsqldb.lib.FrameworkLogger.reconfigure()::CD,34483:CD,34485:CD,34488:CD,34490:CD,34499:CD,34508:CD,34556:CD,34561:CD,34566:CD,34570:CD,34644:CD,34649:CD,34654:CD,34658:CD,34746:CD,34750:CD,34760:CD,34765:CD,34770:CD,34774:CD,34786:CD,34791:CD,34796:CD,34800:CD,34812:CD,34817:CD,34822:CD,34826:CD,34842:CD,34843
34483 :: EXPR :: reference :: Ljava/util/Map :: v4 = org.hsqldb.lib.FrameworkLogger.loggerInstances::
34485 :: CALL :: call :: V :: v4.clear()::
34488 :: EXPR :: reference :: Ljava/util/Map :: v6 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
34490 :: CALL :: call :: V :: v6.clear()::
34499 :: CALL :: call :: Ljava/lang/Class :: v10 = forName(#(org.apache.logging.lo...))::JM,34499:JM,34842:JM,34843
34508 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 143::CD,34509:CD,34531:CD,34545:CD,34579:CD,34581:CD,34584:CD,34589:CD,34845
34509 :: CALL :: call :: V :: populateJdkToLog4jLevels(#(org.apache.logging.lo...))::CL,41409
34531 :: CALL :: call :: Ljava/lang/reflect/Method :: v31 = v17.getMethod(#(log), v23)::
34545 :: CALL :: call :: Ljava/lang/reflect/Method :: v36 = v18.getMethod(#(getLogger), v33)::
34556 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::
34561 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v39.append(v37)::
34566 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
34570 :: CALL :: call :: V :: v38.println(v45)::
34579 :: EXPR :: reference :: Ljava/util/Map :: v49 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
34581 :: CALL :: call :: V :: v49.clear()::
34584 :: CALL :: call :: Ljava/lang/Class :: v53 = forName(#(org.apache.log4j.Logger))::JM,34584:JM,34845
34589 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 270::CD,34590:CD,34617:CD,34631:CD,34669:CD,34671:CD,34674:CD,34678
34590 :: CALL :: call :: V :: populateJdkToLog4jLevels(#(org.apache.log4j.Level))::CL,41409
34617 :: CALL :: call :: Ljava/lang/reflect/Method :: v69 = v56.getMethod(#(log), v61)::
34631 :: CALL :: call :: Ljava/lang/reflect/Method :: v73 = v57.getMethod(#(getLogger), v70)::
34644 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
34649 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v74)::
34654 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
34658 :: CALL :: call :: V :: v75.println(v82)::
34669 :: EXPR :: reference :: Ljava/util/Map :: v86 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
34671 :: CALL :: call :: V :: v86.clear()::
34674 :: CALL :: call :: Ljava/lang/String :: v90 = getProperty(#(hsqldb.reconfig_logging))::JM,34674:JM,34678:JM,34684
34678 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 311::CD,34679:CD,34684:CD,34686:CD,34689:CD,34692
34679 :: CALL :: call :: Z :: v93 = v90.equalsIgnoreCase(#(false))::JM,34684
34684 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 311::CD,34686:CD,34689:CD,34692
34686 :: CALL :: call :: Ljava/util/logging/LogManager :: v95 = getLogManager()::
34689 :: CALL :: call :: Z :: v98 = isDefaultJdkConfig()::JM,34692:CL,41701
34692 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 402::CD,34693:CD,34716:CD,34721:CD,34725:CD,34729:CD,34733:CD,34738
34693 :: CALL :: call :: V :: v95.reset()::
34716 :: CALL :: call :: Ljava/io/InputStream :: v110 = v108.getResourceAsStream(#(/org/hsqldb/resources...))::
34721 :: CALL :: call :: V :: v95.readConfiguration(v110)::
34725 :: CALL :: call :: Ljava/util/logging/Logger :: v114 = getLogger(#(org.hsqldb.cmdline))::
34729 :: CALL :: call :: V :: v114.addHandler(v101)::
34733 :: CALL :: call :: V :: v114.setUseParentHandlers(#(0))::
34738 :: CALL :: call :: V :: v95.readConfiguration()::
34746 :: CALL :: call :: V :: v119.println(#(<clinit> failure init...))::
34750 :: CALL :: call :: V :: v117.printStackTrace()::
34760 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
34765 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v139.append(v137)::
34770 :: CALL :: call :: Ljava/lang/String :: v144 = v142.toString()::
34774 :: CALL :: call :: V :: v138.println(v144)::
34786 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v128 = new java.lang.StringBuilder::
34791 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v128.append(v126)::
34796 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::
34800 :: CALL :: call :: V :: v127.println(v134)::
34812 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
34817 :: CALL :: call :: Ljava/lang/StringBuilder :: v153 = v150.append(v148)::
34822 :: CALL :: call :: Ljava/lang/String :: v155 = v153.toString()::
34826 :: CALL :: call :: V :: v149.println(v155)::
34842 :: EXPR :: assign :: null :: PHI v15 = #(null), v10::DD,34843
34843 :: EXPR :: assign :: null :: PHI v17 = v10, v15::DD,34508
34845 :: EXPR :: assign :: null :: PHI v56 = v53, #(null)::DD,34589
35041 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.newSystemObjectName(java.lang.String,int)::CE,35042:CD,35046:JM,51554:JM,44101:JM,51558:JM,44089:JM,51545:JM,44092:JM,51548:JM,44095:CD,35057
35042 :: EXIT :: exit :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.newSystemObjectName(java.lang.String,int)::JM,12118:JM,12153:JM,12167
35046 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v4 = new org.hsqldb.HsqlNameManager$HsqlName::DD,35057
35057 :: NORM :: compound :: Lorg/hsqldb/HsqlNameManager$HsqlName :: return v4::DD,35042
35064 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.HsqlName.setSchemaIfNull(org.hsqldb.HsqlNameManager.HsqlName)::CD,35072:JM,35073
35069 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v4 = p0 $this .schema::DD,35072
35072 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 12::
35073 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .schema = p1 $schema ::
35081 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.newInfoSchemaObjectName(java.lang.String,boolean,int)::CE,35082:CD,35087:JM,51554:JM,44101:JM,51558:JM,44089:JM,51545:JM,44092:JM,51548:JM,44095:CD,35098:CD,35103
35082 :: EXIT :: exit :: Lorg/hsqldb/HsqlNameManager$HsqlName :: org.hsqldb.HsqlNameManager.newInfoSchemaObjectName(java.lang.String,boolean,int)::JM,35352
35087 :: NORM :: declaration :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5 = new org.hsqldb.HsqlNameManager$HsqlName::DD,35103
35098 :: EXPR :: reference :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v9 = org.hsqldb.SqlInvariants.INFORMATION_SCHEMA_HSQLNAME::DD,35100
35100 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v5.schema = v9::
35103 :: NORM :: compound :: Lorg/hsqldb/HsqlNameManager$HsqlName :: return v5::DD,35082
35122 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .name = p1 $name ::
35129 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.values()::CD,35136
35133 :: EXPR :: reference :: Lorg/hsqldb/lib/Collection :: v3 = p0 $this .values::DD,35136
35136 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 20::CD,35137:JM,42567
35137 :: NORM :: declaration :: Lorg/hsqldb/lib/HashMap$Values :: v5 = new org.hsqldb.lib.HashMap$Values::DD,35142
35142 :: EXPR :: modify :: Lorg/hsqldb/lib/Collection :: p0 $this .values = v5::
35155 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.Values.iterator()::
35178 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.next()::CE,35179:CD,35204:CD,35221:CD,35231:CD,35242:CD,35271
35179 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.map.BaseHashMap.BaseHashIterator.next()::JM,13441:JM,98071
35204 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v31 = new java.util.NoSuchElementException::
35210 :: EXPR :: modify :: Z :: p0 $this .removed = #(0)::
35218 :: EXPR :: reference :: I :: v15 = p0 $this .counter::DD,35221
35221 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 + #(1)::DD,35222
35222 :: EXPR :: modify :: I :: p0 $this .counter = v17::
35231 :: CALL :: call :: I :: v21 = v18.nextLookup(v19)::JM,35236:CL,42603
35236 :: EXPR :: modify :: I :: p0 $this .lookup = v21::
35239 :: EXPR :: reference :: Z :: v22 = p0 $this .keys::DD,35242
35242 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 102::CD,35256:CD,35270
35243 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v27 = p0 $this .this$0::
35246 :: EXPR :: reference :: [Ljava/lang/Object :: v28 = v27.objectKeyTable::
35249 :: EXPR :: reference :: I :: v29 = p0 $this .lookup::
35252 :: EXPR :: reference :: Ljava/lang/Object :: v30 = v28[v29]::DD,35256
35256 :: NORM :: compound :: Ljava/lang/Object :: return v30::DD,35179
35257 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v23 = p0 $this .this$0::
35260 :: EXPR :: reference :: [Ljava/lang/Object :: v24 = v23.objectValueTable::
35263 :: EXPR :: reference :: I :: v25 = p0 $this .lookup::
35266 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v24[v25]::DD,35270
35270 :: NORM :: compound :: Ljava/lang/Object :: return v26::DD,35179
35271 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v12 = new java.util.NoSuchElementException::
35301 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.hasNext()::CE,35302:CD,35317
35302 :: EXIT :: exit :: Z :: org.hsqldb.map.BaseHashMap.BaseHashIterator.hasNext()::JM,13467:JM,32921:JM,52570:JM,88833:JM,98165
35305 :: EXPR :: reference :: I :: v3 = p0 $this .counter::DD,35317
35308 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v4 = p0 $this .this$0::
35311 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v5 = v4.hashIndex::
35314 :: EXPR :: reference :: I :: v6 = v5.elementCount::DD,35317
35317 :: PRED :: IF :: Z :: if (v3 >= v6) goto 20::CD,35318:CD,35319
35318 :: NORM :: compound :: Z :: return #(1)::CF,35302
35319 :: NORM :: compound :: Z :: return #(0)::CF,35302
35332 :: EXPR :: modify :: Z :: p0 $this .padSpace = #(1)::
35341 :: EXPR :: reference :: Ljava/util/Locale :: v10 = java.util.Locale.ENGLISH::DD,35343
35343 :: EXPR :: modify :: Ljava/util/Locale :: p0 $this .locale = v10::
35346 :: CALL :: call :: Lorg/hsqldb/HsqlNameManager$HsqlName :: v13 = newInfoSchemaObjectName(v9, #(0), #(15))::JM,35352:CL,35081
35352 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager$HsqlName :: p0 $this .name = v13::
35355 :: EXPR :: modify :: Z :: p0 $this .isUnicodeSimple = p1 $simple ::
35358 :: EXPR :: modify :: Z :: p0 $this .isFinal = #(1)::
35380 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newParameterMetaData(int)::JM,35408:JM,35405:CD,35384:JM,42717:CD,35389:CD,35393:CD,35397:CD,35401
35384 :: NORM :: declaration :: Lorg/hsqldb/result/ResultMetaData :: v3 = new org.hsqldb.result.ResultMetaData::
35389 :: NORM :: declaration :: [Lorg/hsqldb/types/Type :: v6 = new org.hsqldb.types.Type[]::DD,35390
35390 :: EXPR :: modify :: [Lorg/hsqldb/types/Type :: v3.columnTypes = v6::
35393 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::DD,35394
35394 :: EXPR :: modify :: [Ljava/lang/String :: v3.columnLabels = v7::
35397 :: NORM :: declaration :: [B :: v8 = new []::DD,35398
35398 :: EXPR :: modify :: [B :: v3.paramModes = v8::
35401 :: NORM :: declaration :: [B :: v9 = new []::DD,35402
35402 :: EXPR :: modify :: [B :: v3.paramNullable = v9::
35405 :: EXPR :: modify :: I :: v3.columnCount = p1 $colCount ::
35408 :: EXPR :: modify :: I :: v3.extendedColumnCount = p1 $colCount ::
35479 :: ENTR :: entry :: null :: org.hsqldb.HsqlDateTime.getDateSeconds(java.lang.String)::CD,35502
35502 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v15 = error(#(3407))::CL,33668
35525 :: EXPR :: modify :: J :: p0 $this .seconds = p1 $seconds ::
35528 :: EXPR :: modify :: I :: p0 $this .nanos = #(0)::
35531 :: EXPR :: modify :: I :: p0 $this .zone = #(0)::
35553 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyIntValueHashMap.put(int,int)::CD,35565
35565 :: CALL :: call :: Ljava/lang/Object :: v12 = p0 $this .addOrRemove(v7, v8, #(null), #(null), #(0))::CL,38427
35594 :: ENTR :: entry :: null :: org.hsqldb.types.NumberType.getNumberType(int,long,int)::CD,35600:CD,35624
35600 :: PRED :: IF :: null :: switch p1 $type ::JM,34272:JM,40625:JM,40628:JM,40646:JM,34247:JM,40631:JM,40637:JM,40622
35624 :: CALL :: call :: Ljava/lang/RuntimeException :: v8 = runtimeError(#(201), #(NumberType))::CL,33706
35763 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicLong :: v4 = new java.util.concurrent.atomic.AtomicLong::DD,35768
35768 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicLong :: p0 $this .serialNumber = v4::
35771 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicLong :: v7 = new java.util.concurrent.atomic.AtomicLong::DD,35776
35776 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicLong :: p0 $this .sysNumber = v7::
35779 :: EXPR :: modify :: Z :: p0 $this .sqlRegularNames = #(1)::
35832 :: EXPR :: reference :: Lorg/hsqldb/types/BooleanType :: v6 = org.hsqldb.types.Type.SQL_BOOLEAN::DD,35834
35834 :: EXPR :: modify :: Lorg/hsqldb/types/Type :: p0 $this .dataType = v6::
35837 :: PRED :: IF :: Z :: if (p1 $b  == #(0)) goto 23::CD,35838:CD,35841:CD,35847
35838 :: EXPR :: reference :: Ljava/lang/Boolean :: v9 = java.lang.Boolean.TRUE::DD,35847
35841 :: EXPR :: reference :: Ljava/lang/Boolean :: v8 = java.lang.Boolean.FALSE::CF,35847
35843 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .valueData = v10::
35847 :: EXPR :: assign :: null :: PHI v10 = v9, v8::DD,35843
35868 :: ENTR :: entry :: null :: org.hsqldb.lib.OrderedIntHashSet.addAll(org.hsqldb.lib.OrderedIntHashSet)::CD,35877:CD,35893:CD,35901
35877 :: CALL :: call :: I :: v7 = p1 $set .size()::JM,35893:CL,38415
35882 :: CALL :: call :: I :: v10 = p1 $set .get(v15)::CL,44179
35887 :: CALL :: call :: Z :: v12 = p0 $this .add(v10)::CL,33826
35892 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,35901
35893 :: PRED :: IF :: Z :: if (v15 < v7) goto 19::CD,35882:CD,35887:CD,35892:CD,35901
35901 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,35892:DD,35893
35931 :: EXPR :: modify :: I :: p0 $this .hashCode = #(0)::
35934 :: EXPR :: modify :: [B :: p0 $this .data = p1 $data ::
35937 :: EXPR :: modify :: J :: p0 $this .bitLength = p2 $bitLength ::
35940 :: EXPR :: modify :: Z :: p0 $this .isBits = #(1)::
35962 :: EXPR :: modify :: I :: p0 $this .hashCode = #(0)::
35965 :: PRED :: IF :: Z :: if (p2 $clone  == #(0)) goto 23::CF,35981:CD,35966:CD,35970
35966 :: CALL :: call :: Ljava/lang/Object :: v8 = duplicateArray(p1 $data )::JM,35970:CL,44200
35970 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,35981
35971 :: EXPR :: modify :: [B :: p0 $this .data = v10::
35974 :: EXPR :: assign :: I :: v11 = v10.length::CF,35975
35975 :: EXPR :: assign :: J :: v12 = CONVERT I to J v11::DD,35976
35976 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v12 * #(8 l)::DD,35977
35977 :: EXPR :: modify :: J :: p0 $this .bitLength = v14::
35981 :: EXPR :: assign :: null :: PHI v10 = p1 $data , v9::DD,35971:DD,35974
35993 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalSecondData.newIntervalDay(long,org.hsqldb.types.IntervalType)::JM,44256:JM,44261:JM,44264:JM,44250
36514 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(java.lang.Throwable,int,java.lang.String)::CD,36520:CD,36524:CD,36549:CD,36554:JM,44921:JM,44924:JM,44927:CD,36569
36520 :: CALL :: call :: Ljava/lang/String :: v6 = getMessage(p2 $code )::JM,36569:CL,44895
36524 :: PRED :: IF :: Z :: if (p3 $add  == #(null)) goto 33::CF,36569:CF,36525:CD,36526:CD,36534:CD,36539:CD,36544
36525 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,36569
36526 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
36534 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(#(: ))::JM,36569
36539 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(p3 $add )::JM,36569
36544 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::JM,36569
36549 :: CALL :: call :: Ljava/lang/String :: v23 = v19.substring(#(6))::
36554 :: CALL :: call :: Ljava/lang/String :: v27 = v19.substring(#(0), #(5))::
36569 :: EXPR :: assign :: null :: PHI v19 = v6, v18::
36711 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v61 = error(#(331), v59)::CL,45062
36717 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v58 = error(#(331), v56)::CL,45062
36723 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v55 = error(#(331), v53)::CL,45062
36729 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v52 = error(#(331), v50)::CL,45062
36735 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v49 = error(#(331), v46)::CL,45062
36793 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.makeDirectories(java.lang.String)::CD,36797:CD,36802
36797 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
36802 :: CALL :: call :: Z :: v6 = v3.mkdirs()::
36965 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.setLobFileScaleNoCheck(int)::CD,36970
36970 :: CALL :: call :: V :: checkPower(p1 $value , #(5))::CL,45395
36995 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.setDataFileScaleNoCheck(int)::CD,37000:CD,37006
37000 :: CALL :: call :: V :: checkPower(p1 $value , #(10))::CL,45395
37006 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v10 = error(#(5556))::CL,33668
37023 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.setDataFileSpaces(int)::CD,37031:JM,37033
37028 :: EXPR :: reference :: I :: v4 = p0 $this .propFileSpaceValue::DD,37031
37031 :: PRED :: IF :: Z :: if (v4 != p1 $value ) goto 10::CD,37033:CD,37050:CD,37054
37033 :: PRED :: IF :: Z :: if (p1 $value  == #(0)) goto 21::CD,37034
37034 :: CALL :: call :: V :: checkPower(p1 $value , #(6))::CL,45395
37050 :: CALL :: call :: Z :: v15 = p0 $this .hasCache()::JM,37054:CL,45415
37054 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 75::CD,37055:CD,37059
37055 :: CALL :: call :: Lorg/hsqldb/persist/DataFileCache :: v17 = p0 $this .getCache()::CL,45436
37059 :: CALL :: call :: Z :: v19 = v17.setDataSpaceManager()::CL,45457
37113 :: ENTR :: entry :: null :: org.hsqldb.lib.SimpleLog.setLevel(int)::CD,37121
37121 :: CALL :: call :: V :: p0 $this .setupWriter()::CL,45574
37128 :: ENTR :: entry :: null :: org.hsqldb.persist.LockFile.newLockFileLock(java.lang.String)::CD,37133:CD,37150
37133 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(p1 $path )::
37150 :: CALL :: call :: Lorg/hsqldb/persist/LockFile :: v14 = newLockFile(v12)::CL,45633
38308 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.add(java.lang.Object)::CD,38319:CD,38320:CD,38337:JM,38330
38313 :: EXPR :: reference :: I :: v4 = p0 $this .elementCount::DD,38320
38316 :: EXPR :: reference :: [Ljava/lang/Object :: v5 = p0 $this .elementData::DD,38319
38319 :: EXPR :: assign :: I :: v6 = v5.length::CF,38320
38320 :: PRED :: IF :: Z :: if (v4 < v6) goto 17::CD,38321
38321 :: CALL :: call :: V :: p0 $this .increaseCapacity()::CL,47815
38324 :: EXPR :: reference :: [Ljava/lang/Object :: v8 = p0 $this .elementData::
38327 :: EXPR :: reference :: I :: v9 = p0 $this .elementCount::
38330 :: EXPR :: modify :: Ljava/lang/Object :: v8[v9] = p1 $element ::
38334 :: EXPR :: reference :: I :: v10 = p0 $this .elementCount::DD,38337
38337 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 + #(1)::DD,38338
38338 :: EXPR :: modify :: I :: p0 $this .elementCount = v12::
38352 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.size()::CE,38353:CD,38359
38353 :: EXIT :: exit :: I :: org.hsqldb.lib.HsqlArrayList.size()::JM,33111:JM,69261
38356 :: EXPR :: reference :: I :: v3 = p0 $this .elementCount::DD,38359
38359 :: NORM :: compound :: I :: return v3::CF,38353
38361 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.toArray(java.lang.Object)::CE,38362:CD,38366:CD,38373:CD,38403:CD,38404:JM,38385:JM,38374:JM,38378
38362 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.HsqlArrayList.toArray(java.lang.Object)::JM,32602
38366 :: CALL :: call :: I :: v5 = getLength(p1 $a )::JM,38385:JM,38404:JM,38373:JM,38374:JM,38378:JM,38366
38370 :: EXPR :: reference :: I :: v6 = p0 $this .elementCount::DD,38373
38373 :: PRED :: IF :: Z :: if (v5 >= v6) goto 27::CF,38404:CD,38374:CD,38378:CD,38385:JM,38373:JM,38366
38374 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $a .getClass()::JM,38385:JM,38404:JM,38373:JM,38374:JM,38378:JM,38366
38378 :: CALL :: call :: Ljava/lang/Class :: v10 = v8.getComponentType()::JM,38385:JM,38404:JM,38378
38382 :: EXPR :: reference :: I :: v11 = p0 $this .elementCount::JM,38385:JM,38404
38385 :: CALL :: call :: Ljava/lang/Object :: v13 = newInstance(v10, v11)::JM,38385:JM,38404
38403 :: NORM :: compound :: Ljava/lang/Object :: return v14::DD,38362
38404 :: EXPR :: assign :: null :: PHI v14 = p1 $a , v13::DD,38403
38415 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.size()::CE,38416:CD,38425
38416 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.size()::JM,35893:JM,64369:JM,73253:JM,93187:JM,93217:JM,93248
38419 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v3 = p0 $this .hashIndex::
38422 :: EXPR :: reference :: I :: v4 = v3.elementCount::DD,38425
38425 :: NORM :: compound :: I :: return v4::CF,38416
38427 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemove(long,long,java.lang.Object,java.lang.Object,boolean)::CD,38440:CD,38796:JM,38882:JM,38818:JM,38531:JM,38851:JM,38855:JM,38729:JM,38441:JM,38571:JM,38830:JM,38895:JM,38704:JM,38545:JM,38769:JM,38835:JM,38870:JM,38716:JM,38558
38437 :: EXPR :: reference :: Z :: v9 = p0 $this .isObjectKey::DD,38440
38440 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 49::CD,38441:CD,38463:CD,38556:CD,38557:CD,38931
38441 :: PRED :: IF :: Z :: if (p3 $longValue  != #(null)) goto 19::CD,38463:CD,38556:CD,38557:CD,38931
38463 :: CALL :: call :: I :: v21 = v19.getHashIndex(v18)::CL,47892
38468 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v22 = p0 $this .hashIndex::
38471 :: EXPR :: reference :: [I :: v23 = v22.hashTable::
38474 :: EXPR :: reference :: I :: v24 = v23[v21]::DD,38931
38479 :: EXPR :: reference :: Z :: v26 = p0 $this .isObjectKey::DD,38482
38482 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 137::CD,38486:CD,38522
38483 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v27 = p0 $this .comparator::DD,38486
38486 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 113::CD,38494:CD,38499:CD,38511:CD,38517
38494 :: CALL :: call :: Z :: v31 = v29.equals(p3 $longValue )::JM,38499:CL,47971:CL,47984:CL,47907:CL,47932
38499 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 186::CD,38551:CD,38556:CD,38931
38511 :: CALL :: call :: I :: v36 = v32.compare(v34, p3 $longValue )::JM,38517:CL,48059
38517 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 186::CD,38551:CD,38556:CD,38931
38519 :: EXPR :: reference :: Z :: v37 = p0 $this .isIntKey::DD,38522
38522 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 160::CD,38530:CD,38531:CD,38532:CD,38537
38523 :: EXPR :: reference :: [I :: v38 = p0 $this .intKeyTable::
38526 :: EXPR :: reference :: I :: v39 = v38[v49]::DD,38530
38530 :: EXPR :: assign :: J :: v40 = CONVERT I to J v39::CF,38531
38531 :: EXPR :: assign :: Z :: v41 = p1 $longKey  == v40::DD,38532
38532 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 186::CD,38551:CD,38556:CD,38931
38534 :: EXPR :: reference :: Z :: v42 = p0 $this .isLongKey::DD,38537
38537 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 186::CD,38545:CD,38546:CD,38551:CD,38556:CD,38931
38538 :: EXPR :: reference :: [J :: v43 = p0 $this .longKeyTable::
38541 :: EXPR :: reference :: J :: v44 = v43[v49]::DD,38545
38545 :: EXPR :: assign :: Z :: v45 = p1 $longKey  == v44::DD,38546
38546 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 186::CD,38551:CD,38556:CD,38931
38551 :: CALL :: call :: I :: v48 = v46.getNextLookup(v49)::JM,38931:CL,48120
38556 :: PRED :: IF :: Z :: if (v49 >= #(0)) goto 81::CD,38482:CF,38557
38557 :: PRED :: IF :: Z :: if (v49 < #(0)) goto 516::CD,38558:CD,38769
38558 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 388::CD,38562:CD,38601:CD,38643:CD,38652:CD,38663:CD,38693:CD,38736
38559 :: EXPR :: reference :: Z :: v110 = p0 $this .isObjectKey::DD,38562
38562 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 231::CD,38571:CD,38572:CD,38582
38563 :: EXPR :: reference :: [Ljava/lang/Object :: v115 = p0 $this .objectKeyTable::
38566 :: EXPR :: modify :: Ljava/lang/Object :: v115[v49] = #(null)::
38571 :: EXPR :: assign :: Z :: v111 = p1 $longKey  == #(0 l)::DD,38572
38572 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 246::
38573 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
38576 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
38579 :: EXPR :: reference :: Z :: v112 = p0 $this .isIntKey::DD,38582
38582 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 264::
38583 :: EXPR :: reference :: [I :: v114 = p0 $this .intKeyTable::
38586 :: EXPR :: modify :: I :: v114[v49] = #(0)::
38591 :: EXPR :: reference :: [J :: v113 = p0 $this .longKeyTable::
38594 :: EXPR :: modify :: J :: v113[v49] = #(0 l)::
38598 :: EXPR :: reference :: Z :: v116 = p0 $this .isObjectValue::DD,38601
38601 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 299::CD,38620
38609 :: EXPR :: reference :: [Ljava/lang/Object :: v123 = p0 $this .objectValueTable::
38612 :: EXPR :: modify :: Ljava/lang/Object :: v123[v49] = #(null)::
38617 :: EXPR :: reference :: Z :: v117 = p0 $this .isIntValue::DD,38620
38620 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 317::CD,38632
38621 :: EXPR :: reference :: [I :: v120 = p0 $this .intValueTable::
38624 :: EXPR :: modify :: I :: v120[v49] = #(0)::
38629 :: EXPR :: reference :: Z :: v118 = p0 $this .isLongValue::DD,38632
38632 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 332::
38633 :: EXPR :: reference :: [J :: v119 = p0 $this .longValueTable::
38636 :: EXPR :: modify :: J :: v119[v49] = #(0 l)::
38643 :: CALL :: call :: V :: v125.unlinkNode(v21, v50, v49)::CL,48135
38649 :: EXPR :: reference :: [I :: v127 = p0 $this .accessTable::DD,38652
38652 :: PRED :: IF :: Z :: if (v127 == #(null)) goto 360::
38653 :: EXPR :: reference :: [I :: v128 = p0 $this .accessTable::
38656 :: EXPR :: modify :: I :: v128[v49] = #(0)::
38660 :: EXPR :: reference :: Z :: v129 = p0 $this .minimizeOnEmpty::DD,38663
38663 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 386::CD,38670
38664 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v130 = p0 $this .hashIndex::
38667 :: EXPR :: reference :: I :: v131 = v130.elementCount::DD,38670
38670 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 386::CD,38674
38674 :: CALL :: call :: V :: p0 $this .rehash(v132)::CL,48237
38690 :: EXPR :: reference :: Z :: v92 = p0 $this .isObjectValue::DD,38693
38693 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 432::CD,38712
38701 :: EXPR :: reference :: [Ljava/lang/Object :: v100 = p0 $this .objectValueTable::
38704 :: EXPR :: modify :: Ljava/lang/Object :: v100[v49] = p4 $null ::
38709 :: EXPR :: reference :: Z :: v93 = p0 $this .isIntValue::DD,38712
38712 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 451::CD,38716:CD,38725
38713 :: EXPR :: reference :: [I :: v96 = p0 $this .intValueTable::
38716 :: EXPR :: assign :: I :: v97 = CONVERT J to I p2 $null ::DD,38717
38717 :: EXPR :: modify :: I :: v96[v49] = v97::
38722 :: EXPR :: reference :: Z :: v94 = p0 $this .isLongValue::DD,38725
38725 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 466::
38726 :: EXPR :: reference :: [J :: v95 = p0 $this .longValueTable::
38729 :: EXPR :: modify :: J :: v95[v49] = p2 $null ::
38733 :: EXPR :: reference :: Z :: v102 = p0 $this .isLastAccessCount::DD,38736
38736 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 494::CD,38743:CD,38755
38737 :: EXPR :: reference :: [I :: v107 = p0 $this .accessTable::
38740 :: EXPR :: reference :: I :: v108 = p0 $this .accessCount::DD,38743
38743 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v108 + #(1)::DD,38744:DD,38747
38744 :: EXPR :: modify :: I :: p0 $this .accessCount = v109::
38747 :: EXPR :: modify :: I :: v107[v49] = v109::
38752 :: EXPR :: reference :: Z :: v103 = p0 $this .isAccessCount::DD,38755
38755 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 513::CD,38763
38756 :: EXPR :: reference :: [I :: v104 = p0 $this .accessTable::
38759 :: EXPR :: reference :: I :: v105 = v104[v49]::DD,38763
38763 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::DD,38764
38764 :: EXPR :: modify :: I :: v104[v49] = v106::
38769 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 522::CD,38780
38771 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v51 = p0 $this .hashIndex::
38774 :: EXPR :: reference :: I :: v52 = v51.elementCount::DD,38780
38777 :: EXPR :: reference :: I :: v53 = p0 $this .threshold::DD,38780
38780 :: PRED :: IF :: Z :: if (v52 < v53) goto 566::CD,38781:CD,38786:CD,38805:CD,38814:CD,38866:CD,38902
38781 :: CALL :: call :: Z :: v82 = p0 $this .reset()::CL,48547
38786 :: CALL :: call :: Ljava/lang/Object :: v87 = p0 $this .addOrRemove(p1 $longKey , p2 $null , p3 $longValue , p4 $null , p5 $objectKey )::CL,38427
38796 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v83 = new java.util.NoSuchElementException::
38805 :: CALL :: call :: I :: v56 = v54.linkNode(v21, v50)::JM,38840:JM,38860:CL,48657
38811 :: EXPR :: reference :: Z :: v57 = p0 $this .isObjectKey::DD,38814
38814 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 598::CD,38826
38815 :: EXPR :: reference :: [Ljava/lang/Object :: v67 = p0 $this .objectKeyTable::
38818 :: EXPR :: modify :: Ljava/lang/Object :: v67[v56] = p3 $longValue ::
38823 :: EXPR :: reference :: Z :: v58 = p0 $this .isIntKey::DD,38826
38826 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 634::CD,38830:CD,38835:CD,38836:CD,38847
38827 :: EXPR :: reference :: [I :: v64 = p0 $this .intKeyTable::
38830 :: EXPR :: assign :: I :: v65 = CONVERT J to I p1 $longKey ::DD,38831
38831 :: EXPR :: modify :: I :: v64[v56] = v65::
38835 :: EXPR :: assign :: Z :: v66 = p1 $longKey  == #(0 l)::DD,38836
38836 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 666::
38837 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
38840 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v56::
38844 :: EXPR :: reference :: Z :: v59 = p0 $this .isLongKey::DD,38847
38847 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 666::CD,38855:CD,38856
38848 :: EXPR :: reference :: [J :: v60 = p0 $this .longKeyTable::
38851 :: EXPR :: modify :: J :: v60[v56] = p1 $longKey ::
38855 :: EXPR :: assign :: Z :: v62 = p1 $longKey  == #(0 l)::DD,38856
38856 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 666::
38857 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
38860 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v56::
38863 :: EXPR :: reference :: Z :: v68 = p0 $this .isObjectValue::DD,38866
38866 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 685::CD,38878
38867 :: EXPR :: reference :: [Ljava/lang/Object :: v74 = p0 $this .objectValueTable::
38870 :: EXPR :: modify :: Ljava/lang/Object :: v74[v56] = p4 $null ::
38875 :: EXPR :: reference :: Z :: v69 = p0 $this .isIntValue::DD,38878
38878 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 704::CD,38882:CD,38891
38879 :: EXPR :: reference :: [I :: v72 = p0 $this .intValueTable::
38882 :: EXPR :: assign :: I :: v73 = CONVERT J to I p2 $null ::DD,38883
38883 :: EXPR :: modify :: I :: v72[v56] = v73::
38888 :: EXPR :: reference :: Z :: v70 = p0 $this .isLongValue::DD,38891
38891 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 719::
38892 :: EXPR :: reference :: [J :: v71 = p0 $this .longValueTable::
38895 :: EXPR :: modify :: J :: v71[v56] = p2 $null ::
38899 :: EXPR :: reference :: Z :: v75 = p0 $this .isLastAccessCount::DD,38902
38902 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 747::CD,38909:CD,38921
38903 :: EXPR :: reference :: [I :: v78 = p0 $this .accessTable::
38906 :: EXPR :: reference :: I :: v79 = p0 $this .accessCount::DD,38909
38909 :: EXPR :: assign :: Ljava/lang/Object :: v80 = v79 + #(1)::DD,38910:DD,38913
38910 :: EXPR :: modify :: I :: p0 $this .accessCount = v80::
38913 :: EXPR :: modify :: I :: v78[v56] = v80::
38918 :: EXPR :: reference :: Z :: v76 = p0 $this .isAccessCount::DD,38921
38921 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 763::
38922 :: EXPR :: reference :: [I :: v77 = p0 $this .accessTable::
38925 :: EXPR :: modify :: I :: v77[v56] = #(1)::
38931 :: EXPR :: assign :: null :: PHI v49 = v24, v48::DD,38556:DD,38557
39169 :: EXPR :: modify :: I :: p0 $this .purgePolicy = #(0)::
39172 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
39176 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v30 = new java.lang.IllegalArgumentException::JM,39266:JM,48787:JM,39220:JM,39236:JM,39269:JM,39254:JM,39275:JM,39211:JM,39181:JM,39245:JM,48782
39181 :: PRED :: IF :: Z :: if (p1 $initialCapacity  >= #(3)) goto 35::CF,39275
39182 :: EXPR :: modify :: F :: p0 $this .loadFactor = #(1.0 f)::
39185 :: EXPR :: modify :: I :: p0 $this .initialCapacity = v11::
39188 :: EXPR :: modify :: I :: p0 $this .threshold = v11::
39198 :: NORM :: declaration :: Lorg/hsqldb/map/HashIndex :: v18 = new org.hsqldb.map.HashIndex::DD,39205
39205 :: EXPR :: modify :: Lorg/hsqldb/map/HashIndex :: p0 $this .hashIndex = v18::
39208 :: EXPR :: reference :: I :: v21 = p0 $this .threshold::DD,39215:DD,39224:DD,39232:DD,39240:DD,39249:DD,39258:DD,39270
39211 :: PRED :: IF :: Z :: if (p2 $keyType  != #(1)) goto 111::CD,39215:CD,39220
39212 :: EXPR :: modify :: Z :: p0 $this .isIntKey = #(1)::
39215 :: NORM :: declaration :: [I :: v24 = new []::DD,39216
39216 :: EXPR :: modify :: [I :: p0 $this .intKeyTable = v24::
39220 :: PRED :: IF :: Z :: if (p2 $keyType  != #(3)) goto 133::CD,39224:CD,39232
39221 :: EXPR :: modify :: Z :: p0 $this .isObjectKey = #(1)::
39224 :: NORM :: declaration :: [Ljava/lang/Object :: v23 = new java.lang.Object[]::DD,39225
39225 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectKeyTable = v23::
39229 :: EXPR :: modify :: Z :: p0 $this .isLongKey = #(1)::
39232 :: NORM :: declaration :: [J :: v22 = new []::DD,39233
39233 :: EXPR :: modify :: [J :: p0 $this .longKeyTable = v22::
39236 :: PRED :: IF :: Z :: if (p3 $valueType  != #(1)) goto 167::CD,39240:CD,39245
39237 :: EXPR :: modify :: Z :: p0 $this .isIntValue = #(1)::
39240 :: NORM :: declaration :: [I :: v28 = new []::DD,39241
39241 :: EXPR :: modify :: [I :: p0 $this .intValueTable = v28::
39245 :: PRED :: IF :: Z :: if (p3 $valueType  != #(3)) goto 189::CD,39249:CD,39254
39246 :: EXPR :: modify :: Z :: p0 $this .isObjectValue = #(1)::
39249 :: NORM :: declaration :: [Ljava/lang/Object :: v27 = new java.lang.Object[]::DD,39250
39250 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable = v27::
39254 :: PRED :: IF :: Z :: if (p3 $valueType  != #(2)) goto 210::CD,39258
39255 :: EXPR :: modify :: Z :: p0 $this .isLongValue = #(1)::
39258 :: NORM :: declaration :: [J :: v26 = new []::DD,39259
39259 :: EXPR :: modify :: [J :: p0 $this .longValueTable = v26::
39263 :: EXPR :: modify :: Z :: p0 $this .isNoValue = #(1)::
39266 :: EXPR :: modify :: Z :: p0 $this .isLastAccessCount = p4 $hasAccessCount ::
39269 :: PRED :: IF :: Z :: if (p4 $hasAccessCount  == #(0)) goto 232::CD,39270
39270 :: NORM :: declaration :: [I :: v29 = new []::DD,39271
39271 :: EXPR :: modify :: [I :: p0 $this .accessTable = v29::
39275 :: EXPR :: assign :: null :: PHI v11 = p1 $initialCapacity , #(3)::DD,39185:DD,39188
39348 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.keySet()::CD,39355
39352 :: EXPR :: reference :: Lorg/hsqldb/lib/Set :: v3 = p0 $this .keySet::DD,39355
39355 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 20::CD,39356:JM,48808
39356 :: NORM :: declaration :: Lorg/hsqldb/lib/HashMap$KeySet :: v5 = new org.hsqldb.lib.HashMap$KeySet::DD,39361
39361 :: EXPR :: modify :: Lorg/hsqldb/lib/Set :: p0 $this .keySet = v5::
39374 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.KeySet.iterator()::
39397 :: ENTR :: entry :: null :: org.hsqldb.lib.HashMap.get(java.lang.Object)::CE,39398:CD,39406:CD,39412
39398 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.HashMap.get(java.lang.Object)::JM,33088
39406 :: CALL :: call :: I :: v7 = p0 $this .getLookup(p1 $key , v5)::JM,39412:CL,48818
39412 :: PRED :: IF :: Z :: if (v7 == #(-1)) goto 25::CD,39420:CD,39421
39413 :: EXPR :: reference :: [Ljava/lang/Object :: v10 = p0 $this .objectValueTable::
39416 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v7]::DD,39420
39420 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,39398
39421 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,39398
39433 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)::CD,39439:CD,39478
39439 :: PRED :: IF :: Z :: if (p3 $cl  != #(null)) goto 10::CD,39440:CD,39446:CD,39448
39440 :: CALL :: call :: Ljava/util/ResourceBundle :: v22 = getBundle(p1 $name , p2 $locale )::
39446 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v6 = org.hsqldb.resources.ResourceBundleHandler.newGetBundleMethod::DD,39448
39448 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 22::CD,39449:CD,39455:CD,39457:CD,39470
39449 :: CALL :: call :: Ljava/util/ResourceBundle :: v20 = getBundle(p1 $name , p2 $locale )::
39455 :: EXPR :: reference :: Ljava/lang/reflect/Method :: v7 = org.hsqldb.resources.ResourceBundleHandler.newGetBundleMethod::CF,39457
39457 :: NORM :: declaration :: [Ljava/lang/Object :: v9 = new java.lang.Object[]::
39470 :: CALL :: call :: Ljava/lang/Object :: v14 = v7.invoke(#(null), v9)::
39478 :: CALL :: call :: Ljava/util/ResourceBundle :: v18 = getBundle(p1 $name , p2 $locale )::
39649 :: EXPR :: modify :: I :: p0 $this .maxCapacity = p2 $maxCapacity ::
39652 :: EXPR :: modify :: I :: p0 $this .purgePolicy = p3 $purgePolicy ::
39665 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePoolHashMap.getOrAddInteger(int)::CE,39666:CD,39673:CD,39741:CD,39804:JM,39778:JM,39731:JM,39701:JM,39803
39666 :: EXIT :: exit :: Ljava/lang/Integer :: org.hsqldb.map.ValuePoolHashMap.getOrAddInteger(int)::JM,33629:JM,39761
39673 :: CALL :: call :: I :: v6 = v4.getHashIndex(p1 $intKey )::CL,47892
39678 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v7 = p0 $this .hashIndex::
39681 :: EXPR :: reference :: [I :: v8 = v7.hashTable::
39684 :: EXPR :: reference :: I :: v9 = v8[v6]::DD,39804
39689 :: EXPR :: reference :: [Ljava/lang/Object :: v12 = p0 $this .objectKeyTable::
39692 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v12[v20]::DD,39696
39696 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,39731:JM,39701:DD,39730
39697 :: CALL :: call :: I :: v16 = v14.intValue()::JM,39731:JM,39701
39701 :: PRED :: IF :: Z :: if (v16 != p1 $intKey ) goto 95::CD,39705:CD,39715:CD,39726:CD,39730:CD,39731
39702 :: EXPR :: reference :: I :: v42 = p0 $this .accessCount::DD,39705
39705 :: PRED :: IF :: Z :: if (v42 <= #(2146435071)) goto 63::CD,39706
39706 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
39709 :: EXPR :: reference :: [I :: v44 = p0 $this .accessTable::
39712 :: EXPR :: reference :: I :: v45 = p0 $this .accessCount::DD,39715:DD,39719
39715 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v45 + #(1)::DD,39716
39716 :: EXPR :: modify :: I :: p0 $this .accessCount = v46::
39719 :: EXPR :: modify :: I :: v44[v20] = v45::
39723 :: EXPR :: reference :: J :: v47 = p0 $this .hits::DD,39726
39726 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v47 + #(1 l)::DD,39727
39727 :: EXPR :: modify :: J :: p0 $this .hits = v49::
39730 :: NORM :: compound :: Ljava/lang/Integer :: return v14::DD,39666
39731 :: PRED :: IF :: Z :: if (v16 <= p1 $intKey ) goto 106::CD,39736:CD,39741:CD,39751:CD,39804
39736 :: CALL :: call :: I :: v19 = v17.getNextLookup(v20)::JM,39804:CL,48120
39741 :: PRED :: IF :: Z :: if (v20 >= #(0)) goto 27::CD,39696:CD,39697:CD,39701:CD,39751
39742 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v22 = p0 $this .hashIndex::
39745 :: EXPR :: reference :: I :: v23 = v22.elementCount::DD,39751
39748 :: EXPR :: reference :: I :: v24 = p0 $this .threshold::DD,39751
39751 :: PRED :: IF :: Z :: if (v23 < v24) goto 147::CD,39752:CD,39756:CD,39761:CD,39765:CD,39771:CD,39785:CD,39795:CD,39803
39752 :: CALL :: call :: Z :: v39 = p0 $this .reset()::CL,48547
39756 :: CALL :: call :: Ljava/lang/Integer :: v41 = p0 $this .getOrAddInteger(p1 $intKey )::JM,39761:CL,39665
39761 :: NORM :: compound :: Ljava/lang/Integer :: return v41::DD,39666
39765 :: CALL :: call :: I :: v27 = v25.linkNode(v6, v21)::CL,48657
39771 :: CALL :: call :: Ljava/lang/Integer :: v29 = valueOf(p1 $intKey )::JM,39778:JM,39803
39775 :: EXPR :: reference :: [Ljava/lang/Object :: v30 = p0 $this .objectKeyTable::
39778 :: EXPR :: modify :: Ljava/lang/Object :: v30[v27] = v29::
39782 :: EXPR :: reference :: I :: v31 = p0 $this .accessCount::DD,39785
39785 :: PRED :: IF :: Z :: if (v31 <= #(2146435071)) goto 185::CD,39786
39786 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
39789 :: EXPR :: reference :: [I :: v34 = p0 $this .accessTable::
39792 :: EXPR :: reference :: I :: v35 = p0 $this .accessCount::DD,39795:DD,39799
39795 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v35 + #(1)::DD,39796
39796 :: EXPR :: modify :: I :: p0 $this .accessCount = v37::
39799 :: EXPR :: modify :: I :: v34[v27] = v35::
39803 :: NORM :: compound :: Ljava/lang/Integer :: return v29::DD,39666
39804 :: EXPR :: assign :: null :: PHI v20 = v9, v19::DD,39741
39867 :: ENTR :: entry :: null :: org.hsqldb.map.ValuePoolHashMap.getOrAddObject(java.lang.Object)::CD,39879:CD,39938:CD,39997:JM,39971
39879 :: CALL :: call :: I :: v8 = v4.getHashIndex(v6)::CL,47892
39884 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v9 = p0 $this .hashIndex::
39887 :: EXPR :: reference :: [I :: v10 = v9.hashTable::
39890 :: EXPR :: reference :: I :: v11 = v10[v8]::DD,39997
39902 :: CALL :: call :: Z :: v17 = v15.equals(p1 $key )::JM,39907:CL,47971:CL,47984:CL,47907:CL,47932
39907 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 83::CD,39911:CD,39921:CD,39933:CD,39938:CD,39997
39908 :: EXPR :: reference :: I :: v41 = p0 $this .accessCount::DD,39911
39911 :: PRED :: IF :: Z :: if (v41 <= #(2146435071)) goto 59::CD,39912
39912 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
39915 :: EXPR :: reference :: [I :: v43 = p0 $this .accessTable::
39918 :: EXPR :: reference :: I :: v44 = p0 $this .accessCount::DD,39921:DD,39925
39921 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v44 + #(1)::DD,39922
39922 :: EXPR :: modify :: I :: p0 $this .accessCount = v45::
39925 :: EXPR :: modify :: I :: v43[v21] = v44::
39933 :: CALL :: call :: I :: v20 = v18.getNextLookup(v21)::JM,39997:CL,48120
39938 :: PRED :: IF :: Z :: if (v21 >= #(0)) goto 30::CD,39902:CD,39907:CD,39948
39939 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v23 = p0 $this .hashIndex::
39942 :: EXPR :: reference :: I :: v24 = v23.elementCount::DD,39948
39945 :: EXPR :: reference :: I :: v25 = p0 $this .threshold::DD,39948
39948 :: PRED :: IF :: Z :: if (v24 < v25) goto 124::CD,39949:CD,39953:CD,39962:CD,39978:CD,39988
39949 :: CALL :: call :: Z :: v38 = p0 $this .reset()::CL,48547
39953 :: CALL :: call :: Ljava/lang/Object :: v40 = p0 $this .getOrAddObject(p1 $key )::CL,39867
39962 :: CALL :: call :: I :: v28 = v26.linkNode(v8, v22)::CL,48657
39968 :: EXPR :: reference :: [Ljava/lang/Object :: v29 = p0 $this .objectKeyTable::
39971 :: EXPR :: modify :: Ljava/lang/Object :: v29[v28] = p1 $key ::
39975 :: EXPR :: reference :: I :: v30 = p0 $this .accessCount::DD,39978
39978 :: PRED :: IF :: Z :: if (v30 <= #(2146435071)) goto 157::CD,39979
39979 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
39982 :: EXPR :: reference :: [I :: v33 = p0 $this .accessTable::
39985 :: EXPR :: reference :: I :: v34 = p0 $this .accessCount::DD,39988:DD,39992
39988 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 + #(1)::DD,39989
39989 :: EXPR :: modify :: I :: p0 $this .accessCount = v36::
39992 :: EXPR :: modify :: I :: v33[v28] = v34::
39997 :: EXPR :: assign :: null :: PHI v21 = v11, v20::DD,39938
40052 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(java.lang.Throwable,int,int,java.lang.Object[])::CD,40059:CD,40068:CD,40073:JM,44921:JM,44924:JM,44927
40059 :: CALL :: call :: Ljava/lang/String :: v7 = getMessage(p2 $code , p3 $subCode , p4 $add )::CL,49110
40068 :: CALL :: call :: Ljava/lang/String :: v13 = v7.substring(#(6))::
40073 :: CALL :: call :: Ljava/lang/String :: v17 = v7.substring(#(0), #(5))::
40113 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlTimer$TaskQueue :: v5 = new org.hsqldb.lib.HsqlTimer$TaskQueue::DD,40119
40119 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer$TaskQueue :: p0 $this .taskQueue = v5::
40122 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlTimer$TaskRunner :: v8 = new org.hsqldb.lib.HsqlTimer$TaskRunner::DD,40127
40127 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer$TaskRunner :: p0 $this .taskRunner = v8::
40130 :: PRED :: IF :: Z :: if (p1 $threadFactory  != #(null)) goto 40::CD,40136
40132 :: EXPR :: modify :: Lorg/hsqldb/lib/ThreadFactory :: p0 $this .threadFactory = v11::
40136 :: EXPR :: assign :: null :: PHI v11 = p0 $this , p1 $threadFactory ::DD,40132
40150 :: ENTR :: entry :: null :: org.hsqldb.HsqlException.getMessage()::CE,40151:CD,40157
40151 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.HsqlException.getMessage()::
40154 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .message::DD,40157
40157 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40151
40454 :: ENTR :: entry :: null :: org.hsqldb.result.ResultMetaData.newResultMetaData(org.hsqldb.types.Type[],[],int,int)::JM,40480:JM,40483:JM,40474:JM,40477:CE,40455:CD,40461:JM,42717:CD,40466:CD,40470:CD,40486
40455 :: EXIT :: exit :: Lorg/hsqldb/result/ResultMetaData :: org.hsqldb.result.ResultMetaData.newResultMetaData(org.hsqldb.types.Type[],[],int,int)::JM,33942
40461 :: NORM :: declaration :: Lorg/hsqldb/result/ResultMetaData :: v6 = new org.hsqldb.result.ResultMetaData::DD,40486
40466 :: NORM :: declaration :: [Ljava/lang/String :: v9 = new java.lang.String[]::DD,40467
40467 :: EXPR :: modify :: [Ljava/lang/String :: v6.columnLabels = v9::
40470 :: NORM :: declaration :: [Lorg/hsqldb/ColumnBase :: v10 = new org.hsqldb.ColumnBase[]::DD,40471
40471 :: EXPR :: modify :: [Lorg/hsqldb/ColumnBase :: v6.columns = v10::
40474 :: EXPR :: modify :: [Lorg/hsqldb/types/Type :: v6.columnTypes = p1 $types ::
40477 :: EXPR :: modify :: [I :: v6.colIndexes = p2 $baseColumnIndexes ::
40480 :: EXPR :: modify :: I :: v6.columnCount = p3 $colCount ::
40483 :: EXPR :: modify :: I :: v6.extendedColumnCount = p4 $extColCount ::
40486 :: NORM :: compound :: Lorg/hsqldb/result/ResultMetaData :: return v6::DD,40455
40503 :: ENTR :: entry :: null :: org.hsqldb.ColumnBase.getDataType()::CE,40504:CD,40510
40504 :: EXIT :: exit :: Lorg/hsqldb/types/Type :: org.hsqldb.ColumnBase.getDataType()::JM,34029
40507 :: EXPR :: reference :: Lorg/hsqldb/types/Type :: v3 = p0 $this .dataType::DD,40510
40510 :: NORM :: compound :: Lorg/hsqldb/types/Type :: return v3::CF,40504
40512 :: ENTR :: entry :: null :: org.hsqldb.result.Result.newResult(int)::CE,40513:CD,40516:CD,40537:CD,40543:JM,49274:CD,40551:CD,40552
40513 :: EXIT :: exit :: Lorg/hsqldb/result/Result :: org.hsqldb.result.Result.newResult(int)::
40516 :: PRED :: IF :: null :: switch p1 $type ::CF,40518:CF,40524:CF,40530:CF,40552:JM,49258
40518 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v14 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,40552
40524 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v11 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,40552
40530 :: NORM :: declaration :: Lorg/hsqldb/navigator/RowSetNavigatorClient :: v8 = new org.hsqldb.navigator.RowSetNavigatorClient::DD,40552
40537 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(Result))::CL,33706
40543 :: NORM :: declaration :: Lorg/hsqldb/result/Result :: v17 = new org.hsqldb.result.Result::DD,40551
40548 :: EXPR :: modify :: Lorg/hsqldb/navigator/RowSetNavigator :: v17.navigator = v16::
40551 :: NORM :: compound :: Lorg/hsqldb/result/Result :: return v17::DD,40513
40552 :: EXPR :: assign :: null :: PHI v16 = #(null), #(null), v14, v11, v8, #(null)::CF,40543:DD,40548
40580 :: EXPR :: reference :: [[Ljava/lang/Object :: v4 = org.hsqldb.navigator.RowSetNavigatorClient.emptyTable::DD,40582
40582 :: EXPR :: modify :: [[Ljava/lang/Object :: p0 $this .table = v4::
40598 :: EXPR :: assign :: B :: v6 = CONVERT I to B p1 $mode ::DD,40599
40599 :: EXPR :: modify :: B :: p0 $this .mode = v6::
40602 :: EXPR :: modify :: I :: p0 $this .updateCount = p2 $count ::
40622 :: EXPR :: modify :: I :: p0 $this .typeComparisonGroup = p1 $typeGroup ::
40625 :: EXPR :: modify :: I :: p0 $this .typeCode = p2 $type ::
40628 :: EXPR :: modify :: J :: p0 $this .precision = p3 $precision ::
40631 :: EXPR :: modify :: I :: p0 $this .scale = p4 $null ::
40634 :: EXPR :: reference :: I :: v8 = p0 $this .typeCode::DD,40637
40637 :: PRED :: IF :: Z :: if (v8 != #(1)) goto 40::CD,40646
40639 :: EXPR :: reference :: I :: v10 = p0 $this .typeCode::DD,40646
40642 :: EXPR :: modify :: I :: p0 $this .typeDataGroup = v12::
40646 :: EXPR :: assign :: null :: PHI v12 = #(12), v10::DD,40642
40661 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.getNameStringPrivate()::CE,40662:CD,40668:CD,40672
40662 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.types.CharacterType.getNameStringPrivate()::JM,34131
40665 :: EXPR :: reference :: I :: v3 = p0 $this .typeCode::DD,40668
40668 :: PRED :: IF :: null :: switch v3::CD,40669:CD,40670:CD,40671
40669 :: NORM :: compound :: Ljava/lang/String :: return #(CHARACTER)::DD,40662
40670 :: NORM :: compound :: Ljava/lang/String :: return #(VARCHAR)::DD,40662
40671 :: NORM :: compound :: Ljava/lang/String :: return #(CLOB)::DD,40662
40672 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(CharacterType))::CL,33706
40697 :: PRED :: IF :: null :: switch p2 $type ::
40698 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(101)::
40701 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(103)::
40705 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(104)::
40708 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(106)::
40712 :: EXPR :: modify :: I :: p0 $this .startIntervalType = #(101)::
40715 :: EXPR :: modify :: I :: p0 $this .endIntervalType = #(106)::
40719 :: CALL :: call :: Ljava/lang/RuntimeException :: v11 = runtimeError(#(201), #(DTIType))::CL,33706
40730 :: CALL :: call :: I :: v19 = v16.get(v17)::JM,40735:CL,49296
40735 :: EXPR :: modify :: I :: p0 $this .startPartIndex = v19::
40743 :: CALL :: call :: I :: v23 = v20.get(v21)::JM,40748:CL,49296
40748 :: EXPR :: modify :: I :: p0 $this .endPartIndex = v23::
40775 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.getNameStringPrivate()::CE,40776:CD,40782:CD,40788
40776 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.types.DateTimeType.getNameStringPrivate()::JM,34321
40779 :: EXPR :: reference :: I :: v3 = p0 $this .typeCode::DD,40782
40782 :: PRED :: IF :: null :: switch v3::CD,40783:CD,40784:CD,40785:CD,40786:CD,40787
40783 :: NORM :: compound :: Ljava/lang/String :: return #(DATE)::DD,40776
40784 :: NORM :: compound :: Ljava/lang/String :: return #(TIME)::DD,40776
40785 :: NORM :: compound :: Ljava/lang/String :: return #(TIME WITH TIME ZONE)::DD,40776
40786 :: NORM :: compound :: Ljava/lang/String :: return #(TIMESTAMP)::DD,40776
40787 :: NORM :: compound :: Ljava/lang/String :: return #(TIMESTAMP WITH TIME ZONE)::DD,40776
40788 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(DateTimeType))::CL,33706
40800 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.getStartIntervalType(int)::CD,40811
40811 :: CALL :: call :: Ljava/lang/RuntimeException :: v6 = runtimeError(#(201), #(IntervalType))::CL,33706
40832 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.getEndIntervalType(int)::CD,40850
40850 :: CALL :: call :: Ljava/lang/RuntimeException :: v6 = runtimeError(#(201), #(IntervalType))::CL,33706
40907 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v16 = error(#(3406))::CL,33668
40912 :: PRED :: IF :: null :: switch p5 $scale ::
40913 :: EXPR :: modify :: Z :: p0 $this .isYearMonth = #(1)::
40917 :: EXPR :: modify :: Z :: p0 $this .isYearMonth = #(0)::
40920 :: EXPR :: modify :: Z :: p0 $this .defaultPrecision = p7 $endIntervalType ::
40942 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemove(long,java.lang.Object,java.lang.Object,boolean)::CD,40954:CD,41003:CD,41004:CD,41257:JM,40992:JM,41200:JM,41104:JM,41187:JM,41093:JM,40982:JM,41222:JM,41144:JM,41211:JM,41196:JM,41005:JM,41006
40954 :: CALL :: call :: I :: v10 = v8.getHashIndex(v7)::CL,47892
40959 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v11 = p0 $this .hashIndex::
40962 :: EXPR :: reference :: [I :: v12 = v11.hashTable::
40965 :: EXPR :: reference :: I :: v13 = v12[v10]::DD,41257
40970 :: EXPR :: reference :: Z :: v17 = p0 $this .isIntKey::DD,40973
40973 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 61::CD,40981:CD,40982:CD,40983:CD,40992:CD,40993
40974 :: EXPR :: reference :: [I :: v18 = p0 $this .intKeyTable::
40977 :: EXPR :: reference :: I :: v19 = v18[v28]::DD,40981
40981 :: EXPR :: assign :: J :: v20 = CONVERT I to J v19::CF,40982
40982 :: EXPR :: assign :: Z :: v21 = p1 $longKey  == v20::DD,40983
40983 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 79::CD,40998:CD,41003:CD,41257
40985 :: EXPR :: reference :: [J :: v22 = p0 $this .longKeyTable::
40988 :: EXPR :: reference :: J :: v23 = v22[v28]::DD,40992
40992 :: EXPR :: assign :: Z :: v24 = p1 $longKey  == v23::DD,40993
40993 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 79::CD,40998:CD,41003:CD,41257
40998 :: CALL :: call :: I :: v27 = v25.getNextLookup(v28)::JM,41257:CL,48120
41003 :: PRED :: IF :: Z :: if (v28 >= #(0)) goto 37::CD,40973:CF,41004
41004 :: PRED :: IF :: Z :: if (v28 < #(0)) goto 300::CD,41005:CD,41144
41005 :: PRED :: IF :: Z :: if (p4 $objectValueTwo  == #(0)) goto 210::CD,41006:CD,41007:CD,41017:CD,41050:CD,41059:CD,41070:CD,41082:CD,41100:CD,41111
41006 :: EXPR :: assign :: Z :: v71 = p1 $longKey  == #(0 l)::DD,41007
41007 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 121::
41008 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
41011 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
41014 :: EXPR :: reference :: Z :: v72 = p0 $this .isIntKey::DD,41017
41017 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 139::
41018 :: EXPR :: reference :: [I :: v74 = p0 $this .intKeyTable::
41021 :: EXPR :: modify :: I :: v74[v28] = #(0)::
41026 :: EXPR :: reference :: [J :: v73 = p0 $this .longKeyTable::
41029 :: EXPR :: modify :: J :: v73[v28] = #(0 l)::
41040 :: EXPR :: reference :: [Ljava/lang/Object :: v77 = p0 $this .objectValueTable::
41043 :: EXPR :: modify :: Ljava/lang/Object :: v77[v28] = #(null)::
41050 :: CALL :: call :: V :: v78.unlinkNode(v10, v29, v28)::CL,48135
41056 :: EXPR :: reference :: Z :: v80 = p0 $this .isTwoObjectValue::DD,41059
41059 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 192::
41060 :: EXPR :: reference :: [Ljava/lang/Object :: v81 = p0 $this .objectKeyTable::
41063 :: EXPR :: modify :: Ljava/lang/Object :: v81[v28] = #(null)::
41067 :: EXPR :: reference :: [I :: v82 = p0 $this .accessTable::DD,41070
41070 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 208::
41071 :: EXPR :: reference :: [I :: v83 = p0 $this .accessTable::
41074 :: EXPR :: modify :: I :: v83[v28] = #(0)::
41079 :: EXPR :: reference :: Z :: v56 = p0 $this .isObjectValue::DD,41082
41082 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 234::
41090 :: EXPR :: reference :: [Ljava/lang/Object :: v59 = p0 $this .objectValueTable::
41093 :: EXPR :: modify :: Ljava/lang/Object :: v59[v28] = p2 $null ::
41097 :: EXPR :: reference :: Z :: v61 = p0 $this .isTwoObjectValue::DD,41100
41100 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 250::
41101 :: EXPR :: reference :: [Ljava/lang/Object :: v62 = p0 $this .objectKeyTable::
41104 :: EXPR :: modify :: Ljava/lang/Object :: v62[v28] = p3 $objectValue ::
41108 :: EXPR :: reference :: Z :: v63 = p0 $this .isLastAccessCount::DD,41111
41111 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 278::CD,41118:CD,41130
41112 :: EXPR :: reference :: [I :: v68 = p0 $this .accessTable::
41115 :: EXPR :: reference :: I :: v69 = p0 $this .accessCount::DD,41118
41118 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v69 + #(1)::DD,41119:DD,41122
41119 :: EXPR :: modify :: I :: p0 $this .accessCount = v70::
41122 :: EXPR :: modify :: I :: v68[v28] = v70::
41127 :: EXPR :: reference :: Z :: v64 = p0 $this .isAccessCount::DD,41130
41130 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 297::CD,41138
41131 :: EXPR :: reference :: [I :: v65 = p0 $this .accessTable::
41134 :: EXPR :: reference :: I :: v66 = v65[v28]::DD,41138
41138 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v66 + #(1)::DD,41139
41139 :: EXPR :: modify :: I :: v65[v28] = v67::
41144 :: PRED :: IF :: Z :: if (p4 $objectValueTwo  == #(0)) goto 307::CD,41155
41146 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v30 = p0 $this .hashIndex::
41149 :: EXPR :: reference :: I :: v31 = v30.elementCount::DD,41155
41152 :: EXPR :: reference :: I :: v32 = p0 $this .threshold::DD,41155
41155 :: PRED :: IF :: Z :: if (v31 < v32) goto 341::CD,41156:CD,41160:CD,41174:CD,41183:CD,41200:CD,41201:CD,41218:CD,41229
41156 :: CALL :: call :: Z :: v53 = p0 $this .reset()::JM,41160:CL,48547
41160 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 339::CD,41161
41161 :: CALL :: call :: Ljava/lang/Object :: v55 = p0 $this .addOrRemove(p1 $longKey , p2 $null , p3 $objectValue , p4 $objectValueTwo )::CL,40942
41174 :: CALL :: call :: I :: v35 = v33.linkNode(v10, v29)::JM,41205:CL,48657
41180 :: EXPR :: reference :: Z :: v36 = p0 $this .isIntKey::DD,41183
41183 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 373::CD,41187
41184 :: EXPR :: reference :: [I :: v38 = p0 $this .intKeyTable::
41187 :: EXPR :: assign :: I :: v39 = CONVERT J to I p1 $longKey ::DD,41188
41188 :: EXPR :: modify :: I :: v38[v35] = v39::
41193 :: EXPR :: reference :: [J :: v37 = p0 $this .longKeyTable::
41196 :: EXPR :: modify :: J :: v37[v35] = p1 $longKey ::
41200 :: EXPR :: assign :: Z :: v41 = p1 $longKey  == #(0 l)::DD,41201
41201 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 398::
41202 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
41205 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v35::
41208 :: EXPR :: reference :: [Ljava/lang/Object :: v43 = p0 $this .objectValueTable::
41211 :: EXPR :: modify :: Ljava/lang/Object :: v43[v35] = p2 $null ::
41215 :: EXPR :: reference :: Z :: v44 = p0 $this .isTwoObjectValue::DD,41218
41218 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 422::
41219 :: EXPR :: reference :: [Ljava/lang/Object :: v45 = p0 $this .objectKeyTable::
41222 :: EXPR :: modify :: Ljava/lang/Object :: v45[v35] = p3 $objectValue ::
41226 :: EXPR :: reference :: Z :: v46 = p0 $this .isLastAccessCount::DD,41229
41229 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 450::CD,41236:CD,41248
41230 :: EXPR :: reference :: [I :: v49 = p0 $this .accessTable::
41233 :: EXPR :: reference :: I :: v50 = p0 $this .accessCount::DD,41236
41236 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v50 + #(1)::DD,41237:DD,41240
41237 :: EXPR :: modify :: I :: p0 $this .accessCount = v51::
41240 :: EXPR :: modify :: I :: v49[v35] = v51::
41245 :: EXPR :: reference :: Z :: v47 = p0 $this .isAccessCount::DD,41248
41248 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 466::
41249 :: EXPR :: reference :: [I :: v48 = p0 $this .accessTable::
41252 :: EXPR :: modify :: I :: v48[v35] = #(1)::
41257 :: EXPR :: assign :: null :: PHI v28 = v13, v27::DD,41003:DD,41004
41409 :: ENTR :: entry :: null :: org.hsqldb.lib.FrameworkLogger.populateJdkToLog4jLevels(java.lang.String)::CD,41423:CD,41429:CD,41431:CD,41433:CD,41438:CD,41444:CD,41450:CD,41452:CD,41454:CD,41459:CD,41465:CD,41471:CD,41473:CD,41475:CD,41480:CD,41486:CD,41492:CD,41494:CD,41496:CD,41501:CD,41507:CD,41513:CD,41515:CD,41517:CD,41522:CD,41528:CD,41534:CD,41536:CD,41538:CD,41543:CD,41549:CD,41555:CD,41557:CD,41559:CD,41564:CD,41570:CD,41576:CD,41578:CD,41580:CD,41585:CD,41591
41423 :: CALL :: call :: Ljava/lang/reflect/Method :: v11 = v4.getMethod(#(toLevel), v7)::
41429 :: EXPR :: reference :: Ljava/util/Map :: v12 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41431 :: EXPR :: reference :: Ljava/util/logging/Level :: v13 = java.util.logging.Level.ALL::CF,41433
41433 :: NORM :: declaration :: [Ljava/lang/Object :: v15 = new java.lang.Object[]::
41438 :: CALL :: call :: Ljava/lang/Object :: v18 = v11.invoke(#(null), v15)::
41444 :: CALL :: call :: Ljava/lang/Object :: v20 = v12.put(v13, v18)::
41450 :: EXPR :: reference :: Ljava/util/Map :: v21 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41452 :: EXPR :: reference :: Ljava/util/logging/Level :: v22 = java.util.logging.Level.FINER::CF,41454
41454 :: NORM :: declaration :: [Ljava/lang/Object :: v23 = new java.lang.Object[]::
41459 :: CALL :: call :: Ljava/lang/Object :: v26 = v11.invoke(#(null), v23)::
41465 :: CALL :: call :: Ljava/lang/Object :: v28 = v21.put(v22, v26)::
41471 :: EXPR :: reference :: Ljava/util/Map :: v29 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41473 :: EXPR :: reference :: Ljava/util/logging/Level :: v30 = java.util.logging.Level.WARNING::CF,41475
41475 :: NORM :: declaration :: [Ljava/lang/Object :: v31 = new java.lang.Object[]::
41480 :: CALL :: call :: Ljava/lang/Object :: v34 = v11.invoke(#(null), v31)::
41486 :: CALL :: call :: Ljava/lang/Object :: v36 = v29.put(v30, v34)::
41492 :: EXPR :: reference :: Ljava/util/Map :: v37 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41494 :: EXPR :: reference :: Ljava/util/logging/Level :: v38 = java.util.logging.Level.SEVERE::CF,41496
41496 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
41501 :: CALL :: call :: Ljava/lang/Object :: v42 = v11.invoke(#(null), v39)::
41507 :: CALL :: call :: Ljava/lang/Object :: v44 = v37.put(v38, v42)::
41513 :: EXPR :: reference :: Ljava/util/Map :: v45 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41515 :: EXPR :: reference :: Ljava/util/logging/Level :: v46 = java.util.logging.Level.INFO::CF,41517
41517 :: NORM :: declaration :: [Ljava/lang/Object :: v47 = new java.lang.Object[]::
41522 :: CALL :: call :: Ljava/lang/Object :: v50 = v11.invoke(#(null), v47)::
41528 :: CALL :: call :: Ljava/lang/Object :: v52 = v45.put(v46, v50)::
41534 :: EXPR :: reference :: Ljava/util/Map :: v53 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41536 :: EXPR :: reference :: Ljava/util/logging/Level :: v54 = java.util.logging.Level.OFF::CF,41538
41538 :: NORM :: declaration :: [Ljava/lang/Object :: v55 = new java.lang.Object[]::
41543 :: CALL :: call :: Ljava/lang/Object :: v58 = v11.invoke(#(null), v55)::
41549 :: CALL :: call :: Ljava/lang/Object :: v60 = v53.put(v54, v58)::
41555 :: EXPR :: reference :: Ljava/util/Map :: v61 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41557 :: EXPR :: reference :: Ljava/util/logging/Level :: v62 = java.util.logging.Level.FINEST::CF,41559
41559 :: NORM :: declaration :: [Ljava/lang/Object :: v63 = new java.lang.Object[]::
41564 :: CALL :: call :: Ljava/lang/Object :: v66 = v11.invoke(#(null), v63)::
41570 :: CALL :: call :: Ljava/lang/Object :: v68 = v61.put(v62, v66)::
41576 :: EXPR :: reference :: Ljava/util/Map :: v69 = org.hsqldb.lib.FrameworkLogger.jdkToLog4jLevels::
41578 :: EXPR :: reference :: Ljava/util/logging/Level :: v70 = java.util.logging.Level.WARNING::CF,41580
41580 :: NORM :: declaration :: [Ljava/lang/Object :: v71 = new java.lang.Object[]::
41585 :: CALL :: call :: Ljava/lang/Object :: v74 = v11.invoke(#(null), v71)::
41591 :: CALL :: call :: Ljava/lang/Object :: v76 = v69.put(v70, v74)::
41701 :: ENTR :: entry :: null :: org.hsqldb.lib.FrameworkLogger.isDefaultJdkConfig()::CE,41702:CD,41704:CD,41705:CD,41714:CD,41718:CD,41792
41702 :: EXIT :: exit :: Z :: org.hsqldb.lib.FrameworkLogger.isDefaultJdkConfig()::JM,34692
41704 :: NORM :: declaration :: Ljava/io/File :: v2 = new java.io.File::JM,41705
41705 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(java.home))::JM,41705
41714 :: CALL :: call :: Z :: v9 = v2.isFile()::JM,41718
41718 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,41719:CD,41720:CD,41728:CD,41732:CD,41736:CD,41776:CD,41780
41719 :: NORM :: compound :: Z :: return #(0)::DD,41702
41720 :: CALL :: call :: Ljava/util/logging/LogManager :: v13 = getLogManager()::JM,41752:JM,41769
41728 :: NORM :: declaration :: Ljava/util/Properties :: v16 = new java.util.Properties::JM,41746:JM,41780
41732 :: CALL :: call :: V :: v16.load(v14)::
41736 :: CALL :: call :: Ljava/util/Enumeration :: v24 = v16.propertyNames()::JM,41746:JM,41780
41742 :: CALL :: call :: Ljava/lang/Object :: v30 = v24.nextElement()::JM,41746:JM,41780
41746 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::JM,41752:JM,41769
41747 :: CALL :: call :: Ljava/lang/String :: v33 = v13.getProperty(v31)::JM,41752:JM,41769
41752 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 112::CD,41758:CD,41759:CD,41764:CD,41769:JM,41752
41758 :: NORM :: compound :: Z :: return #(0)::DD,41702
41759 :: CALL :: call :: Ljava/lang/String :: v35 = v13.getProperty(v31)::JM,41752:JM,41769
41764 :: CALL :: call :: Z :: v37 = v35.equals(v33)::JM,41769
41769 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 140::CD,41775:CD,41776:CD,41780
41775 :: NORM :: compound :: Z :: return #(0)::DD,41702
41776 :: CALL :: call :: Z :: v26 = v24.hasMoreElements()::JM,41746:JM,41780
41780 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 66::CD,41742:CD,41746:CD,41747:CD,41752:CD,41786
41786 :: NORM :: compound :: Z :: return #(1)::DD,41702
41792 :: NORM :: compound :: Z :: return #(0)::DD,41702
42567 :: EXPR :: modify :: Lorg/hsqldb/lib/HashMap :: p0 $this .this$0 = p1 $null ::
42603 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.nextLookup(int)::CE,42604:CD,42608:CD,42671:CD,42673
42604 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.nextLookup(int)::JM,35236
42608 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $lookup  + #(1)::DD,42673
42610 :: EXPR :: reference :: Z :: v8 = p0 $this .isObjectKey::DD,42613
42613 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 25::CD,42621:CD,42626
42614 :: EXPR :: reference :: [Ljava/lang/Object :: v10 = p0 $this .objectKeyTable::
42617 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v25]::DD,42621
42621 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 89::CD,42622:CD,42664:CD,42671:CD,42673
42622 :: NORM :: compound :: I :: return v25::CF,42604
42623 :: EXPR :: reference :: Z :: v13 = p0 $this .isIntKey::DD,42626
42626 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 60::CD,42634:CD,42652:CD,42653
42627 :: EXPR :: reference :: [I :: v14 = p0 $this .intKeyTable::
42630 :: EXPR :: reference :: I :: v15 = v14[v25]::DD,42634
42634 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,42635:CD,42639
42635 :: NORM :: compound :: I :: return v25::CF,42604
42636 :: EXPR :: reference :: Z :: v16 = p0 $this .hasZeroKey::DD,42639
42639 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 89::CD,42643:CD,42664:CD,42671:CD,42673
42640 :: EXPR :: reference :: I :: v17 = p0 $this .zeroKeyIndex::DD,42643
42643 :: PRED :: IF :: Z :: if (v25 != v17) goto 89::CD,42644:CD,42664:CD,42671:CD,42673
42644 :: NORM :: compound :: I :: return v25::CF,42604
42645 :: EXPR :: reference :: [J :: v18 = p0 $this .longKeyTable::
42648 :: EXPR :: reference :: J :: v19 = v18[v25]::DD,42652
42652 :: EXPR :: assign :: Z :: v21 = v19 == #(0 l)::DD,42653
42653 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 73::CD,42654:CD,42658
42654 :: NORM :: compound :: I :: return v25::CF,42604
42655 :: EXPR :: reference :: Z :: v22 = p0 $this .hasZeroKey::DD,42658
42658 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 89::CD,42662:CD,42664:CD,42671:CD,42673
42659 :: EXPR :: reference :: I :: v23 = p0 $this .zeroKeyIndex::DD,42662
42662 :: PRED :: IF :: Z :: if (v25 != v23) goto 89::CD,42663:CD,42664:CD,42671:CD,42673
42663 :: NORM :: compound :: I :: return v25::CF,42604
42664 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,42673
42665 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v6 = p0 $this .hashIndex::
42668 :: EXPR :: reference :: I :: v7 = v6.newNodePointer::DD,42671
42671 :: PRED :: IF :: Z :: if (v25 < v7) goto 7::CD,42613:CD,42672
42672 :: NORM :: compound :: I :: return #(-1)::CF,42604
42673 :: EXPR :: assign :: null :: PHI v25 = v5, v24::DD,42622:DD,42635:DD,42643:DD,42644:DD,42654:DD,42662:DD,42663:DD,42664:DD,42671
42717 :: EXPR :: modify :: I :: p0 $this .type = p1 $type ::
43140 :: EXIT :: exit :: Ljava/lang/Object :: java.nio.charset.Charset.3.run()::
43169 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,43140
44036 :: EXIT :: exit :: Ljava/lang/Object :: java.nio.charset.Charset.2.run()::
44039 :: CALL :: call :: Ljava/util/Iterator :: v4 = access$1()::JM,44062:JM,44047
44043 :: CALL :: call :: Ljava/lang/Object :: v9 = v4.next()::JM,44062:JM,44047
44047 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::JM,44051:JM,44056:JM,44057
44048 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .val$charsetName::JM,44051:JM,44056:JM,44057
44051 :: CALL :: call :: Ljava/nio/charset/Charset :: v13 = v10.charsetForName(v11)::JM,44051:JM,44056:JM,44057
44056 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 33::CD,44057:CD,44058:CD,44062:JM,44047
44057 :: NORM :: compound :: Ljava/lang/Object :: return v13::DD,44036
44058 :: CALL :: call :: Z :: v6 = v4.hasNext()::JM,44062:JM,44047
44062 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 8::CD,44043:CD,44047:CD,44051:CD,44056:CD,44063:JM,44062
44063 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,44036
44089 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p2 $name ::
44092 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .statementName = p2 $name ::
44095 :: EXPR :: modify :: Z :: p0 $this .isNameQuoted = p4 $isQuoted ::
44098 :: EXPR :: reference :: Z :: v8 = p0 $this .isNameQuoted::DD,44101
44101 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 40::CD,44102
44102 :: CALL :: call :: Ljava/lang/String :: v13 = toQuotedString(p2 $name , #(34), #(1))::JM,44108:CL,51574
44108 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .statementName = v13::
44135 :: EXPR :: modify :: I :: p0 $this .columnIndex = #(-1)::
44138 :: EXPR :: modify :: I :: p0 $this .queryTableColumnIndex = #(-1)::
44141 :: EXPR :: modify :: I :: p0 $this .resultTableColumnIndex = #(-1)::
44144 :: EXPR :: modify :: I :: p0 $this .parameterIndex = #(-1)::
44147 :: EXPR :: modify :: I :: p0 $this .rangePosition = #(-1)::
44150 :: EXPR :: modify :: B :: p0 $this .nullability = #(2)::
44153 :: EXPR :: modify :: I :: p0 $this .opType = p1 $type ::
44156 :: EXPR :: reference :: [Lorg/hsqldb/Expression :: v7 = org.hsqldb.Expression.emptyArray::DD,44158
44158 :: EXPR :: modify :: [Lorg/hsqldb/Expression :: p0 $this .nodes = v7::
44179 :: ENTR :: entry :: null :: org.hsqldb.lib.OrderedIntHashSet.get(int)::CD,44184
44184 :: CALL :: call :: V :: p0 $this .checkRange(p1 $index )::CL,51686
44200 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.duplicateArray(java.lang.Object)::CE,44201:CD,44204:CD,44208:CD,44212:CD,44216:CD,44228
44201 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.ArrayUtil.duplicateArray(java.lang.Object)::JM,35970
44204 :: CALL :: call :: I :: v4 = getLength(p1 $source )::JM,44208:JM,44212:JM,44228:JM,44216:JM,44204
44208 :: CALL :: call :: Ljava/lang/Class :: v6 = p1 $source .getClass()::JM,44208:JM,44212:JM,44228:JM,44216:JM,44204
44212 :: CALL :: call :: Ljava/lang/Class :: v8 = v6.getComponentType()::JM,44212:JM,44228:JM,44216
44216 :: CALL :: call :: Ljava/lang/Object :: v10 = newInstance(v8, v4)::JM,44228:JM,44216:JM,44212
44228 :: NORM :: compound :: Ljava/lang/Object :: return v10::DD,44201
44250 :: CALL :: call :: J :: v8 = p3 $nanos .getIntervalValueLimit()::CL,51707
44256 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v13 = error(#(3435))::CL,33668
44261 :: EXPR :: modify :: J :: p0 $this .units = p1 $seconds ::
44264 :: EXPR :: modify :: I :: p0 $this .nanos = p2 $null ::
44895 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getMessage(int)::CE,44896:CD,44899:CD,44905
44896 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getMessage(int)::JM,36569
44899 :: CALL :: call :: Ljava/lang/String :: v6 = getMessage(p1 $errorCode , #(0), #(null))::JM,44905:CL,49110
44905 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,44896
44921 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .message = p2 $message ::
44924 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .state = p3 $state ::
44927 :: EXPR :: modify :: I :: p0 $this .code = p4 $code ::
45062 :: ENTR :: entry :: null :: org.hsqldb.error.Error.error(int,java.lang.Throwable)::CD,45067:CD,45074:JM,52338
45067 :: CALL :: call :: Ljava/lang/String :: v7 = getMessage(p1 $code , #(0), #(null))::CL,49110
45074 :: CALL :: call :: Ljava/lang/String :: v11 = v7.substring(#(0), #(5))::
45395 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.checkPower(int,int)::CD,45406
45406 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v9 = error(#(5556))::CL,33668
45415 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.hasCache()::CE,45416:CD,45422
45416 :: EXIT :: exit :: Z :: org.hsqldb.persist.Logger.hasCache()::JM,37054
45419 :: EXPR :: reference :: Lorg/hsqldb/persist/Log :: v3 = p0 $this .log::DD,45422
45422 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,45423:CD,45427:CD,45431
45423 :: NORM :: compound :: Z :: return #(0)::CF,45416
45427 :: CALL :: call :: Z :: v7 = v5.hasCache()::JM,45431:CL,52461
45431 :: NORM :: compound :: Z :: return v7::CF,45416
45436 :: ENTR :: entry :: null :: org.hsqldb.persist.Logger.getCache()::CD,45443
45440 :: EXPR :: reference :: Lorg/hsqldb/persist/Log :: v3 = p0 $this .log::DD,45443
45443 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,45448
45448 :: CALL :: call :: Lorg/hsqldb/persist/DataFileCache :: v7 = v5.getCache()::CL,52475
45457 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.setDataSpaceManager()::CD,45476
45467 :: EXPR :: reference :: Lorg/hsqldb/Database :: v5 = p0 $this .database::
45470 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v6 = v5.logger::
45473 :: EXPR :: reference :: I :: v7 = v6.propFileSpaceValue::DD,45476:DD,45503
45476 :: PRED :: IF :: Z :: if (v7 <= #(0)) goto 66::CD,45480:CD,45481:CD,45503
45477 :: EXPR :: reference :: J :: v9 = p0 $this .spaceManagerPosition::DD,45480
45480 :: EXPR :: assign :: Z :: v11 = v9 == #(0 l)::DD,45481
45481 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 66::CD,45485:JM,63953:JM,63944:JM,52857:JM,52858:JM,52621:JM,52910:CD,45503
45485 :: CALL :: call :: V :: v23.reset()::CL,52533:CL,52521
45503 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 112::CD,45507:CD,45508
45504 :: EXPR :: reference :: J :: v12 = p0 $this .spaceManagerPosition::DD,45507
45507 :: EXPR :: assign :: Z :: v13 = v12 == #(0 l)::DD,45508
45508 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 112::CD,45512:JM,53104:JM,53064:JM,53053:JM,53054
45512 :: CALL :: call :: V :: v16.reset()::CL,52533:CL,52521
45574 :: ENTR :: entry :: null :: org.hsqldb.lib.SimpleLog.setupWriter()::CD,45581
45578 :: EXPR :: reference :: I :: v3 = p0 $this .level::DD,45581
45581 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 13::CD,45589
45586 :: EXPR :: reference :: Ljava/io/PrintWriter :: v5 = p0 $this .writer::DD,45589
45589 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 60::CD,45593
45590 :: EXPR :: reference :: Z :: v7 = p0 $this .isSystem::DD,45593
45593 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 43::CF,45605:CD,45613
45605 :: NORM :: declaration :: Ljava/io/File :: v8 = new java.io.File::
45606 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .filePath::
45613 :: CALL :: call :: V :: p0 $this .setupLog(v8)::CL,53202
45633 :: ENTR :: entry :: null :: org.hsqldb.persist.LockFile.newLockFile(java.lang.String)::CD,45637:CD,45640:CD,45645:CD,45650
45637 :: CALL :: call :: Lorg/hsqldb/persist/LockFile :: v4 = newNIOLockFile()::JM,45650:JM,45640:CL,53253
45640 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 18::CF,45650:CF,45641
45641 :: NORM :: declaration :: Lorg/hsqldb/persist/LockFile :: v6 = new org.hsqldb.persist.LockFile::DD,45650
45645 :: CALL :: call :: V :: v8.setPath(p1 $path )::CL,53277
45650 :: EXPR :: assign :: null :: PHI v8 = v4, v6::
46871 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.release()::CD,46884
46881 :: EXPR :: reference :: Lorg/hsqldb/persist/RandomAccessInterface :: v5 = p0 $this .dataFile::DD,46884
46884 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 27::CD,46895:CD,46908
46892 :: EXPR :: reference :: Lorg/hsqldb/persist/RAShadowFile :: v7 = p0 $this .shadowFile::DD,46895
46895 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 46::CD,46899
46899 :: CALL :: call :: V :: v8.close()::CL,54711
46908 :: CALL :: call :: V :: v10.close()::CL,54777:CL,54741
47354 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.backupFile(org.hsqldb.Database,java.lang.String,java.lang.String,boolean)::CD,47364:CD,47374:CD,47391:CD,47434:CD,47455:JM,47380:JM,47398:JM,47403:JM,47404:JM,47375
47361 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v6 = p1 $database .logger::JM,47364:JM,47380:JM,47398:JM,47403:JM,47375
47364 :: CALL :: call :: Lorg/hsqldb/lib/FileAccess :: v8 = v6.getFileAccess()::JM,47364:JM,47380:JM,47398:JM,47403:JM,47375
47368 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v9 = p1 $database .logger::
47371 :: EXPR :: reference :: Z :: v10 = v9.propIncrementBackup::DD,47374
47374 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 60::CD,47375:CD,47380:CD,47398:CD,47403
47375 :: CALL :: call :: Z :: v35 = v8.isStreamElement(p3 $backupFileName )::JM,47380:JM,47398:JM,47403:JM,47375:JM,47404
47380 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 56::CD,47381
47381 :: CALL :: call :: V :: deleteFile(p1 $database , p3 $backupFileName )::CL,56194
47391 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v40 = error(#(466), #(cannot delete old bac...))::CL,30204
47398 :: CALL :: call :: Z :: v13 = v8.isStreamElement(p2 $fileName )::JM,47380:JM,47398:JM,47403:JM,47375:JM,47404
47403 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 155::CD,47404:CD,47440
47404 :: PRED :: IF :: Z :: if (p4 $newFile  == #(0)) goto 97::CD,47406:CD,47424
47406 :: CALL :: call :: Ljava/lang/String :: v23 = valueOf(p3 $backupFileName )::
47424 :: CALL :: call :: V :: deleteFile(p1 $database , p3 $backupFileName )::CL,56194
47434 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v20 = error(#(466), #(cannot delete old bac...))::CL,30204
47440 :: CALL :: call :: V :: archive(p2 $fileName , v30, v8, #(1))::CL,56274
47455 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v47 = error(#(466), v41)::CL,45062
47815 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.increaseCapacity()::CD,47832
47832 :: CALL :: call :: V :: p0 $this .resize(v13)::CL,57214
47892 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getHashIndex(int)::CE,47893:CD,47897:CD,47901:CD,47902:CD,47903
47893 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getHashIndex(int)::
47897 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $hash  && #(2147483647)::DD,47902
47898 :: EXPR :: reference :: [I :: v6 = p0 $this .hashTable::DD,47901
47901 :: EXPR :: assign :: I :: v7 = v6.length::CF,47902
47902 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 % v7::CF,47903
47903 :: NORM :: compound :: I :: return v8::CF,47893
47907 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.equals(java.lang.Object)::CE,47908:CD,47912:CD,47913:JM,47914
47908 :: EXIT :: exit :: Z :: org.hsqldb.persist.CachedObjectBase.equals(java.lang.Object)::JM,38499:JM,39907:JM,48845:JM,57474:JM,57555:JM,68694
47912 :: EXPR :: assign :: Z :: v4=p1 $other  INSTANCEOF org.hsqldb.persist.CachedObjectBase::DD,47913
47913 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 25::CD,47914:CD,47921:CD,47922:CD,47924
47914 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $other ::
47915 :: EXPR :: reference :: J :: v7 = v6.position::DD,47921
47918 :: EXPR :: reference :: J :: v8 = p0 $this .position::DD,47921
47921 :: EXPR :: assign :: Z :: v9 = v7 == v8::DD,47922
47922 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 25::CD,47923:CD,47924
47923 :: NORM :: compound :: Z :: return #(1)::CF,47908
47924 :: NORM :: compound :: Z :: return #(0)::CF,47908
47932 :: ENTR :: entry :: null :: org.hsqldb.types.DateTimeType.equals(java.lang.Object)::CE,47933:CD,47937:JM,47939:JM,47947
47933 :: EXIT :: exit :: Z :: org.hsqldb.types.DateTimeType.equals(java.lang.Object)::JM,38499:JM,39907:JM,48845:JM,57474:JM,57555:JM,57569:JM,68694
47937 :: PRED :: IF :: Z :: if (p1 $other  != p0 $this ) goto 8::CD,47938:CD,47939:CD,47940
47938 :: NORM :: compound :: Z :: return #(1)::CF,47933
47939 :: EXPR :: assign :: Z :: v4=p1 $other  INSTANCEOF org.hsqldb.types.DateTimeType::DD,47940
47940 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 41::CD,47941:CD,47946:CD,47957
47941 :: CALL :: call :: Z :: v7 = p0 $this .equals(p1 $other )::JM,47946:CL,47984
47946 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 39::CD,47947:CD,47954:CD,47956
47947 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST p1 $other ::
47948 :: EXPR :: reference :: Z :: v9 = v8.withTimeZone::DD,47954
47951 :: EXPR :: reference :: Z :: v10 = p0 $this .withTimeZone::DD,47954
47954 :: PRED :: IF :: Z :: if (v9 != v10) goto 39::CD,47955:CD,47956
47955 :: NORM :: compound :: Z :: return #(1)::CF,47933
47956 :: NORM :: compound :: Z :: return #(0)::CF,47933
47957 :: NORM :: compound :: Z :: return #(0)::CF,47933
47971 :: ENTR :: entry :: null :: org.hsqldb.types.CharacterType.equals(java.lang.Object)::CE,47972:CD,47976:CD,47981
47972 :: EXIT :: exit :: Z :: org.hsqldb.types.CharacterType.equals(java.lang.Object)::JM,38499:JM,39907:JM,48845:JM,57474:JM,57555:JM,57569:JM,68694
47976 :: CALL :: call :: Z :: v5 = p0 $this .equals(p1 $other )::JM,47981:CL,47984
47981 :: NORM :: compound :: Z :: return v5::CF,47972
47984 :: ENTR :: entry :: null :: org.hsqldb.types.Type.equals(java.lang.Object)::CE,47985:CD,47989:JM,48001:JM,48003:JM,48020:JM,47991:JM,47993:JM,48011:JM,48028:JM,47997
47985 :: EXIT :: exit :: Z :: org.hsqldb.types.Type.equals(java.lang.Object)::JM,38499:JM,39907:JM,47946:JM,47981:JM,48845:JM,57474:JM,57555:JM,57569:JM,68694
47989 :: PRED :: IF :: Z :: if (p1 $other  != p0 $this ) goto 8::CD,47990:CD,47991:CD,47992
47990 :: NORM :: compound :: Z :: return #(1)::CF,47985
47991 :: EXPR :: assign :: Z :: v4=p1 $other  INSTANCEOF org.hsqldb.types.Type::DD,47992
47992 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 89::CD,47993:CD,47997:CD,48001:CD,48038:JM,48003:JM,48020:JM,47989:JM,47991:JM,48011:JM,48028
47993 :: CALL :: call :: Ljava/lang/Class :: v7 = p0 $this .getClass()::JM,48001:JM,48003:JM,48020:JM,47989:JM,47991:JM,47993:JM,48011:JM,48028:JM,47997
47997 :: CALL :: call :: Ljava/lang/Class :: v9 = p1 $other .getClass()::JM,48001:JM,48003:JM,48020:JM,47989:JM,47993:JM,48011:JM,48028:JM,47997
48001 :: PRED :: IF :: Z :: if (v7 == v9) goto 28::CD,48002:CD,48003:CD,48010
48002 :: NORM :: compound :: Z :: return #(0)::CF,47985
48003 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST p1 $other ::
48004 :: EXPR :: reference :: I :: v11 = v10.typeCode::DD,48010
48007 :: EXPR :: reference :: I :: v12 = p0 $this .typeCode::DD,48010
48010 :: PRED :: IF :: Z :: if (v11 != v12) goto 87::CD,48011:CD,48018:CD,48019:CD,48037
48011 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST p1 $other ::
48012 :: EXPR :: reference :: J :: v14 = v13.precision::DD,48018
48015 :: EXPR :: reference :: J :: v15 = p0 $this .precision::DD,48018
48018 :: EXPR :: assign :: Z :: v16 = v14 == v15::DD,48019
48019 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 87::CD,48020:CD,48027:CD,48037
48020 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST p1 $other ::
48021 :: EXPR :: reference :: I :: v18 = v17.scale::DD,48027
48024 :: EXPR :: reference :: I :: v19 = p0 $this .scale::DD,48027
48027 :: PRED :: IF :: Z :: if (v18 != v19) goto 87::CD,48028:CD,48035:CD,48037
48028 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST p1 $other ::
48029 :: EXPR :: reference :: Lorg/hsqldb/types/UserTypeModifier :: v21 = v20.userTypeModifier::DD,48035
48032 :: EXPR :: reference :: Lorg/hsqldb/types/UserTypeModifier :: v22 = p0 $this .userTypeModifier::DD,48035
48035 :: PRED :: IF :: Z :: if (v21 != v22) goto 87::CD,48036:CD,48037
48036 :: NORM :: compound :: Z :: return #(1)::CF,47985
48037 :: NORM :: compound :: Z :: return #(0)::CF,47985
48038 :: NORM :: compound :: Z :: return #(0)::CF,47985
48059 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.CachedObjectComparator.compare(java.lang.Object,java.lang.Object)::CE,48060:CD,48068
48060 :: EXIT :: exit :: I :: org.hsqldb.persist.Cache.CachedObjectComparator.compare(java.lang.Object,java.lang.Object)::JM,38517:JM,57492:JM,90403:JM,90423:JM,90443:JM,90470:JM,90486:JM,90625
48065 :: EXPR :: reference :: I :: v5 = p0 $this .compareType::DD,48068
48068 :: PRED :: IF :: null :: switch v5::CD,48070:CD,48075:CD,48079:CD,48082:CD,48087:CD,48091:CD,48092:CD,48094:CD,48095:CD,48096:CD,48101:CD,48102:CD,48103
48070 :: CALL :: call :: J :: v17 = v15.getPos()::JM,48079:CL,57322
48075 :: CALL :: call :: J :: v20 = v18.getPos()::JM,48079:CL,57322
48079 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v17 - v20::DD,48102
48082 :: CALL :: call :: I :: v9 = v7.getStorageSize()::JM,48091:CL,57331
48087 :: CALL :: call :: I :: v12 = v10.getStorageSize()::JM,48091:CL,57331
48091 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v9 - v12::CF,48092
48092 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::DD,48102
48094 :: NORM :: compound :: I :: return #(0)::CF,48060
48095 :: EXPR :: assign :: Z :: v24 = v22 == #(0 l)::DD,48096
48096 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 89::CD,48098:CD,48099:CD,48103
48098 :: EXPR :: assign :: Z :: v25 = v22 == #(0 l)::DD,48099
48099 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 98::CD,48103
48101 :: NORM :: compound :: I :: return v28::CF,48060
48102 :: EXPR :: assign :: null :: PHI v22 = v21, v14::DD,48095:DD,48098
48103 :: EXPR :: assign :: null :: PHI v28 = #(0), #(1), #(-1)::CF,48101
48120 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getNextLookup(int)::CE,48121:CD,48132
48121 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getNextLookup(int)::JM,38931:JM,39804:JM,39997:JM,41257:JM,48857:JM,57974:JM,68753:JM,88627:JM,98499
48125 :: EXPR :: reference :: [I :: v4 = p0 $this .linkTable::
48128 :: EXPR :: reference :: I :: v5 = v4[p1 $lookup ]::DD,48132
48132 :: NORM :: compound :: I :: return v5::DD,48121
48135 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.unlinkNode(int,int,int)::CD,48142:CD,48188:CD,48195:JM,48182
48142 :: PRED :: IF :: Z :: if (p2 $lastLookup  != #(-1)) goto 21::
48143 :: EXPR :: reference :: [I :: v10 = p0 $this .hashTable::
48146 :: EXPR :: reference :: [I :: v11 = p0 $this .linkTable::
48149 :: EXPR :: reference :: I :: v12 = v11[p3 $lookup ]::DD,48153
48153 :: EXPR :: modify :: I :: v10[p1 $index ] = v12::
48158 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
48161 :: EXPR :: reference :: [I :: v8 = p0 $this .linkTable::
48164 :: EXPR :: reference :: I :: v9 = v8[p3 $lookup ]::DD,48168
48168 :: EXPR :: modify :: I :: v7[p2 $lastLookup ] = v9::
48172 :: EXPR :: reference :: [I :: v13 = p0 $this .linkTable::
48175 :: EXPR :: reference :: I :: v14 = p0 $this .reclaimedNodePointer::DD,48178
48178 :: EXPR :: modify :: I :: v13[p3 $lookup ] = v14::
48182 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = p3 $lookup ::
48185 :: EXPR :: reference :: I :: v15 = p0 $this .elementCount::DD,48188
48188 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 - #(1)::DD,48189
48189 :: EXPR :: modify :: I :: p0 $this .elementCount = v17::
48192 :: EXPR :: reference :: I :: v18 = p0 $this .elementCount::DD,48195
48195 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 81::CD,48202:CD,48208
48196 :: EXPR :: reference :: [I :: v20 = p0 $this .linkTable::
48199 :: EXPR :: reference :: I :: v21 = p0 $this .newNodePointer::
48202 :: CALL :: call :: V :: fill(v20, #(0), v21, #(0))::
48208 :: CALL :: call :: V :: p0 $this .resetTables()::CL,57340
48237 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.rehash(int)::CD,48260:JM,48300
48242 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v4 = p0 $this .hashIndex::
48245 :: EXPR :: reference :: I :: v5 = v4.newNodePointer::DD,48429
48254 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v8 = p0 $this .hashIndex::
48257 :: EXPR :: reference :: I :: v9 = v8.elementCount::DD,48260
48260 :: PRED :: IF :: Z :: if (p1 $newCapacity  >= v9) goto 32::CD,48271:CD,48279:CD,48421:CD,48429:CD,48436
48271 :: CALL :: call :: V :: v10.reset(v14, p1 $newCapacity )::CL,57365
48276 :: EXPR :: reference :: [Z :: v16 = p0 $this .multiValueTable::DD,48279
48279 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 82::CD,48283:CD,48292:CD,48293:CD,48442
48280 :: EXPR :: reference :: [Z :: v18 = p0 $this .multiValueTable::DD,48283
48283 :: EXPR :: assign :: I :: v19 = v18.length::DD,48442
48285 :: EXPR :: reference :: [Z :: v23 = p0 $this .multiValueTable::
48288 :: EXPR :: modify :: B :: v23[v21] = #(0)::
48292 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v24 + #(-1)::DD,48293:DD,48442
48293 :: PRED :: IF :: Z :: if (v21 >= #(0)) goto 65::CD,48292:CD,48442
48294 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
48297 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
48300 :: EXPR :: modify :: I :: p0 $this .threshold = p1 $newCapacity ::
48372 :: EXPR :: reference :: [Z :: v51 = p0 $this .multiValueTable::DD,48375
48375 :: PRED :: IF :: Z :: if (v51 != #(null)) goto 251::CD,48376:CD,48386
48376 :: CALL :: call :: Ljava/lang/Object :: v53 = p0 $this .addOrRemove(v37, v49, v38, v50, #(0))::CL,38427
48386 :: CALL :: call :: Ljava/lang/Object :: v55 = p0 $this .addOrRemoveMultiVal(v37, v49, v38, v50, #(0), #(0))::CL,57401
48396 :: EXPR :: reference :: [I :: v56 = p0 $this .accessTable::DD,48399
48399 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 290::CD,48409
48400 :: EXPR :: reference :: [I :: v58 = p0 $this .accessTable::
48403 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v59 = p0 $this .hashIndex::
48406 :: EXPR :: reference :: I :: v60 = v59.elementCount::DD,48409
48409 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v60 - #(1)::
48410 :: EXPR :: reference :: [I :: v63 = p0 $this .accessTable::
48413 :: EXPR :: reference :: I :: v64 = v63[v26]::DD,48417
48417 :: EXPR :: modify :: I :: v58[v62] = v64::
48421 :: CALL :: call :: I :: v26 = p0 $this .nextLookup(v57, v5, v6, v7)::JM,48429:CL,58247
48429 :: PRED :: IF :: Z :: if (v26 < v5) goto 114::CD,48375:CD,48399:CD,48421
48436 :: CALL :: call :: V :: p0 $this .resizeElementArrays(v66, p1 $newCapacity )::CL,58338
48442 :: EXPR :: assign :: null :: PHI v24 = v19, v21::DD,48292
48547 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.reset()::CE,48548:CD,48554
48548 :: EXIT :: exit :: Z :: org.hsqldb.map.BaseHashMap.reset()::JM,41160
48551 :: EXPR :: reference :: I :: v3 = p0 $this .maxCapacity::DD,48554
48554 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 20::CD,48561:CD,48570:CD,48574
48555 :: EXPR :: reference :: I :: v5 = p0 $this .maxCapacity::DD,48561
48558 :: EXPR :: reference :: I :: v6 = p0 $this .threshold::DD,48561
48561 :: PRED :: IF :: Z :: if (v5 <= v6) goto 35::CD,48570:CD,48574:CD,48578
48570 :: CALL :: call :: V :: p0 $this .rehash(v30)::CL,48237
48574 :: NORM :: compound :: Z :: return #(1)::DD,48548
48575 :: EXPR :: reference :: I :: v7 = p0 $this .purgePolicy::DD,48578
48578 :: PRED :: IF :: Z :: if (v7 != #(1)) goto 49::CD,48579:CD,48582:CD,48586
48579 :: CALL :: call :: V :: p0 $this .clear()::CL,58654:CL,58640
48582 :: NORM :: compound :: Z :: return #(1)::DD,48548
48583 :: EXPR :: reference :: I :: v9 = p0 $this .purgePolicy::DD,48586
48586 :: PRED :: IF :: Z :: if (v9 != #(3)) goto 76::CD,48595:CD,48600:CD,48604
48595 :: CALL :: call :: V :: p0 $this .clear(v22, v24)::CL,58728
48600 :: NORM :: compound :: Z :: return #(1)::DD,48548
48601 :: EXPR :: reference :: I :: v11 = p0 $this .purgePolicy::DD,48604
48604 :: PRED :: IF :: Z :: if (v11 != #(2)) goto 103::CD,48613:CD,48618:CD,48622
48613 :: CALL :: call :: V :: p0 $this .clear(v15, v18)::CL,58728
48618 :: NORM :: compound :: Z :: return #(1)::DD,48548
48619 :: EXPR :: reference :: I :: v13 = p0 $this .purgePolicy::DD,48622
48622 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 112::CD,48623:CD,48624
48623 :: NORM :: compound :: Z :: return #(0)::DD,48548
48624 :: NORM :: compound :: Z :: return #(0)::DD,48548
48657 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.linkNode(int,int)::CE,48658:CD,48666:CD,48685:CD,48725:CD,48732:CD,48733:CD,48734
48658 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.linkNode(int,int)::JM,38840:JM,38860:JM,41205:JM,57891:JM,57871
48663 :: EXPR :: reference :: I :: v5 = p0 $this .reclaimedNodePointer::DD,48666:DD,48733
48666 :: PRED :: IF :: Z :: if (v5 != #(-1)) goto 27::CD,48670:CD,48733
48667 :: EXPR :: reference :: I :: v9 = p0 $this .newNodePointer::DD,48670:DD,48733
48670 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 + #(1)::DD,48671
48671 :: EXPR :: modify :: I :: p0 $this .newNodePointer = v11::
48675 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
48678 :: EXPR :: reference :: I :: v8 = v7[v5]::DD,48682
48682 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = v8::
48685 :: PRED :: IF :: Z :: if (p2 $lastLookup  != #(-1)) goto 59::CD,48734
48686 :: EXPR :: reference :: [I :: v16 = p0 $this .hashTable::
48689 :: EXPR :: reference :: I :: v17 = v16[p1 $index ]::DD,48734
48693 :: EXPR :: reference :: [I :: v18 = p0 $this .hashTable::
48696 :: EXPR :: modify :: I :: v18[p1 $index ] = v12::
48701 :: EXPR :: reference :: [I :: v13 = p0 $this .linkTable::
48704 :: EXPR :: reference :: I :: v14 = v13[p2 $lastLookup ]::DD,48734
48708 :: EXPR :: reference :: [I :: v15 = p0 $this .linkTable::
48711 :: EXPR :: modify :: I :: v15[p2 $lastLookup ] = v12::
48715 :: EXPR :: reference :: [I :: v20 = p0 $this .linkTable::
48718 :: EXPR :: modify :: I :: v20[v12] = v19::
48722 :: EXPR :: reference :: I :: v21 = p0 $this .elementCount::DD,48725
48725 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 + #(1)::DD,48726
48726 :: EXPR :: modify :: I :: p0 $this .elementCount = v22::
48729 :: EXPR :: modify :: Z :: p0 $this .modified = #(1)::
48732 :: NORM :: compound :: I :: return v12::DD,48658
48733 :: EXPR :: assign :: null :: PHI v12 = v9, v5::DD,48696:DD,48711:DD,48732:CF,48685
48734 :: EXPR :: assign :: null :: PHI v19 = v17, v14::DD,48718
48778 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = #(-1)::
48782 :: CALL :: call :: V :: p0 $this .reset(p1 $hashTableSize , v8)::CL,57365
48787 :: EXPR :: modify :: Z :: p0 $this .fixedSize = p3 $fixedSize ::
48808 :: EXPR :: modify :: Lorg/hsqldb/lib/HashMap :: p0 $this .this$0 = p1 $null ::
48818 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getLookup(java.lang.Object,int)::CE,48819:CD,48827:CD,48855:CD,48856:CD,48857
48819 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getLookup(java.lang.Object,int)::JM,39412
48827 :: CALL :: call :: I :: v7 = v5.getLookup(p2 $hash )::JM,48857:CL,58807
48840 :: CALL :: call :: Z :: v12 = p1 $key .equals(v10)::JM,48845:CL,47971:CL,47984:CL,47907:CL,47932
48845 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 33::CD,48850:CD,48855:CD,48857
48850 :: CALL :: call :: I :: v15 = v13.getNextLookup(v16)::JM,48857:CL,48120
48855 :: PRED :: IF :: Z :: if (v16 >= #(0)) goto 13::CD,48840:CD,48845:CF,48856
48856 :: NORM :: compound :: I :: return v16::DD,48819
48857 :: EXPR :: assign :: null :: PHI v16 = v7, v15::DD,48855:DD,48856
48990 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.resetAccessCount()::CD,48997
48994 :: EXPR :: reference :: I :: v3 = p0 $this .accessCount::DD,48997
48997 :: PRED :: IF :: Z :: if (v3 >= #(2146435071)) goto 11::CD,49002:CD,49006:CD,49010:CD,49011:CD,49012:CD,49013:CD,49055:CD,49056:CD,49063:CD,49064:CD,49065:CD,49066:CD,49074:CD,49075
48999 :: EXPR :: reference :: [I :: v5 = p0 $this .accessTable::DD,49002
49002 :: EXPR :: assign :: I :: v6 = v5.length::DD,49074
49003 :: EXPR :: reference :: I :: v7 = p0 $this .accessMin::DD,49006
49006 :: EXPR :: assign :: D :: v8 = CONVERT I to D v7::DD,49011
49007 :: EXPR :: reference :: I :: v9 = p0 $this .accessCount::DD,49010
49010 :: EXPR :: assign :: D :: v10 = CONVERT I to D v9::CF,49011
49011 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v8 / v10::DD,49012:DD,49075
49012 :: EXPR :: assign :: Z :: v13 = v11 > #(0.5 d)::DD,49013
49013 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 87::CF,49074:CD,49075
49015 :: EXPR :: reference :: [I :: v18 = p0 $this .accessTable::
49018 :: EXPR :: reference :: I :: v19 = v18[v17]::DD,49025
49022 :: EXPR :: reference :: I :: v20 = p0 $this .accessMin::DD,49025
49025 :: PRED :: IF :: Z :: if (v19 >= v20) goto 67::CD,49047:CD,49048:CD,49049:CD,49050:CD,49074:CD,49075
49026 :: EXPR :: reference :: [I :: v21 = p0 $this .accessTable::
49029 :: EXPR :: modify :: I :: v21[v17] = #(0)::
49034 :: EXPR :: reference :: [I :: v23 = p0 $this .accessTable::
49037 :: EXPR :: reference :: [I :: v24 = p0 $this .accessTable::
49040 :: EXPR :: reference :: I :: v25 = v24[v17]::DD,49047
49044 :: EXPR :: reference :: I :: v26 = p0 $this .accessMin::DD,49047
49047 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 - v26::CF,49048
49048 :: EXPR :: assign :: D :: v28 = CONVERT I to D v27::DD,49049
49049 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 * v15::CF,49050
49050 :: EXPR :: assign :: I :: v30 = CONVERT D to I v29::DD,49051
49051 :: EXPR :: modify :: I :: v23[v17] = v30::
49055 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v22 + #(-1)::DD,49056:DD,49074
49056 :: PRED :: IF :: Z :: if (v17 >= #(0)) goto 44::CD,49025:CD,49055:CD,49074:CD,49075
49057 :: EXPR :: reference :: I :: v31 = p0 $this .accessCount::DD,49063
49060 :: EXPR :: reference :: I :: v32 = p0 $this .accessMin::DD,49063
49063 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v31 - v32::CF,49064
49064 :: EXPR :: assign :: D :: v34 = CONVERT I to D v33::DD,49065
49065 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 * v15::CF,49066
49066 :: EXPR :: assign :: I :: v36 = CONVERT D to I v35::DD,49067
49067 :: EXPR :: modify :: I :: p0 $this .accessCount = v36::
49070 :: EXPR :: modify :: I :: p0 $this .accessMin = #(0)::
49074 :: EXPR :: assign :: null :: PHI v22 = v6, v6, v17, v17::CF,49075:DD,49055
49075 :: EXPR :: assign :: null :: PHI v15 = v11, #(0.5 d), v15, v15::DD,49049:DD,49065:DD,49075:CF,49055
49110 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getMessage(int,int,java.lang.Object[])::CE,49111:CD,49116:CD,49120:CD,49143:CD,49149:CD,49150:CD,49151
49111 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getMessage(int,int,java.lang.Object[])::JM,44905
49116 :: CALL :: call :: Ljava/lang/String :: v6 = getResourceString(p1 $code )::JM,49150:CL,59440
49120 :: PRED :: IF :: Z :: if (p2 $subCode  == #(0)) goto 32::CF,49150:CF,49121:CD,49122:CD,49130:CD,49134:CD,49139
49121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,49150
49122 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
49130 :: CALL :: call :: Ljava/lang/String :: v13 = getResourceString(p2 $subCode )::JM,49150:CL,59440
49134 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v8.append(v13)::JM,49150
49139 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,49150
49143 :: PRED :: IF :: Z :: if (p3 $add  == #(null)) goto 42::CF,49151:CD,49144
49144 :: CALL :: call :: Ljava/lang/String :: v21 = insertStrings(v18, p3 $add )::JM,49151:CL,59472
49149 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,49111
49150 :: EXPR :: assign :: null :: PHI v18 = v6, v17::DD,49151:CF,49143
49151 :: EXPR :: assign :: null :: PHI v22 = v18, v21::CF,49149
49184 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlTimer :: p0 $this .this$0 = p1 $null ::
49258 :: NORM :: declaration :: [[Ljava/lang/Object :: v5 = new java.lang.Object[][]::DD,49259
49259 :: EXPR :: modify :: [[Ljava/lang/Object :: p0 $this .table = v5::
49274 :: EXPR :: assign :: B :: v5 = CONVERT I to B p1 $mode ::DD,49275
49275 :: EXPR :: modify :: B :: p0 $this .mode = v5::
49289 :: EXPR :: modify :: I :: p0 $this .currentPos = #(-1)::
49296 :: ENTR :: entry :: null :: org.hsqldb.lib.IntKeyIntValueHashMap.get(int)::CE,49297:CD,49301:CD,49314:CD,49315
49297 :: EXIT :: exit :: I :: org.hsqldb.lib.IntKeyIntValueHashMap.get(int)::JM,40735:JM,40748:JM,49357:JM,49367
49301 :: CALL :: call :: I :: v5 = p0 $this .getLookup(p1 $key )::CL,59663
49307 :: EXPR :: reference :: [I :: v9 = p0 $this .intValueTable::
49310 :: EXPR :: reference :: I :: v10 = v9[v5]::DD,49314
49314 :: NORM :: compound :: I :: return v10::DD,49297
49315 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v7 = new java.util.NoSuchElementException::
49344 :: EXPR :: modify :: I :: p0 $this .startIntervalType = p5 $scale ::
49347 :: EXPR :: modify :: I :: p0 $this .endIntervalType = p6 $startIntervalType ::
49352 :: CALL :: call :: I :: v12 = v10.get(p5 $scale )::JM,49357:CL,49296
49357 :: EXPR :: modify :: I :: p0 $this .startPartIndex = v12::
49362 :: CALL :: call :: I :: v15 = v13.get(p6 $startIntervalType )::JM,49367:CL,49296
49367 :: EXPR :: modify :: I :: p0 $this .endPartIndex = v15::
51529 :: EXIT :: exit :: Ljava/util/Iterator :: java.nio.charset.Charset.access$1()::JM,44062:JM,44047
51531 :: CALL :: call :: Ljava/util/Iterator :: v3 = providers()::JM,51534
51534 :: NORM :: compound :: Ljava/util/Iterator :: return v3::DD,51529
51545 :: EXPR :: modify :: Lorg/hsqldb/HsqlNameManager :: p0 $this .manager = p1 $man ::
51548 :: EXPR :: modify :: I :: p0 $this .type = p2 $type ::
51554 :: CALL :: call :: Ljava/util/concurrent/atomic/AtomicLong :: v9 = access$0(v7)::JM,51562:CL,62422
51558 :: CALL :: call :: J :: v11 = v9.getAndIncrement()::JM,51562
51562 :: EXPR :: modify :: J :: p0 $this .hashCode = v11::
51574 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.toQuotedString(java.lang.String,char,boolean)::CE,51575:CD,51580:JM,51620:JM,51621:JM,51608:JM,51594:JM,51612:JM,51597:JM,51613:JM,51582:JM,51615
51575 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.lib.StringConverter.toQuotedString(java.lang.String,char,boolean)::JM,44108
51580 :: PRED :: IF :: Z :: if (p1 $s  != #(null)) goto 7::CD,51581:CD,51582:CD,51589:CD,51593:CD,51594:CD,51595:CD,51596:CD,51620:CD,51625:CD,51630:CD,51631:CD,51633:CD,51634
51581 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,51575
51582 :: PRED :: IF :: Z :: if (p3 $extraQuote  == #(0)) goto 21::CD,51583:CD,51631
51583 :: CALL :: call :: I :: v8 = count(p1 $s , p2 $quoteChar )::JM,51631:CL,62431
51589 :: CALL :: call :: I :: v11 = p1 $s .length()::JM,51620:JM,51621:JM,51608:JM,51594:JM,51612:JM,51580:JM,51597:JM,51613:JM,51582:JM,51615
51593 :: EXPR :: assign :: Ljava/lang/Object :: v13 = #(2) + v9::DD,51594
51594 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v13 + v11::CF,51595
51595 :: NORM :: declaration :: [C :: v15 = new []::JM,51625:CF,51596
51596 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(0) + #(1)::DD,51634
51597 :: EXPR :: modify :: C :: v15[#(0)] = p2 $quoteChar ::
51602 :: CALL :: call :: C :: v19 = p1 $s .charAt(v24)::JM,51620:JM,51621:JM,51608:JM,51594:JM,51612:JM,51580:JM,51597:JM,51613:JM,51582:JM,51615
51607 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v25 + #(1)::DD,51614:DD,51632
51608 :: EXPR :: modify :: C :: v15[v25] = v19::
51612 :: PRED :: IF :: Z :: if (p3 $extraQuote  == #(0)) goto 92::CF,51632:CD,51613
51613 :: PRED :: IF :: Z :: if (v19 != p2 $quoteChar ) goto 92::CF,51632:CD,51614
51614 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 + #(1)::DD,51632
51615 :: EXPR :: modify :: C :: v15[v20] = v19::
51619 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,51633
51620 :: PRED :: IF :: Z :: if (v24 < v11) goto 57::CD,51602:CD,51607:CD,51612:CD,51619:CD,51632:CD,51633:CD,51634:JM,51620:JM,51621:JM,51608:JM,51594:JM,51580:JM,51597:JM,51613:JM,51582:JM,51615
51621 :: EXPR :: modify :: C :: v15[v25] = p2 $quoteChar ::
51625 :: NORM :: declaration :: Ljava/lang/String :: v26 = new java.lang.String::JM,51625:DD,51630
51630 :: NORM :: compound :: Ljava/lang/String :: return v26::DD,51575
51631 :: EXPR :: assign :: null :: PHI v9 = v8, #(0)::DD,51593:JM,51620:JM,51621:JM,51608:JM,51594:JM,51612:JM,51580:JM,51597:JM,51613:JM,51582:JM,51615
51632 :: EXPR :: assign :: null :: PHI v22 = v20, v20, v21::DD,51634:CF,51619
51633 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::CF,51634:JM,51608:JM,51594:JM,51612:JM,51580:JM,51613:JM,51582:JM,51615:DD,51619:DD,51620
51634 :: EXPR :: assign :: null :: PHI v25 = v17, v22::DD,51607:CF,51620
51686 :: ENTR :: entry :: null :: org.hsqldb.lib.OrderedIntHashSet.checkRange(int)::CD,51697
51697 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v7 = new java.lang.IndexOutOfBoundsException::
51707 :: ENTR :: entry :: null :: org.hsqldb.types.IntervalType.getIntervalValueLimit()::CD,51881
51881 :: CALL :: call :: Ljava/lang/RuntimeException :: v7 = runtimeError(#(201), #(IntervalType))::CL,33706
52281 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.resizeArray(java.lang.Object,int)::CE,52282:CD,52286:CD,52290:CD,52294:CD,52311
52282 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.ArrayUtil.resizeArray(java.lang.Object,int)::JM,81545:JM,93089:JM,93105
52286 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $source .getClass()::JM,52290:JM,52294:JM,52311:JM,52286
52290 :: CALL :: call :: Ljava/lang/Class :: v7 = v5.getComponentType()::JM,52290:JM,52294:JM,52311
52294 :: CALL :: call :: Ljava/lang/Object :: v9 = newInstance(v7, p2 $newsize )::JM,52294:JM,52311:JM,52290:JM,52286
52311 :: NORM :: compound :: Ljava/lang/Object :: return v9::DD,52282
52338 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $t .toString()::
52461 :: ENTR :: entry :: null :: org.hsqldb.persist.Log.hasCache()::CE,52462:CD,52468
52462 :: EXIT :: exit :: Z :: org.hsqldb.persist.Log.hasCache()::JM,45431
52465 :: EXPR :: reference :: Lorg/hsqldb/persist/DataFileCache :: v3 = p0 $this .cache::DD,52468
52468 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 10::CD,52469:CD,52470
52469 :: NORM :: compound :: Z :: return #(1)::CF,52462
52470 :: NORM :: compound :: Z :: return #(0)::CF,52462
52475 :: ENTR :: entry :: null :: org.hsqldb.persist.Log.getCache()::CD,52482
52479 :: EXPR :: reference :: Lorg/hsqldb/persist/DataFileCache :: v3 = p0 $this .cache::DD,52482
52482 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 38::JM,62854:CD,52504
52504 :: CALL :: call :: V :: v9.open(v10)::CL,62887
52521 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerSimple.reset()::CD,52528
52528 :: CALL :: call :: V :: v3.reset()::CL,63644
52533 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.reset()::CD,52566:CD,52570
52563 :: CALL :: call :: V :: v16.reset()::CL,63644
52566 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,52570:CL,35301
52570 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 29::CD,52563:CD,52566
52621 :: EXPR :: modify :: Lorg/hsqldb/persist/DataFileCache :: p0 $this .cache = p1 $dataFileCache ::
52851 :: EXPR :: reference :: Lorg/hsqldb/persist/DataFileCache :: v85 = p0 $this .cache::
52854 :: EXPR :: reference :: J :: v86 = v85.spaceManagerPosition::DD,52857
52857 :: EXPR :: assign :: Z :: v88 = v86 == #(0 l)::DD,52858
52858 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 370::CD,52859:CD,52895:CD,52905:CD,52915:CD,52921:CD,52928
52859 :: CALL :: call :: V :: p0 $this .initialiseNewSpaceDirectory()::CL,63978
52895 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v96 = v94.get(v93, #(1))::CL,64135
52905 :: CALL :: call :: I :: v99 = p0 $this .getBlockIndexLimit()::CL,64161
52910 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v107 = error(#(452))::CL,33668
52915 :: CALL :: call :: V :: p0 $this .initialiseSpaceList()::CL,64267
52921 :: CALL :: call :: V :: p0 $this .initialiseTableSpace(v101)::CL,64456
52928 :: CALL :: call :: V :: p0 $this .initialiseTableSpace(v103)::CL,64456
53053 :: EXPR :: assign :: Z :: v8=p1 $cache  INSTANCEOF org.hsqldb.persist.DataFileCacheSession::DD,53054
53054 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 45::CD,53064:CD,53065
53064 :: EXPR :: assign :: Z :: v10=p1 $cache  INSTANCEOF org.hsqldb.persist.TextCache::DD,53065
53065 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 67::CD,53104
53104 :: PRED :: IF :: Z :: if (p2 $isReadOnly  != #(0)) goto 116::CD,53105
53105 :: CALL :: call :: V :: p0 $this .initialiseSpaces()::CL,64539
53202 :: ENTR :: entry :: null :: org.hsqldb.lib.SimpleLog.setupLog(java.io.File)::CD,53210
53210 :: CALL :: call :: V :: v5.makeParentDirectories(p1 $file )::CL,64674
53253 :: ENTR :: entry :: null :: org.hsqldb.persist.LockFile.newNIOLockFile()::CF,53254:CD,53256:CD,53258
53254 :: EXIT :: exit :: Lorg/hsqldb/persist/LockFile :: org.hsqldb.persist.LockFile.newNIOLockFile()::JM,45650:JM,45640
53256 :: EXPR :: reference :: Z :: v2 = org.hsqldb.persist.LockFile.NIO_FILELOCK_AVAILABLE::DD,53258
53258 :: PRED :: IF :: Z :: if (v2 == #(0)) goto 24::CD,53259:CD,53261:CD,53270
53259 :: EXPR :: reference :: Ljava/lang/Class :: v4 = org.hsqldb.persist.LockFile.NIO_LOCKFILE_CLASS::DD,53261
53261 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 24::CD,53262:CD,53264:CD,53268:CD,53269:CD,53270
53262 :: EXPR :: reference :: Ljava/lang/Class :: v6 = org.hsqldb.persist.LockFile.NIO_LOCKFILE_CLASS::JM,53264:JM,53268
53264 :: CALL :: call :: Ljava/lang/Object :: v8 = v6.newInstance()::JM,53264:JM,53268
53268 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::CF,53269
53269 :: NORM :: compound :: Lorg/hsqldb/persist/LockFile :: return v9::CF,53254
53270 :: NORM :: compound :: Lorg/hsqldb/persist/LockFile :: return #(null)::CF,53254
53277 :: ENTR :: entry :: null :: org.hsqldb.persist.LockFile.setPath(java.lang.String)::CD,53285:CD,53290
53285 :: CALL :: call :: Ljava/lang/String :: v7 = v5.canonicalOrAbsolutePath(p1 $path )::CL,64790
53290 :: NORM :: declaration :: Ljava/io/File :: v8 = new java.io.File::DD,53295
53295 :: EXPR :: modify :: Ljava/io/File :: p0 $this .file = v8::
54121 :: ENTR :: entry :: null :: org.hsqldb.lib.java.JavaSystem.toIOException(java.lang.Throwable)::CD,54125:CD,54126
54125 :: EXPR :: assign :: Z :: v3=p1 $t  INSTANCEOF java.io.IOException::DD,54126
54126 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 12::
54711 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.close()::CD,54718
54715 :: EXPR :: reference :: Lorg/hsqldb/persist/RandomAccessInterface :: v3 = p0 $this .dest::DD,54718
54718 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,54722:CD,54728
54722 :: CALL :: call :: V :: v5.synch()::CL,65845:CL,65890:CL,65803
54728 :: CALL :: call :: V :: v7.close()::CL,54777:CL,54741
54731 :: EXPR :: modify :: Lorg/hsqldb/persist/RandomAccessInterface :: p0 $this .dest = #(null)::
54741 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.close()::CD,54748
54748 :: CALL :: call :: V :: v3.close()::
54777 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.close()::CD,54784
54784 :: CALL :: call :: V :: v3.close()::CL,65907
55960 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.backupDataFile(boolean)::CD,55974
55974 :: CALL :: call :: V :: backupFile(v4, v5, v6, p1 $newFile )::CL,47354
56194 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.deleteFile(org.hsqldb.Database,java.lang.String)::CD,56202:CD,56213:CD,56217:JM,56224:JM,56243:JM,56219:JM,56238
56199 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v4 = p1 $database .logger::JM,56224:JM,56243:JM,56202:JM,56219:JM,56238
56202 :: CALL :: call :: Lorg/hsqldb/lib/FileAccess :: v6 = v4.getFileAccess()::JM,56224:JM,56243:JM,56202:JM,56219:JM,56238
56210 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v8 = p1 $database .logger::JM,56213:JM,56217
56213 :: CALL :: call :: Z :: v10 = v8.isStoredFileAccess()::JM,56213:JM,56217
56217 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 28::CD,56219:CD,56224:JM,56243:JM,56238
56219 :: CALL :: call :: Z :: v13 = v6.isStreamElement(p2 $fileName )::JM,56224:JM,56243:JM,56219:JM,56238
56224 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 76::CD,56238:CD,56243
56238 :: CALL :: call :: Z :: v19 = v6.isStreamElement(p2 $fileName )::JM,56224:JM,56243:JM,56219:JM,56238
56243 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 76::CD,56244
56244 :: CALL :: call :: Ljava/lang/String :: v21 = newDiscardFileName(p2 $fileName )::CL,67170
56274 :: ENTR :: entry :: null :: org.hsqldb.lib.FileArchiver.archive(java.lang.String,java.lang.String,org.hsqldb.lib.FileAccess,int)::CD,56361:CD,56400:CD,56440
56361 :: CALL :: call :: Ljava/io/IOException :: v47 = toIOException(v41)::CL,54121
56400 :: CALL :: call :: Ljava/io/IOException :: v66 = toIOException(v64)::CL,54121
56440 :: CALL :: call :: Ljava/io/IOException :: v79 = toIOException(v77)::CL,54121
57214 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.resize(int)::CD,57222:CD,57223:JM,57236:JM,57241
57219 :: EXPR :: reference :: [Ljava/lang/Object :: v4 = p0 $this .elementData::DD,57222
57222 :: EXPR :: assign :: I :: v5 = v4.length::CF,57223
57223 :: PRED :: IF :: Z :: if (p1 $baseSize  != v5) goto 11::CD,57228:CD,57232:CD,57236:CD,57241:CD,57267
57225 :: EXPR :: reference :: [Ljava/lang/Object :: v6 = p0 $this .elementData::JM,57232:JM,57236:JM,57241:JM,57228
57228 :: CALL :: call :: Ljava/lang/Class :: v8 = v6.getClass()::JM,57232:JM,57236:JM,57241:JM,57228
57232 :: CALL :: call :: Ljava/lang/Class :: v10 = v8.getComponentType()::JM,57232:JM,57236:JM,57241
57236 :: CALL :: call :: Ljava/lang/Object :: v12 = newInstance(v10, p1 $baseSize )::JM,57236:JM,57241
57241 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,57291
57264 :: EXPR :: reference :: Z :: v24 = p0 $this .minimizeOnClear::DD,57267
57267 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 99::CD,57271
57268 :: EXPR :: reference :: [Ljava/lang/Object :: v25 = p0 $this .reserveElementData::DD,57271
57271 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 99::CD,57279
57279 :: CALL :: call :: V :: clearArray(#(76), v28, #(0), v30)::CL,68175
57285 :: EXPR :: reference :: [Ljava/lang/Object :: v32 = p0 $this .elementData::DD,57288
57288 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .reserveElementData = v32::
57291 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .elementData = v13::
57322 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.getPos()::CE,57323:CD,57329
57323 :: EXIT :: exit :: J :: org.hsqldb.persist.CachedObjectBase.getPos()::JM,48079:JM,80947:JM,88412:JM,93652
57326 :: EXPR :: reference :: J :: v3 = p0 $this .position::DD,57329
57329 :: NORM :: compound :: J :: return v3::CF,57323
57331 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.getStorageSize()::CE,57332:CD,57338
57332 :: EXIT :: exit :: I :: org.hsqldb.persist.CachedObjectBase.getStorageSize()::JM,48091:JM,80874:JM,88817:JM,93483:JM,98095:JM,98140
57335 :: EXPR :: reference :: I :: v3 = p0 $this .storageSize::DD,57338
57338 :: NORM :: compound :: I :: return v3::CF,57332
57340 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.resetTables()::
57344 :: EXPR :: modify :: I :: p0 $this .newNodePointer = #(0)::
57347 :: EXPR :: modify :: I :: p0 $this .elementCount = #(0)::
57350 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = #(-1)::
57353 :: EXPR :: modify :: Z :: p0 $this .modified = #(0)::
57365 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.reset(int,int)::CD,57371:CD,57372:CD,57382:CD,57386
57371 :: NORM :: declaration :: [I :: v5 = new []::DD,57373:CF,57372
57372 :: NORM :: declaration :: [I :: v6 = new []::DD,57376
57373 :: EXPR :: modify :: [I :: p0 $this .hashTable = v5::
57376 :: EXPR :: modify :: [I :: p0 $this .linkTable = v6::
57379 :: EXPR :: reference :: [I :: v7 = p0 $this .hashTable::
57382 :: CALL :: call :: V :: fill(v7, #(-1))::
57386 :: CALL :: call :: V :: p0 $this .resetTables()::CL,57340
57401 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemoveMultiVal(long,long,java.lang.Object,java.lang.Object,boolean,boolean)::CD,57415:CD,57827:JM,57632:JM,57633:JM,57570:JM,57861:JM,57701:JM,57926:JM,57798:JM,57799:JM,57416:JM,57866:JM,57901:JM,57775:JM,57716:JM,57494:JM,57718:JM,57719:JM,57913:JM,57849:JM,57690:JM,57882:JM,57786:JM,57630:JM,57886
57412 :: EXPR :: reference :: Z :: v10 = p0 $this .isObjectKey::DD,57415
57415 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 49::CD,57416:CD,57438:CD,57797:CD,57974:CD,57976
57416 :: PRED :: IF :: Z :: if (p3 $longValue  != #(null)) goto 19::CD,57438:CD,57797:CD,57974:CD,57976
57438 :: CALL :: call :: I :: v22 = v20.getHashIndex(v19)::CL,47892
57443 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v23 = p0 $this .hashIndex::
57446 :: EXPR :: reference :: [I :: v24 = v23.hashTable::
57449 :: EXPR :: reference :: I :: v25 = v24[v22]::DD,57974
57454 :: EXPR :: reference :: Z :: v27 = p0 $this .isObjectKey::DD,57457
57457 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 313::CD,57461:CD,57621
57458 :: EXPR :: reference :: Lorg/hsqldb/lib/ObjectComparator :: v37 = p0 $this .comparator::DD,57461
57461 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 116::CD,57469:CD,57474:CD,57486:CD,57492
57469 :: CALL :: call :: Z :: v41 = v39.equals(p3 $longValue )::JM,57474:CL,47971:CL,47984:CL,47907:CL,47932
57474 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 141::CD,57494:CD,57792:CD,57797:CD,57973:CD,57974:CD,57976:CD,57970
57486 :: CALL :: call :: I :: v46 = v42.compare(v44, p3 $longValue )::JM,57492:CL,48059
57492 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 141::CD,57494:CD,57792:CD,57797:CD,57973:CD,57974:CD,57976:CD,57970
57494 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 226::CF,57970:CD,57519:CD,57542:CD,57564:CD,57569
57495 :: EXPR :: reference :: [Ljava/lang/Object :: v140 = p0 $this .objectKeyTable::
57498 :: EXPR :: modify :: Ljava/lang/Object :: v140[v154] = #(null)::
57509 :: EXPR :: reference :: [Ljava/lang/Object :: v143 = p0 $this .objectValueTable::
57512 :: EXPR :: modify :: Ljava/lang/Object :: v143[v154] = #(null)::
57519 :: CALL :: call :: V :: v144.unlinkNode(v22, v65, v154)::CL,48135
57525 :: EXPR :: reference :: [Z :: v146 = p0 $this .multiValueTable::
57528 :: EXPR :: modify :: B :: v146[v154] = #(0)::
57532 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v147 = p0 $this .hashIndex::
57535 :: EXPR :: reference :: [I :: v148 = v147.hashTable::
57538 :: EXPR :: reference :: I :: v149 = v148[v22]::DD,57542:DD,57970
57542 :: PRED :: IF :: Z :: if (v149 < #(0)) goto 224::CD,57550:CD,57555:CD,57970
57550 :: CALL :: call :: Z :: v153 = v151.equals(p3 $longValue )::JM,57555:CL,47971:CL,47984:CL,47907:CL,47932
57555 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 145::CF,57970:CD,57519:CD,57542
57564 :: CALL :: call :: Z :: v50 = v48.equals(p4 $null )::JM,57569:CL,47971:CL,47984:CL,47932
57569 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 309::CD,57570:CD,57792:CD,57797:CD,57973:CD,57974:CD,57976
57570 :: PRED :: IF :: Z :: if (p6 $objectValue  == #(0)) goto 299::CD,57595
57571 :: EXPR :: reference :: [Ljava/lang/Object :: v133 = p0 $this .objectKeyTable::
57574 :: EXPR :: modify :: Ljava/lang/Object :: v133[v64] = #(null)::
57585 :: EXPR :: reference :: [Ljava/lang/Object :: v136 = p0 $this .objectValueTable::
57588 :: EXPR :: modify :: Ljava/lang/Object :: v136[v64] = #(null)::
57595 :: CALL :: call :: V :: v137.unlinkNode(v22, v65, v64)::CL,48135
57601 :: EXPR :: reference :: [Z :: v139 = p0 $this .multiValueTable::
57604 :: EXPR :: modify :: B :: v139[v64] = #(0)::
57618 :: EXPR :: reference :: Z :: v28 = p0 $this .isIntKey::DD,57621
57621 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 444::CD,57629:CD,57630:CD,57631:CD,57708:CD,57973
57622 :: EXPR :: reference :: [I :: v29 = p0 $this .intKeyTable::
57625 :: EXPR :: reference :: I :: v30 = v29[v64]::DD,57629
57629 :: EXPR :: assign :: J :: v31 = CONVERT I to J v30::CF,57630
57630 :: EXPR :: assign :: Z :: v32 = p1 $longKey  == v31::DD,57631
57631 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 574::CF,57973:CD,57632:CD,57792:CD,57797:CD,57974:CD,57976:CD,57971
57632 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 423::CF,57971:CD,57633:CD,57634:CD,57658:CD,57681:CD,57700:CD,57701:CD,57702
57633 :: EXPR :: assign :: Z :: v117 = p1 $longKey  == #(0 l)::DD,57634
57634 :: PRED :: IF :: Z :: if (v117 != #(0)) goto 354::
57635 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
57638 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
57641 :: EXPR :: reference :: [I :: v118 = p0 $this .intKeyTable::
57644 :: EXPR :: modify :: I :: v118[v130] = #(0)::
57648 :: EXPR :: reference :: [I :: v119 = p0 $this .intValueTable::
57651 :: EXPR :: modify :: I :: v119[v130] = #(0)::
57658 :: CALL :: call :: V :: v120.unlinkNode(v22, v65, v130)::CL,48135
57664 :: EXPR :: reference :: [Z :: v122 = p0 $this .multiValueTable::
57667 :: EXPR :: modify :: B :: v122[v130] = #(0)::
57671 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v123 = p0 $this .hashIndex::
57674 :: EXPR :: reference :: [I :: v124 = v123.hashTable::
57677 :: EXPR :: reference :: I :: v125 = v124[v22]::DD,57681:DD,57971
57681 :: PRED :: IF :: Z :: if (v125 < #(0)) goto 421::CD,57689:CD,57690:CD,57691:CD,57971
57682 :: EXPR :: reference :: [I :: v126 = p0 $this .intKeyTable::
57685 :: EXPR :: reference :: I :: v127 = v126[v125]::DD,57689
57689 :: EXPR :: assign :: J :: v128 = CONVERT I to J v127::CF,57690
57690 :: EXPR :: assign :: Z :: v129 = p1 $longKey  == v128::DD,57691
57691 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 339::CF,57971:CD,57633:CD,57634:CD,57658:CD,57681
57693 :: EXPR :: reference :: [I :: v52 = p0 $this .intValueTable::
57696 :: EXPR :: reference :: I :: v53 = v52[v64]::DD,57700
57700 :: EXPR :: assign :: J :: v54 = CONVERT I to J v53::DD,57701
57701 :: EXPR :: assign :: Z :: v55 = v54 == p2 $null ::DD,57702
57702 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 440::CD,57792:CD,57797:CD,57973:CD,57974:CD,57976
57705 :: EXPR :: reference :: Z :: v33 = p0 $this .isLongKey::DD,57708
57708 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 574::CF,57973:CD,57716:CD,57717:CD,57792:CD,57797:CD,57974:CD,57976
57709 :: EXPR :: reference :: [J :: v34 = p0 $this .longKeyTable::
57712 :: EXPR :: reference :: J :: v35 = v34[v64]::DD,57716
57716 :: EXPR :: assign :: Z :: v36 = p1 $longKey  == v35::DD,57717
57717 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 574::CF,57973:CD,57718:CD,57792:CD,57797:CD,57974:CD,57976:CD,57972
57718 :: PRED :: IF :: Z :: if (p5 $objectKey  == #(0)) goto 552::CF,57972:CD,57719:CD,57720:CD,57744:CD,57767:CD,57785:CD,57786:CD,57787
57719 :: EXPR :: assign :: Z :: v104 = p1 $longKey  == #(0 l)::DD,57720
57720 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 484::
57721 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
57724 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
57727 :: EXPR :: reference :: [J :: v105 = p0 $this .longKeyTable::
57730 :: EXPR :: modify :: J :: v105[v116] = #(0 l)::
57734 :: EXPR :: reference :: [J :: v106 = p0 $this .longValueTable::
57737 :: EXPR :: modify :: J :: v106[v116] = #(0 l)::
57744 :: CALL :: call :: V :: v107.unlinkNode(v22, v65, v116)::CL,48135
57750 :: EXPR :: reference :: [Z :: v109 = p0 $this .multiValueTable::
57753 :: EXPR :: modify :: B :: v109[v116] = #(0)::
57757 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v110 = p0 $this .hashIndex::
57760 :: EXPR :: reference :: [I :: v111 = v110.hashTable::
57763 :: EXPR :: reference :: I :: v112 = v111[v22]::DD,57767:DD,57972
57767 :: PRED :: IF :: Z :: if (v112 < #(0)) goto 550::CD,57775:CD,57776:CD,57972
57768 :: EXPR :: reference :: [J :: v113 = p0 $this .longKeyTable::
57771 :: EXPR :: reference :: J :: v114 = v113[v112]::DD,57775
57775 :: EXPR :: assign :: Z :: v115 = p1 $longKey  == v114::DD,57776
57776 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 469::CF,57972:CD,57719:CD,57720:CD,57744:CD,57767
57778 :: EXPR :: reference :: [I :: v56 = p0 $this .intValueTable::
57781 :: EXPR :: reference :: I :: v57 = v56[v64]::DD,57785
57785 :: EXPR :: assign :: J :: v58 = CONVERT I to J v57::DD,57786
57786 :: EXPR :: assign :: Z :: v59 = v58 == p2 $null ::DD,57787
57787 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 574::CD,57792:CD,57797:CD,57973:CD,57974:CD,57976
57792 :: CALL :: call :: I :: v63 = v61.getNextLookup(v64)::JM,57974:CL,48120
57797 :: PRED :: IF :: Z :: if (v64 >= #(0)) goto 84::CD,57457:CD,57798
57798 :: PRED :: IF :: Z :: if (p5 $objectKey  != #(0)) goto 601::CD,57799
57799 :: PRED :: IF :: Z :: if (p6 $objectValue  == #(0)) goto 603::CD,57810
57801 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v67 = p0 $this .hashIndex::
57804 :: EXPR :: reference :: I :: v68 = v67.elementCount::DD,57810
57807 :: EXPR :: reference :: I :: v69 = p0 $this .threshold::DD,57810
57810 :: PRED :: IF :: Z :: if (v68 < v69) goto 649::CD,57811:CD,57816:CD,57836:CD,57845:CD,57897:CD,57930:CD,57941
57811 :: CALL :: call :: Z :: v98 = p0 $this .reset()::CL,48547
57816 :: CALL :: call :: Ljava/lang/Object :: v103 = p0 $this .addOrRemoveMultiVal(p1 $longKey , p2 $null , p3 $longValue , p4 $null , p5 $objectKey , p6 $objectValue )::CL,57401
57827 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v99 = new java.util.NoSuchElementException::
57836 :: CALL :: call :: I :: v72 = v70.linkNode(v22, v65)::JM,57891:JM,57871:CL,48657
57842 :: EXPR :: reference :: Z :: v73 = p0 $this .isObjectKey::DD,57845
57845 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 681::CD,57857
57846 :: EXPR :: reference :: [Ljava/lang/Object :: v82 = p0 $this .objectKeyTable::
57849 :: EXPR :: modify :: Ljava/lang/Object :: v82[v72] = p3 $longValue ::
57854 :: EXPR :: reference :: Z :: v74 = p0 $this .isIntKey::DD,57857
57857 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 717::CD,57861:CD,57866:CD,57867:CD,57878
57858 :: EXPR :: reference :: [I :: v79 = p0 $this .intKeyTable::
57861 :: EXPR :: assign :: I :: v80 = CONVERT J to I p1 $longKey ::DD,57862
57862 :: EXPR :: modify :: I :: v79[v72] = v80::
57866 :: EXPR :: assign :: Z :: v81 = p1 $longKey  == #(0 l)::DD,57867
57867 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 749::
57868 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
57871 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v72::
57875 :: EXPR :: reference :: Z :: v75 = p0 $this .isLongKey::DD,57878
57878 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 749::CD,57886:CD,57887
57879 :: EXPR :: reference :: [J :: v76 = p0 $this .longKeyTable::
57882 :: EXPR :: modify :: J :: v76[v72] = p1 $longKey ::
57886 :: EXPR :: assign :: Z :: v78 = p1 $longKey  == #(0 l)::DD,57887
57887 :: PRED :: IF :: Z :: if (v78 != #(0)) goto 749::
57888 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(1)::
57891 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = v72::
57894 :: EXPR :: reference :: Z :: v83 = p0 $this .isObjectValue::DD,57897
57897 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 768::CD,57909
57898 :: EXPR :: reference :: [Ljava/lang/Object :: v89 = p0 $this .objectValueTable::
57901 :: EXPR :: modify :: Ljava/lang/Object :: v89[v72] = p4 $null ::
57906 :: EXPR :: reference :: Z :: v84 = p0 $this .isIntValue::DD,57909
57909 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 787::CD,57913:CD,57922
57910 :: EXPR :: reference :: [I :: v87 = p0 $this .intValueTable::
57913 :: EXPR :: assign :: I :: v88 = CONVERT J to I p2 $null ::DD,57914
57914 :: EXPR :: modify :: I :: v87[v72] = v88::
57919 :: EXPR :: reference :: Z :: v85 = p0 $this .isLongValue::DD,57922
57922 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 803::CF,57930
57923 :: EXPR :: reference :: [J :: v86 = p0 $this .longValueTable::
57926 :: EXPR :: modify :: J :: v86[v72] = p2 $null ::
57930 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 815::
57931 :: EXPR :: reference :: [Z :: v90 = p0 $this .multiValueTable::
57934 :: EXPR :: modify :: B :: v90[v72] = #(1)::
57938 :: EXPR :: reference :: Z :: v91 = p0 $this .isLastAccessCount::DD,57941
57941 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 843::CD,57948:CD,57960
57942 :: EXPR :: reference :: [I :: v94 = p0 $this .accessTable::
57945 :: EXPR :: reference :: I :: v95 = p0 $this .accessCount::DD,57948
57948 :: EXPR :: assign :: Ljava/lang/Object :: v96 = v95 + #(1)::DD,57949:DD,57952
57949 :: EXPR :: modify :: I :: p0 $this .accessCount = v96::
57952 :: EXPR :: modify :: I :: v94[v72] = v96::
57957 :: EXPR :: reference :: Z :: v92 = p0 $this .isAccessCount::DD,57960
57960 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 859::
57961 :: EXPR :: reference :: [I :: v93 = p0 $this .accessTable::
57964 :: EXPR :: modify :: I :: v93[v72] = #(1)::
57970 :: EXPR :: assign :: null :: PHI v154 = v149, v64::
57971 :: EXPR :: assign :: null :: PHI v130 = v125, v64::CF,57633
57972 :: EXPR :: assign :: null :: PHI v116 = v112, v64::CF,57719
57973 :: EXPR :: assign :: null :: PHI v60 = v66, v66, #(1), v66, #(1), v66, v66, #(1)::DD,57976
57974 :: EXPR :: assign :: null :: PHI v64 = v25, v63::DD,57797:DD,57970:DD,57971:DD,57972
57976 :: EXPR :: assign :: null :: PHI v66 = #(0), v60::DD,57930:DD,57973:CF,57797
58247 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.nextLookup(int,int,boolean,int)::CE,58248:CD,58255:CD,58300:CD,58302:JM,58296:JM,58297:JM,58283:JM,58284
58248 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.nextLookup(int,int,boolean,int)::JM,48429
58255 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $lookup  + #(1)::DD,58302
58257 :: EXPR :: reference :: Z :: v9 = p0 $this .isObjectKey::DD,58260
58260 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 25::CD,58268:CD,58273
58261 :: EXPR :: reference :: [Ljava/lang/Object :: v11 = p0 $this .objectKeyTable::
58264 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v11[v22]::DD,58268
58268 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 79::CD,58269:CD,58299:CD,58300:CD,58302
58269 :: NORM :: compound :: I :: return v22::CF,58248
58270 :: EXPR :: reference :: Z :: v14 = p0 $this .isIntKey::DD,58273
58273 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 55::CD,58281:CD,58293:CD,58294
58274 :: EXPR :: reference :: [I :: v15 = p0 $this .intKeyTable::
58277 :: EXPR :: reference :: I :: v16 = v15[v22]::DD,58281
58281 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 43::CD,58282:CD,58283
58282 :: NORM :: compound :: I :: return v22::CF,58248
58283 :: PRED :: IF :: Z :: if (p3 $hasZeroKey  == #(0)) goto 79::CD,58284:CD,58299:CD,58300:CD,58302
58284 :: PRED :: IF :: Z :: if (v22 != p4 $zeroKeyIndex ) goto 79::CD,58285:CD,58299:CD,58300:CD,58302
58285 :: NORM :: compound :: I :: return v22::CF,58248
58286 :: EXPR :: reference :: [J :: v17 = p0 $this .longKeyTable::
58289 :: EXPR :: reference :: J :: v18 = v17[v22]::DD,58293
58293 :: EXPR :: assign :: Z :: v20 = v18 == #(0 l)::DD,58294
58294 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 68::CD,58295:CD,58296
58295 :: NORM :: compound :: I :: return v22::CF,58248
58296 :: PRED :: IF :: Z :: if (p3 $hasZeroKey  == #(0)) goto 79::CD,58297:CD,58299:CD,58300:CD,58302
58297 :: PRED :: IF :: Z :: if (v22 != p4 $zeroKeyIndex ) goto 79::CD,58298:CD,58299:CD,58300:CD,58302
58298 :: NORM :: compound :: I :: return v22::CF,58248
58299 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,58302
58300 :: PRED :: IF :: Z :: if (v22 < p2 $limitLookup ) goto 7::CD,58260:CD,58301
58301 :: NORM :: compound :: I :: return v22::CF,58248
58302 :: EXPR :: assign :: null :: PHI v22 = v8, v21::DD,58269:DD,58282:DD,58284:DD,58285:DD,58295:DD,58297:DD,58298:DD,58299:DD,58300:DD,58301
58338 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.resizeElementArrays(int,int)::CD,58349:CD,58370:CD,58391:CD,58412:CD,58433:CD,58454:CD,58475:CD,58496:CD,58517:JM,58416:JM,58353:JM,58500:JM,58437:JM,58374:JM,58521:JM,58458:JM,58395:JM,58479
58346 :: EXPR :: reference :: Z :: v6 = p0 $this .isIntKey::DD,58349
58349 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 44::CD,58353
58353 :: NORM :: declaration :: [I :: v9 = new []::DD,58354
58354 :: EXPR :: modify :: [I :: p0 $this .intKeyTable = v9::
58367 :: EXPR :: reference :: Z :: v12 = p0 $this .isIntValue::DD,58370
58370 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 75::CD,58374
58374 :: NORM :: declaration :: [I :: v14 = new []::DD,58375
58375 :: EXPR :: modify :: [I :: p0 $this .intValueTable = v14::
58388 :: EXPR :: reference :: Z :: v18 = p0 $this .isLongKey::DD,58391
58391 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 106::CD,58395
58395 :: NORM :: declaration :: [J :: v20 = new []::DD,58396
58396 :: EXPR :: modify :: [J :: p0 $this .longKeyTable = v20::
58409 :: EXPR :: reference :: Z :: v24 = p0 $this .isLongValue::DD,58412
58412 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 137::CD,58416
58416 :: NORM :: declaration :: [J :: v26 = new []::DD,58417
58417 :: EXPR :: modify :: [J :: p0 $this .longValueTable = v26::
58430 :: EXPR :: reference :: [Ljava/lang/Object :: v30 = p0 $this .objectKeyTable::DD,58433
58433 :: PRED :: IF :: Z :: if (v30 == #(null)) goto 169::CD,58437
58437 :: NORM :: declaration :: [Ljava/lang/Object :: v33 = new java.lang.Object[]::DD,58438
58438 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectKeyTable = v33::
58451 :: EXPR :: reference :: Z :: v37 = p0 $this .isObjectValue::DD,58454
58454 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 201::CD,58458
58458 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::DD,58459
58459 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable = v39::
58472 :: EXPR :: reference :: [Ljava/lang/Object :: v43 = p0 $this .objectValueTable2::DD,58475
58475 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 233::CD,58479
58479 :: NORM :: declaration :: [Ljava/lang/Object :: v45 = new java.lang.Object[]::DD,58480
58480 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .objectValueTable2 = v45::
58493 :: EXPR :: reference :: [I :: v49 = p0 $this .accessTable::DD,58496
58496 :: PRED :: IF :: Z :: if (v49 == #(null)) goto 264::CD,58500
58500 :: NORM :: declaration :: [I :: v51 = new []::DD,58501
58501 :: EXPR :: modify :: [I :: p0 $this .accessTable = v51::
58514 :: EXPR :: reference :: [Z :: v55 = p0 $this .multiValueTable::DD,58517
58517 :: PRED :: IF :: Z :: if (v55 == #(null)) goto 294::CD,58521
58521 :: NORM :: declaration :: [Z :: v57 = new []::DD,58522
58522 :: EXPR :: modify :: [Z :: p0 $this .multiValueTable = v57::
58640 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.clear()::CD,58644
58644 :: CALL :: call :: V :: p0 $this .clear()::CL,58654
58647 :: EXPR :: modify :: J :: p0 $this .cacheBytesLength = #(0 l)::
58654 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clear()::CD,58664
58658 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v3 = p0 $this .hashIndex::
58661 :: EXPR :: reference :: Z :: v4 = v3.modified::DD,58664
58664 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 68::CD,58687:CD,58695:CD,58701
58665 :: EXPR :: modify :: I :: p0 $this .accessCount = #(0)::
58668 :: EXPR :: reference :: I :: v6 = p0 $this .accessCount::DD,58671
58671 :: EXPR :: modify :: I :: p0 $this .accessMin = v6::
58674 :: EXPR :: modify :: Z :: p0 $this .hasZeroKey = #(0)::
58677 :: EXPR :: modify :: I :: p0 $this .zeroKeyIndex = #(-1)::
58687 :: CALL :: call :: V :: p0 $this .clearElementArrays(#(0), v10)::CL,68355
58695 :: CALL :: call :: V :: v12.clear()::CL,68580
58698 :: EXPR :: reference :: Z :: v14 = p0 $this .minimizeOnEmpty::DD,58701
58701 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 68::CD,58705
58705 :: CALL :: call :: V :: p0 $this .rehash(v15)::CL,48237
58728 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clear(int,int)::CD,58741:CD,58771:CD,58777
58735 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v7 = p0 $this .hashIndex::
58738 :: EXPR :: reference :: I :: v8 = v7.newNodePointer::DD,58771
58741 :: CALL :: call :: I :: v10 = p0 $this .getAccessCountCeiling(p1 $count , v6)::JM,58772:JM,58763:CL,68614
58748 :: EXPR :: reference :: [Ljava/lang/Object :: v12 = p0 $this .objectKeyTable::
58751 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v12[v21]::DD,58755
58755 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 65::CD,58763:CF,58770
58756 :: EXPR :: reference :: [I :: v15 = p0 $this .accessTable::
58759 :: EXPR :: reference :: I :: v16 = v15[v21]::DD,58763
58763 :: PRED :: IF :: Z :: if (v16 >= v10) goto 65::CD,58764:CF,58770
58764 :: CALL :: call :: Ljava/lang/Object :: v18 = p0 $this .removeObject(v13, #(0))::CL,68651
58770 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,58777
58771 :: PRED :: IF :: Z :: if (v21 < v8) goto 32::CD,58755:CD,58770:CD,58777
58772 :: EXPR :: modify :: I :: p0 $this .accessMin = v10::
58777 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,58770:DD,58771
58807 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.getLookup(int)::CE,58808:CD,58815:JM,58817
58808 :: EXIT :: exit :: I :: org.hsqldb.map.HashIndex.getLookup(int)::JM,48857:JM,59698:JM,88627:JM,98499
58812 :: EXPR :: reference :: I :: v4 = p0 $this .elementCount::DD,58815
58815 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 12::CD,58816:CD,58817:CD,58821:CD,58822:CD,58830
58816 :: NORM :: compound :: I :: return #(-1)::CF,58808
58817 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $hash  && #(2147483647)::DD,58822
58818 :: EXPR :: reference :: [I :: v8 = p0 $this .hashTable::DD,58821
58821 :: EXPR :: assign :: I :: v9 = v8.length::CF,58822
58822 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 % v9::
58823 :: EXPR :: reference :: [I :: v11 = p0 $this .hashTable::
58826 :: EXPR :: reference :: I :: v12 = v11[v10]::DD,58830
58830 :: NORM :: compound :: I :: return v12::CF,58808
59440 :: ENTR :: entry :: null :: org.hsqldb.error.Error.getResourceString(int)::CE,59441:CD,59445:CD,59453:CD,59458:CD,59459:CD,59460
59441 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.getResourceString(int)::JM,49150
59445 :: CALL :: call :: Ljava/lang/String :: v6 = toZeroPaddedString(v3, #(4), #(4))::CL,69160
59453 :: CALL :: call :: Ljava/lang/String :: v9 = getString(v7, v6)::JM,59458:JM,59460:CL,69246
59458 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 24::CF,59460
59459 :: NORM :: compound :: Ljava/lang/String :: return v12::DD,59441
59460 :: EXPR :: assign :: null :: PHI v12 = v9, #(S1000 General error)::CF,59459
59472 :: ENTR :: entry :: null :: org.hsqldb.error.Error.insertStrings(java.lang.String,java.lang.Object[])::CE,59473:CD,59477:CD,59478:CD,59482:CD,59536:CD,59537:CD,59538:CD,59542:CD,59548:CD,59553:CD,59557:CD,59559:CD,59560:JM,59498:JM,59534
59473 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.error.Error.insertStrings(java.lang.String,java.lang.Object[])::JM,49151
59477 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v4 = new java.lang.StringBuffer::JM,59557:JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59478 :: CALL :: call :: I :: v6 = p1 $message .length()::JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59482 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(32)::
59492 :: CALL :: call :: I :: v16 = p1 $message .indexOf(#($$), v36)::JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59498 :: PRED :: IF :: Z :: if (v16 != #(-1)) goto 52::CD,59500:CD,59506:CD,59515:CD,59525:CD,59530:CD,59534:CD,59535:CD,59536:CD,59537:CD,59558:CD,59559:CD,59560:JM,59477:JM,59482:JM,59498
59500 :: CALL :: call :: Ljava/lang/String :: v19 = p1 $message .substring(v36, v16)::JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59506 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v4.append(v19)::
59511 :: EXPR :: reference :: Ljava/lang/Object :: v22 = p2 $add [v38]::DD,59515
59515 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 75::CD,59521:CD,59558
59517 :: EXPR :: reference :: Ljava/lang/Object :: v25 = p2 $add [v38]::JM,59558
59521 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,59558
59525 :: CALL :: call :: Ljava/lang/StringBuffer :: v30 = v4.append(v28)::
59530 :: CALL :: call :: I :: v32 = #($$).length()::JM,59534
59534 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v16 + v32::DD,59559:CF,59535
59535 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v38 + #(1)::DD,59560:CF,59559
59536 :: EXPR :: assign :: I :: v13 = p2 $add .length::CF,59537
59537 :: PRED :: IF :: Z :: if (v38 < v13) goto 33::CD,59492:CD,59498:JM,59536:JM,59477:JM,59482:JM,59534
59538 :: CALL :: call :: I :: v41 = p1 $message .length()::JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59542 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $message .substring(v36, v41)::JM,59536:JM,59477:JM,59482:JM,59498:JM,59534
59548 :: CALL :: call :: Ljava/lang/StringBuffer :: v45 = v4.append(v43)::
59553 :: CALL :: call :: Ljava/lang/String :: v47 = v4.toString()::JM,59557
59557 :: NORM :: compound :: Ljava/lang/String :: return v47::DD,59473
59558 :: EXPR :: assign :: null :: PHI v28 = #(null exception message), v27::
59559 :: EXPR :: assign :: null :: PHI v36 = #(0), v33::CF,59560:JM,59482:JM,59498:JM,59534
59560 :: EXPR :: assign :: null :: PHI v38 = #(0), v35::DD,59535:DD,59537:CF,59536
59615 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v12 = new java.lang.IllegalArgumentException::JM,59641:JM,59645
59616 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::JM,59641:JM,59645
59620 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(p1 $capacity )::JM,59641:JM,59645
59625 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
59635 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::JM,59641:JM,59645
59641 :: NORM :: declaration :: [Ljava/lang/Object :: v8 = new java.lang.Object[]::DD,59642
59642 :: EXPR :: modify :: [Ljava/lang/Object :: p0 $this .heap = v8::
59645 :: EXPR :: modify :: Ljava/util/Comparator :: p0 $this .oc = p2 $comparator ::
59663 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getLookup(int)::CE,59664:CD,59671:CD,59696:CD,59697:CD,59698:JM,59684
59664 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getLookup(int)::
59671 :: CALL :: call :: I :: v6 = v4.getLookup(p1 $key )::JM,59698:CL,58807
59677 :: EXPR :: reference :: [I :: v8 = p0 $this .intKeyTable::
59680 :: EXPR :: reference :: I :: v9 = v8[v13]::DD,59684
59684 :: PRED :: IF :: Z :: if (p1 $key  != v9) goto 28::CD,59696:CD,59698
59686 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v10 = p0 $this .hashIndex::
59689 :: EXPR :: reference :: [I :: v11 = v10.linkTable::
59692 :: EXPR :: reference :: I :: v12 = v11[v13]::DD,59698
59696 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 13::CD,59684:CF,59697
59697 :: NORM :: compound :: I :: return v13::DD,59664
59698 :: EXPR :: assign :: null :: PHI v13 = v6, v12::DD,59696:DD,59697
62404 :: EXIT :: exit :: Ljava/util/Iterator :: java.nio.charset.Charset.providers()::JM,51534
62406 :: NORM :: declaration :: Ljava/nio/charset/Charset$1 :: v2 = new java.nio.charset.Charset$1::DD,62410
62410 :: NORM :: compound :: Ljava/util/Iterator :: return v2::DD,62404
62422 :: ENTR :: entry :: null :: org.hsqldb.HsqlNameManager.access$0(org.hsqldb.HsqlNameManager)::CE,62423:CD,62429
62423 :: EXIT :: exit :: Ljava/util/concurrent/atomic/AtomicLong :: org.hsqldb.HsqlNameManager.access$0(org.hsqldb.HsqlNameManager)::JM,51562
62426 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicLong :: v3 = p1 $null .serialNumber::DD,62429
62429 :: NORM :: compound :: Ljava/util/concurrent/atomic/AtomicLong :: return v3::CF,62423
62431 :: ENTR :: entry :: null :: org.hsqldb.lib.StringConverter.count(java.lang.String,char)::CE,62432:CD,62436:CD,62447:CD,62450:JM,62439:JM,62446
62432 :: EXIT :: exit :: I :: org.hsqldb.lib.StringConverter.count(java.lang.String,char)::JM,51631
62436 :: PRED :: IF :: Z :: if (p1 $s  == #(null)) goto 30::CF,62450:CD,62440:CD,62446:CD,62448:CD,62449
62438 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v13 + #(1)::DD,62449:CF,62439
62439 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v7 + #(1)::DD,62448
62440 :: CALL :: call :: I :: v7 = p1 $s .indexOf(p2 $c , v12)::JM,62436:JM,62439:JM,62446
62446 :: PRED :: IF :: Z :: if (v7 > #(-1)) goto 11::CF,62450:CD,62438:CD,62439:CD,62440:CD,62448:CD,62449
62447 :: NORM :: compound :: I :: return v15::CF,62432
62448 :: EXPR :: assign :: null :: PHI v12 = #(0), v11::CF,62449:JM,62439:JM,62446
62449 :: EXPR :: assign :: null :: PHI v13 = #(0), v10::DD,62438:DD,62450:JM,62436:JM,62439:JM,62446
62450 :: EXPR :: assign :: null :: PHI v15 = #(0), v13::CF,62447
62854 :: CALL :: call :: V :: p0 $this .initParams(p1 $db , p2 $baseFileName , #(0))::CL,70088
62887 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.open(boolean)::CD,62898:CD,62902:CD,62983:CD,63126:CD,63189:CD,63254:CD,63409:CD,63413:CD,63428:JM,62938
62892 :: EXPR :: reference :: Lorg/hsqldb/Database :: v4 = p0 $this .database::
62895 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v5 = v4.logger::JM,62898:JM,62902
62898 :: CALL :: call :: Z :: v7 = v5.isStoredFileAccess()::JM,62898:JM,62902
62902 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 21::CD,62903:CD,62938
62903 :: CALL :: call :: V :: p0 $this .openStoredFileAccess(p1 $readonly )::CL,70489
62938 :: PRED :: IF :: Z :: if (p1 $readonly  != #(0)) goto 87::CD,62942:CD,62946:CD,62953:CD,62963:CD,62991:CD,62998:CD,63008:CD,63015:CD,63024:JM,53104:JM,53064:JM,53053:JM,53054
62939 :: EXPR :: reference :: Lorg/hsqldb/Database :: v21 = p0 $this .database::JM,62946:JM,62942
62942 :: CALL :: call :: Z :: v23 = v21.isFilesInJar()::JM,62946:JM,62942
62946 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 216::CD,62953:CD,62963:CD,62991:CD,62998:CD,63008:CD,63015:CD,63024:JM,53104:JM,53064:JM,53053:JM,53054:CD,63043:CD,63057:CD,63213:CD,63269:CD,63279:CD,63360:CD,63375:CD,63379:CD,63445:CD,63446:CD,63447
62953 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v166 = newScaledRAFile(v163, v164, #(1), v20)::CL,70845
62963 :: CALL :: call :: I :: v168 = p0 $this .getFlags()::CL,66855
62983 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v190 = error(#(453))::CL,33668
62991 :: CALL :: call :: V :: v174.seek(#(12 l))::CL,66626:CL,66637:CL,66668
62998 :: CALL :: call :: J :: v178 = v176.readLong()::CL,71204:CL,71165
63008 :: CALL :: call :: V :: v179.seek(#(24 l))::CL,66626:CL,66637:CL,66668
63015 :: CALL :: call :: I :: v183 = v181.readInt()::CL,71263:CL,71322:CL,71276
63024 :: CALL :: call :: V :: p0 $this .initBuffers()::CL,71412
63037 :: EXPR :: reference :: Lorg/hsqldb/lib/FileAccess :: v24 = p0 $this .fa::JM,63057:JM,63043:JM,63237:JM,63447
63040 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .dataFileName::JM,63057:JM,63043:JM,63237:JM,63447
63043 :: CALL :: call :: Z :: v27 = v24.isStreamElement(v25)::JM,63057:JM,63043:JM,63237:JM,63447
63048 :: EXPR :: reference :: Lorg/hsqldb/Database :: v28 = p0 $this .database::
63051 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v29 = v28.logger::
63054 :: EXPR :: reference :: Z :: v30 = v29.propIncrementBackup::DD,63442:DD,63445
63057 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 502::CF,63445:CD,63080:CD,63087:CD,63088:CD,63122:CD,63195:CD,63442:CD,63443:CD,63446
63080 :: CALL :: call :: J :: v39 = v37.length()::JM,63087:CL,71603:CL,71612:CL,71577:CL,71590:CL,71564
63084 :: EXPR :: reference :: J :: v40 = p0 $this .initialFreePos::DD,63087
63087 :: EXPR :: assign :: Z :: v41 = v39 == v40::DD,63088
63088 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 352::CF,63442:CD,63089:CD,63093:CD,63098:CD,63113:CD,63118:CD,63443
63089 :: CALL :: call :: I :: v43 = p0 $this .getFlags()::CL,66855
63093 :: CALL :: call :: Z :: v45 = isSet(v43, #(2))::JM,63443:CL,71133
63098 :: CALL :: call :: Z :: v47 = isSet(v43, #(1))::JM,63442:CL,71133
63113 :: CALL :: call :: Z :: v54 = isSet(v43, #(5))::JM,63118:CL,71133
63118 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 352::CF,63442:CD,63443
63122 :: CALL :: call :: V :: v58.close()::CL,54777:CL,54741
63126 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v162 = error(#(453))::CL,33668
63189 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v159 = error(#(468), v157)::CL,30204
63195 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 502::CF,63445:CD,63196:CD,63446
63196 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 502::CF,63445:CD,63446
63213 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 547::CD,63214:CD,63236
63214 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 518::CD,63215:CD,63225:CD,63230:CD,63447
63215 :: CALL :: call :: V :: p0 $this .deleteBackup()::CL,71625
63219 :: EXPR :: reference :: Lorg/hsqldb/lib/FileAccess :: v103 = p0 $this .fa::JM,63225:JM,63230
63222 :: EXPR :: reference :: Ljava/lang/String :: v104 = p0 $this .backupFileName::JM,63225:JM,63230
63225 :: CALL :: call :: Z :: v106 = v103.isStreamElement(v104)::JM,63225:JM,63230
63230 :: PRED :: IF :: Z :: if (v106 != #(0)) goto 595::CF,63447:CD,63231
63231 :: CALL :: call :: V :: p0 $this .backupDataFile(#(0))::CL,55960
63236 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 588::CD,63237:CD,63259:CD,63447
63237 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 595::CF,63447:CD,63238
63238 :: CALL :: call :: Z :: v94 = p0 $this .restoreBackupIncremental()::JM,63447:CL,71642
63254 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v102 = error(#(454))::CL,33668
63259 :: CALL :: call :: Z :: v92 = p0 $this .restoreBackup()::JM,63447:CL,71721
63269 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v113 = newScaledRAFile(v110, v111, p1 $readonly , v20)::CL,70845
63279 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 735::CD,63280:CD,63297:CD,63304:CD,63314:CD,63321:CD,63337:CD,63344:CD,63357
63280 :: CALL :: call :: I :: v116 = p0 $this .getFlags()::CL,66855
63297 :: CALL :: call :: V :: v120.seek(#(4 l))::CL,66626:CL,66637:CL,66668
63304 :: CALL :: call :: J :: v125 = v123.readLong()::CL,71204:CL,71165
63314 :: CALL :: call :: V :: v126.seek(#(12 l))::CL,66626:CL,66637:CL,66668
63321 :: CALL :: call :: J :: v131 = v129.readLong()::CL,71204:CL,71165
63337 :: CALL :: call :: V :: v133.seek(#(24 l))::CL,66626:CL,66637:CL,66668
63344 :: CALL :: call :: I :: v138 = v136.readInt()::CL,71263:CL,71322:CL,71276
63357 :: CALL :: call :: V :: p0 $this .initNewFile()::CL,71817
63360 :: CALL :: call :: V :: p0 $this .initBuffers()::CL,71412
63369 :: EXPR :: reference :: Lorg/hsqldb/Database :: v144 = p0 $this .database::
63372 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v145 = v144.logger::JM,63379:JM,63375
63375 :: CALL :: call :: I :: v147 = v145.getDataFileSpaces()::JM,63379:JM,63375
63379 :: PRED :: IF :: Z :: if (v147 <= #(0)) goto 781::JM,63953:JM,63944:JM,52857:JM,52858:JM,52621:JM,52910:JM,53104:JM,53064:JM,53053:JM,53054
63409 :: CALL :: call :: V :: p0 $this .release()::CL,46871
63413 :: CALL :: call :: Ljava/lang/String :: v199 = v191.toString()::
63428 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v202 = error(v191, #(452), #(52), v197)::CL,40052
63442 :: EXPR :: assign :: null :: PHI v55 = v30, v47, v47::CF,63443:DD,63196:DD,63445
63443 :: EXPR :: assign :: null :: PHI v56 = #(0), v45, v45::DD,63195:DD,63446
63445 :: EXPR :: assign :: null :: PHI v89 = v30, v55, v55, v55, v55::CF,63446:DD,63214:DD,63236
63446 :: EXPR :: assign :: null :: PHI v90 = #(0), v56, v56, v56, v56::DD,63213
63447 :: EXPR :: assign :: null :: PHI v109 = v27, v27, v27, v27, v94, v92::DD,63279
63644 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.reset()::CD,63684
63684 :: CALL :: call :: V :: v13.freeTableSpace(v14, v15, v16, v17, #(1))::CL,71955:CL,72158
63766 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.getDataFileScale()::CE,63767:CD,63773
63767 :: EXIT :: exit :: I :: org.hsqldb.persist.DataFileCache.getDataFileScale()::JM,72181:JM,72309
63770 :: EXPR :: reference :: I :: v3 = p0 $this .dataFileScale::DD,63773
63773 :: NORM :: compound :: I :: return v3::CF,63767
63944 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v14 = p3 $objectClass .getConstructor(v10)::
63953 :: CALL :: call :: Ljava/lang/RuntimeException :: v19 = runtimeError(#(201), #(BlockObjectStore))::CL,33706
63978 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.initialiseNewSpaceDirectory()::CD,64004:CD,64038:CD,64067:CD,64077:CD,64084
64004 :: CALL :: call :: J :: v17 = v11.enlargeFileSpace(v15)::CL,72504
64038 :: CALL :: call :: J :: v31 = v26.enlargeFileSpace(v29)::CL,72504
64067 :: CALL :: call :: V :: v40.add(v37, #(1))::CL,72750
64077 :: CALL :: call :: V :: p0 $this .createFileBlocksInDirectory(v43, v44, #(1))::CL,72825
64084 :: CALL :: call :: V :: p0 $this .createFileBlocksInDirectory(#(0), v47, #(7))::CL,72825
64135 :: ENTR :: entry :: null :: org.hsqldb.persist.BlockObjectStore.get(long,boolean)::CE,64136:CD,64147:CD,64155
64136 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.BlockObjectStore.get(long,boolean)::JM,81453:JM,88364
64147 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v8 = v5.get(p1 $i , v6, p0 $this , p2 $null )::JM,64155:CL,72853
64155 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v8::DD,64136
64161 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getBlockIndexLimit()::CE,64162:CD,64168:CD,64180:CD,64181:CD,64182:CD,64223
64162 :: EXIT :: exit :: I :: org.hsqldb.persist.DataSpaceManagerBlocks.getBlockIndexLimit()::JM,105835
64168 :: CALL :: call :: [I :: v5 = v3.getIntArray()::JM,64180:CL,72940
64173 :: EXPR :: reference :: I :: v8 = v5[v11]::DD,64177
64177 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 22::CD,64179:CD,64180:CD,64181:CD,64223
64179 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v11 + #(1)::DD,64223
64180 :: EXPR :: assign :: I :: v7 = v5.length::CF,64181
64181 :: PRED :: IF :: Z :: if (v11 < v7) goto 15::CD,64177:CF,64182
64182 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 37::CD,64183:CD,64184:CD,64199:CD,64206:CD,64218:CD,64219:CD,64220:CD,64221:CD,64222:CD,64224
64183 :: NORM :: compound :: I :: return #(0)::DD,64162
64184 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 + #(-1)::DD,64220
64199 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v23 = v21.get(v20, #(0))::CL,64135
64206 :: CALL :: call :: [I :: v26 = v24.getBitmapAddressArray()::JM,64218:CL,72949
64211 :: EXPR :: reference :: I :: v28 = v26[v30]::DD,64215
64215 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 95::CD,64217:CD,64218:CD,64219:CD,64224
64217 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,64224
64218 :: EXPR :: assign :: I :: v27 = v26.length::CF,64219
64219 :: PRED :: IF :: Z :: if (v30 < v27) goto 88::CD,64215:CF,64220
64220 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v13 * #(2048)::DD,64221
64221 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v30::CF,64222
64222 :: NORM :: compound :: I :: return v33::DD,64162
64223 :: EXPR :: assign :: null :: PHI v11 = #(0), v10::DD,64179:DD,64181:DD,64182:DD,64184:CF,64180
64224 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,64217:DD,64219:DD,64221:CF,64218
64267 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.initialiseSpaceList()::CD,64285:CD,64289:CD,64346:CD,64353:CD,64365:CD,64369
64285 :: CALL :: call :: Z :: v11 = v9.nextBlock()::JM,64289:CL,72969
64289 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 35::CD,64285
64346 :: CALL :: call :: V :: v34.reset()::CL,73148
64353 :: CALL :: call :: V :: v36.reset()::CL,73148
64365 :: CALL :: call :: I :: v45 = v4.size()::JM,64369:CL,38415
64369 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 198::CD,64370
64370 :: CALL :: call :: V :: p0 $this .setAsideBlocks(v4)::CL,73205
64456 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.initialiseTableSpace(org.hsqldb.persist.TableSpaceManagerBlocks)::CD,64465:CD,64469:CD,64477:CD,64483:CD,64491:CD,64492
64465 :: CALL :: call :: I :: v8 = p1 $tableSpace .getFileBlockIndex()::JM,64469:JM,64491:CL,73322
64469 :: PRED :: IF :: Z :: if (v8 < #(0)) goto 32::CF,64491:CD,64470:CD,64476
64470 :: CALL :: call :: Z :: v11 = p0 $this .hasFreeSpace(v5, v8)::JM,64476:CL,73331
64476 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 32::CF,64491
64477 :: PRED :: IF :: Z :: if (v12 >= #(0)) goto 42::CF,64492:CD,64478
64478 :: CALL :: call :: I :: v14 = p0 $this .findLargestFreeSpace(v5)::JM,64492:CL,73406
64483 :: PRED :: IF :: Z :: if (v15 >= #(0)) goto 49::CD,64485
64485 :: CALL :: call :: V :: p0 $this .initialiseTableSpace(p1 $tableSpace , v15)::CL,73479
64491 :: EXPR :: assign :: null :: PHI v12 = #(-1), #(-1), v8::DD,64477:DD,64492
64492 :: EXPR :: assign :: null :: PHI v15 = v12, v14::DD,64483
64539 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerSimple.initialiseSpaces()::CD,64569
64569 :: CALL :: call :: J :: v18 = v12.enlargeFileSpace(v16)::CL,72504
64674 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.makeParentDirectories(java.io.File)::CD,64679:CD,64683:JM,64704:JM,64698:JM,64703
64679 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $f .getParent()::JM,64704:JM,64698:JM,64683:JM,64703
64683 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 25::CF,64684:CD,64689:CD,64694:CD,64698:CD,64703:JM,64704:JM,64683
64684 :: NORM :: declaration :: Ljava/io/File :: v19 = new java.io.File::
64689 :: CALL :: call :: Z :: v22 = v19.mkdirs()::
64694 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $f .getPath()::JM,64704:JM,64698:JM,64683:JM,64703
64698 :: CALL :: call :: I :: v11 = v8.lastIndexOf(#(47))::JM,64704:JM,64698:JM,64703
64703 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 59::CD,64704:CD,64710:CD,64715:JM,64698:JM,64703
64704 :: CALL :: call :: Ljava/lang/String :: v14 = v8.substring(#(0), v11)::JM,64704:JM,64698:JM,64703
64710 :: NORM :: declaration :: Ljava/io/File :: v15 = new java.io.File::
64715 :: CALL :: call :: Z :: v18 = v15.mkdirs()::
64790 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.canonicalOrAbsolutePath(java.lang.String)::CE,64791:CD,64795:CD,64800:CD,64801:CD,64806
64791 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.lib.FileUtil.canonicalOrAbsolutePath(java.lang.String)::
64795 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .canonicalPath(p1 $path )::JM,64800:CL,73645
64800 :: NORM :: compound :: Ljava/lang/String :: return v5::DD,64791
64801 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .absolutePath(p1 $path )::JM,64806:CL,73662
64806 :: NORM :: compound :: Ljava/lang/String :: return v8::DD,64791
65803 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.synch()::CD,65829
65829 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v15 = error(v5, #(452), #(null))::CL,36514
65845 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileSimple.synch()::CD,65879
65879 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v19 = error(v7, #(452), #(null))::CL,36514
65890 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.synch()::CD,65897
65897 :: CALL :: call :: V :: v3.synch()::CL,75199:CL,65803
65907 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.close()::CD,65964:CD,65965:CD,65981:CD,65988
65935 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = #(null)::
65938 :: EXPR :: modify :: Ljava/nio/channels/FileChannel :: p0 $this .channel = #(null)::
65953 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v20 = p0 $this .buffers::
65956 :: EXPR :: modify :: Ljava/lang/Object :: v20[v23] = #(null)::
65961 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v15 = p0 $this .buffers::DD,65964
65960 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,65988
65965 :: PRED :: IF :: Z :: if (v23 < v16) goto 45::CD,65960:CD,65964:CD,65988
65964 :: EXPR :: assign :: I :: v16 = v15.length::CF,65965
65981 :: CALL :: call :: Ljava/io/IOException :: v31 = toIOException(v26)::CL,54121
65988 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,65960:DD,65965
66626 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.seek(long)::JM,66631
66631 :: EXPR :: modify :: J :: p0 $this .seekPosition = p1 $position ::
66637 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.seek(long)::JM,66657
66657 :: EXPR :: modify :: J :: p0 $this .seekPosition = p1 $position ::
66668 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.seek(long)::CD,66676
66676 :: CALL :: call :: V :: v4.seek(p1 $position )::CL,75879:CL,66637
66733 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.writeLong(long)::CD,66741
66741 :: CALL :: call :: V :: v4.writeLong(p1 $i )::CL,76096
66799 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.writeInt(int)::CD,66807
66807 :: CALL :: call :: V :: v4.writeInt(p1 $i )::CL,66820:CL,76139
66820 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.writeInt(int)::CD,66828:CD,66834:CD,66841
66828 :: CALL :: call :: V :: v4.reset()::CL,75937
66834 :: CALL :: call :: V :: v6.writeInt(p1 $i )::CL,76182
66841 :: CALL :: call :: V :: p0 $this .write(v8, #(0), #(4))::CL,75969
66855 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.getFlags()::CD,66862:CD,66869
66862 :: CALL :: call :: V :: v3.seek(#(28 l))::CL,66626:CL,66637:CL,66668
66869 :: CALL :: call :: I :: v8 = v6.readInt()::CL,71263:CL,71322:CL,71276
66892 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.setFlags(int)::CD,66900:CD,66907:CD,66914
66900 :: CALL :: call :: V :: v4.seek(#(28 l))::CL,66626:CL,66637:CL,66668
66907 :: CALL :: call :: V :: v7.writeInt(p1 $flags )::CL,66799:CL,66820
66914 :: CALL :: call :: V :: v9.synch()::CL,65845:CL,65890:CL,65803
67170 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.newDiscardFileName(java.lang.String)::CD,67193
67193 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(p1 $filename )::
67843 :: EXIT :: exit :: J :: org.hsqldb.persist.DataFileCache.getFileFreePos()::JM,105855
67842 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.getFileFreePos()::CE,67843:CD,67849
67846 :: EXPR :: reference :: J :: v3 = p0 $this .fileFreePosition::DD,67849
67849 :: NORM :: compound :: J :: return v3::CF,67843
68175 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.clearArray(int,java.lang.Object,int,int)::JM,68272:JM,68210:JM,68262:JM,68217:JM,68267:JM,68255:CD,68182
68182 :: PRED :: IF :: null :: switch p1 $type ::CD,68210:CD,68216:CD,68217:CD,68255:CD,68261:CD,68262:CD,68267:CD,68272
68210 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST p2 $data ::
68212 :: EXPR :: modify :: I :: v27[v28] = #(0)::
68217 :: PRED :: IF :: Z :: if (v28 >= p3 $from ) goto 158::CD,68216:CD,68267
68216 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(-1)::DD,68217:DD,68267
68255 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p2 $data ::
68257 :: EXPR :: modify :: Ljava/lang/Object :: v6[v8] = #(null)::
68261 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v10 + #(-1)::DD,68262:DD,68272
68262 :: PRED :: IF :: Z :: if (v8 >= p3 $from ) goto 273::CD,68261:CD,68272
68267 :: EXPR :: assign :: null :: PHI v29 = p4 $to , v28::DD,68216
68272 :: EXPR :: assign :: null :: PHI v10 = p4 $to , v8::DD,68261
68355 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.clearElementArrays(int,int)::CD,68364:CD,68412:CD,68456:CD,68470:JM,68480:JM,68483:JM,68482:JM,68389:JM,68485:JM,68452:JM,68484:JM,68487:JM,68422:JM,68486:JM,68489:JM,68488:JM,68466:JM,68437:JM,68374:JM,68408
68361 :: EXPR :: reference :: Z :: v5 = p0 $this .isIntKey::DD,68364
68364 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 31::CD,68373:CD,68374:CD,68379:CD,68482
68366 :: EXPR :: reference :: [I :: v20 = p0 $this .intKeyTable::
68369 :: EXPR :: modify :: I :: v20[v19] = #(0)::
68373 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(-1)::DD,68374:DD,68482
68374 :: PRED :: IF :: Z :: if (v19 >= p1 $from ) goto 13::CD,68373:CD,68482
68376 :: EXPR :: reference :: Z :: v7 = p0 $this .isLongKey::DD,68379
68379 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 61::CD,68388:CD,68389:CD,68394:CD,68483
68381 :: EXPR :: reference :: [J :: v16 = p0 $this .longKeyTable::
68384 :: EXPR :: modify :: J :: v16[v15] = #(0 l)::
68389 :: PRED :: IF :: Z :: if (v15 >= p1 $from ) goto 43::CD,68388:CD,68483
68388 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(-1)::DD,68389:DD,68483
68391 :: EXPR :: reference :: Z :: v8 = p0 $this .isObjectKey::DD,68394
68395 :: EXPR :: reference :: [Ljava/lang/Object :: v9 = p0 $this .objectKeyTable::DD,68398
68394 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 76::CD,68398:CD,68407:CD,68408:CD,68484
68398 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 95::CD,68407:CD,68408:CD,68484
68400 :: EXPR :: reference :: [Ljava/lang/Object :: v13 = p0 $this .objectKeyTable::
68403 :: EXPR :: modify :: Ljava/lang/Object :: v13[v12] = #(null)::
68407 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v14 + #(-1)::DD,68408:DD,68484
68409 :: EXPR :: reference :: Z :: v23 = p0 $this .isIntValue::DD,68412
68408 :: PRED :: IF :: Z :: if (v12 >= p1 $from ) goto 80::CD,68407:CD,68484
68412 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 125::CD,68421:CD,68422:CD,68427:CD,68485
68414 :: EXPR :: reference :: [I :: v33 = p0 $this .intValueTable::
68417 :: EXPR :: modify :: I :: v33[v32] = #(0)::
68421 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v34 + #(-1)::DD,68422:DD,68485
68422 :: PRED :: IF :: Z :: if (v32 >= p1 $from ) goto 107::CD,68421:CD,68485
68424 :: EXPR :: reference :: Z :: v24 = p0 $this .isLongValue::DD,68427
68427 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 155::CD,68436:CD,68437:CD,68442:CD,68486
68429 :: EXPR :: reference :: [J :: v30 = p0 $this .longValueTable::
68432 :: EXPR :: modify :: J :: v30[v29] = #(0 l)::
68437 :: PRED :: IF :: Z :: if (v29 >= p1 $from ) goto 137::CD,68436:CD,68486
68436 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v31 + #(-1)::DD,68437:DD,68486
68439 :: EXPR :: reference :: Z :: v25 = p0 $this .isObjectValue::DD,68442
68442 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 182::CD,68451:CD,68452:CD,68487
68444 :: EXPR :: reference :: [Ljava/lang/Object :: v27 = p0 $this .objectValueTable::
68447 :: EXPR :: modify :: Ljava/lang/Object :: v27[v26] = #(null)::
68451 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v28 + #(-1)::DD,68452:DD,68487
68453 :: EXPR :: reference :: [I :: v36 = p0 $this .accessTable::DD,68456
68452 :: PRED :: IF :: Z :: if (v26 >= p1 $from ) goto 167::CD,68451:CD,68487
68456 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 209::CD,68465:CD,68466:CD,68488
68458 :: EXPR :: reference :: [I :: v38 = p0 $this .accessTable::
68461 :: EXPR :: modify :: I :: v38[v37] = #(0)::
68465 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v39 + #(-1)::DD,68466:DD,68488
68467 :: EXPR :: reference :: [Z :: v41 = p0 $this .multiValueTable::DD,68470
68466 :: PRED :: IF :: Z :: if (v37 >= p1 $from ) goto 194::CD,68465:CD,68488
68470 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 235::CD,68479:CD,68480:CD,68489
68472 :: EXPR :: reference :: [Z :: v43 = p0 $this .multiValueTable::
68475 :: EXPR :: modify :: B :: v43[v42] = #(0)::
68479 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(-1)::DD,68480:DD,68489
68480 :: PRED :: IF :: Z :: if (v42 >= p1 $from ) goto 221::CD,68479:CD,68489
68483 :: EXPR :: assign :: null :: PHI v18 = p2 $to , v15::DD,68388
68482 :: EXPR :: assign :: null :: PHI v21 = p2 $to , v19::DD,68373
68485 :: EXPR :: assign :: null :: PHI v34 = p2 $to , v32::DD,68421
68484 :: EXPR :: assign :: null :: PHI v14 = p2 $to , v12::DD,68407
68487 :: EXPR :: assign :: null :: PHI v28 = p2 $to , v26::DD,68451
68486 :: EXPR :: assign :: null :: PHI v31 = p2 $to , v29::DD,68436
68489 :: EXPR :: assign :: null :: PHI v44 = p2 $to , v42::DD,68479
68488 :: EXPR :: assign :: null :: PHI v39 = p2 $to , v37::DD,68465
68580 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.clear()::CD,68590:CD,68599:CD,68603
68584 :: EXPR :: reference :: [I :: v3 = p0 $this .linkTable::
68587 :: EXPR :: reference :: I :: v5 = p0 $this .newNodePointer::
68590 :: CALL :: call :: V :: fill(v3, #(0), v5, #(0))::
68596 :: EXPR :: reference :: [I :: v7 = p0 $this .hashTable::
68599 :: CALL :: call :: V :: fill(v7, #(-1))::
68603 :: CALL :: call :: V :: p0 $this .resetTables()::CL,57340
68615 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getAccessCountCeiling(int,int)::JM,58772:JM,58763:JM,98183
68614 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getAccessCountCeiling(int,int)::CE,68615:CD,68635:CD,68644
68635 :: CALL :: call :: I :: v11 = rank(v5, v7, p1 $count , v8, v9, p2 $margin )::JM,68644:CL,77581
68644 :: NORM :: compound :: I :: return v11::CF,68615
68651 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeObject(java.lang.Object,boolean)::CD,68657:JM,68736
68657 :: PRED :: IF :: Z :: if (p1 $objectKey  != #(null)) goto 7::CD,68666:CD,68750:CD,68753
68666 :: CALL :: call :: I :: v10 = v8.getHashIndex(v7)::CL,47892
68671 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v11 = p0 $this .hashIndex::
68674 :: EXPR :: reference :: [I :: v12 = v11.hashTable::
68677 :: EXPR :: reference :: I :: v13 = v12[v10]::DD,68753
68689 :: CALL :: call :: Z :: v19 = v17.equals(p1 $objectKey )::JM,68694:CL,47971:CL,47984:CL,47907:CL,47932
68694 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 128::CD,68712:CD,68721:CD,68736:CD,68745:CD,68750:CD,68753
68702 :: EXPR :: reference :: [Ljava/lang/Object :: v27 = p0 $this .objectKeyTable::
68705 :: EXPR :: modify :: Ljava/lang/Object :: v27[v23] = #(null)::
68712 :: CALL :: call :: V :: v28.unlinkNode(v10, v24, v23)::CL,48135
68718 :: EXPR :: reference :: Z :: v30 = p0 $this .isObjectValue::DD,68721
68721 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 111::
68729 :: EXPR :: reference :: [Ljava/lang/Object :: v33 = p0 $this .objectValueTable::
68732 :: EXPR :: modify :: Ljava/lang/Object :: v33[v23] = #(null)::
68737 :: CALL :: call :: V :: p0 $this .removeRow(v23)::CL,77684
68736 :: PRED :: IF :: Z :: if (p2 $removeRow  == #(0)) goto 122::CD,68737
68745 :: CALL :: call :: I :: v22 = v20.getNextLookup(v23)::JM,68753:CL,48120
68750 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 43::CD,68689:CD,68694
68753 :: EXPR :: assign :: null :: PHI v23 = v13, v22::DD,68750
69160 :: ENTR :: entry :: null :: org.hsqldb.lib.StringUtil.toZeroPaddedString(long,int,int)::CD,69166:CD,69170:CD,69171:CD,69173:CD,69177:CD,69181:CD,69187:CD,69198:CD,69199:CD,69204:CD,69209:CD,69214:CD,69215:CD,69216:JM,69172
69166 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::
69171 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 19::CF,69214:CD,69172
69170 :: EXPR :: assign :: Z :: v8 = p1 $value  == #(0 l)::DD,69171
69173 :: CALL :: call :: Ljava/lang/String :: v13 = toString(v11)::JM,69181:JM,69215
69172 :: EXPR :: assign :: Ljava/lang/Object :: v10 = -(p1 $value )::DD,69214
69177 :: CALL :: call :: I :: v15 = v13.length()::JM,69181:JM,69215
69181 :: PRED :: IF :: Z :: if (v15 <= p2 $null ) goto 43::CF,69215:CD,69182:JM,69181
69182 :: CALL :: call :: Ljava/lang/String :: v17 = v13.substring(p2 $null )::JM,69181:JM,69215:JM,69204:JM,69198:JM,69166
69187 :: CALL :: call :: I :: v20 = v18.length()::JM,69216
69192 :: CALL :: call :: Ljava/lang/StringBuffer :: v23 = v5.append(#(48))::
69197 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v26 + #(1)::DD,69216
69199 :: CALL :: call :: Ljava/lang/StringBuffer :: v28 = v5.append(v18)::
69198 :: PRED :: IF :: Z :: if (v26 < p2 $null ) goto 55::CD,69192:CD,69197:CD,69216
69205 :: CALL :: call :: V :: v5.setLength(p3 $precision )::JM,69215
69204 :: PRED :: IF :: Z :: if (p3 $precision  >= p2 $null ) goto 89::CD,69205
69209 :: CALL :: call :: Ljava/lang/String :: v31 = v5.toString()::
69215 :: EXPR :: assign :: null :: PHI v18 = v13, v17::JM,69216
69214 :: EXPR :: assign :: null :: PHI v11 = p1 $value , v10::JM,69181:JM,69215
69216 :: EXPR :: assign :: null :: PHI v26 = v20, v25::DD,69197:DD,69198
69247 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.resources.ResourceBundleHandler.getString(int,java.lang.String)::JM,59458:JM,59460
69246 :: ENTR :: entry :: null :: org.hsqldb.resources.ResourceBundleHandler.getString(int,java.lang.String)::CE,69247:CD,69254:CD,69276:CD,69284:CD,69287:CD,69288:JM,69261:JM,69262
69254 :: PRED :: IF :: Z :: if (p1 $handle  < #(0)) goto 27::CD,69257:CD,69261:CD,69287
69257 :: CALL :: call :: I :: v8 = v6.size()::JM,69261:CL,38352
69261 :: PRED :: IF :: Z :: if (p1 $handle  >= v8) goto 27::CD,69262:CD,69287
69262 :: PRED :: IF :: Z :: if (p2 $key  != #(null)) goto 30::CD,69266:CD,69271:CD,69287
69266 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $handle )::JM,69271:CL,77855
69271 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,69287
69276 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 62::CD,69278:CD,69288
69278 :: CALL :: call :: Ljava/lang/String :: v17 = v14.getString(p2 $key )::JM,69288
69284 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,69247
69287 :: EXPR :: assign :: null :: PHI v14 = #(null), v13::DD,69276:JM,69288
69288 :: EXPR :: assign :: null :: PHI v20 = #(null), v17, #(null)::CF,69284
70047 :: CALL :: call :: Ljava/lang/ClassLoader :: v6 = getSystemClassLoader()::
70088 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.initParams(org.hsqldb.Database,java.lang.String,boolean)::CD,70096:CD,70117:CD,70236
70096 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(p2 $baseFileName )::
70117 :: CALL :: call :: Ljava/lang/String :: v17 = valueOf(p2 $baseFileName )::
70236 :: PRED :: IF :: Z :: if (p3 $defrag  == #(0)) goto 247::CD,70241:CD,70265
70241 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v59)::
70265 :: CALL :: call :: Ljava/lang/String :: v71 = valueOf(v69)::
70489 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.openStoredFileAccess(boolean)::CD,70504:CD,70724:CD,70728:CD,70743
70504 :: PRED :: IF :: Z :: if (p1 $readonly  == #(0)) goto 110::CD,70511:CD,70524:CD,70531:CD,70548:CD,70555:CD,70562:CD,70572:CD,70589:CD,70593:CD,70597:CD,70599:CD,70617:CD,70627:CD,70696:JM,53104:JM,53064:JM,53053:JM,53054:CD,70754:CD,70755
70511 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v67 = newScaledRAFile(v64, v65, p1 $readonly , #(3))::CL,70845
70524 :: CALL :: call :: V :: v68.seek(#(28 l))::CL,66626:CL,66637:CL,66668
70531 :: CALL :: call :: I :: v72 = v70.readInt()::CL,71263:CL,71322:CL,71276
70548 :: CALL :: call :: V :: v76.seek(#(12 l))::CL,66626:CL,66637:CL,66668
70555 :: CALL :: call :: J :: v80 = v78.readLong()::CL,71204:CL,71165
70562 :: CALL :: call :: V :: p0 $this .initBuffers()::CL,71412
70566 :: EXPR :: reference :: Lorg/hsqldb/lib/FileAccess :: v10 = p0 $this .fa::JM,70755:JM,70599:JM,70572
70569 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .dataFileName::JM,70755:JM,70599:JM,70572
70572 :: CALL :: call :: Z :: v13 = v10.isStreamElement(v11)::JM,70755:JM,70599:JM,70572
70577 :: EXPR :: reference :: Lorg/hsqldb/Database :: v14 = p0 $this .database::
70580 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v15 = v14.logger::
70583 :: EXPR :: reference :: Z :: v16 = v15.propIncrementBackup::DD,70601
70586 :: EXPR :: reference :: Lorg/hsqldb/Database :: v17 = p0 $this .database::JM,70593:JM,70597:JM,70589
70589 :: CALL :: call :: Lorg/hsqldb/persist/HsqlDatabaseProperties :: v19 = v17.getProperties()::JM,70593:JM,70597:JM,70589
70593 :: CALL :: call :: I :: v21 = v19.getDBModified()::JM,70593:JM,70597
70597 :: PRED :: IF :: Z :: if (v21 != #(1)) goto 159::CD,70754
70599 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 189::CF,70755:CD,70600
70601 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 182::CD,70602:CD,70607:CD,70755
70600 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 189::CF,70755:CD,70601
70602 :: CALL :: call :: Z :: v27 = p0 $this .restoreBackupIncremental()::JM,70755:CL,71642
70607 :: CALL :: call :: Z :: v25 = p0 $this .restoreBackup()::JM,70755:CL,71721
70617 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v32 = newScaledRAFile(v29, v30, p1 $readonly , #(3))::CL,70845
70627 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 313::CD,70631:CD,70638:CD,70645:CD,70652:CD,70668:CD,70675:CD,70693
70631 :: CALL :: call :: V :: v34.seek(#(4 l))::CL,66626:CL,66637:CL,66668
70638 :: CALL :: call :: J :: v39 = v37.readLong()::CL,71204:CL,71165
70645 :: CALL :: call :: V :: v40.seek(#(12 l))::CL,66626:CL,66637:CL,66668
70652 :: CALL :: call :: J :: v45 = v43.readLong()::CL,71204:CL,71165
70668 :: CALL :: call :: V :: v47.seek(#(28 l))::CL,66626:CL,66637:CL,66668
70675 :: CALL :: call :: I :: v52 = v50.readInt()::CL,71263:CL,71322:CL,71276
70693 :: CALL :: call :: V :: p0 $this .initNewFile()::CL,71817
70696 :: CALL :: call :: V :: p0 $this .initBuffers()::CL,71412
70724 :: CALL :: call :: V :: p0 $this .release()::CL,46871
70728 :: CALL :: call :: Ljava/lang/String :: v91 = v82.toString()::
70743 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v94 = error(v82, #(452), #(52), v89)::CL,40052
70755 :: EXPR :: assign :: null :: PHI v28 = v13, v13, v27, v25::DD,70627
70754 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,70600:CF,70599
70845 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.newScaledRAFile(org.hsqldb.Database,java.lang.String,boolean,int)::CE,70846:CD,70852:JM,70995:JM,70981:JM,70974
70846 :: EXIT :: exit :: Lorg/hsqldb/persist/RandomAccessInterface :: org.hsqldb.persist.RAFile.newScaledRAFile(org.hsqldb.Database,java.lang.String,boolean,int)::JM,105183
70852 :: PRED :: IF :: Z :: if (p4 $type  != #(3)) goto 204::CD,70874:CD,70904:CD,70909:CD,70926:CD,70931:CD,70932:CD,70974
70874 :: CALL :: call :: Ljava/lang/ClassLoader :: v44 = v42.getContextClassLoader()::
70904 :: CALL :: call :: Ljava/lang/reflect/Constructor :: v58 = v51.getConstructor(v53)::JM,70931:JM,70933:JM,70926
70909 :: NORM :: declaration :: [Ljava/lang/Object :: v59 = new java.lang.Object[]::JM,70931:JM,70933:JM,70926
70926 :: CALL :: call :: Ljava/lang/Object :: v63 = v58.newInstance(v59)::JM,70931:JM,70933:JM,70926
70931 :: EXPR :: assign :: Z :: v64=v63 INSTANCEOF org.hsqldb.persist.RandomAccessInterface::DD,70932
70933 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v63::CF,70934
70932 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 125::CD,70933:CD,70934:CD,70937:JM,78293:CD,70943
70934 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v88::DD,70846
70937 :: NORM :: declaration :: Lorg/hsqldb/persist/RAStorageWrapper :: v85 = new org.hsqldb.persist.RAStorageWrapper::DD,70943
70943 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v85::DD,70846
70975 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFileInJar :: v29 = new org.hsqldb.persist.RAFileInJar::DD,70980
70974 :: PRED :: IF :: Z :: if (p4 $type  != #(2)) goto 218::CF,70975:JM,78336:JM,74003:JM,78311:JM,78326:JM,78329:JM,74009:JM,78315:CD,70980:CD,70981
70981 :: PRED :: IF :: Z :: if (p4 $type  != #(5)) goto 242::CF,70982:JM,78368:JM,78371:JM,78434:JM,78405:JM,78374:JM,78409:JM,78441:JM,78381:JM,78448:JM,74003:JM,78420:JM,78390:JM,74070:JM,74009:JM,78394:JM,78365:CD,70994:CD,70995
70980 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v29::DD,70846
70982 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFile :: v26 = new org.hsqldb.persist.RAFile::DD,70994
70995 :: PRED :: IF :: Z :: if (p4 $type  != #(0)) goto 261::CF,71009:CF,70996:JM,78368:JM,78371:JM,78434:JM,78405:JM,78374:JM,78409:JM,78441:JM,78381:JM,78448:JM,74003:JM,78420:JM,78390:JM,74070:JM,74009:JM,78394:JM,78365:CD,71008:CD,71014:CD,71024:CD,71025
70994 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v26::DD,70846
70996 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFile :: v23 = new org.hsqldb.persist.RAFile::DD,71008
71009 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
71008 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v23::DD,70846
71014 :: CALL :: call :: J :: v13 = v10.length()::JM,71024
71018 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v14 = p1 $database .logger::
71021 :: EXPR :: reference :: J :: v15 = v14.propNioMaxSize::DD,71024
71025 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 307::CF,71039:CF,71026:JM,78368:JM,78371:JM,78434:JM,78405:JM,78374:JM,78409:JM,78441:JM,78381:JM,78448:JM,74003:JM,78420:JM,78390:JM,74070:JM,74009:JM,78394:JM,78365:CD,71038:JM,78513:JM,78518:JM,78504:JM,78507:JM,78522:JM,78510:CD,71046
71024 :: EXPR :: assign :: Z :: v16 = v13 == v15::DD,71025
71026 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFile :: v19 = new org.hsqldb.persist.RAFile::DD,71038
71039 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFileHybrid :: v17 = new org.hsqldb.persist.RAFileHybrid::DD,71046
71038 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v19::DD,70846
71046 :: NORM :: compound :: Lorg/hsqldb/persist/RandomAccessInterface :: return v17::DD,70846
71133 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.isSet(int,int)::CF,71134:CD,71138:CD,71139:CD,71140:CD,71142:CD,71143
71134 :: EXIT :: exit :: Z :: org.hsqldb.map.BitMap.isSet(int,int)::JM,63443:JM,63442:JM,63118
71139 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $map  && v5::DD,71140
71138 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(-2147483648) ? p2 $pos ::DD,71139
71140 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,71143
71143 :: EXPR :: assign :: null :: PHI v9 = #(0), #(1)::CF,71142
71142 :: NORM :: compound :: Z :: return v9::CF,71134
71165 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.readLong()::CD,71169:CD,71174
71169 :: CALL :: call :: I :: v4 = p0 $this .readInt()::CL,71322
71174 :: CALL :: call :: I :: v7 = p0 $this .readInt()::CL,71322
71204 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.readLong()::CD,71211
71211 :: CALL :: call :: J :: v5 = v3.readLong()::CL,78543
71263 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.readInt()::CD,71270
71270 :: CALL :: call :: I :: v5 = v3.readInt()::CL,78884:CL,71276
71276 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.readInt()::CD,71283:CD,71289:CD,71298
71283 :: CALL :: call :: V :: v3.reset()::CL,78578
71289 :: CALL :: call :: V :: p0 $this .read(v5, #(0), #(4))::CL,78591
71298 :: CALL :: call :: I :: v11 = v9.readInt()::CL,78919
71322 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.readInt()::CD,71329:CD,71358:CD,71371:CD,71379:CD,71386
71326 :: EXPR :: reference :: Z :: v3 = p0 $this .bufferDirty::DD,71329
71329 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 39::CD,71336:CD,71337:CD,71352
71330 :: EXPR :: reference :: J :: v5 = p0 $this .seekPosition::DD,71336
71333 :: EXPR :: reference :: J :: v6 = p0 $this .bufferOffset::DD,71336
71337 :: PRED :: IF :: Z :: if (v7 < #(0)) goto 39::CD,71347:CD,71348:CD,71349:CD,71350:CD,71351:CD,71352
71336 :: EXPR :: assign :: Z :: v7 = v5 == v6::DD,71337
71338 :: EXPR :: reference :: J :: v8 = p0 $this .seekPosition::DD,71350
71341 :: EXPR :: reference :: J :: v9 = p0 $this .bufferOffset::DD,71349
71344 :: EXPR :: reference :: [B :: v10 = p0 $this .buffer::DD,71347
71347 :: EXPR :: assign :: I :: v11 = v10.length::CF,71348
71349 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v9 + v12::CF,71350
71348 :: EXPR :: assign :: J :: v12 = CONVERT I to J v11::CF,71349
71351 :: PRED :: IF :: Z :: if (v14 < #(0)) goto 43::CD,71352
71350 :: EXPR :: assign :: Z :: v14 = v8 == v13::DD,71351
71352 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,79047
71358 :: CALL :: call :: V :: v16.reset()::CL,78578
71371 :: CALL :: call :: J :: v23 = v18.skip(v21)::CL,79150
71379 :: CALL :: call :: I :: v26 = v24.readInt()::CL,78919
71383 :: EXPR :: reference :: J :: v27 = p0 $this .seekPosition::DD,71386
71387 :: EXPR :: modify :: J :: p0 $this .seekPosition = v29::
71386 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 + #(4 l)::DD,71387
71412 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.initBuffers()::CD,71419:CD,71463
71416 :: EXPR :: reference :: Lorg/hsqldb/rowio/RowOutputInterface :: v3 = p0 $this .rowOut::DD,71419
71419 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 64::CD,71423
71420 :: EXPR :: reference :: Z :: v5 = p0 $this .is180::DD,71423
71423 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 36::
71460 :: EXPR :: reference :: Lorg/hsqldb/rowio/RowInputInterface :: v18 = p0 $this .rowIn::DD,71463
71463 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 122::CD,71467
71464 :: EXPR :: reference :: Z :: v19 = p0 $this .is180::DD,71467
71467 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 97::
71533 :: NORM :: declaration :: Ljava/io/RandomAccessFile :: v7 = new java.io.RandomAccessFile::DD,71539
71539 :: EXPR :: modify :: Ljava/io/RandomAccessFile :: p0 $this .file = v7::
71542 :: EXPR :: modify :: Lorg/hsqldb/persist/EventLogInterface :: p0 $this .logger = p1 $logger ::
71545 :: CALL :: call :: Z :: v11 = p3 $openMode .equals(#(r))::JM,71550
71550 :: EXPR :: modify :: Z :: p0 $this .readOnly = v11::
71565 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileHybrid.length()::JM,63087:JM,79377:JM,101078
71564 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.length()::CE,71565:CD,71571:CD,71575
71571 :: CALL :: call :: J :: v5 = v3.length()::JM,71575:CL,71577:CL,79286
71575 :: NORM :: compound :: J :: return v5::DD,71565
71577 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.length()::CE,71578:CD,71584:CD,71588
71578 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFile.length()::JM,63087:JM,71575:JM,78445:JM,79377:JM,83882:JM,101078
71581 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v3 = p0 $this .file::JM,71584:JM,71588
71584 :: CALL :: call :: J :: v5 = v3.length()::JM,71584:JM,71588
71588 :: NORM :: compound :: J :: return v5::CF,71578
71591 :: EXIT :: exit :: J :: org.hsqldb.persist.RAStorageWrapper.length()::JM,63087:JM,79377:JM,101078
71590 :: ENTR :: entry :: null :: org.hsqldb.persist.RAStorageWrapper.length()::CE,71591:CD,71597:CD,71601
71594 :: EXPR :: reference :: Lorg/hsqldb/lib/Storage :: v3 = p0 $this .file::JM,71601:JM,71597
71597 :: CALL :: call :: J :: v5 = v3.length()::JM,71601:JM,71597
71601 :: NORM :: compound :: J :: return v5::CF,71591
71603 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.length()::CE,71604:CD,71610
71604 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileInJar.length()::JM,63087:JM,79377:JM,101078
71607 :: EXPR :: reference :: J :: v3 = p0 $this .fileLength::DD,71610
71610 :: NORM :: compound :: J :: return v3::CF,71604
71613 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileSimple.length()::JM,63087:JM,79377:JM,101078
71612 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileSimple.length()::CE,71613:CD,71619:CD,71623
71616 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v3 = p0 $this .file::JM,71619:JM,71623
71619 :: CALL :: call :: J :: v5 = v3.length()::JM,71619:JM,71623
71623 :: NORM :: compound :: J :: return v5::CF,71613
71625 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.deleteBackup()::CD,71635
71635 :: CALL :: call :: V :: deleteFile(v3, v4)::CL,56194
71643 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataFileCache.restoreBackupIncremental()::JM,63447:JM,70755
71642 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.restoreBackupIncremental()::CE,71643:CD,71652:CD,71659:CD,71664:CD,71702
71646 :: EXPR :: reference :: Lorg/hsqldb/Database :: v3 = p0 $this .database::
71649 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v4 = v3.logger::JM,71664:JM,71652:JM,71659
71652 :: CALL :: call :: Lorg/hsqldb/lib/FileAccess :: v6 = v4.getFileAccess()::JM,71664:JM,71652:JM,71659
71656 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .backupFileName::JM,71664:JM,71659
71659 :: CALL :: call :: Z :: v9 = v6.isStreamElement(v7)::JM,71664:JM,71659
71664 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 53::CD,71674:CD,71685:CD,71689:CD,71690
71674 :: CALL :: call :: V :: restoreFile(v11, v12, v13)::CL,79323
71685 :: CALL :: call :: V :: deleteFile(v15, v16)::CL,56194
71689 :: NORM :: compound :: Z :: return #(1)::DD,71643
71690 :: NORM :: compound :: Z :: return #(0)::DD,71643
71702 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v25 = error(#(452), v18)::CL,45062
71721 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.restoreBackup()::CE,71722:CD,71731:CD,71741:CD,71748:CD,71753:CD,71780:CD,71795
71722 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataFileCache.restoreBackup()::JM,63447:JM,70755
71725 :: EXPR :: reference :: Lorg/hsqldb/Database :: v3 = p0 $this .database::
71728 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v4 = v3.logger::JM,71731:JM,71748:JM,71753
71731 :: CALL :: call :: Lorg/hsqldb/lib/FileAccess :: v6 = v4.getFileAccess()::JM,71731:JM,71748:JM,71753
71741 :: CALL :: call :: V :: deleteFile(v7, v8)::CL,56194
71745 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .backupFileName::JM,71748:JM,71753
71748 :: CALL :: call :: Z :: v12 = v6.isStreamElement(v10)::JM,71748:JM,71753
71753 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 51::CD,71760:CD,71766:CD,71767
71760 :: CALL :: call :: V :: unarchive(v14, v15, v6, #(1))::CL,79419
71767 :: NORM :: compound :: Z :: return #(0)::DD,71722
71766 :: NORM :: compound :: Z :: return #(1)::DD,71722
71780 :: CALL :: call :: Ljava/lang/String :: v28 = v18.toString()::
71795 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v31 = error(v18, #(452), #(26), v26)::CL,40052
71817 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.initNewFile()::CD,71836:CD,71846:CD,71868:CD,71875:CD,71904:CD,71912
71836 :: CALL :: call :: V :: v5.seek(#(12 l))::CL,66626:CL,66637:CL,66668
71846 :: CALL :: call :: V :: v8.writeLong(v9)::CL,66733
71868 :: CALL :: call :: V :: v19.seek(#(20 l))::CL,66626:CL,66637:CL,66668
71875 :: CALL :: call :: V :: v22.writeInt(v18)::CL,66799:CL,66820
71904 :: CALL :: call :: V :: p0 $this .setFlags(v37)::CL,66892
71912 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v42 = error(#(452), v39)::CL,45062
71955 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.freeTableSpace(int,org.hsqldb.lib.DoubleIntIndex,long,long,boolean)::CD,71964:CD,71968:CD,72065:JM,71969:JM,71976
71964 :: CALL :: call :: I :: v9 = p2 $spaceList .size()::JM,71968:CL,79714
71969 :: EXPR :: assign :: Z :: v11 = p3 $offset  == p4 $null ::DD,71970
71968 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 16::CD,71969:CD,71970:CD,71972:CD,71976
71970 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 16::CD,71972:CD,71976
71972 :: CALL :: call :: Z :: v13 = p2 $spaceList .compactLookupAsIntervals()::CL,79723
71977 :: CALL :: call :: I :: v15 = p2 $spaceList .capacity()::JM,71985:CL,79921
71976 :: PRED :: IF :: Z :: if (p5 $limit  != #(0)) goto 57::CD,71977:CD,71981:CD,71985:CD,71986:CD,71990:CD,71991:CD,72011:CD,72039:CD,72043:CD,72056:CD,72072:CD,72095:CD,72098:CD,72104
71981 :: CALL :: call :: I :: v17 = p2 $spaceList .size()::JM,71985:CL,79714
71985 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,71991
71986 :: CALL :: call :: I :: v20 = p2 $spaceList .capacity()::JM,71990:CL,79921
71991 :: PRED :: IF :: Z :: if (v18 <= v22) goto 57::CD,71992:CD,71995:CD,72011:CD,72039:CD,72043:CD,72056:CD,72072:CD,72095:CD,72098:CD,72104
71990 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v20 / #(4)::CF,71991
71992 :: CALL :: call :: V :: p2 $spaceList .setValuesSearchTarget()::CL,72468
71995 :: CALL :: call :: V :: p2 $spaceList .sort()::CL,79930
72011 :: CALL :: call :: V :: v26.initialise(#(1))::CL,72958
72033 :: CALL :: call :: V :: p0 $this .freeTableSpacePart(v37, v36)::CL,79957
72039 :: CALL :: call :: I :: v34 = p2 $spaceList .size()::JM,72043:CL,79714
72038 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v40 + #(1)::DD,72104
72043 :: PRED :: IF :: Z :: if (v40 < v34) goto 98::CD,72033:CD,72038:CD,72039:CD,72104
72056 :: CALL :: call :: V :: p0 $this .freeTableSpacePart(v43, v48)::CL,79957
72065 :: CALL :: call :: V :: v58.reset()::CL,73148
72072 :: CALL :: call :: V :: v50.reset()::CL,73148
72095 :: CALL :: call :: V :: p2 $spaceList .clear()::CL,80170
72098 :: CALL :: call :: V :: p2 $spaceList .setValuesSearchTarget()::CL,72468
72104 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::DD,72038:DD,72043
72158 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerSimple.freeTableSpace(int,org.hsqldb.lib.DoubleIntIndex,long,long,boolean)::CD,72170:CD,72177:CD,72181:CD,72182:CD,72183:CD,72187:JM,72208:JM,72194:JM,72235
72167 :: EXPR :: reference :: J :: v8 = p0 $this .totalFragmentSize::DD,72183
72170 :: CALL :: call :: J :: v10 = p2 $spaceList .getTotalValues()::JM,72182:CL,73610
72177 :: CALL :: call :: I :: v13 = v11.getDataFileScale()::JM,72181:CL,63766
72181 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::CF,72182
72183 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v8 + v15::DD,72184
72182 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v10 * v14::CF,72183
72184 :: EXPR :: modify :: J :: p0 $this .totalFragmentSize = v16::
72187 :: PRED :: IF :: Z :: if (p5 $limit  == #(0)) goto 147::CD,72194:CD,72195:CD,72240:CD,72244:CD,72269:CD,72273:CD,72276:CD,72279:CD,72283:CD,72287:CD,72288:CD,72289
72188 :: EXPR :: reference :: Lorg/hsqldb/persist/DataFileCache :: v39 = p0 $this .cache::
72191 :: EXPR :: reference :: J :: v40 = v39.fileFreePosition::DD,72194
72195 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 97::CD,72235:CD,72236
72194 :: EXPR :: assign :: Z :: v41 = v40 == p4 $null ::DD,72195
72205 :: EXPR :: reference :: Lorg/hsqldb/persist/DataFileCache :: v48 = p0 $this .cache::
72208 :: EXPR :: modify :: J :: v48.fileFreePosition = p3 $offset ::
72232 :: EXPR :: reference :: J :: v42 = p0 $this .totalFragmentSize::DD,72236
72235 :: EXPR :: assign :: Ljava/lang/Object :: v43 = p4 $null  - p3 $offset ::CF,72236
72237 :: EXPR :: modify :: J :: p0 $this .totalFragmentSize = v44::
72236 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v42 + v43::DD,72237
72240 :: CALL :: call :: I :: v57 = p2 $spaceList .size()::JM,72244:CL,79714
72245 :: NORM :: declaration :: Lorg/hsqldb/lib/DoubleIntIndex :: v58 = new org.hsqldb.lib.DoubleIntIndex::DD,72255
72244 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 206::CD,72245:JM,72433:JM,72436:JM,72440:JM,72444:CD,72261:CD,72265
72255 :: EXPR :: modify :: Lorg/hsqldb/lib/DoubleIntIndex :: p0 $this .lookup = v58::
72261 :: CALL :: call :: V :: p2 $spaceList .copyTo(v63)::CL,80179
72265 :: CALL :: call :: V :: p2 $spaceList .clear()::CL,80170
72269 :: CALL :: call :: Z :: v19 = p2 $spaceList .compactLookupAsIntervals()::CL,79723
72273 :: CALL :: call :: V :: p2 $spaceList .setValuesSearchTarget()::CL,72468
72276 :: CALL :: call :: V :: p2 $spaceList .sort()::CL,79930
72279 :: CALL :: call :: I :: v23 = p2 $spaceList .size()::JM,72288:CL,79714
72283 :: CALL :: call :: I :: v25 = p2 $spaceList .capacity()::JM,72287:CL,79921
72287 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 / #(2)::CF,72288
72289 :: PRED :: IF :: Z :: if (v28 <= #(0)) goto 206::CD,72290:CD,72298:CD,72305:CD,72309:CD,72310:CD,72311
72288 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v23 - v27::DD,72289
72290 :: CALL :: call :: V :: p2 $spaceList .removeRange(#(0), v28)::CL,80236
72295 :: EXPR :: reference :: J :: v30 = p0 $this .totalFragmentSize::DD,72311
72298 :: CALL :: call :: J :: v32 = p2 $spaceList .getTotalValues()::JM,72310:CL,73610
72305 :: CALL :: call :: I :: v35 = v33.getDataFileScale()::JM,72309:CL,63766
72309 :: EXPR :: assign :: J :: v36 = CONVERT I to J v35::CF,72310
72311 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v30 - v37::DD,72312
72310 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v32 * v36::CF,72311
72312 :: EXPR :: modify :: J :: p0 $this .totalFragmentSize = v38::
72424 :: EXPR :: modify :: I :: p0 $this .count = #(0)::
72427 :: EXPR :: modify :: Z :: p0 $this .sorted = #(1)::
72430 :: EXPR :: modify :: Z :: p0 $this .sortOnValues = #(1)::
72433 :: EXPR :: modify :: I :: p0 $this .capacity = p1 $capacity ::
72437 :: EXPR :: modify :: [I :: p0 $this .keys = v8::
72436 :: NORM :: declaration :: [I :: v8 = new []::DD,72437
72441 :: EXPR :: modify :: [I :: p0 $this .values = v9::
72440 :: NORM :: declaration :: [I :: v9 = new []::DD,72441
72444 :: EXPR :: modify :: Z :: p0 $this .fixedSize = p2 $fixedSize ::
72447 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
72468 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.setValuesSearchTarget()::CD,72475
72472 :: EXPR :: reference :: Z :: v3 = p0 $this .sortOnValues::DD,72475
72475 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 22::CD,72479
72476 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,72479
72479 :: PRED :: IF :: Z :: if (v5 <= #(1)) goto 22::
72480 :: EXPR :: modify :: Z :: p0 $this .sorted = #(0)::
72483 :: EXPR :: modify :: Z :: p0 $this .sortOnValues = #(1)::
72505 :: EXIT :: exit :: J :: org.hsqldb.persist.DataFileCache.enlargeFileSpace(long)::JM,97859
72504 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.enlargeFileSpace(long)::CE,72505:CD,72559:CD,72568:CD,72607:CD,72615:CD,72625
72515 :: EXPR :: reference :: J :: v6 = p0 $this .fileFreePosition::DD,72625
72559 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v53 = error(#(468))::CL,33668
72568 :: CALL :: call :: Z :: v14 = v11.ensureLength(v12)::CL,80302:CL,80328
72607 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v37 = error(#(468))::CL,33668
72612 :: EXPR :: reference :: J :: v15 = p0 $this .fileFreePosition::DD,72615
72615 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 + p1 $delta ::DD,72616
72616 :: EXPR :: modify :: J :: p0 $this .fileFreePosition = v16::
72625 :: NORM :: compound :: J :: return v6::DD,72505
72654 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.initialiseFileBlock(org.hsqldb.lib.DoubleIntIndex,long,long)::CD,72667:JM,72661:JM,72664
72661 :: EXPR :: modify :: J :: p0 $this .freshBlockFreePos = p2 $blockFreePos ::
72664 :: EXPR :: modify :: J :: p0 $this .freshBlockLimit = p3 $null ::
72667 :: PRED :: IF :: Z :: if (p1 $spaceList  == #(null)) goto 23::CD,72671
72671 :: CALL :: call :: V :: p1 $spaceList .copyTo(v7)::CL,80179
72750 :: ENTR :: entry :: null :: org.hsqldb.persist.BlockObjectStore.add(org.hsqldb.persist.CachedObject,boolean)::CD,72771:CD,72780:CD,72790:CD,72796:CD,72803
72771 :: CALL :: call :: Ljava/lang/RuntimeException :: v23 = runtimeError(#(201), #(BlockObjectStore))::CL,33706
72780 :: CALL :: call :: V :: p1 $object .setStorageSize(v10)::CL,80559
72790 :: CALL :: call :: J :: v16 = v12.getFilePosition(v13, #(1))::CL,80570
72796 :: CALL :: call :: V :: p1 $object .setPos(v16)::CL,80831
72803 :: CALL :: call :: V :: v18.add(p1 $object , p2 $keep )::CL,80842
72825 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.createFileBlocksInDirectory(int,int,int)::CD,72840:CD,72842
72834 :: CALL :: call :: V :: p0 $this .createFileBlockInDirectory(v7, p3 $tableId )::CL,80917
72839 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v11 + #(1)::DD,72842
72840 :: PRED :: IF :: Z :: if (v11 < p2 $blockCount ) goto 10::CD,72834:CD,72839:CD,72842
72842 :: EXPR :: assign :: null :: PHI v11 = #(0), v10::DD,72839:DD,72840
72853 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.get(long,int,org.hsqldb.persist.PersistentStore,boolean)::CE,72854:CD,72861:CD,72862:JM,72879
72854 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.DataFileCache.get(long,int,org.hsqldb.persist.PersistentStore,boolean)::JM,64155
72861 :: EXPR :: assign :: Z :: v8 = p1 $pos  == #(0 l)::DD,72862
72863 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return #(null)::DD,72854
72862 :: PRED :: IF :: Z :: if (v8 >= #(0)) goto 9::CD,72863:CD,72873:CD,72878
72873 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v14 = v12.get(p1 $pos )::JM,72891:JM,72878:CL,81030
72879 :: PRED :: IF :: Z :: if (p4 $store  == #(0)) goto 51::CD,72880
72878 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 77::CD,72879:CD,72891:CD,72905:CD,72913
72880 :: CALL :: call :: Z :: v22 = v14.keepInMemory(#(1))::CL,81099
72891 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v14::DD,72854
72905 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v19 = p0 $this .getFromFile(p1 $pos , p2 $null , p3 $size , p4 $store )::JM,72913:CL,81150
72913 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v19::DD,72854
72941 :: EXIT :: exit :: [I :: org.hsqldb.persist.IntArrayCachedObject.getIntArray()::JM,64180
72940 :: ENTR :: entry :: null :: org.hsqldb.persist.IntArrayCachedObject.getIntArray()::CE,72941:CD,72947
72944 :: EXPR :: reference :: [I :: v3 = p0 $this .values::DD,72947
72947 :: NORM :: compound :: [I :: return v3::CF,72941
72949 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.getBitmapAddressArray()::CE,72950:CD,72956
72950 :: EXIT :: exit :: [I :: org.hsqldb.persist.DirectoryBlockCachedObject.getBitmapAddressArray()::JM,64218
72953 :: EXPR :: reference :: [I :: v3 = p0 $this .bitmapAddress::DD,72956
72956 :: NORM :: compound :: [I :: return v3::CF,72950
72958 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.initialise(boolean)::JM,72963
72963 :: EXPR :: modify :: Z :: p0 $this .currentKeep = p1 $forUpdate ::
72969 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.nextBlock()::CE,72970:CD,72977:CD,72982
72970 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.nextBlock()::JM,64289
72977 :: CALL :: call :: Z :: v7 = p0 $this .moveToBlock(v5)::JM,72982:CL,81350
72982 :: NORM :: compound :: Z :: return v7::DD,72970
72989 :: EXIT :: exit :: I :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.getTableId()::JM,73360:JM,82057
72988 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.getTableId()::CE,72989:CD,72995:CD,73006
72995 :: CALL :: call :: [I :: v5 = v3.getTableIdArray()::CL,81502
72999 :: EXPR :: reference :: I :: v6 = p0 $this .currentBlockOffset::
73002 :: EXPR :: reference :: I :: v7 = v5[v6]::DD,73006
73006 :: NORM :: compound :: I :: return v7::CF,72989
73031 :: EXIT :: exit :: C :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.getFreeBlockValue()::JM,73368:JM,73457:JM,73426
73030 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.getFreeBlockValue()::CE,73031:CD,73037:CD,73048
73037 :: CALL :: call :: [C :: v5 = v3.getFreeBlockArray()::CL,81520
73041 :: EXPR :: reference :: I :: v6 = p0 $this .currentBlockOffset::
73044 :: EXPR :: reference :: C :: v7 = v5[v6]::DD,73048
73048 :: NORM :: compound :: C :: return v7::CF,73031
73051 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.addUnique(int)::CD,73062:JM,73105:JM,73078
73056 :: EXPR :: reference :: I :: v4 = p0 $this .count::DD,73062
73059 :: EXPR :: reference :: I :: v5 = p0 $this .capacity::DD,73062
73063 :: EXPR :: reference :: Z :: v6 = p0 $this .fixedSize::DD,73066
73062 :: PRED :: IF :: Z :: if (v4 != v5) goto 25::CD,73066:CD,73074:CD,73081:CD,73085
73066 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 21::CD,73068:CD,73074:CD,73081:CD,73085
73068 :: CALL :: call :: V :: p0 $this .doubleCapacity()::CL,81529
73071 :: EXPR :: reference :: Z :: v9 = p0 $this .sorted::DD,73074
73075 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,81564
73074 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 37::CD,73075
73078 :: EXPR :: modify :: I :: p0 $this .targetSearchValue = p1 $key ::
73081 :: CALL :: call :: I :: v12 = p0 $this .binaryEmptySlotSearch()::JM,73085:CL,81683
73085 :: PRED :: IF :: Z :: if (v12 != #(-1)) goto 53::CD,73112
73102 :: EXPR :: reference :: [I :: v20 = p0 $this .keys::
73105 :: EXPR :: modify :: I :: v20[v12] = p1 $key ::
73109 :: EXPR :: reference :: I :: v21 = p0 $this .count::DD,73112
73113 :: EXPR :: modify :: I :: p0 $this .count = v22::
73112 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 + #(1)::DD,73113
73148 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.reset()::CD,73152:CD,73158
73152 :: CALL :: call :: V :: p0 $this .endBlockUpdate()::CL,81761
73155 :: EXPR :: reference :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v4 = p0 $this .currentDir::DD,73158
73159 :: EXPR :: reference :: Z :: v6 = p0 $this .currentKeep::DD,73162
73158 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,73162
73162 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 29::CD,73166
73166 :: CALL :: call :: Z :: v10 = v8.keepInMemory(#(0))::CL,81099
73171 :: EXPR :: modify :: I :: p0 $this .currentBlockIndex = #(-1)::
73174 :: EXPR :: modify :: I :: p0 $this .currentDirIndex = #(-1)::
73177 :: EXPR :: modify :: I :: p0 $this .currentBlockOffset = #(-1)::
73180 :: EXPR :: modify :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: p0 $this .currentDir = #(null)::
73183 :: EXPR :: modify :: Lorg/hsqldb/persist/BitMapCachedObject :: p0 $this .currentBitMap = #(null)::
73205 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.setAsideBlocks(org.hsqldb.lib.OrderedIntHashSet)::CD,73249:CD,73253:CD,73258:CD,73265:CD,73291
73235 :: CALL :: call :: Z :: v17 = v15.moveToBlock(v14)::CL,81350
73249 :: CALL :: call :: I :: v12 = p1 $blocks .size()::JM,73253:CL,38415
73248 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,73291
73253 :: PRED :: IF :: Z :: if (v22 < v12) goto 27::CD,73235:CD,73248:CD,73249:CD,73291
73258 :: CALL :: call :: V :: v29.reset()::CL,73148
73265 :: CALL :: call :: V :: v23.reset()::CL,73148
73291 :: EXPR :: assign :: null :: PHI v22 = #(0), v21::DD,73248:DD,73253
73323 :: EXIT :: exit :: I :: org.hsqldb.persist.TableSpaceManagerBlocks.getFileBlockIndex()::JM,64469:JM,64491
73322 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.getFileBlockIndex()::CE,73323:CD,73329
73326 :: EXPR :: reference :: I :: v3 = p0 $this .fileBlockIndex::DD,73329
73329 :: NORM :: compound :: I :: return v3::CF,73323
73331 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.hasFreeSpace(int,int)::CE,73332:CD,73347:CD,73352:CD,73386:JM,73360
73332 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataSpaceManagerBlocks.hasFreeSpace(int,int)::JM,64476
73347 :: CALL :: call :: Z :: v10 = v8.moveToBlock(p2 $blockIndex )::JM,73352:CL,81350
73352 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 52::CD,73356:CD,73360:CD,73379:CD,73382
73356 :: CALL :: call :: I :: v13 = v11.getTableId()::JM,73360:CL,72988
73360 :: PRED :: IF :: Z :: if (v13 != p1 $spaceId ) goto 52::CD,73364:CD,73368:CD,73379:CD,73382
73364 :: CALL :: call :: C :: v16 = v14.getFreeBlockValue()::JM,73368:CL,73030
73368 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 52::CD,73372:CD,73375:CD,73379:CD,73382
73372 :: CALL :: call :: V :: v22.reset()::CL,73148
73375 :: NORM :: compound :: Z :: return #(1)::DD,73332
73379 :: CALL :: call :: V :: v20.reset()::CL,73148
73382 :: NORM :: compound :: Z :: return #(0)::DD,73332
73386 :: CALL :: call :: V :: v18.reset()::CL,73148
73407 :: EXIT :: exit :: I :: org.hsqldb.persist.DataSpaceManagerBlocks.findLargestFreeSpace(int)::JM,64492
73406 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.findLargestFreeSpace(int)::CE,73407:CD,73436:CD,73441:CD,73445:CD,73448:CD,73452:CD,73457:CD,73458
73422 :: CALL :: call :: C :: v13 = v11.getFreeBlockValue()::JM,73457:JM,73426:CL,73030
73427 :: EXPR :: reference :: Lorg/hsqldb/persist/DataSpaceManagerBlocks$BlockAccessor :: v14 = p0 $this .ba::
73426 :: PRED :: IF :: Z :: if (v13 <= v16) goto 42::CF,73457:CD,73458
73430 :: EXPR :: reference :: I :: v15 = v14.currentBlockIndex::DD,73458
73436 :: CALL :: call :: Z :: v10 = v8.nextBlockForTable(p1 $spaceId )::JM,73441:CL,82037
73441 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,73422:CD,73426:CD,73436:CD,73457:CD,73458
73445 :: CALL :: call :: V :: v18.reset()::CL,73148
73448 :: NORM :: compound :: I :: return v17::DD,73407
73452 :: CALL :: call :: V :: v21.reset()::CL,73148
73457 :: EXPR :: assign :: null :: PHI v16 = #(0), v16, v13::CF,73458:DD,73426:DD,73457
73458 :: EXPR :: assign :: null :: PHI v17 = #(-1), v17, v15::DD,73448:DD,73458
73479 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.initialiseTableSpace(org.hsqldb.persist.TableSpaceManagerBlocks,int)::CD,73495:CD,73561:CD,73568
73495 :: CALL :: call :: Z :: v10 = v8.moveToBlock(p2 $blockIndex )::CL,81350
73561 :: CALL :: call :: V :: v38.reset()::CL,73148
73568 :: CALL :: call :: V :: v40.reset()::CL,73148
73611 :: EXIT :: exit :: J :: org.hsqldb.lib.DoubleIntIndex.getTotalValues()::JM,72182:JM,72310
73610 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.getTotalValues()::CE,73611:CD,73628:CD,73629:CD,73630:CD,73631
73615 :: EXPR :: reference :: [I :: v6 = p0 $this .values::
73618 :: EXPR :: reference :: I :: v7 = v6[v13]::DD,73622
73623 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + v8::DD,73630:CF,73624
73622 :: EXPR :: assign :: J :: v8 = CONVERT I to J v7::CF,73623
73625 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,73628
73624 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,73631:CF,73630
73629 :: NORM :: compound :: J :: return v12::CF,73611
73628 :: PRED :: IF :: Z :: if (v13 < v5) goto 9::CD,73622:CD,73623:CD,73624:CD,73630:CD,73631:CF,73629
73631 :: EXPR :: assign :: null :: PHI v13 = #(0), v11::DD,73624:DD,73628
73630 :: EXPR :: assign :: null :: PHI v12 = #(0 l), v9::CF,73631:DD,73623:DD,73629
73645 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.canonicalPath(java.lang.String)::CE,73646:CD,73650:CD,73655:CD,73659
73646 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.lib.FileUtil.canonicalPath(java.lang.String)::JM,64800
73650 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::JM,73655:JM,73659
73655 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getCanonicalPath()::JM,73655:JM,73659
73659 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,73646
73663 :: EXIT :: exit :: Ljava/lang/String :: org.hsqldb.lib.FileUtil.absolutePath(java.lang.String)::JM,64806
73662 :: ENTR :: entry :: null :: org.hsqldb.lib.FileUtil.absolutePath(java.lang.String)::CE,73663:CD,73667:CD,73672:CD,73676
73667 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::JM,73672:JM,73676
73672 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getAbsolutePath()::JM,73672:JM,73676
73676 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,73663
74000 :: EXPR :: modify :: I :: p0 $this .mark = #(0)::
74003 :: EXPR :: modify :: [B :: p0 $this .buffer = p1 $buf ::
74006 :: EXPR :: modify :: I :: p0 $this .pos = #(0)::
74009 :: EXPR :: assign :: I :: v6 = p1 $buf .length::DD,74010
74010 :: EXPR :: modify :: I :: p0 $this .count = v6::
74070 :: EXPR :: modify :: [B :: p0 $this .buffer = p1 $buffer ::
75199 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.synch()::CD,75317
75305 :: EXPR :: modify :: Z :: p0 $this .buffersModified = #(0)::
75317 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v69 = error(v62, #(452), #(null))::CL,36514
75752 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.reset()::
75756 :: EXPR :: modify :: I :: p0 $this .lookup = #(-1)::
75759 :: EXPR :: modify :: I :: p0 $this .counter = #(0)::
75762 :: EXPR :: modify :: Z :: p0 $this .removed = #(0)::
75772 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.saveRows(int)::CD,75777:JM,75813
75777 :: PRED :: IF :: Z :: if (p1 $count  != #(0)) goto 6::CD,75782:CD,75792:CD,75804:CD,75813
75782 :: CALL :: call :: V :: v5.setType(#(1))::CL,83603
75792 :: CALL :: call :: V :: sort(v8, #(0), p1 $count , v9)::CL,83614
75804 :: CALL :: call :: V :: v11.saveRows(v12, #(0), p1 $count )::CL,83652
75810 :: EXPR :: reference :: I :: v14 = p0 $this .saveRowCount::DD,75813
75813 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 + p1 $count ::DD,75814
75814 :: EXPR :: modify :: I :: p0 $this .saveRowCount = v15::
75833 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.hasChanged()::CE,75834:CD,75840
75834 :: EXIT :: exit :: Z :: org.hsqldb.persist.CachedObjectBase.hasChanged()::JM,81777:JM,88799:JM,98101
75837 :: EXPR :: reference :: Z :: v3 = p0 $this .hasChanged::DD,75840
75840 :: NORM :: compound :: Z :: return v3::CF,75834
75879 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.seek(long)::CD,75884:CD,75910:CD,75923
75884 :: CALL :: call :: V :: p0 $this .positionBufferSeek(p1 $newPos )::CL,83772
75910 :: CALL :: call :: Ljava/io/IOException :: v21 = toIOException(v17)::CL,54121
75923 :: CALL :: call :: Ljava/io/IOException :: v16 = toIOException(v11)::CL,54121
75937 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.reset()::
75941 :: EXPR :: modify :: I :: p0 $this .count = #(0)::
75947 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.writeLong(long)::CD,75954:CD,75959
75954 :: CALL :: call :: V :: p0 $this .writeInt(v6)::CL,76182
75959 :: CALL :: call :: V :: p0 $this .writeInt(v8)::CL,76182
75969 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.write([],int,int)::CD,75995:CD,75996:CD,75997:CD,75998:CD,75999:CD,76029:CD,76030:CD,76037:CD,76053:JM,76003
75986 :: EXPR :: reference :: J :: v9 = p0 $this .seekPosition::DD,75998
75989 :: EXPR :: reference :: J :: v10 = p0 $this .bufferOffset::DD,75997
75992 :: EXPR :: reference :: [B :: v11 = p0 $this .buffer::DD,75995
75995 :: EXPR :: assign :: I :: v12 = v11.length::CF,75996
75997 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v10 + v13::CF,75998
75996 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::CF,75997
75999 :: PRED :: IF :: Z :: if (v15 >= #(0)) goto 54::CD,76003:CD,76004:CD,76008:CD,76009
75998 :: EXPR :: assign :: Z :: v15 = v9 == v14::DD,75999
76000 :: EXPR :: reference :: J :: v17 = p0 $this .seekPosition::DD,76004
76003 :: EXPR :: assign :: J :: v18 = CONVERT I to J p3 $length ::CF,76004
76005 :: EXPR :: reference :: J :: v20 = p0 $this .bufferOffset::DD,76008
76004 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 + v18::DD,76008
76009 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 54::CD,76010
76008 :: EXPR :: assign :: Z :: v21 = v19 == v20::DD,76009
76010 :: CALL :: call :: I :: v23 = p0 $this .writeToBuffer(p1 $b , p2 $off , p3 $length )::CL,83828
76026 :: EXPR :: reference :: J :: v31 = p0 $this .seekPosition::DD,76030
76029 :: EXPR :: assign :: J :: v32 = CONVERT I to J p3 $length ::CF,76030
76031 :: EXPR :: modify :: J :: p0 $this .seekPosition = v33::
76030 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v31 + v32::DD,76031
76034 :: EXPR :: reference :: Z :: v34 = p0 $this .extendLength::DD,76037
76037 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 127::CD,76044:CD,76045
76038 :: EXPR :: reference :: J :: v35 = p0 $this .fileLength::DD,76044
76041 :: EXPR :: reference :: J :: v36 = p0 $this .seekPosition::DD,76044
76045 :: PRED :: IF :: Z :: if (v37 >= #(0)) goto 127::
76044 :: EXPR :: assign :: Z :: v37 = v35 == v36::DD,76045
76046 :: EXPR :: reference :: J :: v38 = p0 $this .seekPosition::DD,76049
76049 :: EXPR :: modify :: J :: p0 $this .fileLength = v38::
76053 :: CALL :: call :: V :: p0 $this .resetPointer()::CL,83871
76096 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.writeLong(long)::CD,76125
76125 :: CALL :: call :: Ljava/io/IOException :: v15 = toIOException(v10)::CL,54121
76139 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.writeInt(int)::CD,76155:CD,76168
76144 :: EXPR :: modify :: Z :: p0 $this .buffersModified = #(1)::
76155 :: CALL :: call :: V :: p0 $this .positionBufferMove(#(4))::CL,83896
76168 :: CALL :: call :: Ljava/io/IOException :: v15 = toIOException(v10)::CL,54121
76182 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.writeInt(int)::CD,76190:CD,76194:CD,76195:CD,76206:CD,76210:CD,76211:CD,76222:CD,76226:CD,76227:CD,76238:CD,76242:CD,76243:CD,76254:CD,76258
76187 :: EXPR :: reference :: I :: v4 = p0 $this .count::DD,76190
76191 :: EXPR :: reference :: [B :: v7 = p0 $this .buffer::DD,76194
76190 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 + #(4)::DD,76195
76195 :: PRED :: IF :: Z :: if (v6 <= v8) goto 20::CD,76196
76194 :: EXPR :: assign :: I :: v8 = v7.length::CF,76195
76196 :: CALL :: call :: V :: p0 $this .ensureRoom(#(4))::CL,83964:CL,83952
76200 :: EXPR :: reference :: [B :: v10 = p0 $this .buffer::
76203 :: EXPR :: reference :: I :: v11 = p0 $this .count::DD,76206
76207 :: EXPR :: modify :: I :: p0 $this .count = v13::
76206 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 + #(1)::DD,76207
76211 :: EXPR :: assign :: B :: v16 = CONVERT I to B v15::DD,76212
76210 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p1 $v  ? #(24)::CF,76211
76212 :: EXPR :: modify :: B :: v10[v11] = v16::
76216 :: EXPR :: reference :: [B :: v17 = p0 $this .buffer::
76219 :: EXPR :: reference :: I :: v18 = p0 $this .count::DD,76222
76223 :: EXPR :: modify :: I :: p0 $this .count = v19::
76222 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v18 + #(1)::DD,76223
76227 :: EXPR :: assign :: B :: v22 = CONVERT I to B v21::DD,76228
76226 :: EXPR :: assign :: Ljava/lang/Object :: v21 = p1 $v  ? #(16)::CF,76227
76228 :: EXPR :: modify :: B :: v17[v18] = v22::
76232 :: EXPR :: reference :: [B :: v23 = p0 $this .buffer::
76235 :: EXPR :: reference :: I :: v24 = p0 $this .count::DD,76238
76239 :: EXPR :: modify :: I :: p0 $this .count = v25::
76238 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v24 + #(1)::DD,76239
76243 :: EXPR :: assign :: B :: v28 = CONVERT I to B v27::DD,76244
76242 :: EXPR :: assign :: Ljava/lang/Object :: v27 = p1 $v  ? #(8)::CF,76243
76244 :: EXPR :: modify :: B :: v23[v24] = v28::
76248 :: EXPR :: reference :: [B :: v29 = p0 $this .buffer::
76251 :: EXPR :: reference :: I :: v30 = p0 $this .count::DD,76254
76255 :: EXPR :: modify :: I :: p0 $this .count = v31::
76254 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v30 + #(1)::DD,76255
76259 :: EXPR :: modify :: B :: v29[v30] = v32::
76258 :: EXPR :: assign :: B :: v32 = CONVERT I to B p1 $v ::DD,76259
77581 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.rank([],int,int,int,int,int)::CE,77582:CD,77590:CD,77596:CD,77619:CD,77620:CD,77621:CD,77622:CD,77631:CD,77632:CD,77634:CD,77635:CD,77636:JM,77611
77582 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayCounter.rank([],int,int,int,int,int)::JM,68644
77590 :: CALL :: call :: I :: v11 = calcInterval(#(256), v29, v31)::JM,77617:JM,77624:CL,85123
77596 :: CALL :: call :: [I :: v13 = countSegments(p1 $array , p2 $elements , #(256), v11, v29, v31)::JM,77619:CL,85153
77606 :: EXPR :: reference :: I :: v15 = v13[v24]::DD,77610
77611 :: PRED :: IF :: Z :: if (v16 >= p3 $target ) goto 86::CD,77616:CD,77617:CD,77618:CD,77619:CD,77620:CD,77634:CD,77635:CD,77636:CF,77621
77610 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v23 + v15::DD,77611
77612 :: EXPR :: reference :: I :: v17 = v13[v24]::DD,77616
77617 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v22 + v11::DD,77634:CF,77618
77616 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v23 + v17::DD,77635:CF,77617
77619 :: EXPR :: assign :: I :: v14 = v13.length::CF,77620
77618 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v24 + #(1)::DD,77636:CF,77634
77621 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v23 + p6 $margin ::DD,77622
77620 :: PRED :: IF :: Z :: if (v24 < v14) goto 50::CD,77610:CD,77611:CF,77621
77623 :: NORM :: compound :: I :: return v22::CF,77582
77622 :: PRED :: IF :: Z :: if (v25 < p3 $target ) goto 96::CD,77623:CD,77624
77625 :: NORM :: compound :: I :: return v22::CF,77582
77624 :: PRED :: IF :: Z :: if (v11 > #(1)) goto 104::CD,77590:CD,77596:CD,77619:CD,77620:CD,77621:CD,77622:CD,77625:CD,77631:CD,77632:CD,77634:CD,77635:CD,77636
77631 :: EXPR :: assign :: null :: PHI v29 = v22, p4 $start ::CF,77632:DD,77634
77632 :: EXPR :: assign :: null :: PHI v30 = v23, #(0)::DD,77635
77635 :: EXPR :: assign :: null :: PHI v23 = v30, v18::CF,77636:DD,77610:DD,77616:DD,77621:DD,77632
77634 :: EXPR :: assign :: null :: PHI v22 = v29, v19::CF,77635:DD,77617:DD,77623:DD,77625:DD,77631
77636 :: EXPR :: assign :: null :: PHI v24 = #(0), v21::DD,77618:DD,77620:CF,77619
77684 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeRow(int)::CD,77692:CD,77697
77692 :: CALL :: call :: Z :: v6 = v4.removeEmptyNode(p1 $lookup )::CL,85215
77697 :: CALL :: call :: V :: p0 $this .removeFromElementArrays(p1 $lookup )::CL,85427
77855 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlArrayList.get(int)::CE,77856:CD,77864:CD,77865:CD,77870:CD,77875:CD,77883:CD,77888:CD,77898:CD,77899:CD,77904:CD,77909:CD,77914:CD,77930
77856 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.lib.HsqlArrayList.get(int)::JM,69271
77865 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
77864 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
77870 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p1 $index )::
77875 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#( >= ))::
77880 :: EXPR :: reference :: I :: v28 = p0 $this .elementCount::
77883 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
77888 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
77899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
77898 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v8 = new java.lang.IndexOutOfBoundsException::
77904 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $index )::
77909 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#( < 0))::
77914 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
77923 :: EXPR :: reference :: [Ljava/lang/Object :: v6 = p0 $this .elementData::
77926 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $index ]::DD,77930
77930 :: NORM :: compound :: Ljava/lang/Object :: return v7::DD,77856
78293 :: EXPR :: modify :: Lorg/hsqldb/lib/Storage :: p0 $this .file = p1 $virtualFile ::
78308 :: EXPR :: modify :: Z :: p0 $this .bufferDirty = #(1)::
78311 :: NORM :: declaration :: [B :: v7 = new []::DD,78312
78312 :: EXPR :: modify :: [B :: p0 $this .buffer = v7::
78315 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: v8 = new org.hsqldb.lib.HsqlByteArrayInputStream::DD,78323
78323 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: p0 $this .ba = v8::
78326 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fileName = p1 $name ::
78329 :: CALL :: call :: J :: v12 = p0 $this .getLength()::JM,78333:CL,86288
78333 :: EXPR :: modify :: J :: p0 $this .fileLength = v12::
78336 :: CALL :: call :: V :: p0 $this .resetStream()::CL,86317
78365 :: EXPR :: modify :: Lorg/hsqldb/persist/EventLogInterface :: p0 $this .logger = p1 $logger ::
78368 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fileName = p2 $name ::
78371 :: EXPR :: modify :: Z :: p0 $this .readOnly = p3 $readonly ::
78374 :: EXPR :: modify :: Z :: p0 $this .extendLength = p4 $extendLengthToBlock ::
78381 :: NORM :: declaration :: Ljava/io/RandomAccessFile :: v14 = new java.io.RandomAccessFile::DD,78387
78387 :: EXPR :: modify :: Ljava/io/RandomAccessFile :: p0 $this .file = v14::
78391 :: EXPR :: modify :: [B :: p0 $this .buffer = v17::
78390 :: NORM :: declaration :: [B :: v17 = new []::DD,78391
78394 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: v18 = new org.hsqldb.lib.HsqlByteArrayInputStream::DD,78402
78402 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: p0 $this .ba = v18::
78405 :: NORM :: declaration :: [B :: v22 = new []::DD,78406
78406 :: EXPR :: modify :: [B :: p0 $this .valueBuffer = v22::
78409 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlByteArrayOutputStream :: v23 = new org.hsqldb.lib.HsqlByteArrayOutputStream::DD,78417
78417 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlByteArrayOutputStream :: p0 $this .vbao = v23::
78420 :: NORM :: declaration :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: v26 = new org.hsqldb.lib.HsqlByteArrayInputStream::DD,78428
78428 :: EXPR :: modify :: Lorg/hsqldb/lib/HsqlByteArrayInputStream :: p0 $this .vbai = v26::
78431 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v29 = p0 $this .file::JM,78434:JM,78438
78434 :: CALL :: call :: Ljava/io/FileDescriptor :: v31 = v29.getFD()::JM,78434:JM,78438
78438 :: EXPR :: modify :: Ljava/io/FileDescriptor :: p0 $this .fileDescriptor = v31::
78441 :: CALL :: call :: J :: v33 = p0 $this .length()::JM,78445:CL,71577
78445 :: EXPR :: modify :: J :: p0 $this .fileLength = v33::
78448 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,86413
78501 :: EXPR :: modify :: J :: p0 $this .initialMaxLength = #(8388608 l)::
78504 :: EXPR :: modify :: Lorg/hsqldb/Database :: p0 $this .database = p1 $database ::
78507 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fileName = p2 $name ::
78510 :: EXPR :: modify :: Z :: p0 $this .isReadOnly = p3 $readOnly ::
78513 :: NORM :: declaration :: Ljava/io/File :: v8 = new java.io.File::JM,78504:JM,78507:JM,78510
78518 :: CALL :: call :: J :: v11 = v8.length()::
78522 :: CALL :: call :: V :: p0 $this .newStore(v11)::CL,86529
78543 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.readLong()::CD,78567
78567 :: CALL :: call :: Ljava/io/IOException :: v13 = toIOException(v8)::CL,54121
78578 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayInputStream.reset()::
78582 :: EXPR :: reference :: I :: v3 = p0 $this .mark::DD,78585
78585 :: EXPR :: modify :: I :: p0 $this .pos = v3::
78591 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.read([],int,int)::CD,78616:CD,78617:CD,78786:JM,78754:JM,78662:JM,78779
78613 :: EXPR :: reference :: [B :: v12 = p0 $this .buffer::DD,78616
78617 :: PRED :: IF :: Z :: if (p3 $length  <= v13) goto 97::CD,78624:CD,78625:CD,78674:CD,78675:CD,78704:CD,78724:CD,78739:CD,78749:CD,78750:CD,78754
78616 :: EXPR :: assign :: I :: v13 = v12.length::CF,78617
78618 :: EXPR :: reference :: J :: v14 = p0 $this .seekPosition::DD,78624
78621 :: EXPR :: reference :: J :: v15 = p0 $this .bufferOffset::DD,78624
78625 :: PRED :: IF :: Z :: if (v16 < #(0)) goto 64::CD,78635:CD,78636:CD,78637:CD,78638:CD,78639:CD,78662:CD,78663
78624 :: EXPR :: assign :: Z :: v16 = v14 == v15::DD,78625
78626 :: EXPR :: reference :: J :: v17 = p0 $this .seekPosition::DD,78638
78629 :: EXPR :: reference :: J :: v18 = p0 $this .bufferOffset::DD,78637
78632 :: EXPR :: reference :: [B :: v19 = p0 $this .buffer::DD,78635
78635 :: EXPR :: assign :: I :: v20 = v19.length::CF,78636
78637 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 + v21::CF,78638
78636 :: EXPR :: assign :: J :: v21 = CONVERT I to J v20::CF,78637
78639 :: PRED :: IF :: Z :: if (v23 < #(0)) goto 97::CD,78662:CD,78663:CD,78674:CD,78675:CD,78704:CD,78724:CD,78739:CD,78749:CD,78750:CD,78754
78638 :: EXPR :: assign :: Z :: v23 = v17 == v22::DD,78639
78659 :: EXPR :: reference :: J :: v74 = p0 $this .seekPosition::DD,78663
78663 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 + v75::DD,78664
78662 :: EXPR :: assign :: J :: v75 = CONVERT I to J p3 $length ::CF,78663
78664 :: EXPR :: modify :: J :: p0 $this .seekPosition = v76::
78668 :: EXPR :: reference :: J :: v24 = p0 $this .seekPosition::DD,78674
78671 :: EXPR :: reference :: J :: v25 = p0 $this .bufferOffset::DD,78674
78675 :: PRED :: IF :: Z :: if (v26 < #(0)) goto 128::CD,78685:CD,78686:CD,78687:CD,78688:CD,78689:CD,78690
78674 :: EXPR :: assign :: Z :: v26 = v24 == v25::DD,78675
78676 :: EXPR :: reference :: J :: v27 = p0 $this .seekPosition::DD,78688
78679 :: EXPR :: reference :: J :: v28 = p0 $this .bufferOffset::DD,78687
78682 :: EXPR :: reference :: [B :: v29 = p0 $this .buffer::DD,78685
78685 :: EXPR :: assign :: I :: v30 = v29.length::CF,78686
78687 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v28 + v31::CF,78688
78686 :: EXPR :: assign :: J :: v31 = CONVERT I to J v30::CF,78687
78689 :: PRED :: IF :: Z :: if (v33 < #(0)) goto 136::CD,78690:CD,78697
78688 :: EXPR :: assign :: Z :: v33 = v27 == v32::DD,78689
78690 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,86413
78694 :: EXPR :: reference :: I :: v34 = p0 $this .cacheHit::DD,78697
78697 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 + #(1)::DD,78698
78698 :: EXPR :: modify :: I :: p0 $this .cacheHit = v36::
78704 :: CALL :: call :: V :: v38.reset()::CL,78578
78724 :: CALL :: call :: J :: v48 = v43.skip(v46)::CL,79150
78739 :: CALL :: call :: I :: v52 = v50.read(p1 $b , p2 $offset , p3 $length )::JM,78754:JM,78779:JM,78749:CL,86712
78746 :: EXPR :: reference :: J :: v53 = p0 $this .seekPosition::DD,78750
78749 :: EXPR :: assign :: J :: v54 = CONVERT I to J v52::CF,78750
78751 :: EXPR :: modify :: J :: p0 $this .seekPosition = v55::
78750 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 + v54::DD,78751
78754 :: PRED :: IF :: Z :: if (v52 >= p3 $length ) goto 285::CD,78779:CD,78780:CD,78781
78776 :: EXPR :: reference :: J :: v63 = p0 $this .seekPosition::DD,78781
78779 :: EXPR :: assign :: Ljava/lang/Object :: v64 = p3 $length  - v52::CF,78780
78781 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v63 + v65::DD,78782
78780 :: EXPR :: assign :: J :: v65 = CONVERT I to J v64::CF,78781
78782 :: EXPR :: modify :: J :: p0 $this .seekPosition = v66::
78786 :: CALL :: call :: V :: p0 $this .resetPointer()::CL,83871
78884 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.readInt()::CD,78895:CD,78908
78895 :: CALL :: call :: V :: p0 $this .positionBufferMove(#(4))::CL,83896
78908 :: CALL :: call :: Ljava/io/IOException :: v13 = toIOException(v8)::CL,54121
78919 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayInputStream.readInt()::CD,78948:CD,78963:CD,78978:CD,78993
78931 :: EXPR :: reference :: I :: v38 = p0 $this .count::DD,78934
78934 :: EXPR :: modify :: I :: p0 $this .pos = v38::
78945 :: EXPR :: reference :: I :: v8 = p0 $this .pos::DD,78948
78949 :: EXPR :: modify :: I :: p0 $this .pos = v10::
78948 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::DD,78949
78960 :: EXPR :: reference :: I :: v15 = p0 $this .pos::DD,78963
78963 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 + #(1)::DD,78964
78964 :: EXPR :: modify :: I :: p0 $this .pos = v16::
78975 :: EXPR :: reference :: I :: v20 = p0 $this .pos::DD,78978
78979 :: EXPR :: modify :: I :: p0 $this .pos = v21::
78978 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 + #(1)::DD,78979
78990 :: EXPR :: reference :: I :: v25 = p0 $this .pos::DD,78993
78993 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 + #(1)::DD,78994
78994 :: EXPR :: modify :: I :: p0 $this .pos = v26::
79047 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.readIntoBuffer()::CD,79060:CD,79061:CD,79062:CD,79066:CD,79067:CD,79079:CD,79080:CD,79081:CD,79082:CD,79089:CD,79100:CD,79106:CD,79113:CD,79118
79051 :: EXPR :: reference :: J :: v3 = p0 $this .seekPosition::DD,79062:DD,79066:DD,79106
79054 :: EXPR :: modify :: Z :: p0 $this .bufferDirty = #(0)::
79057 :: EXPR :: reference :: [B :: v5 = p0 $this .buffer::DD,79060
79061 :: EXPR :: assign :: J :: v7 = CONVERT I to J v6::CF,79062
79060 :: EXPR :: assign :: I :: v6 = v5.length::CF,79061
79063 :: EXPR :: reference :: J :: v9 = p0 $this .fileLength::DD,79067
79062 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v3 % v7::DD,79066:DD,79106
79067 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - v10::DD,79081:DD,79118
79066 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v3 - v8::CF,79067
79076 :: EXPR :: reference :: [B :: v14 = p0 $this .buffer::DD,79079
79079 :: EXPR :: assign :: I :: v15 = v14.length::CF,79080
79081 :: EXPR :: assign :: Z :: v17 = v11 == v16::DD,79082
79080 :: EXPR :: assign :: J :: v16 = CONVERT I to J v15::CF,79081
79083 :: EXPR :: reference :: [B :: v18 = p0 $this .buffer::DD,79086
79082 :: PRED :: IF :: Z :: if (v17 <= #(0)) goto 69::CF,79118:CD,79086:CD,79087
79087 :: EXPR :: assign :: J :: v20 = CONVERT I to J v19::DD,79118
79086 :: EXPR :: assign :: I :: v19 = v18.length::CF,79087
79089 :: CALL :: call :: V :: p0 $this .fileSeek(v22)::CL,86786
79100 :: CALL :: call :: V :: v24.readFully(v25, #(0), v26)::
79107 :: EXPR :: modify :: J :: p0 $this .bufferOffset = v28::
79106 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v3 - v8::DD,79107
79110 :: EXPR :: reference :: J :: v29 = p0 $this .bufferOffset::DD,79113
79113 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v29 + v21::DD,79114
79114 :: EXPR :: modify :: J :: p0 $this .realPosition = v30::
79118 :: EXPR :: assign :: null :: PHI v21 = v11, v20::DD,79113
79150 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayInputStream.skip(long)::CD,79158:CD,79159:CD,79163:CD,79164:CD,79165:CD,79174:CD,79175:CD,79187
79155 :: EXPR :: reference :: I :: v4 = p0 $this .pos::DD,79158
79159 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v5 + p1 $n ::DD,79164
79158 :: EXPR :: assign :: J :: v5 = CONVERT I to J v4::DD,79159
79160 :: EXPR :: reference :: I :: v7 = p0 $this .count::DD,79163
79163 :: EXPR :: assign :: J :: v8 = CONVERT I to J v7::CF,79164
79165 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 29::CF,79187:CD,79172:CD,79173
79164 :: EXPR :: assign :: Z :: v9 = v6 == v8::DD,79165
79166 :: EXPR :: reference :: I :: v11 = p0 $this .count::DD,79172
79169 :: EXPR :: reference :: I :: v12 = p0 $this .pos::DD,79172
79173 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::DD,79187
79172 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 - v12::CF,79173
79175 :: PRED :: IF :: Z :: if (v17 >= #(0)) goto 37::CD,79180:CD,79181:CD,79182
79174 :: EXPR :: assign :: Z :: v17 = v15 == #(0 l)::DD,79175
79177 :: EXPR :: reference :: I :: v18 = p0 $this .pos::DD,79180
79181 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 + v15::CF,79182
79180 :: EXPR :: assign :: J :: v19 = CONVERT I to J v18::DD,79181
79183 :: EXPR :: modify :: I :: p0 $this .pos = v21::
79182 :: EXPR :: assign :: I :: v21 = CONVERT J to I v20::DD,79183
79187 :: EXPR :: assign :: null :: PHI v15 = p1 $n , v14::DD,79174:DD,79181
79287 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileNIO.length()::JM,71575
79286 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.length()::CE,79287:CD,79293:CD,79297:CD,79315
79290 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v3 = p0 $this .file::JM,79297:JM,79293
79293 :: CALL :: call :: J :: v5 = v3.length()::JM,79297:JM,79293
79297 :: NORM :: compound :: J :: return v5::DD,79287
79315 :: CALL :: call :: Ljava/io/IOException :: v11 = toIOException(v6)::CL,54121
79323 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.restoreFile(org.hsqldb.Database,java.lang.String,java.lang.String)::CD,79329:CD,79335:CD,79369:CD,79373:CD,79377:CD,79378:CD,79379:CD,79382:CD,79385
79329 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v7 = getStorage(p1 $database , p2 $sourceName , #(r))::CL,86873
79335 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v10 = getStorage(p1 $database , p3 $destName , #(rw))::CL,86873
79342 :: CALL :: call :: I :: v18 = v7.readInt()::CL,71263:CL,71322:CL,71276
79346 :: CALL :: call :: J :: v20 = v7.readLong()::CL,71204:CL,71165
79352 :: CALL :: call :: V :: v7.read(v21, #(0), v22)::CL,86964:CL,78591:CL,86943
79358 :: CALL :: call :: V :: v10.seek(v20)::CL,66626:CL,66637:CL,66668
79363 :: CALL :: call :: V :: v10.write(v21, #(0), v25)::CL,75969:CL,87174
79369 :: CALL :: call :: J :: v12 = v7.getFilePointer()::JM,79377:CL,87229:CL,87251:CL,87242:CL,87216:CL,87260
79373 :: CALL :: call :: J :: v14 = v7.length()::JM,79377:CL,71603:CL,71612:CL,71577:CL,71590:CL,71564
79377 :: EXPR :: assign :: Z :: v15 = v12 == v14::DD,79378
79379 :: CALL :: call :: V :: v7.close()::CL,54777:CL,54741
79378 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 21::CD,79342:CD,79346:CD,79352:CD,79358:CD,79363:CD,79369:CD,79373:CD,79377
79382 :: CALL :: call :: V :: v10.synch()::CL,65845:CL,65890:CL,65803
79385 :: CALL :: call :: V :: v10.close()::CL,54777:CL,54741
79419 :: ENTR :: entry :: null :: org.hsqldb.lib.FileArchiver.unarchive(java.lang.String,java.lang.String,org.hsqldb.lib.FileAccess,int)::CD,79426:CD,79431:CD,79465:CD,79545:CD,79551:CD,79583:CD,79622:JM,79633:JM,79476:JM,79481
79426 :: CALL :: call :: Z :: v9 = p3 $storage .isStreamElement(p1 $infilename )::JM,79633:JM,79426:JM,79476:JM,79431:JM,79481
79431 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 101::CD,79476:CD,79481:CD,79528:CD,79535:CD,79589:CD,79633
79465 :: CALL :: call :: Ljava/io/IOException :: v87 = toIOException(v85)::CL,54121
79476 :: CALL :: call :: Ljava/io/InputStream :: v14 = p3 $storage .openInputStreamElement(p1 $infilename )::JM,79633:JM,79426:JM,79476:JM,79431:JM,79481
79481 :: PRED :: IF :: null :: switch p4 $compressionType ::CF,79493:CF,79482:CD,79633
79482 :: NORM :: declaration :: Ljava/util/zip/InflaterInputStream :: v27 = new java.util.zip.InflaterInputStream::DD,79633
79493 :: NORM :: declaration :: Ljava/util/zip/GZIPInputStream :: v24 = new java.util.zip.GZIPInputStream::DD,79633
79528 :: CALL :: call :: I :: v36 = v31.read(v12, #(0), v34)::JM,79535
79535 :: PRED :: IF :: Z :: if (v36 != #(-1)) goto 251::CD,79528
79545 :: CALL :: call :: Ljava/io/IOException :: v43 = toIOException(v39)::CL,54121
79551 :: CALL :: call :: V :: v45.close()::
79583 :: CALL :: call :: Ljava/io/IOException :: v60 = toIOException(v58)::CL,54121
79589 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 367::CD,79590
79590 :: CALL :: call :: V :: v31.close()::
79622 :: CALL :: call :: Ljava/io/IOException :: v74 = toIOException(v72)::CL,54121
79633 :: EXPR :: assign :: null :: PHI v31 = v27, v24, v14::DD,79589
79715 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.size()::JM,71968:JM,71985:JM,72043:JM,72244:JM,72288:JM,79731:JM,80618:JM,80676:JM,80684:JM,81633:JM,87490:JM,92962
79714 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.size()::CE,79715:CD,79721
79718 :: EXPR :: reference :: I :: v3 = p0 $this .count::DD,79721
79721 :: NORM :: compound :: I :: return v3::CF,79715
79723 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.compactLookupAsIntervals()::CD,79727:CD,79731
79727 :: CALL :: call :: I :: v4 = p0 $this .size()::JM,79731:CL,79714
79731 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,79733:CD,79739:CD,79823:CD,79824:CD,79844:CD,79848:CD,79849:CD,79858:CD,79859:CD,79860
79733 :: CALL :: call :: V :: p0 $this .setKeysSearchTarget()::CL,84688
79736 :: EXPR :: reference :: Z :: v7 = p0 $this .sorted::DD,79739
79739 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 28::CD,79740
79740 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,87421
79744 :: EXPR :: reference :: [I :: v11 = p0 $this .keys::
79747 :: EXPR :: reference :: I :: v12 = v11[v35]::DD,79758
79751 :: EXPR :: reference :: [I :: v13 = p0 $this .values::
79754 :: EXPR :: reference :: I :: v14 = v13[v35]::DD,79758
79759 :: EXPR :: assign :: J :: v16 = CONVERT I to J v15::DD,79768
79758 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 + v14::CF,79759
79760 :: EXPR :: reference :: [I :: v17 = p0 $this .keys::
79763 :: EXPR :: reference :: I :: v18 = v17[v36]::DD,79767
79767 :: EXPR :: assign :: J :: v19 = CONVERT I to J v18::CF,79768
79769 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 76::CD,79784:CD,79790:CD,79857
79768 :: EXPR :: assign :: Z :: v20 = v16 == v19::DD,79769
79770 :: EXPR :: reference :: [I :: v21 = p0 $this .values::
79773 :: EXPR :: reference :: I :: v22 = v21[v35]::DD,79784
79777 :: EXPR :: reference :: [I :: v23 = p0 $this .values::
79780 :: EXPR :: reference :: I :: v24 = v23[v36]::DD,79784
79785 :: EXPR :: modify :: I :: v21[v35] = v25::
79784 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v22 + v24::DD,79785
79791 :: EXPR :: reference :: [I :: v27 = p0 $this .keys::
79790 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v35 + #(1)::DD,79857
79794 :: EXPR :: reference :: [I :: v28 = p0 $this .keys::
79797 :: EXPR :: reference :: I :: v29 = v28[v36]::DD,79801
79801 :: EXPR :: modify :: I :: v27[v26] = v29::
79805 :: EXPR :: reference :: [I :: v30 = p0 $this .values::
79808 :: EXPR :: reference :: [I :: v31 = p0 $this .values::
79811 :: EXPR :: reference :: I :: v32 = v31[v36]::DD,79815
79815 :: EXPR :: modify :: I :: v30[v26] = v32::
79819 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v36 + #(1)::DD,79859:CF,79858
79820 :: EXPR :: reference :: I :: v10 = p0 $this .count::DD,79823
79823 :: PRED :: IF :: Z :: if (v36 < v10) goto 32::CD,79758:CD,79759:CD,79767:CD,79768:CD,79769:CD,79819:CD,79857:CD,79858:CD,79859:CF,79824
79824 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v35 + #(1)::DD,79860
79826 :: EXPR :: reference :: [I :: v39 = p0 $this .keys::
79829 :: EXPR :: modify :: I :: v39[v42] = #(0)::
79833 :: EXPR :: reference :: [I :: v40 = p0 $this .values::
79836 :: EXPR :: modify :: I :: v40[v42] = #(0)::
79841 :: EXPR :: reference :: I :: v38 = p0 $this .count::DD,79844
79840 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,79860
79845 :: EXPR :: reference :: I :: v43 = p0 $this .count::DD,79849
79844 :: PRED :: IF :: Z :: if (v42 < v38) goto 122::CD,79840:CD,79860
79849 :: PRED :: IF :: Z :: if (v43 == v44) goto 166::CD,79851
79848 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v35 + #(1)::CF,79849
79851 :: CALL :: call :: V :: p0 $this .setSize(v45)::CL,87540
79857 :: EXPR :: assign :: null :: PHI v33 = v35, v26::DD,79858:CF,79819
79859 :: EXPR :: assign :: null :: PHI v36 = #(1), v34::DD,79819:DD,79823
79858 :: EXPR :: assign :: null :: PHI v35 = #(0), v33::CF,79859:DD,79790:DD,79824:DD,79848:DD,79857
79860 :: EXPR :: assign :: null :: PHI v42 = v37, v41::DD,79840:DD,79844
79921 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.capacity()::CE,79922:CD,79928
79922 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.capacity()::JM,71985:JM,71990:JM,72287
79925 :: EXPR :: reference :: I :: v3 = p0 $this .capacity::DD,79928
79928 :: NORM :: compound :: I :: return v3::CF,79922
79930 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.sort()::CD,79934
79934 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,87421
79957 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.freeTableSpacePart(long,int)::CD,80107:CD,80110:CD,80111
79970 :: EXPR :: reference :: I :: v10 = p0 $this .fileBlockItemCount::DD,79973
79973 :: EXPR :: assign :: J :: v11 = CONVERT I to J v10::CF,79974
79975 :: EXPR :: assign :: I :: v13 = CONVERT J to I v12::DD,79979
79974 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v70 % v11::CF,79975
79976 :: EXPR :: reference :: I :: v14 = p0 $this .fileBlockItemCount::DD,79979
79979 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 - v13::DD,79980:DD,80109
79980 :: PRED :: IF :: Z :: if (v15 <= v71) goto 42::CF,80109
79984 :: CALL :: call :: Z :: v19 = v17.moveToBlock(v9)::JM,79989:CL,81350
79989 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 149::CD,79993:CD,79999
79993 :: CALL :: call :: I :: v22 = v20.setRange(v13, v16)::JM,79999:CL,87551
79999 :: PRED :: IF :: Z :: if (v22 == v16) goto 209::CD,80003:CF,80104
80003 :: CALL :: call :: I :: v25 = v23.unsetRange(v13, v16)::CL,82069
80105 :: EXPR :: assign :: J :: v68 = CONVERT I to J v16::CF,80106
80104 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v71 - v16::DD,80111:CF,80105
80107 :: PRED :: IF :: Z :: if (v71 > #(0)) goto 5::CD,79973:CD,79974:CD,79975:CD,79979:CD,79980:CD,79984:CD,79989:CD,80104:CD,80105:CD,80106:CD,80109:CD,80110:CD,80111
80106 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v70 + v68::DD,80110
80109 :: EXPR :: assign :: null :: PHI v16 = v15, v71::DD,79999:DD,80104:DD,80105
80111 :: EXPR :: assign :: null :: PHI v71 = p2 $null , v67::DD,79980:DD,80104:DD,80107:DD,80109
80110 :: EXPR :: assign :: null :: PHI v70 = p1 $position , v69::CF,80111:DD,79974:DD,80106
80170 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.clear()::CD,80174
80174 :: CALL :: call :: V :: p0 $this .removeAll()::CL,87582
80179 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.copyTo(org.hsqldb.lib.DoubleIntIndex)::CD,80219
80219 :: CALL :: call :: V :: p1 $other .setSize(v13)::CL,87540
80236 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.removeRange(int,int)::CD,80249:CD,80263:CD,80273:CD,80274
80249 :: CALL :: call :: V :: adjustArray(#(73), v6, v7, p1 $start , v8)::CL,87634
80263 :: CALL :: call :: V :: adjustArray(#(73), v10, v11, p1 $start , v12)::CL,87634
80270 :: EXPR :: reference :: I :: v14 = p0 $this .count::DD,80274
80273 :: EXPR :: assign :: Ljava/lang/Object :: v15 = p2 $limit  - p1 $start ::CF,80274
80275 :: EXPR :: modify :: I :: p0 $this .count = v16::
80274 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 - v15::DD,80275
80303 :: EXIT :: exit :: Z :: org.hsqldb.persist.RAFile.ensureLength(long)::JM,80364
80302 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.ensureLength(long)::CE,80303:CD,80310:CD,80311:CD,80318
80307 :: EXPR :: reference :: J :: v4 = p0 $this .fileLength::DD,80310
80311 :: PRED :: IF :: Z :: if (v5 > #(0)) goto 13::CD,80312:CD,80313:CD,80319
80310 :: EXPR :: assign :: Z :: v5 = p1 $newLength  == v4::DD,80311
80313 :: CALL :: call :: V :: p0 $this .extendLength(p1 $newLength )::CL,87710
80312 :: NORM :: compound :: Z :: return #(1)::DD,80303
80319 :: NORM :: compound :: Z :: return #(1)::DD,80303
80318 :: NORM :: compound :: Z :: return #(0)::DD,80303
80328 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.ensureLength(long)::CD,80336:CD,80337
80333 :: EXPR :: reference :: J :: v4 = p0 $this .initialMaxLength::DD,80336
80337 :: PRED :: IF :: Z :: if (v5 > #(0)) goto 21::CD,80341:CD,80350:CD,80359:CD,80364
80336 :: EXPR :: assign :: Z :: v5 = p1 $newLength  == v4::DD,80337
80341 :: CALL :: call :: Z :: v24 = v22.ensureLength(p1 $newLength )::CL,80302:CL,87768
80347 :: EXPR :: reference :: Z :: v7 = p0 $this .preNio::DD,80350
80351 :: CALL :: call :: V :: p0 $this .newStore(p1 $newLength )::CL,86529
80350 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 37::CD,80351
80359 :: CALL :: call :: Z :: v13 = v11.ensureLength(p1 $newLength )::JM,80364:CL,80302:CL,87768
80364 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 52::CD,80369:CD,80378
80366 :: EXPR :: reference :: Z :: v14 = p0 $this .isNio::DD,80369
80369 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 68::CD,80370
80370 :: CALL :: call :: V :: p0 $this .newStore(p1 $newLength )::CL,86529
80378 :: CALL :: call :: Z :: v20 = v18.ensureLength(p1 $newLength )::CL,80302:CL,87768
80559 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.setStorageSize(int)::JM,80564
80564 :: EXPR :: modify :: I :: p0 $this .storageSize = p1 $size ::
80570 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.getFilePosition(int,boolean)::CD,80579:CD,80586:JM,80595:JM,80745:JM,80648
80576 :: EXPR :: reference :: J :: v5 = p0 $this .requestGetCount::DD,80579
80579 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 + #(1 l)::DD,80580
80580 :: EXPR :: modify :: J :: p0 $this .requestGetCount = v7::
80583 :: EXPR :: reference :: I :: v8 = p0 $this .capacity::DD,80586
80586 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,80588:CD,80595:CD,80606:CD,80610:CD,80639:CD,80745:CD,80746
80588 :: CALL :: call :: J :: v79 = p0 $this .getNewBlock(v77, p2 $asBlocks )::CL,87834
80595 :: PRED :: IF :: Z :: if (p2 $asBlocks  == #(0)) goto 43::CF,80745:CD,80597:CD,80602
80597 :: CALL :: call :: J :: v13 = getBinaryMultipleCeiling(v10, #(4096 l))::JM,80602:CL,87804
80603 :: EXPR :: reference :: I :: v17 = p0 $this .scale::DD,80606
80602 :: EXPR :: assign :: I :: v14 = CONVERT J to I v13::DD,80745
80607 :: EXPR :: reference :: I :: v19 = p0 $this .minReuse::DD,80610
80606 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 / v17::DD,80627:DD,80724
80610 :: PRED :: IF :: Z :: if (v15 < v19) goto 108::CF,80746:CD,80614:CD,80618
80614 :: CALL :: call :: I :: v22 = v20.size()::JM,80618:CL,79714
80618 :: PRED :: IF :: Z :: if (v22 <= #(0)) goto 108::CF,80746:CD,80622:CD,80627
80622 :: CALL :: call :: I :: v25 = v23.getValue(#(0))::JM,80627:CL,87951
80627 :: PRED :: IF :: Z :: if (v25 < v18) goto 88::CD,80629:CD,80746
80629 :: PRED :: IF :: Z :: if (v15 <= #(2147483647)) goto 97::CD,80634:CD,80746
80634 :: CALL :: call :: I :: v29 = v27.findFirstGreaterEqualKeyIndex(v18)::JM,80746:CL,87980
80639 :: PRED :: IF :: Z :: if (v30 != #(-1)) goto 120::CD,80641:CD,80648
80641 :: CALL :: call :: J :: v76 = p0 $this .getNewBlock(v74, p2 $asBlocks )::CL,87834
80648 :: PRED :: IF :: Z :: if (p2 $asBlocks  == #(0)) goto 192::CD,80672:CD,80676:CD,80680:CD,80684:CD,80696:CD,80703:CD,80704:CD,80719:CD,80724:CD,80728:CD,80732:CD,80747
80653 :: CALL :: call :: I :: v36 = v34.getKey(v47)::JM,80658:CL,88004
80659 :: EXPR :: reference :: I :: v39 = p0 $this .scale::DD,80662
80658 :: EXPR :: assign :: J :: v37 = CONVERT I to J v36::DD,80664
80663 :: EXPR :: assign :: J :: v41 = CONVERT I to J v40::CF,80664
80662 :: EXPR :: assign :: Ljava/lang/Object :: v40 = #(4096) / v39::CF,80663
80665 :: EXPR :: assign :: Z :: v44 = v42 == #(0 l)::DD,80666
80664 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v37 % v41::DD,80665
80666 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 157::CD,80668:CD,80672:CD,80676:CD,80747
80668 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,80747
80672 :: CALL :: call :: I :: v33 = v31.size()::JM,80676:CL,79714
80676 :: PRED :: IF :: Z :: if (v47 < v33) goto 127::CD,80653:CD,80658:CD,80662:CD,80663:CD,80664:CD,80665:CD,80666
80680 :: CALL :: call :: I :: v50 = v48.size()::JM,80684:CL,79714
80684 :: PRED :: IF :: Z :: if (v47 != v50) goto 192::CD,80686:CD,80696:CD,80703:CD,80704:CD,80719:CD,80724:CD,80728:CD,80732
80686 :: CALL :: call :: J :: v73 = p0 $this .getNewBlock(v71, p2 $asBlocks )::CL,87834
80693 :: EXPR :: reference :: J :: v52 = p0 $this .requestCount::DD,80696
80697 :: EXPR :: modify :: J :: p0 $this .requestCount = v53::
80696 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v52 + #(1 l)::DD,80697
80700 :: EXPR :: reference :: J :: v54 = p0 $this .requestSize::DD,80704
80703 :: EXPR :: assign :: J :: v55 = CONVERT I to J v15::CF,80704
80705 :: EXPR :: modify :: J :: p0 $this .requestSize = v56::
80704 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v54 + v55::DD,80705
80719 :: CALL :: call :: I :: v62 = v60.getValue(v51)::JM,80724:CL,87951
80724 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v62 - v18::DD,80732
80728 :: CALL :: call :: V :: v64.remove(v51)::CL,88033
80732 :: PRED :: IF :: Z :: if (v63 <= #(0)) goto 272::CD,80737
80737 :: CALL :: call :: I :: v69 = v67.add(v66, v63)::CL,88099
80745 :: EXPR :: assign :: null :: PHI v15 = p1 $rowSize , v14::DD,80606:DD,80610:DD,80629:DD,80703
80747 :: EXPR :: assign :: null :: PHI v47 = v30, v46::DD,80668:DD,80676:DD,80684
80746 :: EXPR :: assign :: null :: PHI v30 = #(-1), #(-1), #(0), #(-1), v29::DD,80639:DD,80747
80831 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.setPos(long)::JM,80836
80836 :: EXPR :: modify :: J :: p0 $this .position = p1 $pos ::
80842 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.add(org.hsqldb.persist.CachedObject,boolean)::CD,80860:CD,80864:CD,80870:CD,80874
80854 :: EXPR :: modify :: Z :: p0 $this .cacheModified = #(1)::
80860 :: CALL :: call :: V :: v8.put(p1 $object )::CL,88218
80865 :: CALL :: call :: Z :: v12 = p1 $object .keepInMemory(#(1))::CL,81099
80864 :: PRED :: IF :: Z :: if (p2 $keep  == #(0)) goto 35::CD,80865
80870 :: CALL :: call :: I :: v14 = p1 $object .getStorageSize()::JM,80874:CL,57331
80874 :: PRED :: IF :: Z :: if (v14 <= #(4096)) goto 77::CD,80882
80882 :: CALL :: call :: V :: v16.reset(v18)::CL,88278
80917 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.createFileBlockInDirectory(int,int)::JM,93555:JM,88308:JM,93559:JM,93558:CD,80934:CD,80939:CD,80946:CD,80947:CD,80948:CD,80949:CD,80950:CD,80951:CD,80957:CD,80968:CD,80976:CD,80984:CD,80988:JM,80972
80934 :: CALL :: call :: V :: v8.add(v5, #(0))::CL,72750
80939 :: CALL :: call :: J :: v12 = v5.getPos()::JM,80947:CL,57322
80943 :: EXPR :: reference :: I :: v13 = p0 $this .dataFileScale::DD,80946
80947 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 * v14::DD,80948
80946 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::CF,80947
80949 :: EXPR :: assign :: I :: v18 = CONVERT J to I v17::DD,80980:CF,80950
80948 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 / #(4096 l)::CF,80949
80951 :: CALL :: call :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v23 = p0 $this .getDirectory(p1 $fileBlockIndex , #(1))::JM,80957:CL,88327
80950 :: EXPR :: assign :: Ljava/lang/Object :: v20 = p1 $fileBlockIndex  % #(2048)::
80957 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 73::CD,80958:CD,80962
80958 :: CALL :: call :: V :: p0 $this .createDirectory(p1 $fileBlockIndex )::CL,88385
80962 :: CALL :: call :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v27 = p0 $this .getDirectory(p1 $fileBlockIndex , #(1))::CL,88327
80968 :: CALL :: call :: [I :: v30 = v28.getTableIdArray()::CL,81502
80972 :: EXPR :: modify :: I :: v30[v20] = p2 $tableId ::
80976 :: CALL :: call :: [I :: v32 = v28.getBitmapAddressArray()::CL,72949
80980 :: EXPR :: modify :: I :: v32[v20] = v18::
80984 :: CALL :: call :: V :: v28.setChanged(#(1))::CL,88452
80988 :: CALL :: call :: Z :: v35 = v28.keepInMemory(#(0))::CL,81099
81031 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.Cache.get(long)::JM,72891:JM,72878:JM,81185:JM,81172:JM,81311
81030 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.get(long)::CE,81031:CD,81038:CD,81048:CD,81053
81035 :: EXPR :: reference :: I :: v4 = p0 $this .accessCount::DD,81038
81039 :: CALL :: call :: V :: p0 $this .updateAccessCounts()::CL,88463
81038 :: PRED :: IF :: Z :: if (v4 <= #(2146435071)) goto 23::CD,81039:CD,81042:CD,81045
81042 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
81045 :: CALL :: call :: V :: p0 $this .updateObjectAccessCounts()::CL,88529
81048 :: CALL :: call :: I :: v10 = p0 $this .getObjectLookup(p1 $pos )::JM,81053:CL,88584
81053 :: PRED :: IF :: Z :: if (v10 != #(-1)) goto 35::CD,81054:CD,81061:CD,81076:CD,81077
81055 :: EXPR :: reference :: [I :: v12 = p0 $this .accessTable::
81054 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return #(null)::DD,81031
81058 :: EXPR :: reference :: I :: v13 = p0 $this .accessCount::DD,81061
81061 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 + #(1)::DD,81062:DD,81065
81062 :: EXPR :: modify :: I :: p0 $this .accessCount = v15::
81065 :: EXPR :: modify :: I :: v12[v10] = v15::
81069 :: EXPR :: reference :: [Ljava/lang/Object :: v16 = p0 $this .objectKeyTable::
81072 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v16[v10]::DD,81076
81077 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v18::DD,81031
81076 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,81077
81099 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.keepInMemory(boolean)::CD,81107:CD,81129:JM,81109
81104 :: EXPR :: reference :: Z :: v4 = p0 $this .isInMemory::DD,81107
81107 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,81109
81109 :: PRED :: IF :: Z :: if (p1 $keep  == #(0)) goto 28::CD,81113:CD,81121
81110 :: EXPR :: reference :: I :: v14 = p0 $this .keepCount::DD,81113
81113 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 + #(1)::DD,81114
81114 :: EXPR :: modify :: I :: p0 $this .keepCount = v15::
81118 :: EXPR :: reference :: I :: v6 = p0 $this .keepCount::DD,81121
81121 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 - #(1)::DD,81122
81122 :: EXPR :: modify :: I :: p0 $this .keepCount = v8::
81129 :: CALL :: call :: Ljava/lang/RuntimeException :: v13 = runtimeError(#(201), #(CachedObjectBase - ke...))::CL,33706
81151 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.DataFileCache.getFromFile(long,int,org.hsqldb.persist.PersistentStore,boolean)::JM,72913
81150 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.getFromFile(long,int,org.hsqldb.persist.PersistentStore,boolean)::CE,81151:CD,81167:CD,81172:CD,81204:CD,81214:CD,81242:CD,81272:JM,81251:JM,81173
81167 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v12 = v10.get(p1 $pos )::JM,81185:JM,81172:JM,81311:CL,81030
81173 :: PRED :: IF :: Z :: if (p4 $store  == #(0)) goto 46::CD,81174
81172 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 60::CD,81173:CD,81185:CD,81243:CD,81247:CD,81251:CD,81267:CD,81310:CD,81311
81174 :: CALL :: call :: Z :: v49 = v12.keepInMemory(#(1))::CL,81099
81185 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v12::DD,81151
81187 :: CALL :: call :: V :: p0 $this .readObject(p1 $pos , p2 $null )::CL,88643
81195 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v18 = p3 $size .get(v16)::JM,81311:CL,88716
81204 :: CALL :: call :: V :: v20.clearUnchanged()::CL,88770
81214 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v28)::
81243 :: PRED :: IF :: Z :: if (v26 < #(2)) goto 66::CF,81311:CD,81187:CD,81195
81242 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,81310
81247 :: CALL :: call :: V :: v41.putUsingReserve(v40)::CL,88855
81251 :: PRED :: IF :: Z :: if (p4 $store  == #(0)) goto 174::CD,81252
81252 :: CALL :: call :: Z :: v44 = v40.keepInMemory(#(1))::CL,81099
81267 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v40::DD,81151
81272 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v53)::
81311 :: EXPR :: assign :: null :: PHI v40 = v18, v12::DD,81267
81310 :: EXPR :: assign :: null :: PHI v26 = #(0), v24::DD,81242:DD,81243
81351 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.moveToBlock(int)::JM,72982:JM,73352:JM,79989:JM,82051
81350 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.moveToBlock(int)::CE,81351:CD,81358:JM,81368:JM,81400:JM,81403:JM,81373
81355 :: EXPR :: reference :: I :: v4 = p0 $this .currentBlockIndex::DD,81358
81359 :: CALL :: call :: V :: p0 $this .endBlockUpdate()::CL,81761
81358 :: PRED :: IF :: Z :: if (v4 == p1 $fileBlockIndex ) goto 153::CD,81359:CD,81368:CD,81369:CD,81395:CD,81457
81362 :: EXPR :: modify :: Lorg/hsqldb/persist/BitMapCachedObject :: p0 $this .currentBitMap = #(null)::
81365 :: EXPR :: reference :: I :: v7 = p0 $this .currentDirIndex::DD,81369
81369 :: PRED :: IF :: Z :: if (v7 == v9) goto 59::CD,81370:CD,81373:CD,81383
81368 :: EXPR :: assign :: Ljava/lang/Object :: v9 = p1 $fileBlockIndex  / #(2048)::CF,81369
81370 :: CALL :: call :: V :: p0 $this .reset()::CL,73148
81373 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $fileBlockIndex  / #(2048)::DD,81374
81374 :: EXPR :: modify :: I :: p0 $this .currentDirIndex = v11::
81383 :: CALL :: call :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v15 = access$0(v12, p1 $fileBlockIndex , v13)::JM,81389:CL,88910
81389 :: EXPR :: modify :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: p0 $this .currentDir = v15::
81392 :: EXPR :: reference :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v16 = p0 $this .currentDir::DD,81395
81395 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 73::CD,81396:CD,81399:CD,81403:CD,81410:CD,81421:CD,81422:CD,81423
81396 :: CALL :: call :: V :: p0 $this .reset()::CL,73148
81399 :: NORM :: compound :: Z :: return #(0)::DD,81351
81400 :: EXPR :: modify :: I :: p0 $this .currentBlockIndex = p1 $fileBlockIndex ::
81403 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p1 $fileBlockIndex  % #(2048)::DD,81404
81404 :: EXPR :: modify :: I :: p0 $this .currentBlockOffset = v17::
81410 :: CALL :: call :: [I :: v20 = v18.getBitmapAddressArray()::CL,72949
81414 :: EXPR :: reference :: I :: v21 = p0 $this .currentBlockOffset::
81417 :: EXPR :: reference :: I :: v22 = v20[v21]::DD,81421
81421 :: EXPR :: assign :: J :: v23 = CONVERT I to J v22::DD,81422
81423 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 112::CD,81424:CD,81427:CD,81431:CD,81457
81422 :: EXPR :: assign :: Z :: v25 = v23 == #(0 l)::DD,81423
81424 :: CALL :: call :: V :: p0 $this .reset()::CL,73148
81427 :: NORM :: compound :: Z :: return #(0)::DD,81351
81428 :: EXPR :: reference :: Z :: v27 = p0 $this .currentKeep::DD,81431
81431 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 153::CD,81447:CD,81453:CF,81457
81447 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v38 = v35.get(v33, #(1))::JM,81453:CL,64135
81453 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,81454
81454 :: EXPR :: modify :: Lorg/hsqldb/persist/BitMapCachedObject :: p0 $this .currentBitMap = v39::
81457 :: NORM :: compound :: Z :: return #(1)::DD,81351
81503 :: EXIT :: exit :: [I :: org.hsqldb.persist.DirectoryBlockCachedObject.getTableIdArray()::
81502 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.getTableIdArray()::CE,81503:CD,81509
81506 :: EXPR :: reference :: [I :: v3 = p0 $this .tableIds::DD,81509
81509 :: NORM :: compound :: [I :: return v3::CF,81503
81511 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.getFreeSpaceArray()::CE,81512:CD,81518
81512 :: EXIT :: exit :: [C :: org.hsqldb.persist.DirectoryBlockCachedObject.getFreeSpaceArray()::
81515 :: EXPR :: reference :: [C :: v3 = p0 $this .freeSpace::DD,81518
81518 :: NORM :: compound :: [C :: return v3::CF,81512
81521 :: EXIT :: exit :: [C :: org.hsqldb.persist.DirectoryBlockCachedObject.getFreeBlockArray()::
81520 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.getFreeBlockArray()::CE,81521:CD,81527
81524 :: EXPR :: reference :: [C :: v3 = p0 $this .freeSpaceBlock::DD,81527
81527 :: NORM :: compound :: [C :: return v3::CF,81521
81529 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.doubleCapacity()::CD,81540:CD,81545:CD,81552
81540 :: CALL :: call :: Ljava/lang/Object :: v8 = resizeArray(v3, v6)::JM,81545:CL,52281
81545 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,81546
81546 :: EXPR :: modify :: [I :: p0 $this .keys = v9::
81549 :: EXPR :: reference :: I :: v10 = p0 $this .capacity::DD,81552
81553 :: EXPR :: modify :: I :: p0 $this .capacity = v11::
81552 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 * #(2)::DD,81553
81564 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.fastQuickSort()::CD,81629:CD,81633
81585 :: CALL :: call :: I :: v16 = v3.peekKey()::JM,81597:CL,88942
81589 :: CALL :: call :: I :: v18 = v3.peekValue()::JM,81597:CL,88959
81597 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v18 - v16::DD,81598
81598 :: PRED :: IF :: Z :: if (v21 < #(16)) goto 98::CD,81602:CD,81624
81602 :: CALL :: call :: I :: v26 = p0 $this .partition(v16, v18, v24)::CL,89000
81624 :: CALL :: call :: V :: p0 $this .insertionSort(v16, v18)::CL,89063
81629 :: CALL :: call :: I :: v14 = v3.size()::JM,81633:CL,79714
81633 :: PRED :: IF :: Z :: if (v14 > #(0)) goto 30::CD,81585:CD,81589:CD,81597:CD,81598:CD,81629
81634 :: EXPR :: modify :: Z :: p0 $this .sorted = #(1)::
81683 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.binaryEmptySlotSearch()::CE,81684:CD,81704:CD,81706:CD,81707
81684 :: EXIT :: exit :: I :: org.hsqldb.lib.IntIndex.binaryEmptySlotSearch()::JM,73085
81687 :: EXPR :: reference :: I :: v4 = p0 $this .count::DD,81707
81691 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v14 + v10::DD,81692
81693 :: CALL :: call :: I :: v9 = p0 $this .compare(v7)::JM,81698:JM,81700:CL,89117
81692 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 ? #(1)::DD,81701:DD,81707
81698 :: PRED :: IF :: Z :: if (v9 >= #(0)) goto 40::CD,81700:CD,81704:CD,81706:CD,81707
81701 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v7 + #(1)::DD,81706
81700 :: PRED :: IF :: Z :: if (v9 <= #(0)) goto 51::CD,81701:CD,81703:CD,81704:CD,81706:CD,81707
81703 :: NORM :: compound :: I :: return #(-1)::CF,81684
81705 :: NORM :: compound :: I :: return v14::CF,81684
81704 :: PRED :: IF :: Z :: if (v14 < v10) goto 17::CD,81691:CD,81692:CD,81693:CD,81698:CD,81705
81707 :: EXPR :: assign :: null :: PHI v10 = v4, v7, v10::DD,81691:DD,81704:DD,81707
81706 :: EXPR :: assign :: null :: PHI v14 = #(0), v14, v13::CF,81707:DD,81691:DD,81704:DD,81705:DD,81706
81761 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.endBlockUpdate()::CD,81768
81765 :: EXPR :: reference :: Lorg/hsqldb/persist/BitMapCachedObject :: v3 = p0 $this .currentBitMap::DD,81768
81768 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,81773:CD,81777
81773 :: CALL :: call :: Z :: v7 = v5.hasChanged()::JM,81777:CL,75833
81777 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 29::CD,81781:CD,81793:CD,81803:CD,81813
81781 :: CALL :: call :: Z :: v55 = v53.keepInMemory(#(0))::CL,81099
81793 :: CALL :: call :: I :: v12 = v10.countSetBits()::JM,81813:JM,81884:CL,89156
81803 :: CALL :: call :: I :: v16 = v14.countSetBitsEnd()::JM,81899:CL,89254
81807 :: EXPR :: reference :: Lorg/hsqldb/persist/DataSpaceManagerBlocks :: v17 = p0 $this .this$0::
81810 :: EXPR :: reference :: I :: v18 = v17.fileBlockItemCount::DD,81813
81813 :: PRED :: IF :: Z :: if (v12 != v18) goto 124::CD,81817:CD,81828:CD,81860:CD,81869:CD,81877:CD,81884:CD,81892:CD,81899:CD,81907
81817 :: CALL :: call :: [I :: v37 = v35.getTableIdArray()::CL,81502
81821 :: EXPR :: reference :: I :: v38 = p0 $this .currentBlockOffset::
81824 :: EXPR :: reference :: I :: v39 = v37[v38]::DD,81828
81829 :: CALL :: call :: V :: p0 $this .setTable(#(0))::CL,81952
81828 :: PRED :: IF :: Z :: if (v39 == #(6)) goto 114::CD,81829:CD,81842:CD,81853
81842 :: CALL :: call :: Z :: v46 = v43.addUnique(v44)::CL,73051
81847 :: EXPR :: reference :: Lorg/hsqldb/persist/DataSpaceManagerBlocks :: v47 = p0 $this .this$0::
81850 :: EXPR :: reference :: I :: v48 = v47.released::DD,81853
81853 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v48 + #(1)::DD,81854
81854 :: EXPR :: modify :: I :: v47.released = v49::
81860 :: CALL :: call :: Z :: v52 = v50.keepInMemory(#(0))::CL,81099
81869 :: CALL :: call :: Z :: v21 = v19.keepInMemory(#(0))::CL,81099
81877 :: CALL :: call :: [C :: v24 = v22.getFreeSpaceArray()::CL,81511
81881 :: EXPR :: reference :: I :: v25 = p0 $this .currentBlockOffset::
81885 :: EXPR :: modify :: C :: v24[v25] = v26::
81884 :: EXPR :: assign :: C :: v26 = CONVERT I to C v12::DD,81885
81892 :: CALL :: call :: [C :: v29 = v27.getFreeBlockArray()::CL,81520
81896 :: EXPR :: reference :: I :: v30 = p0 $this .currentBlockOffset::
81899 :: EXPR :: assign :: C :: v31 = CONVERT I to C v16::DD,81900
81900 :: EXPR :: modify :: C :: v29[v30] = v31::
81907 :: CALL :: call :: V :: v32.setChanged(#(1))::CL,88452
81952 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.setTable(int)::CD,81960:CD,81974:CD,81988:CD,82002:CD,82012:CD,82018:JM,81967
81960 :: CALL :: call :: [I :: v6 = v4.getTableIdArray()::CL,81502
81964 :: EXPR :: reference :: I :: v7 = p0 $this .currentBlockOffset::
81967 :: EXPR :: modify :: I :: v6[v7] = p1 $tableId ::
81974 :: CALL :: call :: [C :: v10 = v8.getFreeSpaceArray()::CL,81511
81978 :: EXPR :: reference :: I :: v11 = p0 $this .currentBlockOffset::
81981 :: EXPR :: modify :: C :: v10[v11] = #(0)::
81988 :: CALL :: call :: [C :: v15 = v13.getFreeBlockArray()::CL,81520
81992 :: EXPR :: reference :: I :: v16 = p0 $this .currentBlockOffset::
81995 :: EXPR :: modify :: C :: v15[v16] = #(0)::
82002 :: CALL :: call :: V :: v17.setChanged(#(1))::CL,88452
82012 :: CALL :: call :: V :: v21.reset()::CL,89315
82018 :: CALL :: call :: V :: v23.setChanged(#(1))::CL,88452
82037 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.nextBlockForTable(int)::CE,82038:CD,82046:CD,82051:JM,82057
82038 :: EXIT :: exit :: Z :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.nextBlockForTable(int)::JM,73441
82046 :: CALL :: call :: Z :: v8 = p0 $this .moveToBlock(v6)::JM,82051:CL,81350
82051 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 18::CD,82052:CD,82053:CD,82057
82053 :: CALL :: call :: I :: v11 = p0 $this .getTableId()::JM,82057:CL,72988
82052 :: NORM :: compound :: Z :: return #(0)::DD,82038
82057 :: PRED :: IF :: Z :: if (v11 != p1 $tableId ) goto 2::CD,82046:CD,82051:CD,82058
82058 :: NORM :: compound :: Z :: return #(1)::DD,82038
82069 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.unsetRange(int,int)::CD,82078:CD,82088
82078 :: CALL :: call :: V :: v5.setChanged(#(1))::CL,88452
82088 :: CALL :: call :: I :: v11 = v9.unsetRange(p1 $offset , p2 $currentUnits )::CL,89352
82933 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.write(int)::CD,82938:CD,82948:CD,82952
82938 :: CALL :: call :: V :: p0 $this .ensureRoom(#(1))::CL,83964:CL,83952
82942 :: EXPR :: reference :: [B :: v6 = p0 $this .buffer::
82945 :: EXPR :: reference :: I :: v7 = p0 $this .count::DD,82948
82949 :: EXPR :: modify :: I :: p0 $this .count = v8::
82948 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v7 + #(1)::DD,82949
82953 :: EXPR :: modify :: B :: v6[v7] = v9::
82952 :: EXPR :: assign :: B :: v9 = CONVERT I to B p1 $b ::DD,82953
83603 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.CachedObjectComparator.setType(int)::JM,83608
83608 :: EXPR :: modify :: I :: p0 $this .compareType = p1 $type ::
83614 :: ENTR :: entry :: null :: org.hsqldb.lib.ArraySort.sort(java.lang.Object[],int,int,java.util.Comparator)::CD,83621:CD,83622
83621 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p2 $start  + #(1)::DD,83622
83622 :: PRED :: IF :: Z :: if (v7 < p3 $limit ) goto 13::CD,83625:CD,83632
83625 :: CALL :: call :: V :: quickSort(p1 $array , p4 $comparator , p2 $start , v8)::CL,90378
83632 :: CALL :: call :: V :: insertionSort(p1 $array , p4 $comparator , p2 $start , v10)::CL,90598
83652 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.saveRows(org.hsqldb.persist.CachedObject[],int,int)::CD,83659:JM,83733:JM,83711
83659 :: PRED :: IF :: Z :: if (p3 $count  != #(0)) goto 9::CD,83661:CD,83684:CD,83687:CD,83711:CD,83712:CD,83719:CD,83733
83661 :: CALL :: call :: I :: v8 = p0 $this .copyShadow(p1 $rows , p2 $offset , p3 $count )::JM,83687:CL,90663
83684 :: CALL :: call :: V :: v15.start()::CL,86271
83687 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 51::CD,83688
83688 :: CALL :: call :: V :: p0 $this .setFileModified()::CL,90849
83696 :: CALL :: call :: V :: p0 $this .saveRowNoLock(v19)::CL,90904
83700 :: EXPR :: modify :: Ljava/lang/Object :: p1 $rows [v29] = #(null)::
83711 :: EXPR :: assign :: Ljava/lang/Object :: v18 = p2 $offset  + p3 $count ::CF,83712
83710 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v29 + #(1)::DD,83733
83712 :: PRED :: IF :: Z :: if (v29 < v18) goto 57::CD,83696:CD,83710:CD,83711:CD,83733
83719 :: CALL :: call :: V :: v31.stop()::CL,91004
83733 :: EXPR :: assign :: null :: PHI v29 = p2 $offset , v27::DD,83710:DD,83712:CF,83711
83772 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.positionBufferSeek(long)::CD,83780:CD,83781:JM,83809:JM,83790
83777 :: EXPR :: reference :: J :: v4 = p0 $this .bufferPosition::DD,83780
83781 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 26::CD,83788:CD,83789:CD,83790:CD,83791:CD,83792
83780 :: EXPR :: assign :: Z :: v5 = p1 $offset  == v4::DD,83781
83782 :: EXPR :: reference :: J :: v7 = p0 $this .bufferPosition::DD,83789
83785 :: EXPR :: reference :: I :: v8 = p0 $this .bufferLength::DD,83788
83789 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::CF,83790
83788 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::CF,83789
83791 :: PRED :: IF :: Z :: if (v11 < #(0)) goto 30::CD,83792
83790 :: EXPR :: assign :: Z :: v11 = p1 $offset  == v10::DD,83791
83792 :: CALL :: call :: V :: p0 $this .setCurrentBuffer(p1 $offset )::CL,91193
83809 :: EXPR :: modify :: J :: p0 $this .currentPosition = p1 $offset ::
83828 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.writeToBuffer([],int,int)::
83871 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.resetPointer()::CD,83878:CD,83885
83875 :: EXPR :: modify :: J :: p0 $this .seekPosition = #(0 l)::
83878 :: CALL :: call :: J :: v5 = p0 $this .length()::JM,83882:CL,71577
83882 :: EXPR :: modify :: J :: p0 $this .fileLength = v5::
83885 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,86413
83896 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.positionBufferMove(int)::CD,83904:CD,83905:CD,83912:CD,83913:CD,83914:CD,83915
83901 :: EXPR :: reference :: J :: v4 = p0 $this .currentPosition::DD,83905
83905 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 + v5::DD,83914:DD,83933
83904 :: EXPR :: assign :: J :: v5 = CONVERT I to J p1 $relOffset ::CF,83905
83906 :: EXPR :: reference :: J :: v7 = p0 $this .bufferPosition::DD,83913
83909 :: EXPR :: reference :: I :: v8 = p0 $this .bufferLength::DD,83912
83913 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::CF,83914
83912 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::CF,83913
83915 :: PRED :: IF :: Z :: if (v11 < #(0)) goto 29::CD,83916
83914 :: EXPR :: assign :: Z :: v11 = v6 == v10::DD,83915
83916 :: CALL :: call :: V :: p0 $this .setCurrentBuffer(v6)::CL,91193
83933 :: EXPR :: modify :: J :: p0 $this .currentPosition = v6::
83952 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputBinary.ensureRoom(int)::CD,83957
83957 :: CALL :: call :: V :: p0 $this .ensureRoom(p1 $extra )::CL,83964
83964 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.ensureRoom(int)::CD,83972:CD,83973:CD,83977:CD,83978:CD,83987:CD,83988
83969 :: EXPR :: reference :: I :: v4 = p0 $this .count::DD,83972
83973 :: EXPR :: assign :: J :: v6 = CONVERT I to J v5::DD,83987:DD,83991
83972 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v4 + p1 $extra ::CF,83973
83974 :: EXPR :: reference :: [B :: v7 = p0 $this .buffer::DD,83977
83977 :: EXPR :: assign :: I :: v8 = v7.length::CF,83978
83978 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::DD,83987:DD,84014
83987 :: EXPR :: assign :: Z :: v13 = v6 == v9::DD,83988
83988 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 101::CD,83991:CD,83992:CD,83993:CD,83994:CD,83995:CD,83996:CD,84014:CD,84015
83991 :: EXPR :: assign :: Z :: v14 = v6 == v17::DD,83992
83990 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 * #(2 l)::DD,84014
83993 :: EXPR :: assign :: Z :: v18 = v17 == #(2147483647 l)::DD,83994
83992 :: PRED :: IF :: Z :: if (v14 > #(0)) goto 49::CD,83990:CD,83991:CD,84014:CF,83993
83995 :: EXPR :: assign :: I :: v20 = CONVERT J to I v19::CF,83996
83994 :: PRED :: IF :: Z :: if (v18 <= #(0)) goto 75::CF,84015
83996 :: NORM :: declaration :: [B :: v21 = new []::DD,84010
84010 :: EXPR :: modify :: [B :: p0 $this .buffer = v21::
84015 :: EXPR :: assign :: null :: PHI v19 = v17, #(2147483647 l)::CF,83995
84014 :: EXPR :: assign :: null :: PHI v17 = v9, v16::DD,83990:DD,83991:DD,83993:DD,84015
84688 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.setKeysSearchTarget()::CD,84695
84692 :: EXPR :: reference :: Z :: v3 = p0 $this .sortOnValues::DD,84695
84695 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 22::CD,84699
84696 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,84699
84699 :: PRED :: IF :: Z :: if (v5 <= #(1)) goto 22::
84700 :: EXPR :: modify :: Z :: p0 $this .sorted = #(0)::
84703 :: EXPR :: modify :: Z :: p0 $this .sortOnValues = #(0)::
85123 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.calcInterval(int,int,int)::JM,85132:JM,85135:CF,85124:CD,85129:CD,85130
85124 :: EXIT :: exit :: I :: org.hsqldb.lib.ArrayCounter.calcInterval(int,int,int)::JM,77617:JM,77624
85129 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p3 $limit  - p2 $start ::DD,85130:DD,85132:DD,85135
85131 :: NORM :: compound :: I :: return #(0)::CF,85124
85130 :: PRED :: IF :: Z :: if (v5 > #(0)) goto 12::CD,85131:CD,85132:CD,85133:CD,85135:CD,85136:CD,85137:CD,85138
85133 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 25::CD,85138
85132 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 % p1 $segments ::DD,85133
85135 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v5 / p1 $segments ::DD,85136
85137 :: NORM :: compound :: I :: return v11::CF,85124
85136 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 + v9::CF,85137
85138 :: EXPR :: assign :: null :: PHI v9 = #(0), #(1)::DD,85136:CF,85135
85153 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayCounter.countSegments([],int,int,int,int,int)::CE,85154:CD,85162:CD,85163:JM,85185:JM,85171:JM,85170:JM,85173:JM,85174
85154 :: EXIT :: exit :: [I :: org.hsqldb.lib.ArrayCounter.countSegments([],int,int,int,int,int)::JM,77619
85163 :: PRED :: IF :: Z :: if (p4 $interval  > #(0)) goto 15::CD,85164:CD,85185:CD,85186:CD,85187
85162 :: NORM :: declaration :: [I :: v8 = new []::DD,85164:DD,85186:CF,85163
85164 :: NORM :: compound :: [I :: return v8::DD,85154
85166 :: EXPR :: reference :: I :: v10 = p1 $array [v17]::DD,85170:DD,85171:DD,85173
85171 :: PRED :: IF :: Z :: if (v10 < p6 $limit ) goto 45::CD,85173:CD,85174:CD,85179
85170 :: PRED :: IF :: Z :: if (v10 < p5 $start ) goto 59::CD,85171:CF,85184
85173 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - p5 $start ::DD,85174
85175 :: EXPR :: reference :: I :: v13 = v8[v12]::DD,85179
85174 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v11 / p4 $interval ::
85179 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 + #(1)::DD,85180
85180 :: EXPR :: modify :: I :: v8[v12] = v15::
85185 :: PRED :: IF :: Z :: if (v17 < p2 $elementCount ) goto 21::CD,85170:CD,85184:CD,85187:CF,85186
85184 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,85187
85187 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,85184:DD,85185
85186 :: NORM :: compound :: [I :: return v8::DD,85154
85215 :: ENTR :: entry :: null :: org.hsqldb.map.HashIndex.removeEmptyNode(int)::CD,85259:CD,85260:CD,85353:CD,85354:CD,85355:JM,85333:JM,85270:JM,85224
85220 :: EXPR :: reference :: I :: v6 = p0 $this .reclaimedNodePointer::DD,85354
85225 :: PRED :: IF :: Z :: if (v9 != #(-1)) goto 38::
85224 :: PRED :: IF :: Z :: if (v10 != p1 $lookup ) goto 58::CD,85225:CD,85259:CD,85353:CD,85354:CD,85355
85226 :: EXPR :: reference :: [I :: v14 = p0 $this .linkTable::
85229 :: EXPR :: reference :: I :: v15 = v14[p1 $lookup ]::DD,85233
85233 :: EXPR :: modify :: I :: p0 $this .reclaimedNodePointer = v15::
85237 :: EXPR :: reference :: [I :: v11 = p0 $this .linkTable::
85240 :: EXPR :: reference :: [I :: v12 = p0 $this .linkTable::
85243 :: EXPR :: reference :: I :: v13 = v12[p1 $lookup ]::DD,85247
85247 :: EXPR :: modify :: I :: v11[v9] = v13::
85252 :: EXPR :: reference :: [I :: v7 = p0 $this .linkTable::
85255 :: EXPR :: reference :: I :: v8 = v7[v10]::DD,85354
85259 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 16::CF,85355:CD,85224
85260 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 80::CD,85287:CD,85313:CD,85321:CD,85350:CD,85351:CD,85356:CD,85357
85263 :: EXPR :: reference :: [I :: v19 = p0 $this .linkTable::
85266 :: EXPR :: reference :: I :: v20 = v19[v25]::DD,85270
85271 :: EXPR :: reference :: [I :: v21 = p0 $this .linkTable::
85270 :: PRED :: IF :: Z :: if (v20 <= p1 $lookup ) goto 105::CD,85278:CF,85283
85274 :: EXPR :: reference :: I :: v22 = v21[v25]::DD,85278
85279 :: EXPR :: modify :: I :: v21[v25] = v23::
85278 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::DD,85279
85283 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,85356
85284 :: EXPR :: reference :: I :: v18 = p0 $this .newNodePointer::DD,85287
85287 :: PRED :: IF :: Z :: if (v25 < v18) goto 84::CD,85270:CD,85283:CD,85356
85307 :: EXPR :: reference :: [I :: v33 = p0 $this .linkTable::
85310 :: EXPR :: reference :: I :: v34 = p0 $this .newNodePointer::DD,85313
85313 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v34 - #(1)::
85314 :: EXPR :: modify :: I :: v33[v35] = #(0)::
85318 :: EXPR :: reference :: I :: v36 = p0 $this .newNodePointer::DD,85321
85321 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v36 - #(1)::DD,85322
85322 :: EXPR :: modify :: I :: p0 $this .newNodePointer = v37::
85326 :: EXPR :: reference :: [I :: v40 = p0 $this .hashTable::
85329 :: EXPR :: reference :: I :: v41 = v40[v46]::DD,85333
85333 :: PRED :: IF :: Z :: if (v41 <= p1 $lookup ) goto 190::CD,85341:CF,85346
85334 :: EXPR :: reference :: [I :: v42 = p0 $this .hashTable::
85337 :: EXPR :: reference :: I :: v43 = v42[v46]::DD,85341
85341 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v43 - #(1)::DD,85342
85342 :: EXPR :: modify :: I :: v42[v46] = v44::
85347 :: EXPR :: reference :: [I :: v38 = p0 $this .hashTable::DD,85350
85346 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v46 + #(1)::DD,85357
85351 :: PRED :: IF :: Z :: if (v46 < v39) goto 169::CD,85333:CD,85346:CD,85350:CD,85357
85350 :: EXPR :: assign :: I :: v39 = v38.length::CF,85351
85353 :: EXPR :: assign :: null :: PHI v9 = #(-1), v10::CF,85354:DD,85225
85355 :: EXPR :: assign :: null :: PHI v17 = #(1), #(0)::DD,85260
85354 :: EXPR :: assign :: null :: PHI v10 = v6, v8::DD,85224:DD,85259:DD,85353
85357 :: EXPR :: assign :: null :: PHI v46 = #(0), v45::DD,85346:DD,85351
85356 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,85283:DD,85287
85427 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.removeFromElementArrays(int)::CD,85441:CD,85464:CD,85487:CD,85514:CD,85537:CD,85560
85432 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v4 = p0 $this .hashIndex::
85435 :: EXPR :: reference :: I :: v5 = v4.newNodePointer::
85438 :: EXPR :: reference :: Z :: v6 = p0 $this .isIntKey::DD,85441
85441 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 40::
85454 :: EXPR :: reference :: [I :: v13 = p0 $this .intKeyTable::
85457 :: EXPR :: modify :: I :: v13[v5] = #(0)::
85461 :: EXPR :: reference :: Z :: v14 = p0 $this .isLongKey::DD,85464
85464 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::
85477 :: EXPR :: reference :: [J :: v19 = p0 $this .longKeyTable::
85480 :: EXPR :: modify :: J :: v19[v5] = #(0 l)::
85484 :: EXPR :: reference :: Z :: v21 = p0 $this .isObjectKey::DD,85487
85487 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 85::CD,85491
85488 :: EXPR :: reference :: [Ljava/lang/Object :: v22 = p0 $this .objectKeyTable::DD,85491
85491 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 109::
85504 :: EXPR :: reference :: [Ljava/lang/Object :: v28 = p0 $this .objectKeyTable::
85507 :: EXPR :: modify :: Ljava/lang/Object :: v28[v5] = #(null)::
85511 :: EXPR :: reference :: Z :: v29 = p0 $this .isIntValue::DD,85514
85514 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 140::
85527 :: EXPR :: reference :: [I :: v34 = p0 $this .intValueTable::
85530 :: EXPR :: modify :: I :: v34[v5] = #(0)::
85534 :: EXPR :: reference :: Z :: v35 = p0 $this .isLongValue::DD,85537
85537 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 171::
85550 :: EXPR :: reference :: [J :: v40 = p0 $this .longValueTable::
85553 :: EXPR :: modify :: J :: v40[v5] = #(0 l)::
85557 :: EXPR :: reference :: Z :: v41 = p0 $this .isObjectValue::DD,85560
85560 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 201::
85573 :: EXPR :: reference :: [Ljava/lang/Object :: v46 = p0 $this .objectValueTable::
85576 :: EXPR :: modify :: Ljava/lang/Object :: v46[v5] = #(null)::
85835 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,85838
85834 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,85835:CD,85838:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85839 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
85838 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,85839:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85843 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85849 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,86108:CD,85850:CD,85851:CD,85856
85848 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,86107
85851 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85850 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85856 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,85848:CD,85849:CD,86107:CD,86108
85859 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,85860:CD,85865:JM,85889:JM,85856:JM,86114:JM,86116:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85858 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,86108
85860 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85865 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,85858:CD,85859:CD,86108:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85866 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85875 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,86109:CD,85876
85877 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85876 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,86109
85881 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,86110:CD,85882:CD,85887:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916
85882 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85887 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,86110
85889 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,85890:CD,85896:CD,85900:CD,85905:CD,85908:CD,85909:CD,86111:CD,86112:CD,86113:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85890 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85896 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,86113:JM,85905
85900 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,85889:JM,85920:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887:JM,86113
85905 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,86112:CD,85906:CD,86113
85906 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,86112
85909 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,86112:CD,85910:CD,86113
85908 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,86111
85911 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
85910 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,86112:CD,85911:CD,85916:CD,86113:JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85887
85916 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,86112:CD,85889
85921 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,85925:CD,85930:CD,85931:CD,85938:CD,85948:CD,86114:CD,86115:CD,86116
85920 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,86116:CD,85921
85922 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,85930
85925 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,85930
85931 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,86114
85930 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,86116:CD,85931:CD,85938:CD,85948:CD,86114:CD,86115
85932 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,86114
85935 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,85938
85939 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,85942:JM,85947
85938 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,86115:CD,85942:CD,85947
85942 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,85942:JM,85947
85947 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,86115
85948 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,86116
85995 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
85996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
86001 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
86006 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,86057:JM,86056
86015 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CD,86019
86019 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::
86025 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
86024 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
86030 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
86033 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
86038 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
86050 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
86057 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,85905:JM,85889:JM,85856:JM,85875:JM,85865:JM,85881:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887:JM,86114:JM,86116:JM,85931:JM,85834
86056 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,86057:CD,86058
86058 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,85889:JM,85856:JM,86114:JM,86116:JM,85865:JM,86057:JM,86056:JM,85931:JM,85834:JM,85905:JM,85875:JM,85881:JM,86107:JM,85916:JM,85887
86095 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
86094 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
86107 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,85848:DD,85849:DD,85850:DD,85859:DD,85910:JM,85889:JM,85856:JM,85875:JM,85865:JM,85881:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887
86106 :: EXPR :: assign :: Ljava/lang/Exception :: v108 = catch <exc>::
86109 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,85881:JM,85905:JM,85889:JM,85856:JM,85875:JM,85865:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887:DD,86111:DD,86112:JM,86114:JM,86116:JM,85931:JM,85834
86108 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,85858:DD,85859:JM,85905:JM,85889:JM,85856:JM,85875:JM,85865:JM,85881:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887:DD,85876:DD,86109
86111 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,85889:JM,85856:JM,85875:JM,85865:JM,85881:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887:DD,85906:DD,85908:DD,85910:JM,85905:CF,85909
86110 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,85909
86113 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,85921:JM,85930:DD,86115
86112 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,86113:JM,85889:JM,85856:JM,85875:JM,85865:JM,85881:JM,86057:JM,86056:JM,86107:JM,85916:JM,85887
86115 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,85948
86114 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,86116
86116 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,86015
86271 :: ENTR :: entry :: null :: org.hsqldb.lib.StopWatch.start()::CD,86275
86275 :: CALL :: call :: J :: v4 = currentTimeMillis()::JM,86278
86278 :: EXPR :: modify :: J :: p0 $this .startTime = v4::
86281 :: EXPR :: modify :: Z :: p0 $this .running = #(1)::
86289 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileInJar.getLength()::JM,78333
86288 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.getLength()::CE,86289:CD,86292:CD,86298:CD,86302:CD,86306:CD,86307:CD,86308
86292 :: CALL :: call :: V :: p0 $this .resetStream()::CL,86317
86298 :: CALL :: call :: I :: v7 = v5.read()::JM,86302
86302 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 19::CD,86298:CD,86304:CD,86308
86304 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v10 + #(1)::DD,86308
86307 :: NORM :: compound :: J :: return v11::DD,86289
86306 :: EXPR :: assign :: J :: v11 = CONVERT I to J v10::CF,86307
86308 :: EXPR :: assign :: null :: PHI v10 = v9, #(0)::DD,86304:DD,86306
86317 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.resetStream()::CD,86324:CD,86338:CD,86343:CD,86381:CD,86391:CD,86392:CD,86393
86321 :: EXPR :: reference :: Ljava/io/DataInputStream :: v3 = p0 $this .file::DD,86324
86324 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 17::CD,86328
86328 :: CALL :: call :: V :: v5.close()::
86338 :: CALL :: call :: Ljava/io/InputStream :: v11 = v8.getResourceAsStream(v9)::JM,86343:JM,86391:JM,86392
86343 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 92::CF,86392:CD,86347:CD,86351
86347 :: CALL :: call :: Ljava/lang/ClassLoader :: v15 = v13.getContextClassLoader()::JM,86355:JM,86392:JM,86351
86351 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 92::CF,86392:CD,86355
86352 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .fileName::JM,86355:JM,86392
86355 :: CALL :: call :: Ljava/io/InputStream :: v18 = v15.getResourceAsStream(v16)::JM,86355:JM,86392
86381 :: NORM :: declaration :: Ljava/io/DataInputStream :: v26 = new java.io.DataInputStream::DD,86386
86386 :: EXPR :: modify :: Ljava/io/DataInputStream :: p0 $this .file = v26::
86391 :: EXPR :: assign :: null :: PHI v20 = #(null), #(null), #(null), v11, v11, v11, v11::DD,86393
86393 :: EXPR :: assign :: null :: PHI v25 = v20, v24::CF,86381
86392 :: EXPR :: assign :: null :: PHI v24 = v11, v11, v18::DD,86393
86413 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.readIntoBuffer()::CD,86420:CD,86469
86417 :: EXPR :: reference :: J :: v3 = p0 $this .seekPosition::DD,86420
86420 :: EXPR :: assign :: Ljava/lang/Object :: v5 = v3 && #(-4096 l)::DD,86465
86465 :: EXPR :: modify :: J :: p0 $this .bufferOffset = v5::
86469 :: CALL :: call :: V :: p0 $this .resetPointer()::CL,83871
86529 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.newStore(long)::CD,86537:CD,86576:JM,86547:JM,86580
86534 :: EXPR :: reference :: Lorg/hsqldb/persist/RandomAccessInterface :: v5 = p0 $this .store::DD,86537
86537 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 37::CD,86547:CD,86548:CD,86557:CD,86564:CD,86570:CD,86668
86538 :: EXPR :: reference :: Lorg/hsqldb/Database :: v14 = p0 $this .database::
86541 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v15 = v14.logger::
86544 :: EXPR :: reference :: J :: v16 = v15.propNioMaxSize::DD,86547
86547 :: EXPR :: assign :: Z :: v17 = p1 $requiredPosition  == v16::DD,86548
86548 :: PRED :: IF :: Z :: if (v17 > #(0)) goto 30::CD,86668
86550 :: EXPR :: modify :: Z :: p0 $this .preNio = v20::
86557 :: CALL :: call :: J :: v9 = v7.getFilePointer()::CL,87251:CL,91948
86564 :: CALL :: call :: V :: v10.synch()::CL,75199:CL,65803
86570 :: CALL :: call :: V :: v12.close()::CL,65907
86573 :: EXPR :: reference :: Z :: v22 = p0 $this .preNio::DD,86576
86577 :: EXPR :: reference :: J :: v23 = p0 $this .initialMaxLength::DD,86580
86576 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 147::CD,86580:CD,86581:CD,86635:JM,78368:JM,78371:JM,78434:JM,78405:JM,78374:JM,78409:JM,78441:JM,78381:JM,78448:JM,74003:JM,78420:JM,78390:JM,74070:JM,74009:JM,78394:JM,78365:CD,86662
86581 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 147::CD,86582:JM,92036:JM,92072:JM,92008:JM,91983:JM,92046:JM,92019:JM,91987:JM,92053:JM,92086:JM,91990:JM,91993:JM,91998:JM,92030:CD,86618:CD,86635:JM,78368:JM,78371:JM,78434:JM,78405:JM,78374:JM,78409:JM,78441:JM,78381:JM,78448:JM,74003:JM,78420:JM,78390:JM,74070:JM,74009:JM,78394:JM,78365:CD,86662
86580 :: EXPR :: assign :: Z :: v24 = v23 == p1 $requiredPosition ::DD,86581
86582 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFileNIO :: v25 = new org.hsqldb.persist.RAFileNIO::DD,86612
86612 :: EXPR :: modify :: Lorg/hsqldb/persist/RandomAccessInterface :: p0 $this .store = v25::
86618 :: CALL :: call :: V :: v34.seek(v21)::CL,75879:CL,66637
86622 :: EXPR :: modify :: Z :: p0 $this .preNio = #(0)::
86625 :: EXPR :: modify :: Z :: p0 $this .isNio = #(1)::
86629 :: EXPR :: modify :: Z :: p0 $this .preNio = #(0)::
86632 :: EXPR :: modify :: Z :: p0 $this .isNio = #(0)::
86635 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFile :: v38 = new org.hsqldb.persist.RAFile::DD,86656
86656 :: EXPR :: modify :: Lorg/hsqldb/persist/RandomAccessInterface :: p0 $this .store = v38::
86662 :: CALL :: call :: V :: v44.seek(v21)::CL,75879:CL,66637
86668 :: EXPR :: assign :: null :: PHI v20 = #(1), #(0)::DD,86550
86713 :: EXIT :: exit :: I :: org.hsqldb.lib.HsqlByteArrayInputStream.read([],int,int)::JM,78754:JM,78779:JM,78749:JM,87034:JM,87069:JM,87039
86712 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayInputStream.read([],int,int)::CE,86713:CD,86725:JM,86730:JM,86765
86719 :: EXPR :: reference :: I :: v6 = p0 $this .pos::DD,86725
86722 :: EXPR :: reference :: I :: v7 = p0 $this .count::DD,86725
86725 :: PRED :: IF :: Z :: if (v6 < v7) goto 14::CD,86726:CD,86730:CD,86734:CD,86742:CD,86765
86727 :: EXPR :: reference :: I :: v8 = p0 $this .pos::DD,86730
86726 :: NORM :: compound :: I :: return #(-1)::DD,86713
86731 :: EXPR :: reference :: I :: v10 = p0 $this .count::DD,86734
86730 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v8 + p3 $len ::DD,86734
86735 :: EXPR :: reference :: I :: v11 = p0 $this .count::DD,86741
86734 :: PRED :: IF :: Z :: if (v9 <= v10) goto 37::CF,86765:CD,86741
86738 :: EXPR :: reference :: I :: v12 = p0 $this .pos::DD,86741
86741 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 - v12::DD,86765
86743 :: NORM :: compound :: I :: return #(0)::DD,86713
86742 :: PRED :: IF :: Z :: if (v14 > #(0)) goto 43::CD,86743:CD,86760:CD,86764
86757 :: EXPR :: reference :: I :: v19 = p0 $this .pos::DD,86760
86761 :: EXPR :: modify :: I :: p0 $this .pos = v20::
86760 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 + v14::DD,86761
86765 :: EXPR :: assign :: null :: PHI v14 = p3 $len , v13::DD,86742:DD,86760:DD,86764
86764 :: NORM :: compound :: I :: return v14::DD,86713
86786 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.fileSeek(long)::CD,86794:CD,86795:CD,86810:CD,86811:CD,86813
86791 :: EXPR :: reference :: J :: v4 = p0 $this .realPosition::DD,86794:DD,86813
86795 :: PRED :: IF :: Z :: if (v5 >= #(0)) goto 35::CF,86813:CD,86796
86794 :: EXPR :: assign :: Z :: v5 = p1 $position  == v4::DD,86795
86796 :: CALL :: call :: V :: p0 $this .resetStream()::CL,86317
86804 :: CALL :: call :: J :: v14 = v11.skip(v12)::JM,86809
86809 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v9 + v14::DD,86813
86811 :: PRED :: IF :: Z :: if (v10 > #(0)) goto 22::CD,86804:CD,86809:CD,86810:CD,86813
86810 :: EXPR :: assign :: Z :: v10 = p1 $position  == v9::DD,86811
86813 :: EXPR :: assign :: null :: PHI v9 = v4, #(0 l), v15::DD,86809:DD,86810
86873 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.getStorage(org.hsqldb.Database,java.lang.String,java.lang.String)::CD,86882:CD,86886
86879 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v5 = p1 $database .logger::JM,86882:JM,86886
86882 :: CALL :: call :: Z :: v7 = v5.isStoredFileAccess()::JM,86882:JM,86886
86886 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CD,86892
86892 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v17 = newScaledRAFile(p1 $database , p2 $pathName , v14, #(3))::CL,70845
86943 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.read([],int,int)::CD,86953
86953 :: CALL :: call :: V :: v6.read(p1 $b , p2 $offset , p3 $length )::CL,92177:CL,78591
86964 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.read([],int,int)::CD,86974:CD,87003:CD,87016:CD,87024:CD,87034:CD,87035:CD,87039:JM,87069
86971 :: EXPR :: reference :: Z :: v6 = p0 $this .bufferDirty::DD,86974
86975 :: EXPR :: reference :: J :: v8 = p0 $this .seekPosition::DD,86981
86974 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 39::CD,86981:CD,86982:CD,86997
86978 :: EXPR :: reference :: J :: v9 = p0 $this .bufferOffset::DD,86981
86981 :: EXPR :: assign :: Z :: v10 = v8 == v9::DD,86982
86983 :: EXPR :: reference :: J :: v11 = p0 $this .seekPosition::DD,86995
86982 :: PRED :: IF :: Z :: if (v10 < #(0)) goto 39::CD,86992:CD,86993:CD,86994:CD,86995:CD,86996:CD,86997
86986 :: EXPR :: reference :: J :: v12 = p0 $this .bufferOffset::DD,86994
86989 :: EXPR :: reference :: [B :: v13 = p0 $this .buffer::DD,86992
86993 :: EXPR :: assign :: J :: v15 = CONVERT I to J v14::CF,86994
86992 :: EXPR :: assign :: I :: v14 = v13.length::CF,86993
86995 :: EXPR :: assign :: Z :: v17 = v11 == v16::DD,86996
86994 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v12 + v15::CF,86995
86997 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,79047
86996 :: PRED :: IF :: Z :: if (v17 < #(0)) goto 43::CD,86997
87003 :: CALL :: call :: V :: v19.reset()::CL,78578
87016 :: CALL :: call :: J :: v26 = v21.skip(v24)::CL,79150
87024 :: CALL :: call :: I :: v29 = v27.read(p1 $b , p2 $offset , p3 $length )::JM,87034:JM,87069:JM,87039:CL,86712
87031 :: EXPR :: reference :: J :: v30 = p0 $this .seekPosition::DD,87035
87035 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v30 + v31::DD,87036
87034 :: EXPR :: assign :: J :: v31 = CONVERT I to J v29::CF,87035
87036 :: EXPR :: modify :: J :: p0 $this .seekPosition = v32::
87039 :: PRED :: IF :: Z :: if (v29 >= p3 $length ) goto 154::CD,87046:CD,87047:CD,87060:CD,87069:CD,87070:CD,87071
87040 :: EXPR :: reference :: J :: v33 = p0 $this .seekPosition::DD,87046
87043 :: EXPR :: reference :: J :: v34 = p0 $this .realPosition::DD,87046
87047 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 117::CD,87051
87046 :: EXPR :: assign :: Z :: v35 = v33 == v34::DD,87047
87051 :: CALL :: call :: V :: p0 $this .fileSeek(v36)::CL,86786
87060 :: CALL :: call :: V :: v38.readFully(p1 $b , v39, v40)::
87066 :: EXPR :: reference :: J :: v42 = p0 $this .seekPosition::DD,87071
87069 :: EXPR :: assign :: Ljava/lang/Object :: v43 = p3 $length  - v29::CF,87070
87071 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v42 + v44::DD,87072
87070 :: EXPR :: assign :: J :: v44 = CONVERT I to J v43::CF,87071
87072 :: EXPR :: modify :: J :: p0 $this .seekPosition = v45::
87075 :: EXPR :: reference :: J :: v46 = p0 $this .seekPosition::DD,87078
87078 :: EXPR :: modify :: J :: p0 $this .realPosition = v46::
87174 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.write([],int,int)::CD,87184
87184 :: CALL :: call :: V :: v6.write(p1 $b , p2 $offset , p3 $length )::CL,75969:CL,92268
87217 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileHybrid.getFilePointer()::JM,79377
87216 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.getFilePointer()::CE,87217:CD,87223:CD,87227
87223 :: CALL :: call :: J :: v5 = v3.getFilePointer()::JM,87227:CL,87251:CL,91948
87227 :: NORM :: compound :: J :: return v5::DD,87217
87229 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileSimple.getFilePointer()::CE,87230:CD,87236:CD,87240
87230 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileSimple.getFilePointer()::JM,79377
87233 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v3 = p0 $this .file::JM,87236:JM,87240
87236 :: CALL :: call :: J :: v5 = v3.getFilePointer()::JM,87236:JM,87240
87240 :: NORM :: compound :: J :: return v5::CF,87230
87243 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileInJar.getFilePointer()::JM,79377
87242 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileInJar.getFilePointer()::CE,87243:CD,87249
87246 :: EXPR :: reference :: J :: v3 = p0 $this .seekPosition::DD,87249
87249 :: NORM :: compound :: J :: return v3::CF,87243
87251 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.getFilePointer()::CE,87252:CD,87258
87252 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFile.getFilePointer()::JM,79377:JM,87227
87255 :: EXPR :: reference :: J :: v3 = p0 $this .seekPosition::DD,87258
87258 :: NORM :: compound :: J :: return v3::DD,87252
87261 :: EXIT :: exit :: J :: org.hsqldb.persist.RAStorageWrapper.getFilePointer()::JM,79377
87260 :: ENTR :: entry :: null :: org.hsqldb.persist.RAStorageWrapper.getFilePointer()::CE,87261:CD,87267:CD,87271
87264 :: EXPR :: reference :: Lorg/hsqldb/lib/Storage :: v3 = p0 $this .file::JM,87267:JM,87271
87267 :: CALL :: call :: J :: v5 = v3.getFilePointer()::JM,87267:JM,87271
87271 :: NORM :: compound :: J :: return v5::CF,87261
87421 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.fastQuickSort()::JM,72433:JM,72436:JM,72440:JM,72444:CD,87435:CD,87486:CD,87490
87435 :: CALL :: call :: Z :: v12 = v3.push(#(0), v10)::CL,88926
87442 :: CALL :: call :: I :: v16 = v3.peekKey()::JM,87454:CL,88942
87446 :: CALL :: call :: I :: v18 = v3.peekValue()::JM,87454:CL,88959
87450 :: CALL :: call :: Z :: v20 = v3.pop()::CL,88976
87455 :: PRED :: IF :: Z :: if (v21 < #(16)) goto 98::CD,87459:CD,87467:CD,87474:CD,87481
87454 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v18 - v16::DD,87455
87459 :: CALL :: call :: I :: v26 = p0 $this .partition(v16, v18, v24)::CL,92429
87467 :: CALL :: call :: Z :: v29 = v3.push(v16, v27)::CL,88926
87474 :: CALL :: call :: Z :: v32 = v3.push(v30, v18)::CL,88926
87481 :: CALL :: call :: V :: p0 $this .insertionSort(v16, v18)::CL,92492
87486 :: CALL :: call :: I :: v14 = v3.size()::JM,87490:CL,79714
87491 :: EXPR :: modify :: Z :: p0 $this .sorted = #(1)::
87490 :: PRED :: IF :: Z :: if (v14 > #(0)) goto 30::CD,87442:CD,87446:CD,87450:CD,87454:CD,87455:CD,87486
87540 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.setSize(int)::JM,87545
87545 :: EXPR :: modify :: I :: p0 $this .count = p1 $newSize ::
87551 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.setRange(int,int)::CE,87552:CD,87560:CD,87570:CD,87576
87552 :: EXIT :: exit :: I :: org.hsqldb.persist.DataSpaceManagerBlocks.BlockAccessor.setRange(int,int)::JM,79999
87560 :: CALL :: call :: V :: v5.setChanged(#(1))::CL,88452
87570 :: CALL :: call :: I :: v11 = v9.setRange(p1 $offset , p2 $currentUnits )::JM,87576:CL,92546
87576 :: NORM :: compound :: I :: return v11::DD,87552
87582 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.removeAll()::CD,87595:CD,87607
87586 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
87595 :: CALL :: call :: V :: clearArray(#(73), v5, #(0), v7)::CL,68175
87607 :: CALL :: call :: V :: clearArray(#(73), v9, #(0), v10)::CL,68175
87613 :: EXPR :: modify :: I :: p0 $this .count = #(0)::
87616 :: EXPR :: modify :: Z :: p0 $this .sorted = #(1)::
87634 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.adjustArray(int,java.lang.Object,int,int,int)::CD,87642:JM,87643:JM,87661
87643 :: PRED :: IF :: Z :: if (p5 $count  != #(0)) goto 14::CD,87661
87642 :: PRED :: IF :: Z :: if (p4 $index  >= p3 $usedElements ) goto 10::CD,87643
87661 :: PRED :: IF :: Z :: if (p5 $count  >= #(0)) goto 85::CD,87662
87662 :: CALL :: call :: V :: clearArray(p1 $type , p2 $array , v8, p3 $usedElements )::CL,68175
87710 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.extendLength(long)::CD,87715:CD,87723:CD,87724
87715 :: CALL :: call :: J :: v5 = p0 $this .getExtendLength(p1 $position )::JM,87723:JM,87740:CL,92564
87720 :: EXPR :: reference :: J :: v6 = p0 $this .fileLength::DD,87723
87723 :: EXPR :: assign :: Z :: v7 = v5 == v6::DD,87724
87724 :: PRED :: IF :: Z :: if (v7 <= #(0)) goto 60::
87740 :: EXPR :: modify :: J :: p0 $this .fileLength = v5::
87769 :: EXIT :: exit :: Z :: org.hsqldb.persist.RAFileNIO.ensureLength(long)::JM,80364
87768 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.ensureLength(long)::CE,87769:CD,87776:CD,87777:JM,87789
87773 :: EXPR :: reference :: J :: v4 = p0 $this .maxLength::DD,87776
87777 :: PRED :: IF :: Z :: if (v5 <= #(0)) goto 23::CD,87778:CD,87789:CD,87790
87776 :: EXPR :: assign :: Z :: v5 = p1 $newLength  == v4::DD,87777
87779 :: CALL :: call :: Z :: v10 = p0 $this .enlargeFile(p1 $newLength )::JM,87784:CL,92615
87778 :: NORM :: compound :: Z :: return #(0)::DD,87769
87785 :: NORM :: compound :: Z :: return #(0)::DD,87769
87784 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,87785:CD,87789:CD,87790
87786 :: EXPR :: reference :: J :: v7 = p0 $this .fileLength::DD,87789
87789 :: EXPR :: assign :: Z :: v8 = p1 $newLength  == v7::DD,87790
87791 :: NORM :: compound :: Z :: return #(1)::DD,87769
87790 :: PRED :: IF :: Z :: if (v8 > #(0)) goto 13::CD,87779:CD,87784:CD,87791
87805 :: EXIT :: exit :: J :: org.hsqldb.lib.ArrayUtil.getBinaryMultipleCeiling(long,long)::JM,80602:JM,87846:JM,87897:JM,87880:JM,93532
87804 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.getBinaryMultipleCeiling(long,long)::JM,87813:CF,87805:CD,87809:CD,87810:CD,87811:CD,87812:CD,87814:CD,87815
87809 :: EXPR :: assign :: Ljava/lang/Object :: v4 = -(p2 $null )::CF,87810
87811 :: EXPR :: assign :: Z :: v6 = v5 == p1 $value ::DD,87812
87810 :: EXPR :: assign :: Ljava/lang/Object :: v5 = p1 $value  && v4::DD,87811:DD,87813:DD,87815
87813 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 + p2 $null ::DD,87815
87812 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 21::CF,87815:CD,87813
87815 :: EXPR :: assign :: null :: PHI v9 = v5, v8::CF,87814
87814 :: NORM :: compound :: J :: return v9::CF,87805
87825 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.getIntArray()::CE,87826:CD,87832
87826 :: EXIT :: exit :: [I :: org.hsqldb.map.BitMap.getIntArray()::JM,101269
87829 :: EXPR :: reference :: [I :: v3 = p0 $this .map::DD,87832
87832 :: NORM :: compound :: [I :: return v3::CF,87826
87834 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.getNewBlock(long,boolean)::CD,87840:CD,87851:CD,87855:CD,87856:CD,87863:CD,87871:CD,87903:CD,87913
87841 :: CALL :: call :: J :: v8 = getBinaryMultipleCeiling(p1 $rowSize , #(4096 l))::JM,87846:CL,87804
87840 :: PRED :: IF :: Z :: if (p2 $null  == #(0)) goto 15::CF,87913:CD,87841:CD,87846:CD,87847
87847 :: EXPR :: assign :: J :: v10 = CONVERT I to J v9::DD,87913
87846 :: EXPR :: assign :: I :: v9 = CONVERT J to I v8::CF,87847
87848 :: EXPR :: reference :: J :: v12 = p0 $this .freshBlockFreePos::DD,87851
87851 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v12 + v11::DD,87855
87852 :: EXPR :: reference :: J :: v14 = p0 $this .freshBlockLimit::DD,87855
87855 :: EXPR :: assign :: Z :: v15 = v13 == v14::DD,87856
87857 :: CALL :: call :: Z :: v17 = p0 $this .getNewMainBlock(v11)::CL,92818
87856 :: PRED :: IF :: Z :: if (v15 <= #(0)) goto 48::CD,87857
87863 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v39 = error(#(468))::CL,33668
87871 :: PRED :: IF :: Z :: if (p2 $null  == #(0)) goto 108::CD,87872:CD,87880:CD,87881:CD,87882
87872 :: CALL :: call :: J :: v20 = getBinaryMultipleCeiling(v18, #(4096 l))::JM,87897:JM,87880:CL,87804
87877 :: EXPR :: reference :: J :: v21 = p0 $this .freshBlockFreePos::DD,87880
87881 :: EXPR :: assign :: Z :: v24 = v22 == #(0 l)::DD,87882
87880 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v20 - v21::DD,87881
87882 :: PRED :: IF :: Z :: if (v24 <= #(0)) goto 108::CD,87892
87892 :: CALL :: call :: V :: p0 $this .release(v28, v29)::CL,92932
87897 :: EXPR :: modify :: J :: p0 $this .freshBlockFreePos = v20::
87900 :: EXPR :: reference :: J :: v32 = p0 $this .freshBlockFreePos::DD,87903
87903 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v11::DD,87904
87904 :: EXPR :: modify :: J :: p0 $this .freshBlockFreePos = v33::
87913 :: EXPR :: assign :: null :: PHI v11 = p1 $rowSize , v10::DD,87851:DD,87903
87951 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.getValue(int)::CE,87952:CD,87973
87952 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.getValue(int)::JM,80627:JM,80724:JM,88972
87966 :: EXPR :: reference :: [I :: v6 = p0 $this .values::
87969 :: EXPR :: reference :: I :: v7 = v6[p1 $i ]::DD,87973
87973 :: NORM :: compound :: I :: return v7::DD,87952
87981 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.findFirstGreaterEqualKeyIndex(int)::JM,80746
87980 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.findFirstGreaterEqualKeyIndex(int)::CE,87981:CD,87985:CD,87993:CD,87995:CD,87996
87985 :: CALL :: call :: I :: v5 = p0 $this .findFirstGreaterEqualSlotIndex(p1 $value )::JM,87993:JM,87996:CL,93001
87990 :: EXPR :: reference :: I :: v6 = p0 $this .count::DD,87993
87993 :: PRED :: IF :: Z :: if (v5 != v6) goto 19::CD,87996
87995 :: NORM :: compound :: I :: return v8::DD,87981
87996 :: EXPR :: assign :: null :: PHI v8 = #(-1), v5::CF,87995
88005 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.getKey(int)::JM,80658:JM,88955
88004 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.getKey(int)::CE,88005:CD,88026
88019 :: EXPR :: reference :: [I :: v6 = p0 $this .keys::
88022 :: EXPR :: reference :: I :: v7 = v6[p1 $i ]::DD,88026
88026 :: NORM :: compound :: I :: return v7::DD,88005
88033 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.remove(int)::CD,88056
88038 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
88053 :: EXPR :: reference :: I :: v10 = p0 $this .count::DD,88056
88057 :: EXPR :: modify :: I :: p0 $this .count = v11::
88056 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::DD,88057
88060 :: EXPR :: reference :: [I :: v12 = p0 $this .keys::
88063 :: EXPR :: reference :: I :: v13 = p0 $this .count::
88066 :: EXPR :: modify :: I :: v12[v13] = #(0)::
88070 :: EXPR :: reference :: [I :: v15 = p0 $this .values::
88073 :: EXPR :: reference :: I :: v16 = p0 $this .count::
88076 :: EXPR :: modify :: I :: v15[v16] = #(0)::
88099 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.add(int,int)::CD,88111:JM,88161:JM,88180:JM,88168
88105 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,88111
88108 :: EXPR :: reference :: I :: v6 = p0 $this .capacity::DD,88111
88111 :: PRED :: IF :: Z :: if (v5 != v6) goto 25::CD,88115:CD,88123:CD,88130:CD,88135:CD,88175:CD,88180
88112 :: EXPR :: reference :: Z :: v7 = p0 $this .fixedSize::DD,88115
88115 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 21::CD,88117:CD,88123:CD,88130:CD,88135:CD,88175:CD,88180
88117 :: CALL :: call :: V :: p0 $this .doubleCapacity()::CL,93073
88120 :: EXPR :: reference :: Z :: v10 = p0 $this .sorted::DD,88123
88123 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 37::CD,88124
88124 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,87421
88127 :: EXPR :: reference :: Z :: v12 = p0 $this .sortOnValues::DD,88130
88130 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,88180
88132 :: EXPR :: modify :: I :: p0 $this .targetSearchValue = v13::
88135 :: CALL :: call :: I :: v16 = p0 $this .binarySlotSearch(#(1))::CL,93128
88140 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
88158 :: EXPR :: reference :: [I :: v22 = p0 $this .keys::
88161 :: EXPR :: modify :: I :: v22[v16] = p1 $key ::
88165 :: EXPR :: reference :: [I :: v23 = p0 $this .values::
88168 :: EXPR :: modify :: I :: v23[v16] = p2 $value ::
88172 :: EXPR :: reference :: I :: v24 = p0 $this .count::DD,88175
88175 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v24 + #(1)::DD,88176
88176 :: EXPR :: modify :: I :: p0 $this .count = v25::
88180 :: EXPR :: assign :: null :: PHI v13 = p2 $value , p1 $key ::DD,88132
88218 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.put(org.hsqldb.persist.CachedObject)::CD,88227:CD,88233:CD,88263
88227 :: CALL :: call :: Z :: v7 = p0 $this .preparePut(v5)::CL,93175
88233 :: CALL :: call :: V :: p0 $this .putNoCheck(p1 $row )::CL,93402
88263 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v24 = error(#(471), v22)::CL,30204
88278 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputBinary.reset(int)::CD,88283
88283 :: CALL :: call :: V :: p0 $this .reset(p1 $newSize )::CL,93513
88287 :: EXPR :: modify :: I :: p0 $this .storageSize = #(0)::
88290 :: EXPR :: modify :: I :: p0 $this .sizePosition = #(-1)::
88308 :: NORM :: declaration :: Lorg/hsqldb/map/BitMap :: v5 = new org.hsqldb.map.BitMap::DD,88314
88314 :: EXPR :: modify :: Lorg/hsqldb/map/BitMap :: p0 $this .bitMap = v5::
88317 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
88327 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getDirectory(int,boolean)::CE,88328:CD,88333:CD,88337:CD,88345:CD,88346:CD,88347
88328 :: EXIT :: exit :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: org.hsqldb.persist.DataSpaceManagerBlocks.getDirectory(int,boolean)::JM,80957:JM,88922:JM,105614
88333 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $fileBlockIndex  / #(2048)::
88337 :: CALL :: call :: [I :: v9 = v7.getIntArray()::CL,72940
88341 :: EXPR :: reference :: I :: v10 = v9[v6]::DD,88345
88345 :: EXPR :: assign :: J :: v11 = CONVERT I to J v10::DD,88346
88347 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 35::CD,88348:CD,88358:CD,88364:CD,88365
88346 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,88347
88348 :: NORM :: compound :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: return #(null)::DD,88328
88358 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v22 = v20.get(v19, p2 $keep )::JM,88364:CL,64135
88365 :: NORM :: compound :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: return v23::DD,88328
88364 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,88365
88385 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.createDirectory(int)::JM,93603:JM,93591:JM,93595:JM,93599:CD,88398:CD,88403:CD,88404:CD,88411:CD,88412:CD,88413:CD,88414:CD,88418:CD,88429
88398 :: CALL :: call :: V :: v7.add(v4, #(0))::CL,72750
88403 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p1 $fileBlockIndex  / #(2048)::
88404 :: CALL :: call :: J :: v12 = v4.getPos()::JM,88412:CL,57322
88408 :: EXPR :: reference :: I :: v13 = p0 $this .dataFileScale::DD,88411
88411 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::CF,88412
88413 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 / #(4096 l)::CF,88414
88412 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 * v14::DD,88413
88414 :: EXPR :: assign :: I :: v18 = CONVERT J to I v17::DD,88422
88418 :: CALL :: call :: [I :: v21 = v19.getIntArray()::CL,72940
88422 :: EXPR :: modify :: I :: v21[v10] = v18::
88429 :: CALL :: call :: V :: v22.setChanged(#(1))::CL,88452
88452 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.setChanged(boolean)::JM,88457
88457 :: EXPR :: modify :: Z :: p0 $this .hasChanged = p1 $flag ::
88463 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.updateAccessCounts()::CD,88470
88467 :: EXPR :: reference :: Z :: v3 = p0 $this .updateAccess::DD,88470
88470 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 62::CD,88504:CD,88505:CD,88507
88472 :: EXPR :: reference :: [Ljava/lang/Object :: v7 = p0 $this .objectKeyTable::
88475 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v7[v18]::DD,88479
88479 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,88480
88481 :: CALL :: call :: I :: v12 = v9.getAccessCount()::JM,88496:JM,88492:CL,93622
88480 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 50::CD,88481:CD,88492:CF,88500
88485 :: EXPR :: reference :: [I :: v13 = p0 $this .accessTable::
88488 :: EXPR :: reference :: I :: v14 = v13[v18]::DD,88492
88493 :: EXPR :: reference :: [I :: v15 = p0 $this .accessTable::
88492 :: PRED :: IF :: Z :: if (v12 <= v14) goto 50::CF,88500
88496 :: EXPR :: modify :: I :: v15[v18] = v12::
88501 :: EXPR :: reference :: [Ljava/lang/Object :: v5 = p0 $this .objectKeyTable::DD,88504
88500 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,88507
88505 :: PRED :: IF :: Z :: if (v18 < v6) goto 13::CD,88479:CD,88480:CD,88500:CD,88504:CD,88507
88504 :: EXPR :: assign :: I :: v6 = v5.length::CF,88505
88507 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,88500:DD,88505
88529 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.updateObjectAccessCounts()::CD,88536
88533 :: EXPR :: reference :: Z :: v3 = p0 $this .updateAccess::DD,88536
88536 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 52::CD,88562:CD,88563:CD,88565
88538 :: EXPR :: reference :: [Ljava/lang/Object :: v7 = p0 $this .objectKeyTable::
88541 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v7[v16]::DD,88545
88545 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,88546
88546 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 40::CD,88554:CF,88558
88554 :: CALL :: call :: V :: v9.updateAccessCount(v12)::CL,93631
88559 :: EXPR :: reference :: [Ljava/lang/Object :: v5 = p0 $this .objectKeyTable::DD,88562
88558 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,88565
88563 :: PRED :: IF :: Z :: if (v16 < v6) goto 13::CD,88545:CD,88546:CD,88558:CD,88562:CD,88565
88562 :: EXPR :: assign :: I :: v6 = v5.length::CF,88563
88565 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,88558:DD,88563
88585 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.getObjectLookup(long)::JM,81053
88584 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.getObjectLookup(long)::CE,88585:CD,88593:CD,88625:CD,88626:CD,88627:JM,88614
88593 :: CALL :: call :: I :: v7 = v4.getLookup(v5)::JM,88627:CL,58807
88609 :: CALL :: call :: J :: v13 = v9.longKey(v11)::JM,88614:CL,93642
88615 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 41::CD,88620:CD,88625:CD,88627
88614 :: EXPR :: assign :: Z :: v14 = v13 == p1 $key ::DD,88615
88620 :: CALL :: call :: I :: v17 = v15.getNextLookup(v18)::JM,88627:CL,48120
88625 :: PRED :: IF :: Z :: if (v18 >= #(0)) goto 14::CD,88609:CD,88614:CD,88615:CF,88626
88627 :: EXPR :: assign :: null :: PHI v18 = v7, v17::DD,88625:DD,88626
88626 :: NORM :: compound :: I :: return v18::DD,88585
88643 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.readObject(long,int)::CD,88652:CD,88665:CD,88679:CD,88692
88652 :: CALL :: call :: V :: v5.resetBlock(p1 $pos , p2 $null )::CL,93669:CL,93654
88665 :: CALL :: call :: V :: v7.seek(v10)::CL,66626:CL,66637:CL,66668
88679 :: CALL :: call :: V :: v12.read(v15, #(0), p2 $null )::CL,86964:CL,78591:CL,86943
88692 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v23 = error(#(466), v18)::CL,45062
88717 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.BlockObjectStore.get(org.hsqldb.rowio.RowInputInterface)::JM,81311
88716 :: ENTR :: entry :: null :: org.hsqldb.persist.BlockObjectStore.get(org.hsqldb.rowio.RowInputInterface)::CE,88717:CD,88721:CD,88744:CD,88757
88721 :: CALL :: call :: Lorg/hsqldb/persist/CachedObject :: v5 = p0 $this .getNewInstance()::JM,88757:CL,93760
88744 :: CALL :: call :: Ljava/lang/RuntimeException :: v17 = runtimeError(#(201), #(BlockObjectStore))::CL,33706
88757 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v5::DD,88717
88770 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.clearUnchanged()::CD,88777:CD,88829:CD,88833
88777 :: CALL :: call :: V :: v3.reset()::CL,75752
88784 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.next()::CL,35178
88790 :: CALL :: call :: Z :: v14 = v12.isKeepInMemory()::JM,88794:CL,93795
88795 :: CALL :: call :: Z :: v16 = v12.hasChanged()::JM,88799:CL,75833
88794 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 74::CD,88795:CD,88799
88799 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 74::CD,88800:CD,88807:CD,88813:CD,88817:CD,88818
88800 :: CALL :: call :: V :: v12.setInMemory(#(0))::CL,93809
88807 :: CALL :: call :: V :: v18.remove()::CL,93820
88810 :: EXPR :: reference :: J :: v20 = p0 $this .cacheBytesLength::DD,88818
88813 :: CALL :: call :: I :: v22 = v12.getStorageSize()::JM,88817:CL,57331
88817 :: EXPR :: assign :: J :: v23 = CONVERT I to J v22::CF,88818
88819 :: EXPR :: modify :: J :: p0 $this .cacheBytesLength = v24::
88818 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v20 - v23::DD,88819
88829 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,88833:CL,35301
88833 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,88784:CD,88790:CD,88794:CD,88829
88855 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.putUsingReserve(org.hsqldb.persist.CachedObject)::CD,88864:CD,88884:CD,88890
88864 :: CALL :: call :: Z :: v7 = p0 $this .preparePut(v5)::CL,93175
88884 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v17 = error(#(471), v15)::CL,30204
88890 :: CALL :: call :: V :: p0 $this .putNoCheck(p1 $row )::CL,93402
88911 :: EXIT :: exit :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: org.hsqldb.persist.DataSpaceManagerBlocks.access$0(org.hsqldb.persist.DataSpaceManagerBlocks,int,boolean)::JM,81389
88910 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.access$0(org.hsqldb.persist.DataSpaceManagerBlocks,int,boolean)::CE,88911:CD,88916:CD,88922
88916 :: CALL :: call :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v6 = p1 $null .getDirectory(p2 $null , p3 $null )::JM,88922:CL,88327
88922 :: NORM :: compound :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: return v6::DD,88911
88926 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.push(int,int)::CD,88932
88932 :: CALL :: call :: Z :: v6 = p0 $this .addUnsorted(p1 $key , p2 $value )::CL,94104
88943 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.peekKey()::JM,81597:JM,87454
88942 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.peekKey()::CE,88943:CD,88950:CD,88955
88950 :: CALL :: call :: I :: v7 = p0 $this .getKey(v5)::JM,88955:CL,88004
88955 :: NORM :: compound :: I :: return v7::DD,88943
88959 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.peekValue()::CE,88960:CD,88967:CD,88972
88960 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.peekValue()::JM,81597:JM,87454
88967 :: CALL :: call :: I :: v7 = p0 $this .getValue(v5)::JM,88972:CL,87951
88972 :: NORM :: compound :: I :: return v7::DD,88960
88976 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.pop()::CD,88983
88980 :: EXPR :: reference :: I :: v3 = p0 $this .count::DD,88983
88983 :: PRED :: IF :: Z :: if (v3 <= #(0)) goto 20::CD,88987
88984 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,88987
88987 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(1)::DD,88988
88988 :: EXPR :: modify :: I :: p0 $this .count = v7::
89000 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.partition(int,int,int)::CD,89007:CD,89027:CD,89028:CD,89029:CD,89037
89007 :: CALL :: call :: V :: p0 $this .swap(p3 $pivot , p2 $end )::CL,94235
89013 :: CALL :: call :: Z :: v10 = p0 $this .lessThan(v17, p2 $end )::JM,89019:CL,94280
89019 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,89020
89020 :: CALL :: call :: V :: p0 $this .swap(v17, v16)::CL,94235
89027 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p2 $end  - #(1)::CF,89028
89026 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,89037
89029 :: CALL :: call :: V :: p0 $this .swap(v16, p2 $end )::CL,94235
89028 :: PRED :: IF :: Z :: if (v17 <= v8) goto 19::CD,89013:CD,89019:CD,89026:CD,89027:CD,89037
89037 :: EXPR :: assign :: null :: PHI v17 = p1 $start , v15::DD,89026:DD,89028:CF,89027
89063 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.insertionSort(int,int)::CD,89069:CD,89089:CD,89093:JM,89073
89069 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $lo0  + #(1)::DD,89093
89073 :: PRED :: IF :: Z :: if (v13 <= p1 $lo0 ) goto 37::CD,89075:CD,89081:CF,89082
89072 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(-1)::DD,89092:CF,89091
89075 :: CALL :: call :: Z :: v9 = p0 $this .lessThan(v17, v7)::JM,89081:CL,94280
89081 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,89072:CD,89073:CD,89091:CD,89092:CF,89082
89083 :: CALL :: call :: V :: p0 $this .moveAndInsertRow(v17, v13)::CL,94309
89082 :: PRED :: IF :: Z :: if (v17 == v13) goto 47::CD,89083:CF,89088
89089 :: PRED :: IF :: Z :: if (v16 <= p2 $hi0 ) goto 10::CD,89073:CD,89082:CD,89088:CD,89091:CD,89092:CD,89093
89088 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,89093
89091 :: EXPR :: assign :: null :: PHI v17 = v16, v17::CF,89092:DD,89082:DD,89088:DD,89091
89093 :: EXPR :: assign :: null :: PHI v16 = v6, v15::DD,89089:DD,89091:DD,89092
89092 :: EXPR :: assign :: null :: PHI v13 = v16, v12::DD,89072:DD,89073:DD,89082
89117 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.compare(int)::CE,89118:CD,89132
89118 :: EXIT :: exit :: I :: org.hsqldb.lib.IntIndex.compare(int)::JM,81698:JM,81700
89122 :: EXPR :: reference :: I :: v4 = p0 $this .targetSearchValue::DD,89132
89125 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
89128 :: EXPR :: reference :: I :: v6 = v5[p1 $i ]::DD,89132
89133 :: NORM :: compound :: I :: return #(1)::CF,89118
89132 :: PRED :: IF :: Z :: if (v4 <= v6) goto 16::CD,89133:CD,89144
89134 :: EXPR :: reference :: I :: v7 = p0 $this .targetSearchValue::DD,89144
89137 :: EXPR :: reference :: [I :: v8 = p0 $this .keys::
89140 :: EXPR :: reference :: I :: v9 = v8[p1 $i ]::DD,89144
89145 :: NORM :: compound :: I :: return #(-1)::CF,89118
89144 :: PRED :: IF :: Z :: if (v7 >= v9) goto 31::CD,89145:CD,89146
89146 :: NORM :: compound :: I :: return #(0)::CF,89118
89157 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.countSetBits()::JM,81813:JM,81884
89156 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.countSetBits()::CE,89157:CD,89182:CD,89183:CD,89187:CD,89188:CD,89212:CD,89214:CD,89215:CD,89216
89161 :: EXPR :: reference :: [I :: v7 = p0 $this .map::
89164 :: EXPR :: reference :: I :: v8 = v7[v18]::DD,89168:DD,89170:JM,89173:JM,89177
89168 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,89170:CD,89213
89171 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v17 + #(32)::DD,89213
89170 :: PRED :: IF :: Z :: if (v8 != #(-1)) goto 34::CD,89171:CD,89173:CD,89177:CD,89213
89173 :: CALL :: call :: I :: v12 = bitCount(v8)::JM,89173:JM,89177
89177 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v17 + v12::DD,89213
89179 :: EXPR :: reference :: I :: v4 = p0 $this .limitPos::DD,89182
89178 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,89215:CF,89214
89183 :: PRED :: IF :: Z :: if (v18 < v6) goto 8::CD,89168:CD,89178:CD,89182:CD,89213:CD,89214:CD,89215
89182 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 / #(32)::CF,89183
89184 :: EXPR :: reference :: I :: v19 = p0 $this .limitPos::DD,89187
89187 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 % #(32)::DD,89188
89189 :: EXPR :: reference :: I :: v22 = p0 $this .limitPos::DD,89192
89188 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 99::CF,89216:CD,89192:CD,89193:CD,89194:CD,89201:CD,89206:CD,89207:CD,89211
89193 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v23 && #(31)::CF,89194
89192 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::DD,89193
89195 :: EXPR :: reference :: [I :: v27 = p0 $this .map::
89194 :: EXPR :: assign :: Ljava/lang/Object :: v26 = #(-2147483648) ? v25::DD,89206
89198 :: EXPR :: reference :: I :: v28 = p0 $this .limitPos::DD,89201
89201 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 / #(32)::
89202 :: EXPR :: reference :: I :: v30 = v27[v29]::DD,89206
89207 :: CALL :: call :: I :: v33 = bitCount(v31)::JM,89207:JM,89211
89206 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v30 && v26::JM,89207:JM,89211
89211 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v17 + v33::DD,89216
89213 :: EXPR :: assign :: null :: PHI v14 = v17, v10, v13::DD,89214:CF,89178
89212 :: NORM :: compound :: I :: return v35::CF,89157
89215 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::DD,89178:DD,89183
89214 :: EXPR :: assign :: null :: PHI v17 = #(0), v14::CF,89215:DD,89171:DD,89177:DD,89211:DD,89213:DD,89216
89216 :: EXPR :: assign :: null :: PHI v35 = v17, v34::CF,89212
89255 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.countSetBitsEnd()::JM,81899
89254 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.countSetBitsEnd()::CE,89255:CD,89261:CD,89262:CD,89288:CD,89289:CD,89290:CD,89291:CD,89292
89258 :: EXPR :: reference :: I :: v4 = p0 $this .limitPos::DD,89261
89261 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 / #(32)::DD,89262
89262 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 - #(1)::DD,89291
89264 :: EXPR :: reference :: [I :: v9 = p0 $this .map::
89267 :: EXPR :: reference :: I :: v10 = v9[v15]::DD,89271
89271 :: PRED :: IF :: Z :: if (v10 != #(-1)) goto 32::CD,89272:CD,89281:CD,89285:CD,89287:CD,89288:CD,89290:CD,89291:CD,89292
89272 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v14 + #(32)::DD,89290
89281 :: CALL :: call :: I :: v19 = countSetBitsEnd(v17)::JM,89285:CL,94350
89285 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,89292
89287 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v15 + #(-1)::DD,89291:CF,89290
89289 :: NORM :: compound :: I :: return v21::CF,89255
89288 :: PRED :: IF :: Z :: if (v15 >= #(0)) goto 16::CF,89292:CD,89271
89291 :: EXPR :: assign :: null :: PHI v15 = v8, v13::DD,89287:DD,89288
89290 :: EXPR :: assign :: null :: PHI v14 = #(0), v12::CF,89291:DD,89272:DD,89285:DD,89292
89292 :: EXPR :: assign :: null :: PHI v21 = v20, v14::CF,89289
89315 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.reset()::CD,89331:CD,89332:CD,89340
89320 :: EXPR :: reference :: [I :: v6 = p0 $this .map::
89323 :: EXPR :: modify :: I :: v6[v9] = #(0)::
89327 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v9 + #(1)::DD,89340
89328 :: EXPR :: reference :: [I :: v4 = p0 $this .map::DD,89331
89331 :: EXPR :: assign :: I :: v5 = v4.length::CF,89332
89333 :: EXPR :: reference :: I :: v10 = p0 $this .initialSize::DD,89336
89332 :: PRED :: IF :: Z :: if (v9 < v5) goto 6::CD,89327:CD,89331:CD,89340
89336 :: EXPR :: modify :: I :: p0 $this .limitPos = v10::
89340 :: EXPR :: assign :: null :: PHI v9 = #(0), v8::DD,89327:DD,89332
89352 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.unsetRange(int,int)::CD,89358
89358 :: CALL :: call :: I :: v7 = p0 $this .setOrUnsetRange(p1 $pos , p2 $count , #(0))::CL,94379
90378 :: ENTR :: entry :: null :: org.hsqldb.lib.ArraySort.quickSort(java.lang.Object[],java.util.Comparator,int,int)::CD,90385:CD,90386:JM,90449:JM,90515
90385 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p4 $r  - p3 $l ::DD,90386
90386 :: PRED :: IF :: Z :: if (v7 <= #(16)) goto 194::CD,90397:CD,90403:CD,90417:CD,90423:CD,90437:CD,90443:CD,90449:CD,90450:CD,90455:CD,90464:CD,90470:CD,90475:CD,90480:CD,90486:CD,90487:CD,90496:CD,90501:CD,90508:CD,90515:CD,90516:CD,90517
90397 :: CALL :: call :: I :: v14 = p2 $comparator .compare(v11, v12)::JM,90403:CL,48059
90403 :: PRED :: IF :: Z :: if (v14 >= #(0)) goto 45::CD,90404
90404 :: CALL :: call :: V :: swap(p1 $array , p3 $l , v10)::CL,96948
90417 :: CALL :: call :: I :: v20 = p2 $comparator .compare(v17, v18)::JM,90423:CL,48059
90423 :: PRED :: IF :: Z :: if (v20 >= #(0)) goto 66::CD,90424
90424 :: CALL :: call :: V :: swap(p1 $array , p3 $l , p4 $r )::CL,96948
90437 :: CALL :: call :: I :: v25 = p2 $comparator .compare(v22, v23)::JM,90443:CL,48059
90443 :: PRED :: IF :: Z :: if (v25 >= #(0)) goto 88::CD,90444:CF,90449
90444 :: CALL :: call :: V :: swap(p1 $array , v10, p4 $r )::CL,96948
90449 :: EXPR :: assign :: Ljava/lang/Object :: v27 = p4 $r  - #(1)::DD,90516
90450 :: CALL :: call :: V :: swap(p1 $array , v10, v27)::CL,96948
90455 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v34 + #(1)::DD,90487:DD,90515
90464 :: CALL :: call :: I :: v33 = p2 $comparator .compare(v30, v31)::JM,90470:CL,48059
90470 :: PRED :: IF :: Z :: if (v33 < #(0)) goto 108::CF,90515:CF,90517:CD,90455:CD,90464:CD,90516
90475 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v41 + #(-1)::DD,90487:DD,90516:DD,90517
90480 :: CALL :: call :: I :: v40 = p2 $comparator .compare(v35, v38)::JM,90486:CL,48059
90487 :: PRED :: IF :: Z :: if (v37 >= v29) goto 161::CD,90455:CD,90464:CD,90470:CD,90475:CD,90480:CD,90486:CD,90489:CD,90515:CD,90516:CD,90517
90486 :: PRED :: IF :: Z :: if (v40 < #(0)) goto 130::CF,90517:CD,90475:CD,90480:CF,90487
90489 :: CALL :: call :: V :: swap(p1 $array , v29, v37)::CL,96948
90496 :: CALL :: call :: V :: swap(p1 $array , v29, v44)::CL,96948
90501 :: CALL :: call :: V :: quickSort(p1 $array , p2 $comparator , p3 $l , v37)::CL,90378
90508 :: CALL :: call :: V :: quickSort(p1 $array , p2 $comparator , v47, p4 $r )::CL,90378
90515 :: EXPR :: assign :: null :: PHI v34 = v29, v29, p3 $l ::CF,90516:DD,90455
90517 :: EXPR :: assign :: null :: PHI v41 = v37, v43::DD,90475
90516 :: EXPR :: assign :: null :: PHI v43 = v43, v37, v27::DD,90516:DD,90517:CF,90455
90598 :: ENTR :: entry :: null :: org.hsqldb.lib.ArraySort.insertionSort(java.lang.Object[],java.util.Comparator,int,int)::CD,90605:CD,90633:CD,90637:JM,90609
90605 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p3 $lo0  + #(1)::DD,90637
90609 :: PRED :: IF :: Z :: if (v16 <= p3 $lo0 ) goto 47::CD,90619:CD,90625:CF,90626
90608 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(-1)::DD,90636:CF,90635
90619 :: CALL :: call :: I :: v12 = p2 $comparator .compare(v8, v10)::JM,90625:CL,48059
90625 :: PRED :: IF :: Z :: if (v12 < #(0)) goto 15::CD,90608:CD,90609:CD,90635:CD,90636:CF,90626
90627 :: CALL :: call :: V :: moveAndInsertRow(p1 $array , v20, v16)::CL,96981
90626 :: PRED :: IF :: Z :: if (v20 == v16) goto 58::CD,90627:CF,90632
90633 :: PRED :: IF :: Z :: if (v19 <= p4 $hi0 ) goto 12::CD,90609:CD,90626:CD,90632:CD,90635:CD,90636:CD,90637
90632 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v20 + #(1)::DD,90637
90635 :: EXPR :: assign :: null :: PHI v20 = v19, v20::CF,90636:DD,90626:DD,90632:DD,90635
90637 :: EXPR :: assign :: null :: PHI v19 = v7, v18::DD,90633:DD,90635:DD,90636
90636 :: EXPR :: assign :: null :: PHI v16 = v19, v15::DD,90608:DD,90609:DD,90626
90663 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.copyShadow(org.hsqldb.persist.CachedObject[],int,int)::CE,90664:CD,90673:CD,90738:CD,90800:CD,90806:JM,90722:JM,90804
90664 :: EXIT :: exit :: I :: org.hsqldb.persist.DataFileCache.copyShadow(org.hsqldb.persist.CachedObject[],int,int)::JM,83687
90670 :: EXPR :: reference :: Lorg/hsqldb/persist/RAShadowFile :: v7 = p0 $this .shadowFile::DD,90673
90673 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 201::CF,90806:CD,90690:CD,90722:CD,90723:CD,90724:CD,90750:CD,90802:CD,90804
90690 :: CALL :: call :: V :: v15.start()::CL,86271
90714 :: CALL :: call :: I :: v28 = v24.copy(v23, v26)::JM,90720:CL,97016
90721 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v34 + #(1)::DD,90804:CF,90802
90720 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v32 + v28::DD,90802:CF,90721
90723 :: PRED :: IF :: Z :: if (v34 < v17) goto 44::CD,90714:CD,90720:CD,90721:CD,90722:CD,90802:CD,90804:CF,90724
90722 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p2 $offset  + p3 $count ::CF,90723
90724 :: PRED :: IF :: Z :: if (v32 <= #(0)) goto 132::CD,90728
90728 :: CALL :: call :: V :: v35.synch()::CL,97139
90738 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v68 = error(#(466), v62)::CL,45062
90750 :: CALL :: call :: V :: v38.stop()::CL,91004
90800 :: NORM :: compound :: I :: return v61::DD,90664
90802 :: EXPR :: assign :: null :: PHI v32 = #(0), v29::DD,90720:DD,90724:DD,90806
90804 :: EXPR :: assign :: null :: PHI v34 = p2 $offset , v31::DD,90721:DD,90723:CF,90722
90806 :: EXPR :: assign :: null :: PHI v61 = #(0), v32, v32::CF,90800
90849 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.setFileModified()::CD,90856:CD,90883
90853 :: EXPR :: reference :: Z :: v3 = p0 $this .fileModified::DD,90856
90857 :: CALL :: call :: I :: v6 = p0 $this .getFlags()::CL,66855
90856 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 55::CD,90857:CD,90866
90866 :: CALL :: call :: V :: p0 $this .setFlags(v9)::CL,66892
90874 :: EXPR :: modify :: Z :: p0 $this .fileModified = #(1)::
90883 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v19 = error(#(466), v14)::CL,45062
90904 :: ENTR :: entry :: null :: org.hsqldb.persist.DataFileCache.saveRowNoLock(org.hsqldb.persist.CachedObject)::CD,90912:CD,90918:CD,90934:CD,90963:CD,90969:CD,90984
90912 :: CALL :: call :: V :: v4.reset()::CL,97191
90918 :: CALL :: call :: V :: p1 $row .write(v6)::CL,97238:CL,97210:CL,97224
90934 :: CALL :: call :: V :: v8.seek(v13)::CL,66626:CL,66637:CL,66668
90963 :: CALL :: call :: V :: v15.write(v20, #(0), v26)::CL,75969:CL,87174
90969 :: CALL :: call :: V :: p1 $row .setChanged(#(0))::CL,88452
90984 :: CALL :: call :: Lorg/hsqldb/HsqlException :: v36 = error(#(466), v29)::CL,45062
91004 :: ENTR :: entry :: null :: org.hsqldb.lib.StopWatch.stop()::CD,91011
91008 :: EXPR :: reference :: Z :: v3 = p0 $this .running::DD,91011
91011 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 29::CD,91015:CD,91021:CD,91022
91012 :: EXPR :: reference :: J :: v5 = p0 $this .total::DD,91022
91015 :: CALL :: call :: J :: v7 = currentTimeMillis()::JM,91021
91018 :: EXPR :: reference :: J :: v8 = p0 $this .startTime::DD,91021
91021 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 - v8::CF,91022
91023 :: EXPR :: modify :: J :: p0 $this .total = v10::
91022 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v5 + v9::DD,91023
91026 :: EXPR :: modify :: Z :: p0 $this .running = #(0)::
91193 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.setCurrentBuffer(long)::CD,91201:JM,91203:JM,91241
91198 :: EXPR :: reference :: Z :: v4 = p0 $this .readOnly::DD,91201
91201 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 11::CD,91203:CD,91204:CD,91208:CD,91209
91203 :: EXPR :: assign :: Ljava/lang/Object :: v7 = p1 $offset  ? #(24)::CF,91204
91205 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v9 = p0 $this .buffers::DD,91208
91204 :: EXPR :: assign :: I :: v8 = CONVERT J to I v7::DD,91209
91209 :: PRED :: IF :: Z :: if (v8 != v10) goto 54::CD,91213:CD,91214:CD,91215:CD,91216:CD,91241
91208 :: EXPR :: assign :: I :: v10 = v9.length::CF,91209
91210 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v15 = p0 $this .buffers::DD,91213
91213 :: EXPR :: assign :: I :: v16 = v15.length::DD,91214
91215 :: EXPR :: assign :: J :: v19 = CONVERT I to J v18::DD,91216
91214 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v16 - #(1)::DD,91215
91217 :: EXPR :: modify :: J :: p0 $this .bufferPosition = v21::
91216 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 * #(16777216 l)::DD,91217
91220 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v22 = p0 $this .buffers::
91223 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v18]::DD,91227
91227 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = v23::
91231 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v11 = p0 $this .buffers::
91234 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v11[v8]::DD,91238
91238 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = v12::
91241 :: EXPR :: assign :: Ljava/lang/Object :: v14 = p1 $offset  && #(-16777216 l)::DD,91242
91242 :: EXPR :: modify :: J :: p0 $this .bufferPosition = v14::
91659 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
91669 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,91676
91671 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,91676:JM,91856:JM,91683:JM,91827:JM,91780:JM,91817:JM,91850:JM,91853
91677 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CD,91678:CD,91680:CD,91688:CD,91810:CD,91812:CD,91817:CD,91818:CD,91850:CD,91851:CD,91855
91676 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,91677:DD,91850
91678 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,91680
91681 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,91683:JM,91850
91680 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,91850:CD,91681:CD,91683:CD,91851
91683 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,91683:JM,91850:JM,91856:JM,91827:JM,91780:JM,91817:JM,91853:JM,91676
91688 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,91855:CD,91695:CD,91699:CD,91700:CD,91719:CD,91720:CD,91728:CD,91733:CD,91737:CD,91801:CD,91854
91695 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,91699
91699 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,91700
91701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
91700 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,91701:CD,91702:CD,91710:CD,91715
91702 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
91710 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
91715 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
91719 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
91720 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
91728 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
91733 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
91737 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,91806
91744 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
91748 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
91753 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
91752 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,91780:JM,91853
91761 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,91780:JM,91853
91766 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,91780:JM,91853:JM,91856:JM,91683:JM,91827:JM,91817:JM,91850:JM,91676
91771 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,91856:JM,91780:JM,91817:JM,91853
91776 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,91780:JM,91853
91780 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,91780:JM,91853
91785 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,91853
91789 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,91853:JM,91780
91795 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,91795:JM,91799
91794 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,91854:CD,91795:CD,91799
91799 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,91854
91801 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,91855:CD,91802:CD,91806
91802 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,91806
91806 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,91855:CD,91744:CD,91748:CD,91752:CD,91753:CD,91761:CD,91766:CD,91771:CD,91776:CD,91780:CD,91794:CD,91801:CD,91853:CD,91854
91810 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,91817
91812 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,91817:JM,91856:JM,91683:JM,91827:JM,91780:JM,91850:JM,91853:JM,91676
91817 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,91818:DD,91856
91818 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,91821:CD,91832:CD,91833:CD,91856:CD,91857
91821 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,91856:CD,91822:CD,91824
91822 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,91824
91825 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,91856:JM,91827
91824 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,91856:CD,91825:CD,91827
91827 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,91856:JM,91827:JM,91683:JM,91780:JM,91817:JM,91850:JM,91853:JM,91676
91833 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,91834:CD,91836
91832 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,91857
91834 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
91836 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,91856:JM,91683:JM,91827:JM,91780:JM,91817:JM,91850:JM,91853:JM,91676
91851 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,91821:CF,91688
91850 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,91851:DD,91688:DD,91854:DD,91855
91853 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,91794:JM,91795:JM,91799
91855 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,91857
91854 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,91801:DD,91854:DD,91855
91857 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,91833:JM,91856:JM,91780:JM,91817:JM,91850:JM,91853:JM,91676
91856 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,91832:DD,91857
91949 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFileNIO.getFilePointer()::JM,87227
91948 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.getFilePointer()::CE,91949:CD,91955:CD,91964
91952 :: EXPR :: reference :: J :: v3 = p0 $this .currentPosition::DD,91955
91955 :: NORM :: compound :: J :: return v3::DD,91949
91964 :: CALL :: call :: Ljava/io/IOException :: v9 = toIOException(v4)::CL,54121
91983 :: NORM :: declaration :: [Ljava/nio/MappedByteBuffer :: v10 = new java.nio.MappedByteBuffer[]::DD,91984
91984 :: EXPR :: modify :: [Ljava/nio/MappedByteBuffer :: p0 $this .buffers = v10::
91987 :: EXPR :: modify :: Lorg/hsqldb/persist/EventLogInterface :: p0 $this .logger = p1 $logger ::
91990 :: EXPR :: modify :: J :: p0 $this .maxLength = p5 $null ::
91993 :: NORM :: declaration :: Ljava/io/File :: v11 = new java.io.File::JM,91987:JM,91990:JM,92008:JM,91998:JM,92030
91999 :: CALL :: call :: J :: v23 = v11.length()::
91998 :: PRED :: IF :: Z :: if (p3 $readOnly  == #(0)) goto 49::CD,91999:CD,92004:CD,92008:CD,92009
92004 :: CALL :: call :: J :: v14 = v11.length()::JM,92008
92009 :: PRED :: IF :: Z :: if (v15 <= #(0)) goto 69::CD,92010
92008 :: EXPR :: assign :: Z :: v15 = v14 == p4 $requiredLength ::DD,92009
92010 :: CALL :: call :: J :: v17 = v11.length()::
92019 :: NORM :: declaration :: Ljava/io/RandomAccessFile :: v25 = new java.io.RandomAccessFile::DD,92027
92027 :: EXPR :: modify :: Ljava/io/RandomAccessFile :: p0 $this .file = v25::
92030 :: EXPR :: modify :: Z :: p0 $this .readOnly = p3 $readOnly ::
92033 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v30 = p0 $this .file::JM,92036:JM,92040
92036 :: CALL :: call :: Ljava/nio/channels/FileChannel :: v32 = v30.getChannel()::JM,92036:JM,92040
92040 :: EXPR :: modify :: Ljava/nio/channels/FileChannel :: p0 $this .channel = v32::
92043 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v33 = p0 $this .file::JM,92050:JM,92046
92046 :: CALL :: call :: Ljava/io/FileDescriptor :: v35 = v33.getFD()::JM,92050:JM,92046
92050 :: EXPR :: modify :: Ljava/io/FileDescriptor :: p0 $this .fileDescriptor = v35::
92053 :: CALL :: call :: Z :: v37 = p0 $this .ensureLength(v24)::CL,87768
92059 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v42 = p0 $this .buffers::
92062 :: EXPR :: reference :: Ljava/lang/Object :: v43 = v42[#(0)]::DD,92066
92066 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = v43::
92069 :: EXPR :: reference :: Ljava/nio/MappedByteBuffer :: v44 = p0 $this .buffer::JM,92072:JM,92076
92072 :: CALL :: call :: I :: v46 = v44.limit()::JM,92072:JM,92076
92076 :: EXPR :: modify :: I :: p0 $this .bufferLength = v46::
92079 :: EXPR :: modify :: J :: p0 $this .bufferPosition = #(0 l)::
92082 :: EXPR :: modify :: J :: p0 $this .currentPosition = #(0 l)::
92086 :: CALL :: call :: V :: p0 $this .close()::CL,65907
92177 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.read([],int,int)::CD,92184:CD,92193:CD,92194:CD,92198:CD,92199:CD,92200:CD,92201:CD,92215:CD,92219:CD,92220:CD,92221:CD,92225:CD,92235:CD,92243:CD,92244
92184 :: CALL :: call :: V :: p0 $this .checkBuffer()::CL,97421
92187 :: EXPR :: reference :: J :: v7 = p0 $this .bufferPosition::DD,92194
92190 :: EXPR :: reference :: I :: v8 = p0 $this .bufferLength::DD,92193
92193 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::CF,92194
92195 :: EXPR :: reference :: J :: v11 = p0 $this .currentPosition::DD,92198
92194 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 + v9::DD,92198
92199 :: EXPR :: assign :: J :: v13 = CONVERT I to J v31::CF,92200
92198 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - v11::DD,92200:DD,92244:CF,92199
92201 :: PRED :: IF :: Z :: if (v14 <= #(0)) goto 34::CF,92244:CD,92202
92200 :: EXPR :: assign :: Z :: v14 = v12 == v13::DD,92201
92202 :: EXPR :: assign :: J :: v16 = CONVERT I to J v31::DD,92244
92215 :: CALL :: call :: V :: p0 $this .positionBufferMove(v22)::CL,83896
92219 :: EXPR :: assign :: J :: v24 = CONVERT I to J v31::DD,92220
92221 :: EXPR :: assign :: I :: v26 = CONVERT J to I v25::DD,92225:DD,92243
92220 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v24 - v17::CF,92221
92225 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 1::CD,92184:CD,92193:CD,92194:CD,92198:CD,92199:CD,92200:CD,92201:CD,92215:CD,92219:CD,92220:CD,92221:CD,92243:CD,92244
92235 :: CALL :: call :: Ljava/io/IOException :: v37 = toIOException(v32)::CL,54121
92243 :: EXPR :: assign :: null :: PHI v31 = v26, p3 $length ::DD,92199:DD,92202:DD,92219
92244 :: EXPR :: assign :: null :: PHI v17 = v12, v16::DD,92220
92268 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.write([],int,int)::CD,92278:CD,92287:CD,92288:CD,92292:CD,92293:CD,92294:CD,92295:CD,92309:CD,92313:CD,92314:CD,92315:CD,92319:CD,92329:CD,92337:CD,92338
92275 :: EXPR :: modify :: Z :: p0 $this .buffersModified = #(1)::
92278 :: CALL :: call :: V :: p0 $this .checkBuffer()::CL,97421
92281 :: EXPR :: reference :: J :: v8 = p0 $this .bufferPosition::DD,92288
92284 :: EXPR :: reference :: I :: v9 = p0 $this .bufferLength::DD,92287
92287 :: EXPR :: assign :: J :: v10 = CONVERT I to J v9::CF,92288
92289 :: EXPR :: reference :: J :: v12 = p0 $this .currentPosition::DD,92292
92288 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v8 + v10::DD,92292
92293 :: EXPR :: assign :: J :: v14 = CONVERT I to J v32::CF,92294
92292 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 - v12::DD,92294:DD,92338:CF,92293
92295 :: PRED :: IF :: Z :: if (v15 <= #(0)) goto 39::CF,92338:CD,92296
92294 :: EXPR :: assign :: Z :: v15 = v13 == v14::DD,92295
92296 :: EXPR :: assign :: J :: v17 = CONVERT I to J v32::DD,92338
92309 :: CALL :: call :: V :: p0 $this .positionBufferMove(v23)::CL,83896
92313 :: EXPR :: assign :: J :: v25 = CONVERT I to J v32::DD,92314
92315 :: EXPR :: assign :: I :: v27 = CONVERT J to I v26::DD,92319:DD,92337
92314 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - v18::CF,92315
92319 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 6::CD,92278:CD,92287:CD,92288:CD,92292:CD,92293:CD,92294:CD,92295:CD,92309:CD,92313:CD,92314:CD,92315:CD,92337:CD,92338
92329 :: CALL :: call :: Ljava/io/IOException :: v40 = toIOException(v33)::CL,54121
92337 :: EXPR :: assign :: null :: PHI v32 = v27, p3 $length ::DD,92293:DD,92296:DD,92313
92338 :: EXPR :: assign :: null :: PHI v18 = v13, v17::DD,92314
92429 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.partition(int,int,int)::CD,92436:CD,92456:CD,92457:CD,92458:CD,92466
92436 :: CALL :: call :: V :: p0 $this .swap(p3 $pivot , p2 $end )::CL,97533
92442 :: CALL :: call :: Z :: v10 = p0 $this .lessThan(v17, p2 $end )::JM,92448:CL,97616
92449 :: CALL :: call :: V :: p0 $this .swap(v17, v16)::CL,97533
92448 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,92449
92455 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,92466
92457 :: PRED :: IF :: Z :: if (v17 <= v8) goto 19::CD,92442:CD,92448:CD,92455:CD,92456:CD,92466
92456 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p2 $end  - #(1)::CF,92457
92458 :: CALL :: call :: V :: p0 $this .swap(v16, p2 $end )::CL,97533
92466 :: EXPR :: assign :: null :: PHI v17 = p1 $start , v15::DD,92455:DD,92457:CF,92456
92492 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.insertionSort(int,int)::CD,92498:CD,92518:CD,92522:JM,92502
92498 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $lo0  + #(1)::DD,92522
92501 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(-1)::DD,92521:CF,92520
92502 :: PRED :: IF :: Z :: if (v13 <= p1 $lo0 ) goto 37::CD,92504:CD,92510:CF,92511
92504 :: CALL :: call :: Z :: v9 = p0 $this .lessThan(v17, v7)::JM,92510:CL,97616
92511 :: PRED :: IF :: Z :: if (v17 == v13) goto 47::CD,92512:CF,92517
92510 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,92501:CD,92502:CD,92520:CD,92521:CF,92511
92512 :: CALL :: call :: V :: p0 $this .moveAndInsertRow(v17, v13)::CL,97693
92517 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v17 + #(1)::DD,92522
92518 :: PRED :: IF :: Z :: if (v16 <= p2 $hi0 ) goto 10::CD,92502:CD,92511:CD,92517:CD,92520:CD,92521:CD,92522
92521 :: EXPR :: assign :: null :: PHI v13 = v16, v12::DD,92501:DD,92502:DD,92511
92520 :: EXPR :: assign :: null :: PHI v17 = v16, v17::CF,92521:DD,92511:DD,92517:DD,92520
92522 :: EXPR :: assign :: null :: PHI v16 = v6, v15::DD,92518:DD,92520:DD,92521
92547 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.setRange(int,int)::JM,87576
92546 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.setRange(int,int)::CE,92547:CD,92552:CD,92559
92552 :: CALL :: call :: I :: v7 = p0 $this .setOrUnsetRange(p1 $pos , p2 $count , #(1))::JM,92559:CL,94379
92559 :: NORM :: compound :: I :: return v7::DD,92547
92565 :: EXIT :: exit :: J :: org.hsqldb.persist.RAFile.getExtendLength(long)::JM,87723:JM,87740
92564 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.getExtendLength(long)::CE,92565:CD,92572:JM,92573
92569 :: EXPR :: reference :: Z :: v4 = p0 $this .extendLength::DD,92572
92573 :: NORM :: compound :: J :: return p1 $position ::CF,92565
92572 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 13::CD,92573:CD,92584:CD,92589
92584 :: CALL :: call :: J :: v19 = getBinaryNormalisedCeiling(p1 $position , v17)::JM,92589:CL,97298
92589 :: NORM :: compound :: J :: return v19::CF,92565
92615 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.enlargeFile(long)::CE,92616:CD,92623:CD,92627:CD,92672:CD,92673:CD,92674:CD,92681:CD,92705:CD,92716:CD,92766:CD,92767:CD,92769:CD,92770
92616 :: EXIT :: exit :: Z :: org.hsqldb.persist.RAFileNIO.enlargeFile(long)::JM,87784
92620 :: EXPR :: reference :: Z :: v4 = p0 $this .readOnly::DD,92623
92623 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 14::CF,92769
92624 :: EXPR :: reference :: Z :: v8 = p0 $this .readOnly::DD,92627
92627 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,92628:CD,92631:CD,92770
92628 :: EXPR :: reference :: Ljava/nio/channels/FileChannel$MapMode :: v10 = java.nio.channels.FileChannel$MapMode.READ_ONLY::DD,92770
92631 :: EXPR :: reference :: Ljava/nio/channels/FileChannel$MapMode :: v9 = java.nio.channels.FileChannel$MapMode.READ_WRITE::CF,92770
92669 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v27 = p0 $this .buffers::DD,92672
92673 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v28 + #(1)::CF,92674
92672 :: EXPR :: assign :: I :: v28 = v27.length::DD,92673
92675 :: EXPR :: reference :: Ljava/nio/channels/FileChannel :: v32 = p0 $this .channel::JM,92706:JM,92681
92674 :: NORM :: declaration :: [Ljava/nio/MappedByteBuffer :: v31 = new java.nio.MappedByteBuffer[]::DD,92710
92678 :: EXPR :: reference :: J :: v33 = p0 $this .fileLength::JM,92706:JM,92681
92681 :: CALL :: call :: Ljava/nio/MappedByteBuffer :: v35 = v32.map(v11, v33, v7)::JM,92706:JM,92681
92702 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v40 = p0 $this .buffers::DD,92705
92705 :: EXPR :: assign :: I :: v41 = v40.length::
92706 :: EXPR :: modify :: Ljava/lang/Object :: v31[v41] = v35::
92710 :: EXPR :: modify :: [Ljava/nio/MappedByteBuffer :: p0 $this .buffers = v31::
92713 :: EXPR :: reference :: J :: v42 = p0 $this .fileLength::DD,92716
92717 :: EXPR :: modify :: J :: p0 $this .fileLength = v43::
92716 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 + v7::DD,92717
92767 :: NORM :: compound :: Z :: return #(1)::DD,92616
92766 :: NORM :: compound :: Z :: return #(0)::DD,92616
92769 :: EXPR :: assign :: null :: PHI v7 = p1 $newFileLength , #(16777216 l)::JM,92706:JM,92681:DD,92716
92770 :: EXPR :: assign :: null :: PHI v11 = v10, v9::JM,92706:JM,92681
92818 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.getNewMainBlock(long)::CD,92826:CD,92827:CD,92831:CD,92832:CD,92836:CD,92837:CD,92845:CD,92851:CD,92852
92823 :: EXPR :: reference :: I :: v4 = p0 $this .mainBlockSize::DD,92826
92827 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v5 + p1 $rowSize ::DD,92832
92826 :: EXPR :: assign :: J :: v5 = CONVERT I to J v4::DD,92827
92828 :: EXPR :: reference :: I :: v7 = p0 $this .mainBlockSize::DD,92831
92831 :: EXPR :: assign :: J :: v8 = CONVERT I to J v7::CF,92832
92833 :: EXPR :: reference :: I :: v10 = p0 $this .mainBlockSize::DD,92836
92832 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v6 / v8::DD,92837
92837 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v9 * v11::DD,92891
92836 :: EXPR :: assign :: J :: v11 = CONVERT I to J v10::CF,92837
92845 :: CALL :: call :: J :: v17 = v13.getFileBlocks(v14, v15)::JM,92851:JM,92882:JM,92885:JM,92857:CL,97839:CL,97754
92851 :: EXPR :: assign :: Z :: v19 = v17 == #(0 l)::DD,92852
92852 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 52::CD,92857:CD,92858:CD,92891
92854 :: EXPR :: reference :: J :: v21 = p0 $this .freshBlockLimit::DD,92857
92857 :: EXPR :: assign :: Z :: v22 = v17 == v21::DD,92858
92859 :: EXPR :: reference :: J :: v23 = p0 $this .freshBlockLimit::DD,92865
92858 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 108::CD,92865:CD,92866:CD,92867
92862 :: EXPR :: reference :: J :: v24 = p0 $this .freshBlockFreePos::DD,92865
92865 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v23 - v24::DD,92866
92867 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 97::CD,92877
92866 :: EXPR :: assign :: Z :: v26 = v25 == #(0 l)::DD,92867
92877 :: CALL :: call :: V :: p0 $this .release(v30, v31)::CL,92932
92882 :: EXPR :: modify :: J :: p0 $this .freshBlockFreePos = v17::
92885 :: EXPR :: modify :: J :: p0 $this .freshBlockLimit = v17::
92888 :: EXPR :: reference :: J :: v33 = p0 $this .freshBlockLimit::DD,92891
92891 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v33 + v12::DD,92892
92892 :: EXPR :: modify :: J :: p0 $this .freshBlockLimit = v34::
92932 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.release(long,int)::CD,92941:CD,92948:CD,92955:CD,92962:CD,92966:CD,92967:CD,92968:CD,92969
92938 :: EXPR :: reference :: I :: v5 = p0 $this .scale::DD,92941
92941 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p2 $null  / v5::DD,92966
92942 :: EXPR :: modify :: Z :: p0 $this .isModified = #(1)::
92945 :: EXPR :: reference :: J :: v8 = p0 $this .releaseCount::DD,92948
92949 :: EXPR :: modify :: J :: p0 $this .releaseCount = v10::
92948 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1 l)::DD,92949
92955 :: CALL :: call :: I :: v13 = v11.size()::JM,92962:CL,79714
92959 :: EXPR :: reference :: I :: v14 = p0 $this .capacity::DD,92962
92963 :: CALL :: call :: V :: p0 $this .resetList()::CL,97865
92962 :: PRED :: IF :: Z :: if (v13 != v14) goto 44::CD,92963:CF,92966
92967 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p1 $pos  + v16::DD,92968
92966 :: EXPR :: assign :: J :: v16 = CONVERT I to J v6::CF,92967
92969 :: PRED :: IF :: Z :: if (v19 < #(0)) goto 55::CD,92975
92968 :: EXPR :: assign :: Z :: v19 = v17 == #(2147483647 l)::DD,92969
92975 :: CALL :: call :: I :: v24 = v21.add(p1 $pos , v22)::CL,97893
93001 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.findFirstGreaterEqualSlotIndex(int)::CE,93002:CD,93009:CD,93016:CD,93021:JM,93013
93002 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.findFirstGreaterEqualSlotIndex(int)::JM,87993:JM,87996
93006 :: EXPR :: reference :: Z :: v4 = p0 $this .sorted::DD,93009
93009 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 13::CD,93010
93010 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,87421
93013 :: EXPR :: modify :: I :: p0 $this .targetSearchValue = p1 $value ::
93016 :: CALL :: call :: I :: v8 = p0 $this .binarySlotSearch(#(0))::JM,93021:CL,93128
93021 :: NORM :: compound :: I :: return v8::DD,93002
93073 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.doubleCapacity()::CD,93084:CD,93089:CD,93100:CD,93105:CD,93112
93084 :: CALL :: call :: Ljava/lang/Object :: v8 = resizeArray(v3, v6)::JM,93089:CL,52281
93089 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,93090
93090 :: EXPR :: modify :: [I :: p0 $this .keys = v9::
93100 :: CALL :: call :: Ljava/lang/Object :: v14 = resizeArray(v10, v12)::JM,93105:CL,52281
93105 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,93106
93106 :: EXPR :: modify :: [I :: p0 $this .values = v15::
93109 :: EXPR :: reference :: I :: v16 = p0 $this .capacity::DD,93112
93113 :: EXPR :: modify :: I :: p0 $this .capacity = v17::
93112 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v16 * #(2)::DD,93113
93129 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.binarySlotSearch(boolean)::JM,93021
93128 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.binarySlotSearch(boolean)::CE,93129:CD,93147:CD,93148:CD,93149:CD,93150
93133 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,93150
93137 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v15 + v11::DD,93138
93139 :: CALL :: call :: I :: v10 = p0 $this .compare(v8)::JM,93144:CL,97941
93138 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 ? #(1)::DD,93146:DD,93150
93144 :: PRED :: IF :: Z :: if (v10 > #(0)) goto 45::CD,93146:CD,93149:CD,93150
93147 :: PRED :: IF :: Z :: if (v15 < v11) goto 18::CD,93137:CD,93138:CD,93139:CD,93144:CD,93149:CD,93150:CF,93148
93146 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v8 + #(1)::DD,93149
93149 :: EXPR :: assign :: null :: PHI v15 = #(0), v15, v14::CF,93150:DD,93137:DD,93147:DD,93148:DD,93149
93148 :: NORM :: compound :: I :: return v15::DD,93129
93150 :: EXPR :: assign :: null :: PHI v11 = v5, v8, v11::DD,93137:DD,93147:DD,93150
93175 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.preparePut(int)::CD,93180:CD,93187:CD,93191:CD,93193:CD,93197:CD,93201:CD,93202:CD,93204:CD,93317:CD,93318:JM,93223:JM,93254
93180 :: CALL :: call :: I :: v5 = p0 $this .size()::JM,93187:CL,38415
93184 :: EXPR :: reference :: I :: v6 = p0 $this .reserveCount::DD,93187
93187 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 + v6::DD,93191
93188 :: EXPR :: reference :: I :: v8 = p0 $this .capacity::DD,93191
93191 :: PRED :: IF :: Z :: if (v7 < v8) goto 23::CD,93317
93193 :: EXPR :: assign :: J :: v12 = CONVERT I to J p1 $storageSize ::DD,93197
93194 :: EXPR :: reference :: J :: v13 = p0 $this .cacheBytesLength::DD,93197
93197 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v12 + v13::DD,93201
93198 :: EXPR :: reference :: J :: v15 = p0 $this .bytesCapacity::DD,93201
93201 :: EXPR :: assign :: Z :: v16 = v14 == v15::DD,93202
93202 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 44::CD,93318
93205 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 257::CD,93206:CD,93210:CD,93217:CD,93221:CD,93223:CD,93227:CD,93231:CD,93232:CD,93234:CD,93319:CD,93320
93204 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 53::CD,93205:CD,93206:CD,93210:CD,93217:CD,93221:CD,93223:CD,93227:CD,93231:CD,93232:CD,93234:CD,93319:CD,93320
93206 :: CALL :: call :: V :: p0 $this .cleanUp(#(0))::CL,98020
93210 :: CALL :: call :: I :: v20 = p0 $this .size()::JM,93217:CL,38415
93214 :: EXPR :: reference :: I :: v21 = p0 $this .reserveCount::DD,93217
93217 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v20 + v21::DD,93221
93218 :: EXPR :: reference :: I :: v23 = p0 $this .capacity::DD,93221
93221 :: PRED :: IF :: Z :: if (v22 < v23) goto 79::CD,93319
93223 :: EXPR :: assign :: J :: v25 = CONVERT I to J p1 $storageSize ::DD,93227
93224 :: EXPR :: reference :: J :: v26 = p0 $this .cacheBytesLength::DD,93227
93227 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v25 + v26::DD,93231
93228 :: EXPR :: reference :: J :: v28 = p0 $this .bytesCapacity::DD,93231
93231 :: EXPR :: assign :: Z :: v29 = v27 == v28::DD,93232
93232 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 100::CD,93320
93235 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 115::CD,93236:CD,93241:CD,93248:CD,93252:CD,93254:CD,93258:CD,93262:CD,93263:CD,93265:CD,93321:CD,93322
93234 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 108::CD,93235:CD,93236:CD,93241:CD,93248:CD,93252:CD,93254:CD,93258:CD,93262:CD,93263:CD,93265:CD,93321:CD,93322
93236 :: CALL :: call :: V :: p0 $this .clearUnchanged()::CL,88770
93241 :: CALL :: call :: I :: v33 = p0 $this .size()::JM,93248:CL,38415
93245 :: EXPR :: reference :: I :: v34 = p0 $this .reserveCount::DD,93248
93249 :: EXPR :: reference :: I :: v36 = p0 $this .capacity::DD,93252
93248 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v33 + v34::DD,93252
93252 :: PRED :: IF :: Z :: if (v35 < v36) goto 139::CD,93321
93255 :: EXPR :: reference :: J :: v39 = p0 $this .cacheBytesLength::DD,93258
93254 :: EXPR :: assign :: J :: v38 = CONVERT I to J p1 $storageSize ::DD,93258
93259 :: EXPR :: reference :: J :: v41 = p0 $this .bytesCapacity::DD,93262
93258 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 + v39::DD,93262
93263 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 160::CD,93322
93262 :: EXPR :: assign :: Z :: v42 = v40 == v41::DD,93263
93265 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 169::CD,93266:CD,93267
93267 :: CALL :: call :: V :: p0 $this .cleanUp(#(1))::CL,98020
93266 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 176::CD,93267
93317 :: EXPR :: assign :: null :: PHI v11 = #(1), #(0)::DD,93204:CF,93193
93319 :: EXPR :: assign :: null :: PHI v24 = #(1), #(0)::DD,93234:CF,93223
93318 :: EXPR :: assign :: null :: PHI v17 = #(1), #(0)::DD,93205:CF,93204
93321 :: EXPR :: assign :: null :: PHI v37 = #(1), #(0)::DD,93265:CF,93254
93320 :: EXPR :: assign :: null :: PHI v30 = #(1), #(0)::DD,93235:CF,93234
93322 :: EXPR :: assign :: null :: PHI v43 = #(1), #(0)::DD,93266:CF,93265
93402 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.putNoCheck(org.hsqldb.persist.CachedObject)::CD,93410:CD,93424:CD,93431:CD,93472:CD,93479:CD,93483:CD,93484
93407 :: EXPR :: reference :: I :: v4 = p0 $this .accessCount::DD,93410
93411 :: CALL :: call :: V :: p0 $this .updateAccessCounts()::CL,88463
93410 :: PRED :: IF :: Z :: if (v4 <= #(2146435071)) goto 24::CD,93411:CD,93414:CD,93417
93414 :: CALL :: call :: V :: p0 $this .resetAccessCount()::CL,48990
93417 :: CALL :: call :: V :: p0 $this .updateObjectAccessCounts()::CL,88529
93424 :: CALL :: call :: Ljava/lang/Object :: v13 = p0 $this .addOrRemoveObject(p1 $row , v10, #(0))::JM,93431:CL,98271
93431 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 83::CD,93435:CD,93440:CD,93444:CD,93449:CD,93454:CD,93458:CD,93463
93435 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
93440 :: CALL :: call :: J :: v20 = p1 $row .getPos()::CL,57322
93444 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v16.append(v20)::
93449 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#( ))::
93454 :: CALL :: call :: I :: v27 = p1 $row .getStorageSize()::CL,57331
93458 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v27)::
93463 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
93472 :: CALL :: call :: V :: p1 $row .setInMemory(#(1))::CL,93809
93476 :: EXPR :: reference :: J :: v35 = p0 $this .cacheBytesLength::DD,93484
93479 :: CALL :: call :: I :: v37 = p1 $row .getStorageSize()::JM,93483:CL,57331
93483 :: EXPR :: assign :: J :: v38 = CONVERT I to J v37::CF,93484
93485 :: EXPR :: modify :: J :: p0 $this .cacheBytesLength = v39::
93484 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v35 + v38::DD,93485
93513 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.reset(int)::CD,93524:CD,93525
93518 :: EXPR :: modify :: I :: p0 $this .count = #(0)::
93521 :: EXPR :: reference :: [B :: v5 = p0 $this .buffer::DD,93524
93525 :: PRED :: IF :: Z :: if (p1 $newSize  <= v6) goto 31::CD,93527:CD,93532:CD,93533
93524 :: EXPR :: assign :: I :: v6 = v5.length::CF,93525
93527 :: CALL :: call :: J :: v10 = getBinaryMultipleCeiling(v7, #(4096 l))::JM,93532:CL,87804
93533 :: NORM :: declaration :: [B :: v12 = new []::DD,93534
93532 :: EXPR :: assign :: I :: v11 = CONVERT J to I v10::DD,93533
93534 :: EXPR :: modify :: [B :: p0 $this .buffer = v12::
93555 :: EXPR :: modify :: [I :: p0 $this .map = p1 $map ::
93559 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 * #(32)::DD,93560
93558 :: EXPR :: assign :: I :: v5 = p1 $map .length::DD,93559
93560 :: EXPR :: modify :: I :: p0 $this .initialSize = v7::
93563 :: EXPR :: reference :: I :: v8 = p0 $this .initialSize::DD,93566
93566 :: EXPR :: modify :: I :: p0 $this .limitPos = v8::
93569 :: EXPR :: modify :: Z :: p0 $this .canChangeSize = #(0)::
93591 :: NORM :: declaration :: [I :: v5 = new []::DD,93592
93592 :: EXPR :: modify :: [I :: p0 $this .tableIds = v5::
93595 :: NORM :: declaration :: [I :: v6 = new []::DD,93596
93596 :: EXPR :: modify :: [I :: p0 $this .bitmapAddress = v6::
93599 :: NORM :: declaration :: [C :: v7 = new []::DD,93600
93600 :: EXPR :: modify :: [C :: p0 $this .freeSpace = v7::
93603 :: NORM :: declaration :: [C :: v8 = new []::DD,93604
93604 :: EXPR :: modify :: [C :: p0 $this .freeSpaceBlock = v8::
93607 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
93623 :: EXIT :: exit :: I :: org.hsqldb.persist.CachedObjectBase.getAccessCount()::JM,88496:JM,88492
93622 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.getAccessCount()::CE,93623:CD,93629
93626 :: EXPR :: reference :: I :: v3 = p0 $this .accessCount::DD,93629
93629 :: NORM :: compound :: I :: return v3::CF,93623
93631 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.updateAccessCount(int)::JM,93636
93636 :: EXPR :: modify :: I :: p0 $this .accessCount = p1 $count ::
93643 :: EXIT :: exit :: J :: org.hsqldb.persist.Cache.CachedObjectComparator.longKey(java.lang.Object)::JM,88614:JM,98311
93642 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.CachedObjectComparator.longKey(java.lang.Object)::CE,93643:CD,93648:CD,93652
93648 :: CALL :: call :: J :: v6 = v4.getPos()::JM,93652:CL,57322
93652 :: NORM :: compound :: J :: return v6::CF,93643
93654 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowInputBinary180.resetBlock(long,int)::CD,93660
93660 :: CALL :: call :: V :: p0 $null .resetBlock(p1 $null , p2 $null )::CL,98599
93669 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowInputBinaryDecode.resetBlock(long,int)::CD,93675
93675 :: CALL :: call :: V :: p0 $null .resetBlock(p1 $null , p2 $null )::CL,98599
93761 :: EXIT :: exit :: Lorg/hsqldb/persist/CachedObject :: org.hsqldb.persist.BlockObjectStore.getNewInstance()::JM,88757
93760 :: ENTR :: entry :: null :: org.hsqldb.persist.BlockObjectStore.getNewInstance()::CE,93761:CD,93767:CD,93779:CD,93784:CD,93785:CD,93786
93764 :: EXPR :: reference :: Ljava/lang/reflect/Constructor :: v3 = p0 $this .constructor::JM,93779:JM,93784
93767 :: NORM :: declaration :: [Ljava/lang/Object :: v5 = new java.lang.Object[]::JM,93779:JM,93784
93779 :: CALL :: call :: Ljava/lang/Object :: v11 = v3.newInstance(v5)::JM,93779:JM,93784
93785 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return v12::DD,93761
93784 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,93785
93786 :: NORM :: compound :: Lorg/hsqldb/persist/CachedObject :: return #(null)::DD,93761
93795 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.isKeepInMemory()::CE,93796:CD,93802
93796 :: EXIT :: exit :: Z :: org.hsqldb.persist.CachedObjectBase.isKeepInMemory()::JM,88794:JM,98084
93799 :: EXPR :: reference :: I :: v3 = p0 $this .keepCount::DD,93802
93803 :: NORM :: compound :: Z :: return #(1)::CF,93796
93802 :: PRED :: IF :: Z :: if (v3 <= #(0)) goto 10::CD,93803:CD,93804
93804 :: NORM :: compound :: Z :: return #(0)::CF,93796
93809 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.setInMemory(boolean)::JM,93814
93814 :: EXPR :: modify :: Z :: p0 $this .isInMemory = p1 $in ::
93820 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.remove()::CD,93828:CD,93837:CD,93850:CD,94020
93828 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v64 = new java.util.NoSuchElementException::
93834 :: EXPR :: reference :: I :: v5 = p0 $this .counter::DD,93837
93837 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(1)::DD,93838
93838 :: EXPR :: modify :: I :: p0 $this .counter = v7::
93841 :: EXPR :: modify :: Z :: p0 $this .removed = #(1)::
93844 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v8 = p0 $this .this$0::
93847 :: EXPR :: reference :: Z :: v9 = v8.isObjectKey::DD,93850
93851 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v29 = p0 $this .this$0::
93850 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 154::CD,93857:CD,93961
93854 :: EXPR :: reference :: [Z :: v30 = v29.multiValueTable::DD,93857
93857 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 80::CD,93874:CD,93887
93874 :: CALL :: call :: Ljava/lang/Object :: v56 = v50.addOrRemove(#(0 l), #(0 l), v54, #(null), #(1))::CL,38427
93884 :: EXPR :: reference :: Z :: v31 = p0 $this .keys::DD,93887
93887 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 115::CD,93904:CD,93944
93904 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.addOrRemoveMultiVal(#(0 l), #(0 l), v47, #(null), #(1), #(0))::CL,57401
93944 :: CALL :: call :: Ljava/lang/Object :: v42 = v32.addOrRemoveMultiVal(#(0 l), #(0 l), v36, v40, #(0), #(1))::CL,57401
93955 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v10 = p0 $this .this$0::
93958 :: EXPR :: reference :: Z :: v11 = v10.isIntKey::DD,93961
93961 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 192::CD,93979:CD,94005
93979 :: CALL :: call :: Ljava/lang/Object :: v28 = v21.addOrRemove(v26, #(0 l), #(null), #(null), #(1))::CL,38427
94005 :: CALL :: call :: Ljava/lang/Object :: v20 = v12.addOrRemove(v16, #(0 l), #(null), #(null), #(1))::CL,38427
94014 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v57 = p0 $this .this$0::
94017 :: EXPR :: reference :: Z :: v58 = v57.isList::DD,94020
94020 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 246::CD,94027:CD,94034
94027 :: CALL :: call :: V :: v59.removeRow(v60)::CL,77684
94031 :: EXPR :: reference :: I :: v62 = p0 $this .lookup::DD,94034
94035 :: EXPR :: modify :: I :: p0 $this .lookup = v63::
94034 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v62 - #(1)::DD,94035
94104 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.addUnsorted(int,int)::CD,94116:JM,94177:JM,94164:JM,94148:JM,94187
94110 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,94116
94113 :: EXPR :: reference :: I :: v6 = p0 $this .capacity::DD,94116
94117 :: EXPR :: reference :: Z :: v7 = p0 $this .fixedSize::DD,94120
94116 :: PRED :: IF :: Z :: if (v5 != v6) goto 25::CD,94120:CD,94128:CD,94194
94120 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 21::CD,94122:CD,94128:CD,94194
94122 :: CALL :: call :: V :: p0 $this .doubleCapacity()::CL,93073
94125 :: EXPR :: reference :: Z :: v10 = p0 $this .sorted::DD,94128
94129 :: EXPR :: reference :: I :: v11 = p0 $this .count::DD,94132
94128 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 90::CD,94132
94133 :: EXPR :: reference :: Z :: v12 = p0 $this .sortOnValues::DD,94136
94132 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 90::CD,94136
94137 :: EXPR :: reference :: [I :: v18 = p0 $this .values::
94136 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 70::CD,94143:CD,94148:CD,94159:CD,94164
94140 :: EXPR :: reference :: I :: v19 = p0 $this .count::DD,94143
94143 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 - #(1)::
94144 :: EXPR :: reference :: I :: v21 = v18[v20]::DD,94148
94149 :: EXPR :: modify :: Z :: p0 $this .sorted = #(0)::
94148 :: PRED :: IF :: Z :: if (p2 $value  >= v21) goto 90::
94153 :: EXPR :: reference :: [I :: v13 = p0 $this .keys::
94156 :: EXPR :: reference :: I :: v14 = p0 $this .count::DD,94159
94159 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 - #(1)::
94160 :: EXPR :: reference :: I :: v17 = v13[v16]::DD,94164
94165 :: EXPR :: modify :: Z :: p0 $this .sorted = #(0)::
94164 :: PRED :: IF :: Z :: if (p1 $key  >= v17) goto 90::
94168 :: EXPR :: modify :: Z :: p0 $this .hasChanged = #(1)::
94171 :: EXPR :: reference :: [I :: v22 = p0 $this .keys::
94174 :: EXPR :: reference :: I :: v23 = p0 $this .count::
94177 :: EXPR :: modify :: I :: v22[v23] = p1 $key ::
94181 :: EXPR :: reference :: [I :: v24 = p0 $this .values::
94184 :: EXPR :: reference :: I :: v25 = p0 $this .count::
94187 :: EXPR :: modify :: I :: v24[v25] = p2 $value ::
94191 :: EXPR :: reference :: I :: v26 = p0 $this .count::DD,94194
94195 :: EXPR :: modify :: I :: p0 $this .count = v27::
94194 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::DD,94195
94235 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.swap(int,int)::
94241 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
94244 :: EXPR :: reference :: I :: v6 = v5[p1 $i1 ]::DD,94265
94248 :: EXPR :: reference :: [I :: v7 = p0 $this .keys::
94251 :: EXPR :: reference :: [I :: v8 = p0 $this .keys::
94254 :: EXPR :: reference :: I :: v9 = v8[p2 $i2 ]::DD,94258
94258 :: EXPR :: modify :: I :: v7[p1 $i1 ] = v9::
94262 :: EXPR :: reference :: [I :: v10 = p0 $this .keys::
94265 :: EXPR :: modify :: I :: v10[p2 $i2 ] = v6::
94281 :: EXIT :: exit :: Z :: org.hsqldb.lib.IntIndex.lessThan(int,int)::JM,89019:JM,89081
94280 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.lessThan(int,int)::CE,94281:CD,94300
94286 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
94289 :: EXPR :: reference :: I :: v6 = v5[p1 $i ]::DD,94300
94293 :: EXPR :: reference :: [I :: v7 = p0 $this .keys::
94296 :: EXPR :: reference :: I :: v8 = v7[p2 $j ]::DD,94300
94301 :: NORM :: compound :: Z :: return #(1)::CF,94281
94300 :: PRED :: IF :: Z :: if (v6 >= v8) goto 18::CD,94301:CD,94302
94302 :: NORM :: compound :: Z :: return #(0)::CF,94281
94309 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.moveAndInsertRow(int,int)::
94315 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
94318 :: EXPR :: reference :: I :: v6 = v5[p1 $i ]::DD,94333
94330 :: EXPR :: reference :: [I :: v11 = p0 $this .keys::
94333 :: EXPR :: modify :: I :: v11[p2 $j ] = v6::
94351 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.countSetBitsEnd(int)::JM,89285
94350 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.countSetBitsEnd(int)::CF,94351:CD,94360:CD,94361:CD,94362:CD,94363
94355 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v9 && #(1)::DD,94356
94356 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 18::CD,94358:CD,94359:CD,94360:CD,94362:CD,94363
94359 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v10 + #(1)::DD,94363:CF,94362
94358 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v9 ? #(1)::DD,94362:CF,94359
94361 :: NORM :: compound :: I :: return v10::CF,94351
94360 :: PRED :: IF :: Z :: if (v10 < #(32)) goto 9::CD,94355:CD,94356:CF,94361
94363 :: EXPR :: assign :: null :: PHI v10 = #(0), v8::DD,94359:DD,94360:DD,94361
94362 :: EXPR :: assign :: null :: PHI v9 = p1 $map , v7::CF,94363:DD,94355:DD,94358
94379 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.setOrUnsetRange(int,int,boolean)::CE,94380:CD,94386:JM,94417:JM,94450:JM,94486:JM,94393:JM,94394:JM,94397:JM,94399:JM,94495:JM,94494
94380 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.setOrUnsetRange(int,int,boolean)::JM,92559
94387 :: NORM :: compound :: I :: return #(0)::DD,94380
94386 :: PRED :: IF :: Z :: if (p2 $count  != #(0)) goto 9::CD,94387:CD,94389:CD,94393:CD,94394:CD,94395:CD,94396:CD,94397:CD,94398:CD,94399:CD,94400:CD,94401:CD,94402:CD,94403:CD,94412:CD,94413:CD,94417:CD,94436:CD,94494:CD,94497:CD,94498:CD,94502:CD,94503
94389 :: CALL :: call :: V :: p0 $this .ensureCapacity(v7)::CL,98624
94393 :: EXPR :: assign :: Ljava/lang/Object :: v10 = p1 $pos  ? #(5)::DD,94403:DD,94436:DD,94469:CF,94394
94395 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v11 - #(1)::DD,94396
94394 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $pos  + p2 $count ::DD,94395
94397 :: EXPR :: assign :: Ljava/lang/Object :: v17 = p1 $pos  && #(31)::CF,94398
94396 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v13 ? #(5)::DD,94403:DD,94436:DD,94493:CF,94397
94399 :: EXPR :: assign :: Ljava/lang/Object :: v20 = p1 $pos  + p2 $count ::DD,94400
94398 :: EXPR :: assign :: Ljava/lang/Object :: v18 = #(-1) ? v17::DD,94404:DD,94498:CF,94399
94401 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 && #(31)::CF,94402
94400 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v20 - #(1)::DD,94401
94403 :: PRED :: IF :: Z :: if (v10 != v14) goto 63::CF,94498:CD,94404
94402 :: EXPR :: assign :: Ljava/lang/Object :: v23 = #(-2147483648) ? v22::DD,94404:DD,94444:DD,94454:DD,94460:CF,94403
94405 :: EXPR :: reference :: [I :: v26 = p0 $this .map::
94404 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v18 && v23::DD,94498
94408 :: EXPR :: reference :: I :: v27 = v26[v10]::DD,94412:DD,94421:DD,94431
94413 :: CALL :: call :: I :: v30 = bitCount(v28)::JM,94449:JM,94502:JM,94413
94412 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v27 && v25::JM,94449:JM,94502:JM,94413
94417 :: PRED :: IF :: Z :: if (p3 $set  == #(0)) goto 103::CD,94421:CD,94427:CD,94431
94418 :: EXPR :: reference :: [I :: v34 = p0 $this .map::
94421 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v27 || v25::DD,94422
94422 :: EXPR :: modify :: I :: v34[v10] = v35::
94427 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v25 ^ #(-1)::DD,94431
94428 :: EXPR :: reference :: [I :: v32 = p0 $this .map::
94431 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v27 && v31::DD,94432
94432 :: EXPR :: modify :: I :: v32[v10] = v33::
94437 :: EXPR :: reference :: [I :: v37 = p0 $this .map::
94436 :: PRED :: IF :: Z :: if (v10 == v14) goto 235::CF,94502:CD,94444:CD,94445:CD,94449:CD,94450:CD,94469:CD,94493:CD,94500:CD,94501
94440 :: EXPR :: reference :: I :: v38 = v37[v14]::DD,94444:DD,94454:DD,94464
94445 :: CALL :: call :: I :: v41 = bitCount(v39)::JM,94449:JM,94445
94444 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v38 && v23::JM,94449:JM,94445
94449 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v30 + v41::DD,94500:CF,94450
94451 :: EXPR :: reference :: [I :: v46 = p0 $this .map::
94450 :: PRED :: IF :: Z :: if (p3 $set  == #(0)) goto 169::CD,94454:CD,94460:CD,94464
94455 :: EXPR :: modify :: I :: v46[v14] = v47::
94454 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v38 || v23::DD,94455
94461 :: EXPR :: reference :: [I :: v44 = p0 $this .map::
94460 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v23 ^ #(-1)::DD,94464
94465 :: EXPR :: modify :: I :: v44[v14] = v45::
94464 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v38 && v43::DD,94465
94469 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v10 + #(1)::DD,94501
94471 :: EXPR :: reference :: [I :: v50 = p0 $this .map::
94474 :: EXPR :: reference :: I :: v51 = v50[v59]::JM,94482:JM,94478
94478 :: CALL :: call :: I :: v53 = bitCount(v51)::JM,94482:JM,94478
94483 :: EXPR :: reference :: [I :: v55 = p0 $this .map::
94482 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v58 + v53::DD,94500
94486 :: PRED :: IF :: Z :: if (p3 $set  == #(0)) goto 223::CD,94499
94488 :: EXPR :: modify :: I :: v55[v59] = v56::
94493 :: PRED :: IF :: Z :: if (v59 < v14) goto 196::CF,94502:CD,94478:CD,94482:CD,94486:CD,94492:CD,94499:CD,94500:CD,94501
94492 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v59 + #(1)::DD,94501:CF,94500
94495 :: EXPR :: assign :: Ljava/lang/Object :: v63 = p2 $count  - v62::DD,94503
94494 :: PRED :: IF :: Z :: if (p3 $set  == #(0)) goto 247::CD,94495:CD,94503
94497 :: NORM :: compound :: I :: return v64::DD,94380
94499 :: EXPR :: assign :: null :: PHI v56 = #(-1), #(0)::DD,94488
94498 :: EXPR :: assign :: null :: PHI v25 = v18, v24::DD,94412:DD,94421:DD,94427
94501 :: EXPR :: assign :: null :: PHI v59 = v49, v57::DD,94492:DD,94493
94500 :: EXPR :: assign :: null :: PHI v58 = v42, v54::CF,94501:DD,94482:DD,94502
94503 :: EXPR :: assign :: null :: PHI v64 = v63, v62::CF,94497
94502 :: EXPR :: assign :: null :: PHI v62 = v30, v58::DD,94495:DD,94503:CF,94494
96948 :: ENTR :: entry :: null :: org.hsqldb.lib.ArraySort.swap(java.lang.Object[],int,int)::
96954 :: EXPR :: reference :: Ljava/lang/Object :: v5 = p1 $array [p2 $i1 ]::DD,96966
96958 :: EXPR :: reference :: Ljava/lang/Object :: v6 = p1 $array [p3 $i2 ]::DD,96962
96962 :: EXPR :: modify :: Ljava/lang/Object :: p1 $array [p2 $i1 ] = v6::
96966 :: EXPR :: modify :: Ljava/lang/Object :: p1 $array [p3 $i2 ] = v5::
96981 :: ENTR :: entry :: null :: org.hsqldb.lib.ArraySort.moveAndInsertRow(java.lang.Object[],int,int)::
96987 :: EXPR :: reference :: Ljava/lang/Object :: v5 = p1 $array [p2 $i ]::DD,96999
96999 :: EXPR :: modify :: Ljava/lang/Object :: p1 $array [p3 $j ] = v5::
97017 :: EXIT :: exit :: I :: org.hsqldb.persist.RAShadowFile.copy(long,int)::JM,90720
97016 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.copy(long,int)::CE,97017:CD,97025:CD,97046:CD,97047:CD,97089:JM,97063:JM,97049:JM,97050
97022 :: EXPR :: reference :: Z :: v6 = p0 $this .zeroPageSet::DD,97025
97025 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 36::CF,97089:CD,97026:CD,97031:CD,97035
97026 :: CALL :: call :: I :: v8 = p0 $this .copy(#(0))::JM,97031:CL,100937
97031 :: EXPR :: assign :: Ljava/lang/Object :: v9 = #(0) + v8::DD,97089
97035 :: CALL :: call :: I :: v12 = v10.set(#(0))::CL,101200
97040 :: EXPR :: modify :: Z :: p0 $this .zeroPageSet = #(1)::
97043 :: EXPR :: reference :: J :: v15 = p0 $this .maxSize::DD,97046
97047 :: PRED :: IF :: Z :: if (v16 < #(0)) goto 48::CD,97048:CD,97049:CD,97050:CD,97054:CD,97055:CD,97062:CD,97063:CD,97064:CD,97068:CD,97069:CD,97070:CD,97074:CD,97075:CD,97076:CD,97077:CD,97087:CD,97088:CD,97090:CD,97091:CD,97092:CD,97093
97046 :: EXPR :: assign :: Z :: v16 = p1 $fileOffset  == v15::DD,97047
97049 :: EXPR :: assign :: J :: v17 = CONVERT I to J p2 $null ::CF,97050
97048 :: NORM :: compound :: I :: return v14::DD,97017
97051 :: EXPR :: reference :: J :: v19 = p0 $this .maxSize::DD,97054
97050 :: EXPR :: assign :: Ljava/lang/Object :: v18 = p1 $fileOffset  + v17::DD,97054:DD,97090
97055 :: PRED :: IF :: Z :: if (v20 <= #(0)) goto 70::CF,97090
97054 :: EXPR :: assign :: Z :: v20 = v18 == v19::DD,97055
97056 :: EXPR :: reference :: J :: v21 = p0 $this .maxSize::DD,97090
97059 :: EXPR :: reference :: I :: v23 = p0 $this .pageSize::DD,97062
97063 :: EXPR :: assign :: Ljava/lang/Object :: v25 = p1 $fileOffset  / v24::CF,97064
97062 :: EXPR :: assign :: J :: v24 = CONVERT I to J v23::CF,97063
97065 :: EXPR :: reference :: I :: v27 = p0 $this .pageSize::DD,97068
97064 :: EXPR :: assign :: I :: v26 = CONVERT J to I v25::DD,97092
97069 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v22 / v28::CF,97070
97068 :: EXPR :: assign :: J :: v28 = CONVERT I to J v27::CF,97069
97071 :: EXPR :: reference :: I :: v31 = p0 $this .pageSize::DD,97074
97070 :: EXPR :: assign :: I :: v30 = CONVERT J to I v29::DD,97078:DD,97093
97075 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v22 % v32::DD,97076
97074 :: EXPR :: assign :: J :: v32 = CONVERT I to J v31::CF,97075
97077 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 126::CF,97091:CD,97078:CD,97092:CD,97093
97076 :: EXPR :: assign :: Z :: v35 = v33 == #(0 l)::DD,97077
97078 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v30 + #(-1)::DD,97093
97080 :: CALL :: call :: I :: v40 = p0 $this .copy(v44)::JM,97085:CL,100937
97085 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v43 + v40::DD,97091:CF,97086
97087 :: PRED :: IF :: Z :: if (v44 <= v38) goto 113::CD,97080:CD,97085:CD,97086:CD,97091:CD,97092:CD,97093:CF,97088
97086 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(1)::DD,97092:CF,97091
97089 :: EXPR :: assign :: null :: PHI v14 = #(0), v9::DD,97048:DD,97091
97088 :: NORM :: compound :: I :: return v43::DD,97017
97091 :: EXPR :: assign :: null :: PHI v43 = v14, v14, v41::CF,97092:DD,97085:DD,97088
97090 :: EXPR :: assign :: null :: PHI v22 = v18, v21::DD,97069:DD,97075
97093 :: EXPR :: assign :: null :: PHI v38 = v30, v37, v38::DD,97087:DD,97093
97092 :: EXPR :: assign :: null :: PHI v44 = v26, v26, v42::CF,97093:DD,97086:DD,97087
97139 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.synch()::CD,97146
97143 :: EXPR :: reference :: Lorg/hsqldb/persist/RandomAccessInterface :: v3 = p0 $this .dest::DD,97146
97146 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 24::CD,97150
97150 :: CALL :: call :: V :: v5.synch()::CL,65845:CL,65890:CL,65803
97153 :: EXPR :: reference :: J :: v7 = p0 $this .savedLength::DD,97156
97156 :: EXPR :: modify :: J :: p0 $this .synchLength = v7::
97191 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputBinary.reset()::CD,97195
97195 :: CALL :: call :: V :: p0 $this .reset()::CL,75937
97198 :: EXPR :: modify :: I :: p0 $this .storageSize = #(0)::
97201 :: EXPR :: modify :: I :: p0 $this .sizePosition = #(-1)::
97210 :: ENTR :: entry :: null :: org.hsqldb.persist.BitMapCachedObject.write(org.hsqldb.rowio.RowOutputInterface)::CD,97215
97215 :: CALL :: call :: V :: p0 $this .write(p1 $out , #(null))::CL,101256
97224 :: ENTR :: entry :: null :: org.hsqldb.persist.IntArrayCachedObject.write(org.hsqldb.rowio.RowOutputInterface)::CD,97229
97229 :: CALL :: call :: V :: p0 $this .write(p1 $out , #(null))::CL,101309
97238 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.write(org.hsqldb.rowio.RowOutputInterface)::CD,97243
97243 :: CALL :: call :: V :: p0 $this .write(p1 $out , #(null))::CL,101359
97299 :: EXIT :: exit :: J :: org.hsqldb.lib.ArrayUtil.getBinaryNormalisedCeiling(long,int)::JM,92589
97298 :: ENTR :: entry :: null :: org.hsqldb.lib.ArrayUtil.getBinaryNormalisedCeiling(long,int)::JM,97307:CF,97299:CD,97303:CD,97304:CD,97305:CD,97306:CD,97309:CD,97310
97303 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(-1 l) ? p2 $null ::DD,97304
97305 :: EXPR :: assign :: Z :: v7 = v6 == p1 $value ::DD,97306
97304 :: EXPR :: assign :: Ljava/lang/Object :: v6 = p1 $value  && v5::DD,97305:DD,97308:DD,97310
97307 :: EXPR :: assign :: Ljava/lang/Object :: v10 = #(1 l) ? p2 $null ::CF,97308
97306 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 28::CF,97310:CD,97307:CD,97308
97309 :: NORM :: compound :: J :: return v12::CF,97299
97308 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v6 + v10::DD,97310
97310 :: EXPR :: assign :: null :: PHI v12 = v6, v11::CF,97309
97421 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.checkBuffer()::CD,97428
97425 :: EXPR :: reference :: Z :: v3 = p0 $this .readOnly::DD,97428
97428 :: PRED :: IF :: Z :: if (v3 == #(0)) goto 9::CD,97433:CD,97434:CD,97444:CD,97448:CD,97449:CD,97450:CD,97451
97430 :: EXPR :: reference :: J :: v5 = p0 $this .currentPosition::DD,97433
97433 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 ? #(24)::CF,97434
97435 :: EXPR :: reference :: J :: v9 = p0 $this .currentPosition::DD,97450
97434 :: EXPR :: assign :: I :: v8 = CONVERT J to I v7::
97438 :: EXPR :: reference :: J :: v10 = p0 $this .bufferPosition::DD,97449
97441 :: EXPR :: reference :: Ljava/nio/MappedByteBuffer :: v11 = p0 $this .buffer::JM,97444:JM,97448
97444 :: CALL :: call :: I :: v13 = v11.position()::JM,97444:JM,97448
97449 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v10 + v14::CF,97450
97448 :: EXPR :: assign :: J :: v14 = CONVERT I to J v13::CF,97449
97451 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 82::CD,97465:CD,97496
97450 :: EXPR :: assign :: Z :: v16 = v9 == v15::DD,97451
97452 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v22 = p0 $this .buffers::
97455 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v8]::DD,97459
97459 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = v23::
97462 :: EXPR :: reference :: J :: v24 = p0 $this .currentPosition::DD,97465
97465 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v24 && #(-16777216 l)::DD,97466
97466 :: EXPR :: modify :: J :: p0 $this .bufferPosition = v26::
97486 :: EXPR :: reference :: Ljava/nio/MappedByteBuffer :: v17 = p0 $this .buffer::DD,97496
97489 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v18 = p0 $this .buffers::
97492 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v18[v8]::DD,97496
97497 :: EXPR :: reference :: [Ljava/nio/MappedByteBuffer :: v20 = p0 $this .buffers::
97496 :: PRED :: IF :: Z :: if (v17 == v19) goto 104::
97500 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v20[v8]::DD,97504
97504 :: EXPR :: modify :: Ljava/nio/MappedByteBuffer :: p0 $this .buffer = v21::
97533 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.swap(int,int)::
97539 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
97542 :: EXPR :: reference :: I :: v6 = v5[p1 $i1 ]::DD,97584
97546 :: EXPR :: reference :: [I :: v7 = p0 $this .values::
97549 :: EXPR :: reference :: I :: v8 = v7[p1 $i1 ]::DD,97591
97553 :: EXPR :: reference :: [I :: v9 = p0 $this .keys::
97556 :: EXPR :: reference :: [I :: v10 = p0 $this .keys::
97559 :: EXPR :: reference :: I :: v11 = v10[p2 $i2 ]::DD,97563
97563 :: EXPR :: modify :: I :: v9[p1 $i1 ] = v11::
97567 :: EXPR :: reference :: [I :: v12 = p0 $this .values::
97570 :: EXPR :: reference :: [I :: v13 = p0 $this .values::
97573 :: EXPR :: reference :: I :: v14 = v13[p2 $i2 ]::DD,97577
97577 :: EXPR :: modify :: I :: v12[p1 $i1 ] = v14::
97581 :: EXPR :: reference :: [I :: v15 = p0 $this .keys::
97584 :: EXPR :: modify :: I :: v15[p2 $i2 ] = v6::
97588 :: EXPR :: reference :: [I :: v16 = p0 $this .values::
97591 :: EXPR :: modify :: I :: v16[p2 $i2 ] = v8::
97617 :: EXIT :: exit :: Z :: org.hsqldb.lib.DoubleIntIndex.lessThan(int,int)::JM,92448:JM,92510
97616 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.lessThan(int,int)::CE,97617:CD,97625
97622 :: EXPR :: reference :: Z :: v5 = p0 $this .sortOnValues::DD,97625
97625 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 42::CD,97640:CD,97672
97626 :: EXPR :: reference :: [I :: v7 = p0 $this .values::
97629 :: EXPR :: reference :: I :: v8 = v7[p1 $i ]::DD,97640
97633 :: EXPR :: reference :: [I :: v9 = p0 $this .values::
97636 :: EXPR :: reference :: I :: v10 = v9[p2 $j ]::DD,97640
97641 :: NORM :: compound :: Z :: return #(1)::DD,97617
97640 :: PRED :: IF :: Z :: if (v8 >= v10) goto 25::CD,97641:CD,97656
97642 :: EXPR :: reference :: [I :: v11 = p0 $this .values::
97645 :: EXPR :: reference :: I :: v12 = v11[p1 $i ]::DD,97656
97649 :: EXPR :: reference :: [I :: v13 = p0 $this .values::
97652 :: EXPR :: reference :: I :: v14 = v13[p2 $j ]::DD,97656
97657 :: NORM :: compound :: Z :: return #(0)::DD,97617
97656 :: PRED :: IF :: Z :: if (v12 <= v14) goto 42::CD,97657:CD,97672
97658 :: EXPR :: reference :: [I :: v15 = p0 $this .keys::
97661 :: EXPR :: reference :: I :: v16 = v15[p1 $i ]::DD,97672
97665 :: EXPR :: reference :: [I :: v17 = p0 $this .keys::
97668 :: EXPR :: reference :: I :: v18 = v17[p2 $j ]::DD,97672
97673 :: NORM :: compound :: Z :: return #(1)::DD,97617
97672 :: PRED :: IF :: Z :: if (v16 >= v18) goto 59::CD,97673:CD,97674
97674 :: NORM :: compound :: Z :: return #(0)::DD,97617
97693 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.moveAndInsertRow(int,int)::
97699 :: EXPR :: reference :: [I :: v5 = p0 $this .keys::
97702 :: EXPR :: reference :: I :: v6 = v5[p1 $i ]::DD,97724
97706 :: EXPR :: reference :: [I :: v7 = p0 $this .values::
97709 :: EXPR :: reference :: I :: v8 = v7[p1 $i ]::DD,97731
97721 :: EXPR :: reference :: [I :: v13 = p0 $this .keys::
97724 :: EXPR :: modify :: I :: v13[p2 $j ] = v6::
97728 :: EXPR :: reference :: [I :: v14 = p0 $this .values::
97731 :: EXPR :: modify :: I :: v14[p2 $j ] = v8::
97755 :: EXIT :: exit :: J :: org.hsqldb.persist.DataSpaceManagerBlocks.getFileBlocks(int,int)::JM,92851:JM,92882:JM,92885:JM,92857
97754 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getFileBlocks(int,int)::CE,97755:CD,97769:CD,97775:CD,97776:CD,97777
97769 :: CALL :: call :: I :: v9 = p0 $this .getExistingBlockIndex(p1 $tableId , p2 $blockCount )::JM,97775:CL,101560
97775 :: EXPR :: assign :: J :: v10 = CONVERT I to J v9::DD,97776:DD,97782
97777 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 53::CD,97781:CD,97782:CD,97792:CD,97793:CD,97808
97776 :: EXPR :: assign :: Z :: v12 = v10 == #(0 l)::DD,97777
97778 :: EXPR :: reference :: I :: v19 = p0 $this .fileBlockSize::DD,97781
97781 :: EXPR :: assign :: J :: v24 = CONVERT I to J v19::CF,97782
97782 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v10 * v24::DD,97792
97793 :: CALL :: call :: J :: v15 = p0 $this .getNewFileBlocks(p1 $tableId , p2 $blockCount )::JM,97808:CL,101594
97792 :: NORM :: compound :: J :: return v25::DD,97755
97808 :: NORM :: compound :: J :: return v15::DD,97755
97839 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerSimple.getFileBlocks(int,int)::CE,97840:CD,97854:CD,97859
97840 :: EXIT :: exit :: J :: org.hsqldb.persist.DataSpaceManagerSimple.getFileBlocks(int,int)::JM,92851:JM,92882:JM,92885:JM,92857
97854 :: CALL :: call :: J :: v11 = v5.enlargeFileSpace(v9)::JM,97859:CL,72504
97859 :: NORM :: compound :: J :: return v11::DD,97840
97865 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.resetList()::CD,97878
97878 :: CALL :: call :: V :: v3.freeTableSpace(v4, v5, #(0 l), #(0 l), #(0))::CL,71955:CL,72158
97893 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.add(long,long)::CD,97919
97919 :: CALL :: call :: I :: v15 = p0 $this .add(v12, v13)::CL,88099
97941 :: ENTR :: entry :: null :: org.hsqldb.lib.DoubleIntIndex.compare(int)::CE,97942:CD,97949
97942 :: EXIT :: exit :: I :: org.hsqldb.lib.DoubleIntIndex.compare(int)::JM,93144
97946 :: EXPR :: reference :: Z :: v4 = p0 $this .sortOnValues::DD,97949
97949 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 40::CD,97960:CD,97985
97950 :: EXPR :: reference :: I :: v14 = p0 $this .targetSearchValue::DD,97960
97953 :: EXPR :: reference :: [I :: v15 = p0 $this .values::
97956 :: EXPR :: reference :: I :: v16 = v15[p1 $i ]::DD,97960
97961 :: NORM :: compound :: I :: return #(1)::DD,97942
97960 :: PRED :: IF :: Z :: if (v14 <= v16) goto 23::CD,97961:CD,97972
97962 :: EXPR :: reference :: I :: v17 = p0 $this .targetSearchValue::DD,97972
97965 :: EXPR :: reference :: [I :: v18 = p0 $this .values::
97968 :: EXPR :: reference :: I :: v19 = v18[p1 $i ]::DD,97972
97973 :: NORM :: compound :: I :: return #(-1)::DD,97942
97972 :: PRED :: IF :: Z :: if (v17 >= v19) goto 38::CD,97973:CD,97974
97975 :: EXPR :: reference :: I :: v6 = p0 $this .targetSearchValue::DD,97985
97974 :: NORM :: compound :: I :: return #(0)::DD,97942
97978 :: EXPR :: reference :: [I :: v7 = p0 $this .keys::
97981 :: EXPR :: reference :: I :: v8 = v7[p1 $i ]::DD,97985
97985 :: PRED :: IF :: Z :: if (v6 <= v8) goto 55::CD,97986:CD,97997
97987 :: EXPR :: reference :: I :: v9 = p0 $this .targetSearchValue::DD,97997
97986 :: NORM :: compound :: I :: return #(1)::DD,97942
97990 :: EXPR :: reference :: [I :: v10 = p0 $this .keys::
97993 :: EXPR :: reference :: I :: v11 = v10[p1 $i ]::DD,97997
97997 :: PRED :: IF :: Z :: if (v9 >= v11) goto 70::CD,97998:CD,97999
97999 :: NORM :: compound :: I :: return #(0)::DD,97942
97998 :: NORM :: compound :: I :: return #(-1)::DD,97942
98020 :: ENTR :: entry :: null :: org.hsqldb.persist.Cache.cleanUp(boolean)::CD,98025:CD,98033:CD,98060:CD,98161:CD,98165:CD,98166:CD,98170:CD,98177:CD,98183:CD,98188
98025 :: CALL :: call :: V :: p0 $this .updateAccessCounts()::CL,88463
98033 :: PRED :: IF :: Z :: if (p1 $all  == #(0)) goto 31::CD,98037:CD,98040:CD,98183
98034 :: EXPR :: reference :: I :: v14 = p0 $this .accessCount::DD,98037
98037 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 + #(1)::DD,98183
98040 :: CALL :: call :: I :: v13 = p0 $this .getAccessCountCeiling(v9, v11)::JM,98183:CL,68614
98060 :: CALL :: call :: V :: v24.reset()::CL,75752
98067 :: CALL :: call :: Ljava/lang/Object :: v31 = v29.next()::JM,98071:CL,35178
98071 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::DD,98118
98075 :: CALL :: call :: I :: v35 = v33.getAccessCount()::JM,98079:CL,101616
98079 :: PRED :: IF :: Z :: if (v35 >= v17) goto 118::CD,98080:CD,98084:CD,98184
98080 :: CALL :: call :: Z :: v37 = v32.isKeepInMemory()::JM,98084:CL,93795
98084 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 118::CD,98184
98086 :: CALL :: call :: Z :: v40 = v32.isNew()::JM,98090:CL,101656
98091 :: CALL :: call :: I :: v42 = v32.getStorageSize()::JM,98095:CL,57331
98090 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 148::CD,98091:CD,98095:CD,98185
98095 :: PRED :: IF :: Z :: if (v42 < #(4096)) goto 148::CD,98185
98097 :: CALL :: call :: Z :: v46 = v32.hasChanged()::JM,98101:CL,75833
98101 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 174::CD,98102:CD,98186
98103 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 174::CD,98186
98102 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 167::CD,98103:CD,98186
98108 :: CALL :: call :: V :: v48.setAccessCount(v17)::CL,101662
98113 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 206::CF,98187:CD,98117
98114 :: EXPR :: reference :: [Lorg/hsqldb/persist/CachedObject :: v50 = p0 $this .rowTable::
98117 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v63 + #(1)::DD,98187
98118 :: EXPR :: modify :: Ljava/lang/Object :: v50[v63] = v32::
98123 :: CALL :: call :: V :: v32.setInMemory(#(0))::CL,93809
98122 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 243::CD,98123:CD,98130:CD,98136:CD,98140:CD,98141
98130 :: CALL :: call :: V :: v54.remove()::CL,93820
98133 :: EXPR :: reference :: J :: v56 = p0 $this .cacheBytesLength::DD,98141
98136 :: CALL :: call :: I :: v58 = v32.getStorageSize()::JM,98140:CL,57331
98141 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v56 - v59::DD,98142
98140 :: EXPR :: assign :: J :: v59 = CONVERT I to J v58::CF,98141
98142 :: EXPR :: modify :: J :: p0 $this .cacheBytesLength = v60::
98149 :: EXPR :: reference :: [Lorg/hsqldb/persist/CachedObject :: v61 = p0 $this .rowTable::DD,98152
98153 :: PRED :: IF :: Z :: if (v52 != v62) goto 268::CF,98188:CD,98154
98152 :: EXPR :: assign :: I :: v62 = v61.length::CF,98153
98154 :: CALL :: call :: V :: p0 $this .saveRows(v52)::CL,75772
98161 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,98165:CL,35301
98165 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 72::CD,98067:CD,98071:CD,98075:CD,98079:CD,98086:CD,98090:CD,98097:CD,98101:CD,98108:CD,98113:CD,98122:CD,98152:CD,98153:CD,98161:CD,98184:CD,98185:CD,98186:CD,98187:CD,98188
98166 :: CALL :: call :: V :: p0 $this .saveRows(v63)::CL,75772
98170 :: CALL :: call :: V :: p0 $this .setAccessCountFloor(v17)::CL,101704
98174 :: EXPR :: reference :: I :: v67 = p0 $this .accessCount::DD,98177
98177 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v67 + #(1)::DD,98178
98178 :: EXPR :: modify :: I :: p0 $this .accessCount = v68::
98183 :: EXPR :: assign :: null :: PHI v17 = v16, v13::DD,98079
98185 :: EXPR :: assign :: null :: PHI v44 = #(1), #(0)::DD,98103
98184 :: EXPR :: assign :: null :: PHI v38 = #(1), #(0)::DD,98102:DD,98122
98187 :: EXPR :: assign :: null :: PHI v52 = v63, v51::DD,98153:DD,98188:CF,98122
98186 :: EXPR :: assign :: null :: PHI v47 = #(1), #(0)::DD,98113
98188 :: EXPR :: assign :: null :: PHI v63 = #(0), v52, #(0)::DD,98117:DD,98187
98271 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.addOrRemoveObject(java.lang.Object,long,boolean)::CE,98272:CD,98290:CD,98329:CD,98330:CD,98446:CD,98499:CD,98501:JM,98464:JM,98421:JM,98311:JM,98331:JM,98381
98272 :: EXIT :: exit :: Ljava/lang/Object :: org.hsqldb.map.BaseHashMap.addOrRemoveObject(java.lang.Object,long,boolean)::JM,93431:JM,98445
98290 :: CALL :: call :: I :: v12 = v10.getLookup(v6)::JM,98499:CL,58807
98306 :: CALL :: call :: J :: v20 = v16.longKey(v18)::JM,98311:CL,93642
98311 :: EXPR :: assign :: Z :: v21 = v20 == p2 $longKey ::DD,98312
98313 :: EXPR :: reference :: [Ljava/lang/Object :: v27 = p0 $this .objectKeyTable::
98312 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 73::CD,98324:CD,98329:CD,98499:CD,98501
98316 :: EXPR :: reference :: Ljava/lang/Object :: v28 = v27[v25]::DD,98501
98324 :: CALL :: call :: I :: v24 = v22.getNextLookup(v25)::JM,98499:CL,48120
98329 :: PRED :: IF :: Z :: if (v25 >= #(0)) goto 36::CF,98501:CD,98306:CD,98311:CD,98312
98331 :: PRED :: IF :: Z :: if (p3 $null  == #(0)) goto 163::CD,98342:CD,98351:CD,98362:CD,98388
98330 :: PRED :: IF :: Z :: if (v25 < #(0)) goto 221::CD,98331:CD,98420:CD,98421
98332 :: EXPR :: reference :: [Ljava/lang/Object :: v60 = p0 $this .objectKeyTable::
98335 :: EXPR :: modify :: Ljava/lang/Object :: v60[v25] = #(null)::
98342 :: CALL :: call :: V :: v61.unlinkNode(v9, v26, v25)::CL,48135
98348 :: EXPR :: reference :: [I :: v63 = p0 $this .accessTable::DD,98351
98351 :: PRED :: IF :: Z :: if (v63 == #(null)) goto 135::
98352 :: EXPR :: reference :: [I :: v64 = p0 $this .accessTable::
98355 :: EXPR :: modify :: I :: v64[v25] = #(0)::
98359 :: EXPR :: reference :: Z :: v65 = p0 $this .minimizeOnEmpty::DD,98362
98363 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v66 = p0 $this .hashIndex::
98362 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 218::CD,98369:CF,98420
98366 :: EXPR :: reference :: I :: v67 = v66.elementCount::DD,98369
98369 :: PRED :: IF :: Z :: if (v67 != #(0)) goto 218::CD,98373:CF,98420
98373 :: CALL :: call :: V :: p0 $this .rehash(v68)::CL,48237
98378 :: EXPR :: reference :: [Ljava/lang/Object :: v51 = p0 $this .objectKeyTable::
98381 :: EXPR :: modify :: Ljava/lang/Object :: v51[v25] = p1 $object ::
98385 :: EXPR :: reference :: Z :: v52 = p0 $this .isLastAccessCount::DD,98388
98389 :: EXPR :: reference :: [I :: v57 = p0 $this .accessTable::
98388 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 199::CD,98395:CD,98407
98392 :: EXPR :: reference :: I :: v58 = p0 $this .accessCount::DD,98395
98395 :: EXPR :: assign :: Ljava/lang/Object :: v59 = v58 + #(1)::DD,98396:DD,98399
98396 :: EXPR :: modify :: I :: p0 $this .accessCount = v59::
98399 :: EXPR :: modify :: I :: v57[v25] = v59::
98404 :: EXPR :: reference :: Z :: v53 = p0 $this .isAccessCount::DD,98407
98407 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 218::CD,98415:CF,98420
98408 :: EXPR :: reference :: [I :: v54 = p0 $this .accessTable::
98411 :: EXPR :: reference :: I :: v55 = v54[v25]::DD,98415
98415 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 + #(1)::DD,98416
98416 :: EXPR :: modify :: I :: v54[v25] = v56::
98421 :: PRED :: IF :: Z :: if (p3 $null  == #(0)) goto 227::CD,98422:CD,98432
98420 :: NORM :: compound :: Ljava/lang/Object :: return v29::DD,98272
98423 :: EXPR :: reference :: Lorg/hsqldb/map/HashIndex :: v30 = p0 $this .hashIndex::
98422 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,98272
98426 :: EXPR :: reference :: I :: v31 = v30.elementCount::DD,98432
98429 :: EXPR :: reference :: I :: v32 = p0 $this .threshold::DD,98432
98433 :: CALL :: call :: Z :: v45 = p0 $this .reset()::CL,48547
98432 :: PRED :: IF :: Z :: if (v31 < v32) goto 267::CD,98433:CD,98438:CD,98445:CD,98455:CD,98471:CD,98498
98438 :: CALL :: call :: Ljava/lang/Object :: v50 = p0 $this .addOrRemoveObject(p1 $object , p2 $longKey , p3 $null )::JM,98445:CL,98271
98445 :: NORM :: compound :: Ljava/lang/Object :: return v50::DD,98272
98446 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v46 = new java.util.NoSuchElementException::
98455 :: CALL :: call :: I :: v35 = v33.linkNode(v9, v26)::CL,48657
98461 :: EXPR :: reference :: [Ljava/lang/Object :: v36 = p0 $this .objectKeyTable::
98464 :: EXPR :: modify :: Ljava/lang/Object :: v36[v35] = p1 $object ::
98468 :: EXPR :: reference :: Z :: v37 = p0 $this .isLastAccessCount::DD,98471
98471 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 316::CD,98478:CD,98490
98472 :: EXPR :: reference :: [I :: v41 = p0 $this .accessTable::
98475 :: EXPR :: reference :: I :: v42 = p0 $this .accessCount::DD,98478
98479 :: EXPR :: modify :: I :: p0 $this .accessCount = v43::
98478 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 + #(1)::DD,98479:DD,98482
98482 :: EXPR :: modify :: I :: v41[v35] = v43::
98487 :: EXPR :: reference :: Z :: v38 = p0 $this .isAccessCount::DD,98490
98491 :: EXPR :: reference :: [I :: v39 = p0 $this .accessTable::
98490 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 332::CF,98498
98494 :: EXPR :: modify :: I :: v39[v35] = #(1)::
98499 :: EXPR :: assign :: null :: PHI v25 = v12, v24::DD,98329:DD,98330
98498 :: NORM :: compound :: Ljava/lang/Object :: return v29::DD,98272
98501 :: EXPR :: assign :: null :: PHI v29 = v28, #(null)::DD,98420:DD,98498:CF,98330
98599 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowInputBinary.resetBlock(long,int)::CD,98605
98605 :: CALL :: call :: V :: p0 $null .resetBlock(p1 $null , p2 $null )::CL,101715
98624 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.ensureCapacity(int)::CD,98646:CD,98647:CD,98648:JM,98664:JM,98683:JM,98653:JM,98652
98643 :: EXPR :: reference :: [I :: v7 = p0 $this .map::DD,98646
98647 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 * #(32)::CF,98648
98646 :: EXPR :: assign :: I :: v8 = v7.length::DD,98647
98649 :: EXPR :: reference :: I :: v22 = p0 $this .limitPos::DD,98652
98648 :: PRED :: IF :: Z :: if (p1 $newSize  > v10) goto 52::CD,98652:CD,98660:CD,98663:CD,98664:CD,98665:CD,98687
98653 :: EXPR :: modify :: I :: p0 $this .limitPos = p1 $newSize ::
98652 :: PRED :: IF :: Z :: if (p1 $newSize  <= v22) goto 50::
98657 :: EXPR :: reference :: [I :: v11 = p0 $this .map::DD,98660
98660 :: EXPR :: assign :: I :: v12 = v11.length::DD,98687
98663 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v16 * #(32)::CF,98664
98662 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 * #(2)::DD,98687
98665 :: NORM :: declaration :: [I :: v17 = new []::DD,98680
98664 :: PRED :: IF :: Z :: if (p1 $newSize  > v13) goto 62::CD,98662:CD,98663:CD,98687:CF,98665
98680 :: EXPR :: modify :: [I :: p0 $this .map = v17::
98683 :: EXPR :: modify :: I :: p0 $this .limitPos = p1 $newSize ::
98687 :: EXPR :: assign :: null :: PHI v16 = v12, v15::DD,98662:DD,98663:DD,98665
100937 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.copy(int)::CE,100938:CD,100945:CD,100950:CD,101086:CD,101094:CD,101101:CD,101106:CD,101144:JM,100952
100938 :: EXIT :: exit :: I :: org.hsqldb.persist.RAShadowFile.copy(int)::JM,97031:JM,97085
100945 :: CALL :: call :: I :: v6 = v4.set(p1 $pageOffset )::JM,100950:CL,101200
100951 :: NORM :: compound :: I :: return #(0)::DD,100938
100950 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 15::CD,100951:CD,100952:CD,100956:CD,100957:CD,100964:CD,100968:CD,100972:CD,100973:CD,100974:CD,100983:CD,100990:CD,100997:CD,101003:CD,101028:CD,101035:CD,101042:CD,101052:CD,101061:CD,101071:CD,101077:CD,101078:CD,101082:CD,101150
100953 :: EXPR :: reference :: I :: v9 = p0 $this .pageSize::DD,100956
100952 :: EXPR :: assign :: J :: v8 = CONVERT I to J p1 $pageOffset ::DD,100957
100957 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v8 * v10::DD,100968:DD,100978
100956 :: EXPR :: assign :: J :: v10 = CONVERT I to J v9::CF,100957
100958 :: EXPR :: reference :: I :: v12 = p0 $this .pageSize::DD,101150
100961 :: EXPR :: reference :: [B :: v13 = p0 $this .buffer::DD,100964
100965 :: EXPR :: reference :: J :: v15 = p0 $this .maxSize::DD,100968
100964 :: EXPR :: assign :: I :: v14 = v13.length::DD,101077
100969 :: EXPR :: reference :: I :: v17 = p0 $this .pageSize::DD,100972
100968 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 - v11::DD,100973
100973 :: EXPR :: assign :: Z :: v19 = v16 == v18::DD,100974
100972 :: EXPR :: assign :: J :: v18 = CONVERT I to J v17::CF,100973
100975 :: EXPR :: reference :: J :: v21 = p0 $this .maxSize::DD,100978
100974 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 61::CF,101150:CD,100978:CD,100979
100979 :: EXPR :: assign :: I :: v23 = CONVERT J to I v22::DD,101150
100978 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v21 - v11::CF,100979
100980 :: EXPR :: reference :: Lorg/hsqldb/persist/RandomAccessInterface :: v25 = p0 $this .dest::DD,100983
100983 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 72::CD,100984
100984 :: CALL :: call :: V :: p0 $this .open()::CL,105155
100990 :: CALL :: call :: J :: v30 = v28.length()::JM,101078:CL,71603:CL,71612:CL,71577:CL,71590:CL,71564
100997 :: CALL :: call :: V :: v31.reset()::CL,75937
101000 :: EXPR :: reference :: I :: v33 = p0 $this .pageSize::DD,101003
101003 :: PRED :: IF :: Z :: if (v24 >= v33) goto 119::CD,101011:CD,101019
101011 :: CALL :: call :: V :: v34.fill(#(0), v36)::CL,105219
101019 :: CALL :: call :: V :: v38.reset()::CL,75937
101028 :: CALL :: call :: V :: v40.writeInt(v41)::CL,76182
101035 :: CALL :: call :: V :: v43.writeLong(v11)::CL,75947
101042 :: CALL :: call :: V :: v45.seek(v11)::CL,66626:CL,66637:CL,66668
101052 :: CALL :: call :: V :: v47.read(v48, #(12), v24)::CL,86964:CL,78591:CL,86943
101061 :: CALL :: call :: V :: v51.seek(v30)::CL,66626:CL,66637:CL,66668
101071 :: CALL :: call :: V :: v53.write(v54, #(0), v14)::CL,75969:CL,87174
101077 :: EXPR :: assign :: J :: v56 = CONVERT I to J v14::CF,101078
101079 :: EXPR :: modify :: J :: p0 $this .savedLength = v57::
101078 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v30 + v56::DD,101079
101082 :: NORM :: compound :: I :: return #(1)::DD,100938
101086 :: CALL :: call :: I :: v61 = v59.unset(p1 $pageOffset )::CL,105263
101094 :: CALL :: call :: V :: v62.seek(#(0 l))::CL,66626:CL,66637:CL,66668
101101 :: CALL :: call :: Z :: v67 = v65.setLength(v30)::CL,105323:CL,105364
101106 :: CALL :: call :: V :: p0 $this .close()::CL,54711
101144 :: CALL :: call :: Ljava/io/IOException :: v85 = toIOException(v58)::CL,54121
101150 :: EXPR :: assign :: null :: PHI v24 = v12, v23::DD,101003
101201 :: EXIT :: exit :: I :: org.hsqldb.map.BitMap.set(int)::JM,100950
101200 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.set(int)::CE,101201:CD,101206:CD,101210:CD,101211:CD,101212:CD,101220:CD,101221:CD,101226:CD,101231:CD,101232
101206 :: CALL :: call :: V :: p0 $this .ensureCapacity(v5)::CL,98624
101211 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $pos  && #(31)::CF,101212
101210 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $pos  ? #(5)::CF,101211
101213 :: EXPR :: reference :: [I :: v13 = p0 $this .map::
101212 :: EXPR :: assign :: Ljava/lang/Object :: v12 = #(-2147483648) ? v11::DD,101220:DD,101226
101216 :: EXPR :: reference :: I :: v14 = v13[v8]::DD,101220:DD,101226
101221 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 42::CD,101232
101220 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 && v12::DD,101221
101223 :: EXPR :: reference :: [I :: v18 = p0 $this .map::
101227 :: EXPR :: modify :: I :: v18[v8] = v19::
101226 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v14 || v12::DD,101227
101231 :: NORM :: compound :: I :: return v17::DD,101201
101232 :: EXPR :: assign :: null :: PHI v17 = #(0), #(1)::DD,101231
101256 :: ENTR :: entry :: null :: org.hsqldb.persist.BitMapCachedObject.write(org.hsqldb.rowio.RowOutputInterface,org.hsqldb.lib.LongLookup)::CD,101265:CD,101269:CD,101273:CD,101287:CD,101288:CD,101292
101265 :: CALL :: call :: [I :: v7 = v5.getIntArray()::JM,101269:CL,87825
101269 :: EXPR :: assign :: I :: v8 = v7.length::DD,101287
101273 :: CALL :: call :: V :: p1 $out .setStorageSize(v9)::CL,105419
101282 :: CALL :: call :: V :: p1 $out .writeInt(v12)::CL,76182
101287 :: PRED :: IF :: Z :: if (v16 < v8) goto 32::CD,101282:CD,101286:CD,101292
101286 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,101292
101288 :: CALL :: call :: V :: p1 $out .writeEnd()::CL,105430
101292 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::DD,101286:DD,101287
101309 :: ENTR :: entry :: null :: org.hsqldb.persist.IntArrayCachedObject.write(org.hsqldb.rowio.RowOutputInterface,org.hsqldb.lib.LongLookup)::CD,101318:CD,101322:CD,101339:CD,101340:CD,101344
101315 :: EXPR :: reference :: [I :: v5 = p0 $this .values::DD,101318
101318 :: EXPR :: assign :: I :: v6 = v5.length::DD,101339
101322 :: CALL :: call :: V :: p1 $out .setStorageSize(v7)::CL,105419
101334 :: CALL :: call :: V :: p1 $out .writeInt(v11)::CL,76182
101339 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,101334:CD,101338:CD,101344
101338 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,101344
101340 :: CALL :: call :: V :: p1 $out .writeEnd()::CL,105430
101344 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,101338:DD,101339
101359 :: ENTR :: entry :: null :: org.hsqldb.persist.DirectoryBlockCachedObject.write(org.hsqldb.rowio.RowOutputInterface,org.hsqldb.lib.LongLookup)::CD,101368:CD,101372:CD,101389:CD,101403:CD,101417:CD,101431:CD,101432:CD,101436:CD,101437:CD,101438:CD,101439
101365 :: EXPR :: reference :: [I :: v5 = p0 $this .tableIds::DD,101368
101368 :: EXPR :: assign :: I :: v6 = v5.length::DD,101389:DD,101403:DD,101417:DD,101431
101372 :: CALL :: call :: V :: p1 $out .setStorageSize(v7)::CL,105419
101384 :: CALL :: call :: V :: p1 $out .writeInt(v11)::CL,76182
101389 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,101384:CD,101388:CD,101436
101388 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,101436
101398 :: CALL :: call :: V :: p1 $out .writeInt(v17)::CL,76182
101403 :: PRED :: IF :: Z :: if (v20 < v6) goto 52::CD,101398:CD,101402:CD,101437
101402 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,101437
101412 :: CALL :: call :: V :: p1 $out .writeChar(v22)::CL,105465
101417 :: PRED :: IF :: Z :: if (v25 < v6) goto 80::CD,101412:CD,101416:CD,101438
101416 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,101438
101426 :: CALL :: call :: V :: p1 $out .writeChar(v27)::CL,105465
101431 :: PRED :: IF :: Z :: if (v30 < v6) goto 108::CD,101426:CD,101430:CD,101439
101430 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,101439
101432 :: CALL :: call :: V :: p1 $out .writeEnd()::CL,105430
101437 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,101402:DD,101403
101436 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,101388:DD,101389
101439 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,101430:DD,101431
101438 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,101416:DD,101417
101561 :: EXIT :: exit :: I :: org.hsqldb.persist.DataSpaceManagerBlocks.getExistingBlockIndex(int,int)::JM,97775
101560 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getExistingBlockIndex(int,int)::CE,101561:CD,101569:CD,101575:CD,101582
101569 :: CALL :: call :: I :: v8 = v5.removeFirstConsecutiveKeys(p2 $blockCount , #(-1))::JM,101575:JM,101582:CL,105527
101575 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 22::CD,101576:CF,101582
101576 :: CALL :: call :: V :: p0 $this .setDirectoryBlocksAsTable(p1 $tableId , v8, p2 $blockCount )::CL,105568
101582 :: NORM :: compound :: I :: return v8::DD,101561
101595 :: EXIT :: exit :: J :: org.hsqldb.persist.DataSpaceManagerBlocks.getNewFileBlocks(int,int)::JM,97808
101594 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getNewFileBlocks(int,int)::CE,101595:CD,101600:CD,101604:CD,101610
101600 :: CALL :: call :: V :: p0 $this .ensureDirectorySpaceAvailable(p2 $blockCount )::CL,105654
101604 :: CALL :: call :: J :: v7 = p0 $this .getNewFileBlocksNoCheck(p1 $tableId , p2 $blockCount )::JM,101610:CL,105825
101610 :: NORM :: compound :: J :: return v7::DD,101595
101617 :: EXIT :: exit :: I :: org.hsqldb.map.BaseHashMap.BaseHashIterator.getAccessCount()::JM,98079
101616 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.getAccessCount()::CE,101617:CD,101649
101636 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v8 = p0 $this .this$0::
101639 :: EXPR :: reference :: [I :: v9 = v8.accessTable::
101642 :: EXPR :: reference :: I :: v10 = p0 $this .lookup::
101645 :: EXPR :: reference :: I :: v11 = v9[v10]::DD,101649
101649 :: NORM :: compound :: I :: return v11::DD,101617
101657 :: EXIT :: exit :: Z :: org.hsqldb.persist.CachedObjectBase.isNew()::JM,98090
101656 :: ENTR :: entry :: null :: org.hsqldb.persist.CachedObjectBase.isNew()::CF,101657:CD,101660
101660 :: NORM :: compound :: Z :: return #(0)::CF,101657
101662 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.BaseHashIterator.setAccessCount(int)::JM,101692
101683 :: EXPR :: reference :: Lorg/hsqldb/map/BaseHashMap :: v9 = p0 $this .this$0::
101686 :: EXPR :: reference :: [I :: v10 = v9.accessTable::
101689 :: EXPR :: reference :: I :: v11 = p0 $this .lookup::
101692 :: EXPR :: modify :: I :: v10[v11] = p1 $count ::
101704 :: ENTR :: entry :: null :: org.hsqldb.map.BaseHashMap.setAccessCountFloor(int)::JM,101709
101709 :: EXPR :: modify :: I :: p0 $this .accessMin = p1 $count ::
101715 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowInputBase.resetBlock(long,int)::CD,101724:CD,101730:CD,101731:JM,101732:JM,101736:JM,101739:JM,101742
101721 :: EXPR :: modify :: I :: p0 $this .mark = #(0)::
101724 :: CALL :: call :: V :: p0 $this .reset()::CL,78578
101727 :: EXPR :: reference :: [B :: v7 = p0 $this .buffer::DD,101730
101731 :: PRED :: IF :: Z :: if (v8 >= p2 $null ) goto 27::CD,101732
101730 :: EXPR :: assign :: I :: v8 = v7.length::DD,101731
101733 :: EXPR :: modify :: [B :: p0 $this .buffer = v9::
101732 :: NORM :: declaration :: [B :: v9 = new []::DD,101733
101736 :: EXPR :: modify :: J :: p0 $this .filePos = p1 $filepos ::
101739 :: EXPR :: modify :: I :: p0 $this .count = p2 $null ::
101742 :: EXPR :: modify :: I :: p0 $this .size = p2 $null ::
105155 :: ENTR :: entry :: null :: org.hsqldb.persist.RAShadowFile.open()::CD,105165:CD,105169
105159 :: EXPR :: reference :: Lorg/hsqldb/Database :: v3 = p0 $this .database::
105162 :: EXPR :: reference :: Lorg/hsqldb/persist/Logger :: v4 = v3.logger::JM,105169:JM,105165
105165 :: CALL :: call :: Z :: v6 = v4.isStoredFileAccess()::JM,105169:JM,105165
105169 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 34::CD,105176:CD,105187:JM,71542:JM,71545:JM,71533:JM,71550
105176 :: CALL :: call :: Lorg/hsqldb/persist/RandomAccessInterface :: v18 = newScaledRAFile(v14, v15, #(0), #(3))::JM,105183:CL,70845
105183 :: EXPR :: modify :: Lorg/hsqldb/persist/RandomAccessInterface :: p0 $this .dest = v18::
105187 :: NORM :: declaration :: Lorg/hsqldb/persist/RAFileSimple :: v8 = new org.hsqldb.persist.RAFileSimple::DD,105203
105203 :: EXPR :: modify :: Lorg/hsqldb/persist/RandomAccessInterface :: p0 $this .dest = v8::
105219 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.fill(int,int)::CD,105225:CD,105246:CD,105248:JM,105240
105225 :: CALL :: call :: V :: p0 $this .ensureRoom(p2 $len )::CL,83964
105230 :: EXPR :: reference :: [B :: v7 = p0 $this .buffer::
105233 :: EXPR :: reference :: I :: v8 = p0 $this .count::DD,105236
105237 :: EXPR :: modify :: I :: p0 $this .count = v10::
105236 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::DD,105237
105241 :: EXPR :: modify :: B :: v7[v8] = v11::
105240 :: EXPR :: assign :: B :: v11 = CONVERT I to B p1 $b ::DD,105241
105245 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v13 + #(1)::DD,105248
105246 :: PRED :: IF :: Z :: if (v13 < p2 $len ) goto 11::CD,105236:CD,105240:CD,105245:CD,105248
105248 :: EXPR :: assign :: null :: PHI v13 = #(0), v12::DD,105245:DD,105246
105263 :: ENTR :: entry :: null :: org.hsqldb.map.BitMap.unset(int)::CD,105269:CD,105273:CD,105274:CD,105275:CD,105286:CD,105290
105269 :: CALL :: call :: V :: p0 $this .ensureCapacity(v5)::CL,98624
105273 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p1 $pos  ? #(5)::CF,105274
105275 :: EXPR :: assign :: Ljava/lang/Object :: v12 = #(-2147483648) ? v11::DD,105286
105274 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $pos  && #(31)::CF,105275
105276 :: EXPR :: reference :: [I :: v13 = p0 $this .map::
105279 :: EXPR :: reference :: I :: v14 = v13[v8]::DD,105290
105287 :: EXPR :: reference :: [I :: v20 = p0 $this .map::
105286 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v12 ^ #(-1)::DD,105290
105291 :: EXPR :: modify :: I :: v20[v8] = v21::
105290 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v14 && v19::DD,105291
105323 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileHybrid.setLength(long)::CD,105331
105331 :: CALL :: call :: Z :: v6 = v4.setLength(p1 $newLength )::CL,108121:CL,105364
105364 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFile.setLength(long)::CD,105386:CD,105396
105383 :: EXPR :: reference :: Ljava/io/RandomAccessFile :: v9 = p0 $this .file::JM,105386:JM,105390
105386 :: CALL :: call :: J :: v11 = v9.length()::JM,105386:JM,105390
105390 :: EXPR :: modify :: J :: p0 $this .fileLength = v11::
105393 :: EXPR :: modify :: J :: p0 $this .seekPosition = #(0 l)::
105396 :: CALL :: call :: V :: p0 $this .readIntoBuffer()::CL,86413
105419 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputBinary.setStorageSize(int)::JM,105424
105424 :: EXPR :: modify :: I :: p0 $this .storageSize = p1 $size ::
105430 :: ENTR :: entry :: null :: org.hsqldb.rowio.RowOutputBinary.writeEnd()::CD,105441:CD,105457
105441 :: CALL :: call :: Ljava/lang/RuntimeException :: v12 = runtimeError(#(201), #(RowOutputBinary))::CL,33706
105447 :: CALL :: call :: V :: p0 $this .write(#(0))::CL,82933
105451 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,105457
105454 :: EXPR :: reference :: I :: v6 = p0 $this .storageSize::DD,105457
105457 :: PRED :: IF :: Z :: if (v5 < v6) goto 22::CD,105447
105465 :: ENTR :: entry :: null :: org.hsqldb.lib.HsqlByteArrayOutputStream.writeChar(int)::CD,105470:CD,105480:CD,105484:CD,105485:CD,105496:CD,105500
105470 :: CALL :: call :: V :: p0 $this .ensureRoom(#(2))::CL,83952
105474 :: EXPR :: reference :: [B :: v6 = p0 $this .buffer::
105477 :: EXPR :: reference :: I :: v7 = p0 $this .count::DD,105480
105481 :: EXPR :: modify :: I :: p0 $this .count = v9::
105480 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 + #(1)::DD,105481
105485 :: EXPR :: assign :: B :: v12 = CONVERT I to B v11::DD,105486
105484 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p1 $v  ? #(8)::CF,105485
105486 :: EXPR :: modify :: B :: v6[v7] = v12::
105490 :: EXPR :: reference :: [B :: v13 = p0 $this .buffer::
105493 :: EXPR :: reference :: I :: v14 = p0 $this .count::DD,105496
105497 :: EXPR :: modify :: I :: p0 $this .count = v15::
105496 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v14 + #(1)::DD,105497
105501 :: EXPR :: modify :: B :: v13[v14] = v16::
105500 :: EXPR :: assign :: B :: v16 = CONVERT I to B p1 $v ::DD,105501
105527 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.removeFirstConsecutiveKeys(int,int)::CE,105528:CD,105533:CD,105538:JM,105539
105528 :: EXIT :: exit :: I :: org.hsqldb.lib.IntIndex.removeFirstConsecutiveKeys(int,int)::JM,101575:JM,101582
105533 :: CALL :: call :: I :: v6 = p0 $this .findFirstConsecutiveKeys(p1 $number )::JM,105538:CL,108152
105539 :: NORM :: compound :: I :: return p2 $def ::DD,105528
105538 :: PRED :: IF :: Z :: if (v6 != #(-1)) goto 14::CD,105539:CD,105548:CD,105553
105540 :: EXPR :: reference :: [I :: v8 = p0 $this .keys::
105543 :: EXPR :: reference :: I :: v9 = v8[v6]::DD,105553
105548 :: CALL :: call :: V :: p0 $this .removeRange(v6, v10)::CL,108239
105553 :: NORM :: compound :: I :: return v9::DD,105528
105568 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.setDirectoryBlocksAsTable(int,int,int)::CD,105605:CD,105606:CD,105607:CD,105615:CD,105616:CD,105617:JM,105596
105577 :: PRED :: IF :: Z :: if (v25 == v10) goto 57::CF,105613:CD,105578:CD,105584:CD,105590:CD,105614
105576 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v27 / #(2048)::CF,105577
105579 :: CALL :: call :: Z :: v13 = v26.keepInMemory(#(0))::CL,81099
105578 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 39::CD,105579
105584 :: CALL :: call :: Lorg/hsqldb/persist/DirectoryBlockCachedObject :: v16 = p0 $this .getDirectory(v27, #(1))::JM,105614:CL,88327
105591 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v27 % #(2048)::
105590 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v27 / #(2048)::DD,105613
105592 :: CALL :: call :: [I :: v22 = v19.getTableIdArray()::CL,81502
105596 :: EXPR :: modify :: I :: v22[v20] = p1 $tableId ::
105600 :: CALL :: call :: V :: v19.setChanged(#(1))::CL,88452
105605 :: EXPR :: assign :: Ljava/lang/Object :: v8 = p2 $blockIndex  + p3 $blockCount ::CF,105606
105604 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v27 + #(1)::DD,105617:CF,105615
105607 :: CALL :: call :: Z :: v29 = v26.keepInMemory(#(0))::CL,81099
105606 :: PRED :: IF :: Z :: if (v27 < v8) goto 19::CD,105576:CD,105577:CD,105591:CD,105592:CD,105600:CD,105604:CD,105605:CD,105613:CD,105614:CD,105615:CD,105616:CD,105617
105613 :: EXPR :: assign :: null :: PHI v18 = v25, v17::CF,105614:DD,105615
105615 :: EXPR :: assign :: null :: PHI v25 = #(-1), v18::CF,105616:DD,105577:DD,105613
105614 :: EXPR :: assign :: null :: PHI v19 = v26, v16::DD,105616:CF,105591
105617 :: EXPR :: assign :: null :: PHI v27 = p2 $blockIndex , v24::DD,105576:DD,105590:DD,105591:DD,105604:DD,105606:CF,105605
105616 :: EXPR :: assign :: null :: PHI v26 = #(null), v19::CF,105617:DD,105578:DD,105614
105654 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.ensureDirectorySpaceAvailable(int)::CD,105668:CD,105673
105668 :: CALL :: call :: Z :: v11 = v8.hasFileRoom(v9)::JM,105673:CL,108278
105673 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 162::CD,105674:CD,105692:CD,105707:CD,105712:CD,105718
105674 :: CALL :: call :: I :: v14 = p0 $this .getBlockIndexLimit()::CL,64161
105692 :: CALL :: call :: J :: v25 = v19.enlargeFileSpace(v23)::CL,72504
105707 :: CALL :: call :: V :: v26.addFileBlock(v25, v31)::CL,108300
105712 :: CALL :: call :: V :: p0 $this .createFileBlocksInDirectory(v14, v18, #(1))::CL,72825
105718 :: CALL :: call :: I :: v35 = p0 $this .getBlockIndexLimit()::CL,64161
105825 :: ENTR :: entry :: null :: org.hsqldb.persist.DataSpaceManagerBlocks.getNewFileBlocksNoCheck(int,int)::CE,105826:CD,105831:CD,105835:CD,105839:CD,105840:CD,105841:CD,105845:CD,105846:CD,105847:CD,105851:CD,105855:CD,105856:CD,105857:CD,105867:CD,105873
105826 :: EXIT :: exit :: J :: org.hsqldb.persist.DataSpaceManagerBlocks.getNewFileBlocksNoCheck(int,int)::JM,101610
105831 :: CALL :: call :: I :: v6 = p0 $this .getBlockIndexLimit()::JM,105835:CL,64161
105835 :: EXPR :: assign :: J :: v7 = CONVERT I to J v6::DD,105840
105836 :: EXPR :: reference :: I :: v8 = p0 $this .fileBlockSize::DD,105839
105839 :: EXPR :: assign :: J :: v9 = CONVERT I to J v8::CF,105840
105841 :: EXPR :: assign :: J :: v11 = CONVERT I to J p2 $blockCount ::DD,105846
105840 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v7 * v9::DD,105847:DD,105873:CF,105841
105842 :: EXPR :: reference :: I :: v12 = p0 $this .fileBlockSize::DD,105845
105845 :: EXPR :: assign :: J :: v13 = CONVERT I to J v12::CF,105846
105847 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v10 + v14::DD,105855
105846 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v11 * v13::CF,105847
105851 :: CALL :: call :: J :: v18 = v16.getFileFreePos()::JM,105855:CL,67842
105855 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 - v18::DD,105856
105857 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 55::CD,105861
105856 :: EXPR :: assign :: Z :: v21 = v19 == #(0 l)::DD,105857
105861 :: CALL :: call :: J :: v25 = v23.enlargeFileSpace(v19)::CL,72504
105867 :: CALL :: call :: V :: p0 $this .createFileBlocksInDirectory(v26, p2 $blockCount , p1 $tableId )::CL,72825
105873 :: NORM :: compound :: J :: return v10::DD,105826
108121 :: ENTR :: entry :: null :: org.hsqldb.persist.RAFileNIO.setLength(long)::CD,108129:CD,108130
108126 :: EXPR :: reference :: J :: v4 = p0 $this .fileLength::DD,108129
108129 :: EXPR :: assign :: Z :: v5 = p1 $newLength  == v4::DD,108130
108131 :: CALL :: call :: Z :: v13 = p0 $this .enlargeFile(p1 $newLength )::CL,92615
108130 :: PRED :: IF :: Z :: if (v5 <= #(0)) goto 17::CD,108131:CD,108137
108137 :: CALL :: call :: V :: p0 $this .seek(#(0 l))::CL,75879
108153 :: EXIT :: exit :: I :: org.hsqldb.lib.IntIndex.findFirstConsecutiveKeys(int)::JM,105538
108152 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.findFirstConsecutiveKeys(int)::CE,108153:CD,108160:JM,108193:JM,108169
108157 :: EXPR :: reference :: I :: v5 = p0 $this .count::DD,108160
108161 :: NORM :: compound :: I :: return #(-1)::DD,108153
108160 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 12::CD,108161:CD,108165:CD,108169
108162 :: EXPR :: reference :: Z :: v7 = p0 $this .sorted::DD,108165
108165 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 24::CD,108166:CF,108169
108166 :: CALL :: call :: V :: p0 $this .fastQuickSort()::CL,81564
108169 :: PRED :: IF :: Z :: if (p1 $number  != #(1)) goto 31::CD,108170:CD,108199:CD,108203:CD,108204
108170 :: NORM :: compound :: I :: return #(0)::DD,108153
108172 :: EXPR :: reference :: [I :: v11 = p0 $this .keys::
108175 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v24 - #(1)::
108176 :: EXPR :: reference :: I :: v13 = v11[v12]::DD,108188
108180 :: EXPR :: reference :: [I :: v14 = p0 $this .keys::
108183 :: EXPR :: reference :: I :: v15 = v14[v24]::DD,108187
108187 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v15 - #(1)::CF,108188
108189 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 64::CF,108201:CD,108190
108188 :: PRED :: IF :: Z :: if (v13 != v16) goto 75::CD,108189:CD,108191:CD,108192:CD,108193:CD,108195:CD,108199:CD,108201:CD,108202:CD,108203:CD,108204
108191 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v24 - v18::DD,108192
108190 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v24 - #(1)::DD,108201
108193 :: PRED :: IF :: Z :: if (v20 != p1 $number ) goto 75::CF,108202:CD,108194:CD,108195:CD,108199:CD,108203:CD,108204
108192 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v19 + #(1)::DD,108193
108195 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v24 + #(1)::DD,108204:CF,108203
108194 :: NORM :: compound :: I :: return v18::DD,108153
108196 :: EXPR :: reference :: I :: v10 = p0 $this .count::DD,108199
108199 :: PRED :: IF :: Z :: if (v24 < v10) goto 35::CD,108175:CD,108187:CD,108188:CD,108200
108201 :: EXPR :: assign :: null :: PHI v18 = v23, v17::DD,108191:DD,108194:DD,108202
108200 :: NORM :: compound :: I :: return #(-1)::DD,108153
108203 :: EXPR :: assign :: null :: PHI v23 = #(-1), v21::CF,108204:DD,108189:DD,108201
108202 :: EXPR :: assign :: null :: PHI v21 = v18, #(-1)::DD,108203:CF,108195
108204 :: EXPR :: assign :: null :: PHI v24 = #(1), v22::DD,108175:DD,108190:DD,108191:DD,108195:DD,108199
108239 :: ENTR :: entry :: null :: org.hsqldb.lib.IntIndex.removeRange(int,int)::CD,108252:CD,108262:CD,108263
108252 :: CALL :: call :: V :: adjustArray(#(73), v6, v7, p1 $start , v8)::CL,87634
108259 :: EXPR :: reference :: I :: v10 = p0 $this .count::DD,108263
108263 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - v11::DD,108264
108262 :: EXPR :: assign :: Ljava/lang/Object :: v11 = p2 $limit  - p1 $start ::CF,108263
108264 :: EXPR :: modify :: I :: p0 $this .count = v12::
108279 :: EXIT :: exit :: Z :: org.hsqldb.persist.TableSpaceManagerBlocks.hasFileRoom(long)::JM,105673
108278 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.hasFileRoom(long)::CE,108279:CD,108289:CD,108290:CD,108291
108283 :: EXPR :: reference :: J :: v4 = p0 $this .freshBlockLimit::DD,108289
108286 :: EXPR :: reference :: J :: v5 = p0 $this .freshBlockFreePos::DD,108289
108289 :: EXPR :: assign :: Ljava/lang/Object :: v6 = v4 - v5::DD,108290
108291 :: PRED :: IF :: Z :: if (v7 <= #(0)) goto 17::CD,108292:CD,108293
108290 :: EXPR :: assign :: Z :: v7 = v6 == p1 $blockSize ::DD,108291
108293 :: NORM :: compound :: Z :: return #(0)::DD,108279
108292 :: NORM :: compound :: Z :: return #(1)::DD,108279
108300 :: ENTR :: entry :: null :: org.hsqldb.persist.TableSpaceManagerBlocks.addFileBlock(long,long)::CD,108312:CD,108313:CD,108314:CD,108328
108306 :: EXPR :: reference :: J :: v5 = p0 $this .freshBlockLimit::DD,108312
108309 :: EXPR :: reference :: J :: v6 = p0 $this .freshBlockFreePos::DD,108312
108313 :: EXPR :: assign :: I :: v8 = CONVERT J to I v7::DD,108314
108312 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - v6::CF,108313
108314 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 37::CD,108323
108323 :: CALL :: call :: V :: p0 $this .release(v13, v8)::CL,92932
108328 :: CALL :: call :: V :: p0 $this .initialiseFileBlock(#(null), p1 $blockFreePos , p2 $null )::CL,72654
