[54552, 54553]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner.main(java.lang.String[])::CD,9:JM,36242:JM,36306
9 :: CALL :: call :: V :: v3.process(p1 $args )::JM,36242:JM,36306:CL,36147
426 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.<clinit>()::CD,430:CD,444
430 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
444 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,607:CD,613:CD,615:CD,621:CD,623:CD,629:CD,631:CD,637:CD,639:CD,645:CD,647:CD,648:CD,654:CD,660:CD,666:CD,672
607 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,613
613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
615 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,621
621 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
623 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,629
629 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
631 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,637
637 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,645
645 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
647 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
648 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,650
650 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
654 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,656
656 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
660 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,662
662 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
666 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,668
668 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
672 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,674
674 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,733:CD,741:CD,745:CD,753:CD,757:CD,765:CD,769:CD,777:CD,781:CD,789:CD,793:CD,801:CD,805:CD,813:CD,817:CD,825:CD,829:CD,837:CD,841:CD,849:CD,853:CD,861:CD,865:CD,873:CD,877:CD,885:CD,889:CD,897:CD,901:CD,909:CD,913:CD,921:CD,925:CD,933:CD,937:CD,945:CD,949:CD,957:CD,961:CD,969:CD,973:CD,981:CD,985:CD,993:CD,997:CD,1005:CD,1009:CD,1017:CD,1021:CD,1029:CD,1033:CD,1041:CD,1045:CD,1051:CD,1057:CD,1106:CD,1135:CD,1136:CD,1144:CD,1148:CD,1156:CD,1160:CD,1168:CD,1172:CD,1180:CD,1184:CD,1192:CD,1196:CD,1204:CD,1208:CD,1216:CD,1220:CD,1228:CD,1232:CD,1240:CD,1244:CD,1252:CD,1256:CD,1264:CD,1268:CD,1276:CD,1280:CD,1288:CD,1292:CD,1300:CD,1304:CD,1312:CD,1316:CD,1324:CD,1328:CD,1336:CD,1340:CD,1348:CD,1352:CD,1360:CD,1364:CD,1372:CD,1376:CD,1384:CD,1388:CD,1396:CD,1400:CD,1408:CD,1412:CD,1420:CD,1424:CD,1432:CD,1436:CD,1442:CD,1452:CD,1461:CD,1470:CD,1476
733 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
741 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
745 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
753 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
757 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
765 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
769 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
777 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
781 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
789 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
793 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
801 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
805 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
813 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
817 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
825 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
829 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
837 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
841 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
849 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
853 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
861 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
865 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
873 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
877 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
885 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
889 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
897 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
901 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
909 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
913 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
921 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
925 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
933 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
937 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
945 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
949 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
957 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
961 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
969 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
973 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
981 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
985 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
993 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
997 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
1005 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
1009 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
1017 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
1021 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
1029 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
1033 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
1041 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
1045 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
1051 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
1057 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1106
1058 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
1062 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
1066 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
1070 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
1074 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
1078 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
1082 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
1086 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
1090 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
1094 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
1098 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1102 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1106 :: EXPR :: assign :: I :: v193 = v173.length::DD,1135
1108 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1118
1114 :: CALL :: call :: I :: v197 = v194.length()::JM,1118
1118 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1119 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1124 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1128 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1134 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1476
1135 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1136:CD,1114:CD,1118:CD,1119:CD,1124:CD,1128:CD,1134:CD,1476
1136 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1144 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1148 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1156 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1160 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1168 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1172 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1180 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1184 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1192 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1196 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1204 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1208 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1216 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1220 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1228 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1232 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1240 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1244 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1252 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1256 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1264 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1268 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1276 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1280 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1288 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1292 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1300 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1304 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1312 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1316 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1324 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1328 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1336 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1340 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1348 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1352 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1360 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1364 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1372 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1376 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1384 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1388 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1396 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1400 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1408 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1412 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1420 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1424 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1432 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1436 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1442 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1452 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1461 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1470 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1476 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1134:DD,1135
1717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,1720:CD,1726:CD,1728:CD,1734:CD,1736:CD,1742:CD,1744:CD,1745:CD,1751:CD,1757
1720 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1726
1726 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
1728 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1734
1734 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
1736 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1742
1742 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
1744 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
1745 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,1747
1747 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1751 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,1753
1753 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1757 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,1759
1759 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1806 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,1809:CD,1828
1809 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
1810 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
1814 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
1818 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
1822 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
1828 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
1829 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
1833 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
1837 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
1841 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
1876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,1880:CD,1915:CD,1920:CD,1924:CD,1929:CD,1946
1880 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1915 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
1920 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
1924 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
1929 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
1946 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
1972 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,1975:CD,1976:JM,36897:JM,36930:JM,36900:JM,36933:JM,36903:JM,36936:JM,36906:JM,36939:JM,36909:JM,36912:JM,36915:JM,36918:JM,36921:JM,36924:JM,36927:CD,2004:CD,2006:CD,2007:CD,2063:CD,2065:CD,2066:CD,2122:CD,2124:CD,2125:CD,2165:CD,2167:CD,2168:CD,2196:CD,2198:CD,2199:CD,2227:CD,2229:CD,2254:CD,2256:CD,2257:CD,2285:CD,2287:CD,2288:CD,2320:CD,2322:CD,2323:CD,2359:CD,2361:CD,2362:CD,2394:CD,2396:CD,2421:CD,2423:CD,2424:CD,2456:CD,2458:CD,2459:CD,2491:CD,2493:CD,2494:CD,2530:CD,2532:CD,2533:CD,2589:CD,2591:CD,2592:CD,2648:CD,2650:CD,2651:CD,2707:CD,2709:CD,2710:CD,2766:CD,2768:CD,2793:CD,2795:CD,2796:CD,2828:CD,2830:CD,2831:CD,2863:CD,2865:CD,2866:CD,2902:CD,2904:CD,2905:CD,2949:CD,2951:CD,2952:CD,3000:CD,3002:CD,3003:CD,3059:CD,3061:CD,3062:CD,3126:CD,3128:CD,3129:CD,3185:CD,3187:CD,3188:CD,3236:CD,3238:CD,3239:CD,3283:CD,3285:CD,3286:CD,3326:CD,3328:CD,3329:CD,3361:CD,3363:CD,3364:CD,3400:CD,3402:CD,3403:CD,3459:CD,3461:CD,3462:CD,3506:CD,3508:CD,3509:CD,3553:CD,3555:CD,3556:CD,3608:CD,3610:CD,3611:CD,3639:CD,3641:CD,3642:CD,3674:CD,3676:CD,3677:CD,3709:CD,3711:CD,3712:CD,3748:CD,3750:CD,3751:CD,3791:CD,3793:CD,3794:CD,3842:CD,3844:CD,3845:CD,3901:CD,3903:CD,3904:CD,3964:CD,3966:CD,3967:CD,4027:CD,4029:CD,4030:CD,4082:CD,4084:CD,4085:CD,4121:CD,4123:CD,4124:CD,4164:CD,4166:CD,4167:CD,4199:CD,4201:CD,4202:CD,4238:CD,4240:CD,4241:CD,4277:CD,4279:CD,4280:CD,4316:CD,4318:CD,4319:CD,4363:CD,4365:CD,4366:CD,4414:CD,4416:CD,4417:CD,4461:CD,4463:CD,4464:CD,4496:CD,4498:CD,4499:CD,4527:CD,4529:CD,4530:CD,4562:CD,4564:CD,4565:CD,4601:CD,4603:CD,4604:CD,4640:CD,4642:CD,4643:CD,4679:CD,4681:CD,4682:CD,4714:CD,4716:CD,4717:CD,4749:CD,4751:CD,4752:CD,4784:CD,4786:CD,4787:CD,4823:CD,4825:CD,4826:CD,4866:CD,4868:CD,4869:CD,4905:CD,4907:CD,4908:CD,4940:CD,4942:CD,4943:CD,4975:CD,4977:CD,4978:CD,5014:CD,5016:CD,5017:CD,5049:CD,5051:CD,5052:CD,5080:CD,5082:CD,5083:CD,5119:CD,5121:CD,5122:CD,5166:CD,5168:CD,5169:CD,5225:CD,5227:CD,5228:CD,5288:CD,5290:CD,5291:CD,5355:CD,5357:CD,5358:CD,5418:CD,5420:CD,5421:CD,5477:CD,5479:CD,5480:CD,5524:CD,5526:CD,5527:CD,5563:CD,5565:CD,5566:CD,5602:CD,5604:CD,5605:CD,5641:CD,5643:CD,5644:CD,5684:CD,5686:CD,5687:CD,5731:CD,5733:CD,5734:CD,5778:CD,5780:CD,5781:CD,5813:CD,5815:CD,5816:CD,5844:CD,5846:CD,5847:CD,5875:CD,5877:CD,5878:CD,5910:CD,5912:CD,5913:CD,5949:CD,5951:CD,5952:CD,5992:CD,5994:CD,5995:CD,6039:CD,6041:CD,6042:CD,6086:CD,6088:CD,6089:CD,6137:CD,6139:CD,6140:CD,6188:CD,6190:CD,6191:CD,6223:CD,6225:CD,6226:CD,6262:CD,6264:CD,6265:CD,6301:CD,6303:CD,6304:CD,6336:CD,6338:CD,6339:CD,6371:CD,6373:CD,6374:CD,6406:CD,6408:CD,6409:CD,6441:CD,6443:CD,6444:CD,6472:CD,6474:CD,6498:CD,6500:CD,6501:CD,6507:CD,6513:CD,6519:CD,6525:CD,6531:CD,6537:CD,6543:CD,6549:CD,6555:CD,6561:CD,6567:CD,6573:CD,6579:CD,6585:CD,6591:CD,6597:CD,6603:CD,6609:CD,6615:CD,6621:CD,6627:CD,6633:CD,6639:CD,6645:CD,6651:CD,6657:CD,6663:CD,6669:CD,6675:CD,6681:CD,6687:CD,6693:CD,6699:CD,6705:CD,6711:CD,6717:CD,6723:CD,6729:CD,6735:CD,6741:CD,6747:CD,6753:CD,6759:CD,6765:CD,6771:CD,6777:CD,6783:CD,6789:CD,6795:CD,6801:CD,6807:CD,6813:CD,6819:CD,6825:CD,6831:CD,6837:CD,6843:CD,6849:CD,6855:CD,6861:CD,6867:CD,6873:CD,6879:CD,6885:CD,6891:CD,6897:CD,6903:CD,6909:CD,6915:CD,6921:CD,6927:CD,6933:CD,6939:CD,6945:CD,6951:CD,6957:CD,6963:CD,6969:CD,6975:CD,6981:CD,6987:CD,6993:CD,6999:CD,7005:CD,7011:CD,7017:CD,7023:CD,7029:CD,7035:CD,7041:CD,7047:CD,7053:CD,7059:CD,7065:CD,7071:CD,7077:CD,7083:CD,7089:CD,7095:CD,7101:CD,7107:CD,7113:CD,7119:CD,7125:CD,7131:CD,7139:CD,7145:CD,7148:CD,7171:CD,7173
1975 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,2004:CF,1976
1976 :: NORM :: declaration :: [I :: v10 = new []::
1977 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
2004 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
2006 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,2063:CF,2007
2007 :: NORM :: declaration :: [I :: v24 = new []::
2008 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
2012 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
2016 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
2020 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
2024 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
2028 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
2032 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
2036 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
2063 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
2065 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,2122:CF,2066
2066 :: NORM :: declaration :: [I :: v41 = new []::
2067 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
2071 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
2075 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
2079 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
2083 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
2087 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
2091 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
2095 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
2122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
2124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,2165:CF,2125
2125 :: NORM :: declaration :: [I :: v51 = new []::
2126 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
2130 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
2134 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
2138 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
2165 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
2167 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,2196:CF,2168
2168 :: NORM :: declaration :: [I :: v58 = new []::
2169 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
2196 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
2198 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,2227:CF,2199
2199 :: NORM :: declaration :: [I :: v64 = new []::
2200 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
2227 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
2229 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,2254
2254 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
2256 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,2285:CF,2257
2257 :: NORM :: declaration :: [I :: v83 = new []::
2258 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
2285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
2287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,2320:CF,2288
2288 :: NORM :: declaration :: [I :: v92 = new []::
2289 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
2293 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
2320 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
2322 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,2359:CF,2323
2323 :: NORM :: declaration :: [I :: v101 = new []::
2324 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
2328 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
2332 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
2359 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
2361 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,2394:CF,2362
2362 :: NORM :: declaration :: [I :: v111 = new []::
2363 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
2367 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
2394 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
2396 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,2421
2421 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
2423 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,2456:CF,2424
2424 :: NORM :: declaration :: [I :: v130 = new []::
2425 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
2429 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
2456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
2458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,2491:CF,2459
2459 :: NORM :: declaration :: [I :: v140 = new []::
2460 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
2464 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
2491 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
2493 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,2530:CF,2494
2494 :: NORM :: declaration :: [I :: v149 = new []::
2495 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
2499 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
2503 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
2530 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
2532 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,2589:CF,2533
2533 :: NORM :: declaration :: [I :: v159 = new []::
2534 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
2538 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
2542 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
2546 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
2550 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
2554 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
2558 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
2562 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
2589 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
2591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,2648:CF,2592
2592 :: NORM :: declaration :: [I :: v170 = new []::
2593 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
2597 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
2601 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
2605 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
2609 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
2613 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
2617 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
2621 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
2648 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
2650 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,2707:CF,2651
2651 :: NORM :: declaration :: [I :: v181 = new []::
2652 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
2656 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
2660 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
2664 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
2668 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
2672 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
2676 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
2680 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
2707 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
2709 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,2766:CF,2710
2710 :: NORM :: declaration :: [I :: v192 = new []::
2711 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
2715 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
2719 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
2723 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
2727 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
2731 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
2735 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
2739 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
2766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
2768 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,2793
2793 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
2795 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,2828:CF,2796
2796 :: NORM :: declaration :: [I :: v211 = new []::
2797 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
2801 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
2828 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
2830 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,2863:CF,2831
2831 :: NORM :: declaration :: [I :: v219 = new []::
2832 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
2836 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
2863 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
2865 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,2902:CF,2866
2866 :: NORM :: declaration :: [I :: v230 = new []::
2867 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
2871 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
2875 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
2902 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
2904 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,2949:CF,2905
2905 :: NORM :: declaration :: [I :: v239 = new []::
2906 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
2910 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
2914 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
2918 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
2922 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
2949 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
2951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,3000:CF,2952
2952 :: NORM :: declaration :: [I :: v248 = new []::
2953 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
2957 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
2961 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
2965 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
2969 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
2973 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
3000 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
3002 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,3059:CF,3003
3003 :: NORM :: declaration :: [I :: v258 = new []::
3004 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
3008 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
3012 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
3016 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
3020 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
3024 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
3028 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
3032 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
3059 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
3061 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,3126:CF,3062
3062 :: NORM :: declaration :: [I :: v269 = new []::
3063 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
3067 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
3071 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
3075 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
3079 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
3083 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
3087 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
3091 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
3095 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
3099 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
3126 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
3128 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,3185:CF,3129
3129 :: NORM :: declaration :: [I :: v276 = new []::
3130 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
3134 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
3138 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
3142 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
3146 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
3150 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
3154 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
3158 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
3185 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
3187 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,3236:CF,3188
3188 :: NORM :: declaration :: [I :: v285 = new []::
3189 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
3193 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
3197 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
3201 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
3205 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
3209 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
3236 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
3238 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,3283:CF,3239
3239 :: NORM :: declaration :: [I :: v295 = new []::
3240 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
3244 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
3248 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
3252 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
3256 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
3283 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
3285 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,3326:CF,3286
3286 :: NORM :: declaration :: [I :: v305 = new []::
3287 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
3291 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
3295 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
3299 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
3326 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
3328 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,3361:CF,3329
3329 :: NORM :: declaration :: [I :: v313 = new []::
3330 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
3334 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
3361 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
3363 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,3400:CF,3364
3364 :: NORM :: declaration :: [I :: v321 = new []::
3365 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
3369 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
3373 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
3400 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
3402 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,3459:CF,3403
3403 :: NORM :: declaration :: [I :: v329 = new []::
3404 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
3408 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
3412 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
3416 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
3420 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
3424 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
3428 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
3432 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
3459 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
3461 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,3506:CF,3462
3462 :: NORM :: declaration :: [I :: v338 = new []::
3463 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
3467 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
3471 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
3475 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
3479 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
3506 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
3508 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,3553:CF,3509
3509 :: NORM :: declaration :: [I :: v348 = new []::
3510 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
3514 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
3518 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
3522 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
3526 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
3553 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
3555 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,3608:CF,3556
3556 :: NORM :: declaration :: [I :: v355 = new []::
3557 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
3561 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
3565 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
3569 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
3573 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
3577 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
3581 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
3608 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
3610 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,3639:CF,3611
3611 :: NORM :: declaration :: [I :: v364 = new []::
3612 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
3639 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
3641 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,3674:CF,3642
3642 :: NORM :: declaration :: [I :: v374 = new []::
3643 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
3647 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
3674 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
3676 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,3709:CF,3677
3677 :: NORM :: declaration :: [I :: v382 = new []::
3678 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
3682 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
3709 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
3711 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,3748:CF,3712
3712 :: NORM :: declaration :: [I :: v391 = new []::
3713 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
3717 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
3721 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
3748 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
3750 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,3791:CF,3751
3751 :: NORM :: declaration :: [I :: v401 = new []::
3752 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
3756 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
3760 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
3764 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
3791 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
3793 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,3842:CF,3794
3794 :: NORM :: declaration :: [I :: v411 = new []::
3795 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
3799 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
3803 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
3807 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
3811 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
3815 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
3842 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
3844 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,3901:CF,3845
3845 :: NORM :: declaration :: [I :: v420 = new []::
3846 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
3850 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
3854 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
3858 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
3862 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
3866 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
3870 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
3874 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
3901 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
3903 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,3964:CF,3904
3904 :: NORM :: declaration :: [I :: v431 = new []::
3905 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
3909 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
3913 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
3917 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
3921 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
3925 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
3929 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
3933 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
3937 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
3964 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
3966 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,4027:CF,3967
3967 :: NORM :: declaration :: [I :: v440 = new []::
3968 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
3972 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
3976 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
3980 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
3984 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
3988 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
3992 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
3996 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
4000 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
4027 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
4029 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,4082:CF,4030
4030 :: NORM :: declaration :: [I :: v448 = new []::
4031 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
4035 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
4039 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
4043 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
4047 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
4051 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
4055 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
4082 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
4084 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,4121:CF,4085
4085 :: NORM :: declaration :: [I :: v456 = new []::
4086 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
4090 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
4094 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
4121 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
4123 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,4164:CF,4124
4124 :: NORM :: declaration :: [I :: v463 = new []::
4125 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
4129 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
4133 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
4137 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
4164 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
4166 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,4199:CF,4167
4167 :: NORM :: declaration :: [I :: v471 = new []::
4168 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
4172 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
4199 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
4201 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,4238:CF,4202
4202 :: NORM :: declaration :: [I :: v479 = new []::
4203 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
4207 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
4211 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
4238 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
4240 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,4277:CF,4241
4241 :: NORM :: declaration :: [I :: v490 = new []::
4242 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
4246 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
4250 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
4277 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
4279 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,4316:CF,4280
4280 :: NORM :: declaration :: [I :: v498 = new []::
4281 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
4285 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
4289 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
4316 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
4318 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,4363:CF,4319
4319 :: NORM :: declaration :: [I :: v507 = new []::
4320 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
4324 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
4328 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
4332 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
4336 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
4363 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
4365 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,4414:CF,4366
4366 :: NORM :: declaration :: [I :: v515 = new []::
4367 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
4371 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
4375 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
4379 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
4383 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
4387 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
4414 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
4416 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,4461:CF,4417
4417 :: NORM :: declaration :: [I :: v524 = new []::
4418 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
4422 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
4426 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
4430 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
4434 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
4461 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
4463 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,4496:CF,4464
4464 :: NORM :: declaration :: [I :: v533 = new []::
4465 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
4469 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
4496 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
4498 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,4527:CF,4499
4499 :: NORM :: declaration :: [I :: v542 = new []::
4500 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
4527 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
4529 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,4562:CF,4530
4530 :: NORM :: declaration :: [I :: v549 = new []::
4531 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
4535 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
4562 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
4564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,4601:CF,4565
4565 :: NORM :: declaration :: [I :: v557 = new []::
4566 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
4570 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
4574 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
4601 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
4603 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,4640:CF,4604
4604 :: NORM :: declaration :: [I :: v565 = new []::
4605 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
4609 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
4613 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
4640 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
4642 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,4679:CF,4643
4643 :: NORM :: declaration :: [I :: v572 = new []::
4644 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
4648 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
4652 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
4679 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
4681 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,4714:CF,4682
4682 :: NORM :: declaration :: [I :: v580 = new []::
4683 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
4687 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
4714 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
4716 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,4749:CF,4717
4717 :: NORM :: declaration :: [I :: v589 = new []::
4718 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
4722 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
4749 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
4751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,4784:CF,4752
4752 :: NORM :: declaration :: [I :: v598 = new []::
4753 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
4757 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
4784 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
4786 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,4823:CF,4787
4787 :: NORM :: declaration :: [I :: v605 = new []::
4788 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
4792 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
4796 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
4823 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
4825 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,4866:CF,4826
4826 :: NORM :: declaration :: [I :: v614 = new []::
4827 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
4831 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
4835 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
4839 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
4866 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
4868 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,4905:CF,4869
4869 :: NORM :: declaration :: [I :: v621 = new []::
4870 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
4874 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
4878 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
4905 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
4907 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,4940:CF,4908
4908 :: NORM :: declaration :: [I :: v628 = new []::
4909 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
4913 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
4940 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
4942 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,4975:CF,4943
4943 :: NORM :: declaration :: [I :: v638 = new []::
4944 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
4948 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
4975 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
4977 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,5014:CF,4978
4978 :: NORM :: declaration :: [I :: v646 = new []::
4979 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
4983 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
4987 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
5014 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
5016 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,5049:CF,5017
5017 :: NORM :: declaration :: [I :: v654 = new []::
5018 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
5022 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
5049 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
5051 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,5080:CF,5052
5052 :: NORM :: declaration :: [I :: v662 = new []::
5053 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
5080 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
5082 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,5119:CF,5083
5083 :: NORM :: declaration :: [I :: v669 = new []::
5084 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
5088 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
5092 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
5119 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
5121 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,5166:CF,5122
5122 :: NORM :: declaration :: [I :: v677 = new []::
5123 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
5127 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
5131 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
5135 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
5139 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
5166 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
5168 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,5225:CF,5169
5169 :: NORM :: declaration :: [I :: v685 = new []::
5170 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
5174 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
5178 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
5182 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
5186 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
5190 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
5194 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
5198 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
5225 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
5227 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,5288:CF,5228
5228 :: NORM :: declaration :: [I :: v694 = new []::
5229 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
5233 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
5237 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
5241 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
5245 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
5249 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
5253 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
5257 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
5261 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
5288 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
5290 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,5355:CF,5291
5291 :: NORM :: declaration :: [I :: v701 = new []::
5292 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
5296 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
5300 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
5304 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
5308 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
5312 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
5316 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
5320 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
5324 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
5328 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
5355 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
5357 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,5418:CF,5358
5358 :: NORM :: declaration :: [I :: v707 = new []::
5359 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
5363 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
5367 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
5371 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
5375 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
5379 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
5383 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
5387 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
5391 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
5418 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
5420 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,5477:CF,5421
5421 :: NORM :: declaration :: [I :: v713 = new []::
5422 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
5426 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
5430 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
5434 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
5438 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
5442 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
5446 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
5450 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
5477 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
5479 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,5524:CF,5480
5480 :: NORM :: declaration :: [I :: v720 = new []::
5481 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
5485 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
5489 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
5493 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
5497 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
5524 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
5526 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,5563:CF,5527
5527 :: NORM :: declaration :: [I :: v727 = new []::
5528 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
5532 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
5536 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
5563 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
5565 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,5602:CF,5566
5566 :: NORM :: declaration :: [I :: v735 = new []::
5567 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
5571 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
5575 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
5602 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
5604 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,5641:CF,5605
5605 :: NORM :: declaration :: [I :: v742 = new []::
5606 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
5610 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
5614 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
5641 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
5643 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,5684:CF,5644
5644 :: NORM :: declaration :: [I :: v750 = new []::
5645 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
5649 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
5653 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
5657 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
5684 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
5686 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,5731:CF,5687
5687 :: NORM :: declaration :: [I :: v757 = new []::
5688 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
5692 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
5696 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
5700 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
5704 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
5731 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
5733 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,5778:CF,5734
5734 :: NORM :: declaration :: [I :: v764 = new []::
5735 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
5739 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
5743 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
5747 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
5751 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
5778 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
5780 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,5813:CF,5781
5781 :: NORM :: declaration :: [I :: v771 = new []::
5782 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
5786 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
5813 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
5815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,5844:CF,5816
5816 :: NORM :: declaration :: [I :: v778 = new []::
5817 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
5844 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
5846 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,5875:CF,5847
5847 :: NORM :: declaration :: [I :: v787 = new []::
5848 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
5875 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
5877 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,5910:CF,5878
5878 :: NORM :: declaration :: [I :: v794 = new []::
5879 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
5883 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
5910 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
5912 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,5949:CF,5913
5913 :: NORM :: declaration :: [I :: v802 = new []::
5914 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
5918 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
5922 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
5949 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
5951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,5992:CF,5952
5952 :: NORM :: declaration :: [I :: v808 = new []::
5953 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
5957 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
5961 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
5965 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
5992 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
5994 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,6039:CF,5995
5995 :: NORM :: declaration :: [I :: v816 = new []::
5996 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
6000 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
6004 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
6008 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
6012 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
6039 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
6041 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,6086:CF,6042
6042 :: NORM :: declaration :: [I :: v823 = new []::
6043 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
6047 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
6051 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
6055 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
6059 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
6086 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
6088 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,6137:CF,6089
6089 :: NORM :: declaration :: [I :: v829 = new []::
6090 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
6094 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
6098 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
6102 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
6106 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
6110 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
6137 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
6139 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,6188:CF,6140
6140 :: NORM :: declaration :: [I :: v835 = new []::
6141 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
6145 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
6149 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
6153 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
6157 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
6161 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
6188 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
6190 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,6223:CF,6191
6191 :: NORM :: declaration :: [I :: v841 = new []::
6192 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
6196 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
6223 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
6225 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,6262:CF,6226
6226 :: NORM :: declaration :: [I :: v848 = new []::
6227 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
6231 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
6235 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
6262 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
6264 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,6301:CF,6265
6265 :: NORM :: declaration :: [I :: v854 = new []::
6266 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
6270 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
6274 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
6301 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
6303 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,6336:CF,6304
6304 :: NORM :: declaration :: [I :: v860 = new []::
6305 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
6309 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
6336 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
6338 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,6371:CF,6339
6339 :: NORM :: declaration :: [I :: v866 = new []::
6340 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
6344 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
6371 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
6373 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,6406:CF,6374
6374 :: NORM :: declaration :: [I :: v872 = new []::
6375 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
6379 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
6406 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
6408 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,6441:CF,6409
6409 :: NORM :: declaration :: [I :: v877 = new []::
6410 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
6414 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
6441 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
6443 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,6472:CF,6444
6444 :: NORM :: declaration :: [I :: v883 = new []::
6445 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
6472 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
6474 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,6498
6498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
6500 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
6501 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,6503
6503 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
6507 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,6509
6509 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
6513 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,6515
6515 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
6519 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,6521
6521 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
6525 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,6527
6527 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
6531 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,6533
6533 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
6537 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,6539
6539 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
6543 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,6545
6545 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
6549 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,6551
6551 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
6555 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,6557
6557 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
6561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,6563
6563 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
6567 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,6569
6569 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
6573 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,6575
6575 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
6579 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,6581
6581 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
6585 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,6587
6587 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
6591 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,6593
6593 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
6597 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,6599
6599 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
6603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,6605
6605 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
6609 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,6611
6611 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
6615 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,6617
6617 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
6621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,6623
6623 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
6627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,6629
6629 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
6633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,6635
6635 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
6639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,6641
6641 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
6645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,6647
6647 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
6651 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,6653
6653 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
6657 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,6659
6659 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
6663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,6665
6665 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
6669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,6671
6671 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
6675 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,6677
6677 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
6681 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,6683
6683 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
6687 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,6689
6689 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
6693 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,6695
6695 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
6699 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,6701
6701 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
6705 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,6707
6707 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
6711 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,6713
6713 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
6717 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,6719
6719 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
6723 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,6725
6725 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
6729 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,6731
6731 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
6735 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,6737
6737 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
6741 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,6743
6743 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
6747 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,6749
6749 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
6753 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,6755
6755 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
6759 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,6761
6761 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
6765 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,6767
6767 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
6771 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,6773
6773 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
6777 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,6779
6779 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
6783 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,6785
6785 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
6789 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,6791
6791 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
6795 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,6797
6797 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
6801 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,6803
6803 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
6807 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,6809
6809 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
6813 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,6815
6815 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
6819 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,6821
6821 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
6825 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,6827
6827 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
6831 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,6833
6833 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
6837 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,6839
6839 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
6843 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,6845
6845 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
6849 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,6851
6851 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
6855 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,6857
6857 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
6861 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,6863
6863 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
6867 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,6869
6869 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
6873 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,6875
6875 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
6879 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,6881
6881 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
6885 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,6887
6887 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
6891 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,6893
6893 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
6897 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,6899
6899 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
6903 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,6905
6905 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
6909 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,6911
6911 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
6915 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,6917
6917 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
6921 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,6923
6923 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
6927 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,6929
6929 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
6933 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,6935
6935 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
6939 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,6941
6941 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
6945 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,6947
6947 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
6951 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,6953
6953 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
6957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,6959
6959 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
6963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,6965
6965 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
6969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,6971
6971 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
6975 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,6977
6977 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
6981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,6983
6983 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
6987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,6989
6989 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
6993 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,6995
6995 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
6999 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,7001
7001 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
7005 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,7007
7007 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
7011 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,7013
7013 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
7017 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,7019
7019 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
7023 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,7025
7025 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
7029 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,7031
7031 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
7035 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,7037
7037 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
7041 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,7043
7043 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
7047 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,7049
7049 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
7053 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,7055
7055 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
7059 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,7061
7061 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
7065 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,7067
7067 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
7071 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,7073
7073 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
7077 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,7079
7079 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
7083 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,7085
7085 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
7089 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,7091
7091 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
7095 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,7097
7097 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
7101 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,7103
7103 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
7107 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,7109
7109 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
7113 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,7115
7115 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
7119 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,7121
7121 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
7125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,7127
7127 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
7131 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,7133
7133 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
7139 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
7145 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,7148:CL,36976
7148 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,7171
7164 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
7170 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,7173
7171 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,7164:CD,7170:CD,7173
7173 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,7170:DD,7171
10797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.<clinit>()::CD,10807:CD,10808:CD,10885:CD,10958:CD,11047:CD,11132:CD,11209:CD,11278:CD,11359:CD,11424:CD,11497:CD,11566:CD,11647:CD,11724:CD,11801:CD,11882:CD,11967:CD,12052:CD,12133:CD,12210:CD,12299:CD,12388:CD,12479:CD,12480:CD,12488:CD,12496:CD,12504:CD,12512:CD,12520:CD,12528:CD,12536:CD,12544:CD,12552:CD,12560:CD,12568:CD,12576:CD,12584:CD,12592:CD,12600:CD,12608:CD,12616:CD,12624:CD,12632:CD,12640:CD,12648:CD,12650:CD,12652
10807 :: NORM :: declaration :: [[I :: v6 = new [][]::CF,10808
10808 :: NORM :: declaration :: [I :: v8 = new []::DD,10881
10809 :: EXPR :: modify :: I :: v8[#(0)] = #(6)::
10813 :: EXPR :: modify :: I :: v8[#(2)] = #(-2)::
10817 :: EXPR :: modify :: I :: v8[#(3)] = #(-3)::
10821 :: EXPR :: modify :: I :: v8[#(4)] = #(-2)::
10825 :: EXPR :: modify :: I :: v8[#(6)] = #(-1)::
10829 :: EXPR :: modify :: I :: v8[#(8)] = #(-2)::
10833 :: EXPR :: modify :: I :: v8[#(9)] = #(-2)::
10837 :: EXPR :: modify :: I :: v8[#(10)] = #(-2)::
10841 :: EXPR :: modify :: I :: v8[#(11)] = #(-2)::
10845 :: EXPR :: modify :: I :: v8[#(12)] = #(-2)::
10849 :: EXPR :: modify :: I :: v8[#(13)] = #(-3)::
10853 :: EXPR :: modify :: I :: v8[#(14)] = #(-4)::
10857 :: EXPR :: modify :: I :: v8[#(15)] = #(-4)::
10861 :: EXPR :: modify :: I :: v8[#(16)] = #(-3)::
10865 :: EXPR :: modify :: I :: v8[#(17)] = #(-3)::
10869 :: EXPR :: modify :: I :: v8[#(18)] = #(-3)::
10873 :: EXPR :: modify :: I :: v8[#(19)] = #(-2)::
10877 :: EXPR :: modify :: I :: v8[#(20)] = #(-4)::
10881 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
10885 :: NORM :: declaration :: [I :: v31 = new []::DD,10954
10886 :: EXPR :: modify :: I :: v31[#(1)] = #(4)::
10890 :: EXPR :: modify :: I :: v31[#(2)] = #(-1)::
10894 :: EXPR :: modify :: I :: v31[#(5)] = #(1)::
10898 :: EXPR :: modify :: I :: v31[#(6)] = #(-2)::
10902 :: EXPR :: modify :: I :: v31[#(7)] = #(-2)::
10906 :: EXPR :: modify :: I :: v31[#(8)] = #(-1)::
10910 :: EXPR :: modify :: I :: v31[#(9)] = #(-1)::
10914 :: EXPR :: modify :: I :: v31[#(10)] = #(-1)::
10918 :: EXPR :: modify :: I :: v31[#(11)] = #(-2)::
10922 :: EXPR :: modify :: I :: v31[#(12)] = #(-1)::
10926 :: EXPR :: modify :: I :: v31[#(14)] = #(-1)::
10930 :: EXPR :: modify :: I :: v31[#(15)] = #(-1)::
10934 :: EXPR :: modify :: I :: v31[#(16)] = #(-1)::
10938 :: EXPR :: modify :: I :: v31[#(17)] = #(-2)::
10942 :: EXPR :: modify :: I :: v31[#(18)] = #(-2)::
10946 :: EXPR :: modify :: I :: v31[#(19)] = #(-3)::
10950 :: EXPR :: modify :: I :: v31[#(20)] = #(-4)::
10954 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v31::
10958 :: NORM :: declaration :: [I :: v34 = new []::DD,11043
10959 :: EXPR :: modify :: I :: v34[#(0)] = #(-2)::
10963 :: EXPR :: modify :: I :: v34[#(1)] = #(-1)::
10967 :: EXPR :: modify :: I :: v34[#(2)] = #(7)::
10971 :: EXPR :: modify :: I :: v34[#(3)] = #(-3)::
10975 :: EXPR :: modify :: I :: v34[#(4)] = #(-1)::
10979 :: EXPR :: modify :: I :: v34[#(5)] = #(-1)::
10983 :: EXPR :: modify :: I :: v34[#(6)] = #(-1)::
10987 :: EXPR :: modify :: I :: v34[#(7)] = #(-2)::
10991 :: EXPR :: modify :: I :: v34[#(8)] = #(-1)::
10995 :: EXPR :: modify :: I :: v34[#(9)] = #(-1)::
10999 :: EXPR :: modify :: I :: v34[#(10)] = #(-1)::
11003 :: EXPR :: modify :: I :: v34[#(11)] = #(-2)::
11007 :: EXPR :: modify :: I :: v34[#(12)] = #(-2)::
11011 :: EXPR :: modify :: I :: v34[#(13)] = #(-2)::
11015 :: EXPR :: modify :: I :: v34[#(14)] = #(-3)::
11019 :: EXPR :: modify :: I :: v34[#(15)] = #(-3)::
11023 :: EXPR :: modify :: I :: v34[#(16)] = #(-2)::
11027 :: EXPR :: modify :: I :: v34[#(17)] = #(-4)::
11031 :: EXPR :: modify :: I :: v34[#(18)] = #(-3)::
11035 :: EXPR :: modify :: I :: v34[#(19)] = #(-4)::
11039 :: EXPR :: modify :: I :: v34[#(20)] = #(-4)::
11043 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = v34::
11047 :: NORM :: declaration :: [I :: v35 = new []::DD,11128
11048 :: EXPR :: modify :: I :: v35[#(0)] = #(-3)::
11052 :: EXPR :: modify :: I :: v35[#(2)] = #(-3)::
11056 :: EXPR :: modify :: I :: v35[#(3)] = #(9)::
11060 :: EXPR :: modify :: I :: v35[#(4)] = #(-1)::
11064 :: EXPR :: modify :: I :: v35[#(5)] = #(-1)::
11068 :: EXPR :: modify :: I :: v35[#(6)] = #(-3)::
11072 :: EXPR :: modify :: I :: v35[#(7)] = #(-3)::
11076 :: EXPR :: modify :: I :: v35[#(8)] = #(-4)::
11080 :: EXPR :: modify :: I :: v35[#(9)] = #(-3)::
11084 :: EXPR :: modify :: I :: v35[#(10)] = #(-3)::
11088 :: EXPR :: modify :: I :: v35[#(11)] = #(-3)::
11092 :: EXPR :: modify :: I :: v35[#(12)] = #(-3)::
11096 :: EXPR :: modify :: I :: v35[#(13)] = #(-1)::
11100 :: EXPR :: modify :: I :: v35[#(14)] = #(-1)::
11104 :: EXPR :: modify :: I :: v35[#(15)] = #(-1)::
11108 :: EXPR :: modify :: I :: v35[#(16)] = #(-1)::
11112 :: EXPR :: modify :: I :: v35[#(17)] = #(-2)::
11116 :: EXPR :: modify :: I :: v35[#(18)] = #(-2)::
11120 :: EXPR :: modify :: I :: v35[#(19)] = #(-2)::
11124 :: EXPR :: modify :: I :: v35[#(20)] = #(-4)::
11128 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(3)] = v35::
11132 :: NORM :: declaration :: [I :: v36 = new []::DD,11205
11133 :: EXPR :: modify :: I :: v36[#(0)] = #(-2)::
11137 :: EXPR :: modify :: I :: v36[#(2)] = #(-1)::
11141 :: EXPR :: modify :: I :: v36[#(3)] = #(-1)::
11145 :: EXPR :: modify :: I :: v36[#(4)] = #(5)::
11149 :: EXPR :: modify :: I :: v36[#(5)] = #(1)::
11153 :: EXPR :: modify :: I :: v36[#(6)] = #(-1)::
11157 :: EXPR :: modify :: I :: v36[#(8)] = #(-1)::
11161 :: EXPR :: modify :: I :: v36[#(9)] = #(-1)::
11165 :: EXPR :: modify :: I :: v36[#(10)] = #(-1)::
11169 :: EXPR :: modify :: I :: v36[#(11)] = #(-2)::
11173 :: EXPR :: modify :: I :: v36[#(12)] = #(-1)::
11177 :: EXPR :: modify :: I :: v36[#(14)] = #(-1)::
11181 :: EXPR :: modify :: I :: v36[#(15)] = #(-1)::
11185 :: EXPR :: modify :: I :: v36[#(16)] = #(-1)::
11189 :: EXPR :: modify :: I :: v36[#(17)] = #(-2)::
11193 :: EXPR :: modify :: I :: v36[#(18)] = #(-2)::
11197 :: EXPR :: modify :: I :: v36[#(19)] = #(-2)::
11201 :: EXPR :: modify :: I :: v36[#(20)] = #(-4)::
11205 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v36::
11209 :: NORM :: declaration :: [I :: v37 = new []::DD,11274
11210 :: EXPR :: modify :: I :: v37[#(1)] = #(1)::
11214 :: EXPR :: modify :: I :: v37[#(2)] = #(-1)::
11218 :: EXPR :: modify :: I :: v37[#(3)] = #(-1)::
11222 :: EXPR :: modify :: I :: v37[#(4)] = #(1)::
11226 :: EXPR :: modify :: I :: v37[#(5)] = #(4)::
11230 :: EXPR :: modify :: I :: v37[#(7)] = #(1)::
11234 :: EXPR :: modify :: I :: v37[#(11)] = #(-1)::
11238 :: EXPR :: modify :: I :: v37[#(12)] = #(-1)::
11242 :: EXPR :: modify :: I :: v37[#(13)] = #(-2)::
11246 :: EXPR :: modify :: I :: v37[#(14)] = #(-2)::
11250 :: EXPR :: modify :: I :: v37[#(15)] = #(-2)::
11254 :: EXPR :: modify :: I :: v37[#(16)] = #(-1)::
11258 :: EXPR :: modify :: I :: v37[#(17)] = #(-2)::
11262 :: EXPR :: modify :: I :: v37[#(18)] = #(-2)::
11266 :: EXPR :: modify :: I :: v37[#(19)] = #(-3)::
11270 :: EXPR :: modify :: I :: v37[#(20)] = #(-4)::
11274 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(5)] = v37::
11278 :: NORM :: declaration :: [I :: v38 = new []::DD,11355
11279 :: EXPR :: modify :: I :: v38[#(0)] = #(-1)::
11283 :: EXPR :: modify :: I :: v38[#(1)] = #(-2)::
11287 :: EXPR :: modify :: I :: v38[#(2)] = #(-1)::
11291 :: EXPR :: modify :: I :: v38[#(3)] = #(-3)::
11295 :: EXPR :: modify :: I :: v38[#(4)] = #(-1)::
11299 :: EXPR :: modify :: I :: v38[#(6)] = #(6)::
11303 :: EXPR :: modify :: I :: v38[#(7)] = #(1)::
11307 :: EXPR :: modify :: I :: v38[#(8)] = #(2)::
11311 :: EXPR :: modify :: I :: v38[#(10)] = #(-1)::
11315 :: EXPR :: modify :: I :: v38[#(11)] = #(-1)::
11319 :: EXPR :: modify :: I :: v38[#(12)] = #(-2)::
11323 :: EXPR :: modify :: I :: v38[#(13)] = #(-3)::
11327 :: EXPR :: modify :: I :: v38[#(14)] = #(-3)::
11331 :: EXPR :: modify :: I :: v38[#(15)] = #(-4)::
11335 :: EXPR :: modify :: I :: v38[#(16)] = #(-3)::
11339 :: EXPR :: modify :: I :: v38[#(17)] = #(-3)::
11343 :: EXPR :: modify :: I :: v38[#(18)] = #(-3)::
11347 :: EXPR :: modify :: I :: v38[#(19)] = #(-4)::
11351 :: EXPR :: modify :: I :: v38[#(20)] = #(-4)::
11355 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(6)] = v38::
11359 :: NORM :: declaration :: [I :: v39 = new []::DD,11420
11360 :: EXPR :: modify :: I :: v39[#(1)] = #(-2)::
11364 :: EXPR :: modify :: I :: v39[#(2)] = #(-2)::
11368 :: EXPR :: modify :: I :: v39[#(3)] = #(-3)::
11372 :: EXPR :: modify :: I :: v39[#(5)] = #(1)::
11376 :: EXPR :: modify :: I :: v39[#(6)] = #(1)::
11380 :: EXPR :: modify :: I :: v39[#(7)] = #(6)::
11384 :: EXPR :: modify :: I :: v39[#(11)] = #(1)::
11388 :: EXPR :: modify :: I :: v39[#(13)] = #(-3)::
11392 :: EXPR :: modify :: I :: v39[#(14)] = #(-3)::
11396 :: EXPR :: modify :: I :: v39[#(15)] = #(-3)::
11400 :: EXPR :: modify :: I :: v39[#(16)] = #(-2)::
11404 :: EXPR :: modify :: I :: v39[#(17)] = #(-3)::
11408 :: EXPR :: modify :: I :: v39[#(18)] = #(-2)::
11412 :: EXPR :: modify :: I :: v39[#(19)] = #(-4)::
11416 :: EXPR :: modify :: I :: v39[#(20)] = #(-4)::
11420 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(7)] = v39::
11424 :: NORM :: declaration :: [I :: v40 = new []::DD,11493
11425 :: EXPR :: modify :: I :: v40[#(0)] = #(-2)::
11429 :: EXPR :: modify :: I :: v40[#(1)] = #(-1)::
11433 :: EXPR :: modify :: I :: v40[#(2)] = #(-1)::
11437 :: EXPR :: modify :: I :: v40[#(3)] = #(-4)::
11441 :: EXPR :: modify :: I :: v40[#(4)] = #(-1)::
11445 :: EXPR :: modify :: I :: v40[#(6)] = #(2)::
11449 :: EXPR :: modify :: I :: v40[#(8)] = #(5)::
11453 :: EXPR :: modify :: I :: v40[#(9)] = #(2)::
11457 :: EXPR :: modify :: I :: v40[#(10)] = #(1)::
11461 :: EXPR :: modify :: I :: v40[#(13)] = #(-2)::
11465 :: EXPR :: modify :: I :: v40[#(14)] = #(-3)::
11469 :: EXPR :: modify :: I :: v40[#(15)] = #(-3)::
11473 :: EXPR :: modify :: I :: v40[#(16)] = #(-2)::
11477 :: EXPR :: modify :: I :: v40[#(17)] = #(-3)::
11481 :: EXPR :: modify :: I :: v40[#(18)] = #(-2)::
11485 :: EXPR :: modify :: I :: v40[#(19)] = #(-3)::
11489 :: EXPR :: modify :: I :: v40[#(20)] = #(-4)::
11493 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(8)] = v40::
11497 :: NORM :: declaration :: [I :: v41 = new []::DD,11562
11498 :: EXPR :: modify :: I :: v41[#(0)] = #(-2)::
11502 :: EXPR :: modify :: I :: v41[#(1)] = #(-1)::
11506 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
11510 :: EXPR :: modify :: I :: v41[#(3)] = #(-3)::
11514 :: EXPR :: modify :: I :: v41[#(4)] = #(-1)::
11518 :: EXPR :: modify :: I :: v41[#(8)] = #(2)::
11522 :: EXPR :: modify :: I :: v41[#(9)] = #(5)::
11526 :: EXPR :: modify :: I :: v41[#(10)] = #(1)::
11530 :: EXPR :: modify :: I :: v41[#(12)] = #(1)::
11534 :: EXPR :: modify :: I :: v41[#(13)] = #(-2)::
11538 :: EXPR :: modify :: I :: v41[#(14)] = #(-3)::
11542 :: EXPR :: modify :: I :: v41[#(15)] = #(-2)::
11546 :: EXPR :: modify :: I :: v41[#(17)] = #(-3)::
11550 :: EXPR :: modify :: I :: v41[#(18)] = #(-1)::
11554 :: EXPR :: modify :: I :: v41[#(19)] = #(-2)::
11558 :: EXPR :: modify :: I :: v41[#(20)] = #(-4)::
11562 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(9)] = v41::
11566 :: NORM :: declaration :: [I :: v42 = new []::DD,11643
11567 :: EXPR :: modify :: I :: v42[#(0)] = #(-2)::
11571 :: EXPR :: modify :: I :: v42[#(1)] = #(-1)::
11575 :: EXPR :: modify :: I :: v42[#(2)] = #(-1)::
11579 :: EXPR :: modify :: I :: v42[#(3)] = #(-3)::
11583 :: EXPR :: modify :: I :: v42[#(4)] = #(-1)::
11587 :: EXPR :: modify :: I :: v42[#(6)] = #(-1)::
11591 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
11595 :: EXPR :: modify :: I :: v42[#(9)] = #(1)::
11599 :: EXPR :: modify :: I :: v42[#(10)] = #(5)::
11603 :: EXPR :: modify :: I :: v42[#(11)] = #(-1)::
11607 :: EXPR :: modify :: I :: v42[#(12)] = #(2)::
11611 :: EXPR :: modify :: I :: v42[#(13)] = #(-2)::
11615 :: EXPR :: modify :: I :: v42[#(14)] = #(-3)::
11619 :: EXPR :: modify :: I :: v42[#(15)] = #(-2)::
11623 :: EXPR :: modify :: I :: v42[#(16)] = #(-1)::
11627 :: EXPR :: modify :: I :: v42[#(17)] = #(-3)::
11631 :: EXPR :: modify :: I :: v42[#(18)] = #(-2)::
11635 :: EXPR :: modify :: I :: v42[#(19)] = #(-3)::
11639 :: EXPR :: modify :: I :: v42[#(20)] = #(-4)::
11643 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(10)] = v42::
11647 :: NORM :: declaration :: [I :: v43 = new []::DD,11720
11648 :: EXPR :: modify :: I :: v43[#(0)] = #(-2)::
11652 :: EXPR :: modify :: I :: v43[#(1)] = #(-2)::
11656 :: EXPR :: modify :: I :: v43[#(2)] = #(-2)::
11660 :: EXPR :: modify :: I :: v43[#(3)] = #(-3)::
11664 :: EXPR :: modify :: I :: v43[#(4)] = #(-2)::
11668 :: EXPR :: modify :: I :: v43[#(5)] = #(-1)::
11672 :: EXPR :: modify :: I :: v43[#(6)] = #(-1)::
11676 :: EXPR :: modify :: I :: v43[#(7)] = #(1)::
11680 :: EXPR :: modify :: I :: v43[#(10)] = #(-1)::
11684 :: EXPR :: modify :: I :: v43[#(11)] = #(8)::
11688 :: EXPR :: modify :: I :: v43[#(13)] = #(-3)::
11692 :: EXPR :: modify :: I :: v43[#(14)] = #(-3)::
11696 :: EXPR :: modify :: I :: v43[#(15)] = #(-3)::
11700 :: EXPR :: modify :: I :: v43[#(16)] = #(-2)::
11704 :: EXPR :: modify :: I :: v43[#(17)] = #(-1)::
11708 :: EXPR :: modify :: I :: v43[#(18)] = #(2)::
11712 :: EXPR :: modify :: I :: v43[#(19)] = #(-2)::
11716 :: EXPR :: modify :: I :: v43[#(20)] = #(-4)::
11720 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(11)] = v43::
11724 :: NORM :: declaration :: [I :: v44 = new []::DD,11797
11725 :: EXPR :: modify :: I :: v44[#(0)] = #(-2)::
11729 :: EXPR :: modify :: I :: v44[#(1)] = #(-1)::
11733 :: EXPR :: modify :: I :: v44[#(2)] = #(-2)::
11737 :: EXPR :: modify :: I :: v44[#(3)] = #(-3)::
11741 :: EXPR :: modify :: I :: v44[#(4)] = #(-1)::
11745 :: EXPR :: modify :: I :: v44[#(5)] = #(-1)::
11749 :: EXPR :: modify :: I :: v44[#(6)] = #(-2)::
11753 :: EXPR :: modify :: I :: v44[#(9)] = #(1)::
11757 :: EXPR :: modify :: I :: v44[#(10)] = #(2)::
11761 :: EXPR :: modify :: I :: v44[#(12)] = #(5)::
11765 :: EXPR :: modify :: I :: v44[#(13)] = #(-3)::
11769 :: EXPR :: modify :: I :: v44[#(14)] = #(-3)::
11773 :: EXPR :: modify :: I :: v44[#(15)] = #(-2)::
11777 :: EXPR :: modify :: I :: v44[#(16)] = #(-1)::
11781 :: EXPR :: modify :: I :: v44[#(17)] = #(-3)::
11785 :: EXPR :: modify :: I :: v44[#(18)] = #(-2)::
11789 :: EXPR :: modify :: I :: v44[#(19)] = #(-3)::
11793 :: EXPR :: modify :: I :: v44[#(20)] = #(-4)::
11797 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(12)] = v44::
11801 :: NORM :: declaration :: [I :: v45 = new []::DD,11878
11802 :: EXPR :: modify :: I :: v45[#(0)] = #(-3)::
11806 :: EXPR :: modify :: I :: v45[#(2)] = #(-2)::
11810 :: EXPR :: modify :: I :: v45[#(3)] = #(-1)::
11814 :: EXPR :: modify :: I :: v45[#(5)] = #(-2)::
11818 :: EXPR :: modify :: I :: v45[#(6)] = #(-3)::
11822 :: EXPR :: modify :: I :: v45[#(7)] = #(-3)::
11826 :: EXPR :: modify :: I :: v45[#(8)] = #(-2)::
11830 :: EXPR :: modify :: I :: v45[#(9)] = #(-2)::
11834 :: EXPR :: modify :: I :: v45[#(10)] = #(-2)::
11838 :: EXPR :: modify :: I :: v45[#(11)] = #(-3)::
11842 :: EXPR :: modify :: I :: v45[#(12)] = #(-3)::
11846 :: EXPR :: modify :: I :: v45[#(13)] = #(4)::
11850 :: EXPR :: modify :: I :: v45[#(14)] = #(3)::
11854 :: EXPR :: modify :: I :: v45[#(15)] = #(1)::
11858 :: EXPR :: modify :: I :: v45[#(16)] = #(1)::
11862 :: EXPR :: modify :: I :: v45[#(17)] = #(-1)::
11866 :: EXPR :: modify :: I :: v45[#(18)] = #(-1)::
11870 :: EXPR :: modify :: I :: v45[#(19)] = #(-3)::
11874 :: EXPR :: modify :: I :: v45[#(20)] = #(-4)::
11878 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(13)] = v45::
11882 :: NORM :: declaration :: [I :: v46 = new []::DD,11963
11883 :: EXPR :: modify :: I :: v46[#(0)] = #(-4)::
11887 :: EXPR :: modify :: I :: v46[#(1)] = #(-1)::
11891 :: EXPR :: modify :: I :: v46[#(2)] = #(-3)::
11895 :: EXPR :: modify :: I :: v46[#(3)] = #(-1)::
11899 :: EXPR :: modify :: I :: v46[#(4)] = #(-1)::
11903 :: EXPR :: modify :: I :: v46[#(5)] = #(-2)::
11907 :: EXPR :: modify :: I :: v46[#(6)] = #(-3)::
11911 :: EXPR :: modify :: I :: v46[#(7)] = #(-3)::
11915 :: EXPR :: modify :: I :: v46[#(8)] = #(-3)::
11919 :: EXPR :: modify :: I :: v46[#(9)] = #(-3)::
11923 :: EXPR :: modify :: I :: v46[#(10)] = #(-3)::
11927 :: EXPR :: modify :: I :: v46[#(11)] = #(-3)::
11931 :: EXPR :: modify :: I :: v46[#(12)] = #(-3)::
11935 :: EXPR :: modify :: I :: v46[#(13)] = #(3)::
11939 :: EXPR :: modify :: I :: v46[#(14)] = #(4)::
11943 :: EXPR :: modify :: I :: v46[#(15)] = #(2)::
11947 :: EXPR :: modify :: I :: v46[#(16)] = #(1)::
11951 :: EXPR :: modify :: I :: v46[#(18)] = #(-1)::
11955 :: EXPR :: modify :: I :: v46[#(19)] = #(-3)::
11959 :: EXPR :: modify :: I :: v46[#(20)] = #(-4)::
11963 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(14)] = v46::
11967 :: NORM :: declaration :: [I :: v47 = new []::DD,12048
11968 :: EXPR :: modify :: I :: v47[#(0)] = #(-4)::
11972 :: EXPR :: modify :: I :: v47[#(1)] = #(-1)::
11976 :: EXPR :: modify :: I :: v47[#(2)] = #(-3)::
11980 :: EXPR :: modify :: I :: v47[#(3)] = #(-1)::
11984 :: EXPR :: modify :: I :: v47[#(4)] = #(-1)::
11988 :: EXPR :: modify :: I :: v47[#(5)] = #(-2)::
11992 :: EXPR :: modify :: I :: v47[#(6)] = #(-4)::
11996 :: EXPR :: modify :: I :: v47[#(7)] = #(-3)::
12000 :: EXPR :: modify :: I :: v47[#(8)] = #(-3)::
12004 :: EXPR :: modify :: I :: v47[#(9)] = #(-2)::
12008 :: EXPR :: modify :: I :: v47[#(10)] = #(-2)::
12012 :: EXPR :: modify :: I :: v47[#(11)] = #(-3)::
12016 :: EXPR :: modify :: I :: v47[#(12)] = #(-2)::
12020 :: EXPR :: modify :: I :: v47[#(13)] = #(1)::
12024 :: EXPR :: modify :: I :: v47[#(14)] = #(2)::
12028 :: EXPR :: modify :: I :: v47[#(15)] = #(4)::
12032 :: EXPR :: modify :: I :: v47[#(16)] = #(2)::
12036 :: EXPR :: modify :: I :: v47[#(18)] = #(-1)::
12040 :: EXPR :: modify :: I :: v47[#(19)] = #(-2)::
12044 :: EXPR :: modify :: I :: v47[#(20)] = #(-4)::
12048 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(15)] = v47::
12052 :: NORM :: declaration :: [I :: v48 = new []::DD,12129
12053 :: EXPR :: modify :: I :: v48[#(0)] = #(-3)::
12057 :: EXPR :: modify :: I :: v48[#(1)] = #(-1)::
12061 :: EXPR :: modify :: I :: v48[#(2)] = #(-2)::
12065 :: EXPR :: modify :: I :: v48[#(3)] = #(-1)::
12069 :: EXPR :: modify :: I :: v48[#(4)] = #(-1)::
12073 :: EXPR :: modify :: I :: v48[#(5)] = #(-1)::
12077 :: EXPR :: modify :: I :: v48[#(6)] = #(-3)::
12081 :: EXPR :: modify :: I :: v48[#(7)] = #(-2)::
12085 :: EXPR :: modify :: I :: v48[#(8)] = #(-2)::
12089 :: EXPR :: modify :: I :: v48[#(10)] = #(-1)::
12093 :: EXPR :: modify :: I :: v48[#(11)] = #(-2)::
12097 :: EXPR :: modify :: I :: v48[#(12)] = #(-1)::
12101 :: EXPR :: modify :: I :: v48[#(13)] = #(1)::
12105 :: EXPR :: modify :: I :: v48[#(14)] = #(1)::
12109 :: EXPR :: modify :: I :: v48[#(15)] = #(2)::
12113 :: EXPR :: modify :: I :: v48[#(16)] = #(5)::
12117 :: EXPR :: modify :: I :: v48[#(18)] = #(-1)::
12121 :: EXPR :: modify :: I :: v48[#(19)] = #(-1)::
12125 :: EXPR :: modify :: I :: v48[#(20)] = #(-4)::
12129 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(16)] = v48::
12133 :: NORM :: declaration :: [I :: v49 = new []::DD,12206
12134 :: EXPR :: modify :: I :: v49[#(0)] = #(-3)::
12138 :: EXPR :: modify :: I :: v49[#(1)] = #(-2)::
12142 :: EXPR :: modify :: I :: v49[#(2)] = #(-4)::
12146 :: EXPR :: modify :: I :: v49[#(3)] = #(-2)::
12150 :: EXPR :: modify :: I :: v49[#(4)] = #(-2)::
12154 :: EXPR :: modify :: I :: v49[#(5)] = #(-2)::
12158 :: EXPR :: modify :: I :: v49[#(6)] = #(-3)::
12162 :: EXPR :: modify :: I :: v49[#(7)] = #(-3)::
12166 :: EXPR :: modify :: I :: v49[#(8)] = #(-3)::
12170 :: EXPR :: modify :: I :: v49[#(9)] = #(-3)::
12174 :: EXPR :: modify :: I :: v49[#(10)] = #(-3)::
12178 :: EXPR :: modify :: I :: v49[#(11)] = #(-1)::
12182 :: EXPR :: modify :: I :: v49[#(12)] = #(-3)::
12186 :: EXPR :: modify :: I :: v49[#(13)] = #(-1)::
12190 :: EXPR :: modify :: I :: v49[#(17)] = #(6)::
12194 :: EXPR :: modify :: I :: v49[#(18)] = #(3)::
12198 :: EXPR :: modify :: I :: v49[#(19)] = #(1)::
12202 :: EXPR :: modify :: I :: v49[#(20)] = #(-4)::
12206 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(17)] = v49::
12210 :: NORM :: declaration :: [I :: v50 = new []::DD,12295
12211 :: EXPR :: modify :: I :: v50[#(0)] = #(-3)::
12215 :: EXPR :: modify :: I :: v50[#(1)] = #(-2)::
12219 :: EXPR :: modify :: I :: v50[#(2)] = #(-3)::
12223 :: EXPR :: modify :: I :: v50[#(3)] = #(-2)::
12227 :: EXPR :: modify :: I :: v50[#(4)] = #(-2)::
12231 :: EXPR :: modify :: I :: v50[#(5)] = #(-2)::
12235 :: EXPR :: modify :: I :: v50[#(6)] = #(-3)::
12239 :: EXPR :: modify :: I :: v50[#(7)] = #(-2)::
12243 :: EXPR :: modify :: I :: v50[#(8)] = #(-2)::
12247 :: EXPR :: modify :: I :: v50[#(9)] = #(-1)::
12251 :: EXPR :: modify :: I :: v50[#(10)] = #(-2)::
12255 :: EXPR :: modify :: I :: v50[#(11)] = #(2)::
12259 :: EXPR :: modify :: I :: v50[#(12)] = #(-2)::
12263 :: EXPR :: modify :: I :: v50[#(13)] = #(-1)::
12267 :: EXPR :: modify :: I :: v50[#(14)] = #(-1)::
12271 :: EXPR :: modify :: I :: v50[#(15)] = #(-1)::
12275 :: EXPR :: modify :: I :: v50[#(16)] = #(-1)::
12279 :: EXPR :: modify :: I :: v50[#(17)] = #(3)::
12283 :: EXPR :: modify :: I :: v50[#(18)] = #(7)::
12287 :: EXPR :: modify :: I :: v50[#(19)] = #(2)::
12291 :: EXPR :: modify :: I :: v50[#(20)] = #(-4)::
12295 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(18)] = v50::
12299 :: NORM :: declaration :: [I :: v51 = new []::DD,12384
12300 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
12304 :: EXPR :: modify :: I :: v51[#(1)] = #(-3)::
12308 :: EXPR :: modify :: I :: v51[#(2)] = #(-4)::
12312 :: EXPR :: modify :: I :: v51[#(3)] = #(-2)::
12316 :: EXPR :: modify :: I :: v51[#(4)] = #(-2)::
12320 :: EXPR :: modify :: I :: v51[#(5)] = #(-3)::
12324 :: EXPR :: modify :: I :: v51[#(6)] = #(-4)::
12328 :: EXPR :: modify :: I :: v51[#(7)] = #(-4)::
12332 :: EXPR :: modify :: I :: v51[#(8)] = #(-3)::
12336 :: EXPR :: modify :: I :: v51[#(9)] = #(-2)::
12340 :: EXPR :: modify :: I :: v51[#(10)] = #(-3)::
12344 :: EXPR :: modify :: I :: v51[#(11)] = #(-2)::
12348 :: EXPR :: modify :: I :: v51[#(12)] = #(-3)::
12352 :: EXPR :: modify :: I :: v51[#(13)] = #(-3)::
12356 :: EXPR :: modify :: I :: v51[#(14)] = #(-3)::
12360 :: EXPR :: modify :: I :: v51[#(15)] = #(-2)::
12364 :: EXPR :: modify :: I :: v51[#(16)] = #(-1)::
12368 :: EXPR :: modify :: I :: v51[#(17)] = #(1)::
12372 :: EXPR :: modify :: I :: v51[#(18)] = #(2)::
12376 :: EXPR :: modify :: I :: v51[#(19)] = #(11)::
12380 :: EXPR :: modify :: I :: v51[#(20)] = #(-4)::
12384 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(19)] = v51::
12388 :: NORM :: declaration :: [I :: v52 = new []::DD,12473
12389 :: EXPR :: modify :: I :: v52[#(0)] = #(-4)::
12393 :: EXPR :: modify :: I :: v52[#(1)] = #(-4)::
12397 :: EXPR :: modify :: I :: v52[#(2)] = #(-4)::
12401 :: EXPR :: modify :: I :: v52[#(3)] = #(-4)::
12405 :: EXPR :: modify :: I :: v52[#(4)] = #(-4)::
12409 :: EXPR :: modify :: I :: v52[#(5)] = #(-4)::
12413 :: EXPR :: modify :: I :: v52[#(6)] = #(-4)::
12417 :: EXPR :: modify :: I :: v52[#(7)] = #(-4)::
12421 :: EXPR :: modify :: I :: v52[#(8)] = #(-4)::
12425 :: EXPR :: modify :: I :: v52[#(9)] = #(-4)::
12429 :: EXPR :: modify :: I :: v52[#(10)] = #(-4)::
12433 :: EXPR :: modify :: I :: v52[#(11)] = #(-4)::
12437 :: EXPR :: modify :: I :: v52[#(12)] = #(-4)::
12441 :: EXPR :: modify :: I :: v52[#(13)] = #(-4)::
12445 :: EXPR :: modify :: I :: v52[#(14)] = #(-4)::
12449 :: EXPR :: modify :: I :: v52[#(15)] = #(-4)::
12453 :: EXPR :: modify :: I :: v52[#(16)] = #(-4)::
12457 :: EXPR :: modify :: I :: v52[#(17)] = #(-4)::
12461 :: EXPR :: modify :: I :: v52[#(18)] = #(-4)::
12465 :: EXPR :: modify :: I :: v52[#(19)] = #(-4)::
12469 :: EXPR :: modify :: I :: v52[#(20)] = #(1)::
12473 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(20)] = v52::
12479 :: NORM :: declaration :: [Ljava/lang/Character :: v53 = new java.lang.Character[]::DD,12648:JM,12484
12480 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(71))::JM,12484
12484 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(0)] = v56::
12488 :: CALL :: call :: Ljava/lang/Character :: v59 = valueOf(#(65))::JM,12492
12492 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(1)] = v59::
12496 :: CALL :: call :: Ljava/lang/Character :: v62 = valueOf(#(80))::JM,12500
12500 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(2)] = v62::
12504 :: CALL :: call :: Ljava/lang/Character :: v65 = valueOf(#(67))::JM,12508
12508 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(3)] = v65::
12512 :: CALL :: call :: Ljava/lang/Character :: v68 = valueOf(#(84))::JM,12516
12516 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(4)] = v68::
12520 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(83))::JM,12524
12524 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(5)] = v71::
12528 :: CALL :: call :: Ljava/lang/Character :: v74 = valueOf(#(68))::JM,12532
12532 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(6)] = v74::
12536 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(78))::JM,12540
12540 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(7)] = v77::
12544 :: CALL :: call :: Ljava/lang/Character :: v80 = valueOf(#(69))::JM,12548
12548 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(8)] = v80::
12552 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(81))::JM,12556
12556 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(9)] = v83::
12560 :: CALL :: call :: Ljava/lang/Character :: v86 = valueOf(#(75))::JM,12564
12564 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(10)] = v86::
12568 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(72))::JM,12572
12572 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(11)] = v89::
12576 :: CALL :: call :: Ljava/lang/Character :: v92 = valueOf(#(82))::JM,12580
12580 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(12)] = v92::
12584 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(86))::JM,12588
12588 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(13)] = v95::
12592 :: CALL :: call :: Ljava/lang/Character :: v98 = valueOf(#(73))::JM,12596
12596 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(14)] = v98::
12600 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(76))::JM,12604
12604 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(15)] = v101::
12608 :: CALL :: call :: Ljava/lang/Character :: v104 = valueOf(#(77))::JM,12612
12612 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(16)] = v104::
12616 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(70))::JM,12620
12620 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(17)] = v107::
12624 :: CALL :: call :: Ljava/lang/Character :: v110 = valueOf(#(89))::JM,12628
12628 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(18)] = v110::
12632 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(87))::JM,12636
12636 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(19)] = v113::
12640 :: CALL :: call :: Ljava/lang/Character :: v116 = valueOf(#(45))::JM,12644
12644 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(20)] = v116::
12648 :: EXPR :: modify :: [Ljava/lang/Character :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1 = v53::
12650 :: EXPR :: reference :: [Ljava/lang/Character :: v117 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1::JM,12652
12652 :: CALL :: call :: Ljava/util/List :: v119 = asList(v117)::JM,12652
14044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,14054:CD,14061:CD,14068
14054 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
14061 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
14068 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
14086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,14089:JM,37030:CD,14096:CD,14098:CD,14105:CD,14107:CD,14114:CD,14116:CD,14123:CD,14125:CD,14132:CD,14134:CD,14141:CD,14143:CD,14150:CD,14152:CD,14159:CD,14161:CD,14168:CD,14170:CD,14177:CD,14179:CD,14186:CD,14188:CD,14189:CD,14195:CD,14201:CD,14207:CD,14213:CD,14219:CD,14225:CD,14231:CD,14237:CD,14243:CD,14249
14089 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,14096
14096 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
14098 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,14105
14105 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
14107 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,14114
14114 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
14116 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,14123
14123 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
14125 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,14132
14132 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
14134 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,14141
14141 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
14143 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,14150
14150 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
14152 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,14159
14159 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
14161 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,14168
14168 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
14170 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,14177
14177 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
14179 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,14186
14186 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
14188 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
14189 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,14191
14191 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
14195 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,14197
14197 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
14201 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,14203
14203 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
14207 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,14209
14209 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
14213 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,14215
14215 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
14219 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,14221
14221 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
14225 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,14227
14227 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
14231 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,14233
14233 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
14237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,14239
14239 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
14243 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,14245
14245 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
14249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,14251
14251 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
14348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.<clinit>()::CD,14352:CD,14360:CD,14443:CD,14526:CD,14609:CD,14692:CD,14775:CD,14858:CD,14941:CD,15024:CD,15627
14352 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
14360 :: NORM :: declaration :: [D :: v9 = new []::
14361 :: EXPR :: modify :: D :: v9[#(0)] = #(2.54 d)::
14365 :: EXPR :: modify :: D :: v9[#(1)] = #(2.51 d)::
14369 :: EXPR :: modify :: D :: v9[#(2)] = #(2.72 d)::
14373 :: EXPR :: modify :: D :: v9[#(3)] = #(3.01 d)::
14377 :: EXPR :: modify :: D :: v9[#(4)] = #(3.31 d)::
14381 :: EXPR :: modify :: D :: v9[#(5)] = #(3.61 d)::
14385 :: EXPR :: modify :: D :: v9[#(6)] = #(3.9 d)::
14389 :: EXPR :: modify :: D :: v9[#(7)] = #(4.19 d)::
14393 :: EXPR :: modify :: D :: v9[#(8)] = #(4.47 d)::
14397 :: EXPR :: modify :: D :: v9[#(9)] = #(4.74 d)::
14401 :: EXPR :: modify :: D :: v9[#(10)] = #(4.99 d)::
14405 :: EXPR :: modify :: D :: v9[#(11)] = #(5.22 d)::
14409 :: EXPR :: modify :: D :: v9[#(12)] = #(5.46 d)::
14413 :: EXPR :: modify :: D :: v9[#(13)] = #(5.7 d)::
14417 :: EXPR :: modify :: D :: v9[#(14)] = #(5.94 d)::
14421 :: EXPR :: modify :: D :: v9[#(15)] = #(6.13 d)::
14425 :: EXPR :: modify :: D :: v9[#(16)] = #(6.36 d)::
14429 :: EXPR :: modify :: D :: v9[#(17)] = #(6.52 d)::
14433 :: EXPR :: modify :: D :: v9[#(18)] = #(6.68 d)::
14437 :: EXPR :: modify :: D :: v9[#(19)] = #(6.91 d)::
14443 :: NORM :: declaration :: [D :: v48 = new []::
14444 :: EXPR :: modify :: D :: v48[#(0)] = #(1.33 d)::
14448 :: EXPR :: modify :: D :: v48[#(1)] = #(0.88 d)::
14452 :: EXPR :: modify :: D :: v48[#(2)] = #(0.73 d)::
14456 :: EXPR :: modify :: D :: v48[#(3)] = #(0.71 d)::
14460 :: EXPR :: modify :: D :: v48[#(4)] = #(0.74 d)::
14464 :: EXPR :: modify :: D :: v48[#(5)] = #(0.8 d)::
14468 :: EXPR :: modify :: D :: v48[#(6)] = #(0.86 d)::
14472 :: EXPR :: modify :: D :: v48[#(7)] = #(0.92 d)::
14476 :: EXPR :: modify :: D :: v48[#(8)] = #(0.98 d)::
14480 :: EXPR :: modify :: D :: v48[#(9)] = #(1.04 d)::
14484 :: EXPR :: modify :: D :: v48[#(10)] = #(1.08 d)::
14488 :: EXPR :: modify :: D :: v48[#(11)] = #(1.1 d)::
14492 :: EXPR :: modify :: D :: v48[#(12)] = #(1.15 d)::
14496 :: EXPR :: modify :: D :: v48[#(13)] = #(1.19 d)::
14500 :: EXPR :: modify :: D :: v48[#(14)] = #(1.23 d)::
14504 :: EXPR :: modify :: D :: v48[#(15)] = #(1.25 d)::
14508 :: EXPR :: modify :: D :: v48[#(16)] = #(1.32 d)::
14512 :: EXPR :: modify :: D :: v48[#(17)] = #(1.34 d)::
14516 :: EXPR :: modify :: D :: v48[#(18)] = #(1.36 d)::
14520 :: EXPR :: modify :: D :: v48[#(19)] = #(1.45 d)::
14526 :: NORM :: declaration :: [D :: v69 = new []::
14527 :: EXPR :: modify :: D :: v69[#(0)] = #(0.0 d)::
14531 :: EXPR :: modify :: D :: v69[#(1)] = #(11.5 d)::
14535 :: EXPR :: modify :: D :: v69[#(2)] = #(23.32 d)::
14539 :: EXPR :: modify :: D :: v69[#(3)] = #(35.95 d)::
14543 :: EXPR :: modify :: D :: v69[#(4)] = #(49.02 d)::
14547 :: EXPR :: modify :: D :: v69[#(5)] = #(62.44 d)::
14551 :: EXPR :: modify :: D :: v69[#(6)] = #(76.28 d)::
14555 :: EXPR :: modify :: D :: v69[#(7)] = #(90.26 d)::
14559 :: EXPR :: modify :: D :: v69[#(8)] = #(104.86 d)::
14563 :: EXPR :: modify :: D :: v69[#(9)] = #(119.97 d)::
14567 :: EXPR :: modify :: D :: v69[#(10)] = #(134.86 d)::
14571 :: EXPR :: modify :: D :: v69[#(11)] = #(150.54 d)::
14575 :: EXPR :: modify :: D :: v69[#(12)] = #(164.86 d)::
14579 :: EXPR :: modify :: D :: v69[#(13)] = #(179.57 d)::
14583 :: EXPR :: modify :: D :: v69[#(14)] = #(194.39 d)::
14587 :: EXPR :: modify :: D :: v69[#(15)] = #(209.38 d)::
14591 :: EXPR :: modify :: D :: v69[#(16)] = #(224.74 d)::
14595 :: EXPR :: modify :: D :: v69[#(17)] = #(238.96 d)::
14599 :: EXPR :: modify :: D :: v69[#(18)] = #(253.72 d)::
14603 :: EXPR :: modify :: D :: v69[#(19)] = #(270.79 d)::
14609 :: NORM :: declaration :: [D :: v90 = new []::
14610 :: EXPR :: modify :: D :: v90[#(0)] = #(0.0 d)::
14614 :: EXPR :: modify :: D :: v90[#(1)] = #(9.88 d)::
14618 :: EXPR :: modify :: D :: v90[#(2)] = #(14.34 d)::
14622 :: EXPR :: modify :: D :: v90[#(3)] = #(17.99 d)::
14626 :: EXPR :: modify :: D :: v90[#(4)] = #(21.1 d)::
14630 :: EXPR :: modify :: D :: v90[#(5)] = #(23.89 d)::
14634 :: EXPR :: modify :: D :: v90[#(6)] = #(26.55 d)::
14638 :: EXPR :: modify :: D :: v90[#(7)] = #(29.0 d)::
14642 :: EXPR :: modify :: D :: v90[#(8)] = #(31.11 d)::
14646 :: EXPR :: modify :: D :: v90[#(9)] = #(33.1 d)::
14650 :: EXPR :: modify :: D :: v90[#(10)] = #(35.02 d)::
14654 :: EXPR :: modify :: D :: v90[#(11)] = #(36.03 d)::
14658 :: EXPR :: modify :: D :: v90[#(12)] = #(37.19 d)::
14662 :: EXPR :: modify :: D :: v90[#(13)] = #(38.82 d)::
14666 :: EXPR :: modify :: D :: v90[#(14)] = #(41.04 d)::
14670 :: EXPR :: modify :: D :: v90[#(15)] = #(43.35 d)::
14674 :: EXPR :: modify :: D :: v90[#(16)] = #(45.45 d)::
14678 :: EXPR :: modify :: D :: v90[#(17)] = #(48.41 d)::
14682 :: EXPR :: modify :: D :: v90[#(18)] = #(50.87 d)::
14686 :: EXPR :: modify :: D :: v90[#(19)] = #(52.27 d)::
14692 :: NORM :: declaration :: [D :: v110 = new []::
14693 :: EXPR :: modify :: D :: v110[#(0)] = #(1.98 d)::
14697 :: EXPR :: modify :: D :: v110[#(1)] = #(1.97 d)::
14701 :: EXPR :: modify :: D :: v110[#(2)] = #(2.22 d)::
14705 :: EXPR :: modify :: D :: v110[#(3)] = #(2.54 d)::
14709 :: EXPR :: modify :: D :: v110[#(4)] = #(2.87 d)::
14713 :: EXPR :: modify :: D :: v110[#(5)] = #(3.18 d)::
14717 :: EXPR :: modify :: D :: v110[#(6)] = #(3.48 d)::
14721 :: EXPR :: modify :: D :: v110[#(7)] = #(3.77 d)::
14725 :: EXPR :: modify :: D :: v110[#(8)] = #(4.05 d)::
14729 :: EXPR :: modify :: D :: v110[#(9)] = #(4.31 d)::
14733 :: EXPR :: modify :: D :: v110[#(10)] = #(4.57 d)::
14737 :: EXPR :: modify :: D :: v110[#(11)] = #(4.82 d)::
14741 :: EXPR :: modify :: D :: v110[#(12)] = #(5.03 d)::
14745 :: EXPR :: modify :: D :: v110[#(13)] = #(5.24 d)::
14749 :: EXPR :: modify :: D :: v110[#(14)] = #(5.43 d)::
14753 :: EXPR :: modify :: D :: v110[#(15)] = #(5.64 d)::
14757 :: EXPR :: modify :: D :: v110[#(16)] = #(5.82 d)::
14761 :: EXPR :: modify :: D :: v110[#(17)] = #(6.02 d)::
14765 :: EXPR :: modify :: D :: v110[#(18)] = #(6.21 d)::
14769 :: EXPR :: modify :: D :: v110[#(19)] = #(6.42 d)::
14775 :: NORM :: declaration :: [D :: v130 = new []::
14776 :: EXPR :: modify :: D :: v130[#(0)] = #(1.15 d)::
14780 :: EXPR :: modify :: D :: v130[#(1)] = #(0.73 d)::
14784 :: EXPR :: modify :: D :: v130[#(2)] = #(0.63 d)::
14788 :: EXPR :: modify :: D :: v130[#(3)] = #(0.64 d)::
14792 :: EXPR :: modify :: D :: v130[#(4)] = #(0.71 d)::
14796 :: EXPR :: modify :: D :: v130[#(5)] = #(0.8 d)::
14800 :: EXPR :: modify :: D :: v130[#(6)] = #(0.87 d)::
14804 :: EXPR :: modify :: D :: v130[#(7)] = #(0.95 d)::
14808 :: EXPR :: modify :: D :: v130[#(8)] = #(1.01 d)::
14812 :: EXPR :: modify :: D :: v130[#(9)] = #(1.07 d)::
14816 :: EXPR :: modify :: D :: v130[#(10)] = #(1.13 d)::
14820 :: EXPR :: modify :: D :: v130[#(11)] = #(1.19 d)::
14824 :: EXPR :: modify :: D :: v130[#(12)] = #(1.22 d)::
14828 :: EXPR :: modify :: D :: v130[#(13)] = #(1.25 d)::
14832 :: EXPR :: modify :: D :: v130[#(14)] = #(1.28 d)::
14836 :: EXPR :: modify :: D :: v130[#(15)] = #(1.32 d)::
14840 :: EXPR :: modify :: D :: v130[#(16)] = #(1.35 d)::
14844 :: EXPR :: modify :: D :: v130[#(17)] = #(1.39 d)::
14848 :: EXPR :: modify :: D :: v130[#(18)] = #(1.45 d)::
14852 :: EXPR :: modify :: D :: v130[#(19)] = #(1.5 d)::
14858 :: NORM :: declaration :: [D :: v143 = new []::
14859 :: EXPR :: modify :: D :: v143[#(0)] = #(0.0 d)::
14863 :: EXPR :: modify :: D :: v143[#(1)] = #(10.12 d)::
14867 :: EXPR :: modify :: D :: v143[#(2)] = #(20.25 d)::
14871 :: EXPR :: modify :: D :: v143[#(3)] = #(31.29 d)::
14875 :: EXPR :: modify :: D :: v143[#(4)] = #(42.95 d)::
14879 :: EXPR :: modify :: D :: v143[#(5)] = #(55.2 d)::
14883 :: EXPR :: modify :: D :: v143[#(6)] = #(67.53 d)::
14887 :: EXPR :: modify :: D :: v143[#(7)] = #(80.15 d)::
14891 :: EXPR :: modify :: D :: v143[#(8)] = #(93.3 d)::
14895 :: EXPR :: modify :: D :: v143[#(9)] = #(106.47 d)::
14899 :: EXPR :: modify :: D :: v143[#(10)] = #(120.52 d)::
14903 :: EXPR :: modify :: D :: v143[#(11)] = #(134.38 d)::
14907 :: EXPR :: modify :: D :: v143[#(12)] = #(148.59 d)::
14911 :: EXPR :: modify :: D :: v143[#(13)] = #(162.58 d)::
14915 :: EXPR :: modify :: D :: v143[#(14)] = #(176.64 d)::
14919 :: EXPR :: modify :: D :: v143[#(15)] = #(191.23 d)::
14923 :: EXPR :: modify :: D :: v143[#(16)] = #(204.12 d)::
14927 :: EXPR :: modify :: D :: v143[#(17)] = #(218.64 d)::
14931 :: EXPR :: modify :: D :: v143[#(18)] = #(231.82 d)::
14935 :: EXPR :: modify :: D :: v143[#(19)] = #(243.43 d)::
14941 :: NORM :: declaration :: [D :: v163 = new []::
14942 :: EXPR :: modify :: D :: v163[#(0)] = #(0.0 d)::
14946 :: EXPR :: modify :: D :: v163[#(1)] = #(9.8 d)::
14950 :: EXPR :: modify :: D :: v163[#(2)] = #(14.44 d)::
14954 :: EXPR :: modify :: D :: v163[#(3)] = #(18.14 d)::
14958 :: EXPR :: modify :: D :: v163[#(4)] = #(21.35 d)::
14962 :: EXPR :: modify :: D :: v163[#(5)] = #(24.37 d)::
14966 :: EXPR :: modify :: D :: v163[#(6)] = #(27.0 d)::
14970 :: EXPR :: modify :: D :: v163[#(7)] = #(29.68 d)::
14974 :: EXPR :: modify :: D :: v163[#(8)] = #(32.22 d)::
14978 :: EXPR :: modify :: D :: v163[#(9)] = #(34.37 d)::
14982 :: EXPR :: modify :: D :: v163[#(10)] = #(36.65 d)::
14986 :: EXPR :: modify :: D :: v163[#(11)] = #(38.63 d)::
14990 :: EXPR :: modify :: D :: v163[#(12)] = #(40.31 d)::
14994 :: EXPR :: modify :: D :: v163[#(13)] = #(42.16 d)::
14998 :: EXPR :: modify :: D :: v163[#(14)] = #(43.78 d)::
15002 :: EXPR :: modify :: D :: v163[#(15)] = #(44.98 d)::
15006 :: EXPR :: modify :: D :: v163[#(16)] = #(47.08 d)::
15010 :: EXPR :: modify :: D :: v163[#(17)] = #(49.09 d)::
15014 :: EXPR :: modify :: D :: v163[#(18)] = #(50.78 d)::
15018 :: EXPR :: modify :: D :: v163[#(19)] = #(52.15 d)::
15024 :: NORM :: declaration :: [D :: v184 = new []::
15025 :: EXPR :: modify :: D :: v184[#(0)] = #(1.0 d)::
15029 :: EXPR :: modify :: D :: v184[#(1)] = #(0.92 d)::
15033 :: EXPR :: modify :: D :: v184[#(2)] = #(0.841 d)::
15037 :: EXPR :: modify :: D :: v184[#(3)] = #(0.764 d)::
15041 :: EXPR :: modify :: D :: v184[#(4)] = #(0.689 d)::
15045 :: EXPR :: modify :: D :: v184[#(5)] = #(0.617 d)::
15049 :: EXPR :: modify :: D :: v184[#(6)] = #(0.549 d)::
15053 :: EXPR :: modify :: D :: v184[#(7)] = #(0.484 d)::
15057 :: EXPR :: modify :: D :: v184[#(8)] = #(0.424 d)::
15061 :: EXPR :: modify :: D :: v184[#(9)] = #(0.368 d)::
15065 :: EXPR :: modify :: D :: v184[#(10)] = #(0.317 d)::
15069 :: EXPR :: modify :: D :: v184[#(11)] = #(0.271 d)::
15073 :: EXPR :: modify :: D :: v184[#(12)] = #(0.23 d)::
15077 :: EXPR :: modify :: D :: v184[#(13)] = #(0.194 d)::
15081 :: EXPR :: modify :: D :: v184[#(14)] = #(0.162 d)::
15085 :: EXPR :: modify :: D :: v184[#(15)] = #(0.134 d)::
15089 :: EXPR :: modify :: D :: v184[#(16)] = #(0.11 d)::
15093 :: EXPR :: modify :: D :: v184[#(17)] = #(0.0891 d)::
15097 :: EXPR :: modify :: D :: v184[#(18)] = #(0.0719 d)::
15101 :: EXPR :: modify :: D :: v184[#(19)] = #(0.0574 d)::
15105 :: EXPR :: modify :: D :: v184[#(20)] = #(0.0455 d)::
15109 :: EXPR :: modify :: D :: v184[#(21)] = #(0.0357 d)::
15113 :: EXPR :: modify :: D :: v184[#(22)] = #(0.0278 d)::
15117 :: EXPR :: modify :: D :: v184[#(23)] = #(0.0214 d)::
15121 :: EXPR :: modify :: D :: v184[#(24)] = #(0.0164 d)::
15125 :: EXPR :: modify :: D :: v184[#(25)] = #(0.0124 d)::
15129 :: EXPR :: modify :: D :: v184[#(26)] = #(0.00932 d)::
15133 :: EXPR :: modify :: D :: v184[#(27)] = #(0.00693 d)::
15137 :: EXPR :: modify :: D :: v184[#(28)] = #(0.00511 d)::
15141 :: EXPR :: modify :: D :: v184[#(29)] = #(0.00373 d)::
15145 :: EXPR :: modify :: D :: v184[#(30)] = #(0.0027 d)::
15149 :: EXPR :: modify :: D :: v184[#(31)] = #(0.00194 d)::
15153 :: EXPR :: modify :: D :: v184[#(32)] = #(0.00137 d)::
15157 :: EXPR :: modify :: D :: v184[#(33)] = #(9.67E-4 d)::
15161 :: EXPR :: modify :: D :: v184[#(34)] = #(6.74E-4 d)::
15165 :: EXPR :: modify :: D :: v184[#(35)] = #(4.65E-4 d)::
15169 :: EXPR :: modify :: D :: v184[#(36)] = #(3.18E-4 d)::
15173 :: EXPR :: modify :: D :: v184[#(37)] = #(2.16E-4 d)::
15177 :: EXPR :: modify :: D :: v184[#(38)] = #(1.45E-4 d)::
15181 :: EXPR :: modify :: D :: v184[#(39)] = #(9.62E-5 d)::
15185 :: EXPR :: modify :: D :: v184[#(40)] = #(6.33E-5 d)::
15189 :: EXPR :: modify :: D :: v184[#(41)] = #(4.13E-5 d)::
15193 :: EXPR :: modify :: D :: v184[#(42)] = #(2.67E-5 d)::
15197 :: EXPR :: modify :: D :: v184[#(43)] = #(1.71E-5 d)::
15201 :: EXPR :: modify :: D :: v184[#(44)] = #(1.08E-5 d)::
15205 :: EXPR :: modify :: D :: v184[#(45)] = #(6.8E-6 d)::
15209 :: EXPR :: modify :: D :: v184[#(46)] = #(4.22E-6 d)::
15213 :: EXPR :: modify :: D :: v184[#(47)] = #(2.6E-6 d)::
15217 :: EXPR :: modify :: D :: v184[#(48)] = #(1.59E-6 d)::
15221 :: EXPR :: modify :: D :: v184[#(49)] = #(9.58E-7 d)::
15225 :: EXPR :: modify :: D :: v184[#(50)] = #(5.73E-7 d)::
15229 :: EXPR :: modify :: D :: v184[#(51)] = #(3.4E-7 d)::
15233 :: EXPR :: modify :: D :: v184[#(52)] = #(1.99E-7 d)::
15237 :: EXPR :: modify :: D :: v184[#(53)] = #(1.16E-7 d)::
15241 :: EXPR :: modify :: D :: v184[#(54)] = #(6.66E-8 d)::
15245 :: EXPR :: modify :: D :: v184[#(55)] = #(3.8E-8 d)::
15249 :: EXPR :: modify :: D :: v184[#(56)] = #(2.14E-8 d)::
15253 :: EXPR :: modify :: D :: v184[#(57)] = #(1.2E-8 d)::
15257 :: EXPR :: modify :: D :: v184[#(58)] = #(6.63E-9 d)::
15261 :: EXPR :: modify :: D :: v184[#(59)] = #(3.64E-9 d)::
15265 :: EXPR :: modify :: D :: v184[#(60)] = #(1.97E-9 d)::
15269 :: EXPR :: modify :: D :: v184[#(61)] = #(1.06E-9 d)::
15273 :: EXPR :: modify :: D :: v184[#(62)] = #(5.65E-10 d)::
15277 :: EXPR :: modify :: D :: v184[#(63)] = #(2.98E-10 d)::
15281 :: EXPR :: modify :: D :: v184[#(64)] = #(1.55E-10 d)::
15285 :: EXPR :: modify :: D :: v184[#(65)] = #(8.03E-11 d)::
15289 :: EXPR :: modify :: D :: v184[#(66)] = #(4.11E-11 d)::
15293 :: EXPR :: modify :: D :: v184[#(67)] = #(2.08E-11 d)::
15297 :: EXPR :: modify :: D :: v184[#(68)] = #(1.05E-11 d)::
15301 :: EXPR :: modify :: D :: v184[#(69)] = #(5.2E-12 d)::
15305 :: EXPR :: modify :: D :: v184[#(70)] = #(2.56E-12 d)::
15309 :: EXPR :: modify :: D :: v184[#(71)] = #(1.25E-12 d)::
15313 :: EXPR :: modify :: D :: v184[#(72)] = #(6.02E-13 d)::
15317 :: EXPR :: modify :: D :: v184[#(73)] = #(2.88E-13 d)::
15321 :: EXPR :: modify :: D :: v184[#(74)] = #(1.36E-13 d)::
15325 :: EXPR :: modify :: D :: v184[#(75)] = #(6.38E-14 d)::
15329 :: EXPR :: modify :: D :: v184[#(76)] = #(2.96E-14 d)::
15333 :: EXPR :: modify :: D :: v184[#(77)] = #(1.36E-14 d)::
15337 :: EXPR :: modify :: D :: v184[#(78)] = #(6.19E-15 d)::
15341 :: EXPR :: modify :: D :: v184[#(79)] = #(2.79E-15 d)::
15345 :: EXPR :: modify :: D :: v184[#(80)] = #(1.24E-15 d)::
15349 :: EXPR :: modify :: D :: v184[#(81)] = #(5.5E-16 d)::
15353 :: EXPR :: modify :: D :: v184[#(82)] = #(2.4E-16 d)::
15357 :: EXPR :: modify :: D :: v184[#(83)] = #(1.04E-16 d)::
15361 :: EXPR :: modify :: D :: v184[#(84)] = #(4.46E-17 d)::
15365 :: EXPR :: modify :: D :: v184[#(85)] = #(1.9E-17 d)::
15369 :: EXPR :: modify :: D :: v184[#(86)] = #(7.97E-18 d)::
15373 :: EXPR :: modify :: D :: v184[#(87)] = #(3.32E-18 d)::
15377 :: EXPR :: modify :: D :: v184[#(88)] = #(1.37E-18 d)::
15381 :: EXPR :: modify :: D :: v184[#(89)] = #(5.58E-19 d)::
15385 :: EXPR :: modify :: D :: v184[#(90)] = #(2.26E-19 d)::
15389 :: EXPR :: modify :: D :: v184[#(91)] = #(9.03E-20 d)::
15393 :: EXPR :: modify :: D :: v184[#(92)] = #(3.58E-20 d)::
15397 :: EXPR :: modify :: D :: v184[#(93)] = #(1.4E-20 d)::
15401 :: EXPR :: modify :: D :: v184[#(94)] = #(5.46E-21 d)::
15405 :: EXPR :: modify :: D :: v184[#(95)] = #(2.1E-21 d)::
15409 :: EXPR :: modify :: D :: v184[#(96)] = #(7.99E-22 d)::
15413 :: EXPR :: modify :: D :: v184[#(97)] = #(3.02E-22 d)::
15417 :: EXPR :: modify :: D :: v184[#(98)] = #(1.13E-22 d)::
15421 :: EXPR :: modify :: D :: v184[#(99)] = #(4.16E-23 d)::
15425 :: EXPR :: modify :: D :: v184[#(100)] = #(1.52E-23 d)::
15429 :: EXPR :: modify :: D :: v184[#(101)] = #(5.52E-24 d)::
15433 :: EXPR :: modify :: D :: v184[#(102)] = #(1.98E-24 d)::
15437 :: EXPR :: modify :: D :: v184[#(103)] = #(7.05E-25 d)::
15441 :: EXPR :: modify :: D :: v184[#(104)] = #(2.48E-25 d)::
15445 :: EXPR :: modify :: D :: v184[#(105)] = #(8.64E-26 d)::
15449 :: EXPR :: modify :: D :: v184[#(106)] = #(2.98E-26 d)::
15453 :: EXPR :: modify :: D :: v184[#(107)] = #(1.02E-26 d)::
15457 :: EXPR :: modify :: D :: v184[#(108)] = #(3.44E-27 d)::
15461 :: EXPR :: modify :: D :: v184[#(109)] = #(1.15E-27 d)::
15465 :: EXPR :: modify :: D :: v184[#(110)] = #(3.82E-28 d)::
15469 :: EXPR :: modify :: D :: v184[#(111)] = #(1.25E-28 d)::
15473 :: EXPR :: modify :: D :: v184[#(112)] = #(4.08E-29 d)::
15477 :: EXPR :: modify :: D :: v184[#(113)] = #(1.31E-29 d)::
15481 :: EXPR :: modify :: D :: v184[#(114)] = #(4.18E-30 d)::
15485 :: EXPR :: modify :: D :: v184[#(115)] = #(1.32E-30 d)::
15489 :: EXPR :: modify :: D :: v184[#(116)] = #(4.12E-31 d)::
15493 :: EXPR :: modify :: D :: v184[#(117)] = #(1.27E-31 d)::
15497 :: EXPR :: modify :: D :: v184[#(118)] = #(3.9E-32 d)::
15501 :: EXPR :: modify :: D :: v184[#(119)] = #(1.18E-32 d)::
15505 :: EXPR :: modify :: D :: v184[#(120)] = #(3.55E-33 d)::
15509 :: EXPR :: modify :: D :: v184[#(121)] = #(1.06E-33 d)::
15513 :: EXPR :: modify :: D :: v184[#(122)] = #(3.11E-34 d)::
15517 :: EXPR :: modify :: D :: v184[#(123)] = #(9.06E-35 d)::
15521 :: EXPR :: modify :: D :: v184[#(124)] = #(2.61E-35 d)::
15525 :: EXPR :: modify :: D :: v184[#(125)] = #(7.47E-36 d)::
15529 :: EXPR :: modify :: D :: v184[#(126)] = #(2.11E-36 d)::
15533 :: EXPR :: modify :: D :: v184[#(127)] = #(5.91E-37 d)::
15537 :: EXPR :: modify :: D :: v184[#(128)] = #(1.64E-37 d)::
15541 :: EXPR :: modify :: D :: v184[#(129)] = #(4.5E-38 d)::
15545 :: EXPR :: modify :: D :: v184[#(130)] = #(1.22E-38 d)::
15549 :: EXPR :: modify :: D :: v184[#(131)] = #(3.29E-39 d)::
15553 :: EXPR :: modify :: D :: v184[#(132)] = #(8.77E-40 d)::
15557 :: EXPR :: modify :: D :: v184[#(133)] = #(2.31E-40 d)::
15561 :: EXPR :: modify :: D :: v184[#(134)] = #(6.05E-41 d)::
15565 :: EXPR :: modify :: D :: v184[#(135)] = #(1.56E-41 d)::
15569 :: EXPR :: modify :: D :: v184[#(136)] = #(4.0E-42 d)::
15573 :: EXPR :: modify :: D :: v184[#(137)] = #(1.02E-42 d)::
15577 :: EXPR :: modify :: D :: v184[#(138)] = #(2.55E-43 d)::
15581 :: EXPR :: modify :: D :: v184[#(139)] = #(6.33E-44 d)::
15585 :: EXPR :: modify :: D :: v184[#(140)] = #(1.56E-44 d)::
15589 :: EXPR :: modify :: D :: v184[#(141)] = #(3.8E-45 d)::
15593 :: EXPR :: modify :: D :: v184[#(142)] = #(9.16E-46 d)::
15597 :: EXPR :: modify :: D :: v184[#(143)] = #(2.19E-46 d)::
15601 :: EXPR :: modify :: D :: v184[#(144)] = #(5.17E-47 d)::
15605 :: EXPR :: modify :: D :: v184[#(145)] = #(1.21E-47 d)::
15609 :: EXPR :: modify :: D :: v184[#(146)] = #(2.81E-48 d)::
15613 :: EXPR :: modify :: D :: v184[#(147)] = #(6.45E-49 d)::
15617 :: EXPR :: modify :: D :: v184[#(148)] = #(1.46E-49 d)::
15621 :: EXPR :: modify :: D :: v184[#(149)] = #(3.3E-50 d)::
15627 :: NORM :: declaration :: [D :: v463 = new []::
15628 :: EXPR :: modify :: D :: v463[#(0)] = #(0.0 d)::
15632 :: EXPR :: modify :: D :: v463[#(1)] = #(0.73 d)::
15636 :: EXPR :: modify :: D :: v463[#(2)] = #(1.24 d)::
15640 :: EXPR :: modify :: D :: v463[#(3)] = #(1.64 d)::
15644 :: EXPR :: modify :: D :: v463[#(4)] = #(1.99 d)::
15648 :: EXPR :: modify :: D :: v463[#(5)] = #(2.3 d)::
15652 :: EXPR :: modify :: D :: v463[#(6)] = #(2.58 d)::
15656 :: EXPR :: modify :: D :: v463[#(7)] = #(2.83 d)::
15660 :: EXPR :: modify :: D :: v463[#(8)] = #(3.07 d)::
15664 :: EXPR :: modify :: D :: v463[#(9)] = #(3.29 d)::
15668 :: EXPR :: modify :: D :: v463[#(10)] = #(3.5 d)::
15672 :: EXPR :: modify :: D :: v463[#(11)] = #(3.7 d)::
15676 :: EXPR :: modify :: D :: v463[#(12)] = #(3.89 d)::
15680 :: EXPR :: modify :: D :: v463[#(13)] = #(4.07 d)::
15684 :: EXPR :: modify :: D :: v463[#(14)] = #(4.25 d)::
15688 :: EXPR :: modify :: D :: v463[#(15)] = #(4.42 d)::
15692 :: EXPR :: modify :: D :: v463[#(16)] = #(4.58 d)::
15696 :: EXPR :: modify :: D :: v463[#(17)] = #(4.74 d)::
15700 :: EXPR :: modify :: D :: v463[#(18)] = #(4.89 d)::
15704 :: EXPR :: modify :: D :: v463[#(19)] = #(5.04 d)::
15708 :: EXPR :: modify :: D :: v463[#(20)] = #(5.19 d)::
15712 :: EXPR :: modify :: D :: v463[#(21)] = #(5.33 d)::
15716 :: EXPR :: modify :: D :: v463[#(22)] = #(5.46 d)::
15720 :: EXPR :: modify :: D :: v463[#(23)] = #(5.6 d)::
15724 :: EXPR :: modify :: D :: v463[#(24)] = #(5.73 d)::
15728 :: EXPR :: modify :: D :: v463[#(25)] = #(5.86 d)::
15732 :: EXPR :: modify :: D :: v463[#(26)] = #(5.99 d)::
15736 :: EXPR :: modify :: D :: v463[#(27)] = #(6.11 d)::
15740 :: EXPR :: modify :: D :: v463[#(28)] = #(6.23 d)::
15744 :: EXPR :: modify :: D :: v463[#(29)] = #(6.35 d)::
15748 :: EXPR :: modify :: D :: v463[#(30)] = #(6.47 d)::
15752 :: EXPR :: modify :: D :: v463[#(31)] = #(6.58 d)::
15756 :: EXPR :: modify :: D :: v463[#(32)] = #(6.7 d)::
15760 :: EXPR :: modify :: D :: v463[#(33)] = #(6.81 d)::
15764 :: EXPR :: modify :: D :: v463[#(34)] = #(6.92 d)::
15768 :: EXPR :: modify :: D :: v463[#(35)] = #(7.02 d)::
15772 :: EXPR :: modify :: D :: v463[#(36)] = #(7.13 d)::
15776 :: EXPR :: modify :: D :: v463[#(37)] = #(7.24 d)::
15780 :: EXPR :: modify :: D :: v463[#(38)] = #(7.34 d)::
15784 :: EXPR :: modify :: D :: v463[#(39)] = #(7.44 d)::
15788 :: EXPR :: modify :: D :: v463[#(40)] = #(7.54 d)::
15792 :: EXPR :: modify :: D :: v463[#(41)] = #(7.64 d)::
15796 :: EXPR :: modify :: D :: v463[#(42)] = #(7.74 d)::
15800 :: EXPR :: modify :: D :: v463[#(43)] = #(7.84 d)::
15804 :: EXPR :: modify :: D :: v463[#(44)] = #(7.93 d)::
15808 :: EXPR :: modify :: D :: v463[#(45)] = #(8.03 d)::
15812 :: EXPR :: modify :: D :: v463[#(46)] = #(8.12 d)::
15816 :: EXPR :: modify :: D :: v463[#(47)] = #(8.21 d)::
15820 :: EXPR :: modify :: D :: v463[#(48)] = #(8.3 d)::
15824 :: EXPR :: modify :: D :: v463[#(49)] = #(8.4 d)::
15828 :: EXPR :: modify :: D :: v463[#(50)] = #(8.49 d)::
15832 :: EXPR :: modify :: D :: v463[#(51)] = #(8.57 d)::
15836 :: EXPR :: modify :: D :: v463[#(52)] = #(8.66 d)::
15840 :: EXPR :: modify :: D :: v463[#(53)] = #(8.75 d)::
15844 :: EXPR :: modify :: D :: v463[#(54)] = #(8.84 d)::
15848 :: EXPR :: modify :: D :: v463[#(55)] = #(8.92 d)::
15852 :: EXPR :: modify :: D :: v463[#(56)] = #(9.01 d)::
15856 :: EXPR :: modify :: D :: v463[#(57)] = #(9.09 d)::
15860 :: EXPR :: modify :: D :: v463[#(58)] = #(9.17 d)::
15864 :: EXPR :: modify :: D :: v463[#(59)] = #(9.25 d)::
15868 :: EXPR :: modify :: D :: v463[#(60)] = #(9.34 d)::
15872 :: EXPR :: modify :: D :: v463[#(61)] = #(9.42 d)::
15876 :: EXPR :: modify :: D :: v463[#(62)] = #(9.5 d)::
15880 :: EXPR :: modify :: D :: v463[#(63)] = #(9.58 d)::
15884 :: EXPR :: modify :: D :: v463[#(64)] = #(9.66 d)::
15888 :: EXPR :: modify :: D :: v463[#(65)] = #(9.73 d)::
15892 :: EXPR :: modify :: D :: v463[#(66)] = #(9.81 d)::
15896 :: EXPR :: modify :: D :: v463[#(67)] = #(9.89 d)::
15900 :: EXPR :: modify :: D :: v463[#(68)] = #(9.97 d)::
15904 :: EXPR :: modify :: D :: v463[#(69)] = #(10.04 d)::
15908 :: EXPR :: modify :: D :: v463[#(70)] = #(10.12 d)::
15912 :: EXPR :: modify :: D :: v463[#(71)] = #(10.19 d)::
15916 :: EXPR :: modify :: D :: v463[#(72)] = #(10.27 d)::
15920 :: EXPR :: modify :: D :: v463[#(73)] = #(10.34 d)::
15924 :: EXPR :: modify :: D :: v463[#(74)] = #(10.41 d)::
15928 :: EXPR :: modify :: D :: v463[#(75)] = #(10.49 d)::
15932 :: EXPR :: modify :: D :: v463[#(76)] = #(10.56 d)::
15936 :: EXPR :: modify :: D :: v463[#(77)] = #(10.63 d)::
15940 :: EXPR :: modify :: D :: v463[#(78)] = #(10.7 d)::
15944 :: EXPR :: modify :: D :: v463[#(79)] = #(10.77 d)::
15948 :: EXPR :: modify :: D :: v463[#(80)] = #(10.84 d)::
15952 :: EXPR :: modify :: D :: v463[#(81)] = #(10.91 d)::
15956 :: EXPR :: modify :: D :: v463[#(82)] = #(10.98 d)::
15960 :: EXPR :: modify :: D :: v463[#(83)] = #(11.05 d)::
15964 :: EXPR :: modify :: D :: v463[#(84)] = #(11.12 d)::
15968 :: EXPR :: modify :: D :: v463[#(85)] = #(11.19 d)::
15972 :: EXPR :: modify :: D :: v463[#(86)] = #(11.26 d)::
15976 :: EXPR :: modify :: D :: v463[#(87)] = #(11.32 d)::
15980 :: EXPR :: modify :: D :: v463[#(88)] = #(11.39 d)::
15984 :: EXPR :: modify :: D :: v463[#(89)] = #(11.46 d)::
15988 :: EXPR :: modify :: D :: v463[#(90)] = #(11.52 d)::
15992 :: EXPR :: modify :: D :: v463[#(91)] = #(11.59 d)::
15996 :: EXPR :: modify :: D :: v463[#(92)] = #(11.66 d)::
16000 :: EXPR :: modify :: D :: v463[#(93)] = #(11.72 d)::
16004 :: EXPR :: modify :: D :: v463[#(94)] = #(11.79 d)::
16008 :: EXPR :: modify :: D :: v463[#(95)] = #(11.85 d)::
16012 :: EXPR :: modify :: D :: v463[#(96)] = #(11.91 d)::
16016 :: EXPR :: modify :: D :: v463[#(97)] = #(11.98 d)::
16020 :: EXPR :: modify :: D :: v463[#(98)] = #(12.04 d)::
16024 :: EXPR :: modify :: D :: v463[#(99)] = #(12.1 d)::
16028 :: EXPR :: modify :: D :: v463[#(100)] = #(12.17 d)::
16032 :: EXPR :: modify :: D :: v463[#(101)] = #(12.23 d)::
16036 :: EXPR :: modify :: D :: v463[#(102)] = #(12.29 d)::
16040 :: EXPR :: modify :: D :: v463[#(103)] = #(12.35 d)::
16044 :: EXPR :: modify :: D :: v463[#(104)] = #(12.42 d)::
16048 :: EXPR :: modify :: D :: v463[#(105)] = #(12.48 d)::
16052 :: EXPR :: modify :: D :: v463[#(106)] = #(12.54 d)::
16056 :: EXPR :: modify :: D :: v463[#(107)] = #(12.6 d)::
16060 :: EXPR :: modify :: D :: v463[#(108)] = #(12.66 d)::
16064 :: EXPR :: modify :: D :: v463[#(109)] = #(12.72 d)::
16068 :: EXPR :: modify :: D :: v463[#(110)] = #(12.78 d)::
16072 :: EXPR :: modify :: D :: v463[#(111)] = #(12.84 d)::
16076 :: EXPR :: modify :: D :: v463[#(112)] = #(12.9 d)::
16080 :: EXPR :: modify :: D :: v463[#(113)] = #(12.96 d)::
16084 :: EXPR :: modify :: D :: v463[#(114)] = #(13.02 d)::
16088 :: EXPR :: modify :: D :: v463[#(115)] = #(13.07 d)::
16092 :: EXPR :: modify :: D :: v463[#(116)] = #(13.13 d)::
16096 :: EXPR :: modify :: D :: v463[#(117)] = #(13.19 d)::
16100 :: EXPR :: modify :: D :: v463[#(118)] = #(13.25 d)::
16104 :: EXPR :: modify :: D :: v463[#(119)] = #(13.31 d)::
16108 :: EXPR :: modify :: D :: v463[#(120)] = #(13.36 d)::
16112 :: EXPR :: modify :: D :: v463[#(121)] = #(13.42 d)::
16116 :: EXPR :: modify :: D :: v463[#(122)] = #(13.48 d)::
16120 :: EXPR :: modify :: D :: v463[#(123)] = #(13.53 d)::
16124 :: EXPR :: modify :: D :: v463[#(124)] = #(13.59 d)::
16128 :: EXPR :: modify :: D :: v463[#(125)] = #(13.65 d)::
16132 :: EXPR :: modify :: D :: v463[#(126)] = #(13.7 d)::
16136 :: EXPR :: modify :: D :: v463[#(127)] = #(13.76 d)::
16140 :: EXPR :: modify :: D :: v463[#(128)] = #(13.81 d)::
16144 :: EXPR :: modify :: D :: v463[#(129)] = #(13.87 d)::
16148 :: EXPR :: modify :: D :: v463[#(130)] = #(13.92 d)::
16152 :: EXPR :: modify :: D :: v463[#(131)] = #(13.98 d)::
16156 :: EXPR :: modify :: D :: v463[#(132)] = #(14.03 d)::
16160 :: EXPR :: modify :: D :: v463[#(133)] = #(14.09 d)::
16164 :: EXPR :: modify :: D :: v463[#(134)] = #(14.14 d)::
16168 :: EXPR :: modify :: D :: v463[#(135)] = #(14.19 d)::
16172 :: EXPR :: modify :: D :: v463[#(136)] = #(14.25 d)::
16176 :: EXPR :: modify :: D :: v463[#(137)] = #(14.3 d)::
16180 :: EXPR :: modify :: D :: v463[#(138)] = #(14.35 d)::
16184 :: EXPR :: modify :: D :: v463[#(139)] = #(14.41 d)::
16188 :: EXPR :: modify :: D :: v463[#(140)] = #(14.46 d)::
16192 :: EXPR :: modify :: D :: v463[#(141)] = #(14.51 d)::
16196 :: EXPR :: modify :: D :: v463[#(142)] = #(14.57 d)::
16200 :: EXPR :: modify :: D :: v463[#(143)] = #(14.62 d)::
16204 :: EXPR :: modify :: D :: v463[#(144)] = #(14.67 d)::
16208 :: EXPR :: modify :: D :: v463[#(145)] = #(14.72 d)::
16212 :: EXPR :: modify :: D :: v463[#(146)] = #(14.77 d)::
16216 :: EXPR :: modify :: D :: v463[#(147)] = #(14.83 d)::
16220 :: EXPR :: modify :: D :: v463[#(148)] = #(14.88 d)::
16224 :: EXPR :: modify :: D :: v463[#(149)] = #(14.93 d)::
17636 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,17639:CD,17642:JM,37112:JM,37115:CD,17653:CD,17655:CD,17658:CD,17669:CD,17671:CD,17672:CD,17682:CD,17684:CD,17685:CD,17691:CD,17697:CD,17705:CD,17718
17639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,17653
17642 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,37039
17653 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
17655 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,17669
17658 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,37039
17669 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
17671 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,17682
17672 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,37126
17682 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
17684 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
17685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,17687
17687 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
17691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,17693
17693 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
17697 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,17699
17699 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
17705 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,17718
17706 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
17710 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
17714 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
17718 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,17718
17800 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.FarmJobParameters.<clinit>()::CD,17803:CD,17811
17803 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(jfatcat))::CL,37257
17811 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getString(#(server.url))::CL,37269
17824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,17834:CD,17850
17834 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,37257
17850 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
17868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.ScoringStrategy.<clinit>()::CD,17871:JM,37333:CD,17878:CD,17880:CD,17887:CD,17889:CD,17896:CD,17898:CD,17905:CD,17907:CD,17914:CD,17916:CD,17917:CD,17923:CD,17929:CD,17935:CD,17941
17871 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v2 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17878
17878 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING = v2::
17880 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17887
17887 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING = v7::
17889 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v12 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17896
17896 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING = v12::
17898 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v17 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17905
17905 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING = v17::
17907 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v22 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17914
17914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION = v22::
17916 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy[]::
17917 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::DD,17919
17919 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(0)] = v29::
17923 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v30 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::DD,17925
17925 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(1)] = v30::
17929 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v31 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::DD,17931
17931 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(2)] = v31::
17935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::DD,17937
17937 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(3)] = v32::
17941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::DD,17943
17943 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(4)] = v33::
18092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,18108:CD,18109:CD,18150:CD,18160:CD,18161:CD,18182:CD,18192:CD,18193:CD,18330
18108 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,18109
18109 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,18150
18110 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
18114 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
18118 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
18122 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
18126 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
18130 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
18134 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
18138 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
18142 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
18146 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
18150 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,18150
18160 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,18161
18161 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,18182
18162 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
18166 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
18170 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
18174 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
18178 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
18182 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,18182
18192 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,18193
18193 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,18330
18194 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
18198 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
18202 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
18206 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
18210 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
18214 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
18218 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
18222 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
18226 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
18230 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
18234 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
18238 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
18242 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
18246 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
18250 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
18254 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
18258 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
18262 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
18266 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
18270 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
18274 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
18278 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
18282 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
18286 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
18290 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
18294 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
18298 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
18302 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
18306 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
18310 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
18314 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
18318 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
18322 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
18326 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
18330 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,18330
18546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,18549:JM,37354:CD,18556:CD,18558:CD,18565:CD,18567:CD,18574:CD,18576:CD,18583:CD,18585:CD,18592:CD,18594:CD,18601:CD,18603:CD,18610:CD,18612:CD,18619:CD,18621:CD,18628:CD,18630:CD,18637:CD,18639:CD,18646:CD,18648:CD,18649:CD,18655:CD,18661:CD,18667:CD,18673:CD,18679:CD,18685:CD,18691:CD,18697:CD,18703:CD,18709:CD,18717:CD,18723:CD,18728:CD,18734:CD,18740:CD,18745:CD,18751:CD,18757:CD,18762:CD,18768:CD,18774:CD,18781:CD,18788:CD,18800:CD,18803
18549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18556
18556 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
18558 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18565
18565 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
18567 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18574
18574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
18576 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18583
18583 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
18585 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18592
18592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
18594 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18601
18601 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
18603 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18610
18610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
18612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18619
18619 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
18621 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18628
18628 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
18630 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18637
18637 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
18639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18646
18646 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
18648 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
18649 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,18651
18651 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
18655 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,18657
18657 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
18661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,18663
18663 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
18667 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,18669
18669 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
18673 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,18675
18675 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
18679 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,18681
18681 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
18685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,18687
18687 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
18691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,18693
18693 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
18697 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,18699
18699 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
18703 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,18705
18705 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
18709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,18711
18711 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
18717 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,18728
18723 :: CALL :: call :: Z :: v74 = v70.add(v72)::
18728 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,18728
18734 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,18745
18740 :: CALL :: call :: Z :: v81 = v77.add(v79)::
18745 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,18745
18751 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,18762
18757 :: CALL :: call :: Z :: v88 = v84.add(v86)::
18762 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,18762
18768 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
18774 :: CALL :: call :: Z :: v95 = v91.add(v93)::
18781 :: CALL :: call :: Z :: v98 = v91.add(v96)::
18788 :: CALL :: call :: Z :: v101 = v91.add(v99)::
18800 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,18803:CL,37363
18803 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,18803
18938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AlignmentTools.<clinit>()::CD,18942
18942 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
24343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,24346:CD,24352:CD,24354:CD,24360:CD,24362:CD,24368:CD,24370:CD,24376:CD,24378:CD,24384:CD,24386:CD,24392:CD,24394:CD,24400:CD,24402:CD,24408:CD,24410:CD,24411:CD,24417:CD,24423:CD,24429:CD,24435:CD,24441:CD,24447:CD,24453
24346 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24352
24352 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
24354 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24360
24360 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
24362 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24368
24368 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
24370 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24376
24376 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
24378 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24384
24384 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
24386 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24392
24392 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
24394 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24400
24400 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
24402 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24408
24408 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
24410 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
24411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,24413
24413 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
24417 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,24419
24419 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
24423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,24425
24425 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
24429 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,24431
24431 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
24435 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,24437
24437 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
24441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,24443
24443 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
24447 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,24449
24449 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
24453 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,24455
24455 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
24599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,24602:JM,37553:JM,37550:CD,24610:CD,24612:CD,24622:CD,24624:CD,24634:CD,24636:CD,24646:CD,24648:CD,24658:CD,24660:CD,24670:CD,24672:CD,24682:CD,24684:CD,24694:CD,24696:CD,24706:CD,24708:CD,24718:CD,24720:CD,24730:CD,24732:CD,24742:CD,24744:CD,24754:CD,24756:CD,24766:CD,24768:CD,24778:CD,24780:CD,24790:CD,24792:CD,24802:CD,24804:CD,24814:CD,24816:CD,24826:CD,24828:CD,24838:CD,24840:CD,24850:CD,24852:CD,24862:CD,24864:CD,24874:CD,24876:CD,24886:CD,24888:CD,24898:CD,24900:CD,24910:CD,24912:CD,24922:CD,24924:CD,24934:CD,24936:CD,24944:CD,24946:CD,24954:CD,24956:CD,24957:CD,24963:CD,24969:CD,24975:CD,24981:CD,24987:CD,24993:CD,24999:CD,25005:CD,25011:CD,25017:CD,25023:CD,25029:CD,25035:CD,25041:CD,25047:CD,25053:CD,25059:CD,25065:CD,25071:CD,25077:CD,25083:CD,25089:CD,25095:CD,25101:CD,25107:CD,25113:CD,25119:CD,25125:CD,25131
24602 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24610
24610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
24612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24622
24622 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
24624 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24634
24634 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
24636 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24646
24646 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
24648 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24658
24658 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
24660 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24670
24670 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
24672 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24682
24682 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
24684 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24694
24694 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
24696 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24706
24706 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
24708 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24718
24718 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
24720 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24730
24730 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
24732 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24742
24742 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
24744 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24754
24754 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
24756 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24766
24766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
24768 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24778
24778 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
24780 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24790
24790 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
24792 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24802
24802 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
24804 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24814
24814 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
24816 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24826
24826 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
24828 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24838
24838 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
24840 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24850
24850 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
24852 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24862
24862 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
24864 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24874
24874 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
24876 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24886
24886 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
24888 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24898
24898 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
24900 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24910
24910 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
24912 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24922
24922 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
24924 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24934
24934 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
24936 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24944
24944 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
24946 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24954
24954 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
24956 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
24957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,24959
24959 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
24963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,24965
24965 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
24969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,24971
24971 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
24975 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,24977
24977 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
24981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,24983
24983 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
24987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,24989
24989 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
24993 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,24995
24995 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
24999 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,25001
25001 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
25005 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,25007
25007 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
25011 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,25013
25013 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
25017 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,25019
25019 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
25023 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,25025
25025 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
25029 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,25031
25031 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
25035 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,25037
25037 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
25041 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,25043
25043 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
25047 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,25049
25049 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
25053 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,25055
25055 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
25059 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,25061
25061 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
25065 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,25067
25067 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
25071 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,25073
25073 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
25077 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,25079
25079 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
25083 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,25085
25085 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
25089 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,25091
25091 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
25095 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,25097
25097 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
25101 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,25103
25103 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
25107 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,25109
25109 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
25113 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,25115
25115 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
25119 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,25121
25121 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
25125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,25127
25127 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
25131 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,25133
25133 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
25404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,25414
25414 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
25456 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,25459
25459 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
25470 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,25473
25473 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
25496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,25506
25506 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
25518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,25521
25521 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
25530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,25540:CD,25544
25540 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,25544
25544 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,25544
25558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,25561:CD,25567
25561 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
25567 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
25666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,25682:CD,25688
25682 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
25688 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,37611
25748 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,25758:CD,25766:CD,25773:CD,25780:CD,25787:CD,25794:CD,25801
25758 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
25766 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
25773 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
25780 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
25787 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
25794 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
25801 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
25835 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,25838:CD,25839:JM,37802:JM,37805:CD,25850:CD,25852:CD,25853:CD,25864:CD,25866:CD,25867:CD,25878:CD,25880:CD,25881:CD,25892:CD,25894:CD,25895:CD,25906:CD,25908:CD,25909:CD,25920:CD,25922:CD,25923:CD,25934:CD,25936:CD,25937:CD,25948:CD,25950:CD,25951:CD,25957:CD,25963:CD,25969:CD,25975:CD,25981:CD,25987:CD,25993
25838 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25850
25839 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
25850 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
25852 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25864
25853 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
25864 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
25866 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25878
25867 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
25878 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
25880 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25892
25881 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
25892 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
25894 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25906
25895 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
25906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
25908 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25920
25909 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
25920 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
25922 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25934
25923 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
25934 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
25936 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25948
25937 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
25948 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
25950 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
25951 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,25953
25953 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
25957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,25959
25959 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
25963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,25965
25965 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
25969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,25971
25971 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
25975 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,25977
25977 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
25981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,25983
25983 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
25987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,25989
25989 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
25993 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,25995
25995 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
26108 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
26169 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
26175 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
26195 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
26201 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
26225 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
26234 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
26243 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
26252 :: CALL :: call :: J :: v74 = highMask(#(;/))::
26259 :: CALL :: call :: J :: v78 = lowMask(#(-))::
26265 :: CALL :: call :: J :: v80 = highMask(#(-))::
26271 :: CALL :: call :: J :: v83 = lowMask(#(.))::
26277 :: CALL :: call :: J :: v85 = highMask(#(.))::
26286 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
26295 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
26305 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
26314 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
26329 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
26344 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
26353 :: CALL :: call :: J :: v126 = lowMask(#(%))::
26362 :: CALL :: call :: J :: v130 = highMask(#(%))::
26369 :: CALL :: call :: J :: v134 = lowMask(#([))::
26375 :: CALL :: call :: J :: v136 = highMask(#([))::
26383 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
26392 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
26402 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
26411 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
26418 :: NORM :: declaration :: [C :: v157 = new []::
26419 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
26423 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
26427 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
26431 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
26435 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
26439 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
26443 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
26447 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
26451 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
26455 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
26459 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
26463 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
26467 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
26471 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
26475 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
26479 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
26794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,26798:CD,26813
26798 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
26813 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
26828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,26831:CD,26837:CD,26839:CD,26845:CD,26847:CD,26853:CD,26855:CD,26861:CD,26863:CD,26869:CD,26871:CD,26877:CD,26879:CD,26885:CD,26887:CD,26893:CD,26895:CD,26901:CD,26903:CD,26909:CD,26911:CD,26917:CD,26919:CD,26925:CD,26927:CD,26933:CD,26935:CD,26936:CD,26942:CD,26948:CD,26954:CD,26960:CD,26966:CD,26972:CD,26978:CD,26984:CD,26990:CD,26996:CD,27002:CD,27008
26831 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26837
26837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
26839 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26845
26845 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
26847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26853
26853 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
26855 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26861
26861 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
26863 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26869
26869 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
26871 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26877
26877 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
26879 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26885
26885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
26887 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26893
26893 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
26895 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26901
26901 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
26903 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26909
26909 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
26911 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26917
26917 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
26919 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26925
26925 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
26927 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,26933
26933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
26935 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
26936 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,26938
26938 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
26942 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,26944
26944 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
26948 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,26950
26950 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
26954 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,26956
26956 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
26960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,26962
26962 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
26966 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,26968
26968 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
26972 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,26974
26974 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
26978 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,26980
26980 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
26984 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,26986
26986 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
26990 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,26992
26992 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
26996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,26998
26998 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
27002 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,27004
27004 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
27008 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,27010
27010 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
27252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,37847
27326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,27329:JM,37872:JM,37875:JM,37869:CD,27338:CD,27340:CD,27349:CD,27351:CD,27360:CD,27362:CD,27371:CD,27373:CD,27382:CD,27384:CD,27393:CD,27395:CD,27404:CD,27406:CD,27415:CD,27417:CD,27426:CD,27428:CD,27437:CD,27439:CD,27448:CD,27450:CD,27451:CD,27457:CD,27463:CD,27469:CD,27475:CD,27481:CD,27487:CD,27493:CD,27499:CD,27505:CD,27511:CD,27519
27329 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27338
27338 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
27340 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27349
27349 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
27351 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27360
27360 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
27362 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27371
27371 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
27373 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27382
27382 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
27384 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27393
27393 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
27395 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27404
27404 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
27406 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27415
27415 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
27417 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27426
27426 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
27428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27437
27437 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
27439 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,27448
27448 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
27450 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
27451 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,27453
27453 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
27457 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,27459
27459 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
27463 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,27465
27465 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
27469 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,27471
27471 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
27475 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,27477
27477 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
27481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,27483
27483 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
27487 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,27489
27489 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
27493 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,27495
27495 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
27499 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,27501
27501 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
27505 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,27507
27507 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
27511 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,27513
27513 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
27519 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,37888
27681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,27691
27691 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
27807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,27810:CD,27818:CD,27823:CD,27831:CD,27836:CD,27844:CD,27849
27810 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
27818 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
27819 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
27823 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
27831 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
27832 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
27836 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
27844 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
27845 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
27849 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
27905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,27921:CD,27928:CD,27932:CD,27934:CD,27936:CD,27941:CD,27943:CD,27948:CD,27950:CD,27955:CD,27957
27921 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
27928 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,27932
27932 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
27934 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27936 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
27941 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27943 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
27948 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27950 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
27955 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
27957 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
27980 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,27983:CD,27989:CD,27991:CD,27997:CD,27999:CD,28000:CD,28006
27983 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27989
27989 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
27991 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27997
27997 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
27999 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
28000 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,28002
28002 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
28006 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,28008
28008 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
34128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,34131:CD,34137:CD,34143:CD,34147:CD,34151:CD,34157:CD,34161:CD,34167:CD,34171:CD,34177:CD,34181:CD,34187:CD,34191:CD,34197:CD,34201:CD,34207:CD,34211:CD,34217:CD,34221:CD,34227:CD,34231:CD,34237:CD,34241:CD,34247:CD,34251:CD,34257:CD,34261:CD,34267:CD,34271:CD,34277:CD,34281:CD,34287:CD,34291:CD,34297:CD,34301:CD,34307:CD,34311:CD,34317:CD,34321:CD,34327:CD,34331:CD,34337:CD,34341:CD,34347:CD,34351:CD,34357:CD,34361:CD,34367:CD,34371:CD,34375:CD,34377:CD,34381:CD,34385:CD,34391:CD,34395:CD,34401:CD,34405:CD,34411:CD,34415:CD,34421:CD,34425:CD,34431:CD,34435:CD,34441:CD,34445:CD,34451:CD,34455:CD,34461:CD,34465:CD,34471:CD,34475:CD,34481:CD,34485:CD,34491:CD,34495:CD,34501:CD,34505:CD,34511:CD,34515:CD,34521:CD,34525:CD,34531:CD,34535:CD,34541:CD,34545:CD,34551:CD,34555:CD,34561:CD,34565:CD,34571:CD,34575:CD,34581:CD,34585:CD,34591:CD,34595:CD,34601:CD,34605:CD,34611:CD,34615:CD,34619:CD,34625:CD,34629:CD,34635:CD,34639:CD,34645:CD,34649:CD,34655:CD,34659:CD,34665:CD,34669:CD,34675:CD,34679:CD,34683:CD,34685:CD,34689:CD,34693:CD,34699:CD,34703:CD,34709:CD,34713:CD,34719:CD,34723:CD,34729:CD,34733:CD,34739:CD,34743:CD,34749:CD,34753:CD,34759:CD,34763:CD,34765:CD,34769:CD,34774:CD,34776:CD,34780
34131 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
34137 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
34143 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,34371:JM,34375:JM,34367
34147 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
34151 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
34157 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
34161 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
34167 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
34171 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
34177 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
34181 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
34187 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
34191 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
34197 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
34201 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
34207 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
34211 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
34217 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
34221 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
34227 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
34231 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
34237 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
34241 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
34247 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
34251 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
34257 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
34261 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
34267 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
34271 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
34277 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
34281 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
34287 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
34291 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
34297 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
34301 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
34307 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
34311 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
34317 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
34321 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
34327 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
34331 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
34337 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
34341 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
34347 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
34351 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
34357 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
34361 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
34367 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,34371:JM,34375:JM,34367
34371 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,34371:JM,34375
34375 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
34377 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,34601:JM,34605
34381 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
34385 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
34391 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
34395 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
34401 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
34405 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
34411 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
34415 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
34421 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
34425 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
34431 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
34435 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
34441 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
34445 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
34451 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
34455 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
34461 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
34465 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
34471 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
34475 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
34481 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
34485 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
34491 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
34495 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
34501 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
34505 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
34511 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
34515 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
34521 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
34525 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
34531 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
34535 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
34541 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
34545 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
34551 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
34555 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
34561 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
34565 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
34571 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
34575 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
34581 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
34585 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
34591 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
34595 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
34601 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,34601:JM,34605
34605 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,34605
34611 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,34675:JM,34679:JM,34683
34615 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
34619 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
34625 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
34629 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
34635 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
34639 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
34645 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
34649 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
34655 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
34659 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
34665 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
34669 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
34675 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,34675:JM,34679:JM,34683
34679 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,34679:JM,34683
34683 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
34685 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,34753:JM,34749
34689 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
34693 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
34699 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
34703 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
34709 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
34713 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
34719 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
34723 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
34729 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
34733 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
34739 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
34743 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
34749 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,34753:JM,34749
34753 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,34753
34759 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
34763 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
34765 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
34769 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
34774 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
34776 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
34780 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
35172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,35175:JM,50304:JM,45825:JM,45841:JM,50260:JM,50324:JM,45829:JM,45845:JM,50246:JM,50310:JM,50296:JM,45833:JM,45837:JM,38089:CD,35190:CD,35192:JM,45873:JM,45877:JM,45881:JM,45885:CD,35207:CD,35209:CD,35219:CD,35221:CD,35222:CD,35228:CD,35234
35175 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35190
35190 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
35192 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35207
35207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
35209 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35219
35219 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
35221 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
35222 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,35224
35224 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
35228 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,35230
35230 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
35234 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,35236
35236 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
35360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,35363:CD,35382
35363 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
35364 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
35368 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
35372 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
35376 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
35382 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
35383 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
35387 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
35391 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
35395 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
36147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.process(java.lang.String[])::CD,36152:CD,36306:CD,36307:CD,36497:JM,36242
36152 :: CALL :: call :: V :: printAboutMe()::CL,38127
36155 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $argv [v42]::JM,36164:JM,36170:JM,36176:JM,36193:JM,36199
36159 :: CALL :: call :: Z :: v10 = v7.equalsIgnoreCase(#(-h))::JM,36164
36164 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 39::CD,36165:CD,36170
36165 :: CALL :: call :: Z :: v13 = v7.equalsIgnoreCase(#(-help))::JM,36170
36170 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 39::CD,36171:CD,36176
36171 :: CALL :: call :: Z :: v16 = v7.equalsIgnoreCase(#(--help))::JM,36176
36176 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 53::CD,36188:CD,36193
36188 :: CALL :: call :: Z :: v19 = v7.equalsIgnoreCase(#(-version))::JM,36193
36193 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 69::CD,36194:CD,36199
36194 :: CALL :: call :: Z :: v22 = v7.equalsIgnoreCase(#(--version))::JM,36199
36199 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 121::CD,36242:CD,36243:CD,36244:CD,36250:CD,36271:CD,36305:CD,36306:CD,36307:CD,36494:CD,36495:CD,36497
36242 :: EXPR :: assign :: I :: v24 = p1 $argv .length::DD,36243
36243 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v24 - #(1)::CF,36244
36244 :: PRED :: IF :: Z :: if (v42 >= v26) goto 136::CF,36494:CD,36245
36245 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v42 + #(1)::
36246 :: EXPR :: reference :: Ljava/lang/Object :: v28 = p1 $argv [v27]::DD,36494
36250 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 155::CD,36251:CD,36256:CD,36258:CD,36495
36251 :: CALL :: call :: Z :: v32 = v29.startsWith(#(-))::JM,36256
36256 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 155::CD,36258:CD,36495
36258 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v42 + #(1)::DD,36495
36271 :: CALL :: call :: [Ljava/lang/String :: v40 = configureBean(v38, v37)::CL,39172
36305 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v34 + #(1)::DD,36497
36306 :: EXPR :: assign :: I :: v6 = p1 $argv .length::CF,36307
36307 :: PRED :: IF :: Z :: if (v42 < v6) goto 10::CD,36159:CD,36164:CD,36311:CD,36315:CD,36331:CD,36335:CD,36351:CD,36355:CD,36381:CD,36385:CD,36415:CD,36422:CD,36426
36311 :: CALL :: call :: Ljava/lang/String :: v45 = v43.getPdbFilePath()::JM,36315:CL,40660
36315 :: PRED :: IF :: Z :: if (v45 == #(null)) goto 252::CD,36323
36323 :: CALL :: call :: Ljava/lang/String :: v51 = setProperty(#(PDB_DIR), v49)::
36331 :: CALL :: call :: Ljava/lang/String :: v54 = v52.getCacheFilePath()::JM,36335:CL,40711
36335 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 275::CD,36343
36343 :: CALL :: call :: Ljava/lang/String :: v60 = setProperty(#(PDB_CACHE_DIR), v58)::
36351 :: CALL :: call :: Z :: v63 = v61.isShowMenu()::JM,36355:CL,40720
36355 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 314::CD,36358:CD,36362
36358 :: CALL :: call :: V :: v64.println(#(showing menu...))::
36362 :: CALL :: call :: V :: showAlignmentGUI()::CL,40729
36381 :: CALL :: call :: Ljava/lang/String :: v78 = v76.getShowDBresult()::JM,36385:CL,40805
36385 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 357::CD,36388:CD,36395
36388 :: CALL :: call :: V :: v79.println(#(showing DB results...))::
36395 :: CALL :: call :: V :: showDBResults(v82)::CL,40814
36415 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getPdb1()::JM,36426:CL,40911
36422 :: CALL :: call :: Ljava/lang/String :: v97 = v95.getFile1()::JM,36427:CL,40920
36426 :: PRED :: IF :: Z :: if (v94 != #(null)) goto 381::CD,36427
36427 :: PRED :: IF :: Z :: if (v97 == #(null)) goto 386::CD,36435:CD,36439
36435 :: CALL :: call :: Ljava/lang/String :: v100 = v98.getAlignPairs()::JM,36439:CL,41471
36439 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 401::CD,36440:CD,36447:CD,36451
36440 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,41480
36447 :: CALL :: call :: Ljava/lang/String :: v103 = v101.getSearchFile()::JM,36451:CL,41732
36451 :: PRED :: IF :: Z :: if (v103 == #(null)) goto 433::CD,36452
36452 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,41480
36494 :: EXPR :: assign :: null :: PHI v29 = #(null), v28::DD,36250:JM,36256
36495 :: EXPR :: assign :: null :: PHI v34 = v42, v33::DD,36305
36497 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,36244:DD,36245:DD,36258:DD,36307:DD,36495:CF,36306
36897 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
36900 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
36903 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
36906 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
36909 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
36912 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
36915 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
36918 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
36921 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
36924 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
36927 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
36930 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
36933 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
36936 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
36939 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
36976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,36977:CD,36979:CD,36981:CD,36982:CD,36990
36977 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,7148
36979 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,36981
36981 :: EXPR :: assign :: I :: v4 = v2.length::DD,36982
36982 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,36990
36990 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,36977
37030 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
37039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,37043:CD,37047:CD,37050:CD,37071:CD,37077
37043 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
37047 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,37050:CL,44854
37050 :: EXPR :: assign :: I :: v7 = v6.length::DD,37071
37059 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,37064
37064 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,37065:CF,37070
37065 :: CALL :: call :: Z :: v14 = v3.add(v9)::
37070 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,37077
37071 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,37059:CD,37064:CD,37070:CD,37077
37077 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,37070:DD,37071
37112 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37115 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
37126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,37129:CD,37133:CD,37136:CD,37172:CD,37178
37129 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
37133 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,37136:CL,44854
37136 :: EXPR :: assign :: I :: v6 = v5.length::DD,37172
37148 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,37153
37153 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,37160:CD,37165:CF,37171
37160 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,37165
37165 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,37166:CF,37171
37166 :: CALL :: call :: Z :: v20 = v2.add(v8)::
37171 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,37178
37172 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,37148:CD,37153:CD,37171:CD,37178
37178 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,37171:DD,37172
37257 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,45154:JM,45162
37269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::CE,37270:CD,37277:CD,37282:CD,37289:CD,37293:CD,37294:CD,37302:CD,37307:CD,37312:CD,37316
37270 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::
37277 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getString(p1 $key )::JM,37282
37282 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,37270
37289 :: CALL :: call :: V :: v8.println(v10)::
37293 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::JM,37316
37294 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(#(33))::
37302 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v12.append(p1 $key )::JM,37316
37307 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(#(33))::JM,37316
37312 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::JM,37316
37316 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,37270
37333 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37354 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
37363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,37364:CD,37366:CD,37368:CD,37369:CD,37377
37364 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,18803
37366 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,37368
37368 :: EXPR :: assign :: I :: v4 = v2.length::DD,37369
37369 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,37377
37377 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,37364
37550 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
37553 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
37611 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,37615:CD,37619:CD,37624:CD,37634:CD,37638:CD,37645:CD,37650:CD,37654:CD,37659:CD,37667:CD,37673:CD,37678:CD,37682:CD,37687:CD,37695:CD,37698:CD,37704:CD,37708:CD,37750:CD,37754:CD,37756:CD,37757:CD,37758
37615 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,37624
37619 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,37624
37624 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,37634:CD,37631
37631 :: CALL :: call :: V :: exit(#(1))::
37634 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,37758
37638 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,37758:CL,45738
37645 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
37650 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
37654 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
37659 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
37667 :: CALL :: call :: V :: exit(#(1))::
37673 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
37678 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
37682 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
37687 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
37695 :: CALL :: call :: V :: exit(#(1))::
37698 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
37704 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,37717:JM,37754
37708 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,37717:JM,37754
37713 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,37717:JM,37754
37717 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,37733:JM,37737
37727 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
37733 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,37733:JM,37737
37737 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,37744:JM,37717:JM,37754
37744 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
37750 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,37717:JM,37754
37754 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,37713:CD,37717:CD,37727:CD,37733:CD,37737:CD,37750:JM,37754
37756 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
37757 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
37758 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,37698:JM,37717:JM,37754
37802 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37805 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
37838 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
37847 :: CALL :: call :: V :: initPath()::CL,45760
37869 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37872 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
37875 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
37888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,37891:CD,37895:CD,37898:CD,37915:CD,37917
37891 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
37895 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,37898:CL,45789
37898 :: EXPR :: assign :: I :: v6 = v5.length::DD,37915
37908 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
37914 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,37917
37915 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,37908:CD,37914:CD,37917
37917 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,37914:DD,37915
38064 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,38065:CD,38071:CD,38075
38065 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,113043:JM,113087
38068 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,38071:JM,38075
38071 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,38071:JM,38075
38075 :: NORM :: compound :: Ljava/util/List :: return v5::DD,38065
38089 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
38127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.printAboutMe()::CD,38130:CD,38134:CD,38139:CD,38146:CD,38151:CD,38156:CD,38161:CD,38166:CD,38170:CD,38175
38130 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(about))::CL,37257
38134 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getString(#(project_version))::CL,37269
38139 :: CALL :: call :: Ljava/lang/String :: v10 = v4.getString(#(build))::CL,37269
38146 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
38151 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v7)::
38156 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#( ))::
38161 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v10)::
38166 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
38170 :: CALL :: call :: V :: v11.println(v23)::
38175 :: CALL :: call :: V :: v25.printStackTrace()::
39156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner.getAlgorithmName()::CF,39157:CD,39160
39157 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.seq.SmithWaterman3Daligner.getAlgorithmName()::
39160 :: NORM :: compound :: Ljava/lang/String :: return #(Smith-Waterman superp...)::CF,39157
39172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CliTools.configureBean(java.lang.Object,java.lang.String[])::CD,39177:CD,39181:CD,39187:CD,39192:CD,39196:CD,39201:CD,39210:CD,39214:CD,39218:CD,39235:CD,39236:CD,39240:CD,39244:CD,39301:CD,39306:CD,39311:CD,39316:CD,39321:CD,39326:CD,39346:CD,39351:CD,39356:CD,39361:CD,39371:CD,39376:CD,39381:CD,39386:CD,39423:CD,39428:CD,39433:CD,39438:CD,39464:CD,39469:CD,39474:CD,39479:CD,39539:CD,39544:CD,39549:CD,39554:CD,39626:CD,39631:CD,39636:CD,39641:CD,39690:CD,39695:CD,39700:CD,39705:CD,39759:CD,39764:CD,39769:CD,39774:CD,39823:CD,39828:CD,39833:CD,39838:CD,39863:CD,39867:CD,39873:CD,39877:CD,39882:CD,39887:CD,39892:CD,39896:CD,39901:CD,39906:CD,39916:CD,39917:CD,39921:CD,39926:CD,39931:CD,39934:CD,40007:CD,40012:CD,40016:CD,40021:CD,40047:CD,40052:CD,40056:CD,40061:CD,40066:CD,40076:CD,40081:CD,40085:CD,40090:CD,40095:CD,40116:CD,40117:CD,40118:CD,40122:CD,40172:CD,40177:CD,40181:CD,40186:CD,40191:CD,40232:CD,40237:CD,40241:CD,40246:CD,40251:CD,40261:CD,40266:CD,40270:CD,40275:CD,40280:CD,40289:CD,40293:CD,40294:CD,40298:CD,40299:CD,40306:CD,40319:CD,40322:CD,40335
39177 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $bean .getClass()::JM,39218:JM,40116:JM,39177:JM,39181:JM,39214
39181 :: CALL :: call :: Ljava/beans/BeanInfo :: v7 = getBeanInfo(v5)::JM,39218:JM,39181:JM,39214
39187 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
39192 :: CALL :: call :: Ljava/lang/String :: v14 = v8.getMessage()::
39196 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
39201 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
39210 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::
39214 :: CALL :: call :: [Ljava/beans/PropertyDescriptor :: v23 = v7.getPropertyDescriptors()::JM,39218:JM,39214
39218 :: EXPR :: assign :: I :: v24 = v23.length::DD,39235
39228 :: CALL :: call :: Ljava/lang/Object :: v30 = v20.put(v28, v26)::
39234 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,40319
39235 :: PRED :: IF :: Z :: if (v33 < v24) goto 69::CF,39236:CD,39228:CD,39234:CD,40319
39236 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::JM,40298
39240 :: NORM :: declaration :: Ljava/util/HashMap :: v36 = new java.util.HashMap::JM,40131:JM,40293
39244 :: NORM :: declaration :: Ljava/util/HashSet :: v38 = new java.util.HashSet::
39249 :: EXPR :: reference :: Ljava/lang/Object :: v41 = p2 $args [v232]::DD,39253:JM,39259:JM,39265:JM,39289
39253 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 151::CD,39255:CD,39259:CD,40332
39255 :: CALL :: call :: I :: v44 = v41.length()::JM,39259
39259 :: PRED :: IF :: Z :: if (v44 <= #(0)) goto 1538::CD,39260:CD,39265:CD,40110:CD,40332
39260 :: CALL :: call :: C :: v46 = v41.charAt(#(0))::JM,39265
39265 :: PRED :: IF :: Z :: if (v46 != #(45)) goto 1538::CD,39266:CD,39271:CD,39276:CD,39277:CD,39976:CD,40110:CD,40325:CD,40326:CD,40327:CD,40328:CD,40332
39266 :: CALL :: call :: Ljava/lang/String :: v49 = v41.substring(#(1))::
39271 :: CALL :: call :: Ljava/lang/Object :: v51 = v20.get(v49)::JM,39276
39276 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,39277:JM,40321:JM,39395:JM,39399:JM,39403:JM,39404:DD,40326
39277 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 361::CD,39284:CD,39289:CD,39293:CD,39298:CD,39342:CD,39395:CD,39399:CD,39403:CD,39408:CD,39410:CD,40320:CD,40321:CD,40325:CD,40326:CD,40327:CD,40328:JM,39404
39284 :: CALL :: call :: Ljava/lang/String :: v58 = v41.substring(#(3))::JM,39289
39289 :: CALL :: call :: Ljava/lang/String :: v60 = decapitalize(v58)::JM,39289
39293 :: CALL :: call :: Ljava/lang/Object :: v62 = v20.get(v60)::JM,39298
39298 :: EXPR :: assign :: Ljava/lang/Object :: v63 = CHECKCAST v62::DD,40326
39301 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v510 = new java.lang.StringBuilder::
39306 :: CALL :: call :: Ljava/lang/String :: v513 = v41.substring(#(1))::
39311 :: CALL :: call :: Ljava/lang/StringBuilder :: v515 = v510.append(v513)::
39316 :: CALL :: call :: Ljava/lang/StringBuilder :: v518 = v515.append(#( or ))::
39321 :: CALL :: call :: Ljava/lang/StringBuilder :: v520 = v518.append(v60)::
39326 :: CALL :: call :: Ljava/lang/String :: v522 = v520.toString()::
39342 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = java.lang.Boolean.FALSE::DD,40328
39346 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v461 = new java.lang.StringBuilder::
39351 :: CALL :: call :: Ljava/lang/StringBuilder :: v465 = v461.append(v41)::
39356 :: CALL :: call :: Ljava/lang/StringBuilder :: v468 = v465.append(#( does not refer to a ...))::
39361 :: CALL :: call :: Ljava/lang/String :: v470 = v468.toString()::
39371 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v450 = new java.lang.StringBuilder::
39376 :: CALL :: call :: Ljava/lang/String :: v454 = v41.substring(#(1))::
39381 :: CALL :: call :: Ljava/lang/StringBuilder :: v456 = v450.append(v454)::
39386 :: CALL :: call :: Ljava/lang/String :: v458 = v456.toString()::
39395 :: CALL :: call :: Ljava/lang/Class :: v69 = v52.getPropertyType()::JM,40321:JM,39395:JM,39399:JM,39403:JM,39404
39399 :: CALL :: call :: Z :: v71 = v69.isArray()::JM,40321:JM,39399:JM,39403:JM,39404
39403 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 386::CF,40320:CD,39404:CD,40321:JM,39399:JM,39403
39404 :: CALL :: call :: Ljava/lang/Class :: v73 = v69.getComponentType()::JM,40321:JM,39399:JM,39403:JM,39404
39408 :: EXPR :: reference :: Ljava/lang/Class :: v76 = java.lang.Integer.TYPE::CF,39410
39410 :: PRED :: IF :: Z :: if (v75 != v76) goto 445::CF,39411:CD,39412:CD,39447:CD,39449:CD,40325:CD,40326:CD,40327:CD,40328
39411 :: NORM :: declaration :: Ljava/lang/Integer :: v77 = new java.lang.Integer::JM,39411:DD,40328:CF,39412
39412 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v232 + #(1)::DD,40325
39413 :: EXPR :: reference :: Ljava/lang/Object :: v79 = p2 $args [v78]::JM,39411
39423 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v439 = new java.lang.StringBuilder::
39428 :: CALL :: call :: Ljava/lang/StringBuilder :: v442 = v439.append(v41)::
39433 :: CALL :: call :: Ljava/lang/StringBuilder :: v445 = v442.append(#( requires an integer ...))::
39438 :: CALL :: call :: Ljava/lang/String :: v447 = v445.toString()::
39447 :: EXPR :: reference :: Ljava/lang/Class :: v81 = java.lang.Double.TYPE::CF,39449
39449 :: PRED :: IF :: Z :: if (v75 == v81) goto 458::CF,39452:CD,39450:CD,39451:CD,39453:CD,40325:CD,40326:CD,40327:CD,40328
39450 :: EXPR :: assign :: Ljava/lang/Class :: v82 = metadata <Application,Ljava/lang/Double>-><Primordial,Ljava/lang/Class>::CF,39451
39451 :: PRED :: IF :: Z :: if (v75 != v82) goto 511::CF,39452:CD,39453:CD,39488:CD,39489:CD,40325:CD,40326:CD,40327:CD,40328
39452 :: NORM :: declaration :: Ljava/lang/Double :: v83 = new java.lang.Double::DD,40328:CF,39453
39453 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v232 + #(1)::DD,40325
39454 :: EXPR :: reference :: Ljava/lang/Object :: v85 = p2 $args [v84]::
39464 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v427 = new java.lang.StringBuilder::
39469 :: CALL :: call :: Ljava/lang/StringBuilder :: v430 = v427.append(v41)::
39474 :: CALL :: call :: Ljava/lang/StringBuilder :: v433 = v430.append(#( requires a numerical...))::
39479 :: CALL :: call :: Ljava/lang/String :: v435 = v433.toString()::
39488 :: EXPR :: assign :: Ljava/lang/Class :: v87 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::CF,39489
39489 :: PRED :: IF :: Z :: if (v75 != v87) goto 530::CD,39490:CD,39496:CD,39498:CD,40325:CD,40326:CD,40327:CD,40328
39490 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v232 + #(1)::DD,40325
39491 :: EXPR :: reference :: Ljava/lang/Object :: v89 = p2 $args [v88]::DD,40328
39496 :: EXPR :: reference :: Ljava/lang/Class :: v90 = java.lang.Boolean.TYPE::CF,39498
39498 :: PRED :: IF :: Z :: if (v75 != v90) goto 644::CF,39563:CD,39499:CD,39504:CD,39564:CD,39569
39499 :: EXPR :: assign :: Ljava/lang/Object :: v91 = v232 + #(1)::DD,40325
39500 :: EXPR :: reference :: Ljava/lang/Object :: v92 = p2 $args [v91]::DD,39504:JM,39513:JM,39519
39504 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 562::CD,39505:CD,39508:CD,39513:CD,40325:CD,40326:CD,40327:CD,40328
39505 :: EXPR :: reference :: Ljava/lang/Boolean :: v93 = java.lang.Boolean.TRUE::DD,40328
39508 :: CALL :: call :: Z :: v96 = v92.equalsIgnoreCase(#(true))::JM,39513
39513 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 578::CD,39514:CD,39519:CD,39520:CD,40325:CD,40326:CD,40327:CD,40328
39514 :: CALL :: call :: Z :: v99 = v92.equalsIgnoreCase(#(t))::JM,39519
39519 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 590::CD,39520:CD,39535:CD,40325:CD,40326:CD,40327:CD,40328
39520 :: EXPR :: reference :: Ljava/lang/Boolean :: v100 = java.lang.Boolean.TRUE::DD,40328
39535 :: EXPR :: reference :: Ljava/lang/Boolean :: v107 = java.lang.Boolean.FALSE::DD,40328
39539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v415 = new java.lang.StringBuilder::
39544 :: CALL :: call :: Ljava/lang/StringBuilder :: v418 = v415.append(v41)::
39549 :: CALL :: call :: Ljava/lang/StringBuilder :: v421 = v418.append(#( requires a boolean p...))::
39554 :: CALL :: call :: Ljava/lang/String :: v423 = v421.toString()::
39563 :: EXPR :: assign :: Ljava/lang/Class :: v108 = metadata <Application,Ljava/io/File>-><Primordial,Ljava/lang/Class>::JM,39569:JM,39564
39564 :: CALL :: call :: Z :: v110 = v108.isAssignableFrom(v75)::JM,39569:JM,39564
39569 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 673::CF,39581:CF,39570:CD,39571:CD,39582:CD,39587:CD,40325:CD,40326:CD,40327:CD,40328
39570 :: NORM :: declaration :: Ljava/io/File :: v111 = new java.io.File::DD,40328:CF,39571
39571 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v232 + #(1)::DD,40325
39572 :: EXPR :: reference :: Ljava/lang/Object :: v113 = p2 $args [v112]::
39581 :: EXPR :: assign :: Ljava/lang/Class :: v115 = metadata <Application,Ljava/io/Reader>-><Primordial,Ljava/lang/Class>::JM,39587:JM,39582
39582 :: CALL :: call :: Z :: v117 = v115.isAssignableFrom(v75)::JM,39587:JM,39582
39587 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 788::CF,39650:CD,39588:CD,39593:CD,39598:CD,39651:CD,39656
39588 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v232 + #(1)::DD,40325
39589 :: EXPR :: reference :: Ljava/lang/Object :: v119 = p2 $args [v118]::JM,39598
39593 :: CALL :: call :: Z :: v122 = #(-).equals(v119)::JM,39598
39598 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 735::CF,39614:CD,39606:CD,39615:CD,40325:CD,40326:CD,40327:CD,40328
39606 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v123 = new java.io.InputStreamReader::DD,40328
39614 :: NORM :: declaration :: Ljava/io/FileReader :: v126 = new java.io.FileReader::DD,40328:CF,39615
39615 :: NORM :: declaration :: Ljava/io/File :: v127 = new java.io.File::
39626 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v403 = new java.lang.StringBuilder::
39631 :: CALL :: call :: Ljava/lang/StringBuilder :: v406 = v403.append(v119)::
39636 :: CALL :: call :: Ljava/lang/StringBuilder :: v408 = v406.append(#( for input))::
39641 :: CALL :: call :: Ljava/lang/String :: v410 = v408.toString()::
39650 :: EXPR :: assign :: Ljava/lang/Class :: v130 = metadata <Application,Ljava/io/InputStream>-><Primordial,Ljava/lang/Class>::JM,39651:JM,39656
39651 :: CALL :: call :: Z :: v132 = v130.isAssignableFrom(v75)::JM,39651:JM,39656
39656 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 896::CF,39714:CD,39657:CD,39662:CD,39667:CD,39715:CD,39720
39657 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v232 + #(1)::DD,40325
39658 :: EXPR :: reference :: Ljava/lang/Object :: v134 = p2 $args [v133]::JM,39667
39662 :: CALL :: call :: Z :: v136 = #(-).equals(v134)::JM,39667
39667 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 843::CF,39678:CD,39675:CD,39679:CD,40325:CD,40326:CD,40327:CD,40328
39675 :: EXPR :: reference :: Ljava/io/InputStream :: v137 = java.lang.System.in::DD,40328
39678 :: NORM :: declaration :: Ljava/io/FileInputStream :: v138 = new java.io.FileInputStream::DD,40328:CF,39679
39679 :: NORM :: declaration :: Ljava/io/File :: v139 = new java.io.File::
39690 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v388 = new java.lang.StringBuilder::
39695 :: CALL :: call :: Ljava/lang/StringBuilder :: v391 = v388.append(v134)::
39700 :: CALL :: call :: Ljava/lang/StringBuilder :: v394 = v391.append(#( for input))::
39705 :: CALL :: call :: Ljava/lang/String :: v396 = v394.toString()::
39714 :: EXPR :: assign :: Ljava/lang/Class :: v142 = metadata <Application,Ljava/io/Writer>-><Primordial,Ljava/lang/Class>::JM,39715:JM,39720
39715 :: CALL :: call :: Z :: v144 = v142.isAssignableFrom(v75)::JM,39715:JM,39720
39720 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 1011::CF,39783:CD,39721:CD,39726:CD,39731:CD,39784:CD,39789
39721 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v232 + #(1)::DD,40325
39722 :: EXPR :: reference :: Ljava/lang/Object :: v146 = p2 $args [v145]::JM,39731
39726 :: CALL :: call :: Z :: v148 = #(-).equals(v146)::JM,39731
39731 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 958::CF,39747:CD,39739:CD,39748:CD,40325:CD,40326:CD,40327:CD,40328
39739 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v149 = new java.io.OutputStreamWriter::DD,40328
39747 :: NORM :: declaration :: Ljava/io/FileWriter :: v152 = new java.io.FileWriter::DD,40328:CF,39748
39748 :: NORM :: declaration :: Ljava/io/File :: v153 = new java.io.File::
39759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v375 = new java.lang.StringBuilder::
39764 :: CALL :: call :: Ljava/lang/StringBuilder :: v378 = v375.append(v146)::
39769 :: CALL :: call :: Ljava/lang/StringBuilder :: v380 = v378.append(#( for output))::
39774 :: CALL :: call :: Ljava/lang/String :: v382 = v380.toString()::
39783 :: EXPR :: assign :: Ljava/lang/Class :: v156 = metadata <Application,Ljava/io/OutputStream>-><Primordial,Ljava/lang/Class>::JM,39784:JM,39789
39784 :: CALL :: call :: Z :: v158 = v156.isAssignableFrom(v75)::JM,39784:JM,39789
39789 :: PRED :: IF :: Z :: if (v158 == #(0)) goto 1121::CD,39790:CD,39795:CD,39800:CD,39847:CD,39851
39790 :: EXPR :: assign :: Ljava/lang/Object :: v159 = v232 + #(1)::DD,40325
39791 :: EXPR :: reference :: Ljava/lang/Object :: v160 = p2 $args [v159]::JM,39800
39795 :: CALL :: call :: Z :: v162 = #(-).equals(v160)::JM,39800
39800 :: PRED :: IF :: Z :: if (v162 == #(0)) goto 1066::CF,39811:CD,39808:CD,39812:CD,40325:CD,40326:CD,40327:CD,40328
39808 :: EXPR :: reference :: Ljava/io/PrintStream :: v163 = java.lang.System.out::DD,40328
39811 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v164 = new java.io.FileOutputStream::DD,40328:CF,39812
39812 :: NORM :: declaration :: Ljava/io/File :: v165 = new java.io.File::
39823 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v359 = new java.lang.StringBuilder::
39828 :: CALL :: call :: Ljava/lang/StringBuilder :: v363 = v359.append(v160)::
39833 :: CALL :: call :: Ljava/lang/StringBuilder :: v366 = v363.append(#( for output))::
39838 :: CALL :: call :: Ljava/lang/String :: v368 = v366.toString()::
39847 :: CALL :: call :: Z :: v169 = v75.isEnum()::JM,39847:JM,39851
39851 :: PRED :: IF :: Z :: if (v169 == #(0)) goto 1287::CD,39852:CD,39857:CD,39945:CD,39950:CD,39955:CD,39960:CD,39965:CD,39969:CD,39973:CD,40325:CD,40326:CD,40327:CD,40328
39852 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v232 + #(1)::DD,40325
39857 :: CALL :: call :: Ljava/lang/Enum :: v173 = valueOf(v75, v171)::JM,40328
39863 :: CALL :: call :: Ljava/lang/String :: v176 = v171.toUpperCase()::
39867 :: CALL :: call :: Ljava/lang/Enum :: v178 = valueOf(v75, v176)::JM,40328
39873 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v322 = new java.lang.StringBuilder::
39877 :: CALL :: call :: Ljava/lang/StringBuilder :: v326 = v322.append(#(Option ))::
39882 :: CALL :: call :: Ljava/lang/StringBuilder :: v328 = v326.append(v41)::
39887 :: CALL :: call :: Ljava/lang/StringBuilder :: v331 = v322.append(#( requires a ))::
39892 :: CALL :: call :: Ljava/lang/String :: v333 = v75.getSimpleName()::
39896 :: CALL :: call :: Ljava/lang/StringBuilder :: v335 = v331.append(v333)::
39901 :: CALL :: call :: Ljava/lang/StringBuilder :: v338 = v322.append(#( parameter. One of: ))::
39906 :: CALL :: call :: [Ljava/lang/Object :: v340 = v75.getEnumConstants()::
39912 :: EXPR :: reference :: Ljava/lang/Object :: v342 = v340[v352]::DD,39916
39916 :: EXPR :: assign :: Ljava/lang/Object :: v343 = CHECKCAST v342::
39917 :: CALL :: call :: Ljava/lang/String :: v345 = v343.name()::
39921 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v322.append(v345)::
39926 :: CALL :: call :: Ljava/lang/StringBuilder :: v350 = v322.append(#( ))::
39931 :: EXPR :: assign :: Ljava/lang/Object :: v351 = v352 + #(1)::DD,40322
39934 :: CALL :: call :: Ljava/lang/String :: v355 = v322.toString()::
39945 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v180 = new java.lang.StringBuilder::
39950 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v180.append(v41)::
39955 :: CALL :: call :: Ljava/lang/StringBuilder :: v187 = v184.append(#( propType:))::
39960 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v187.append(v75)::
39965 :: CALL :: call :: Ljava/lang/String :: v191 = v189.toString()::
39969 :: CALL :: call :: V :: v179.println(v191)::
39973 :: CALL :: call :: V :: exit(#(1))::
39976 :: PRED :: IF :: Z :: if (v199 == #(0)) goto 1388::CD,39977:CD,39982:CD,39983:CD,39994:CD,40000:CD,40104:CD,40329:CD,40332
39977 :: CALL :: call :: Ljava/lang/Object :: v204 = v36.get(v198)::JM,39982
39982 :: EXPR :: assign :: Ljava/lang/Object :: v205 = CHECKCAST v204::DD,39983:DD,40329
39983 :: PRED :: IF :: Z :: if (v205 != #(null)) goto 1375::CF,40329:CF,39984:CD,39988
39984 :: NORM :: declaration :: Ljava/util/ArrayList :: v206 = new java.util.ArrayList::DD,40329
39988 :: CALL :: call :: Ljava/lang/Object :: v209 = v36.put(v198, v206)::
39994 :: CALL :: call :: Z :: v212 = v210.add(v200)::
40000 :: CALL :: call :: Z :: v214 = v38.contains(v198)::
40007 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v499 = new java.lang.StringBuilder::
40012 :: CALL :: call :: Ljava/lang/String :: v503 = v198.getName()::
40016 :: CALL :: call :: Ljava/lang/StringBuilder :: v505 = v499.append(v503)::
40021 :: CALL :: call :: Ljava/lang/String :: v507 = v505.toString()::
40047 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v487 = new java.lang.StringBuilder::
40052 :: CALL :: call :: Ljava/lang/String :: v490 = v198.getName()::
40056 :: CALL :: call :: Ljava/lang/StringBuilder :: v492 = v487.append(v490)::
40061 :: CALL :: call :: Ljava/lang/StringBuilder :: v494 = v492.append(#('))::
40066 :: CALL :: call :: Ljava/lang/String :: v496 = v494.toString()::
40076 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v474 = new java.lang.StringBuilder::
40081 :: CALL :: call :: Ljava/lang/String :: v477 = v198.getName()::
40085 :: CALL :: call :: Ljava/lang/StringBuilder :: v479 = v474.append(v477)::
40090 :: CALL :: call :: Ljava/lang/StringBuilder :: v481 = v479.append(#('))::
40095 :: CALL :: call :: Ljava/lang/String :: v483 = v481.toString()::
40104 :: CALL :: call :: Z :: v221 = v38.add(v198)::
40110 :: CALL :: call :: Z :: v223 = v34.add(v41)::
40115 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v227 + #(1)::DD,40335
40116 :: EXPR :: assign :: I :: v40 = p2 $args .length::CF,40117
40117 :: PRED :: IF :: Z :: if (v232 < v40) goto 138::CD,39253:CD,40115:CD,40116:CD,40332:CD,40335:JM,40131:JM,40293
40118 :: CALL :: call :: Ljava/util/Set :: v234 = v36.entrySet()::JM,40131:JM,40293
40122 :: CALL :: call :: Ljava/util/Iterator :: v236 = v234.iterator()::JM,40131:JM,40293
40127 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.next()::JM,40131:JM,40293
40131 :: EXPR :: assign :: Ljava/lang/Object :: v241 = CHECKCAST v240::JM,40136:JM,40141
40132 :: CALL :: call :: Ljava/lang/Object :: v243 = v241.getKey()::JM,40136
40136 :: EXPR :: assign :: Ljava/lang/Object :: v244 = CHECKCAST v243::JM,40209:JM,40146:JM,40150:JM,40154:JM,40204:JM,40157:JM,40142:JM,40141
40137 :: CALL :: call :: Ljava/lang/Object :: v246 = v241.getValue()::JM,40141
40141 :: EXPR :: assign :: Ljava/lang/Object :: v247 = CHECKCAST v246::JM,40209:JM,40204:JM,40146:JM,40150:JM,40154:JM,40157:JM,40142
40142 :: CALL :: call :: Ljava/lang/Class :: v249 = v244.getPropertyType()::JM,40209:JM,40146:JM,40150:JM,40154:JM,40204:JM,40157:JM,40142
40146 :: CALL :: call :: Ljava/lang/Class :: v251 = v249.getComponentType()::JM,40209:JM,40146:JM,40150:JM,40154:JM,40204:JM,40157
40150 :: CALL :: call :: Z :: v253 = v251.isPrimitive()::JM,40209:JM,40150:JM,40154:JM,40204:JM,40157
40154 :: PRED :: IF :: Z :: if (v253 == #(0)) goto 1702::CD,40155:CD,40157:CD,40200:CD,40204:CD,40209:CD,40210
40155 :: EXPR :: reference :: Ljava/lang/Class :: v254 = java.lang.Integer.TYPE::CF,40157
40157 :: PRED :: IF :: Z :: if (v251 != v254) goto 1645::CD,40158:CD,40166
40158 :: CALL :: call :: [I :: v256 = toIntArray(v247)::CL,46392
40166 :: CALL :: call :: [D :: v259 = toDoubleArray(v247)::CL,46441
40172 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v280 = new java.lang.StringBuilder::
40177 :: CALL :: call :: Ljava/lang/String :: v284 = v251.getName()::JM,40209:JM,40150:JM,40154:JM,40204
40181 :: CALL :: call :: Ljava/lang/StringBuilder :: v286 = v280.append(v284)::JM,40209
40186 :: CALL :: call :: Ljava/lang/StringBuilder :: v289 = v286.append(#( are currently unsupp...))::
40191 :: CALL :: call :: Ljava/lang/String :: v291 = v289.toString()::
40200 :: CALL :: call :: I :: v261 = v247.size()::JM,40209:JM,40204
40204 :: CALL :: call :: Ljava/lang/Object :: v263 = newInstance(v251, v261)::JM,40209:JM,40150:JM,40154:JM,40204
40209 :: EXPR :: assign :: Ljava/lang/Object :: v264 = CHECKCAST v263::
40210 :: CALL :: call :: [Ljava/lang/Object :: v266 = v247.toArray(v264)::
40232 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v310 = new java.lang.StringBuilder::
40237 :: CALL :: call :: Ljava/lang/String :: v313 = v244.getName()::
40241 :: CALL :: call :: Ljava/lang/StringBuilder :: v315 = v310.append(v313)::
40246 :: CALL :: call :: Ljava/lang/StringBuilder :: v317 = v315.append(#('))::
40251 :: CALL :: call :: Ljava/lang/String :: v319 = v317.toString()::
40261 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v295 = new java.lang.StringBuilder::
40266 :: CALL :: call :: Ljava/lang/String :: v299 = v244.getName()::
40270 :: CALL :: call :: Ljava/lang/StringBuilder :: v301 = v295.append(v299)::
40275 :: CALL :: call :: Ljava/lang/StringBuilder :: v304 = v301.append(#('))::
40280 :: CALL :: call :: Ljava/lang/String :: v306 = v304.toString()::
40289 :: CALL :: call :: Z :: v238 = v236.hasNext()::JM,40131:JM,40293
40293 :: PRED :: IF :: Z :: if (v238 != #(0)) goto 1573::CD,40127:CD,40131:CD,40132:CD,40136:CD,40137:CD,40141:CD,40142:CD,40146:CD,40150:CD,40154:CD,40289:JM,40293:JM,40298
40294 :: CALL :: call :: I :: v274 = v34.size()::JM,40298
40298 :: NORM :: declaration :: [Ljava/lang/String :: v275 = new java.lang.String[]::
40299 :: CALL :: call :: [Ljava/lang/Object :: v277 = v34.toArray(v275)::
40306 :: EXPR :: assign :: Ljava/lang/Exception :: v8 = catch <exc>::
40319 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,39234:DD,39235
40320 :: EXPR :: assign :: null :: PHI v74 = #(0), #(1)::CF,40321:DD,40327
40321 :: EXPR :: assign :: null :: PHI v75 = v69, v73::DD,39410:DD,39449:DD,39451:DD,39489:DD,39498:JM,39569:JM,39564:JM,39587:JM,39582:JM,39651:JM,39656:JM,39715:JM,39720:JM,39784:JM,39789:JM,39847:JM,39851
40322 :: EXPR :: assign :: null :: PHI v352 = #(0), v351::DD,39931
40325 :: EXPR :: assign :: null :: PHI v197 = v232, v78, v84, v88, v91, v91, v91, v112, v118, v118, v133, v133, v145, v145, v159, v159, v170, v170, v232::CF,40326:DD,40332
40326 :: EXPR :: assign :: null :: PHI v198 = v63, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52::CF,40327
40327 :: EXPR :: assign :: null :: PHI v199 = #(0), v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74::CF,40328:DD,39976
40328 :: EXPR :: assign :: null :: PHI v200 = v67, v77, v83, v89, v93, v100, v107, v111, v123, v126, v137, v138, v149, v152, v163, v164, v173, v178, #(null)::CF,39976
40329 :: EXPR :: assign :: null :: PHI v210 = v205, v206::
40332 :: EXPR :: assign :: null :: PHI v227 = v232, v197, v197, v232::DD,40115
40335 :: EXPR :: assign :: null :: PHI v232 = #(0), v228::DD,39412:DD,39453:DD,39490:DD,39499:DD,39571:DD,39588:DD,39657:DD,39721:DD,39790:DD,39852:DD,40117:DD,40325:DD,40332:CF,40116
40660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::CE,40661:CD,40667
40661 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::JM,36315:JM,41491:JM,41492:JM,41497
40664 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,40667
40667 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40661
40711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::CE,40712:CD,40718
40712 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::JM,36335
40715 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,40718
40718 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40712
40720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::CE,40721:CD,40727
40721 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::JM,36355
40724 :: EXPR :: reference :: Z :: v3 = p0 $this .showMenu::DD,40727
40727 :: NORM :: compound :: Z :: return v3::CF,40721
40729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showAlignmentGUI()::CD,40732:CD,40736:CD,40742
40732 :: CALL :: call :: Ljava/lang/Class :: v4 = forName(#(org.biojava.nbio.stru...))::JM,40732
40736 :: CALL :: call :: Ljava/lang/reflect/Method :: v8 = v4.getMethod(#(getInstance), #(null))::
40742 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.invoke(v4, #(null))::
40805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::CE,40806:CD,40812
40806 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::JM,36385
40809 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .showDBresult::DD,40812
40812 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40806
40814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showDBResults(org.biojava.nbio.structure.align.ce.StartupParameters)::CD,40818:CD,40822:CD,40826:CD,40841:CD,40847:CD,40848:CD,40849:CD,40865:CD,40872:CD,40877
40818 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/UserConfiguration :: v4 = fromStartupParams(p1 $params )::CL,46601
40822 :: CALL :: call :: Ljava/lang/Class :: v7 = forName(#(org.biojava.nbio.stru...))::JM,40822:JM,40826
40826 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.newInstance()::JM,40826
40841 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(show), v12)::
40847 :: NORM :: declaration :: [Ljava/lang/Object :: v19 = new java.lang.Object[]::CF,40848
40848 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
40849 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $params .getShowDBresult()::CL,40805
40865 :: CALL :: call :: Ljava/lang/Object :: v25 = v18.invoke(v9, v19)::
40872 :: CALL :: call :: V :: v26.printStackTrace()::
40877 :: CALL :: call :: V :: v28.println(#(Probably structure-gu...))::
40911 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::CE,40912:CD,40918
40912 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::JM,36426
40915 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb1::DD,40918
40918 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40912
40920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::CE,40921:CD,40927
40921 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::JM,36427
40924 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file1::DD,40927
40927 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40921
41471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::CE,41472:CD,41478
41472 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::JM,36439:JM,41634:JM,41628:JM,41629
41475 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .alignPairs::DD,41478
41478 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,41472
41480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runDBSearch()::CD,41487:CD,41491:JM,46768:JM,46721:JM,46740:JM,46725:JM,46773:JM,46742:JM,46793:JM,46747:CD,41554:CD,41561:CD,41607:CD,41615:CD,41620:CD,41624:CD,41628
41487 :: CALL :: call :: Ljava/lang/String :: v5 = v3.getPdbFilePath()::JM,41491:JM,41492:JM,41497:CL,40660
41491 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 21::CD,41492:CD,41497:JM,46674:JM,46681:CD,41502:CD,41508:CD,41513:CD,41518:CD,41523:CD,41527
41492 :: CALL :: call :: Z :: v9 = v5.equals(#())::JM,41492:JM,41497
41497 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 64::JM,46674:JM,46681:CD,41502:CD,41508:CD,41513:CD,41518:CD,41523:CD,41527
41502 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getPdbFilePath()::CL,46703
41508 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
41513 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v16.append(v14)::
41518 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#(.))::
41523 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
41527 :: CALL :: call :: V :: v15.println(v25)::
41554 :: CALL :: call :: Ljava/lang/String :: v38 = v36.getAlignPairs()::JM,41634:JM,41628:JM,41629:CL,41471
41561 :: CALL :: call :: Ljava/lang/String :: v41 = v39.getSearchFile()::CL,41732
41607 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
41615 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v52.append(v55)::
41620 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
41624 :: CALL :: call :: V :: v51.println(v59)::
41628 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 244::CD,41629:CD,41634:CD,41645:CD,41652
41629 :: CALL :: call :: Z :: v62 = v38.equals(#())::JM,41634:JM,41629
41634 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 244::CD,41645:CD,41652
41645 :: CALL :: call :: I :: v65 = v63.getNrCPU()::CL,48527
41652 :: CALL :: call :: V :: p0 $this .runDbSearch(v34, v41, v48, v65, v66)::CL,48536
41732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::CE,41733:CD,41739
41733 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::JM,36451
41736 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .searchFile::DD,41739
41739 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,41733
41902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,41903:CD,41906:CD,41910:CD,41919:CD,41920:CD,41924:CD,41933:CD,41934:CD,41938:CD,41947:CD,41948:CD,41952:CD,41961:CD,41962:CD,41966:CD,41975:CD,41976:CD,41980:CD,41989:CD,41990:CD,41991:CD,41992:CD,41993:CD,41994:CD,41995:CD,41996
41903 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
41906 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,41919
41907 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,41910
41910 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,41915:CD,41991
41912 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,41991
41915 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,41991
41919 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,41920
41920 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,41933
41921 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,41924
41924 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,41929:CD,41992
41926 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,41992
41929 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,41992
41933 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,41934
41934 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,41947
41935 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,41938
41938 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,41943:CD,41993
41940 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,41993
41943 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,41993
41947 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,41948
41948 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,41961
41949 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,41952
41952 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,41957:CD,41994
41954 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,41994
41957 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,41994
41961 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,41962
41962 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,41975
41963 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,41966
41966 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,41971:CD,41995
41968 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,41995
41971 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,41995
41975 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,41976
41976 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,41989
41977 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,41980
41980 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,41985:CD,41996
41982 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,41996
41985 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,41996
41989 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,41990
41990 :: NORM :: compound :: I :: return v48::CF,41903
41991 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,41919
41992 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,41933
41993 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,41947
41994 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,41961
41995 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,41975
41996 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,41989
42161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,42162:CD,42165:CD,42169:CD,42178:CD,42179:CD,42183:CD,42192:CD,42193:CD,42197:CD,42206:CD,42207:CD,42208:CD,42209:CD,42210
42162 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,42464:JM,42465
42165 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42178
42166 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,42169
42169 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42174:CD,42208
42171 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,42208
42174 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42208
42178 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42179
42179 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42192
42180 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,42183
42183 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42188:CD,42209
42185 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,42209
42188 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42209
42192 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42193
42193 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42206
42194 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,42197
42197 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42202:CD,42210
42199 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,42210
42202 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42210
42206 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42207
42207 :: NORM :: compound :: I :: return v27::CF,42162
42208 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42178
42209 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42192
42210 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42206
42276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,42277:CD,42280:CD,42284:CD,42293:CD,42294:CD,42298:CD,42307:CD,42308:CD,42312:CD,42321:CD,42322:CD,42326:CD,42335:CD,42336:CD,42337:CD,42338:CD,42339:CD,42340
42277 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
42280 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,42293
42281 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,42284
42284 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,42288:CD,42337
42285 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,42337
42288 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,42337
42293 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42294
42294 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,42307
42295 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,42298
42298 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,42302:CD,42338
42302 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42338
42307 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42308
42308 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,42321
42309 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,42312
42312 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,42316:CD,42339
42313 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,42339
42316 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42339
42321 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42322
42322 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,42335
42323 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,42326
42326 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,42330:CD,42340
42327 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,42340
42330 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,42340
42335 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,42336
42336 :: NORM :: compound :: I :: return v34::DD,42277
42337 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,42293
42338 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,42307
42339 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,42321
42340 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,42335
42416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,42417:CD,42420:CD,42424:CD,42433:CD,42434:CD,42438:CD,42447:CD,42448:CD,42452:CD,42461:CD,42462:CD,42463:CD,42464:CD,42465
42417 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
42420 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42433
42421 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,42424
42424 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42429:CD,42463
42426 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,42463
42429 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42463
42433 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42434
42434 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42447
42435 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,42438
42438 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42443:CD,42464
42443 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42464:CL,42161
42447 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42448
42448 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42461
42449 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,42452
42452 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42457:CD,42465
42457 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42465:CL,42161
42461 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42462
42462 :: NORM :: compound :: I :: return v27::CF,42417
42463 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42433
42464 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42447
42465 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42461
42492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,42493:CD,42496:CD,42500:CD,42509:CD,42510:CD,42514:CD,42523:CD,42524:CD,42525:CD,42526
42493 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
42496 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,42509
42497 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,42500
42500 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,42504:CD,42525
42501 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,42525
42504 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,42525
42509 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42510
42510 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,42523
42511 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,42514
42514 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,42518:CD,42526
42515 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,42526
42518 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42526
42523 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42524
42524 :: NORM :: compound :: I :: return v20::CF,42493
42525 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,42509
42526 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,42523
42544 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,42545:CD,42548:CD,42552:CD,42561:CD,42562:CD,42566:CD,42575:CD,42576:CD,42580:CD,42589:CD,42590:CD,42594:CD,42603:CD,42604:CD,42608:CD,42617:CD,42618:CD,42622:CD,42631:CD,42632:CD,42636:CD,42645:CD,42646:CD,42650:CD,42659:CD,42660:CD,42664:CD,42673:CD,42674:CD,42678:CD,42687:CD,42688:CD,42692:CD,42701:CD,42702:CD,42706:CD,42715:CD,42716:CD,42720:CD,42729:CD,42730:CD,42734:CD,42743:CD,42744:CD,42748:CD,42757:CD,42758:CD,42762:CD,42771:CD,42772:CD,42776:CD,42785:CD,42786:CD,42787:CD,42788:CD,42789:CD,42790:CD,42791:CD,42792:CD,42793:CD,42794:CD,42795:CD,42796:CD,42797:CD,42798:CD,42799:CD,42800:CD,42801:CD,42802:CD,42803
42545 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
42548 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,42561
42549 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,42552
42552 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,42557:CD,42787
42554 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,42787
42557 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,42787
42561 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,42562
42562 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,42575
42563 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,42566
42566 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,42571:CD,42788
42568 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,42788
42571 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,42788
42575 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,42576
42576 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,42589
42577 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,42580
42580 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,42585:CD,42789
42582 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,42789
42585 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,42789
42589 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,42590
42590 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,42603
42591 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,42594
42594 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,42599:CD,42790
42596 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,42790
42599 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,42790
42603 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,42604
42604 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,42617
42605 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,42608
42608 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,42613:CD,42791
42610 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,42791
42613 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,42791
42617 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,42618
42618 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,42631
42619 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,42622
42622 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,42627:CD,42792
42624 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,42792
42627 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,42792
42631 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,42632
42632 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,42645
42633 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,42636
42636 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,42641:CD,42793
42638 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,42793
42641 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,42793
42645 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,42646
42646 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,42659
42647 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,42650
42650 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,42655:CD,42794
42652 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,42794
42655 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,42794
42659 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,42660
42660 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,42673
42661 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,42664
42664 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,42669:CD,42795
42669 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,42795
42673 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,42674
42674 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,42687
42675 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,42678
42678 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,42683:CD,42796
42680 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,42796
42683 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,42796
42687 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,42688
42688 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,42701
42689 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,42692
42692 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,42697:CD,42797
42694 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,42797
42697 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,42797
42701 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,42702
42702 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,42715
42703 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,42706
42706 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,42711:CD,42798
42708 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,42798
42711 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,42798
42715 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,42716
42716 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,42729
42717 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,42720
42720 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,42725:CD,42799
42722 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,42799
42725 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,42799
42729 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,42730
42730 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,42743
42731 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,42734
42734 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,42739:CD,42800
42736 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,42800
42739 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,42800
42743 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,42744
42744 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,42757
42745 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,42748
42748 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,42753:CD,42801
42750 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,42801
42753 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,42801
42757 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,42758
42758 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,42771
42759 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,42762
42762 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,42767:CD,42802
42764 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,42802
42767 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,42802
42771 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,42772
42772 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,42785
42773 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,42776
42776 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,42781:CD,42803
42778 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,42803
42781 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,42803
42785 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,42786
42786 :: NORM :: compound :: I :: return v125::DD,42545
42787 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,42561
42788 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,42575
42789 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,42589
42790 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,42603
42791 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,42617
42792 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,42631
42793 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,42645
42794 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,42659
42795 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,42673
42796 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,42687
42797 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,42701
42798 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,42715
42799 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,42729
42800 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,42743
42801 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,42757
42802 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,42771
42803 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,42785
43041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,43042:CD,43046:JM,43058:JM,43060:JM,43048:JM,43050:JM,43054
43042 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
43046 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,43047:CD,43048
43047 :: NORM :: compound :: Z :: return #(1)::DD,43042
43048 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,43049:CD,43050:CD,43054:CD,43058:JM,43060:JM,43046:JM,43048
43049 :: NORM :: compound :: Z :: return #(0)::DD,43042
43050 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43058:JM,43060:JM,43046:JM,43048:JM,43050:JM,43054
43054 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43058:JM,43060:JM,43046:JM,43050:JM,43054
43058 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,43059:CD,43060:CD,43064
43059 :: NORM :: compound :: Z :: return #(0)::DD,43042
43060 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43061 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,43064
43064 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,43068:CD,43076:CD,43081
43065 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,43068
43068 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,43069:CD,43086
43069 :: NORM :: compound :: Z :: return #(0)::DD,43042
43070 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,43081
43073 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,43081
43076 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43081
43081 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,43082:CD,43086
43082 :: NORM :: compound :: Z :: return #(0)::DD,43042
43083 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,43086
43086 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,43090:CD,43098:CD,43103
43087 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,43090
43090 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,43091:CD,43108
43091 :: NORM :: compound :: Z :: return #(0)::DD,43042
43092 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,43103
43095 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,43103
43098 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43103
43103 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,43104:CD,43108
43104 :: NORM :: compound :: Z :: return #(0)::DD,43042
43105 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,43108
43108 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,43112:CD,43120:CD,43125
43109 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,43112
43112 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,43113:CD,43130
43113 :: NORM :: compound :: Z :: return #(0)::DD,43042
43114 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,43125
43117 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,43125
43120 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,43125
43125 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,43126:CD,43130
43126 :: NORM :: compound :: Z :: return #(0)::DD,43042
43127 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,43130
43130 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,43134:CD,43142:CD,43147
43131 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,43134
43134 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,43135:CD,43152
43135 :: NORM :: compound :: Z :: return #(0)::DD,43042
43136 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,43147
43139 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,43147
43142 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,43147
43147 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,43148:CD,43152
43148 :: NORM :: compound :: Z :: return #(0)::DD,43042
43149 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,43152
43152 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,43156:CD,43164:CD,43169
43153 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,43156
43156 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,43157:CD,43174
43157 :: NORM :: compound :: Z :: return #(0)::DD,43042
43158 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,43169
43161 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,43169
43164 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,43169
43169 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,43170:CD,43174
43170 :: NORM :: compound :: Z :: return #(0)::DD,43042
43171 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,43174
43174 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,43178:CD,43186:CD,43191
43175 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,43178
43178 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,43179:CD,43196
43179 :: NORM :: compound :: Z :: return #(0)::DD,43042
43180 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,43191
43183 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,43191
43186 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,43191
43191 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,43192:CD,43196
43192 :: NORM :: compound :: Z :: return #(0)::DD,43042
43193 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,43196
43196 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,43200:CD,43208:CD,43213
43197 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,43200
43200 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,43201:CD,43218
43201 :: NORM :: compound :: Z :: return #(0)::DD,43042
43202 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,43213
43205 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,43213
43208 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,43213
43213 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,43214:CD,43218
43214 :: NORM :: compound :: Z :: return #(0)::DD,43042
43215 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,43218
43218 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,43222:CD,43230:CD,43235
43219 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,43222
43222 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,43223:CD,43240
43223 :: NORM :: compound :: Z :: return #(0)::DD,43042
43224 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,43235
43227 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,43235
43230 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,43235
43235 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,43236:CD,43240
43236 :: NORM :: compound :: Z :: return #(0)::DD,43042
43237 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,43240
43240 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,43244:CD,43252:CD,43257
43241 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,43244
43244 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,43245:CD,43262
43245 :: NORM :: compound :: Z :: return #(0)::DD,43042
43252 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,43257
43257 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,43258:CD,43262
43258 :: NORM :: compound :: Z :: return #(0)::DD,43042
43259 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,43262
43262 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,43266:CD,43274:CD,43279
43263 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,43266
43266 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,43267:CD,43284
43267 :: NORM :: compound :: Z :: return #(0)::DD,43042
43268 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,43279
43271 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,43279
43274 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,43279
43279 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,43280:CD,43284
43280 :: NORM :: compound :: Z :: return #(0)::DD,43042
43281 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,43284
43284 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,43288:CD,43296:CD,43301
43285 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,43288
43288 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,43289:CD,43306
43289 :: NORM :: compound :: Z :: return #(0)::DD,43042
43290 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,43301
43293 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,43301
43296 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,43301
43301 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,43302:CD,43306
43302 :: NORM :: compound :: Z :: return #(0)::DD,43042
43303 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,43306
43306 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,43310:CD,43318:CD,43323
43307 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,43310
43310 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,43311:CD,43328
43311 :: NORM :: compound :: Z :: return #(0)::DD,43042
43312 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,43323
43315 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,43323
43318 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,43323
43323 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,43324:CD,43328
43324 :: NORM :: compound :: Z :: return #(0)::DD,43042
43325 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,43328
43328 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,43332:CD,43340:CD,43345
43329 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,43332
43332 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,43333:CD,43350
43333 :: NORM :: compound :: Z :: return #(0)::DD,43042
43334 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,43345
43337 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,43345
43340 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,43345
43345 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,43346:CD,43350
43346 :: NORM :: compound :: Z :: return #(0)::DD,43042
43347 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,43350
43350 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,43354:CD,43362:CD,43367
43351 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,43354
43354 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,43355:CD,43372
43355 :: NORM :: compound :: Z :: return #(0)::DD,43042
43356 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,43367
43359 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,43367
43362 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,43367
43367 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,43368:CD,43372
43368 :: NORM :: compound :: Z :: return #(0)::DD,43042
43369 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,43372
43372 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,43376:CD,43384:CD,43389
43373 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,43376
43376 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,43377:CD,43394
43377 :: NORM :: compound :: Z :: return #(0)::DD,43042
43378 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,43389
43381 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,43389
43384 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,43389
43389 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,43390:CD,43394
43390 :: NORM :: compound :: Z :: return #(0)::DD,43042
43391 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,43394
43394 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,43398:CD,43406:CD,43411
43395 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,43398
43398 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,43399:CD,43416
43399 :: NORM :: compound :: Z :: return #(0)::DD,43042
43400 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,43411
43403 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,43411
43406 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,43411
43411 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,43412:CD,43416
43412 :: NORM :: compound :: Z :: return #(0)::DD,43042
43413 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,43416
43416 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,43420:CD,43428:CD,43433
43417 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,43420
43420 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,43421:CD,43435
43421 :: NORM :: compound :: Z :: return #(0)::DD,43042
43422 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,43433
43425 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,43433
43428 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,43433
43433 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,43434:CD,43435
43434 :: NORM :: compound :: Z :: return #(0)::DD,43042
43435 :: NORM :: compound :: Z :: return #(1)::DD,43042
43601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,43602:CD,43606:JM,43616:JM,43618:JM,43608:JM,43612
43602 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
43606 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,43607:CD,43608:CD,43612:CD,43616:JM,43618:JM,43606
43607 :: NORM :: compound :: Z :: return #(0)::CF,43602
43608 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43616:JM,43618:JM,43606:JM,43608:JM,43612
43612 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43616:JM,43618:JM,43606:JM,43608:JM,43612
43616 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,43617:CD,43618:CD,43622
43617 :: NORM :: compound :: Z :: return #(0)::CF,43602
43618 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43619 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,43622
43622 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,43626:CD,43634:CD,43639
43623 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,43626
43626 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,43640:CD,43644:CD,43663:CD,43664
43628 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,43639
43631 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,43639
43634 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43639
43639 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,43640:CD,43644:CD,43663:CD,43664
43640 :: NORM :: compound :: Z :: return #(0)::CF,43602
43641 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,43644
43644 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,43648:CD,43656:CD,43661
43645 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,43648
43648 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,43664
43650 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,43661
43653 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,43661
43656 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43661
43661 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,43664
43663 :: NORM :: compound :: Z :: return v24::CF,43602
43664 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,43663
43690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,43691:CD,43695:JM,43697:JM,43699:JM,43703:JM,43707:JM,43709
43691 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
43695 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,43696:CD,43697
43696 :: NORM :: compound :: Z :: return #(1)::CF,43691
43697 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,43698:CD,43699:CD,43703:CD,43707:JM,43697:JM,43709:JM,43695
43698 :: NORM :: compound :: Z :: return #(0)::CF,43691
43699 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,43697:JM,43699:JM,43703:JM,43707:JM,43709:JM,43695
43703 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,43699:JM,43703:JM,43707:JM,43709:JM,43695
43707 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,43708:CD,43709:CD,43713
43708 :: NORM :: compound :: Z :: return #(0)::CF,43691
43709 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
43710 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,43713
43713 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,43717:CD,43725:CD,43730
43714 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,43717
43717 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,43718:CD,43735
43718 :: NORM :: compound :: Z :: return #(0)::CF,43691
43719 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,43730
43722 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,43730
43725 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,43730
43730 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,43731:CD,43735
43731 :: NORM :: compound :: Z :: return #(0)::CF,43691
43732 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,43735
43735 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,43739:CD,43747:CD,43752
43736 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,43739
43739 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,43740:CD,43757
43740 :: NORM :: compound :: Z :: return #(0)::CF,43691
43741 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,43752
43744 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,43752
43747 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,43752
43752 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,43753:CD,43757
43753 :: NORM :: compound :: Z :: return #(0)::CF,43691
43754 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,43757
43757 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,43761:CD,43769:CD,43774
43758 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,43761
43761 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,43762:CD,43779
43762 :: NORM :: compound :: Z :: return #(0)::CF,43691
43763 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,43774
43766 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,43774
43769 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,43774
43774 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,43775:CD,43779
43775 :: NORM :: compound :: Z :: return #(0)::CF,43691
43776 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,43779
43779 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,43783:CD,43791:CD,43796
43780 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,43783
43783 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,43784:CD,43801
43784 :: NORM :: compound :: Z :: return #(0)::CF,43691
43785 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,43796
43788 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,43796
43791 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,43796
43796 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,43797:CD,43801
43797 :: NORM :: compound :: Z :: return #(0)::CF,43691
43798 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,43801
43801 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,43805:CD,43813:CD,43818
43802 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,43805
43805 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,43806:CD,43823
43806 :: NORM :: compound :: Z :: return #(0)::CF,43691
43807 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,43818
43810 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,43818
43813 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,43818
43818 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,43819:CD,43823
43819 :: NORM :: compound :: Z :: return #(0)::CF,43691
43820 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,43823
43823 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,43827:CD,43835:CD,43840
43824 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,43827
43827 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,43828:CD,43842
43828 :: NORM :: compound :: Z :: return #(0)::CF,43691
43829 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,43840
43832 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,43840
43835 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,43840
43840 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,43841:CD,43842
43841 :: NORM :: compound :: Z :: return #(0)::CF,43691
43842 :: NORM :: compound :: Z :: return #(1)::CF,43691
44052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,44053:CD,44057:JM,44065:JM,44069:JM,44071:JM,44059:JM,44061
44053 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,44499:JM,44521:JM,83139:JM,137035:JM,140090
44057 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,44058:CD,44059
44058 :: NORM :: compound :: Z :: return #(1)::CF,44053
44059 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,44060:CD,44061:CD,44065:CD,44069:JM,44071:JM,44057:JM,44059
44060 :: NORM :: compound :: Z :: return #(0)::CF,44053
44061 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44065:JM,44069:JM,44071:JM,44057:JM,44059:JM,44061
44065 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44065:JM,44069:JM,44071:JM,44057:JM,44061
44069 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,44070:CD,44071:CD,44075
44070 :: NORM :: compound :: Z :: return #(0)::CF,44053
44071 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44072 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,44075
44075 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,44079:CD,44087:CD,44092
44076 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,44079
44079 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,44080:CD,44097
44080 :: NORM :: compound :: Z :: return #(0)::CF,44053
44081 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,44092
44084 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,44092
44087 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44092
44092 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,44093:CD,44097
44093 :: NORM :: compound :: Z :: return #(0)::CF,44053
44094 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,44097
44097 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,44101:CD,44109:CD,44114
44098 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,44101
44101 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,44102:CD,44119
44102 :: NORM :: compound :: Z :: return #(0)::CF,44053
44103 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,44114
44106 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,44114
44109 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,44114
44114 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,44115:CD,44119
44115 :: NORM :: compound :: Z :: return #(0)::CF,44053
44116 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,44119
44119 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,44123:CD,44131:CD,44136
44120 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,44123
44123 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,44124:CD,44138
44124 :: NORM :: compound :: Z :: return #(0)::CF,44053
44125 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,44136
44128 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,44136
44131 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,44136
44136 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,44137:CD,44138
44137 :: NORM :: compound :: Z :: return #(0)::CF,44053
44138 :: NORM :: compound :: Z :: return #(1)::CF,44053
44294 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,44295:CD,44299:CD,44300:JM,44302
44295 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
44299 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,44300
44300 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,44301:CD,44302:CD,44309
44301 :: NORM :: compound :: Z :: return #(0)::CF,44295
44302 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
44303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,44309
44306 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,44309
44309 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,44310:CD,44311
44310 :: NORM :: compound :: Z :: return #(1)::CF,44295
44311 :: NORM :: compound :: Z :: return #(0)::CF,44295
44437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,44438:CD,44442:JM,44450:JM,44454:JM,44456:JM,44444:JM,44446
44438 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
44442 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,44443:CD,44444
44443 :: NORM :: compound :: Z :: return #(1)::CF,44438
44444 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,44445:CD,44446:CD,44450:CD,44454:JM,44456:JM,44442:JM,44444
44445 :: NORM :: compound :: Z :: return #(0)::CF,44438
44446 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44450:JM,44454:JM,44456:JM,44442:JM,44444:JM,44446
44450 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44450:JM,44454:JM,44456:JM,44442:JM,44446
44454 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,44455:CD,44456:CD,44460
44455 :: NORM :: compound :: Z :: return #(0)::CF,44438
44456 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44457 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,44460
44460 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,44464:CD,44472:CD,44477
44461 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,44464
44464 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,44465:CD,44482
44465 :: NORM :: compound :: Z :: return #(0)::CF,44438
44466 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,44477
44469 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,44477
44472 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44477
44477 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,44478:CD,44482
44478 :: NORM :: compound :: Z :: return #(0)::CF,44438
44479 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,44482
44482 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,44486:CD,44494:CD,44499
44483 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,44486
44486 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,44487:CD,44504
44487 :: NORM :: compound :: Z :: return #(0)::CF,44438
44494 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,44499:CL,44052
44499 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,44500:CD,44504
44500 :: NORM :: compound :: Z :: return #(0)::CF,44438
44501 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,44504
44504 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,44508:CD,44516:CD,44521
44505 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,44508
44508 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,44509:CD,44523
44509 :: NORM :: compound :: Z :: return #(0)::CF,44438
44516 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,44521:CL,44052
44521 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,44522:CD,44523
44522 :: NORM :: compound :: Z :: return #(0)::CF,44438
44523 :: NORM :: compound :: Z :: return #(1)::CF,44438
44563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,44564:CD,44568:JM,44578:JM,44580:JM,44570:JM,44574
44564 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
44568 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,44569:CD,44570:CD,44574:CD,44578:JM,44580:JM,44568
44569 :: NORM :: compound :: Z :: return #(0)::DD,44564
44570 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,44578:JM,44580:JM,44568:JM,44570:JM,44574
44574 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,44578:JM,44580:JM,44568:JM,44570:JM,44574
44578 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,44579:CD,44580:CD,44584
44579 :: NORM :: compound :: Z :: return #(0)::DD,44564
44580 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
44581 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,44584
44584 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,44588:CD,44596:CD,44601
44585 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,44588
44588 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,44602:CD,44609
44590 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,44601
44593 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,44601
44596 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,44601
44601 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,44602:CD,44609
44602 :: NORM :: compound :: Z :: return #(0)::DD,44564
44603 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,44609
44606 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,44609
44609 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,44613:CD,44630
44610 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,44613
44613 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,44620:CD,44625:CD,44626
44620 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,44625
44625 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,44626:CD,44630
44626 :: NORM :: compound :: Z :: return #(0)::DD,44564
44627 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,44630
44630 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,44634:CD,44642:CD,44647
44631 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,44634
44634 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,44648:CD,44652
44636 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,44647
44639 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,44647
44642 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,44647
44647 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,44648:CD,44652
44648 :: NORM :: compound :: Z :: return #(0)::DD,44564
44649 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,44652
44652 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,44656:CD,44664:CD,44669
44653 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,44656
44656 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,44670:CD,44671
44658 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,44669
44661 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,44669
44664 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,44669
44669 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,44670:CD,44671
44670 :: NORM :: compound :: Z :: return #(0)::DD,44564
44671 :: NORM :: compound :: Z :: return #(1)::DD,44564
44854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,44855:CD,44857:CD,44859:CD,44860:CD,44868
44855 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,37050:JM,37136
44857 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,44859
44859 :: EXPR :: assign :: I :: v4 = v2.length::DD,44860
44860 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,44868
44868 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,44855
45154 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,45158
45158 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
45162 :: CALL :: call :: V :: v7.printStackTrace()::
45738 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,45739:CD,45742:CD,45746:CD,45750:CD,45754
45739 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,37758
45742 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,50122
45746 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,45750:JM,45754:CL,50180
45750 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,45750:JM,45754
45754 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,45739
45760 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,45763:CD,45765
45763 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,45765
45765 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,46674:JM,46681:CD,45770:CD,45771:CD,45779
45770 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,45779
45771 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,50229
45779 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
45789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,45790:CD,45792:CD,45794:CD,45795:CD,45803
45790 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,37898
45792 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,45794
45794 :: EXPR :: assign :: I :: v4 = v2.length::DD,45795
45795 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,45803
45803 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,45790
45825 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,50351
45829 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,50351
45833 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,50351
45837 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,50351
45841 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,50351
45845 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,50351
45873 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,50351
45877 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,50351
45881 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,50351
45885 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,50351
46392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toIntArray(java.util.Collection)::CD,46401:CD,46420:CD,46424
46401 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,46424
46407 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,46424
46420 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,46424
46424 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,46407:CD,46420
46441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toDoubleArray(java.util.Collection)::CD,46450:CD,46469:CD,46473
46450 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,46473
46456 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,46473
46469 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,46473
46473 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,46456:CD,46469
46601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.fromStartupParams(org.biojava.nbio.structure.align.ce.StartupParameters)::JM,46674:JM,46681
46674 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,50981
46681 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,51307
46703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,46704:CD,46710
46704 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,50324
46707 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,46710
46710 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46704
46721 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,46747:JM,46725:JM,46729
46725 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,46725:JM,46729
46729 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
46740 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,46747
46742 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,46747
46747 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,46748:CD,46749:CD,46757:CD,46759:CD,46764
46748 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
46749 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
46757 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
46759 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
46764 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
46768 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
46773 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,51743
46790 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
46793 :: CALL :: call :: V :: v34.clear()::
48527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getNrCPU()::CE,48528:CD,48534
48528 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.ce.StartupParameters.getNrCPU()::
48531 :: EXPR :: reference :: I :: v3 = p0 $this .nrCPU::DD,48534
48534 :: NORM :: compound :: I :: return v3::CF,48528
48536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runDbSearch(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String,int,org.biojava.nbio.structure.align.ce.StartupParameters)::CD,48547:CD,48552:CD,48557:CD,48562:CD,48566:JM,50304:JM,45825:JM,45841:JM,50260:JM,50324:JM,45829:JM,45845:JM,50246:JM,50310:JM,50296:JM,45833:JM,45837:CD,48574:CD,48600:CD,48609:JM,54400:JM,46721:JM,46725:JM,54438:JM,46793:JM,54414:JM,46768:JM,46674:JM,46740:JM,46773:JM,46742:JM,46681:JM,46747:CD,48631
48547 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
48552 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p4 $useNrCPUs )::
48557 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#( CPUs.))::
48562 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
48566 :: CALL :: call :: V :: v8.println(v18)::
48574 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v24 = v20.getStructure(p2 $searchFile )::CL,54351
48600 :: NORM :: declaration :: Ljava/io/File :: v35 = new java.io.File::
48609 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/MultiThreadedDBSearch :: v40 = new org.biojava.nbio.structure.align.MultiThreadedDBSearch::
48631 :: CALL :: call :: V :: v40.run()::CL,54504
50122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,50126:CD,50127:CD,50136:CD,50153:CD,50157:CD,50158
50126 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,50157:CF,50127
50127 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
50136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
50141 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,50157
50146 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
50148 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
50153 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,50157
50157 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,50141:CD,50146:CD,50148:CD,50153
50158 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
50180 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,50181:CD,50184:CD,50190:CD,50194:CD,50198:CD,50199:CD,50207:CD,50212:CD,50213
50181 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,45750:JM,45754
50184 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,50194:JM,50212:JM,50190:JM,50207
50190 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,50194:JM,50212:JM,50190:JM,50207
50194 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,50194:JM,50212:JM,50207
50198 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,50212:JM,50207:JM,50184
50199 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,50184
50207 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,50212:JM,50207
50212 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,50213
50213 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,50181
50229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,50230:CD,50236
50230 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
50233 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,50236
50236 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,50230
50246 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,50260
50260 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,46674:JM,46681:CD,50265:CD,50281:CD,50324
50265 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,50324:CL,46703
50281 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,50324:CL,56924
50296 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,50260
50304 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,56989
50310 :: CALL :: call :: V :: p0 $this .initPaths()::CL,57086
50324 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,50296:JM,50260
50351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,50359
50356 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
50359 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
50981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,50985:CD,50989:CD,51180:CD,51182:CD,51187:CD,51209
50985 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,50994:JM,50998:JM,50985:JM,51209:JM,50989
50989 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,50990:CD,50994:CD,50998:CD,51060:CD,51063:CD,51068:JM,51209
50990 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,50994:JM,50998:JM,51209
50994 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,50994:JM,50998
50998 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,51007:CD,51012:CD,51016:CD,51060:CD,51063:CD,51068
51007 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
51012 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,51016
51016 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,51041:CD,51046:CD,51050:CD,51209
51041 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,51041:JM,51209
51046 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,51050
51050 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,51209
51060 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
51063 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,51068
51068 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,51069:CD,51074:CD,51075:CD,51079:CD,51083:CD,51151:CD,51175:CD,51209
51069 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,51074
51074 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,51079:JM,51083
51075 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,51079:JM,51083
51079 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,51079:JM,51083
51083 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,51084:CD,51089:CD,51098:CD,51103:CD,51107:CD,51151:CD,51175:CD,51209
51084 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,51089
51089 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,51209
51098 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
51103 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,51107
51107 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,51132:CD,51137:CD,51141:CD,51209
51132 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,51209:JM,51132
51137 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,51141
51141 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,51209
51151 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,51209:JM,51151
51175 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
51180 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,51187
51182 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,51187
51187 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,51188:CD,51189:CD,51197:CD,51199:CD,51204
51188 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
51189 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
51197 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
51199 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
51204 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
51209 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,51187
51307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,51311:CD,51315:CD,51576:CD,51578:CD,51583:CD,51605
51311 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,51315:JM,51605:JM,51311
51315 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,51324:CD,51329:CD,51333:CD,51402:CD,51405:CD,51410
51324 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
51329 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,51333
51333 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,51358:CD,51363:CD,51367:CD,51605
51358 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,51605:JM,51358
51363 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,51367
51367 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,51605:CD,51392:CD,51396
51392 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,51392:JM,51605
51396 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
51402 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
51405 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,51410
51410 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,51498:CD,51411:CD,51416:CD,51425:CD,51430:CD,51434:CD,51506:CD,51510
51411 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,51416
51416 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,51605
51425 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
51430 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,51434
51434 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,51459:CD,51464:CD,51468:CD,51605
51459 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,51459:JM,51605
51464 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,51468
51468 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,51605:CD,51493
51493 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,51493:JM,51605
51498 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
51499 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
51506 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,51510
51510 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,51534:CD,51540:CD,51571:CD,51605
51511 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,51605
51534 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
51540 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,51540:JM,51605
51571 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
51576 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,51583
51578 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,51583
51583 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,51584:CD,51585:CD,51593:CD,51595:CD,51600
51584 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
51585 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
51593 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
51595 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
51600 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
51605 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,51583
51743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,51748
51748 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,56924
51939 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.io.File)::CD,51953
51953 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,58003
52093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getPath()::CE,52094:CD,52100
52094 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.AtomCache.getPath()::
52097 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .path::DD,52100
52100 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,52094
52102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,52103:CD,52106:CD,52111
52103 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,102880:JM,103016:JM,120781:JM,120934:JM,121141:JM,121287:JM,126647:JM,127758
52106 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,52111:CL,58116
52111 :: NORM :: compound :: Ljava/util/List :: return v5::DD,52103
54351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.lang.String)::CD,54356:CD,54360:CD,54365
54356 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $filename )::CL,56924
54360 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
54365 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v6)::CL,51939
54400 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = new java.util.concurrent.atomic.AtomicBoolean::DD,54405
54405 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .interrupted = v10::
54414 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .outFile = p3 $outFile ::
54435 :: EXPR :: reference :: Ljava/util/SortedSet :: v16 = p0 $this .representatives::DD,54438
54438 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 107::CD,54439
54439 :: CALL :: call :: Ljava/util/SortedSet :: v20 = getRepresentatives(v15, #(40))::CL,64411
54504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.MultiThreadedDBSearch.run()::CD,54508:CD,54514:CD,54518
54508 :: CALL :: call :: V :: p0 $this .checkLocalFiles()::CL,64545
54511 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v5 = p0 $this .interrupted::JM,54518
54514 :: CALL :: call :: Z :: v7 = v5.get()::JM,54518
54518 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 17::CF,54520:CD,54528:CD,54532:CD,54537:CD,54552
54520 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
54528 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getAlgorithmName()::CL,39156
54532 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v9.append(v14)::
54537 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
54552 :: NORM :: declaration :: Ljava/io/File :: v24 = new java.io.File::
54553 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .outFile::
56924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,56925:CD,56928:CD,56933:CD,56935:CD,56940:CD,56944:CD,56949:CD,56977:CD,56978
56925 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,50324
56928 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,56949
56933 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,56949
56935 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,56949
56940 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,56949
56944 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,56978:JM,56949
56949 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,56978:CF,56950:CD,56955:CD,56963:CD,56968:CD,56973
56950 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,56978
56955 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
56963 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,56978:JM,56949
56968 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,56978
56973 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,56978
56977 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,56925
56978 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,56977
56989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,56992:CD,56996
56992 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,56992:JM,57025:JM,56996:JM,57001:JM,57019:JM,57005
56996 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,56997:CD,57001:CD,57005:JM,57025:JM,57019
56997 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,57025:JM,57001:JM,57019:JM,57005
57001 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,57025:JM,57001:JM,57019:JM,57005
57005 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,57014:CD,57019:JM,57025:JM,57001:JM,57005
57014 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,57025:JM,57001:JM,57019:JM,57005
57019 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,57020:CD,57025:JM,57001:JM,57019:JM,57005
57020 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,57025:JM,57001:JM,57019:JM,57005
57025 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,57034:CD,57039:CD,57044
57034 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
57039 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,57025:JM,57001:JM,57019:JM,57005
57044 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,57001:JM,57005
57086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,57090:CD,57094:CD,57098:CD,57119:CD,57120:CD,57121:CD,57142:CD,57143:CD,57144:CD,57151:CD,57182:CD,57183:CD,57208:CD,57209:CD,57211:CD,57212:CD,57213:CD,57214
57090 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,57182:JM,57119:CL,67005:CL,67013
57094 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,57142:JM,57208:CL,67021:CL,67029
57098 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
57104 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
57109 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
57113 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
57118 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,57211
57119 :: EXPR :: assign :: I :: v11 = v4.length::CF,57120
57120 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,57121:CD,57104:CD,57113:CD,57118:CD,57119:CD,57211
57121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
57127 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
57132 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
57136 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
57141 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,57212
57142 :: EXPR :: assign :: I :: v23 = v6.length::CF,57143
57143 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,57127:CD,57136:CD,57141:CD,57142:CD,57212
57144 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
57151 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
57158 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,57161
57161 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
57165 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,57178
57166 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
57169 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
57178 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
57181 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,57213
57182 :: EXPR :: assign :: I :: v36 = v4.length::CF,57183
57183 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,57165:CD,57181:CD,57182:CD,57213
57184 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,57187
57187 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
57191 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,57204
57192 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
57195 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
57204 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
57207 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,57214
57208 :: EXPR :: assign :: I :: v44 = v6.length::CF,57209
57209 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,57191:CD,57207:CD,57208:CD,57214
57211 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,57118:DD,57120:CF,57119
57212 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,57141:DD,57143:CF,57142
57213 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,57181:DD,57183:CF,57182
57214 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,57207:DD,57209:CF,57208
58003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,67843:JM,67908:JM,76103:JM,67878:JM,67942:JM,67850:JM,67885:JM,67949:JM,67857:JM,68016:JM,67956:JM,76087:JM,67864:JM,76120:JM,67836:JM,67871:JM,67935:JM,76095:JM,76127:JM,67966:CD,58020
58020 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,68135
58071 :: CALL :: call :: V :: p0 $this .init()::CL,68156
58116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,58117:CD,58124:CD,58129:CD,58130
58117 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,52111:JM,108233:JM,121494:JM,121600:JM,123139:JM,123321:JM,123409:JM,138112
58121 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,58129
58124 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,58129
58129 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,58130
58130 :: NORM :: compound :: Ljava/util/List :: return v7::DD,58117
58133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,58134:CD,58140
58134 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,103876:JM,115800:JM,115727:JM,121136:JM,121019:JM,121282:JM,123243:JM,123310:JM,133090:JM,137065:JM,137720:JM,137771:JM,137741:JM,143664
58137 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,58140
58140 :: NORM :: compound :: Ljava/util/List :: return v3::CF,58134
58210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,58211:CD,58214:CD,58216
58211 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,60132:JM,60127:JM,97641:JM,97646:JM,143651:JM,143658:JM,148100:JM,148105:JM,148112:JM,148117:JM,150741:JM,150746:JM,150768:JM,150773:JM,155312:JM,155317:JM,155329:JM,155324
58214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,58216
58216 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,58211
58218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,58219:CD,58222:CD,58224
58219 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,60132:JM,60127:JM,97641:JM,97646:JM,143651:JM,143658:JM,148100:JM,148105:JM,148112:JM,148117:JM,150741:JM,150746:JM,150768:JM,150773:JM,155312:JM,155317:JM,155329:JM,155324
58222 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,58224
58224 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,58219
58226 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,58227:CD,58230:CD,58232
58227 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,60132:JM,60127:JM,97641:JM,97646:JM,143651:JM,143658:JM,148100:JM,148105:JM,148112:JM,148117:JM,150741:JM,150746:JM,150768:JM,150773:JM,155312:JM,155317:JM,155329:JM,155324
58230 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,58232
58232 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,58227
58234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,58235:CD,58242:JM,58281
58235 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,83667:JM,104306:JM,104312:JM,104318:JM,104324:JM,140293
58239 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,58242
58242 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,58246:CD,58250:CD,58255:CD,58256:CD,58262:CD,58283:CD,58287
58246 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,58281
58250 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,58255
58255 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,58256
58256 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,58257:CD,58258
58257 :: NORM :: compound :: Z :: return #(1)::DD,58235
58258 :: NORM :: compound :: Z :: return #(0)::DD,58235
58259 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,58287
58262 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,58287
58267 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,58287
58272 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,58281:CL,68780
58276 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,58281
58281 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,58282:CD,58283:CD,58287
58282 :: NORM :: compound :: Z :: return #(1)::DD,58235
58283 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,58287
58287 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,58267:CD,58272:CD,58276:CD,58281:CD,58288:JM,58287
58288 :: NORM :: compound :: Z :: return #(0)::DD,58235
58309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,58310:CD,58317:JM,58350
58310 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,103829:JM,103857:JM,119948:JM,121109:JM,121110:JM,133772:JM,133784:JM,133796:JM,133808
58314 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,58317
58317 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,58321:CD,58326:CD,58327:CD,58331:CD,58352:CD,58356
58321 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,58326
58326 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,58327
58327 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,58310
58328 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,58340:JM,58356
58331 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,58340:JM,58356
58336 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,58340:JM,58356
58340 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,58351
58341 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,58350:CL,68780
58345 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,58350
58350 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,58351:CD,58352:CD,58356:JM,58340
58351 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,58310
58352 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,58340:JM,58356
58356 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,58336:CD,58340:CD,58341:CD,58345:CD,58350:CD,58357:JM,58356
58357 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,58310
58373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,58374:CD,58380
58374 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,115761
58377 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,58380
58380 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,58374
58663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,58664:CD,58670
58664 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,97628:JM,97926:JM,132126:JM,132302:JM,138486:JM,138491:JM,144469:JM,147975:JM,148029:JM,147976:JM,152648:JM,152653:JM,155222:JM,155159:JM,155236:JM,155160
58667 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,58670
58670 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,58664
58672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,58673:CD,58678:CD,58683:CD,58684
58673 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,68836:JM,68797:JM,139747:JM,142187
58678 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,58683
58683 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,58684
58684 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,58673
60092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,60093:CD,60099
60093 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,83243:JM,140209
60096 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,60099
60099 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,60093
60101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,60102:CD,60106:CD,60113:CD,60138:CD,60142:CD,60143:JM,60132:JM,60127
60102 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,119347:JM,119348:JM,119415:JM,132537:JM,144589:JM,157618:JM,157523:JM,157525:JM,157557:JM,157549:JM,157550:JM,157533:JM,157629:JM,157522:JM,157521
60106 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,60143
60110 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,60122:JM,60142
60113 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,60122:JM,60142
60118 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,60122:JM,60142
60122 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
60123 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,60132:JM,60127:CL,58210:CL,58226:CL,58218
60127 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,60132:JM,60127
60132 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,60133:JM,60122:JM,60142
60133 :: CALL :: call :: Z :: v20 = v4.add(v14)::
60138 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,60122:JM,60142
60142 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,60118:CD,60122:CD,60123:CD,60127:CD,60132:CD,60138:JM,60142:CF,60143
60143 :: NORM :: compound :: Ljava/util/List :: return v4::DD,60102
64411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.getRepresentatives(java.lang.String,int)::CD,64416:CD,64420:CD,64421:CD,64429:CD,64434:CD,64438:CD,64439:CD,64443:CD,64451:CD,64458:CD,64463:CD,64468:CD,64481:CD,64486:CD,64491:CD,64506:CD,64507
64416 :: NORM :: declaration :: Ljava/util/TreeSet :: v4 = new java.util.TreeSet::
64420 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
64421 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(p1 $serverLocation )::
64429 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v6.append(#(representatives?clust...))::
64434 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
64438 :: PRED :: IF :: Z :: if (p2 $cutoff  >= #(20)) goto 37::CF,64506
64439 :: CALL :: call :: I :: v19 = getTimeout()::CL,71766
64443 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v17)::
64451 :: CALL :: call :: Ljava/lang/String :: v26 = format(v14, v21)::
64458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
64463 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v26)::
64468 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
64481 :: CALL :: call :: Ljava/io/InputStream :: v39 = getInputStream(v36, v19)::JM,64486:CL,71799
64486 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 122::CF,64507:CD,64487
64487 :: CALL :: call :: Ljava/lang/String :: v46 = convertStreamToString(v39)::JM,64507:CL,71814
64491 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 150::CD,64492
64492 :: CALL :: call :: Ljava/util/SortedSet :: v49 = fromXML(v47)::CL,71922
64506 :: EXPR :: assign :: null :: PHI v17 = p2 $cutoff , #(40)::
64507 :: EXPR :: assign :: null :: PHI v47 = #(null), v46::DD,64491
64545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.MultiThreadedDBSearch.checkLocalFiles()::CD,64563:CD,64567:CD,64575:CD,64591:CD,64607:CD,64613:CD,64676:CD,64680
64563 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
64567 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getPath()::CL,52093
64575 :: CALL :: call :: Z :: v15 = v9.isDirectory()::
64591 :: CALL :: call :: Z :: v23 = v9.canWrite()::
64607 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/DomainProvider :: v30 = getDomainProvider()::JM,64681:CL,64957
64610 :: EXPR :: reference :: Ljava/util/SortedSet :: v31 = p0 $this .representatives::JM,64680
64613 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,64680
64618 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,64680
64623 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v39 = p0 $this .interrupted::JM,64630
64626 :: CALL :: call :: Z :: v41 = v39.get()::JM,64630
64630 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 118::CD,64635:CD,64676:CD,64680
64632 :: EXPR :: reference :: Z :: v42 = p0 $this .domainSplit::DD,64635
64635 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 201::CD,64636:CD,64641:CD,64672
64636 :: CALL :: call :: Ljava/util/SortedSet :: v44 = v30.getDomainNames(v38)::JM,64641:JM,64646:JM,64670:CL,64978
64641 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 150::CD,64642:CD,64646:CD,64647:JM,64670
64642 :: CALL :: call :: I :: v47 = v44.size()::JM,64646:JM,64670
64646 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 158::CD,64647:CD,64652:CD,64666:CD,64670:JM,64646
64647 :: CALL :: call :: V :: p0 $this .checkFile(v38)::CL,72039
64652 :: CALL :: call :: Ljava/util/Iterator :: v50 = v44.iterator()::JM,64646:JM,64670
64657 :: CALL :: call :: Ljava/lang/Object :: v54 = v50.next()::JM,64670
64662 :: CALL :: call :: V :: p0 $this .checkFile(v55)::CL,72039
64666 :: CALL :: call :: Z :: v52 = v50.hasNext()::JM,64670
64670 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 170::CD,64657:CD,64662:CD,64666:JM,64670
64672 :: CALL :: call :: V :: p0 $this .checkFile(v38)::CL,72039
64676 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,64680
64680 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 97::CD,64618:CD,64626:CD,64630:CD,64681:CD,64682:JM,64680
64681 :: EXPR :: assign :: Z :: v58=v30 INSTANCEOF org.biojava.nbio.structure.domain.RemoteDomainProvider::DD,64682
64682 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 230::CD,64684
64684 :: CALL :: call :: V :: v59.flushCache()::CL,65295
64957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.DomainProviderFactory.getDomainProvider()::CE,64958:CD,64960:CD,64962:CD,64970:CD,64972
64958 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/DomainProvider :: org.biojava.nbio.structure.domain.DomainProviderFactory.getDomainProvider()::JM,64681
64960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/domain/DomainProvider :: v2 = org.biojava.nbio.structure.domain.DomainProviderFactory.domainProvider::DD,64962
64962 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 17::CF,64963:JM,81187:JM,72359:JM,80909:JM,72367:CD,64968
64963 :: NORM :: declaration :: Lorg/biojava/nbio/structure/domain/RemoteDomainProvider :: v4 = new org.biojava.nbio.structure.domain.RemoteDomainProvider::DD,64968
64968 :: EXPR :: modify :: Lorg/biojava/nbio/structure/domain/DomainProvider :: org.biojava.nbio.structure.domain.DomainProviderFactory.domainProvider = v4::
64970 :: EXPR :: reference :: Lorg/biojava/nbio/structure/domain/DomainProvider :: v7 = org.biojava.nbio.structure.domain.DomainProviderFactory.domainProvider::CF,64972
64972 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/DomainProvider :: return v7::DD,64958
64978 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.getDomainNames(java.lang.String)::CE,64979:CD,64988:CD,64997
64979 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.domain.RemoteDomainProvider.getDomainNames(java.lang.String)::JM,64641:JM,64646:JM,64670
64988 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v59 = new java.lang.IllegalArgumentException::
64994 :: EXPR :: reference :: Ljava/util/Map :: v7 = p0 $this .serializedCache::DD,64997
64997 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 52::CD,65001:CD,65006:JM,58071:CD,65025:CD,65029:CD,65034:CD,65038
65001 :: CALL :: call :: Z :: v11 = v9.containsKey(p1 $name )::JM,65006
65006 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 52::CD,65010:CD,65015:CD,65016:JM,58071:CD,65025:CD,65029:CD,65034:CD,65038
65010 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(p1 $name )::JM,65015
65015 :: EXPR :: assign :: Ljava/lang/Object :: v58 = CHECKCAST v57::CF,65016
65016 :: NORM :: compound :: Ljava/util/SortedSet :: return v58::DD,64979
65025 :: CALL :: call :: Ljava/lang/String :: v17 = v13.getPdbId()::CL,72394
65029 :: CALL :: call :: Ljava/util/List :: v19 = v15.getDomainsForPDB(v17)::JM,65043:JM,65116:JM,65038:CL,72422:CL,72532
65034 :: CALL :: call :: Ljava/lang/String :: v21 = v13.getChainId()::JM,65078:CL,72679
65038 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 96::CD,65039:CD,65043:CD,65044:CD,65049:CD,65054:JM,65116
65039 :: CALL :: call :: I :: v23 = v19.size()::JM,65043:JM,65116
65043 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 111::CF,65055:CD,65044:CD,65049:CD,65054:CD,65059:CD,65112:CD,65116:CD,65117:CD,65122
65044 :: CALL :: call :: Ljava/util/SortedSet :: v53 = p0 $this .getPDPDomains(v13)::JM,65054:CL,72688
65049 :: CALL :: call :: V :: p0 $this .cache(p1 $name , v53)::CL,72822
65054 :: NORM :: compound :: Ljava/util/SortedSet :: return v53::DD,64979
65055 :: NORM :: declaration :: Ljava/util/TreeSet :: v24 = new java.util.TreeSet::DD,65122
65059 :: CALL :: call :: Ljava/util/Iterator :: v27 = v19.iterator()::JM,65043:JM,65116
65064 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,65116
65078 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 180::CD,65083:CD,65089:CD,65093:CD,65097:CD,65102
65083 :: CALL :: call :: Z :: v46 = v24.add(v44)::
65089 :: CALL :: call :: Ljava/lang/String :: v38 = v33.getChainId()::JM,65102:CL,72679
65093 :: CALL :: call :: Ljava/lang/String :: v40 = v13.getChainId()::JM,65102:CL,72679
65097 :: CALL :: call :: Z :: v42 = v38.equalsIgnoreCase(v40)::JM,65102
65102 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 208::CD,65107:JM,65116
65107 :: CALL :: call :: Z :: v50 = v24.add(v48)::
65112 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,65116
65116 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 133::CD,65064:JM,58071:CD,65078:CD,65112:JM,65116
65117 :: CALL :: call :: V :: p0 $this .cache(p1 $name , v24)::CL,72822
65122 :: NORM :: compound :: Ljava/util/SortedSet :: return v24::DD,64979
65295 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.flushCache()::CD,65299:CD,65305:CD,65306
65299 :: CALL :: call :: V :: p0 $this .flushCache()::CL,73040
65302 :: EXPR :: reference :: Lorg/biojava/nbio/structure/domain/PDPProvider :: v4 = p0 $this .pdp::DD,65305
65305 :: EXPR :: assign :: Z :: v5=v4 INSTANCEOF org.biojava.nbio.structure.domain.RemotePDPProvider::DD,65306
65306 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 26::CD,65311
65311 :: CALL :: call :: V :: v8.flushCache()::CL,73040
67005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,67006:CD,67009:CD,67011
67006 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,57182:JM,57119
67009 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,67011
67011 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,67006
67013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,67014:CD,67017:CD,67019
67014 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,57182:JM,57119
67017 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,67019
67019 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,67014
67021 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,67022:CD,67025:CD,67027
67022 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,57142:JM,57208
67025 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,67027
67027 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,67022
67029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,67030:CD,67033:CD,67035
67030 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,57142:JM,57208
67033 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,67035
67035 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,67030
67381 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,67384
67380 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,67381:CD,67384:JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67385 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
67384 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,67385:JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67389 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67395 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,67654:CD,67396:CD,67397:CD,67402
67394 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,67653
67397 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67396 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67402 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,67394:CD,67395:CD,67653:CD,67654
67405 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,67406:CD,67411:JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67404 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,67654
67406 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67411 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,67404:CD,67405:CD,67654:JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67412 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67421 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,67655:CD,67422
67423 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67422 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,67655
67427 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,67656:CD,67428:CD,67433:JM,67427:JM,67653:JM,67462:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67428 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67433 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,67656
67435 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,67436:CD,67442:CD,67446:CD,67451:CD,67454:CD,67455:CD,67657:CD,67658:CD,67659:JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67421
67436 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67442 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,67659:JM,67451
67446 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67466:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421:JM,67659
67451 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,67658:CD,67452:CD,67659
67452 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,67658
67455 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,67658:CD,67456:CD,67659
67454 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,67657
67457 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67456 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,67658:CD,67457:CD,67462:CD,67659:JM,67427:JM,67653:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67462 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,67658:CD,67435
67467 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,67471:CD,67476:CD,67477:CD,67484:CD,67494:CD,67660:CD,67661:CD,67662
67466 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,67662:CD,67467
67468 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,67476
67471 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,67476
67477 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,67660
67476 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,67662:CD,67477:CD,67484:CD,67494:CD,67660:CD,67661
67478 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,67660
67481 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,67484
67485 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,67488:JM,67493
67484 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,67661:CD,67488:CD,67493
67488 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,67488:JM,67493
67493 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,67661
67494 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,67662
67541 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
67542 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
67547 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67552 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,67603:JM,67602
67561 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,67664:CD,67565
67565 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,67664
67571 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
67570 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
67576 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
67579 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
67584 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
67593 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
67596 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67603 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,67411:JM,67427:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67451:JM,67435:JM,67402:JM,67421:JM,67660:JM,67662:JM,67477:JM,67380
67602 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,67603:CD,67604
67604 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,67427:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67660:JM,67662:JM,67411:JM,67603:JM,67602:JM,67477:JM,67380:JM,67451:JM,67421
67641 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
67640 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
67653 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,67394:DD,67395:DD,67396:DD,67405:DD,67456:JM,67411:JM,67427:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67421
67655 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,67427:JM,67411:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67451:JM,67435:JM,67402:JM,67421:DD,67657:DD,67658:JM,67660:JM,67662:JM,67477:JM,67380
67654 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,67404:DD,67405:JM,67411:JM,67427:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67451:JM,67435:JM,67402:JM,67421:DD,67422:DD,67655
67657 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,67411:JM,67427:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67421:DD,67452:DD,67454:DD,67456:JM,67451:CF,67455
67656 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,67455
67659 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,67467:JM,67476:DD,67661
67658 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,67659:JM,67411:JM,67427:JM,67603:JM,67602:JM,67653:JM,67462:JM,67433:JM,67435:JM,67402:JM,67421
67661 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,67494
67660 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,67662
67662 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,67561:DD,67664
67664 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,67593
67836 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67843 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67850 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67857 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67864 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67871 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67878 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67885 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67908 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67935 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67942 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67949 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67956 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
67966 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
68016 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
68135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,68140:CD,68145
68140 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,76181
68145 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,76211
68156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,68163:CD,68172:CD,68173:CD,68222:CD,68223:CD,68228:CD,68233:CD,68252:CD,68253:CD,68258:CD,68263:CD,68279:CD,68280:CD,68285:CD,68290:CD,68309:CD,68310:CD,68315:CD,68320:CD,68336:CD,68337:CD,68342:CD,68347:CD,68363:CD,68364:CD,68369:CD,68374:CD,68404:CD,68405:CD,68410:CD,68415:CD,68425:CD,68426:CD,68434:CD,68439
68163 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,68172
68173 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,68182:CD,68186:CD,68200:CD,68451:CD,68456
68172 :: EXPR :: assign :: I :: v9 = v7.length::DD,68173
68174 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,68389
68182 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
68186 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,68190:CL,76996
68190 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
68197 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,68200
68201 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,77009
68200 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,68201:CD,68207:CD,68215:CD,68451:CD,68456
68204 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
68207 :: CALL :: call :: I :: v81 = v79.ordinal()::
68211 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,68215
68215 :: PRED :: IF :: null :: switch v82::CD,68216:CD,68246:CD,68273:CD,68303:CD,68330:CD,68357:CD,68384:CD,68389:CD,68398
68216 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,77152
68223 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
68222 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v169 = new java.lang.IllegalArgumentException::
68228 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
68233 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
68246 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,77211
68253 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
68252 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v158 = new java.lang.IllegalArgumentException::
68258 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
68263 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
68273 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,77263
68279 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v146 = new java.lang.IllegalArgumentException::
68280 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
68285 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
68290 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
68303 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,77322
68309 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
68310 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
68315 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
68320 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
68330 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,77363
68337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
68336 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v123 = new java.lang.IllegalArgumentException::
68342 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
68347 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
68357 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,77416
68363 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v112 = new java.lang.IllegalArgumentException::
68364 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
68369 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
68374 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
68384 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,68389
68389 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,68398
68398 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,77521
68405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
68404 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v99 = new java.lang.IllegalArgumentException::
68410 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
68415 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
68425 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v83 = new java.lang.IllegalStateException::
68426 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
68434 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
68439 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
68451 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,68456:CL,77152
68456 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,68461:CD,68466
68461 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,68466:CL,77263
68466 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,68471:CD,68476
68471 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,68476:CL,77363
68476 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,68481:CD,68486
68481 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,68486:CL,77521
68486 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,68488:CD,68492:CD,68500:CD,68504
68488 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,68529:JM,68572
68492 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::CL,56924
68500 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,68504
68505 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,68509
68504 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,68505:CD,68509:CD,68605
68509 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,68513:CD,68518:CD,68605
68513 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,68518
68518 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,68529:CD,68533:CD,68572:CD,68576
68529 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,68529
68533 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
68572 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,68572
68576 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
68605 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,77416
68781 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,58281:JM,58350:JM,115754
68780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,68781:CD,68787
68784 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,68787
68787 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,68781
68789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,68790:CD,68793:CD,68797:CD,68834:CD,68836
68790 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,83033:JM,87036
68793 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,68836:JM,68797:CL,58672
68797 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,68836:CD,68798:CD,68802:CD,68806
68798 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
68802 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,68806:CL,79020
68806 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,68809:CD,68814:CD,68815:CD,68824:CD,68830:CD,68835:CD,68836
68809 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,68814
68815 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,68835:CD,68818:CD,68823
68814 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,68815:DD,68835
68818 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,68823
68823 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,68835
68825 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,68836
68824 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,68836:CD,68825
68830 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,68836
68835 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,68824:DD,68836
68834 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,68790
68836 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,68834
69593 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,69594:CD,69598:JM,80578:JM,80581:JM,80575:CD,69604:CD,69623:CD,69624:CD,69628:JM,69621
69594 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,116000:JM,116155
69598 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,69624
69604 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,80594
69610 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
69614 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,69625
69616 :: EXPR :: modify :: D :: v9[v15] = v12::
69621 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,69614:CD,69620:CD,69625:CD,69626:CD,69627:CF,69622
69620 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,69627:CF,69626
69623 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,69621:CD,69622:CD,69626:CD,69627:CD,69628:CF,69624
69622 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,69628
69625 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,69616
69624 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,69594
69627 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,69614:DD,69620:DD,69621
69626 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,69627:DD,69614:DD,69622:DD,69626
69628 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,69623:DD,69626
70357 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,93549:JM,120738:JM,120743:JM,120891:JM,120896:JM,121024:JM,123234:JM,123262
70356 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,70357:CD,70363
70360 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,70363
70363 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,70357
70365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,70366:CD,70369:CD,70376:CD,70380:CD,70388:CD,70409:CD,70413
70366 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,93686:JM,104085:JM,104145:JM,133104
70369 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,70413
70376 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
70380 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
70385 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,70388
70389 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,70396
70388 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,70392:CD,70396:JM,70413
70392 :: CALL :: call :: C :: v14 = v12.charValue()::JM,70396
70397 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
70396 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,70400:CD,70404:JM,70413
70400 :: CALL :: call :: C :: v18 = v16.charValue()::
70404 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
70409 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,70413
70413 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,70366
70427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,70428:CD,70434
70428 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,82868:JM,82905:JM,93018:JM,97485:JM,104053:JM,104113:JM,119182:JM,123166:JM,123385:JM,132897:JM,136701:JM,136752:JM,139888:JM,139893:JM,139929
70431 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,70434
70434 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,70428
70475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,70476:CD,70486
70476 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,80520
70479 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
70482 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,70486
70486 :: NORM :: compound :: D :: return v5::CF,70476
70489 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,70490:CD,70500
70490 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,80529
70493 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
70496 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,70500
70500 :: NORM :: compound :: D :: return v5::CF,70490
70503 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,70504:CD,70514
70504 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,80538
70507 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
70510 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,70514
70514 :: NORM :: compound :: D :: return v5::CF,70504
71766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.getTimeout()::CD,71771:CD,71776
71771 :: CALL :: call :: Ljava/lang/String :: v5 = v2.getString(#(connection.timeout))::CL,37269
71776 :: CALL :: call :: I :: v8 = parseInt(v5)::
71799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,int)::CE,71800:CD,71804:CD,71810
71800 :: EXIT :: exit :: Ljava/io/InputStream :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,int)::JM,64486
71804 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), p2 $timeout )::JM,71810:CL,80669
71810 :: NORM :: compound :: Ljava/io/InputStream :: return v6::DD,71800
71815 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,64507:JM,72594:JM,72598:JM,81459:JM,122592:JM,122596
71814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,71815:CD,71818:CD,71819:CD,71828:CD,71845:CD,71849:CD,71893:CD,71897
71819 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
71818 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,71849:CF,71819
71828 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,71897
71833 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,71849
71838 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
71840 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
71845 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,71849
71849 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,71833:CD,71838:CD,71840:CD,71845
71893 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,71897
71897 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,71815
71922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.xml.RepresentativeXMLConverter.fromXML(java.lang.String)::CD,71926:CD,71930:CD,71933:CD,71937:CD,71941:CD,71950:CD,71962:CD,71992:CD,71996:CD,71998:CD,72003
71926 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::
71930 :: CALL :: call :: Ljavax/xml/parsers/DocumentBuilderFactory :: v6 = newInstance()::JM,71992:JM,71962:JM,71933:JM,71996:JM,71950
71933 :: CALL :: call :: Ljavax/xml/parsers/DocumentBuilder :: v8 = v6.newDocumentBuilder()::JM,71992:JM,71962:JM,71933:JM,71996:JM,71950
71937 :: NORM :: declaration :: Lorg/xml/sax/InputSource :: v9 = new org.xml.sax.InputSource::JM,71992:JM,71962:JM,71996:JM,71950
71941 :: NORM :: declaration :: Ljava/io/StringReader :: v11 = new java.io.StringReader::
71950 :: CALL :: call :: Lorg/w3c/dom/Document :: v15 = v8.parse(v9)::JM,71992:JM,71962:JM,71996:JM,71950
71962 :: CALL :: call :: Lorg/w3c/dom/NodeList :: v21 = v15.getElementsByTagName(#(pdbChain))::JM,71992:JM,71962:JM,71996
71986 :: CALL :: call :: Z :: v35 = v3.add(v33)::
71991 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v38 + #(1)::DD,72003
71992 :: CALL :: call :: I :: v24 = v21.getLength()::JM,71992:JM,71996
71996 :: PRED :: IF :: Z :: if (v38 < v24) goto 80::CD,71986:CD,71991:CD,71992:CD,72003
71998 :: CALL :: call :: V :: v39.printStackTrace()::
72003 :: EXPR :: assign :: null :: PHI v38 = #(0), v37::DD,71991:DD,71996:JM,71992
72039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.MultiThreadedDBSearch.checkFile(java.lang.String)::JM,58071:JM,50304:JM,45825:JM,45841:JM,50260:JM,50324:JM,45829:JM,45845:JM,50246:JM,50310:JM,50296:JM,45833:JM,45837:CD,72066:CD,72081:CD,72085
72066 :: CALL :: call :: V :: v6.setPath(v12)::CL,80747
72081 :: CALL :: call :: Ljava/lang/String :: v19 = v4.getPdbId()::CL,72394
72085 :: CALL :: call :: V :: v6.prefetchStructure(v19)::CL,80792
72359 :: PRED :: IF :: Z :: if (p1 $cache  != #(0)) goto 25::CD,72364
72364 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomainAssignments()::CL,80932
72367 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v11 = getSCOP()::CL,81162
72394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getPdbId()::CD,72401
72398 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,72401
72401 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 19::CD,72402
72402 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v6 = p0 $this .toCanonical()::CL,81204
72423 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,65043:JM,65116:JM,65038:JM,90178:JM,90079:JM,105330:JM,105346:JM,105319
72422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,72423:CD,72427:CD,72440:CD,72444:CD,72449:CD,72450:CD,72454:CD,72477:CD,72478:CD,72483:CD,72488:CD,72493:CD,72510
72427 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,81227
72440 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
72444 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,72449
72449 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,72454:JM,72507:CF,72450
72450 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,72455:DD,72508
72455 :: NORM :: compound :: Ljava/util/List :: return v14::DD,72423
72454 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,72455:CD,72456:CD,72503:CD,72507:CD,72508
72456 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,72507
72461 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,72507
72466 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,72470:CL,81279
72471 :: CALL :: call :: Z :: v29 = v14.add(v27)::
72470 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
72477 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
72478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
72483 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
72488 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
72493 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
72503 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,72507
72507 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,72461:CD,72466:CD,72470:CD,72471:CD,72503:JM,72507:CF,72508
72508 :: NORM :: compound :: Ljava/util/List :: return v14::DD,72423
72510 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
72533 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,65043:JM,65116:JM,65038:JM,90178:JM,90079
72532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,72533:CD,72538:CD,72542:CD,72550:CD,72555:CD,72560:CD,72565:CD,72569:CD,72574:CD,72582:CD,72586:CD,72590:CD,72594:CD,72598:CD,72608:CD,72609:CD,72617:CD,72622:CD,72627:CD,72632:CD,72637:CD,72641:CD,72646:CD,72656:CD,72657:CD,72658
72538 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
72542 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
72550 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
72555 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
72560 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
72565 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,81417
72569 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
72574 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
72582 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,81527
72586 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,72594:JM,72598:CL,71814
72590 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,72594:JM,72598
72594 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,72594:JM,72598
72599 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,72658:JM,72603:CL,81541
72598 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,72658:CD,72599:CD,72603
72603 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,72658:JM,72603
72609 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
72608 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
72614 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
72617 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
72622 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
72627 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
72632 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
72637 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,81417
72641 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
72646 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
72657 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
72656 :: NORM :: compound :: Ljava/util/List :: return v60::DD,72533
72658 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,72656
72679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainId()::CE,72680:CD,72686
72680 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.StructureName.getChainId()::JM,65078:JM,65102:JM,72728:JM,72748
72683 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,72686
72686 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,72680
72689 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.domain.RemoteDomainProvider.getPDPDomains(org.biojava.nbio.structure.align.client.StructureName)::JM,65054
72688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.getPDPDomains(org.biojava.nbio.structure.align.client.StructureName)::CE,72689:CD,72696:CD,72700:CD,72705:CD,72709:CD,72713:CD,72754:CD,72758:CD,72761:CD,72765:CD,72770:CD,72775:CD,72780:CD,72788
72696 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $n .getPdbId()::CL,72394
72700 :: CALL :: call :: Ljava/util/SortedSet :: v8 = v4.getPDPDomainNamesForPDB(v6)::JM,72754:JM,72758:JM,72713:CL,81607
72705 :: NORM :: declaration :: Ljava/util/TreeSet :: v9 = new java.util.TreeSet::DD,72788
72709 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $n .getChainId()::JM,72728:CL,72679
72713 :: CALL :: call :: Ljava/util/Iterator :: v14 = v8.iterator()::JM,72754:JM,72758:JM,72713
72729 :: CALL :: call :: Z :: v31 = v9.add(v20)::
72728 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 81::CD,72729:CD,72735:CD,72739:CD,72743:CD,72748
72735 :: CALL :: call :: Ljava/lang/String :: v25 = v21.getChainId()::JM,72748:CL,72679
72739 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $n .getChainId()::JM,72748:CL,72679
72743 :: CALL :: call :: Z :: v29 = v25.equals(v27)::JM,72748
72749 :: CALL :: call :: Z :: v33 = v9.add(v20)::
72748 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 105::CD,72749:JM,72754:JM,72758
72754 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,72754:JM,72758
72758 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::JM,58071:CD,72728:CD,72754
72761 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
72765 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(p1 $n )::
72770 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#( got PDP domains: ))::
72775 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v41.append(v9)::
72780 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
72788 :: NORM :: compound :: Ljava/util/SortedSet :: return v9::DD,72689
72822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,72828
72828 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,72833
72830 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,72833
72833 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,72845:CD,72854:CD,72858:CD,72862:CD,72863
72845 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
72851 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,72862
72854 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,72862
72858 :: CALL :: call :: I :: v17 = v15.size()::JM,72862
72863 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,72864
72862 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,72863
72864 :: CALL :: call :: V :: p0 $this .flushCache()::CL,73040:CL,65295
72885 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,105340
72884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,72885:CD,72891
72888 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,72891
72891 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,72885
73040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,73047
73044 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,73047
73047 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,73053:CD,73062:CD,73070:CD,73074
73053 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,81892
73062 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
73067 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
73070 :: CALL :: call :: V :: v10.writeObject(v12)::
73074 :: CALL :: call :: V :: v10.close()::
75800 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
75811 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,67664
75814 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,75821
75816 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,75821:JM,76001:JM,75925:JM,75828:JM,75972:JM,75995:JM,75962:JM,75998
75821 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,75822:DD,75995:DD,76003
75823 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,75825
75822 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,76003:CD,75823:CD,75825:CD,75833:CD,75955:CD,75957:CD,75962:CD,75963:CD,75991:CD,75995:CD,75996:CD,76000
75825 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,75995:CD,75826:CD,75828:CD,75996
75826 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,75828:JM,75995
75828 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,75828:JM,75995:JM,76001:JM,75925:JM,75972:JM,75962:JM,75821:JM,75998
75833 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,76000:CD,75840:CD,75844:CD,75845:CD,75864:CD,75865:CD,75873:CD,75878:CD,75882:CD,75946:CD,75999
75840 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,75844
75845 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,75846:CD,75847:CD,75855:CD,75860
75844 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,75845
75847 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
75846 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
75855 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
75860 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
75865 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
75864 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
75873 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
75878 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
75882 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,75951
75889 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
75893 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
75897 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,75925:JM,75998
75898 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
75906 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,75925:JM,75998
75911 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,75925:JM,75998:JM,76001:JM,75828:JM,75972:JM,75995:JM,75962:JM,75821
75916 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,76001:JM,75925:JM,75962:JM,75998
75921 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,75925:JM,75998
75925 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,75925:JM,75998
75930 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,75998
75934 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,75998:JM,75925
75939 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,75999:CD,75940:CD,75944
75940 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,75940:JM,75944
75944 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,75999
75947 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,75951
75946 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,76000:CD,75947:CD,75951
75951 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,76000:CD,75889:CD,75893:CD,75897:CD,75898:CD,75906:CD,75911:CD,75916:CD,75921:CD,75925:CD,75939:CD,75946:CD,75998:CD,75999
75955 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,75962
75957 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,75962:JM,76001:JM,75925:JM,75828:JM,75972:JM,75995:JM,75821:JM,75998
75963 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,75965:CD,75966:CD,75977:CD,75978:CD,75991:CD,76001:CD,76002:CD,76003
75962 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,75963:DD,75965:DD,76001
75965 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,75811
75967 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,75969
75966 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,76001:CD,75967:CD,75969
75969 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,76001:CD,75970:CD,75972
75970 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,76001:JM,75972
75972 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,76001:JM,75972:JM,75925:JM,75828:JM,75995:JM,75962:JM,75821:JM,75998
75977 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,76002
75979 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
75978 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,75979:CD,75981
75981 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,76001:JM,75925:JM,75828:JM,75972:JM,75995:JM,75962:JM,75821:JM,75998
75991 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,75811
75995 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,75996:DD,75833:DD,75999:DD,76000
75996 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,75966:CF,75833
75999 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,75946:DD,75999:DD,76000
75998 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,75939:JM,75940:JM,75944
76001 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,75977:DD,76002
76000 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,76002
76003 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,75991
76002 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,75978:JM,76001:JM,75925:JM,75995:JM,75962:JM,75821:JM,75998:DD,76003
76087 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,76092
76092 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
76095 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,76100
76100 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
76103 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,76111
76111 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
76114 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
76117 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
76120 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,76124
76124 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
76127 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,76131
76131 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
76181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,76187:CD,76193:CD,76194
76187 :: NORM :: declaration :: Ljava/io/IOException :: v9 = new java.io.IOException::
76193 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,76194
76194 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
76211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,82757:JM,76103:JM,82729:JM,82764:JM,82736:JM,82771:JM,82743:JM,76087:JM,76120:JM,82719:JM,76095:JM,76127:JM,82750:CD,76243:CD,76250:CD,76257:CD,76277:CD,76299:CD,76305:CD,76320:CD,76326:CD,76332:CD,76338:CD,76350:CD,76360:CD,76711:CD,76715:CD,76722:CD,76727:CD,76733:CD,76737:CD,76744:CD,76748:CD,76755:CD,76759:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76243 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
76250 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
76257 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
76277 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
76296 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
76299 :: CALL :: call :: V :: v24.clear()::
76302 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
76305 :: CALL :: call :: V :: v26.clear()::
76317 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
76320 :: CALL :: call :: V :: v30.clear()::
76323 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
76326 :: CALL :: call :: V :: v32.clear()::
76329 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
76332 :: CALL :: call :: V :: v34.clear()::
76335 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
76338 :: CALL :: call :: V :: v36.clear()::
76350 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
76357 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
76360 :: CALL :: call :: V :: v40.clear()::
76374 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76379 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,76380:CD,76382:CD,76387:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76380 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76382 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76387 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,76389:CD,76394:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76389 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76395 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76394 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,76395:CD,76400:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76400 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,76402:CD,76406:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76470:JM,76665:JM,76540
76402 :: CALL :: call :: I :: v60 = v46.length()::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76406 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,76409:CD,76414:CD,76419:CD,76424:CD,76433:CD,76439:CD,76443:CD,76448:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76409 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
76414 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76419 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76424 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76433 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76439 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76443 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76449 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,82807
76448 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,76449:CD,76454:CD,76459:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76454 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76459 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,76460:CD,76465:CD,76470:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76566:JM,76665:JM,76632:JM,76540
76460 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,84006
76465 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76471 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,82807
76470 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,76471:CD,76476:CD,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76476 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76481 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,76482:CD,76487:CD,76492:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76482 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,84270
76487 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76493 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,84386
76492 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,76493:CD,76498:CD,76503:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76498 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76503 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,76504:CD,76509:CD,76514:JM,76481:JM,76577:JM,76448:JM,76643:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76504 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,84642
76509 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76515 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,84713
76514 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,76515:CD,76520:CD,76525:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76520 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76525 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,76529:CD,76535:CD,76540:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632
76526 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
76529 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76535 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76541 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
76540 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,76544:CD,76550:CD,76555:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76544 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76550 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76555 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,76556:CD,76561:CD,76566:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76665:JM,76632:JM,76540
76556 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,84863
76561 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76567 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,84948
76566 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,76567:CD,76572:CD,76577:JM,76481:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76572 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76577 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,76578:CD,76583:CD,76588:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76578 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,85027
76583 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76589 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,85381
76588 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,76589:CD,76594:CD,76599:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76594 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76599 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,76600:CD,76605:CD,76610:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76600 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,85735
76605 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76611 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,86060
76610 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,76611:CD,76616:CD,76621:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76616 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76621 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,76622:CD,76627:CD,76632:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76540
76622 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,86423
76627 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76633 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,86518
76632 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,76633:CD,76638:CD,76643:JM,76481:JM,76577:JM,76448:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76638 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76643 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,76644:CD,76649:CD,76654:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76644 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,86843
76649 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76655 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,87447
76654 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,76655:CD,76660:CD,76665:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76632:JM,76540
76660 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76665 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,76666:CD,76674:CD,76678
76666 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,87747
76674 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,76678:CL,88003
76679 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76678 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,76679:CD,76684:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540:JM,76379:JM,76387:JM,76715:JM,76394:JM,76400:JM,76406
76685 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,88012
76684 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,76685:CD,76690:CD,76695:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76690 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76695 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,76696:CD,76701:CD,76706:JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76696 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,88238
76701 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,76481:JM,76577:JM,76448:JM,76643:JM,76514:JM,76610:JM,76706:JM,76459:JM,76555:JM,76525:JM,76621:JM,76492:JM,76588:JM,76684:JM,76654:JM,76503:JM,76599:JM,76695:JM,76470:JM,76566:JM,76665:JM,76632:JM,76540
76707 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,88464
76706 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,76707:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76711 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76379:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76715 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,76374:CD,76379:CD,76711:JM,76481:JM,76610:JM,76555:JM,76621:JM,76492:JM,76684:JM,76503:JM,76695:JM,76566:JM,76632:JM,76577:JM,76448:JM,76387:JM,76643:JM,76514:JM,76706:JM,76715:JM,76459:JM,76394:JM,76525:JM,76588:JM,76654:JM,76400:JM,76599:JM,76406:JM,76470:JM,76665:JM,76540
76722 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,88690
76727 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,88826
76733 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,76737:CL,89293
76737 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,76738
76738 :: CALL :: call :: V :: p0 $this .formBonds()::CL,89302
76744 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,76748:CL,89366
76749 :: CALL :: call :: V :: p0 $this .addCharges()::CL,89375
76748 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,76749
76755 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,76759:CL,88003
76759 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,76763:CD,76767
76763 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,76767:CL,89387
76767 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,76768
76768 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,89396
76997 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,68190
76996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,76997:CD,77001:CD,77006:CD,77007
77001 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,77006
77007 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,76997
77006 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,77007
77009 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,77010:CD,77012:CD,77014
77010 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
77012 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,77014:DD,77015
77015 :: NORM :: compound :: [I :: return v2::DD,77010
77014 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,77015:CD,77016:CD,77019:CD,77020:CD,77021:CD,77023:CD,77032:CD,77034:CD,77043:CD,77045:CD,77054:CD,77056:CD,77065:CD,77067:CD,77076:CD,77078:CD,77087:CD,77089:CD,77098:CD,77100:CD,77111
77016 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,77019:CL,89509
77019 :: EXPR :: assign :: I :: v6 = v5.length::CF,77020
77021 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
77020 :: NORM :: declaration :: [I :: v7 = new []::DD,77111
77023 :: CALL :: call :: I :: v10 = v8.ordinal()::
77027 :: EXPR :: modify :: I :: v7[v10] = #(8)::
77032 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
77034 :: CALL :: call :: I :: v16 = v14.ordinal()::
77038 :: EXPR :: modify :: I :: v7[v16] = #(4)::
77043 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
77045 :: CALL :: call :: I :: v22 = v20.ordinal()::
77049 :: EXPR :: modify :: I :: v7[v22] = #(7)::
77054 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
77056 :: CALL :: call :: I :: v28 = v26.ordinal()::
77060 :: EXPR :: modify :: I :: v7[v28] = #(6)::
77065 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
77067 :: CALL :: call :: I :: v34 = v32.ordinal()::
77071 :: EXPR :: modify :: I :: v7[v34] = #(1)::
77076 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
77078 :: CALL :: call :: I :: v40 = v38.ordinal()::
77082 :: EXPR :: modify :: I :: v7[v40] = #(3)::
77087 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
77089 :: CALL :: call :: I :: v46 = v44.ordinal()::
77093 :: EXPR :: modify :: I :: v7[v46] = #(2)::
77098 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
77100 :: CALL :: call :: I :: v52 = v50.ordinal()::
77104 :: EXPR :: modify :: I :: v7[v52] = #(5)::
77111 :: NORM :: compound :: [I :: return v7::DD,77010
77153 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,68456
77152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,77153:CD,77159:CD,77164:CD,77168
77159 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,77168
77164 :: CALL :: call :: Z :: v8 = v6.matches()::JM,77168
77168 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,77174:CD,77179:CD,77186:CD,77194:CD,77195
77174 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,77168
77179 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
77186 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,77168
77195 :: NORM :: compound :: Z :: return #(0)::DD,77153
77194 :: NORM :: compound :: Z :: return #(1)::DD,77153
77211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,77218:CD,77223:CD,77227
77218 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,77227
77223 :: CALL :: call :: Z :: v8 = v6.matches()::JM,77227
77227 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,77228:CD,77233:CD,77240:JM,77227
77228 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,77227
77233 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
77240 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,77227
77263 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,77264:CD,77270:CD,77275:CD,77279
77264 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,68466
77270 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,77279
77275 :: CALL :: call :: Z :: v8 = v6.matches()::JM,77279
77279 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,77285:CD,77290:CD,77297:CD,77305:CD,77306
77285 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,77279
77290 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
77297 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,77279
77305 :: NORM :: compound :: Z :: return #(1)::DD,77264
77306 :: NORM :: compound :: Z :: return #(0)::DD,77264
77322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,77329:CD,77334:CD,77338
77329 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,77338
77334 :: CALL :: call :: Z :: v8 = v6.matches()::JM,77338
77339 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,77338
77338 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,77339:CD,77344:JM,77338
77344 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
77363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,77364:CD,77370:CD,77375:CD,77379
77364 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,68476
77370 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,77379
77375 :: CALL :: call :: Z :: v8 = v6.matches()::JM,77379
77379 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,77385:CD,77390:CD,77400:CD,77401
77385 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,77379
77390 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
77401 :: NORM :: compound :: Z :: return #(0)::DD,77364
77400 :: NORM :: compound :: Z :: return #(1)::DD,77364
77416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::JM,89665:JM,89666:JM,89590:JM,89622:JM,89608:JM,89626:JM,89581:JM,89596:CD,77441:CD,77445:CD,77449
77441 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,77449:CL,89723
77445 :: CALL :: call :: I :: v12 = v10.size()::JM,77449
77449 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,77450:CD,77454:JM,77449
77450 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,77449
77454 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::
77521 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,77522:CD,77551:CD,77561:CD,77562
77522 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,68486
77551 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::CL,89779
77561 :: NORM :: compound :: Z :: return #(1)::DD,77522
77562 :: NORM :: compound :: Z :: return #(0)::DD,77522
77616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,77623:CD,77671:CD,77679:CD,77684:CD,77814:CD,77822:CD,77827:CD,77850:CD,77858:CD,77863:CD,77891:CD,77899:CD,77904:CD,77939:CD,77940:CD,77948:CD,77953
77620 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,77623
77623 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,77624:CD,77630:CD,77638
77624 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,77009
77627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
77630 :: CALL :: call :: I :: v9 = v7.ordinal()::
77634 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,77638
77639 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,89814
77638 :: PRED :: IF :: null :: switch v10::CD,77639:CD,77646:CD,77655:CD,77661:CD,77698:CD,77701:CD,77712:CD,77771:CD,77787:CD,77792:CD,77797:CD,77801:JM,81187:JM,80909:CD,77881:JM,90946:JM,90965:JM,90951:JM,90970:JM,90941:JM,90957:JM,89665:JM,89666:JM,89590:JM,89622:JM,89608:JM,89626:JM,89581:JM,89596
77646 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::CL,89833
77655 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,89865
77661 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::CL,89876
77671 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
77676 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
77679 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
77684 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
77698 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,81162
77701 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,77706:CL,90002
77706 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
77709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,77712
77713 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,77721
77712 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,77716:CD,77721
77716 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,77721
77721 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::JM,89665:JM,89666:JM,89590:JM,89622:JM,89608:JM,89626:JM,89581:JM,89596:CD,77741:JM,90518:JM,90524:JM,90527
77741 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,90403
77771 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
77787 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,56924
77792 :: NORM :: declaration :: Ljava/io/File :: v72 = new java.io.File::
77797 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
77801 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
77814 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
77819 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
77822 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
77827 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
77850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
77855 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
77858 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
77863 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
77881 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::CL,90675
77891 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
77896 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
77899 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
77904 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
77939 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v11 = new java.lang.IllegalStateException::
77940 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
77948 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
77953 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
79021 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,68806:JM,97573:JM,142217:JM,152389:JM,152431
79020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,79021:CD,79024:CD,79030:CD,79035
79024 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
79030 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,79035
79035 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,79038:CD,79043:CD,79045
79038 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,79043
79043 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,79044:CD,79045
79045 :: NORM :: compound :: Z :: return #(1)::DD,79021
79044 :: NORM :: compound :: Z :: return #(0)::DD,79021
79057 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,97950:JM,136903:JM,137705:JM,152677
79056 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,79057:CD,79060:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,79068:CD,79075:CD,79083:CD,79090:CD,79113:CD,79117:CD,79121:CD,79152:CD,79160
79060 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,79160
79068 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,94172
79075 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,94183
79083 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,94194
79087 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,79117
79090 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,79117
79095 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,79117
79100 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,94225
79105 :: CALL :: call :: V :: v3.addAtom(v24)::CL,94344
79109 :: CALL :: call :: V :: v24.setGroup(v3)::CL,94525
79113 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,79117
79117 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,79095:CD,79100:CD,79105:CD,79109:CD,79113:JM,79117
79118 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,79121
79121 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,79125:CD,79144:CD,79148
79122 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,79148
79125 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,79148
79130 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,79148
79135 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,79373:CL,79198:CL,79056
79140 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,94536
79144 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,79148
79149 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,79152
79148 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,79130:CD,79135:CD,79140:CD,79144:JM,79148
79152 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,79156:CF,79160
79156 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,94568
79160 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,79057
79199 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,97950:JM,136903:JM,137705:JM,152677
79198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,79199:CD,79202:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,79210:CD,79218:CD,79226:CD,79234:CD,79241:CD,79248:CD,79271:CD,79275:CD,79276:CD,79280:CD,79321:CD,79329
79202 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,79329
79210 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,94172
79218 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,94183
79226 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,94598
79234 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,94618
79241 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,94629
79245 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,79275
79248 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,79275
79253 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,79275
79258 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,94225
79263 :: CALL :: call :: V :: v3.addAtom(v30)::CL,94344
79267 :: CALL :: call :: V :: v30.setGroup(v3)::CL,94525
79271 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,79275
79275 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,79253:CD,79258:CD,79263:CD,79267:CD,79271:JM,79275
79276 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,79280:CL,94640
79281 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,79289:CL,94640
79280 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,79281:CD,79285:CD,79289
79285 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,79289
79289 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,79290:CD,79294:CD,79313:CD,79317
79290 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,79317:CL,94640
79294 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,79317
79299 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,79317
79304 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,79373:CL,79198:CL,79056
79309 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,94536
79313 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,79317
79317 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,79299:CD,79304:CD,79309:CD,79313:JM,79317
79318 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,79321
79321 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,79325:CF,79329
79325 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,94568
79329 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,79199
79373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,79374:CD,79377:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,79385:CD,79393:CD,79401:CD,79408:CD,79431:CD,79435:CD,79436:CD,79440:CD,79481:CD,79489
79374 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,97950:JM,136903:JM,137705:JM,152677
79377 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,79489
79385 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,94172
79393 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,94183
79401 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,94194
79405 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,79435
79408 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,79435
79413 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,79435
79418 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,94225
79423 :: CALL :: call :: V :: v3.addAtom(v25)::CL,94344
79427 :: CALL :: call :: V :: v25.setGroup(v3)::CL,94525
79431 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,79435
79435 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,79413:CD,79418:CD,79423:CD,79427:CD,79431:JM,79435
79436 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,79440:CL,94640
79441 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,79449:CL,94640
79440 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,79441:CD,79445:CD,79449
79445 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,79449
79449 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,79450:CD,79454:CD,79473:CD,79477
79450 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,79477:CL,94640
79454 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,79477
79459 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,79477
79464 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,79373:CL,79198:CL,79056
79469 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,94536
79473 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,79477
79477 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,79459:CD,79464:CD,79469:CD,79473:JM,79477
79478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,79481
79481 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,79485:CF,79489
79485 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,94568
79489 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,79374
79755 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,94365
79754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,79755:CD,79761
79758 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,79761
79761 :: NORM :: compound :: [D :: return v3::CF,79755
79986 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
79989 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,79991
79991 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
79995 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
79994 :: NORM :: declaration :: [D :: v7 = new []::DD,79995
79998 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
80001 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
80004 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
80007 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
80010 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
80013 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
80036 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,80044
80041 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
80044 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
80052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,80060
80057 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
80060 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
80068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,80076
80073 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
80076 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
80507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,80508:CD,80512:CD,80516:CD,80520:CD,80521:CD,80525:CD,80529:CD,80530:CD,80534:CD,80538:CD,80539:CD,80540:CD,80541:CD,80542:CD,80543:CD,80544:CD,80548
80508 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,120761:JM,120914
80512 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,80520:CL,70475
80516 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,80520:CL,70475
80521 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,80529:CL,70489
80520 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,80539
80525 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,80529:CL,70489
80529 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,80540
80530 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,80538:CL,70503
80534 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,80538:CL,70503
80539 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,80541:CF,80540
80538 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,80542:CF,80539
80541 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,80543:CF,80542
80540 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,80541
80543 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,80544:JM,80548
80542 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,80543
80544 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,80544:JM,80548
80548 :: NORM :: compound :: D :: return v25::CF,80508
80575 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
80578 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
80581 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,80582
80582 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
80595 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
80594 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,80595:CD,80601
80598 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,80601
80601 :: NORM :: compound :: [[D :: return v3::CF,80595
80669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CE,80670:CD,80675:CD,80690:CD,80694:CD,80698:CD,80710:CD,80711
80670 :: EXIT :: exit :: Ljava/io/InputStream :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::JM,71810
80675 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::JM,80704:JM,80690:JM,80711:JM,80694:JM,80699:JM,80698:CL,95258
80690 :: CALL :: call :: Ljava/lang/String :: v15 = v7.getContentEncoding()::JM,80704:JM,80690:JM,80711:JM,80694:JM,80699:JM,80698
80694 :: CALL :: call :: Ljava/io/InputStream :: v17 = v7.getInputStream()::JM,80704:JM,80690:JM,80711:JM,80694:JM,80699:JM,80698
80699 :: CALL :: call :: Z :: v19 = v15.contains(#(gzip))::JM,80704:JM,80711:JM,80699
80698 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 67::CF,80711:CD,80699:CD,80704
80705 :: NORM :: declaration :: Ljava/util/zip/GZIPInputStream :: v20 = new java.util.zip.GZIPInputStream::DD,80711
80704 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 67::CF,80711:CF,80705
80711 :: EXPR :: assign :: null :: PHI v22 = v17, v17, v20::CF,80710
80710 :: NORM :: compound :: Ljava/io/InputStream :: return v22::DD,80670
80747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.setPath(java.lang.String)::CD,80752:CD,80753:CD,80764
80753 :: CALL :: call :: Ljava/lang/String :: v6 = expandUserHome(p1 $p )::CL,56924
80752 :: NORM :: declaration :: Ljava/io/File :: v4 = new java.io.File::
80764 :: CALL :: call :: V :: p0 $this .initPaths()::CL,57086
80792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.prefetchStructure(java.lang.String)::CD,80802:CD,80803:CD,80808:CD,80813:CD,80822:CD,80827:CD,80832:CD,80833:CD,80838:CD,80843:CD,80848
80803 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
80802 :: NORM :: declaration :: Ljava/io/IOException :: v24 = new java.io.IOException::
80808 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $pdbId )::
80813 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
80822 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,95424
80827 :: CALL :: call :: Z :: v10 = v8.exists()::
80833 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
80832 :: NORM :: declaration :: Ljava/io/IOException :: v12 = new java.io.IOException::
80838 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $pdbId )::
80843 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( not found and unable...))::
80848 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
80909 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,80910
80910 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,95679
80932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.loadRepresentativeDomainAssignments()::CD,80937:CD,80941:CD,80949:CD,80954:CD,80969:CD,80973:CD,80977:CD,80981:CD,80987:CD,80991:CD,81000:CD,81004:CD,81051:CD,81055:CD,81059:CD,81067:CD,81072:CD,81081:CD,81082:CD,81090:CD,81095:CD,81106
80937 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
80941 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
80949 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativeDomains))::
80954 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
80969 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,81527
80973 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,71814
80977 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,81009:JM,80981:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055:CL,95875
80981 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,81009:JM,80981:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055
80987 :: CALL :: call :: I :: v30 = v26.size()::JM,81009:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055
80991 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,81009:JM,81013:JM,81019:JM,81051:JM,81004:JM,81055
81000 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,81009:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055
81004 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,81009:JM,81013:JM,81019:JM,81051:JM,81004:JM,81055
81009 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,81009:JM,81013:JM,81051:JM,81055
81013 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,81009:JM,81013:JM,81014:JM,81019:JM,81051:JM,81004:JM,81055:JM,81000:JM,80987
81014 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,81009:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055
81019 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,81029:JM,81020
81020 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,81029:JM,81020
81025 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
81029 :: EXPR :: assign :: I :: v52 = v49.length::DD,81041
81035 :: CALL :: call :: Z :: v55 = v50.add(v53)::
81041 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,81035:CD,81040:CD,81107
81040 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,81107
81045 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
81051 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,81009:JM,81013:JM,81051:JM,81055
81055 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,81009:CD,81013:CD,81014:CD,81019:CD,81020:CD,81025:CD,81029:CD,81041:CD,81045:CD,81051:CD,81107:JM,81055
81059 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
81064 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .url::
81067 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
81072 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
81081 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v74 = new java.lang.IllegalArgumentException::
81082 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
81087 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .url::
81090 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
81095 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
81107 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,81040:DD,81041
81106 :: EXPR :: assign :: Ljava/lang/Exception :: v62 = catch <exc>::
81162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,81167
81167 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,95917
81187 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,81192
81192 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,95929
81204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.toCanonical()::CD,81208:CD,81212
81208 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v4 = p0 $this .getBaseIdentifier()::CL,77616
81212 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v6 = v4.toCanonical()::CL,93983:CL,93760:CL,93957:CL,96174:CL,93786
81227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,81234:CD,81238
81231 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,81238
81234 :: CALL :: call :: Z :: v5 = v3.get()::JM,81238
81238 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,81240:CD,81244:CD,81248:CD,81254
81240 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,81244:CL,96195
81245 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,96233
81244 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,81245
81248 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,96325
81251 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,81254
81254 :: CALL :: call :: V :: v11.set(#(1))::JM,81254
81279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,81280:CD,81283:CD,81287:CD,81295:CD,81303:CD,81311:CD,81319:CD,81327:CD,81335:CD,81343:CD,81351:CD,81359:CD,81367:CD,81375:CD,81383:CD,81387
81280 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,72470
81283 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
81287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,81387
81295 :: CALL :: call :: V :: v5.setClassId(v8)::CL,96392
81303 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,96412
81311 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,96432
81319 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,96452
81327 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,96472
81335 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,96492
81343 :: CALL :: call :: V :: v5.setPx(v26)::CL,96512
81351 :: CALL :: call :: V :: v5.setRanges(v29)::CL,96532
81359 :: CALL :: call :: V :: v5.setScopId(v32)::CL,96543
81367 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,96563
81375 :: CALL :: call :: V :: v5.setSunid(v38)::CL,96583
81383 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,96603
81387 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,81280
81417 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,81418:CD,81424:CD,81477:CD,81478:CD,81486:CD,81491:CD,81496:CD,81509:CD,81510
81418 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
81421 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,81424
81424 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,81426:CD,81430:CD,81438:CD,81443:CD,81451:CD,81455:CD,81465
81426 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
81430 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
81438 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
81443 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
81451 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,81527
81455 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,81459:CL,71814
81459 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
81462 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,81465
81465 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,81469
81466 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,81473
81469 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,81473
81473 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
81477 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
81478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
81483 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
81486 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
81491 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
81496 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
81506 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,81509
81509 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,81418
81510 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
81527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,81531
81531 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,80669
81541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,81542:CD,81545:CD,81547:CD,81551:CD,81552:CD,81560:CD,81565:CD,81567:CD,81568:CD,81574:CD,81579:CD,81584:CD,81594:CD,81595
81542 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,72658:JM,72603
81545 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,81560:JM,81547:JM,81565
81547 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,81560:JM,81547:JM,81565
81551 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,81560:JM,81565
81552 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
81560 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,81560:JM,81565
81565 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,81594
81567 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
81568 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
81574 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
81579 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
81584 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
81595 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
81594 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,81542
81607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomainNamesForPDB(java.lang.String)::CE,81608:CD,81613:CD,81617:CD,81625:CD,81630:CD,81635:CD,81650:CD,81654:CD,81658:CD,81665:CD,81670:CD,81675:CD,81684:CD,81685:CD,81690:CD,81695:CD,81705:CD,81706
81608 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomainNamesForPDB(java.lang.String)::JM,72754:JM,72758:JM,72713
81613 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
81617 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
81625 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getPDPDomainNamesForP...))::
81630 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
81635 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
81650 :: CALL :: call :: Ljava/io/InputStream :: v23 = getInputStream(v5)::CL,81527
81654 :: CALL :: call :: Ljava/lang/String :: v44 = convertStreamToString(v23)::CL,71814
81658 :: CALL :: call :: Ljava/util/SortedSet :: v46 = getDomainRangesFromXML(v44)::JM,81705:CL,96614
81665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
81670 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
81675 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
81685 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
81684 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v34 = new java.lang.IllegalArgumentException::
81690 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(p1 $pdbId )::
81695 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
81705 :: NORM :: compound :: Ljava/util/SortedSet :: return v46::DD,81608
81706 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
81893 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,95734:JM,95706
81892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,81893:JM,46768:JM,46721:JM,46674:JM,46740:JM,46725:JM,46773:JM,46742:JM,46681:JM,46793:JM,46747:CD,81904:CD,81905:CD,81906:CD,81914:CD,81918:CD,81926:CD,81931:CD,81949
81905 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
81904 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,81949:CF,81905
81906 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
81914 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,81914
81918 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
81923 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
81926 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
81931 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
81949 :: NORM :: compound :: Ljava/io/File :: return v7::DD,81893
82719 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82723
82723 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
82726 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
82729 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82733
82733 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
82736 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82740
82740 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
82743 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82747
82747 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
82750 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,82754
82754 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
82757 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82761
82761 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
82764 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82768
82768 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
82771 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:DD,82775
82775 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
82799 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,140224
82798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,82799:CD,82805
82802 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,82805
82805 :: NORM :: compound :: Z :: return v3::CF,82799
82807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,82815:CD,82819:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82815 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,82819:CL,89387
82819 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,82821:CD,82830:CD,82859:CD,82863:CD,82868:CD,82957:CD,82963:CD,82967:CD,82973:CD,82977:CD,82983:CD,82987:CD,82993:CD,82998:CD,83008:JM,97522:JM,97525:JM,97519:CD,83018:CD,83023:CD,83047:CD,83079:CD,83111:CD,83112:CD,83118:JM,83605:JM,83621:JM,83415:JM,83420:CD,83134:CD,83139:CD,83254:CD,83264:CD,83308:CD,83680:CD,83682:CD,83685:JM,83381:JM,82905:JM,83530:JM,83580:JM,83550
82821 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,82830
82831 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,82835
82830 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,83680:CD,82831:JM,93315:JM,93334:JM,93320:JM,93327:CD,82841:CD,82851
82835 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
82841 :: CALL :: call :: V :: v16.setChainID(v11)::CL,93358
82845 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
82848 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
82851 :: CALL :: call :: Z :: v22 = v19.add(v20)::
82859 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,82868:CL,70427
82863 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82868 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,83682:CD,82875:CD,82889:CD,82895:CD,82915:CD,82940:CD,82945:CD,83681
82875 :: CALL :: call :: V :: v29.addGroup(v30)::CL,93505
82889 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,83681:JM,82895:CL,97463
82895 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,82896:CD,82900:CD,82905:CD,82909:CD,83681
82896 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,82905:CL,70427
82900 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,82905:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82905 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,83681:CD,82909
82909 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,83681:CL,97463
82915 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,82916:JM,93315:JM,93334:JM,93320:JM,93327:CD,82926
82916 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,82920
82920 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
82926 :: CALL :: call :: V :: v48.setChainID(v11)::CL,93358
82931 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
82934 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,82945
82937 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,82945
82940 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,82945
82945 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,83682:CD,82952
82946 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
82949 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
82952 :: CALL :: call :: Z :: v57 = v54.add(v55)::
82957 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82963 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82967 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82973 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82977 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82983 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82987 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82993 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
82998 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,83381:JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83008 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,83381:JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83018 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,83381:JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83023 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,83024:CD,83029:CD,83033
83024 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,68789
83029 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,83033:CL,68789
83033 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,83034
83034 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
83044 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,83047
83047 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,83048:CD,83061:CD,83068:CD,83075:CF,83079
83048 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,97536
83061 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,94598:CL,94194
83068 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,94183
83075 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,97614
83079 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,83111:CD,83080:CD,83093:CD,83100:CD,83107
83080 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,97536
83093 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,94598:CL,94194
83100 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,94183
83107 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,97614
83111 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,83605:JM,83621:JM,83111:JM,83420:JM,83023:JM,83197:JM,83381:JM,82868:JM,83415:JM,82905:JM,83530:JM,83580:JM,83550
83112 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83118 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83134 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,83139:CL,44052
83139 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,83146:CD,83153:CD,83156:CD,83169:CD,83176:CD,83183:CD,83188:CD,83192:CD,83197:CD,83685
83146 :: CALL :: call :: V :: v157.addGroup(v158)::CL,93505
83153 :: CALL :: call :: V :: v160.trimToSize()::CL,97708
83156 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,97536
83169 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,94598:CL,94194
83176 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,94183
83183 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,97614
83188 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,83197
83192 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,83197
83197 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,83685:CD,83200:CD,83208:CD,83213:CD,83218:CD,83223:CD,83231:CD,83239:CD,83243
83200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
83208 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
83213 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
83218 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
83223 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
83231 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,83685:CL,97817
83239 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,83243:CL,60092
83243 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,83685:CD,83247
83247 :: CALL :: call :: V :: v152.setChain(v155)::CL,98063
83251 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,83254
83255 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
83254 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,83255
83258 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,83264
83261 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,83264
83264 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,83267:CD,83275:CD,83280:CD,83285:CD,83296:CD,83299
83267 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
83272 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
83275 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
83280 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
83285 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
83293 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
83296 :: CALL :: call :: V :: v188.clear()::
83299 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,98093
83302 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,83308
83305 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,83308
83308 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,83311:CD,83319:CD,83324:CD,83329:CD,83339:CD,83344:CD,83349:CD,83364
83311 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
83316 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
83319 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
83324 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
83329 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
83339 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
83344 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83349 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83358 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,83364
83361 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,83364
83364 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,83366:CD,83375:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83366 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83372 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,83375
83375 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,83376:CD,83381:CD,83393:CD,83397:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83376 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83381 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,83393:CD,83397
83393 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,83397:CL,98172
83397 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,83401:CD,83405:CD,83423:CD,83424:CD,83433:CD,83439:CD,83443:JM,79989:JM,79994:CD,83459:CD,83467:CD,83473:CD,83481:CD,83487:CD,83495:CD,83501:CD,83526:CD,83530:CD,83546:CD,83550:CD,83576:CD,83580:CD,83642:CD,83662:CD,83667:CD,83686:CD,83687:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83420:JM,83023
83401 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,83405:CL,98172
83405 :: EXPR :: assign :: I :: v208 = v207.length::DD,83423
83407 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,83415:JM,83420
83411 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83415 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,83415:JM,83420:JM,83605:JM,83621:JM,83111:JM,83023
83420 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,83422:CD,83423:CD,83686:CD,83687
83423 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,83687:CD,83411:CD,83415:CD,83420
83422 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,83686
83424 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,83433:CD,83439:CD,83443:JM,79989:JM,79994:CD,83459:CD,83467:CD,83473:CD,83481:CD,83487:CD,83495:CD,83501:CD,83526:CD,83530:CD,83546:CD,83550:CD,83576:CD,83580:CD,83642:CD,83662:CD,83667:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83420:JM,83023
83433 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83439 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83443 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83459 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83467 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83473 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83481 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83487 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83495 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83501 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83526 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83531 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83530 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,83531:CD,83537:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83537 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83580:JM,83420:JM,83023:JM,83550
83546 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83551 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83550 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,83551:CD,83557:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83557 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83580:JM,83420:JM,83023
83576 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83581 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83580 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,83581:CD,83587:CD,83591:CD,83597:CD,83601:CD,83605:CD,83633:JM,83381:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83587 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83420:JM,83023
83591 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,98249
83597 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83601 :: CALL :: call :: I :: v294 = v292.length()::JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83605 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,83606:CD,83613:CD,83617:CD,83621:JM,83381:JM,83605:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83606 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83613 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83617 :: CALL :: call :: I :: v299 = v297.length()::JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83621 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,83622:CD,83628:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83622 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83628 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,83605:JM,83621:JM,83415:JM,83111:JM,83420:JM,83023
83633 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,98249
83643 :: CALL :: call :: V :: v170.addAtom(v224)::CL,94344
83642 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,83643:CD,83651
83651 :: CALL :: call :: V :: v323.addAtom(v224)::CL,94344
83662 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,83667:CL,58234
83667 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,83671
83671 :: CALL :: call :: V :: v332.addAtom(v224)::CL,94344
83681 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,82915:DD,82931
83680 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,83682
83682 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,83079:JM,83381:JM,83605:JM,83621:JM,82868:JM,83415:JM,83111:JM,82905:JM,83530:JM,83580:JM,83420:JM,83023:JM,83550
83685 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,83642
83687 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,83424
83686 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,83422:DD,83423
84006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,84011:CD,84017:CD,84021:CD,84027:CD,84033:CD,84037:CD,84045:CD,84053:CD,84058:CD,84063
84011 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,84063
84017 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,84063
84021 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,84063
84027 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,84063
84033 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,84063
84037 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,84063
84042 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,84045
84045 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,84053:CD,84046:JM,84063
84046 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,84063
84053 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,84148
84058 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,84063
84063 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,84068:CD,84080:CD,84144:CD,84148:CD,84152:CD,84158:CD,84173:CD,84186
84068 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,84074:CL,97463
84074 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
84077 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,84080
84081 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,84085
84080 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,84081:JM,93315:JM,93334:JM,93320:JM,93327:CD,84091:JM,84148
84085 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
84091 :: CALL :: call :: V :: v39.setChainID(v13)::CL,93358
84096 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
84100 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,68789
84104 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,84111:CL,97536
84111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
84117 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,94598:CL,94194
84121 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,84124
84125 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,84130
84124 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,84125
84130 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,94629
84140 :: CALL :: call :: V :: v57.addGroup(v58)::CL,93505
84144 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,84148
84148 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,84096:CD,84100:CD,84104:CD,84117:CD,84124:CD,84125:CD,84140:CD,84144
84152 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,84158:CL,97463
84159 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
84158 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,84165
84162 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
84165 :: CALL :: call :: Z :: v67 = v64.add(v65)::
84170 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,84173
84173 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,84177
84177 :: CALL :: call :: V :: v69.trimToSize()::CL,97708
84186 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,84063
84270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,84278:CD,84282
84278 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,84282:CL,89387
84282 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,84287
84284 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,84287
84287 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,84291:CD,84318:CD,84324:CD,84342:CD,84346
84288 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,84291
84291 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,84298:CD,84305
84298 :: CALL :: call :: V :: v11.addGroup(v12)::CL,93505
84305 :: CALL :: call :: V :: v14.trimToSize()::CL,97708
84318 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,84324:CL,97463
84325 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
84324 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,84331
84328 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
84331 :: CALL :: call :: Z :: v25 = v22.add(v23)::
84342 :: CALL :: call :: V :: v26.addModel(v27)::CL,92758
84346 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
84386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,84391:CD,84395:CD,84399:CD,84422:CD,84456:CD,84461:CD,84466:CD,84471:CD,84479:CD,84535:JM,84400:JM,84480:JM,84423:JM,84550:JM,84495
84391 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84395 :: CALL :: call :: I :: v8 = v6.length()::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84399 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,84400:CD,84405:CD,84411:CD,84418:JM,84480:JM,84535:JM,84423:JM,84550:JM,84479:JM,84495:CF,84422
84400 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84479:JM,84495
84405 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84411 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84418 :: CALL :: call :: V :: v17.setClassification(v16)::CL,98304
84423 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,84400:JM,84480:JM,84535:JM,84423:JM,84550:JM,84479:JM,84495
84422 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,84423:CD,84428:CD,84434:CD,84449:JM,84400:JM,84480:JM,84535:JM,84550:JM,84495:CF,84479
84428 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84434 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84449 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,98315
84456 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
84461 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,84400:JM,84480:JM,84423:JM,84550:JM,84495
84466 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
84471 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
84479 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,84480:CD,84485:CD,84491:CD,84500:CD,84508:CD,84513:CD,84531:JM,84400:JM,84423:JM,84550:JM,84495:CF,84535
84480 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,84400:JM,84480:JM,84535:JM,84423:JM,84550:JM,84495
84485 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84491 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84495 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
84500 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
84505 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
84508 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
84513 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
84531 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,98326
84535 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,84539:CD,84545:CD,84550
84536 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,84550
84539 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84550:JM,84399:JM,84479:JM,84495
84545 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,84550:JM,84400:JM,84480:JM,84535:JM,84423:JM,84422:JM,84399:JM,84479:JM,84495
84550 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,84556:CD,84560:CD,84568:CD,84573:CD,84577
84556 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
84560 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
84568 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
84573 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
84577 :: CALL :: call :: V :: v79.println(v89)::
84642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,84647:CD,84652:CD,84659:CD,84663
84647 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
84652 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
84659 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,84663:CL,98337
84663 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,84672:CD,84667:CD,84673:CD,84681:CD,84686:CD,84693
84667 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,98346
84673 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
84672 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
84681 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
84686 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
84693 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,98346
84713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,84718:CD,84722:CD,84751:CD,84755:CD,84801:CD,84802:CD,84810:CD,84815:CD,84822:CD,84827
84718 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,84722:JM,84827
84723 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,84722:JM,84827
84722 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,84723:CD,84729:CD,84734:CD,84738:CD,84744:CD,84827:JM,84722
84729 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,84827
84734 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,84722:JM,84827
84738 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,84722:JM,84827
84744 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,84827
84751 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,84755:JM,84761:JM,84767:CL,98357
84755 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,84756:CD,84761:JM,84767
84756 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,84761:JM,84767
84761 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,84762:CD,84767:JM,84761
84762 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,84761:JM,84767
84767 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,84782:CF,84768:CD,84769:CD,84777:CD,84783:CD,84791:CD,84796
84769 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
84768 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
84777 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
84783 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
84782 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
84791 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
84796 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
84801 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
84802 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
84810 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
84815 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
84822 :: CALL :: call :: V :: v55.setTitle(v54)::CL,98366
84827 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
84863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,84868:CD,84872:CD,84873:CD,84877:CD,84878:CD,84887:CD,84892:JM,84903
84868 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,84903:JM,84872:JM,84877:JM,84892
84873 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,84903:JM,84872:JM,84877:JM,84892
84872 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,84903:JM,84872:JM,84877:JM,84892
84877 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,84903:JM,84872:JM,84877:JM,84892
84878 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,84903:JM,84872:JM,84877:JM,84892
84884 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,84892
84887 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,84903:JM,84892
84892 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,84899:CD,84903:CD,84904:CD,84913:CD,84922
84899 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,84903:JM,84872:JM,84877:JM,84892
84903 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,84903:JM,84872:JM,84877:JM,84892
84904 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,84903:JM,84872:JM,84877:JM,84892
84910 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
84913 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,84892
84919 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
84922 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,84903:JM,84872:JM,84877:JM,84892
84948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,84953:CD,84957:CD,84978:CD,84983:CD,84998:CD,85001
84953 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,84957
84957 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,84958:CD,84964:CD,84969:CD,84974:JM,84957
84958 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,84957
84964 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
84969 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,84957
84974 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
84978 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,84983
84983 :: EXPR :: assign :: I :: v21 = v20.length::DD,84998
84992 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,98377
84997 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,85001
84998 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,84992:CD,84997:CD,85001
85001 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,84997:DD,84998
85027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,85032:CD,85036:CD,85131:CD,85136:CD,85140:CD,85145:CD,85150:CD,85155:CD,85305:JM,85168:JM,85306
85032 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,85168:JM,85306:JM,85036
85036 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,85044:CD,85050:CD,85058:CD,85064:CD,85072:CD,85078:CD,85086:CD,85092:CD,85100:CD,85106:CD,85114:CD,85120:CD,85164:CD,85168:CD,85199:CD,85204:CD,85209:CD,85214:CD,85219:CD,85224:CD,85228:CD,85232:CD,85252:CD,85256:CD,85306:JM,85036
85044 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,85168:JM,85306:JM,85036
85050 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,85168:JM,85306
85058 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,85168:JM,85306:JM,85036
85064 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,85168:JM,85306
85072 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,85168:JM,85306:JM,85036
85078 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,85168:JM,85306
85086 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,85168:JM,85306:JM,85036
85092 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,85168:JM,85306
85100 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,85168:JM,85306:JM,85036
85106 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,85168:JM,85306
85114 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,85168:JM,85306:JM,85036
85120 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,85168:JM,85306
85131 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
85136 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
85140 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
85145 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
85150 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,85168:JM,85306:JM,85036
85155 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,85168:JM,85306
85164 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,85168:JM,85306:JM,85036
85169 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,85168:JM,85306:JM,85036
85168 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,85169:CD,85175:CD,85180:CD,85184:CD,85190:CD,85306:JM,85168:JM,85036
85175 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,85306
85180 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,85168:JM,85306:JM,85036
85184 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,85168:JM,85306:JM,85036
85190 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,85306
85199 :: CALL :: call :: V :: v83.setA(v85)::CL,98430
85204 :: CALL :: call :: V :: v83.setB(v87)::CL,98441
85209 :: CALL :: call :: V :: v83.setC(v89)::CL,98452
85214 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,98463
85219 :: CALL :: call :: V :: v83.setBeta(v93)::CL,98483
85224 :: CALL :: call :: V :: v83.setGamma(v95)::CL,98503
85228 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,85232:CL,98523
85232 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,85235:CD,85248
85235 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,85235
85248 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,98558
85252 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,85256:CL,98569
85256 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,85259:CD,85264:CD,85269:CD,85274:CD,85285:CD,85293:CD,85300
85259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
85264 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
85269 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
85274 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
85285 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,98648
85293 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,98659
85300 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,98648
85305 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
85306 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
85381 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,85386:CD,85390:JM,85554:JM,85463:JM,85631
85386 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,85554:JM,85463:JM,85631:JM,85390
85390 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,85398:CD,85404:CD,85408:CD,85418:CD,85428:CD,85438:CD,85448:CD,85454:CD,85458:CD,85463:CD,85474:CD,85631:JM,85554:JM,85390
85398 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,85554:JM,85463:JM,85631:JM,85390
85404 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,85554:JM,85463:JM,85631
85408 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,85554:JM,85463:JM,85631:JM,85390
85418 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,85554:JM,85463:JM,85631:JM,85390
85428 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,85554:JM,85463:JM,85631:JM,85390
85438 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,85554:JM,85463:JM,85631:JM,85390
85448 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,85554:JM,85463:JM,85631:JM,85390
85454 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,85554:JM,85463:JM,85631
85458 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,85463:JM,85631
85463 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,85631:CD,85464:CD,85470:JM,85554:JM,85463:JM,85390
85464 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,85554:JM,85463:JM,85631:JM,85390
85470 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,85554:JM,85463:JM,85631
85474 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,85479:CD,85490:CD,85554
85476 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,85479
85479 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,85480
85480 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,85484
85484 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
85487 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,85490
85491 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,85511
85490 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,85491
85511 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
85555 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
85554 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,85561
85558 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
85561 :: CALL :: call :: Z :: v76 = v73.add(v74)::
85631 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,85474
85735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,85740:CD,85826:CD,85831:CD,85836:CD,85841:CD,85846:CD,85883:CD,85976:JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85741 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85740 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,85741:CD,85745:JM,85763:JM,85796:JM,85752:JM,85899
85745 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,85747:CD,85752:JM,85745:JM,85763:JM,85796:JM,85899
85747 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85753 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,98670
85752 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,85753:CD,85758:CD,85763:JM,85745:JM,85796:JM,85752:JM,85899
85758 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85763 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,85767:CD,85771:CD,85791:CD,85796:JM,85745:JM,85763:JM,85752:JM,85899
85767 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,85771:CL,99071
85771 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,85775:CD,85786
85772 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,85775
85775 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,99090:JM,99103
85786 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,99127
85791 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85797 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
85796 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,85797:CD,85801:CD,85806:CD,85810:CD,85854:CD,85858:CD,85863:CD,85867:CD,85894:CD,85899:JM,85745:JM,85763:JM,85796:JM,85752
85801 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,85810
85806 :: CALL :: call :: Z :: v66 = v64.matches()::JM,85810
85811 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,85810
85810 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,85811:JM,85810
85826 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
85831 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,85810
85836 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
85841 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
85846 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
85854 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
85858 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,85867
85863 :: CALL :: call :: Z :: v93 = v91.matches()::JM,85867
85867 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,85868:JM,85867
85868 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,85867
85883 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,85867
85894 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,85745:JM,85763:JM,85796:JM,85752:JM,85899
85899 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,85900:CD,85904:CD,85909:CD,85913
85900 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
85904 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,85913
85909 :: CALL :: call :: Z :: v27 = v25.matches()::JM,85913
85913 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,85914:CD,85926:CD,85930:CD,85931:CD,85969:JM,85913
85914 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,85913
85926 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,85930:CL,99303
85931 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,85934:CD,85943:CD,85947:CD,85955
85930 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,85931
85934 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,85913
85943 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,85947:CL,99303
85947 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,85947
85955 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
85969 :: CALL :: call :: V :: v52.setResolution(v32)::CL,99312
85976 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,85913
86060 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,86068:CD,86259:CD,86264:CD,86268:CD,86273:CD,86278:CD,86283:CD,86293
86065 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,86068
86068 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,86073:CD,86077
86073 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,86077:CL,89387
86077 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,86079:CD,86085:CD,86089:CD,86093:CD,86100:CD,86107:CD,86114:CD,86121:CD,86128:CD,86135:CD,86142:CD,86149:CD,86156:CD,86163:CD,86172:CD,86178:CD,86185:CD,86192:CD,86199:CD,86206:CD,86213:CD,86220:CD,86227:CD,86234:CD,86241:CD,86251
86079 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
86085 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
86089 :: CALL :: call :: I :: v16 = parseInt(v14)::
86093 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,86178:CL,99323
86100 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,86185:CL,99323
86107 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,86192:CL,99323
86114 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,86199:CL,99323
86121 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,86206:CL,99323
86128 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,86213:CL,99323
86135 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,86220:CL,99323
86142 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,86227:CL,99323
86149 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,86234:CL,99323
86156 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,86241:CL,99323
86163 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
86172 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
86179 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
86178 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,86179:CF,86185
86185 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,86186:CF,86192
86186 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
86193 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
86192 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,86193:CF,86199
86199 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,86200:CF,86206
86200 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
86207 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
86206 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,86207:CF,86213
86213 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,86214:CF,86220
86214 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
86221 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
86220 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,86221:CF,86227
86227 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,86228:CF,86234
86228 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
86235 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
86234 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,86235:CF,86241
86241 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,86242
86242 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
86248 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
86251 :: CALL :: call :: Z :: v87 = v85.add(v47)::
86259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
86264 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
86268 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
86273 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
86278 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
86283 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
86293 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
86423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,86431:CD,86435:CD,86475:CD,86480:CD,86485:CD,86490
86431 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,86435:CL,99373
86435 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,86436:CD,86441:CD,86446:CD,86447:CD,86453:CD,86468
86436 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
86441 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,86446
86447 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
86446 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,86447:CD,86453:CD,86468
86453 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
86468 :: CALL :: call :: V :: v23.setModDate(v22)::CL,99409
86475 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
86480 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
86485 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
86490 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
86518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,86543:CD,86738
86543 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
86735 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
86738 :: CALL :: call :: Z :: v105 = v103.add(v13)::
86843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,86851:CD,86855:JM,87307
86851 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,86855:CL,89387
86855 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,86859:CD,86864:CD,86869:CD,86877:CD,86886:CD,86891:CD,86892:CD,86897:CD,86901:CD,86906:CD,86908:CD,86909:CD,86986:CD,86995:CD,87196:CD,87202:CD,87207:CD,87210:CD,87218:CD,87222:CD,87226:CD,87231:CD,87236:CD,87247:CD,87251:CD,87298:CD,87302:CD,87304:CD,87305:CD,87306:CD,87307
86859 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
86864 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,87307
86869 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,87307
86877 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,87307
86886 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,86891
86891 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,86892:DD,87306
86892 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,87304
86897 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,87307
86901 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,86906
86906 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,87305
86909 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,87306:CF,86910:CD,86917:CD,86921:CD,86938:CD,86949:CD,86957:CD,86961:CD,86966:CD,86971
86908 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,86909
86910 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,87306
86917 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,87307
86921 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
86938 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
86949 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
86954 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
86957 :: CALL :: call :: I :: v55 = v53.size()::
86961 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
86966 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
86971 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
86986 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
86995 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,87307
87003 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
87008 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,87207
87013 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,87207
87018 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
87026 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,87207
87032 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,87036:CL,68789
87037 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
87036 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,87037:JM,87207
87047 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,87207
87053 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,87207
87059 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,87207
87063 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
87067 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,87207
87073 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,87207
87078 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
87101 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
87110 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
87116 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
87121 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
87126 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
87131 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
87136 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
87144 :: CALL :: call :: V :: v126.setChainId(v106)::CL,92943
87148 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,99647
87152 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,99658
87156 :: CALL :: call :: Z :: v145 = v64.add(v126)::
87163 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
87168 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
87173 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
87178 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,87307
87183 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
87191 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,87307
87196 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,87207
87202 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,87207
87207 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,87003:CD,87008:CD,87013:CD,87018:CD,87026:CD,87032:CD,87036:CD,87047:CD,87053:CD,87059:CD,87063:CD,87067:CD,87073:CD,87078:CD,87101:CD,87110:CD,87116:CD,87121:CD,87126:CD,87131:CD,87136:CD,87144:CD,87148:CD,87152:CD,87156:CD,87163:CD,87168:CD,87173:CD,87178:CD,87183:CD,87191:CD,87196:CD,87202:CD,87307
87210 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
87215 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
87218 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
87222 :: CALL :: call :: I :: v172 = v170.size()::
87226 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
87231 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
87236 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
87244 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,87302
87247 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,87302
87251 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,87302
87256 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,87302
87263 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
87264 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
87272 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
87280 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
87285 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
87290 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
87298 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,87302
87302 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,87256:CD,87263:CD,87264:CD,87272:CD,87280:CD,87285:CD,87290:CD,87298:JM,87302
87305 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,86908
87304 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,86908
87307 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,87307:JM,87207
87306 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
87447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,87455:CD,87459:JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87455 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,87459:CL,89387
87459 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,87461:CD,87465:JM,87521:JM,87553:JM,87559:JM,87547:JM,87565
87461 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87465 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,87473:CD,87479:CD,87485:CD,87489:CD,87495:CD,87501:CD,87507:CD,87511:CD,87517:CD,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87473 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87479 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87485 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,87521:JM,87553:JM,87559:JM,87547:JM,87565
87489 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87495 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87501 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87507 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,87521:JM,87553:JM,87559:JM,87547:JM,87565
87511 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87517 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87521 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,87522:CD,87528:CD,87532:CD,87538:CD,87542:CD,87547:CD,87623:CD,87654:JM,87521:JM,87553:JM,87559:JM,87465:JM,87565
87522 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87528 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,87553:JM,87559:JM,87547:JM,87565
87532 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,87521:JM,87553:JM,87559:JM,87465:JM,87547:JM,87565
87538 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,87553:JM,87559:JM,87547:JM,87565
87542 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,87553:JM,87559:JM,87547:JM,87565
87547 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,87548:CD,87553:CD,87623:CD,87654:JM,87559:JM,87547:JM,87565
87548 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,87553:JM,87559:JM,87547:JM,87565
87553 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,87554:CD,87559:CD,87623:CD,87654:JM,87553:JM,87547:JM,87565
87554 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,87553:JM,87559:JM,87547:JM,87565
87559 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,87560:CD,87565:CD,87568:CD,87569:CD,87577:CD,87582:CD,87586:CD,87587:CD,87595:CD,87600:JM,87553:JM,87559:JM,87547
87560 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,87553:JM,87559:JM,87547:JM,87565
87565 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,87568:CD,87569:CD,87577:CD,87582:CD,87586:CD,87587:CD,87595:CD,87600:CD,87623:CD,87654
87569 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
87568 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
87577 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,87521:JM,87553:JM,87559:JM,87547:JM,87565
87582 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,87553:JM,87559:JM,87547:JM,87565
87587 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
87586 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
87595 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,87521:JM,87553:JM,87559:JM,87547:JM,87565
87600 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,87553:JM,87559:JM,87547:JM,87565
87623 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
87651 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
87654 :: CALL :: call :: Z :: v77 = v75.add(v67)::
87747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,87755:CD,87759
87755 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,87759:CL,89387
87759 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,87761:CD,87767:CD,87771:CD,87777:CD,87781:CD,87787:CD,87791:CD,87797:CD,87801:CD,87807:CD,87811:CD,87817:CD,87821:CD,87827:CD,87831:CD,87837:CD,87841:CD,87847:CD,87851:CD,87857:CD,87861:CD,87867:CD,87871:CD,87877:CD,87881:CD,87887:CD,87891:CD,87897:CD,87904:CD,87922
87761 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
87767 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
87771 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
87777 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
87781 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
87787 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
87791 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
87797 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
87801 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
87807 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
87811 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
87817 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
87821 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
87827 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
87831 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
87837 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
87841 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
87847 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
87851 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
87857 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
87861 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
87867 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
87871 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
87877 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
87881 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
87887 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
87891 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
87897 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
87901 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
87904 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
87922 :: CALL :: call :: Z :: v88 = v84.add(v85)::
88003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,88004:CD,88010
88004 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,76678:JM,76759
88007 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,88010
88010 :: NORM :: compound :: Z :: return v3::CF,88004
88012 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,88020:CD,88024:JM,88030
88020 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,88024:CL,89387
88024 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,88026:CD,88030
88026 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,88030
88030 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,88038:CD,88044:CD,88048:CD,88054:CD,88060:CD,88064:CD,88070:CD,88076:CD,88080:CD,88086:CD,88092:CD,88096:CD,88102:CD,88106:CD,88112:CD,88118:CD,88124:CD,88130:CD,88136:CD,88142:CD,88148:CD,88157:JM,88030
88038 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,88030
88044 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
88048 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,88030
88054 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,88030
88060 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
88064 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,88030
88070 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,88030
88076 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
88080 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,88030
88086 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,88030
88092 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
88096 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,88030
88102 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
88106 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
88112 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
88118 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
88124 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
88130 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
88136 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
88142 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
88148 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
88154 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
88157 :: CALL :: call :: Z :: v76 = v74.add(v48)::
88238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,88246:CD,88250:JM,88256
88246 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,88250:CL,89387
88250 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,88252:CD,88256
88252 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,88256
88256 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,88264:CD,88270:CD,88274:CD,88280:CD,88286:CD,88290:CD,88296:CD,88302:CD,88306:CD,88312:CD,88318:CD,88322:CD,88328:CD,88332:CD,88338:CD,88344:CD,88350:CD,88356:CD,88362:CD,88368:CD,88374:CD,88383:JM,88256
88264 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,88256
88270 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
88274 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,88256
88280 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,88256
88286 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
88290 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,88256
88296 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,88256
88302 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
88306 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,88256
88312 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,88256
88318 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
88322 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,88256
88328 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
88332 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
88338 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
88344 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
88350 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
88356 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
88362 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
88368 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
88374 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
88380 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
88383 :: CALL :: call :: Z :: v74 = v72.add(v46)::
88464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,88472:CD,88476:JM,88482
88472 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,88476:CL,89387
88476 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,88478:CD,88482
88478 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,88482
88482 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,88490:CD,88496:CD,88500:CD,88506:CD,88512:CD,88516:CD,88522:CD,88528:CD,88532:CD,88538:CD,88544:CD,88548:CD,88554:CD,88558:CD,88564:CD,88570:CD,88576:CD,88582:CD,88588:CD,88594:CD,88600:CD,88609:JM,88482
88490 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,88482
88496 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
88500 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,88482
88506 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,88482
88512 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
88516 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,88482
88522 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,88482
88528 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
88532 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,88482
88538 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,88482
88544 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
88548 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,88482
88554 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
88558 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
88564 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
88570 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
88576 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
88582 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
88588 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
88594 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
88600 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
88606 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
88609 :: CALL :: call :: Z :: v74 = v72.add(v46)::
88690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,88696:CD,88724:CD,88728:CD,88732:CD,88736:CD,88757:CD,88785:CD,88789
88696 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,88789:JM,88728
88701 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,88789:JM,88728
88720 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,99842
88724 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,88789:JM,88728
88729 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,88736
88728 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,88701:CD,88720:CD,88724:JM,88789:JM,88728
88732 :: CALL :: call :: I :: v22 = v20.size()::JM,88736
88736 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,100548:JM,100541:CD,88748
88745 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
88748 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
88757 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,88789:JM,88728
88762 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,88789:JM,88728
88781 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,100652
88785 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,88789:JM,88728
88789 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,88762:CD,88781:CD,88785:JM,88789:JM,88728
88826 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,88837:CD,88842:CD,88847:CD,88871:CD,88913:CD,88917:CD,88937:CD,88947:CD,88957:CD,88967:CD,88977:CD,88984:CD,88988:CD,89046:CD,89056:CD,89063:CD,89067:CD,89074:CD,89092:CD,89128:CD,89129:CD,89190
88837 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
88842 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,88847
88847 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,88855:CD,88860
88855 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,88860
88860 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,88864
88864 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,98315
88868 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,88871
88871 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,88878:CD,88892:CD,88898
88878 :: CALL :: call :: V :: v21.addGroup(v22)::CL,93505
88892 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,88898:CL,97463
88899 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
88898 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,88905
88902 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
88905 :: CALL :: call :: Z :: v33 = v30.add(v31)::
88910 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,88917
88913 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,88917
88917 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,88918:CD,88927
88918 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,101318
88927 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,102282
88937 :: CALL :: call :: V :: v41.addModel(v42)::CL,92758
88947 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,92493
88957 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,102293
88967 :: CALL :: call :: V :: v50.setConnections(v51)::CL,102308
88977 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,92523
88984 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,88988:CL,102319
88988 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,88992:CD,88996:CD,89038
88992 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,88996:CL,89387
88996 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,89013:CD,89038
89013 :: CALL :: call :: V :: v74.align(v76, v77)::CL,102350
89038 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,102406
89046 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,102549
89056 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,92707
89063 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,89067:CL,89387
89067 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,89068
89068 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,102986
89071 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,89074
89074 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,89085
89085 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,103353
89089 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,89092
89093 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,89100
89092 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,89096:CD,89100
89096 :: CALL :: call :: I :: v97 = v95.size()::JM,89100
89100 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,89110:CD,89114:CD,89115:CD,89121
89104 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
89107 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,89114
89110 :: CALL :: call :: I :: v102 = v100.size()::JM,89114
89115 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
89114 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
89121 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,103364
89125 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,89128
89129 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,89133:CD,89134:CD,89149:CD,89150
89128 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,89129
89130 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,89133
89133 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,89134
89134 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,89141:CD,89149:CD,89150
89141 :: CALL :: call :: V :: v127.setRfree(v128)::CL,103375
89146 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,89149
89149 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,89150
89151 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,89154
89150 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,89154:CD,89155:CD,89170:CD,89171
89155 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,89162:CD,89170:CD,89171
89154 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,89155
89162 :: CALL :: call :: V :: v124.setRfree(v125)::CL,103375
89167 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,89170
89171 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,89175:CD,89176
89170 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,89171
89172 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,89175
89175 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,89176
89176 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,89183
89183 :: CALL :: call :: V :: v121.setRfree(v122)::CL,103375
89190 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,92610
89293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,89294:CD,89300
89294 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,76737:JM,123434
89297 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,89300
89300 :: NORM :: compound :: Z :: return v3::CF,89294
89302 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,89321:CD,89335:CD,89339:CD,89343:CD,89347
89318 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,89339
89321 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,89339
89326 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,89339
89331 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,103407
89335 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,89339
89339 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,89326:CD,89331:CD,89335:JM,89339
89343 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,103563
89347 :: CALL :: call :: V :: v3.makeBonds()::CL,103624
89367 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,76748:JM,123445
89366 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,89367:CD,89373
89370 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,89373
89373 :: NORM :: compound :: Z :: return v3::CF,89367
89375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,89382
89382 :: CALL :: call :: V :: addCharges(v3)::CL,103645
89387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,89388:CD,89394
89388 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,76767:JM,82819:JM,84282:JM,86077:JM,86855:JM,87459:JM,87759:JM,88024:JM,88250:JM,88476:JM,88996:JM,89067:JM,98682:JM,123034:JM,123426:JM,123459:JM,139706:JM,141922
89391 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,89394
89394 :: NORM :: compound :: Z :: return v3::CF,89388
89396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,89405:CD,89416:CD,89427:CD,89471:CD,89475
89405 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,103962
89416 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,103962
89427 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,103962
89442 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,104270
89446 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,89450:CL,104297
89451 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,89456:CL,104341
89450 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,89451:CD,89456
89456 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::CD,89466
89466 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,104384
89471 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,89475:CL,104404
89475 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,89442:CD,89446:CD,89450:CD,89471
89509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,89510:CD,89512:CD,89514:CD,89515:CD,89523
89510 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,77019
89512 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,89514
89515 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,89523
89514 :: EXPR :: assign :: I :: v4 = v2.length::DD,89515
89523 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,89510
89581 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,89665
89590 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
89596 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
89608 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
89618 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,89626
89622 :: CALL :: call :: I :: v15 = v13.length()::JM,89626
89627 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,89631
89626 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,89644:CD,89658
89631 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
89644 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
89658 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,89662
89662 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
89665 :: EXPR :: assign :: I :: v28 = v7.length::DD,89666
89667 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
89666 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,89671:CD,89675:CD,89683
89671 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
89675 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,89679:CL,90403
89679 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
89683 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,89687
89687 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
89723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,89724:CD,89727:CD,89731:CD,89735:CD,89755:CD,89759:CD,89760
89724 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,77449
89727 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,89760
89731 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,89759:CL,92802
89735 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,89759
89740 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,89759
89745 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,89749:CL,92889
89749 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,89750:JM,89759
89750 :: CALL :: call :: Z :: v19 = v3.add(v16)::
89755 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,89759
89759 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,89740:CD,89745:CD,89749:CD,89755:JM,89759:CF,89760
89760 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,89724
89779 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CD,89785:CD,89790:CD,89794
89785 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,89794
89790 :: CALL :: call :: Z :: v7 = v5.matches()::JM,89794
89795 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,89794
89794 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,89795:CD,89800:JM,89794
89800 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
89814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,89817:CD,89819
89817 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,89819
89819 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,134274:JM,134209:JM,134212:JM,134250:JM,134220:JM,46674:JM,134257:JM,134228:JM,134202:JM,46681:JM,134264:JM,134206:JM,134236
89833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CD,89841:CD,89852
89838 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,89841
89841 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,89842:CD,89846
89842 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,104577
89846 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,104660
89852 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::
89865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,89870
89870 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,104767
89876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CD,89881:JM,89955:JM,89882:JM,89886
89881 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,89882:CD,89886:JM,89955
89882 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,89955:JM,89882:JM,89886
89886 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,89890:CD,89895:CD,89899:CD,89905:CD,89910
89890 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,89899
89895 :: CALL :: call :: Z :: v12 = v10.matches()::JM,89899
89899 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,89900:JM,89899
89900 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,89899
89905 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,89910:JM,89961:CL,104995
89910 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,89922:CD,89926:CD,89936:CD,89957:CD,89961
89922 :: CALL :: call :: I :: v22 = v18.size()::JM,89961
89926 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,89961
89936 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,89961
89941 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,89961
89946 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,89955:CL,105197
89950 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,89955:JM,89882:JM,89886
89955 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,89957:CD,89961
89957 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,89961
89961 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,89941:CD,89946:CD,89950:CD,89955:JM,89961
90003 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,77706
90002 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,90003:CD,90007:CD,90011:CD,90016
90007 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,90192:JM,90279:JM,90187:JM,90236
90011 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,90017:JM,90016:CL,105206:CL,105268
90017 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,90003
90016 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,90017:CD,90020:CD,90025:CD,90030:CD,90040:CD,90045:CD,90049:CD,90179:CD,90183:CD,90187
90020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
90025 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
90030 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
90040 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90045 :: CALL :: call :: Z :: v22 = v20.matches()::JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90049 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,90050:CD,90055:CD,90060:CD,90065:CD,90070:CD,90174:CD,90178:JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157:JM,90192:JM,90279:JM,90187:JM,90236
90050 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90055 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90060 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,90049:JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90065 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,90178:JM,90079:CL,72422:CL,72532
90070 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,90178:JM,90079
90075 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,90178:JM,90079
90079 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
90086 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90091 :: CALL :: call :: Z :: v48 = v46.matches()::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90095 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,90096:CD,90101:CD,90106:JM,90129:JM,90151:JM,90168:JM,90140:JM,90095:JM,90178:JM,90079
90096 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90101 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,90112:JM,90151:JM,90118:JM,90106:JM,90157:JM,90129:JM,90168:JM,90140
90107 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90106 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,90107:CD,90112:CD,90141:CD,90146:CD,90151:JM,90118:JM,90106:JM,90157:JM,90129:JM,90168:JM,90140:JM,90095
90113 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90112 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,90113:CD,90118:CD,90141:CD,90146:CD,90151:JM,90112:JM,90106:JM,90157:JM,90129:JM,90168:JM,90140:JM,90095
90119 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90118 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,90119:CD,90124:CD,90129:CD,90141:CD,90146:CD,90151:JM,90168:JM,90106:JM,90140:JM,90095
90124 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140
90129 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,90130:CD,90135:CD,90140:CD,90141:CD,90146:CD,90151:JM,90129:JM,90168:JM,90106:JM,90095
90130 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90135 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140
90141 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90140 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,90141:CD,90146:CD,90151:JM,90129:JM,90168:JM,90106:JM,90140:JM,90095:JM,90178:JM,90079
90146 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,90112:JM,90151:JM,90118:JM,90106:JM,90157:JM,90129:JM,90168:JM,90140
90151 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,90152:CD,90157:CD,90169:JM,90112:JM,90151:JM,90118:JM,90106
90152 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,90112:JM,90151:JM,90118:JM,90106:JM,90157
90157 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,90158:CD,90163:CD,90168:CD,90169:JM,90129:JM,90151:JM,90106:JM,90140:JM,90095
90158 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140:JM,90095
90163 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,90129:JM,90151:JM,90168:JM,90106:JM,90140
90169 :: CALL :: call :: Z :: v78 = v4.add(v41)::
90168 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,90169:JM,90178:JM,90079
90174 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,90178:JM,90079
90179 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,90192:JM,90279:JM,90187:JM,90236
90178 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,90075:CD,90079:CD,90086:CD,90091:CD,90095:CD,90174:JM,90178:JM,90192:JM,90279:JM,90187:JM,90236
90183 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,90192:JM,90279:JM,90187:JM,90236
90187 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,90188:CD,90192:CD,90193:CD,90195:CD,90199:CD,90299:CD,90300:JM,90279:JM,90187:JM,90236
90188 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,90192:JM,90279:JM,90187:JM,90236
90193 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,90195:JM,90199
90192 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,90299
90195 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,90195:JM,90199
90199 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,90200:CD,90204:CD,90209:CD,90213:CD,90218:CD,90223:CD,90227:CD,90232:CD,90236:CD,90280:CD,90284:CD,90291:CF,90299
90200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
90204 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
90209 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,72884
90213 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
90218 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
90223 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
90227 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
90232 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,90192:JM,90279:JM,90187:JM,90236
90237 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
90236 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,90237:CD,90275:CD,90279:JM,90280
90243 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,90192:JM,90279:JM,90187:JM,90236
90244 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,90192:JM,90279:JM,90187:JM,90236
90253 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
90261 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
90266 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
90270 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
90275 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,90192:JM,90279:JM,90187:JM,90236
90279 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,90243:CD,90244:CD,90253:CD,90261:CD,90266:CD,90270:CD,90275:JM,90280
90280 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,90280
90284 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
90291 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
90299 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,90003
90300 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,90003
90403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,90404:CD,90407:CD,90411:CD,90416:CD,90422:CD,90427:CD,90439:CD,90444:CD,90445:CD,90450:CD,90466:CD,90467:CD,90468:CD,90470
90404 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,89679
90407 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,90416:JM,90468
90411 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,90416:JM,90468
90417 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,90416:JM,90468
90416 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,90468:CD,90417:JM,90416
90422 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,90427
90427 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,90428:CD,90432:CD,90433
90428 :: CALL :: call :: I :: v17 = v12.length()::JM,90432
90433 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
90432 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
90439 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,90450:JM,90445
90445 :: EXPR :: assign :: I :: v26 = v24.length::
90444 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,90467:CF,90445
90450 :: EXPR :: assign :: I :: v28 = v24.length::DD,90466
90456 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,105373
90460 :: CALL :: call :: Z :: v33 = v25.add(v31)::
90465 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,90470
90467 :: NORM :: compound :: Ljava/util/List :: return v25::DD,90404
90466 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,90456:CD,90460:CD,90465:CD,90470:CF,90467
90468 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,90427:JM,90432
90470 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,90465:DD,90466
90518 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v7 = new java.lang.NullPointerException::JM,90518:JM,90524:JM,90527
90524 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
90527 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
90622 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
90629 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
90675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CD,90683:CD,90702:CD,90707:CD,90767:CD,90772:CD,90777:CD,90786:CD,90787:CD,90792:CD,90797:CD,90807:CD,90811:CD,90842:CD,90857:CD,90861:JM,105713:JM,105718:JM,90518:JM,105708:JM,105724:JM,90524:JM,90527:CD,90869:CD,90870:CD,90871
90680 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,90683
90683 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,90870:CD,90687:CD,90692
90687 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,90692
90692 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,90870:CD,90696:CD,90701
90696 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,90701
90701 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,90870
90702 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,90707:CL,105639
90707 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,90871:CD,90709:CD,90713:CD,90721:CD,90726:CD,90731:CD,90746:CD,90750:CD,90754:CD,90758
90709 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
90713 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
90721 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
90726 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
90731 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
90746 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,81527
90750 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,71814
90754 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,90871:JM,90758:CL,96614
90759 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,72822
90758 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,90871:CD,90759
90767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
90772 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
90777 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
90787 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
90786 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v46 = new java.lang.IllegalArgumentException::
90792 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
90797 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
90807 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
90811 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,90861
90816 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,90861
90842 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v86 = new java.lang.RuntimeException::
90848 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,92802
90852 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
90857 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,90861
90861 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CD,90816:JM,89665:JM,89666:JM,89590:JM,89622:JM,89608:JM,89626:JM,89581:JM,89596:CD,90848:CD,90852:CD,90857:JM,90861
90869 :: EXPR :: assign :: Ljava/lang/Exception :: v36 = catch <exc>::
90871 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,90861:CF,90807
90870 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,90871
90941 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,90970
90946 :: CALL :: call :: Z :: v9 = v7.matches()::JM,90970
90951 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v22 = new java.lang.IllegalArgumentException::
90957 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,90970
90965 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,90970
90971 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,90970
90970 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,90971:CD,90976:JM,90970
90976 :: CALL :: call :: I :: v21 = parseInt(v19)::
91005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CD,91012
91009 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::
91012 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::
91110 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,91114:CD,91118:CD,91122:JM,91123:JM,91138:JM,91127:JM,91133
91114 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
91118 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,91123:JM,91122:JM,91138:JM,91127:JM,91133
91123 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,91123:JM,91138:JM,91127:JM,91133
91122 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,91123:CD,91127:JM,91138:JM,91133
91127 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,91129:CD,91133:CD,91138:CD,91190:CD,91194:JM,91123:JM,91122:JM,91127
91129 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,91123:JM,91122:JM,91138:JM,91127:JM,91133
91133 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,91123:JM,91138:JM,91127:JM,91133
91138 :: EXPR :: assign :: I :: v16 = v15.length::DD,91190
91183 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
91189 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,91194
91190 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,91183:CD,91189:CD,91194
91194 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,91189:DD,91190
91430 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
91479 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,91487
91484 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
91487 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
91496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,91501:CD,91504:CD,91511:CD,91515:CD,91519:CD,91523:CD,91527:JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91501 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,106149
91504 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,91508
91508 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
91511 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,91858:JM,92093
91515 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,92126
91519 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
91523 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,91683:JM,91973:JM,91527:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91527 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,91528:CD,91533:CD,91536:CD,91541:CD,91546:CD,91551:CD,91559:CD,92124:CD,92125:CD,92126:CD,92127:JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768
91528 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91533 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,92124:CD,91536:CD,91541:CD,91546:CD,91551:CD,91559:CD,92074:CD,92078:CD,92125:CD,92126:CD,92127
91536 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
91541 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91546 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,91683:JM,91573:JM,91973:JM,91623:JM,91911:JM,91609:JM,91640:JM,91768:JM,91567:JM,92127
91551 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,91768
91559 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,106191
91563 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91567 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,92124:CD,91568:CD,91573:CD,92074:CD,92078:CD,92125:CD,92126:CD,92127:JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,91609:JM,91640:JM,91768
91568 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91573 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,91577:CD,91578:CD,91586:CD,91591:CD,91596:CD,91604:CD,91609:CD,91617:CD,92074:CD,92078:CD,92122:CD,92123:CD,92124:CD,92125:CD,92126:CD,92127
91577 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,91578
91578 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,91578
91586 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
91591 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91596 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,91683:JM,91973:JM,91623:JM,91911:JM,91609:JM,91640:JM,91768:JM,92127
91604 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91609 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,92122:CD,91610:CD,92123
91611 :: CALL :: call :: V :: v154.clear()::
91610 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,92122:CD,91611:CD,91614
91614 :: CALL :: call :: V :: v9.clear()::
91617 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,91618:CD,91623:CD,91906:CD,91911:JM,91683:JM,91973:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91618 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91623 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,91624:CD,91628:CD,91633:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127
91624 :: CALL :: call :: V :: v9.clear()::
91628 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,91633
91633 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,91634:CD,91817:CD,91826:CD,91830:CD,91841:CD,91850:CD,91854:CD,91858:CD,91895:CD,91902:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127
91635 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91634 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,91635:CD,91640:CD,91759:CD,91763:CD,91768:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,91573:JM,91609
91640 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,91647:CD,91650:CD,91657:CD,91661:CD,91759:CD,91763:CD,91768:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,91573:JM,91609:JM,91640
91647 :: CALL :: call :: V :: v9.clear()::
91650 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,91728:JM,91671:JM,91661:CL,106224
91657 :: CALL :: call :: I :: v84 = v82.size()::JM,91728:JM,91671:JM,91661
91661 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,91662:CD,91666:CD,91671:CD,91672:CD,91677:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,91728:JM,91661
91662 :: CALL :: call :: V :: v154.clear()::
91666 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,91728:JM,91671:JM,91661
91671 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,91729:JM,91677:JM,92127
91672 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,91729:JM,91677:JM,92127
91677 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,91678:CD,91683:CD,91717:CD,91723:CD,91728:CD,91729:CD,91730:CD,91734:CD,91740:CD,91745:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,91573:JM,91609:JM,91640:JM,91768
91678 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91683 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,91686:CD,91691:CD,91696:CD,91701:CD,91709:CD,91713:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127
91686 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
91691 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91696 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,91973:JM,91911:JM,91768:JM,92127
91701 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,91768
91709 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,106191
91713 :: CALL :: call :: V :: v154.clear()::
91717 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,92127:JM,91729
91723 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,91728:JM,91671:JM,91661
91729 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
91728 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,91729
91730 :: CALL :: call :: I :: v102 = v88.length()::
91734 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
91740 :: CALL :: call :: Z :: v106 = v9.add(v104)::
91745 :: CALL :: call :: Z :: v108 = v154.add(v99)::
91759 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91763 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,91973:JM,91911:JM,91768:JM,92127
91769 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,91795
91768 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,91769:CD,91782:CD,91795:CD,91796:CD,92124:CD,92125:CD,92126:CD,92127
91774 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,92127
91778 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
91782 :: CALL :: call :: Z :: v67 = v9.add(v65)::
91795 :: EXPR :: assign :: I :: v71 = v62.length::DD,91796
91796 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,92124:CD,92125:CD,92126:CD,92127
91817 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,91858:JM,92126:CL,106224
91826 :: CALL :: call :: I :: v125 = v121.size()::JM,91858:JM,92126
91830 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,91858
91841 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
91850 :: CALL :: call :: I :: v135 = v121.size()::JM,91858:JM,92126
91854 :: CALL :: call :: I :: v137 = v9.size()::JM,91858
91858 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,91862:CD,91866:CD,91874:CD,91878
91862 :: CALL :: call :: I :: v143 = v9.size()::
91866 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
91874 :: CALL :: call :: I :: v147 = v121.size()::JM,91858:JM,92126
91878 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
91895 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,106540
91902 :: CALL :: call :: V :: v121.clear()::JM,91858:JM,92126
91906 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91911 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,91912:CD,91920:CD,91940:CD,91947:CD,91951:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127
91913 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,106540
91912 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,91913
91920 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,107961
91940 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,91961:JM,92044:JM,91951:CL,106224
91947 :: CALL :: call :: I :: v169 = v167.size()::JM,91961:JM,92044:JM,91951
91951 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,91952:CD,91956:CD,91961:CD,91962:CD,91967:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,92044:JM,91951
91952 :: CALL :: call :: V :: v154.clear()::
91956 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,91961:JM,92044:JM,91951
91961 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,92019:JM,92045:JM,91967:JM,92127
91962 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,92019:JM,92045:JM,91967:JM,92127
91967 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,91968:CD,91973:CD,92007:CD,92033:CD,92039:CD,92044:CD,92045:CD,92046:CD,92050:CD,92056:CD,92061:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127:JM,91683:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,91573:JM,91609:JM,91640:JM,91768
91968 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91973 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,91976:CD,91981:CD,91986:CD,91991:CD,91999:CD,92003:CD,92074:CD,92078:CD,92124:CD,92125:CD,92126:CD,92127
91976 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
91981 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,91683:JM,91973:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
91986 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,91768
91991 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
91999 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,106191
92003 :: CALL :: call :: V :: v154.clear()::
92007 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,92008:CD,92014:CD,92019:JM,92127
92008 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,92019:JM,92045:JM,92127
92014 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,92019:JM,92127
92019 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,92020:CD,92027:JM,92127
92020 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,106540
92027 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,107961
92033 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,92127:JM,92019:JM,92045
92039 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,91961:JM,92044:JM,91951
92045 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
92044 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,92045
92046 :: CALL :: call :: I :: v192 = v173.length()::
92050 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
92056 :: CALL :: call :: Z :: v196 = v9.add(v194)::
92061 :: CALL :: call :: Z :: v198 = v154.add(v189)::
92074 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,91683:JM,91973:JM,91527:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:JM,92127
92079 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,92080:CD,92084
92078 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,91563:CD,91567:CD,92079:CD,92110:CD,92118:CD,92124:CD,92125:CD,92126:CD,92127:JM,91683:JM,91973:JM,91623:JM,91911:JM,91533:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768
92080 :: CALL :: call :: I :: v202 = v154.size()::JM,92084
92085 :: CALL :: call :: I :: v204 = v154.size()::JM,92093
92084 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,92085:CD,92089:CD,92093
92089 :: CALL :: call :: I :: v206 = v9.size()::JM,92093
92093 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,92094:CD,92101
92094 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,106540
92101 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,107961
92107 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,92110
92110 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,92114
92114 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,107981
92118 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,106191
92123 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,91634:DD,92125:CF,91617
92122 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,92123:DD,91617:DD,92124
92125 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,92126:DD,92123:DD,92125
92124 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,92125:JM,91578:DD,91610:DD,92122:DD,92124
92127 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,91683:JM,91973:JM,91527:JM,91623:JM,91911:JM,91563:JM,91533:JM,91567:JM,92078:JM,91573:JM,91609:JM,91640:JM,91768:DD,91912:DD,92007:JM,92019:DD,92079:DD,92127
92126 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,92127:JM,92084:JM,92093:DD,92126
92473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,92478
92478 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
92485 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,126408:JM,140549:JM,140700:JM,142620
92484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,92485:CD,92491
92488 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,92491
92491 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,92485
92493 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,92498
92498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
92515 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,141737:JM,141769
92514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,92515:CD,92521
92518 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,92521
92521 :: NORM :: compound :: Ljava/util/List :: return v3::CF,92515
92523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,92529:CD,92535:CD,92549:CD,92553:JM,92554
92529 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
92535 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,92553:JM,92554
92540 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,92553
92545 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,108142
92549 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,92553
92553 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,92540:CD,92545:CD,92549:JM,92553
92554 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
92599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,92604
92604 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
92611 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,138174
92610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,92611:CD,92617:CD,92682
92614 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,92617
92617 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,92621:CD,92625:CD,92631:CD,92641:CD,92674:CD,92678
92618 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,92625
92621 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,92625
92625 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,92631:CD,92641:CD,92674:CD,92678
92631 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,92635:CL,108168
92635 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
92638 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,92678
92641 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,92678
92646 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,92678
92651 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,92673:CL,108192
92655 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,92673
92660 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,92673
92665 :: CALL :: call :: V :: v29.setCompound(v20)::CL,108201
92669 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,92673
92673 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,92660:CD,92665:CD,92669:JM,92673:JM,92678
92674 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,92678
92679 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,92682
92678 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,92646:CD,92651:CD,92655:CD,92669:CD,92673:CD,92674:JM,92678
92682 :: NORM :: compound :: Ljava/util/List :: return v31::DD,92611
92707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,92712
92712 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
92727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,92732
92732 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
92739 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,138265:JM,138553:JM,142000:JM,141931
92738 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,92739:CD,92745
92742 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,92745
92745 :: NORM :: compound :: Ljava/util/List :: return v3::CF,92739
92747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,92752
92752 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
92758 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,92763:CD,92777:CD,92781:CD,92785
92763 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,92781
92768 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,92781
92773 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,108212
92777 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,92781
92781 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,92768:CD,92773:CD,92777:JM,92781
92782 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
92785 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,92781
92803 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,89759
92802 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,92803:CD,92809
92806 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,92809
92809 :: NORM :: compound :: Ljava/util/List :: return v3::CF,92803
92811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,92818:CD,92824:CD,92838:CD,92842:CD,92846:CD,92850
92818 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
92824 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,92842
92829 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,92842
92834 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,108212
92838 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,92842
92843 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,92850
92842 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,92829:CD,92834:CD,92838:JM,92842
92846 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,92850
92851 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
92850 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,92854:CD,92863
92854 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,92842
92860 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
92863 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,92842
92889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,92890:CD,92896
92890 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,89749
92893 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,92896
92896 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,92890
92917 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,143621
92916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,92917:CD,92925:CD,92930:CD,92931:CD,92936:CD,92937
92922 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,92930
92925 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,92930:JM,92936
92931 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,92936:JM,92930
92930 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,92936
92937 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,92917
92936 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,92937
92943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,92948
92948 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
92989 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,119681
92988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,92989:CD,92994:CD,92999:CD,93004:CD,93008:CD,93009:CD,93013:CD,93018:CD,93019:CD,93020:CD,93026:CD,93031:CD,93036:CD,93041:CD,93049:CD,93054
92994 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,93008:CL,108223
92999 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,93008
93004 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,93008
93009 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,93018:CL,70427
93008 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,93019
93013 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,93018
93019 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,92989
93018 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,93004:CD,93008:CD,93009:CD,93013:CD,93020:CF,93019
93020 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,93008
93026 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
93031 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,93018
93036 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
93041 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
93046 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
93049 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
93054 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
93312 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
93315 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,93317
93317 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
93320 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,93324
93324 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
93327 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,93331
93331 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
93334 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,93338
93338 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
93341 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
93358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,93363
93363 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
93439 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,120775:JM,120710:JM,120718:JM,120928:JM,120871:JM,120863:JM,123271
93438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,93439:CD,93445
93442 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,93445
93445 :: NORM :: compound :: Ljava/util/List :: return v3::CF,93439
93447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,93452:CD,93466:CD,93470:JM,93471
93452 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,93471:JM,93470
93457 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,93470
93462 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,98063
93466 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,93470
93471 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
93470 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,93457:CD,93462:CD,93466:JM,93470
93494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,93499
93499 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
93505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,93510:CD,93514:CD,93518:CD,93532:CD,93536:CD,93540:CD,93545:CD,93549:CD,93554:CD,93686:JM,93664
93510 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,98063
93514 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,93536:CL,94640
93518 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,93536
93523 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,93536
93528 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,98063
93532 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,93536
93537 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
93536 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,93523:CD,93528:CD,93532:JM,93536
93540 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,93664
93545 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,93549:CL,70356
93549 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,93686:CD,93550
93550 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,93686:CL,70365
93555 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,93562
93554 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,93558:CD,93562:CD,93563:CD,93570:CD,93575
93558 :: CALL :: call :: I :: v27 = v25.size()::JM,93562
93563 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
93562 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
93570 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,93575
93575 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,93605:CD,93610:CD,93611:CD,93615:CD,93635:CD,93640:CD,93641:CD,93645:CD,93664:CD,93665:CD,93679
93599 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
93605 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,93610
93611 :: CALL :: call :: I :: v54 = v52.intValue()::
93610 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
93615 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
93629 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
93635 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,93640
93641 :: CALL :: call :: I :: v67 = v65.intValue()::
93640 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
93645 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
93665 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,93669
93664 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,93665
93669 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
93679 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
93686 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,93554
93747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,93748:CD,93754:CD,93758
93748 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,98139:JM,102506:JM,103887:JM,121586:JM,123338:JM,123418:JM,137800:JM,138121
93751 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,93758
93754 :: CALL :: call :: I :: v5 = v3.size()::JM,93758
93758 :: NORM :: compound :: I :: return v5::CF,93748
93760 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,93773:JM,90518:JM,90524:JM,90527
93773 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,90403
93786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,93796:CD,93800:CD,93805:CD,93812:CD,93817:CD,93860:CD,93868:CD,93873:CD,93882:JM,90518:JM,90524:JM,90527:CD,93913:CD,93914
93796 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,91110
93800 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,93805
93805 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,93913:CD,93806:CD,93811
93806 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,93811
93811 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,93913
93812 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,93817
93817 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,93818:CD,93824:CD,93829:CD,93834:CD,93914
93818 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
93824 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,90403
93829 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,93834
93835 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,93853:CF,93836
93834 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,93914:CD,93835:CD,93836:CD,93837:CD,93853
93837 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
93836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,93849
93849 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
93853 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,93853
93860 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
93868 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
93873 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
93882 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,93901
93901 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,89779
93913 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,93914
93914 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,93882
93957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,93970:JM,90518:JM,90524:JM,90527
93970 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,108281
93983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,93987:CD,93991:CD,93995:CD,93999:CD,94003:CD,94004:CD,94009:CD,94013:CD,94017:CD,94047:CD,94051:CD,94053:JM,90518:JM,90524:JM,90527
93987 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
93991 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,108337
93995 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,94003:CL,108337
93999 :: CALL :: call :: I :: v10 = v8.length()::JM,94003
94003 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
94004 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
94009 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
94013 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,94051:CL,108346
94017 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,94051
94022 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,94051
94027 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
94042 :: CALL :: call :: Z :: v34 = v3.add(v27)::
94047 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,94051
94051 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,94022:CD,94027:JM,108400:JM,108386:CD,94042:CD,94047:JM,94051
94053 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,91005
94091 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
94094 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
94097 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
94100 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,94104
94104 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
94107 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,94111
94111 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
94114 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
94117 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
94120 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
94123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,94127
94125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,94127
94127 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,94128
94128 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,94132
94132 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
94136 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
94172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,94177
94177 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
94183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,94188
94188 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
94194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,94212
94212 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
94225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,94229:JM,79989:JM,79994:CD,94237:CD,94245:CD,94259:CD,94271:CD,94279:CD,94287:CD,94295:CD,94303:CD,94311
94229 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
94237 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,98227
94245 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,98238
94249 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,94252
94252 :: EXPR :: modify :: C :: v3.altLoc = v11::
94259 :: CALL :: call :: V :: v3.setCharge(v13)::CL,108453
94271 :: CALL :: call :: V :: v3.setX(v18)::CL,80036
94279 :: CALL :: call :: V :: v3.setY(v21)::CL,80052
94287 :: CALL :: call :: V :: v3.setZ(v24)::CL,80068
94295 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,98181
94303 :: CALL :: call :: V :: v3.setName(v30)::CL,98216
94311 :: CALL :: call :: V :: v3.setElement(v33)::CL,98293
94344 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,94349:CD,94356:CD,94361:CD,94365:CD,94373
94349 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,94525
94353 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
94356 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
94361 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,94365:CL,79754
94365 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,94366
94366 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,94172
94370 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,94373
94373 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,94381:CD,94387:CD,94388
94381 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,94387
94387 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,94388
94389 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,94485:JM,94397:CL,108473
94388 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,94389:CD,94393:CD,94397:CD,94419:CD,94424:CD,94428:CD,94433:CD,94438:CD,94443:CD,94448:CD,94452:CD,94457:CD,94462:CD,94466:CD,94471:CD,94476:CD,94485
94393 :: CALL :: call :: C :: v24 = v22.charValue()::JM,94485:JM,94397
94397 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,94485:CF,94398:CD,94403:CD,94408:CD,94413
94398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,94485
94403 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,94485
94408 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,94485
94413 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,94485
94419 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
94424 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,68780
94428 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
94433 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
94438 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
94443 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
94448 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,108494:CL,108782:CL,108684
94452 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
94457 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
94462 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,108464
94466 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
94471 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
94476 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
94485 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
94525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,94530
94530 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
94536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,94544:CD,94555
94541 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,94544
94545 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,94549
94544 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,94545
94549 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
94552 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
94555 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
94568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,94573
94573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
94586 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
94589 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
94598 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,94603
94603 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
94609 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,94610:CD,94616
94610 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,143905:JM,143706
94613 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,94616
94616 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,94610
94618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,94623
94623 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
94629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,94634
94634 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
94641 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,79280:JM,79289:JM,79317:JM,79440:JM,79449:JM,79477:JM,93536:JM,97762:JM,97873:JM,97913:JM,103866:JM,108622:JM,108656:JM,121058:JM,121048:JM,152640:JM,152600
94640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,94641:CD,94647
94644 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,94647
94647 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,94648:CD,94652:CD,94656
94648 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,94652
94653 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,94656
94652 :: NORM :: compound :: Ljava/util/List :: return v6::DD,94641
94656 :: NORM :: compound :: Ljava/util/List :: return v5::DD,94641
95088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,95102
95095 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
95098 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
95102 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
95213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,95214:CD,95220:CD,95224
95214 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,143738
95217 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,95224
95220 :: CALL :: call :: I :: v5 = v3.size()::JM,95224
95224 :: NORM :: compound :: I :: return v5::CF,95214
95227 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,133255:JM,133309:JM,143744
95226 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,95227:CD,95231:JM,95249:JM,95239
95231 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,95235:CD,95239:CD,95240
95232 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,95239
95235 :: CALL :: call :: I :: v7 = v5.size()::JM,95239
95239 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,95240:CD,95244:CD,95249:CD,95250
95241 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,95249
95240 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,95227
95244 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,95249:JM,95231
95249 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,95250
95250 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,95227
95259 :: EXIT :: exit :: Ljava/net/HttpURLConnection :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::JM,80704:JM,80690:JM,80711:JM,80694:JM,80699:JM,80698
95258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CE,95259:CD,95263:CD,95267:CD,95273:CD,95277:CD,95282:CD,95286:CD,95291:CD,95295:CD,95300:CD,95304:CD,95320:CD,95326:CD,95336:CD,95349:CD,95355:CD,95365:CD,95372:CD,95375
95263 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,95267
95267 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::DD,95375
95273 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
95277 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,95267
95282 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
95286 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
95291 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
95295 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,95267
95300 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
95304 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
95320 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
95326 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
95336 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
95349 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
95355 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
95365 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
95372 :: CALL :: call :: V :: v54.printStackTrace()::
95375 :: NORM :: compound :: Ljava/net/HttpURLConnection :: return v7::DD,95259
95424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,95434:CD,95435:CD,95440:CD,95445:CD,95454:CD,95459:CD,95465:CD,95473:CD,95475:CD,95489
95435 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
95434 :: NORM :: declaration :: Ljava/io/IOException :: v68 = new java.io.IOException::
95440 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
95445 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
95454 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,95500:JM,95535:CL,112951
95459 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,113163
95462 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
95465 :: CALL :: call :: I :: v13 = v11.ordinal()::
95469 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,95473
95473 :: PRED :: IF :: null :: switch v14::CD,95500:CD,95535:CD,95557:CD,95559
95475 :: NORM :: declaration :: Ljava/io/IOException :: v59 = new java.io.IOException::
95489 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
95500 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,95505:CD,95509:CD,95557:CD,95559
95505 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,95509:CL,113274
95509 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,95510:CD,95514:CD,95516:CD,95517
95510 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,95516
95514 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,95516
95517 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,95557:CD,95559
95516 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,95517
95535 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,95536:CD,95540:CD,95542:CD,95543:CD,95557:CD,95559
95536 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,95542
95540 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,95542
95543 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,95557:CD,95559
95542 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,95543
95554 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,95559
95557 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,95559
95559 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,95560:CD,95568:CD,95580:CD,95582
95560 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,113313
95568 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,113348
95577 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,95582
95580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,95582
95583 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,95589:CL,113559
95582 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,95583:CD,95587:CD,95589:CD,95605
95587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,95589
95589 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,95593:CD,95605
95593 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,113348
95605 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,113348
95679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,95683:CD,95687:CD,95694:CD,95698
95683 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,95734:JM,95706:CL,81892
95687 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
95694 :: CALL :: call :: Z :: v8 = v4.exists()::JM,95698
95698 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,95701:CD,95706:CD,95710:CD,95715:CD,95729:CD,95734:CD,95738:CD,95743:CD,95756:CD,95761:CD,95765:CD,95769:CD,95791:CD,95796:CD,95800:CD,95805:CD,95813:CD,95817:CD,95821:CD,95826:CD,95831
95701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
95706 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,95734:JM,95706
95710 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
95715 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
95729 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
95734 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,95734:JM,95706
95738 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
95743 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
95756 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
95761 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,95765
95765 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,95766
95766 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
95769 :: CALL :: call :: V :: v23.close()::
95791 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
95796 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,95734:JM,95706
95800 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
95805 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
95810 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
95813 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
95817 :: CALL :: call :: I :: v52 = v50.size()::
95821 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
95826 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
95831 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
95875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,95876:CD,95879:CD,95881:CD,95885:CD,95886:CD,95894:CD,95899:CD,95901:CD,95904:CD,95906
95876 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,81009:JM,80981:JM,81013:JM,81014:JM,81000:JM,80987:JM,81019:JM,81051:JM,81004:JM,81055:JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,95978:JM,96010:JM,95997
95879 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,95894:JM,95881:JM,95899
95881 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,95894:JM,95881:JM,95899
95885 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,95894:JM,95899
95886 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
95894 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,95894:JM,95899
95899 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,95906
95901 :: CALL :: call :: V :: v14.printStackTrace()::
95904 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,95876
95906 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,95904
95917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,95921
95921 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,113795
95929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,95934:CD,95938:CD,95946:CD,95951:CD,95966:CD,95970:CD,95974:CD,95978:CD,95984:CD,95988:CD,95997:CD,96001:CD,96048:CD,96052:CD,96056:CD,96064:CD,96069:CD,96078:CD,96079:CD,96087:CD,96092:CD,96103
95934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
95938 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
95946 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
95951 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
95966 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,81527
95970 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,71814
95974 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,95978:JM,96010:JM,95997:CL,95875
95978 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,95978:JM,96010:JM,95997
95984 :: CALL :: call :: I :: v30 = v26.size()::JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,96010:JM,95997
95988 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,96001:JM,96016:JM,96048:JM,96052:JM,96006:JM,96010
95997 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,96010:JM,95997
96001 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,96001:JM,96016:JM,96048:JM,96052:JM,96006:JM,96010
96006 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,96048:JM,96052:JM,96006:JM,96010
96011 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,96001:JM,95984:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,96010:JM,95997
96010 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,96001:JM,96016:JM,96048:JM,96052:JM,96006:JM,96011:JM,96010:JM,95984:JM,95997
96017 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,96017:JM,96026
96016 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,96017:JM,96026
96022 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
96026 :: EXPR :: assign :: I :: v52 = v49.length::DD,96038
96032 :: CALL :: call :: Z :: v55 = v50.add(v53)::
96037 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,96104
96038 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,96032:CD,96037:CD,96104
96042 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
96048 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,96048:JM,96052:JM,96006:JM,96010
96052 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,96006:CD,96010:CD,96011:CD,96016:CD,96017:CD,96022:CD,96026:CD,96038:CD,96042:CD,96048:CD,96104:JM,96052
96056 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
96061 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
96064 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
96069 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
96079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
96078 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v74 = new java.lang.IllegalArgumentException::
96084 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
96087 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
96092 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
96103 :: EXPR :: assign :: Ljava/lang/Exception :: v62 = catch <exc>::
96104 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,96037:DD,96038
96174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.toCanonical()::CD,96182:JM,90518:JM,90524:JM,90527
96182 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
96195 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,96196:CD,96199:CD,96203:CD,96208:CD,96212
96196 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,81244
96199 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,113915
96203 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
96208 :: CALL :: call :: Z :: v8 = v5.exists()::JM,96212
96213 :: CALL :: call :: J :: v11 = v5.length()::JM,96217
96212 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,96213:CD,96217:CD,96218:CD,96220
96217 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,96218
96219 :: NORM :: compound :: Z :: return #(1)::DD,96196
96218 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,96219:CD,96220
96220 :: NORM :: compound :: Z :: return #(0)::DD,96196
96233 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,96240:CD,96244:CD,96251:CD,96256:CD,96265:CD,96274:CD,96278:CD,96283:CD,96289:CD,96294:CD,96301:CD,96302
96237 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,96244
96240 :: CALL :: call :: I :: v5 = v3.size()::JM,96244
96245 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,113983
96244 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,96245
96248 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
96251 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
96256 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
96265 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,114043:CL,114067
96274 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,113915
96278 :: NORM :: declaration :: Ljava/io/File :: v25 = new java.io.File::
96283 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,114105
96289 :: CALL :: call :: Z :: v13 = v11.hasNext()::
96294 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
96301 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,96302
96302 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
96325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,96329:CD,96330:CD,96342:CD,96343:CD,96357
96329 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
96330 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,113915
96343 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
96342 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,96343
96357 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,114154
96392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,96397
96397 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
96412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,96417
96417 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
96432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,96437
96437 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
96452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,96457
96457 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
96472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,96477
96477 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
96492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,96497
96497 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
96512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,96517
96517 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
96532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,96537
96537 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
96543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,96548
96548 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
96563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,96568
96568 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
96583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,96588
96588 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
96603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,96608
96608 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
96615 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,81705:JM,90871:JM,90758
96614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,96615:CD,96618:CD,96620:CD,96624:CD,96625:CD,96633:CD,96638:CD,96639:CD,96644:CD,96651:CD,96652
96618 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,96633:JM,96620:JM,96638
96620 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,96633:JM,96620:JM,96638
96625 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
96624 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,96633:JM,96638
96633 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,96633:JM,96638
96639 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,96651:JM,96639
96638 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,96651:JM,96639
96644 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
96651 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,96615
96652 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
96765 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
96764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,96765:CD,96770:CD,96775
96770 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,96775:CL,114661
96775 :: NORM :: compound :: I :: return v6::CF,96765
96779 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
96778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,96779:CD,96784:CD,96789
96784 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,96789:CL,114875
96789 :: NORM :: compound :: I :: return v6::DD,96779
97463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,97464:CD,97488:CD,97492:CD,97494:JM,97475:JM,97485
97464 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,83681:JM,82895:JM,84074:JM,84158:JM,84324:JM,88898
97470 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,97475:JM,97492:JM,97485
97475 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,97486
97476 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,97485:CL,70427
97480 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,97475:JM,97492:JM,97485
97485 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,97486:CD,97487:CD,97488:CD,97492:CD,97494
97487 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,97494
97486 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,97464
97488 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,97475:JM,97492:JM,97485
97493 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,97464
97492 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,97470:CD,97475:CD,97476:CD,97480:CD,97485:CD,97493:JM,97492
97494 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,97475:JM,97485:DD,97487:DD,97492
97519 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
97522 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
97525 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
97537 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,84111:JM,98003
97536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,97537:CD,97543:CD,97547:JM,97558:JM,97563
97543 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,97557:JM,97547:CL,115168
97547 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,97548:CD,97552:CD,97556:CD,97558:CD,97587:CD,97588
97548 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,115401
97552 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,97556:CL,115461
97557 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,97537
97556 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,97557:CD,97558:CD,97587:CD,97588
97559 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,97563
97558 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,97564:CD,97559:CD,97563:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,97588
97563 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,97564:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,97569:CD,97573:CD,97588
97564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,97588
97569 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,97573:CL,79020
97573 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,97579:CF,97574:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,97583:CD,97588
97574 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,97588
97579 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,97588
97583 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,94618
97587 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,97537
97588 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,97587
97614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,97619:CD,97623:CD,97628:JM,97670
97619 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,97628:CL,58663
97623 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,97628
97628 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,97630:CD,97634:CD,97657:CD,97684
97630 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,97634:CL,115401
97635 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,97641:JM,97646:CL,58210:CL,58226:CL,58218
97634 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,97635:CD,97639:CD,97641:CD,97646:CD,97648:CD,97652:CD,97656:CD,97684
97639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,97641:JM,97646
97641 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,97641:JM,97646
97646 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,97684
97648 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,115401
97652 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,97656:CL,115495
97657 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,97661:CD,97665:CD,97670
97656 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,97684
97661 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,97670:CL,115504
97665 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,97670
97670 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,97674:CD,97678
97674 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,115504
97678 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,97670
97684 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,97657
97708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,97715:CD,97716:CD,97727:CD,97728:CD,97736:CD,97740:CD,97763:CD,97777
97712 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,97715
97715 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,97716
97717 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,97720
97716 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,97720:CD,97721
97721 :: CALL :: call :: V :: v7.trimToSize()::
97720 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
97724 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,97727
97727 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,97728
97729 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,97732
97728 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,97732:CD,97733
97733 :: CALL :: call :: V :: v12.trimToSize()::
97732 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
97736 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,97740:CL,115513
97741 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,97762:CL,94640
97740 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,97741:CD,97745:CD,97758:CD,97762:CF,97763
97745 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,97762
97750 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,97762
97755 :: CALL :: call :: V :: v24.trimToSize()::CL,97708
97758 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,97762
97763 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,97771
97762 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,97750:CD,97755:CD,97758:JM,97762:CF,97763
97771 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
97774 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,97777
97777 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,97778
97778 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,97786
97786 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
97817 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,97818:CD,97828:CD,97832:CD,97836:JM,97852:JM,97902:JM,97926
97818 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,83685
97828 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,97836:CL,115540
97832 :: CALL :: call :: I :: v11 = v9.size()::JM,97836
97837 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,97836
97836 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,97837:CD,97843:CD,97847:CD,97852:CD,97860:CD,97864:CD,97909:CD,97913:JM,97836
97843 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,97852:CL,108473
97847 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,97852:JM,97902
97853 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,97856
97852 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,97856:CD,97860:CD,97864:CD,97909:CD,97913
97856 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,97818
97860 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,97873:JM,97913:CL,94640
97864 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,97873:JM,97913
97869 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,97873:JM,97913
97873 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,97903
97874 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,97908:JM,97882:CL,115540
97878 :: CALL :: call :: I :: v33 = v31.size()::JM,97908:JM,97882
97883 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,97908:JM,97882
97882 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,97883:CD,97904:CD,97908:CD,97909:CD,97913:JM,97882:JM,97873
97888 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,97908
97893 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,97902:CL,108473
97897 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,97902:JM,97852
97903 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,97818
97902 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,97903:CD,97904:CD,97908
97904 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,97908
97909 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,97873:JM,97913
97908 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,97888:CD,97893:CD,97897:CD,97902:CD,97909:CD,97913:JM,97908:JM,97873
97913 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,97869:CD,97873:CD,97874:CD,97878:CD,97882:CD,97917:CD,97921:CD,97926:JM,97913
97917 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,97926:CL,58663
97921 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,97926
97926 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,97930:CD,97934:CD,97938:CD,97974:CD,97981:CD,97992:CD,97999:CD,98003
97930 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,97938:CL,115540
97934 :: CALL :: call :: I :: v64 = v62.size()::JM,97938
97939 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,97942
97938 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,97942:CD,97946:CD,97950:CD,97951:CD,97955:CD,97959:CD,97963:CD,97969:CD,97973
97942 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,97818
97946 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,97950:CL,79373:CL,79198:CL,79056
97951 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
97950 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,97973:CF,97951
97955 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,115549
97959 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,94640
97963 :: CALL :: call :: V :: v73.clear()::
97969 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,94536
97973 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,97818
97974 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,98003:CL,97536
97981 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,94598:CL,94194
97992 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,94183
97999 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,94536
98003 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,97818
98063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,98074:JM,98068
98068 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
98071 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,98074
98074 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,98082
98082 :: CALL :: call :: V :: v6.setChainId(v8)::CL,92943
98093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,98103:CD,98135:CD,98139:CD,98143:CD,98151
98097 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
98103 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,115635
98114 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,58116
98119 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,115635
98126 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,92811
98131 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,98151
98135 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,98139:CL,93747
98139 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,98114:CD,98119:CD,98126:CD,98131:CD,98135:CD,98151
98143 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,115682
98151 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,98131:DD,98139
98173 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,83397:JM,83405
98172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,98173:CD,98179
98176 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,98179
98179 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,98173
98181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,98186
98186 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
98192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,98197:JM,98206
98197 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,98202:JM,98197:JM,98206
98198 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
98202 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,98197:JM,98206
98206 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
98216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,98221
98221 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
98227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,98232
98232 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
98238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,98243
98243 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
98249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,98255:CD,98259:CD,98267:CD,98268:CD,98273:CD,98278
98255 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
98259 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
98267 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
98268 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
98273 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
98278 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
98293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,98298
98298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
98304 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,98309
98309 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
98315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,98320
98320 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
98326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,98331
98331 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
98337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,98338:CD,98344
98338 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,84663:JM,143023
98341 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,98344
98344 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,98338
98346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,98351
98351 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
98357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,98358:CD,98364
98358 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,84755:JM,84761:JM,84767
98361 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,98364
98364 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,98358
98366 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,98371
98371 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
98377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,98382:CD,98386
98382 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,98386:JM,98392:JM,98396:CL,115844
98386 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,98391
98388 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,98391
98391 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,98392:JM,98396
98392 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,98392:JM,98396
98396 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
98430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,98435
98435 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
98441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,98446
98446 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
98452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,98457
98457 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
98463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,98468:JM,98475:CD,98471
98468 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
98471 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,98471:JM,98475
98475 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
98483 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,98488:JM,98495:CD,98491
98488 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
98491 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,98491:JM,98495
98495 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
98503 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,98515:JM,98508:CD,98511
98508 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
98511 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,98515:JM,98511
98515 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
98523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,98524:CD,98527:CD,98531:CD,98532
98524 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,85232:JM,140995
98527 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,98531:CL,115859
98531 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,98532
98533 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,98537:CL,115868
98532 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,98533:CD,98537:CD,98538:CD,98546
98537 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,98538
98539 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,98543:CL,115877
98538 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,98539:CD,98543:CD,98544:CD,98546
98543 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,98544
98545 :: NORM :: compound :: Z :: return #(0)::CF,98524
98544 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,98545:CD,98546
98546 :: NORM :: compound :: Z :: return #(1)::CF,98524
98558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,98563
98563 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
98569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,98570:CD,98573:JM,98578:JM,98628:JM,98585
98570 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,85256:JM,141116
98573 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,98574:CD,98578:CD,98579:JM,98628:JM,98585
98574 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,98578:JM,98628:JM,98585
98579 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,98570
98578 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,98579:CD,98580:CD,98585:CD,98586:CD,98587:CD,98593:CD,98601:CD,98606:CD,98610:CD,98615:CD,98621:CD,98626:CD,98627:CD,98628:JM,98578
98580 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,98578:JM,98628:JM,98585
98585 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,98628
98587 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
98586 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
98593 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
98601 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
98606 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
98610 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
98615 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
98621 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,98626
98627 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,98570
98626 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,98627
98628 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,98586
98648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,98653
98653 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
98659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,98664
98664 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
98670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,98678:CD,98682
98678 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,98682:CL,89387
98682 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,98684:CD,98689:CD,98694:CD,98695
98684 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
98689 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,98694
98695 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,98700:CD,98705:CD,98859:CD,98864:CD,98909:CD,98914
98694 :: EXPR :: assign :: I :: v14 = v13.length::DD,98695
98696 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,98705
98700 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,98705
98705 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,98710:CD,98716:CD,98721:CD,98726:CD,98731:CD,98742:CD,98747:CD,98754
98706 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,98767
98710 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,98767
98716 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
98721 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,98767
98726 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,98767
98731 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
98742 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,98747
98747 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,98748
98748 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
98751 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,98754
98754 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,98758:CD,98762:CD,98767:CD,98769:JM,115920:JM,115907:JM,115923:CD,98794:CD,98802:CD,98810:CD,98815:CD,98825:CD,98833:CD,98837:CD,98842:CD,98847
98758 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,98767:CL,115886
98762 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,98767
98767 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,98769:JM,115920:JM,115907:JM,115923:CD,98794:CD,98802:CD,98810:CD,98815:CD,98825:CD,98833:CD,98837:CD,98842:CD,98847
98769 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
98794 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
98802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
98810 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
98815 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
98825 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
98830 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
98833 :: CALL :: call :: I :: v74 = v72.size()::
98837 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
98842 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
98847 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
98855 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,98864
98859 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,98864
98865 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
98864 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,98869:CD,98875:CD,98880:CD,98885:CD,98890:CD,98901
98869 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
98875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
98880 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
98885 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
98890 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
98901 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,115940
98905 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,98914
98909 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,98914
98915 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
98914 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,98919:CD,98925:CD,98930:CD,98935:CD,98940:CD,98951:CD,98957:CD,98965:CD,98969:CD,98974:CD,98987
98919 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
98925 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
98930 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
98935 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
98940 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
98951 :: CALL :: call :: V :: v121.setDescription(v109)::CL,115951
98957 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
98965 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,115886
98969 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
98974 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
98987 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,115962
99071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,99072:CD,99078
99072 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,85771:JM,123470
99075 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,99078
99078 :: NORM :: compound :: Z :: return v3::CF,99072
99087 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
99090 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,99094
99094 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
99097 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
99100 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
99103 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,99107
99107 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
99110 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
99127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,99132:CD,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99132 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99137 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,99138:CD,99141:CD,99146:CD,99150:CD,99154:CD,99162:CD,99167
99138 :: CALL :: call :: V :: p0 $this .initialize()::CL,115984
99141 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99146 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99150 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,99158
99154 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,99158
99158 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
99162 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,99167
99167 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,99168:CD,99173:CD,99174
99168 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,99173
99173 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,99174:CD,99183:CD,99188:JM,99137:JM,99205:JM,99239:JM,99222:JM,99158:JM,99228
99174 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,99179:CL,116030
99179 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
99183 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99189 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
99188 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,99192:CD,99195:CD,99200:CD,99205:JM,99137:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99192 :: CALL :: call :: V :: v39.clear()::
99195 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,116075
99200 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99205 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,99209:CD,99212:CD,99217:CD,99222:JM,99137:JM,99205:JM,99188:JM,99239:JM,99158:JM,99228
99206 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
99209 :: CALL :: call :: V :: v36.clear()::
99212 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,116075
99217 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99223 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99222 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,99223:CD,99228:CD,99234:CD,99239:JM,99137:JM,99205:JM,99188:JM,99222:JM,99158
99229 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,116075
99228 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,99229:CD,99234:CD,99239:JM,99137:JM,99205:JM,99188:JM,99222:JM,99158:JM,99228
99234 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,99137:JM,99205:JM,99188:JM,99239:JM,99222:JM,99158:JM,99228
99239 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,99240:CD,99245
99240 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,99245:CL,116126
99245 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,99246:CD,99252
99246 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,116282
99249 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,99252
99253 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
99252 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,99253
99303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,99304:CD,99310
99304 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,85930:JM,85947:JM,142668:JM,142681
99307 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,99310
99310 :: NORM :: compound :: F :: return v3::CF,99304
99312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,99317
99317 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
99323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,99324:CD,99330:CD,99336:CD,99340:CD,99345:CD,99355:CD,99356:JM,99350
99324 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,86178:JM,86185:JM,86192:JM,86199:JM,86206:JM,86213:JM,86220:JM,86227:JM,86234:JM,86241
99330 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,99345:JM,99350
99336 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,99345:JM,99350
99340 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,99345:JM,99350
99345 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,99356:CD,99346:CD,99350:JM,99345
99346 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,99345:JM,99350
99350 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,99350:DD,99356
99355 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,99324
99356 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,99355
99373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,99374:CD,99380
99374 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,86435
99377 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,99380
99380 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,99374
99409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,99414
99414 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
99427 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
99430 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
99433 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
99436 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
99449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,99454
99454 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
99460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,99465
99465 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
99517 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,99522
99522 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
99528 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,99533
99533 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
99539 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,99544
99544 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
99550 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,99555
99555 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
99561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,99566
99566 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
99572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,99577
99577 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
99583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,99588
99588 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
99594 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,99599
99599 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
99605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,99610
99610 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
99616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,99621
99621 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
99627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,99632
99632 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
99647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,99652
99652 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
99658 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,99663
99663 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
99842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,99849:CD,99857:CD,99862:CD,99872:CD,99880:CD,99885:CD,99895:CD,99903:CD,99908:CD,99918:CD,99926:CD,99931:CD,99942:CD,99949:CD,99953:CD,99959:CD,99963:CD,99968:CD,99969:CD,100289
99849 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
99854 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
99857 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
99862 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
99872 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
99877 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
99880 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
99885 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
99895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
99900 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
99903 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
99908 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
99918 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
99926 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
99931 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
99939 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,99942
99943 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,100289
99942 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,100289:CD,99943
99949 :: CALL :: call :: I :: v52 = v49.length()::
99953 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
99959 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
99963 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,99968
99969 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,99970:CD,99976:CD,99981:CD,100005
99968 :: EXPR :: assign :: I :: v60 = v59.length::DD,99969:DD,100005
99970 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,99981
99972 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,99981
99976 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,99981
99981 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,99992:CD,99997:CD,100005:CD,100026:CD,100032:CD,100036:CD,100250:CD,100254:CD,100258
99982 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,99986
99986 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
99989 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,99997
99992 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,99997
99997 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
99998 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,100001
100001 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
100005 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,100010:CD,100015:CD,100026:CD,100032:CD,100036:CD,100250:CD,100254:CD,100258
100006 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,100015
100010 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,100015
100015 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,100026:CD,100032:CD,100036:CD,100250:CD,100254:CD,100258
100026 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
100032 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
100036 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,100200:JM,100254
100042 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,100200
100046 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,100054
100049 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,100054
100055 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,100058
100054 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
100058 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
100061 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,100072
100064 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,100072
100067 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,100072
100073 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,100083
100072 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,100073:CD,100078:CD,100083
100075 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,100083
100078 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,100083
100083 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,100086:CD,100094:CD,100099:CD,100109:CD,100114:CD,100119:CD,100130:CD,100131:CD,100139:CD,100144:CD,100148:CD,100158:CD,100166:CD,100171
100086 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
100091 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
100094 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
100099 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
100109 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
100114 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,100200
100119 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
100127 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,100153
100131 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
100130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,100153
100139 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,100153
100144 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,100153
100148 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,100153
100153 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
100158 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
100163 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
100166 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
100171 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
100179 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,100190
100182 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,100190
100185 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,100190
100191 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,100199
100190 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,100194:CD,100199
100194 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,100199
100199 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,100210:CD,100221:CD,100222:CD,100230:CD,100235
100200 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
100210 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,116472
100215 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,100218
100218 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
100221 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,100239
100222 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
100230 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,100239
100235 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,100239
100239 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
100250 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,100254
100255 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,100258
100254 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,100042:CD,100049:CD,100054:CD,100067:CD,100072:CD,100185:CD,100190:CD,100250:JM,100200
100258 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,100265:CD,100276
100265 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,116472
100273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,100276
100277 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
100276 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,100283
100280 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
100283 :: CALL :: call :: Z :: v173 = v170.add(v171)::
100289 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
100412 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
100415 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
100418 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
100421 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
100424 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
100427 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
100430 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
100433 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
100436 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
100439 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
100442 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
100445 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
100448 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
100451 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
100454 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
100457 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
100460 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
100463 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
100466 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
100469 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
100472 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
100475 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
100478 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
100481 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
100484 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
100487 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
100490 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
100493 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
100496 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
100499 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
100502 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
100505 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
100508 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
100511 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
100514 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
100517 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
100520 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
100523 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
100526 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
100529 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
100532 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
100535 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
100538 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
100541 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,100545
100545 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
100548 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,100552
100552 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
100555 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
100652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,100657:CD,100663:CD,100669:CD,100674:CD,100679:CD,100689:CD,100697:CD,100702:CD,100712:CD,100720:CD,100725:CD,100735:CD,100743:CD,100748:CD,100758:CD,100766:CD,100771:CD,100779:CD,100783:CD,100790:CD,100794:CD,100802:CD,100807:CD,100812:CD,100817:CD,100825:CD,100834:CD,100839:CD,100945:CD,100951:CD,100955:CD,101149:CD,101153:CD,101157:CD,101173:JM,100917
100657 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,101173:JM,100917:JM,100783
100663 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,101173:JM,100917:JM,100783
100669 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
100674 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,100917
100679 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,100917
100689 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
100694 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
100697 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
100702 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
100712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
100717 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
100720 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
100725 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
100735 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
100740 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
100743 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
100748 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
100758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
100766 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
100771 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
100779 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,101173:JM,100917:JM,100783
100783 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,101173:CD,100784:JM,100917:JM,100783
100784 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,101173:JM,100917:JM,100783
100790 :: CALL :: call :: I :: v67 = v65.length()::
100794 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
100802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
100807 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
100812 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
100817 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
100825 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,100875
100830 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,100839
100834 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,100839
100839 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,100840:CD,100846:CD,100851:CD,100875:CD,100876
100840 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,100851
100842 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,100851
100846 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,100851
100851 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,100862:CD,100867:CD,100875:CD,100876
100852 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,100856
100856 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
100859 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,100867
100862 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,100867
100867 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
100868 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,100871
100871 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
100875 :: EXPR :: assign :: I :: v93 = v84.length::DD,100876
100877 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,100888
100876 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,100877:CD,100883:CD,100888:CD,100912:CD,100917
100879 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,100888
100883 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,100888
100889 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,100893
100888 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,100899:CD,100904:CD,100912:CD,100917
100893 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
100896 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,100904
100899 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,100904
100905 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,100908
100904 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
100908 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
100912 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,100917
100917 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,100930:CD,100935
100924 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
100927 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,100935
100930 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,100935
100935 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
100936 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,100939
100939 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
100945 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
100951 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
100955 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,101099:JM,101153
100961 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,101099
100965 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,100973
100968 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,100973
100973 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
100974 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,100977
100977 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
100980 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,100991
100983 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,100991
100986 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,100991
100991 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,100992:CD,100997:CD,101002
100992 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,101002
100994 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,101002
100997 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,101002
101002 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,101005:CD,101013:CD,101018:CD,101029:CD,101030:CD,101038:CD,101043:CD,101047:CD,101057:CD,101065:CD,101070
101005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
101010 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
101013 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
101018 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
101026 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,101052
101029 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,101052
101030 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
101038 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,101052
101043 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,101052
101047 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,101052
101052 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
101057 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
101062 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
101065 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
101070 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
101078 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,101089
101081 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,101089
101084 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,101089
101089 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,101093:CD,101098
101090 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,101098
101093 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,101098
101099 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
101098 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,101109:CD,101120:CD,101121:CD,101129:CD,101134
101109 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,116898
101114 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,101117
101117 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
101121 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
101120 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,101138
101129 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,101138
101134 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,101138
101138 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
101149 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,101153
101153 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,100961:CD,100968:CD,100973:CD,100986:CD,100991:CD,101084:CD,101089:CD,101149:JM,101099
101154 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,101157
101157 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,101164
101164 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,116898
101173 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
101318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,117602:JM,117595:CD,101335:CD,101339:CD,101343:CD,101347:CD,101351:CD,101355:CD,101359:CD,101363:CD,101370:CD,101885:CD,101889:CD,101893:CD,101897:CD,101902:CD,101909:CD,101913:CD,101918:CD,101925:CD,101929:CD,101934:JM,118272:JM,118208:JM,118213:JM,118084:JM,118404:JM,118089:JM,118409:JM,118379:JM,118188:JM,118094:JM,118193:JM,118228:JM,118102:JM,118233:JM,118107:JM,118395:JM,118396:JM,118140:JM,118079:CD,101950:CD,101957:CD,101961:CD,101966:CD,101985:CD,101996:CD,102007:CD,102014:CD,102018:CD,102022:CD,102029:CD,102033:CD,102037:CD,102044:CD,102048:CD,102052:CD,102059:CD,102063:CD,102067:CD,102074:CD,102078:CD,102082:CD,102097
101335 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
101339 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
101343 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
101347 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
101351 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
101355 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
101359 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
101363 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
101367 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,101889:JM,101379
101370 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,101889:JM,101379
101375 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,101889:JM,101379
101379 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,101384:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471:JM,101707
101380 :: CALL :: call :: I :: v34 = v32.length()::JM,101384
101384 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,101387:CD,101392:CD,101397:CD,101406:CD,101412:CD,101417:CD,101466:CD,101471:CD,101525:CD,101530:CD,101579:CD,101584:CD,101638:CD,101643:CD,101697:CD,101702:JM,101782:JM,101836
101387 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
101392 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
101397 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
101406 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101412 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101417 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,101418:CD,101422:CD,101428:CD,101432:CD,101439:CD,101444:CD,101448:CD,101453:CD,101458:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101418 :: CALL :: call :: I :: v44 = v32.length()::
101422 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
101428 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
101432 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
101439 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
101444 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
101448 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
101453 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
101458 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
101466 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101471 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,101472:CD,101476:CD,101482:CD,101486:CD,101491:CD,101498:CD,101503:CD,101507:CD,101512:CD,101517:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101472 :: CALL :: call :: I :: v69 = v32.length()::
101476 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
101482 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
101486 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
101491 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
101498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
101503 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
101507 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
101512 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
101517 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
101525 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101531 :: CALL :: call :: I :: v96 = v32.length()::
101530 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,101531:CD,101535:CD,101541:CD,101545:CD,101552:CD,101557:CD,101561:CD,101566:CD,101571:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101535 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
101541 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
101545 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
101552 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
101557 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
101561 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
101566 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
101571 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
101579 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101585 :: CALL :: call :: I :: v120 = v32.length()::
101584 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,101585:CD,101589:CD,101595:CD,101599:CD,101604:CD,101611:CD,101616:CD,101620:CD,101625:CD,101630:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101589 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
101595 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
101599 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
101604 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
101611 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
101616 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
101620 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
101625 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
101630 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
101638 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101643 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,101644:CD,101648:CD,101654:CD,101658:CD,101663:CD,101670:CD,101675:CD,101679:CD,101684:CD,101689:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101644 :: CALL :: call :: I :: v146 = v32.length()::
101648 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
101654 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
101658 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
101663 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
101670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
101675 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
101679 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
101684 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
101689 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
101697 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101703 :: CALL :: call :: I :: v172 = v32.length()::JM,101707
101702 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,101703:CD,101707:CD,101777:CD,101782:CD,101831:CD,101836:JM,101584:JM,101702:JM,101417:JM,101643:JM,101530:JM,101471
101707 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,101710:CD,101715:CD,101720:CD,101729:CD,101733:CD,101739:CD,101743:CD,101750:CD,101755:CD,101759:CD,101764:CD,101769:CD,101777:CD,101782:CD,101831:CD,101836
101710 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
101715 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
101720 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
101729 :: CALL :: call :: I :: v175 = v32.length()::
101733 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
101739 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
101743 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
101750 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
101755 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
101759 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
101764 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
101769 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
101777 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101783 :: CALL :: call :: I :: v199 = v32.length()::
101782 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,101783:CD,101787:CD,101793:CD,101797:CD,101804:CD,101809:CD,101813:CD,101818:CD,101823:JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101787 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
101793 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
101797 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
101804 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
101809 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
101813 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
101818 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
101823 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
101831 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,101584:JM,101702:JM,101782:JM,101417:JM,101643:JM,101530:JM,101836:JM,101471
101837 :: CALL :: call :: I :: v241 = v32.length()::
101836 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,101837:CD,101841:CD,101847:CD,101851:CD,101858:CD,101863:CD,101867:CD,101872:CD,101877:JM,101889:JM,101379
101841 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
101847 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
101851 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
101858 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
101863 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
101867 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
101872 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
101877 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
101885 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,101889:JM,101379
101889 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,101375:CD,101379:CD,101380:CD,101384:CD,101885:JM,101889
101893 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
101897 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,117655
101902 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,118031
101909 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
101913 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,117655
101918 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,118042
101925 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
101929 :: CALL :: call :: V :: v273.setRef(v275)::CL,118053
101934 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
101950 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,118592
101957 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,101966:CL,118603
101961 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,101966
101966 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,101974
101974 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,118612
101985 :: CALL :: call :: V :: v296.setVolume(v298)::CL,118637
101996 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,118658
102007 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,118679
102014 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
102018 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
102022 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,118690
102029 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
102033 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
102037 :: CALL :: call :: V :: v314.setTitle(v318)::CL,118701
102044 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
102048 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
102052 :: CALL :: call :: V :: v320.setRefn(v324)::CL,118712
102059 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
102063 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
102067 :: CALL :: call :: V :: v326.setPmid(v330)::CL,118723
102074 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
102078 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
102082 :: CALL :: call :: V :: v332.setDoi(v336)::CL,118734
102097 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,118745
102282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,102287
102287 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
102293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,102301
102301 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,119143
102308 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,102313
102313 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
102319 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,102320:CD,102326
102320 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,88988:JM,123026
102323 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,102326
102326 :: NORM :: compound :: Z :: return v3::CF,102320
102350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,102356:CD,102361:CD,102383:CD,102387
102356 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,58116
102361 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,102387
102366 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,102387
102371 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,102376:CL,119154
102376 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,102378
102378 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,119245
102383 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,102387
102387 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,102366:CD,102371:CD,102376:CD,102383:JM,102387
102406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,102502:CD,102506:CD,102509:JM,102427:JM,102428:JM,102495:JM,102494
102413 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,58116
102418 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,102427:JM,102428:JM,102495:JM,102494
102423 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,102427:JM,102494
102427 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,102428
102428 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,102433:CD,102437:CD,102441:CD,102445:CD,102451:CD,102456:CD,102508
102433 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,93447
102437 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
102441 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,119524
102445 :: CALL :: call :: Z :: v24 = v9.add(v16)::
102451 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,102456:CL,119154
102456 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,102461:CD,102468:CD,102473:CD,102477:CD,102482:CD,102508
102461 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,93447
102468 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
102473 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,70427
102477 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
102482 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
102490 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,102427:JM,102494
102495 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,102496:CF,102501
102494 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,102423:CD,102427:CD,102428:CD,102490:CD,102508:JM,102494:CF,102495
102496 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,119562
102501 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,102509
102502 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,102506:CL,93747
102506 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,102413:CD,102418:CD,102490:CD,102494:CD,102495:CD,102501:CD,102502:CD,102508:CD,102509
102509 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,102506:DD,102508
102508 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,102427:JM,102494:DD,102501:DD,102508
102549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,102557:CD,102642:CD,102646:CD,102650:CD,102654:CD,102704:CD,102788:CD,102792:CD,102796
102554 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,102646
102557 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,102646
102562 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,102646
102567 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
102574 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,119618
102578 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
102582 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,102587
102587 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,102588:JM,102637
102588 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,102590:CD,102633:CD,102637:CD,102638
102590 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,102637
102595 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,102637
102606 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,119627
102611 :: CALL :: call :: Z :: v39 = v13.add(v37)::
102633 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,102637
102637 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,102595:CD,102606:CD,102611:CD,102633:JM,102637
102638 :: CALL :: call :: V :: v12.setChains(v13)::CL,119642
102642 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,102646
102647 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,102654
102646 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,102562:CD,102567:CD,102574:CD,102578:CD,102582:CD,102587:CD,102588:CD,102642:JM,102646
102650 :: CALL :: call :: I :: v53 = v51.size()::JM,102654
102655 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
102654 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,102658:CD,102667:CD,102671:CD,102675:CD,102680
102658 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
102667 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,119618
102671 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
102675 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,102680
102681 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,102690:CL,108223
102680 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,102681:CD,102686:CD,102690
102686 :: CALL :: call :: I :: v69 = v67.size()::JM,102690
102691 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,102690
102690 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,102691:CD,102697:JM,102690
102697 :: CALL :: call :: V :: v58.addChain(v72)::CL,119653
102701 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,102792
102704 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,102792
102709 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,102792
102717 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,119618
102721 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
102725 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,102730
102730 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,102735:CD,102739:CD,102743:CD,102748:CD,102749:CD,102783:CD,102787
102735 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,119618
102739 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
102743 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,102748
102749 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,102787:JM,102758
102748 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,102787:JM,102758
102754 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,102787:JM,102758
102759 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,102764
102758 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,102764
102764 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,102766:CD,102771
102766 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,119670
102771 :: CALL :: call :: V :: v110.setCompound(v83)::CL,108201
102783 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,102787:JM,102758
102787 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,102754:CD,102758:CD,102759:CD,102764:CD,102783:JM,102787:JM,102792
102788 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,102792
102793 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,102796
102792 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,102709:CD,102717:CD,102721:CD,102725:CD,102730:CD,102788:JM,102792
102797 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,102804
102796 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,102800:CD,102804
102800 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,102804
102805 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,102880:CL,52102
102804 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,102805:CD,102809:CD,102876:CD,102880
102809 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,102880
102814 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,102880
102819 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,102823:CL,119685
102823 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,102824:JM,100548:JM,100541:CD,102828:CD,102835:CD,102840:CD,102844:CD,102851:CD,102862:CD,102866:JM,102880
102824 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
102828 :: CALL :: call :: V :: v134.addChain(v130)::CL,119653
102835 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,119694
102840 :: CALL :: call :: V :: v134.setMolId(v140)::CL,119715
102844 :: CALL :: call :: V :: v130.setCompound(v134)::CL,108201
102848 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
102851 :: CALL :: call :: Z :: v145 = v143.add(v134)::
102862 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,119618
102866 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
102876 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,102880
102880 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,102814:CD,102819:CD,102823:CD,102876:JM,102880
102986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,102993:CD,103194:CD,103199:CD,103204:CD,103209:CD,103214:CD,103222:CD,103227:CD,103232
102990 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,102993
102993 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,102997
102994 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,102997
102997 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,103008:CD,103012:CD,103016
103008 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,103016:CL,52102
103012 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,103016
103017 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
103016 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,103017:CD,103021:CD,103039:CD,103046:CD,103050:CD,103055:CD,103130:CD,103134:CD,103255:CD,103259:CD,103260:CD,103264:CD,103275
103018 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
103021 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
103036 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
103039 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
103043 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
103046 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
103050 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,103055
103055 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,103058:CD,103066:CD,103071:CD,103076:CD,103086:CD,103093:CD,103097:CD,103102:CD,103110:CD,103114:CD,103119
103058 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
103063 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
103066 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
103071 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
103076 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
103086 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
103090 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
103093 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
103097 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
103102 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
103107 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
103110 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
103114 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
103119 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
103127 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,103259
103130 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,103259
103134 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,103259
103139 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,103259
103147 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
103156 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,103161
103161 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,103162:JM,103254
103162 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,103164:CD,103250:CD,103254
103164 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,103254
103169 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,103254
103174 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,70365
103178 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,119726
103185 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,119735
103194 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
103199 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
103204 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
103209 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
103214 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
103219 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
103222 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
103227 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
103232 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
103241 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,119753
103245 :: CALL :: call :: Z :: v111 = v109.add(v83)::
103250 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,103254
103255 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,103259
103254 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,103169:CD,103174:CD,103178:CD,103185:CD,103241:CD,103245:CD,103250:JM,103254:JM,103259
103259 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,103260:CD,103139:CD,103147:CD,103156:CD,103161:CD,103162:CD,103255:JM,103259
103261 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
103260 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
103264 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
103275 :: CALL :: call :: V :: v117.setSites(v112)::CL,92747
103353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,103358
103358 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
103364 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,103369
103369 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
103375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,103380
103380 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
103407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,103412:CD,103416:CD,103421:CD,103519
103412 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,103421:CL,119762
103416 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,103421
103421 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,103422:CD,103426:CD,103431
103422 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,103431:CL,119771
103426 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,103431
103431 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,103457:CD,103491:JM,133378:JM,133381:JM,133375:JM,133372
103457 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,119825
103491 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,119825
103519 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,120044
103563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,103568:CD,103572:CD,103593:CD,103597:CD,103601
103568 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
103572 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,103597
103577 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,103597
103582 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,103587:CL,120562
103587 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,103588:JM,103597
103588 :: CALL :: call :: Z :: v18 = v4.add(v15)::
103593 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,103597
103597 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,103577:CD,103582:CD,103587:CD,103593:JM,103597
103601 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,92727
103624 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,103628:CD,103631:CD,103634:CD,103637
103628 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,120679
103631 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,120832
103634 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,120985
103637 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,121202
103645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,103728:CD,103733:CD,103738:CD,103743:CD,103883:CD,103887:CD,103895
103650 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,103881:CL,108223
103655 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,103881
103660 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,103881
103665 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,103876:CL,58133
103669 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,103876
103674 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,103876
103683 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,121312
103687 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,103700:JM,103871:CL,121443
103691 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,103700:JM,103871
103696 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,103700:JM,103871
103700 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,103715:JM,103714:JM,103720:JM,103710:JM,103759:JM,103798
103705 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,103829:CL,58309
103710 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,103715:JM,103714:JM,103720:JM,103710
103715 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,103715:JM,103720
103714 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,103715:CD,103720:CD,103793:CD,103798:CD,103802:CD,103807:CD,103812:CD,103816:CD,103821
103721 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,103715:JM,103720
103720 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,103721:CD,103754:CD,103759:CD,103763:CD,103768:CD,103773:CD,103777:CD,103782:JM,103715:JM,103720
103728 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
103733 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,103715:JM,103720
103738 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
103743 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
103754 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
103759 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,103759
103763 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
103768 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
103773 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,121452
103777 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
103782 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
103793 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
103798 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,103798
103802 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
103807 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
103812 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,121452
103816 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
103821 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
103829 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,103830
103830 :: CALL :: call :: V :: v40.setCharge(v97)::CL,108453
103834 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,103866:CL,94640
103838 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,103866
103843 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,103866
103852 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,103857:CL,58309
103857 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,103891:CD,103858
103858 :: CALL :: call :: V :: v111.setCharge(v97)::CL,108453
103862 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,103866
103867 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,103700:JM,103871
103866 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,103892:CD,103843:CD,103852:CD,103857:CD,103862:CD,103891:JM,103866
103871 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,103893:CD,103696:CD,103700:CD,103705:CD,103710:CD,103714:CD,103829:CD,103834:CD,103838:CD,103862:CD,103866:CD,103867:CD,103891:CD,103892:JM,103871
103872 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,103876
103877 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,103881
103876 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,103894:CD,103674:CD,103683:CD,103687:CD,103691:CD,103867:CD,103871:CD,103872:CD,103892:CD,103893:JM,103876
103881 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,103660:CD,103665:CD,103669:CD,103872:CD,103876:CD,103877:CD,103893:CD,103894:JM,103881:CF,103882
103883 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,103887:CL,93747
103882 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,103895
103887 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,103650:CD,103655:CD,103877:CD,103881:CD,103882:CD,103883:CD,103894:CD,103895
103891 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,103866:DD,103891:DD,103892
103893 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,103876:DD,103892:DD,103894
103892 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,103700:JM,103871:DD,103891:DD,103893
103895 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,103887:DD,103894
103894 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,103881:DD,103882:DD,103893
103962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,103969:CD,104152:CD,104156
103969 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,104156
103974 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,104156
103979 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,103984
103985 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
103984 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,104053
103991 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,103996
103997 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,104002
103996 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,104020:DD,104158
104003 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
104002 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,104113
104009 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,104014
104015 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,104020
104014 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,104026:DD,104159:JM,104020
104021 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,104026
104020 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,104158
104026 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,104159
104036 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,104270
104044 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,104053:CL,70427
104048 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,104053
104053 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,104160:CF,104054:CD,104055:CD,104063:CD,104068:CD,104076:CD,104080:CD,104085
104055 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
104054 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,104085
104063 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,104085
104068 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,104085
104076 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,104085:CL,70365
104080 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,104085
104085 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,104160
104087 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,104091:CL,104297
104086 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,104087:CD,104091
104091 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::CD,104099
104099 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,104384
104104 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,104113:CL,70427
104108 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,104113
104113 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,104161:CF,104114:CD,104115:CD,104123:CD,104128:CD,104136:CD,104140:CD,104145:CD,104147:CD,104151
104115 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
104114 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,104145
104123 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,104145
104128 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,104145
104136 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,104145:CL,70365
104140 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,104145
104145 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,104161:CD,104147:CD,104151
104147 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,104151:CL,104404
104151 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,104036:CD,104044:CD,104048:CD,104053:CD,104086:CD,104104:CD,104108:CD,104113:CD,104160:CD,104161:JM,104156
104152 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,104156
104156 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,103974:CD,103979:CD,103984:CD,103985:CD,103991:CD,103996:CD,103997:CD,104002:CD,104003:CD,104009:CD,104014:CD,104015:CD,104020:CD,104021:CD,104026:CD,104147:CD,104151:CD,104152:CD,104158:CD,104159:CD,104161:JM,104156
104159 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,104145
104158 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,104085:JM,104026
104161 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,104160
104160 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,104086:DD,104161
104270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,104284
104284 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,121461
104297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,104298:CD,104301:CD,104306
104298 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,89450:JM,104091
104301 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,104306:CL,58234
104307 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,104312:CL,58234
104306 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,104307:CD,104312:CD,104326
104313 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,104318:CL,58234
104312 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,104313:CD,104318:CD,104326
104319 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,104324:CL,58234
104318 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,104319:CD,104324:CD,104326
104325 :: NORM :: compound :: Z :: return #(1)::DD,104298
104324 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,104325:CD,104326
104326 :: NORM :: compound :: Z :: return #(0)::DD,104298
104341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,104342:CD,104349:CD,104354
104342 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,89456
104349 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,104354
104354 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,104342
104384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,104393
104393 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
104405 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,89475:JM,104151
104404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,104405:CD,104418:CD,104425
104418 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,104425:CL,121572
104425 :: NORM :: compound :: Z :: return v9::DD,104405
104577 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,104584:CD,104588:CD,104601:CD,104613:CD,104624:CD,104636
104581 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,104588
104584 :: CALL :: call :: Z :: v5 = v3.get()::JM,104588
104588 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,104590:CD,104594:CD,104618:CD,104644
104590 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,104594:CL,121674
104595 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,121698
104594 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,104595
104601 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
104610 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
104613 :: CALL :: call :: V :: v16.set(#(0))::
104618 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,121741
104624 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
104633 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
104636 :: CALL :: call :: V :: v24.set(#(0))::
104641 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,104644
104644 :: CALL :: call :: V :: v26.set(#(1))::JM,104644
104660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,104664:CD,104670:CD,104674:CD,104703:CD,104715:CD,104726:CD,104738
104664 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,121790
104667 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,104674
104670 :: CALL :: call :: Z :: v6 = v4.get()::JM,104674
104675 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,104678
104674 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,104678:CD,104686:CD,104690
104678 :: CALL :: call :: V :: v33.set(#(0))::JM,104678
104683 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,104690
104686 :: CALL :: call :: Z :: v10 = v8.get()::JM,104690
104690 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,104692:CD,104696:CD,104720:CD,104746
104692 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,104696:CL,121873
104697 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,121897
104696 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,104697
104703 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
104712 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
104715 :: CALL :: call :: V :: v20.set(#(0))::
104720 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,121940
104726 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
104735 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
104738 :: CALL :: call :: V :: v28.set(#(0))::
104743 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,104746
104746 :: CALL :: call :: V :: v30.set(#(1))::JM,104746
104767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,104771:CD,104776:CD,104781:CD,104786:CD,104799:CD,104804:CD,104809:CD,104817:CD,104821:CD,104825:CD,104830:CD,104831:CD,104837:CD,104922:CD,104927:CD,104932:CD,104946:CD,104947
104771 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,104946:CD,104772
104772 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,104946
104776 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
104781 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
104786 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
104799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
104804 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
104809 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
104817 :: CALL :: call :: V :: releaseReferences()::CL,121989
104821 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
104825 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,104830
104831 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,104947:CD,104832:CD,104836
104830 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,104831:JM,104836
104832 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,104836
104837 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,104841:JM,46674:JM,46681:CD,104859:CD,104867:CD,104871:CD,104876:CD,104884:CD,104888:CD,104892:CD,104897
104836 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,104947
104841 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
104859 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
104867 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
104871 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
104876 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
104884 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,122139
104888 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
104892 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,104897
104897 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,104900:CD,104904:CD,104908:CD,104913
104900 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,122139
104904 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
104908 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
104913 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
104922 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
104927 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
104932 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
104947 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,104837
104946 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
104995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,104996:CD,105055:CD,105056:CD,105064:CD,105069:CD,105070
104996 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,89910:JM,89961
105033 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,122163
105052 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,105055
105055 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,105033:CF,105056
105057 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
105056 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,105057
105064 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,105069
105069 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,105070:JM,105121
105070 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,105088:CD,105087:CD,105089:CD,105097:CD,105117:CD,105121:CD,105138
105087 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,104996
105089 :: CALL :: call :: I :: v36 = v33.size()::
105088 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,105138
105097 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,105121
105102 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,105121
105107 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
105112 :: CALL :: call :: Z :: v49 = v34.add(v46)::
105117 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,105121
105121 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,105102:CD,105107:CD,105112:CD,105117:JM,105121
105138 :: NORM :: compound :: Ljava/util/List :: return v34::DD,104996
105197 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,105198:CD,105204
105198 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,89955:JM,122226:JM,122221:JM,122222
105201 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,105204
105204 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,105198
105207 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,90017:JM,90016
105206 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,105207:CD,105211:CD,105216:CD,105217:CD,105218:CD,105226:CD,105231:CD,105236:CD,105241:CD,105246:CD,105250:CD,105255:CD,105265
105211 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,105216:CL,122526
105217 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
105216 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,105207
105218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
105223 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
105226 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
105231 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
105236 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
105241 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
105246 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,81417
105250 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
105255 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
105265 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
105269 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,90017:JM,90016
105268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,105269:CD,105273:CD,105289:CD,105294:CD,105299:CD,105308:CD,105314:CD,105319:JM,105340
105273 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,81227
105289 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
105294 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,105340
105299 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,105340
105308 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,105340
105314 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,105330:JM,105346:JM,105319:CL,72422
105319 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,105320:CD,105321:CD,105342:CD,105346:JM,105330
105321 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,105330:JM,105346
105320 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,105269
105326 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,105330:JM,105346
105331 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,105340:CL,72884
105330 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,105341
105335 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,105340
105341 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,105269
105340 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,105341:CD,105342:CD,105346:JM,105330
105342 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,105330:JM,105346
105347 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,105269
105346 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,105326:CD,105330:CD,105331:CD,105335:CD,105340:CD,105347:JM,105346
105373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,105374:CD,105379:CD,105384:CD,105388:CD,105441:CD,105442:CD,105447:CD,105452:CD,105457:CD,105487:CD,105488:CD,105493:CD,105498:CD,105507
105374 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,108308
105379 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,105399:JM,105418:JM,105388
105384 :: CALL :: call :: Z :: v7 = v5.matches()::JM,105399:JM,105418:JM,105388
105389 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,105399:JM,105418:JM,105388
105388 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,105389:CD,105394:CD,105399:CD,105433:CD,105440:CD,105469:CD,105474:CD,105479:CD,105486:JM,105418:JM,105388
105394 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,105399:JM,105418:JM,105388
105399 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,105400:CD,105405:CD,105413:CD,105418:JM,105399:JM,105388
105400 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,105399:JM,105418:JM,105388
105405 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,122633
105413 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,105399:JM,105418:JM,105388
105418 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,105420:CD,105425:JM,105399:JM,105418:JM,105388
105420 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,105399:JM,105418:JM,105388
105425 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,122633
105433 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,105440
105441 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
105440 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,105374
105442 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
105447 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
105452 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
105457 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
105469 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
105474 :: CALL :: call :: Z :: v13 = v11.matches()::
105479 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,105486
105487 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
105486 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,105374
105488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
105493 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
105498 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
105507 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
105639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,105640:CD,105644:JM,105649:JM,105672:JM,105660
105640 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,90707
105645 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,105649:JM,105672:JM,105644:JM,105660
105644 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,105645:CD,105649:CD,105650:JM,105672:JM,105644:JM,105660
105649 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,105650:CD,105651:CD,105668:CD,105672:JM,105649:JM,105644:JM,105660
105651 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,105649:JM,105672:JM,105644:JM,105660
105650 :: NORM :: compound :: Z :: return #(1)::DD,105640
105656 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,105672:JM,105660
105661 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,105662:CD,105666:CD,105668:CD,105672:JM,105660
105660 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,105661:JM,105666
105662 :: CALL :: call :: I :: v16 = v14.length()::JM,105666
105667 :: NORM :: compound :: Z :: return #(0)::DD,105640
105666 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,105667:CD,105668:CD,105672:JM,105660
105668 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,105672:JM,105660
105673 :: NORM :: compound :: Z :: return #(1)::DD,105640
105672 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,105656:CD,105660:CD,105661:CD,105673:JM,105672
105708 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
105713 :: CALL :: call :: Z :: v11 = v9.matches()::
105718 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::JM,90518:JM,90524:JM,90527
105724 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
105949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,105953:JM,82757:JM,76103:JM,82729:JM,82764:JM,82736:JM,82771:JM,82743:JM,76087:JM,76120:JM,82719:JM,76095:JM,76127:JM,82750:CD,105969:CD,105976:CD,105983:CD,105990:CD,105997:CD,106004:CD,106011:CD,106018:CD,106025:CD,106032:CD,106039:CD,106046:CD,106053:CD,106060:CD,106067:CD,106074:CD,106081:CD,106088:CD,106095
105953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,105957
105957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
105960 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
105963 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
105966 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
105969 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,105973
105973 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
105976 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,105980
105980 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
105983 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,105987
105987 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
105990 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,105994
105994 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
105997 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,106001
106001 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
106004 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,106008
106008 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
106011 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,106015
106015 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
106018 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,106022
106022 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
106025 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,106029
106029 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
106032 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,106036
106036 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
106039 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,106043
106043 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
106046 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,106050
106050 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
106053 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,106057
106057 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
106060 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,106064
106064 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
106067 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,106071
106071 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
106074 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,106078
106078 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
106081 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,106085
106085 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
106088 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,106092
106092 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
106095 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,106099
106099 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
106149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,106156:CD,106169:CD,106173
106153 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,106173
106156 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,106173
106161 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,106173
106166 :: CALL :: call :: V :: v11.documentStart()::CL,105949
106169 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,106173
106173 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,106161:CD,106166:CD,106169:JM,106173
106191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,106198:CD,106211:CD,106215
106195 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,106215
106198 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,106215
106203 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,106215
106208 :: CALL :: call :: V :: v11.documentEnd()::CL,122806
106211 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,106215
106215 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,106203:CD,106208:CD,106211:JM,106215
106225 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,91728:JM,91671:JM,91661:JM,91858:JM,92126:JM,91961:JM,92044:JM,91951
106224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,106225:CD,106231:CD,106235:CD,106240:CD,106306:CD,106310:CD,106378:CD,106379:CD,106380:CD,106384:CD,106385:CD,106386:JM,106370:JM,106376
106231 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,106310:DD,106365:JM,106370:DD,106371:DD,106377
106235 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,106240
106241 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,106242:CD,106246:CD,106264:CD,106268:CD,106384:CD,106385:CD,106386
106240 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,106241:CD,106274
106242 :: CALL :: call :: I :: v26 = v48.length()::JM,106246
106247 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,106386
106246 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,106258:CF,106247:CD,106248:CD,106384:CD,106385:CD,106386
106248 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
106258 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,106386
106264 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
106268 :: CALL :: call :: Z :: v37 = v6.add(v35)::
106275 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
106274 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,106275:CD,106281:CD,106286:CD,106301:CD,106305:CD,106381:CD,106382:CD,106383:CD,106384:CD,106385:CD,106386
106281 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,106305:JM,106295:CL,124159
106286 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,106305:JM,106295
106291 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,106305:JM,106295
106295 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
106296 :: CALL :: call :: Z :: v23 = v6.add(v21)::
106301 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,106305:JM,106295
106305 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,106384:CD,106291:CD,106295:CD,106296:CD,106301:CD,106381:CD,106382:CD,106383:JM,106305
106306 :: CALL :: call :: I :: v43 = v6.size()::JM,106310
106310 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,106313:CD,106318:CD,106322:CD,106327:CD,106332:CD,106337:CD,106342:CD,106347:CD,106352:CD,106357:CD,106365:CD,106366:CD,106370
106313 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
106318 :: CALL :: call :: I :: v60 = v6.size()::
106322 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
106327 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
106332 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,106370:JM,106376:JM,106378
106337 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
106342 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
106347 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
106352 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
106357 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
106365 :: NORM :: compound :: Ljava/util/List :: return v6::DD,106225
106366 :: CALL :: call :: I :: v45 = v6.size()::JM,106370
106371 :: NORM :: compound :: Ljava/util/List :: return v6::DD,106225
106370 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,106371:CD,106372:CD,106376:CD,106378:CD,106379:CD,106380:JM,106370:JM,106310
106372 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,106370:JM,106310:JM,106376:JM,106378
106377 :: NORM :: compound :: Ljava/util/List :: return v6::DD,106225
106376 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,106378:CD,106235:CD,106240:CD,106306:CD,106310:CD,106377:CD,106379:CD,106380:CD,106384:CD,106385:CD,106386
106379 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,106380:DD,106241:DD,106274:DD,106382:DD,106385
106378 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,106379:JM,106240:JM,106246:DD,106381:DD,106384
106381 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,106382:DD,106381:DD,106384
106380 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,106383:DD,106386:JM,106240
106383 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,106305:JM,106295:DD,106383:DD,106386
106382 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,106383:DD,106382:DD,106385
106385 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,106386:DD,106379
106384 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,106385
106386 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,106310:DD,106380
106540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,106550:CD,106575:CD,106576:CD,106581:CD,106585:CD,106590:CD,106595:CD,106599:CD,106604:CD,106609:CD,106614:CD,106619:CD,106624:CD,106629:CD,106634:CD,106643:CD,106648:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106550 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
106575 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
106576 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
106581 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106585 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
106590 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
106595 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106599 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
106604 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
106609 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106614 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106619 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
106624 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
106629 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
106634 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
106643 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106648 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,106654:CD,106663:CD,106668:CD,106673:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106654 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106663 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,125052
106668 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106673 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,106679:CD,106687:CD,106692:CD,106697:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106679 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,106687:CL,124649
106687 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,106688
106688 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
106692 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106697 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,106703:CD,106712:CD,106717:CD,106722:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106703 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106712 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,125088
106717 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106722 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,106728:CD,106737:CD,106742:CD,106747:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,107322:JM,107197
106728 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106737 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,125124
106742 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106747 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,106753:CD,106762:CD,106767:CD,106772:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106753 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106762 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,125160
106767 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106772 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,106778:CD,106787:CD,106792:CD,106797:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106778 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106787 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,125196
106792 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106797 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,106803:CD,106812:CD,106817:CD,106822:JM,107072:JM,106947:JM,107522:JM,107397:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106803 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106812 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,125232
106817 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106822 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,106828:CD,106837:CD,106842:CD,106847:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106828 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106837 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,125268
106842 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106847 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,106853:CD,106862:CD,106867:CD,106872:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106747:JM,107322:JM,107197
106853 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106862 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,125304
106867 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106872 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,106878:CD,106887:CD,106892:CD,106897:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106878 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106887 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,125340
106892 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106897 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,106903:CD,106912:CD,106917:CD,106922:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106903 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106912 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,125376
106917 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106922 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,106928:CD,106937:CD,106942:CD,106947:JM,107072:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106928 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106937 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,125412
106942 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106947 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,106953:CD,106962:CD,106967:CD,106972:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106953 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106962 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,125448
106967 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106972 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,106978:CD,106987:CD,106992:CD,106997:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106978 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
106987 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,125484
106992 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
106997 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,107003:CD,107012:CD,107017:CD,107022:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107003 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107012 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,125520
107017 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107022 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,107028:CD,107037:CD,107042:CD,107047:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107028 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107037 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,125556
107042 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107047 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,107053:CD,107062:CD,107067:CD,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107053 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107062 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,125592
107067 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107072 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,107078:CD,107087:CD,107092:CD,107097:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107078 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107087 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,125628
107092 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107097 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,107103:CD,107112:CD,107117:CD,107122:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107103 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107112 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,125664
107117 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107122 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,107128:CD,107137:CD,107142:CD,107147:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107128 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107137 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,125700
107142 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107147 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,107153:CD,107162:CD,107167:CD,107172:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107153 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107162 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,125736
107167 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107172 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,107178:CD,107187:CD,107192:CD,107197:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322
107178 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107187 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,125772
107192 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107197 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,107203:CD,107212:CD,107217:CD,107222:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107203 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107212 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,125808
107217 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107222 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,107228:CD,107237:CD,107242:CD,107247:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107228 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107237 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,125844
107242 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107247 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,107253:CD,107262:CD,107267:CD,107272:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107253 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107262 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,125880
107267 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107272 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,107278:CD,107287:CD,107292:CD,107297:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107278 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107287 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,125916
107292 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107297 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,107303:CD,107312:CD,107317:CD,107322:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107197
107303 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107312 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,125952
107317 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107322 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,107328:CD,107337:CD,107342:CD,107347:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107328 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107337 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,125988
107342 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107347 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,107353:CD,107362:CD,107367:CD,107372:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107353 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107362 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,126024
107367 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107372 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,107378:CD,107387:CD,107392:CD,107397:JM,107072:JM,106947:JM,107522:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107378 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107387 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,126060
107392 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107397 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,107403:CD,107412:CD,107417:CD,107422:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107403 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107412 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,126096
107417 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107422 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,107428:CD,107437:CD,107442:CD,107447:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,106872:JM,106747:JM,107322:JM,107197
107428 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107437 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,126132
107442 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107447 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,107453:CD,107462:CD,107467:CD,107472:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107453 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107462 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,126168
107467 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107472 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,107478:CD,107487:CD,107492:CD,107497:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107478 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107487 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,126204
107492 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107497 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,107503:CD,107512:CD,107517:CD,107522:JM,107072:JM,106947:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107503 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107512 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,126240
107517 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107522 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,107528:CD,107537:CD,107542:CD,107547:JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107528 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107537 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,126276
107542 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,107072:JM,106947:JM,107522:JM,107397:JM,106822:JM,106697:JM,107272:JM,107147:JM,107022:JM,106897:JM,107472:JM,107347:JM,106772:JM,107222:JM,107097:JM,106648:JM,107547:JM,106972:JM,106847:JM,107422:JM,107297:JM,106722:JM,107172:JM,107047:JM,107497:JM,106922:JM,106797:JM,107372:JM,107247:JM,106673:JM,107122:JM,106997:JM,107447:JM,106872:JM,106747:JM,107322:JM,107197
107547 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,107553:CD,107562:CD,107574
107553 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,124649
107562 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,126312
107574 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,126348
107961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,107968:CD,107971:CD,107974
107968 :: CALL :: call :: V :: p1 $loopFields .clear()::
107971 :: CALL :: call :: V :: p2 $lineData .clear()::
107974 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
107981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,107989:CD,108003:CD,108007
107986 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,108007
107989 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,108007
107994 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,108007
107999 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,126396
108003 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,108007
108007 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,107994:CD,107999:CD,108003:JM,108007
108142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,108147
108147 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
108169 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,92635
108168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,108169:CD,108172:CD,108176:CD,108180:CD,108184
108172 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,126586
108176 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,108184:CL,127633
108180 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,127710
108184 :: NORM :: compound :: Ljava/util/List :: return v6::DD,108169
108193 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,92673
108192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,108193:CD,108199
108196 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,108199
108199 :: NORM :: compound :: Ljava/util/List :: return v3::CF,108193
108201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,108206
108206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
108212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,108217
108217 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
108223 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,108224:CD,108228:CD,108233
108224 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,93008:JM,102690:JM,103881:JM,132887
108228 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,108233:CL,58116
108233 :: NORM :: compound :: Ljava/util/List :: return v5::DD,108224
108237 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,122216
108236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,108237:CD,108243
108240 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,108243
108243 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,108237
108281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,108285:CD,108286:CD,108294:CD,108314:CD,108318
108285 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,108318
108286 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,108318
108294 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,108318
108299 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,108318
108304 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,108308:CL,105373
108309 :: CALL :: call :: Z :: v19 = v3.add(v16)::
108308 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,108309:JM,108318
108314 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,108318
108318 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,108299:CD,108304:CD,108308:CD,108314:JM,108318
108337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,108338:CD,108344
108338 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,94003
108341 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,108344
108344 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,108338
108347 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,94051
108346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,108347:CD,108353
108350 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,108353
108353 :: NORM :: compound :: Ljava/util/List :: return v3::CF,108347
108386 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::CL,122633
108400 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::CL,122633
108453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,108458
108458 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
108465 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
108464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,108465:CD,108471
108468 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,108471
108471 :: NORM :: compound :: I :: return v3::CF,108465
108473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,108474:CD,108480
108474 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,94485:JM,94397:JM,97852:JM,97902:JM,133266:JM,133320:JM,152579:JM,152629
108477 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,108480
108481 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,108474
108480 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,108481:CD,108485:CD,108489
108482 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,108489
108485 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,108489
108489 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,108474
108495 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
108494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,108495:CD,108498:CD,108506:CD,108511:CD,108519:CD,108524:CD,108532:CD,108537:CD,108545:CD,108550:CD,108558:CD,108563:CD,108571:CD,108576:CD,108583:CD,108614:CD,108618:CD,108622:CD,108654:CD,108655:CD,108656
108498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
108503 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
108506 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
108511 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
108516 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
108519 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
108524 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
108532 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
108537 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
108545 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,108655
108550 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,108655
108555 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,108655
108558 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,108655
108563 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,108655
108568 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,108655
108571 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,108655
108576 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,108655
108580 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,108583
108583 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,108655:CF,108584:CD,108585:CD,108593:CD,108601:CD,108605:CD,108610
108585 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
108584 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,108655
108593 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,108655
108598 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,108655
108601 :: CALL :: call :: I :: v49 = v47.size()::JM,108655
108605 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,108655
108610 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,108655
108614 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,108622:CL,94640
108618 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,108622
108623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,108656
108622 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,108656:CF,108623:CD,108624:CD,108632:CD,108637:CD,108641:CD,108645:CD,108650
108624 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
108632 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,108656
108637 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,108656:CL,94640
108641 :: CALL :: call :: I :: v69 = v67.size()::JM,108656
108645 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,108656
108650 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,108656
108655 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,108656
108654 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,108495
108656 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,108654
108685 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
108684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,108685:CD,108688:CD,108696:CD,108701:CD,108709:CD,108714:CD,108722:CD,108727:CD,108734:CD,108765:CD,108766
108688 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
108693 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
108696 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
108701 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
108709 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,108766
108714 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,108766
108719 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,108766
108722 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,108766
108727 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,108766
108731 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,108734
108735 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,108766
108734 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,108766:CF,108735:CD,108736:CD,108744:CD,108752:CD,108756:CD,108761
108736 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
108744 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,108766
108749 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,108766
108752 :: CALL :: call :: I :: v33 = v31.size()::JM,108766
108756 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,108766
108761 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,108766
108765 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,108685
108766 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,108765
108783 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
108782 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,108783:CD,108786:CD,108794:CD,108799:CD,108807:CD,108812:CD,108820:CD,108825:CD,108832:CD,108866:CD,108897:CD,108898:CD,108899
108786 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
108794 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,108898
108799 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,108898
108804 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,108898
108807 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,108898
108812 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,108898
108817 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,108898
108820 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,108898
108825 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,108898
108829 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,108832
108833 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,108898
108832 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,108898:CF,108833:CD,108834:CD,108842:CD,108850:CD,108854:CD,108859
108834 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
108842 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,108898
108847 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,108898
108850 :: CALL :: call :: I :: v33 = v31.size()::JM,108898
108854 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,108898
108859 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,108898
108863 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,108866
108867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,108899
108866 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,108899:CF,108867:CD,108868:CD,108876:CD,108884:CD,108888:CD,108893
108868 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
108876 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,108899
108881 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,108899
108884 :: CALL :: call :: I :: v50 = v48.size()::JM,108899
108888 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,108899
108893 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,108899
108897 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,108783
108899 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,108897
108898 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,108899
112951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,112952:CD,112956:CD,112960:CD,112966:CD,112970:CD,112979:CD,112984:CD,112988:CD,112990:CD,113005:CD,113014:CD,113090:CD,113094
112952 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,95500:JM,95535
112956 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,113094:JM,113023
112960 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
112966 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
112971 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
112970 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
112979 :: CALL :: call :: Z :: v16 = v4.add(v12)::
112984 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,112990:CL,128041
112988 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,112990
112991 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
112990 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,112991:CD,113000:CF,113005
112992 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
113000 :: CALL :: call :: Z :: v24 = v4.add(v20)::
113005 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,113024
113014 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,113094:JM,113023
113019 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,113094:JM,113023
113023 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,113024
113024 :: EXPR :: assign :: I :: v37 = v26.length::DD,113089
113030 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,113043:JM,113087:CL,38064
113034 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,113043:JM,113087
113039 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,113043:JM,113087
113043 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,113044
113045 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
113044 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,113082:CF,113045
113046 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
113054 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
113058 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
113063 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
113068 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
113077 :: CALL :: call :: Z :: v63 = v48.exists()::JM,113081
113081 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,113096:CD,113082:CD,113083:CD,113087
113083 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,113043:JM,113087
113082 :: NORM :: compound :: Ljava/io/File :: return v48::DD,112952
113087 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,113039:CD,113043:CD,113044:CD,113045:CD,113046:CD,113054:CD,113058:CD,113063:CD,113068:CD,113077:CD,113081:CD,113088:CD,113089:CD,113097:CD,113096:JM,113087
113089 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,113030:CD,113034:CD,113083:CD,113087:CD,113090:CD,113094:CD,113096:JM,113023
113088 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,113097
113090 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,113094:JM,113023
113095 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,112952
113094 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,113019:CD,113023:CD,113024:CD,113089:CD,113095:CD,113097:JM,113094
113097 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,113089:DD,113096
113096 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,113043:JM,113087:DD,113088:DD,113096
113163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,113164:CD,113166:CD,113168
113164 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
113166 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,113168:DD,113169
113169 :: NORM :: compound :: [I :: return v2::DD,113164
113168 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,113169:CD,113170:CD,113173:CD,113174:CD,113175:CD,113177:CD,113186:CD,113188:CD,113197:CD,113199:CD,113208:CD,113210:CD,113219:CD,113221:CD,113232
113170 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,113173:CL,128050
113173 :: EXPR :: assign :: I :: v6 = v5.length::CF,113174
113175 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
113174 :: NORM :: declaration :: [I :: v7 = new []::DD,113232
113177 :: CALL :: call :: I :: v10 = v8.ordinal()::
113181 :: EXPR :: modify :: I :: v7[v10] = #(2)::
113186 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
113188 :: CALL :: call :: I :: v16 = v14.ordinal()::
113192 :: EXPR :: modify :: I :: v7[v16] = #(3)::
113197 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
113199 :: CALL :: call :: I :: v22 = v20.ordinal()::
113203 :: EXPR :: modify :: I :: v7[v22] = #(4)::
113208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
113210 :: CALL :: call :: I :: v28 = v26.ordinal()::
113214 :: EXPR :: modify :: I :: v7[v28] = #(5)::
113219 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
113221 :: CALL :: call :: I :: v34 = v32.ordinal()::
113225 :: EXPR :: modify :: I :: v7[v34] = #(1)::
113232 :: NORM :: compound :: [I :: return v7::DD,113164
113275 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,95509
113274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,113275:CD,113281
113278 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,113281
113281 :: NORM :: compound :: Z :: return v3::CF,113275
113313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,113317:CD,113323
113317 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,113328:JM,113323:CL,128077
113323 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,113324:CD,113328
113324 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,113328
113329 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,113328
113328 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,113329:JM,113328
113348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,113356:CD,113362:CD,113363:CD,113385:CD,113391:CD,113399:CD,113408:CD,113418
113356 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,128534
113363 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,128663:CL,128632
113362 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
113385 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
113391 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
113399 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,128663:CL,128632
113408 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
113419 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,113424:JM,113429:JM,113433:CL,128696
113418 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,113419:CD,113424:CD,113458:CD,113463:CD,113468:CD,113478:CD,113483:CD,113488:CD,113496
113425 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,113433
113424 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,113425:CD,113429:CD,113433:CD,113434:CD,113458:CD,113463:CD,113468:CD,113478:CD,113483:CD,113488:CD,113496
113429 :: CALL :: call :: J :: v40 = v33.getTime()::JM,113429:JM,113433
113433 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,113434
113434 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,113458:CD,113463:CD,113468:CD,113478:CD,113483:CD,113488:CD,113496
113458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
113463 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
113468 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
113478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
113483 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
113488 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
113496 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,128781
113559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,113560:CD,113568:CD,113572
113560 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,95589
113568 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,113572:CL,128949
113572 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,113587:CD,113588
113583 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,113587
113587 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,113560
113588 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,113560
113795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,113805:CD,113810:CD,113811
113805 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,113810
113811 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,113812:CD,113846
113810 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,113812:DD,113813:DD,113846:CF,113811
113813 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,113814
113812 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,113813:CD,113814:CD,113818:JM,129857:JM,129856:JM,154496:JM,129924:JM,154500:JM,129865:JM,154510:JM,129870:JM,154514:JM,46674:JM,129875:JM,129874:JM,46681:JM,129883:JM,154524:JM,154531:JM,129888:JM,129893:JM,129700:JM,129892:JM,154468:JM,154539:JM,154472:JM,129901:JM,154482:JM,154546:JM,129712:JM,129906:JM,154486:JM,129911:JM,129910:JM,129720:JM,154553:JM,129919:CD,113832:CD,113838
113814 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,113818:JM,129857:JM,129856:JM,154496:JM,129924:JM,154500:JM,129865:JM,154510:JM,129870:JM,154514:JM,46674:JM,129875:JM,129874:JM,46681:JM,129883:JM,154524:JM,154531:JM,129888:JM,129893:JM,129700:JM,129892:JM,154468:JM,154539:JM,154472:JM,129901:JM,154482:JM,154546:JM,129712:JM,129906:JM,154486:JM,129911:JM,129910:JM,129720:JM,154553:JM,129919:CD,113832:CD,113838
113818 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
113832 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,129737
113838 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
113846 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,113850:CD,113864:CD,113870
113850 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
113864 :: CALL :: call :: V :: v18.setScopVersion(v6)::CL,129825
113870 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
113915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CE,113916:CD,113919:CD,113923:CD,113931:CD,113939:CD,113944:CD,113948
113916 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::
113919 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,113948
113923 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
113931 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::JM,113948
113936 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::JM,113948
113939 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::JM,113948
113944 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,113948
113948 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,113916
113983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,113990:CD,113994
113987 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,113994
113990 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,113994
113994 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,113996:JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:CD,114000:CD,114012:CD,114020
113996 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
114000 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
114009 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
114012 :: CALL :: call :: Z :: v18 = v16.add(v7)::
114017 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
114020 :: CALL :: call :: Z :: v21 = v19.add(v9)::
114043 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,114056
114056 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
114067 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,114072:CD,114076:CD,114084:CD,114090:CD,114095
114072 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
114076 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
114084 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,129954
114090 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
114095 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
114105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,114113:CD,114118:CD,114123:CD,114128:CD,114133:CD,114141
114113 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
114118 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
114123 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
114128 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
114133 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
114141 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,128781
114154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,114174:CD,114175:CD,114180:CD,114185:CD,114263:CD,114264:CD,114269:CD,114274:CD,114439:CD,114443:JM,114165
114160 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,114165:JM,114443
114165 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,114167:CD,114215:CD,114219:CD,114227:CD,114239:CD,114256:CD,114287:CD,114292:CD,114300:CD,114305:CD,114313:CD,114318:CD,114326:CD,114331:CD,114339:CD,114344:CD,114352:CD,114357:CD,114365:CD,114370:CD,114405:CD,114410:CD,114434:CD,114456
114167 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
114175 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
114174 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
114180 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,114165:JM,114443
114185 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
114211 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
114215 :: CALL :: call :: I :: v28 = parseInt(v26)::
114219 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
114227 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
114239 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,130124
114256 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
114263 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
114264 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
114269 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,114165:JM,114443
114274 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
114283 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
114287 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
114292 :: CALL :: call :: I :: v51 = parseInt(v49)::
114296 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
114300 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
114305 :: CALL :: call :: I :: v56 = parseInt(v54)::
114309 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
114313 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
114318 :: CALL :: call :: I :: v61 = parseInt(v59)::
114322 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
114326 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
114331 :: CALL :: call :: I :: v66 = parseInt(v64)::
114335 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
114339 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
114344 :: CALL :: call :: I :: v71 = parseInt(v69)::
114348 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
114352 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
114357 :: CALL :: call :: I :: v76 = parseInt(v74)::
114361 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
114365 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
114370 :: CALL :: call :: I :: v81 = parseInt(v79)::
114405 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,114410
114410 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,114421:CD,114414:CD,114419:CD,114428:CD,114456
114414 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,114419
114419 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,114456
114421 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,114456
114428 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
114434 :: CALL :: call :: Z :: v103 = v101.add(v33)::
114439 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,114165:JM,114443
114443 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,114160:CD,114165:CD,114439:JM,114443
114456 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
114661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,114662:CD,114669
114662 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,96775
114666 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,114669
114669 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,114673:CD,114701
114670 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,114673
114673 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,114680:CD,114685:CD,114701
114674 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,114685
114677 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,114685
114680 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,114685
114685 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,114692:CD,114697:CD,114701
114686 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,114697
114689 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,114697
114692 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,114697
114697 :: NORM :: compound :: I :: return v49::CF,114662
114698 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,114701
114701 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,114705:CD,114710
114702 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,114705
114705 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,114706:CD,114710
114707 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,114710
114706 :: NORM :: compound :: I :: return #(1)::CF,114662
114711 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,114714
114710 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,114714:CD,114719
114715 :: NORM :: compound :: I :: return #(-1)::CF,114662
114714 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,114715:CD,114719
114716 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,114719
114719 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,114723:CD,114751
114720 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,114723
114723 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,114730:CD,114735:CD,114751
114724 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,114735
114727 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,114735
114730 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,114735
114735 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,114742:CD,114747:CD,114751
114736 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,114747
114739 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,114747
114742 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,114747
114747 :: NORM :: compound :: I :: return v45::CF,114662
114748 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,114751
114751 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,114755:CD,114760
114752 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,114755
114755 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,114756:CD,114760
114757 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,114760
114756 :: NORM :: compound :: I :: return #(1)::CF,114662
114761 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,114764
114760 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,114764:CD,114769
114765 :: NORM :: compound :: I :: return #(-1)::CF,114662
114764 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,114765:CD,114769
114766 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,114769
114769 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,114773:CD,114801
114770 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,114773
114773 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,114780:CD,114785:CD,114801
114774 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,114785
114777 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,114785
114780 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,114785
114785 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,114792:CD,114797:CD,114801
114786 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,114797
114789 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,114797
114792 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,114797
114797 :: NORM :: compound :: I :: return v41::CF,114662
114798 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,114801
114801 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,114805:CD,114810
114802 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,114805
114805 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,114806:CD,114810
114807 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,114810
114806 :: NORM :: compound :: I :: return #(1)::CF,114662
114811 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,114814
114810 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,114814:CD,114816
114815 :: NORM :: compound :: I :: return #(-1)::CF,114662
114814 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,114815:CD,114816
114816 :: NORM :: compound :: I :: return #(0)::CF,114662
114875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,114876:CD,114880:CD,114884:CD,114888:CD,114893
114876 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,96789
114880 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,114893:CL,130427
114884 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,114893:CL,130427
114888 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,114893
114893 :: NORM :: compound :: I :: return v9::DD,114876
115169 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,97557:JM,97547:JM,142162:JM,142152:JM,152355:JM,152371:JM,152378:JM,152363:JM,152345
115168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,115169:CD,115172:CD,115176:CD,115180:CD,115184
115172 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
115176 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
115180 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,115184:CL,121312
115185 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,115169
115184 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,115185:CD,115192:CD,115197:CD,115327:CD,115331:CD,115333
115192 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,115197
115197 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,115198:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,115202:CD,115206:CD,115246:CD,115312:CD,115317:CD,115332:CD,115333
115198 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,115333
115202 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,115218:JM,115332:JM,115223:JM,115206:JM,115212:CL,130852
115207 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,115218:JM,115332:JM,115223:JM,115212
115206 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,115207:CD,115212:CD,115224:CD,115228:CD,115332:JM,115218:JM,115223
115213 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,115218:JM,115332:JM,115223:JM,115212
115212 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,115213:CD,115218:CD,115224:CD,115228:CD,115332:JM,115223:JM,115212
115219 :: CALL :: call :: I :: v36 = v28.length()::JM,115218:JM,115332:JM,115223:JM,115212
115218 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,115219:CD,115223:CD,115224:CD,115228:CD,115332:JM,115218:JM,115212
115223 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,115332:CD,115224:CD,115228
115224 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,115233:JM,115229:JM,115228:CL,130861
115229 :: CALL :: call :: I :: v40 = v38.length()::JM,115233:JM,115229
115228 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,115332:CD,115229:CD,115233
115233 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,115332:CD,115238:CD,115242
115238 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,121312
115242 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,115332:CL,130852
115247 :: CALL :: call :: I :: v50 = v48.length()::JM,115251
115246 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,115247:CD,115251:CD,115260:CD,115265:CD,115270:CD,115275:CD,115287
115251 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,115252:CD,115257:CD,115260:CD,115265:CD,115270:CD,115275:CD,115287
115252 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,115257
115257 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,115260:CD,115265:CD,115270:CD,115275:CD,115287:CD,115292:CD,115301
115260 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
115265 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
115270 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
115275 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
115287 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,94618
115292 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
115301 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,94618
115312 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,115317
115317 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,115323:CF,115318:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,115333
115318 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,115333
115323 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,115333
115327 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,94568
115331 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,115169
115333 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,115331
115332 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,115246:JM,115251:JM,115257
115401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,115402:CD,115408:CD,115449
115402 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,97634:JM,143760
115405 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,115408
115408 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,115412:CD,115422
115412 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,115416:CL,121312
115416 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
115419 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,115422
115422 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,115425:CD,115433:CD,115438
115425 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
115430 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
115433 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
115438 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
115446 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,115449
115449 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,115402
115461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,115462:CD,115468
115462 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,97556:JM,142161:JM,152354
115465 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,115468
115469 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,115473:CL,130870
115468 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,115469:CD,115473:CD,115485
115473 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,115474:CD,115478:CD,115483:CD,115485
115474 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,115483:CL,130870
115478 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,115483
115483 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,115484:CD,115485
115485 :: NORM :: compound :: Z :: return #(1)::CF,115462
115484 :: NORM :: compound :: Z :: return #(0)::CF,115462
115495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,115496:CD,115502
115496 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,97656
115499 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,115502
115502 :: NORM :: compound :: Z :: return v3::CF,115496
115505 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,97670
115504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,115505:CD,115511
115508 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,115511
115511 :: NORM :: compound :: Ljava/util/List :: return v3::CF,115505
115513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,115514:CD,115520
115514 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,97740
115517 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,115520
115521 :: NORM :: compound :: Z :: return #(0)::CF,115514
115520 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,115521:CD,115525:CD,115529:CD,115531:CD,115532
115522 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,115529
115525 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,115529
115529 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,115532
115531 :: NORM :: compound :: Z :: return v10::CF,115514
115532 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,115531
115541 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,97836:JM,97908:JM,97882:JM,97938:JM,115795:JM,121277:JM,133302:JM,152563:JM,152609:JM,152635:JM,152665
115540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,115541:CD,115547
115544 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,115547
115547 :: NORM :: compound :: Ljava/util/List :: return v3::CF,115541
115549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,115557:CD,115564:CD,115595:CD,115599:CD,115603:CD,115607:JM,115600
115554 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,115557
115557 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,115561:JM,115600:JM,115607:JM,115599
115558 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
115561 :: CALL :: call :: V :: v6.clear()::
115564 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,115600:JM,115607:JM,115599
115569 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,115607:JM,115599
115574 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,94525
115578 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,115581
115581 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,115589:JM,115607:JM,115599
115589 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
115595 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,115607:JM,115599
115599 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,115569:CD,115574:CD,115581:CD,115595:JM,115607:JM,115599
115600 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
115603 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,115607:JM,115599
115607 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
115608 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
115635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,115639:CD,115643:CD,115662:CD,115666
115639 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
115643 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,115666
115648 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,115666
115653 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,115682
115657 :: CALL :: call :: Z :: v16 = v3.add(v14)::
115662 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,115666
115666 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,115648:CD,115653:CD,115657:CD,115662:JM,115666
115683 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
115682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,115683:CD,115686:JM,93315:JM,93334:JM,93320:JM,93327:CD,115694:CD,115702:CD,115710:CD,115714:CD,115718:CD,115796:CD,115800:CD,115801
115686 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,115801
115694 :: CALL :: call :: V :: v3.setChainID(v6)::CL,93358
115702 :: CALL :: call :: V :: v3.setCompound(v9)::CL,108201
115710 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,130888
115714 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,115800:JM,115727:CL,58133
115718 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,115800:JM,115727
115723 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,115800:JM,115727
115727 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,115732
115728 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,115795:CL,115540
115733 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,115735:CD,115791:CD,115795
115732 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,115733
115735 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,115795
115740 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,115795
115745 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,115754:CL,68780
115749 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,115754
115755 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,115761:CL,58373
115754 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,115755:CD,115759:CD,115761:CD,115791:CD,115795
115759 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,115761
115761 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,115770:CD,115778:CD,115782:CD,115786:CD,115791:CD,115795
115770 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,94598
115778 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,94183
115782 :: CALL :: call :: V :: v42.addAtom(v33)::CL,94344
115786 :: CALL :: call :: V :: v3.addGroup(v42)::CL,93505
115791 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,115795
115795 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,115740:CD,115745:CD,115749:CD,115754:JM,115795:JM,115800:JM,115727
115796 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,115800:JM,115727
115801 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,115683
115800 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,115723:CD,115727:CD,115728:CD,115732:CD,115733:CD,115796:JM,115800:CF,115801
115845 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,98386:JM,98392:JM,98396
115844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,115845:CD,115850:CD,115855:CD,115856
115850 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,115855
115855 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,115856
115856 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,115845
115859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,115860:CD,115866
115860 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,98531
115863 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,115866
115866 :: NORM :: compound :: D :: return v3::CF,115860
115869 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,98537
115868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,115869:CD,115875
115872 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,115875
115875 :: NORM :: compound :: D :: return v3::CF,115869
115877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,115878:CD,115884
115878 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,98543
115881 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,115884
115884 :: NORM :: compound :: D :: return v3::CF,115878
115887 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,98767:JM,138458:JM,141959
115886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,115887:CD,115893
115890 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,115893
115893 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,115887
115904 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
115907 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,115920:JM,115923:DD,115911
115911 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
115914 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
115917 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
115920 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
115923 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
115940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,115945
115945 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
115951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,115956
115956 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
115962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,115966:CD,115970:CD,115974
115966 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
115970 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,130899
115974 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
115984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,115988:CD,115995:CD,116006
115988 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,115992
115992 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
115995 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,116000:CL,69593
116000 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
116003 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
116007 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
116006 :: NORM :: declaration :: [D :: v9 = new []::DD,116007
116010 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
116013 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
116031 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,99179
116030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,116031:CD,116035:CD,116040:CD,116041:CD,116045:CD,116046:CD,116052:CD,116056:CD,116060:CD,116064
116035 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,116040:JM,116045
116041 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,116040:JM,116045
116040 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,116040:JM,116045
116045 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,116040:JM,116045
116046 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,116040:JM,116045
116052 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
116056 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
116060 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,116064:CL,131015
116064 :: NORM :: compound :: I :: return v19::DD,116031
116075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,116080:CD,116085:CD,116086:CD,116091:CD,116095:CD,116103:CD,116107
116080 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,116085
116085 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,116085
116086 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,116085
116091 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
116095 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,116103
116100 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
116103 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,116103
116107 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
116127 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,99245
116126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,116127:CD,116131:CD,116140:CD,116145:CD,116149:CD,116175:CD,116194:CD,116213:CD,116222:CD,116227:CD,116231:CD,116236
116131 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
116136 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,116149:JM,116236:JM,116222
116140 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,116149:JM,116236:JM,116222
116145 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,116149:JM,116236:JM,116222
116149 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,116150:CD,116158
116150 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,116155:CL,69593
116155 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
116159 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
116158 :: NORM :: declaration :: [D :: v18 = new []::DD,116159
116175 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,95088
116194 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,95088
116213 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,95088
116219 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
116223 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,116227:JM,116231
116222 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
116227 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,116227:JM,116231
116231 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,116232
116232 :: EXPR :: modify :: D :: v43[v44] = v49::
116237 :: NORM :: compound :: Z :: return #(1)::DD,116127
116236 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,116237:CD,116238
116238 :: NORM :: compound :: Z :: return #(0)::DD,116127
116282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,116289:CD,116344:CD,116348:CD,116355:CD,116360
116286 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,116348
116289 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,116348
116294 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,116348
116299 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
116321 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
116324 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
116336 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
116339 :: CALL :: call :: Z :: v27 = v25.add(v12)::
116344 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,116348
116348 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,116294:CD,116299:JM,131299:CD,116324:CD,116339:CD,116344:JM,116348
116355 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,116360
116360 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,116410
116410 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
116472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,116478:CD,116482:CD,116488:CD,116493:CD,116561:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116718
116478 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116482 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,116780
116488 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116493 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,116494:CD,116498:CD,116510:CD,116780
116494 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,116780
116498 :: CALL :: call :: I :: v19 = v17.intValue()::JM,116780
116511 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,116514
116510 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,116514
116515 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,116518
116514 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,116518:CD,116532:CD,116541:JM,100548:JM,100541:CD,116551
116519 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
116518 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,116525
116522 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
116525 :: CALL :: call :: Z :: v32 = v29.add(v30)::
116532 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
116541 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,116545
116545 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
116551 :: CALL :: call :: V :: v40.setMolId(v25)::CL,119715
116558 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,116561
116561 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,116563:CD,116568:CD,116576:CD,116581:CD,116637:CD,116642:CD,116675:CD,116680:CD,116713:CD,116718:CD,116726:CD,116731:CD,116739:CD,116744:CD,116752:CD,116757:CD,116765:CD,116770:JM,116493
116563 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116568 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,116572:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116572 :: CALL :: call :: V :: v47.setMolName(v10)::CL,131534
116576 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116581 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,116582:CD,116588:CD,116612:CD,116616:CD,116623:CD,116627:CD,116631:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116582 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,116781:JM,116606:JM,116616
116588 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
116593 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,116781:JM,116606
116597 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,116781:JM,116606
116601 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,116781:JM,116606
116607 :: CALL :: call :: Z :: v69 = v55.add(v67)::
116606 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,116781
116612 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,116616
116616 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,116593:CD,116597:CD,116601:CD,116606:CD,116607:CD,116612:CD,116781
116623 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,119618
116627 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
116631 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
116637 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116643 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,116674
116642 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,116643:CD,116649:CD,116670:CD,116674:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116649 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
116654 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
116658 :: CALL :: call :: Z :: v90 = v83.add(v88)::
116666 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,131545
116670 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,116674
116675 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116674 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,116654:CD,116658:CD,116666:CD,116670:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116681 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,116712
116680 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,116681:CD,116687:CD,116708:CD,116712:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116687 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
116692 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
116696 :: CALL :: call :: Z :: v105 = v98.add(v103)::
116704 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,131556
116708 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,116712
116713 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116712 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,116692:CD,116696:CD,116704:CD,116708:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116718 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,116722:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116722 :: CALL :: call :: V :: v111.setFragment(v10)::CL,131567
116726 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116731 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,116735:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116735 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,131578
116739 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116744 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,116748:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116748 :: CALL :: call :: V :: v121.setMutation(v10)::CL,131589
116752 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116757 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,116761:JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116761 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,131600
116765 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,116642:JM,116770:JM,116581:JM,116757:JM,116568:JM,116680:JM,116744:JM,116731:JM,116493:JM,116718
116770 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,116774
116774 :: CALL :: call :: V :: v131.setDetails(v10)::CL,131611
116781 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
116780 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,116510:DD,116514
116898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,116904:CD,116908:CD,116914:CD,116919:CD,116944:CD,116949:CD,116953:CD,116958:CD,116967:CD,116972:CD,117415:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,117294:JM,117168:JM,117042:JM,117364:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116904 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116908 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,116931
116914 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116919 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,116923:CD,116927:CD,116931:CD,116932:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116920 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
116923 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,116931
116927 :: CALL :: call :: I :: v19 = v17.intValue()::JM,116931
116931 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
116932 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
116944 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
116949 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
116953 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
116958 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
116967 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116972 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,116976:CD,116981:CD,116986:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,117308:JM,117182
116976 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,131622
116981 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116986 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,116990:CD,116995:CD,117000:JM,117056:JM,117378:JM,117252:JM,117126:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
116990 :: CALL :: call :: V :: v193.setFragment(v10)::CL,131567
116995 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117000 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,117004:CD,117009:CD,117014:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117004 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,131633
117009 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117014 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,117018:CD,117023:CD,117028:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117018 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,131644
117023 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117028 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,117032:CD,117037:CD,117042:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117032 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,131655
117037 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117042 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,117046:CD,117051:CD,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117046 :: CALL :: call :: V :: v185.setStrain(v10)::CL,131666
117051 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117056 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,117060:CD,117065:CD,117070:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117060 :: CALL :: call :: V :: v183.setVariant(v10)::CL,131677
117065 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117070 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,117074:CD,117079:CD,117084:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117074 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,131688
117079 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117084 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,117088:CD,117093:CD,117098:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117088 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,131699
117093 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117098 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,117102:CD,117107:CD,117112:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,116986:JM,117308:JM,117182
117102 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,131710
117107 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117112 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,117116:CD,117121:CD,117126:JM,117056:JM,117378:JM,117252:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117116 :: CALL :: call :: V :: v175.setTissue(v10)::CL,131721
117121 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117126 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,117130:CD,117135:CD,117140:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117130 :: CALL :: call :: V :: v173.setCell(v10)::CL,131732
117135 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117140 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,117144:CD,117149:CD,117154:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117144 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,131743
117149 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117154 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,117158:CD,117163:CD,117168:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117158 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,131754
117163 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117168 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,117172:CD,117177:CD,117182:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308
117172 :: CALL :: call :: V :: v167.setGene(v10)::CL,131765
117177 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117182 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,117186:CD,117191:CD,117196:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117186 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,131776
117191 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117196 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,117200:CD,117205:CD,117210:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117200 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,131787
117205 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117210 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,117214:CD,117219:CD,117224:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117214 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,131798
117219 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117224 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,117228:CD,117233:CD,117238:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117112:JM,116986:JM,117308:JM,117182
117228 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,131809
117233 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117238 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,117242:CD,117247:CD,117252:JM,117056:JM,117378:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117242 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,131820
117247 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117252 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,117256:CD,117261:CD,117266:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117256 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,131831
117261 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117266 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,117270:CD,117275:CD,117280:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117270 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,131842
117275 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117280 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,117284:CD,117289:CD,117294:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117284 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,131853
117289 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117294 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,117298:CD,117303:CD,117308:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117182
117298 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,131864
117303 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117308 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,117312:CD,117317:CD,117322:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117312 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,131875
117317 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117322 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,117326:CD,117331:CD,117336:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117326 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,131886
117331 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117336 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,117340:CD,117345:CD,117350:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117340 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,131897
117345 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117350 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,117354:CD,117359:CD,117364:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117354 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,131908
117359 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117364 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,117368:CD,117373:CD,117378:JM,117056:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117368 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,131919
117373 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117378 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,117382:CD,117387:CD,117392:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117382 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,131930
117387 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117392 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,117396:CD,117401:CD,117406:JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117396 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,131941
117401 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,117056:JM,117378:JM,117252:JM,117126:JM,117000:JM,117322:JM,117196:JM,117070:JM,117392:JM,117266:JM,117140:JM,117014:JM,117336:JM,117210:JM,117084:JM,117406:JM,117280:JM,117154:JM,117028:JM,117350:JM,117224:JM,117098:JM,116972:JM,117294:JM,117168:JM,117042:JM,117364:JM,116919:JM,117238:JM,117112:JM,116986:JM,117308:JM,117182
117406 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,117410
117410 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,131952
117415 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
117595 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,117599
117599 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
117602 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,117606
117606 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
117609 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
117612 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
117615 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
117618 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
117621 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
117624 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
117627 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
117630 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
117655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,117660:CD,117664:CD,117669
117660 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
117664 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,117669
117669 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,117671:CD,117676:CD,117677
117671 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,117927:JM,117676
117677 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,117678:CD,117686:CD,117692:CD,117697:CD,117701:CD,117706:CD,117714:CD,117927:CD,117928:CD,117934
117676 :: EXPR :: assign :: I :: v13 = v12.length::DD,117677
117678 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
117686 :: CALL :: call :: V :: v112.setSurname(v114)::CL,131982
117692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
117697 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,131993
117701 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
117706 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
117714 :: CALL :: call :: Z :: v128 = v4.add(v112)::
117721 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
117727 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
117732 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
117737 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
117745 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
117749 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,117795:JM,117859:JM,117891:JM,117754
117755 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,117756:CD,117762:CD,117767:CD,117772:CD,117777:CD,117781:CD,117786:CD,117795:CD,117796:CD,117933
117754 :: EXPR :: assign :: I :: v31 = v30.length::DD,117755
117756 :: CALL :: call :: V :: v26.setSurname(v16)::CL,131982
117762 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
117767 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
117772 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
117777 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,131993
117781 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
117786 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
117795 :: EXPR :: assign :: I :: v49 = v30.length::DD,117796
117796 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,117801:CD,117807:CD,117812:CD,117816:CD,117821:CD,117859:CD,117860:CD,117861:CD,117864:CD,117869:CD,117874:CD,117879:CD,117887:CD,117891:CD,117892:CD,117899:CD,117904:CD,117909:CD,117917:CD,117930:CD,117931:CD,117932:CD,117933
117801 :: CALL :: call :: V :: v26.setSurname(v50)::CL,131982
117807 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
117812 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,131993
117816 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
117821 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
117831 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,117931
117835 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,117931
117836 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
117844 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,117931
117849 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,117931
117854 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,117931
117859 :: EXPR :: assign :: I :: v63 = v30.length::DD,117860
117858 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,117932:CF,117930
117861 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,117835:CD,117836:CD,117844:CD,117849:CD,117854:CD,117858:CD,117859:CD,117860:CD,117930:CD,117931:CD,117932
117860 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,117861
117864 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
117869 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
117874 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
117879 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
117887 :: CALL :: call :: V :: v26.setInitials(v78)::CL,132002
117891 :: EXPR :: assign :: I :: v93 = v30.length::DD,117892
117893 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
117892 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
117899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
117904 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
117909 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
117917 :: CALL :: call :: V :: v26.setSurname(v95)::CL,131982
117921 :: CALL :: call :: Z :: v107 = v4.add(v26)::
117927 :: EXPR :: assign :: I :: v15 = v12.length::CF,117928
117926 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,117934
117928 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,117727:CD,117732:CD,117737:CD,117745:CD,117749:CD,117754:CD,117755:CD,117921:CD,117926:CD,117927:CD,117933:CD,117934
117931 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,117932
117930 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,117931:DD,117930:DD,117933
117933 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,117926
117932 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,117858:DD,117861:CF,117859
117934 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,117928:DD,117930:DD,117933:CF,117927
118031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,118036
118036 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
118042 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,118047
118047 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
118053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,118058
118058 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
118079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118084 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118089 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118094 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,118193:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118102 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118107 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,118108:CD,118126:CD,118136:CD,118140:JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118188
118108 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118126 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
118136 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118140 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,118161:CD,118175:CD,118184:CD,118188:CD,118189:CD,118193:CD,118194:CD,118200:CD,118204:CD,118208:CD,118209:CD,118213:CD,118214:CD,118220:CD,118224:CD,118228:CD,118229:CD,118233:CD,118234:CD,118240:CD,118244:CD,118245:CD,118251:CD,118255:CD,118263:CD,118268:CD,118272:CD,118273:CD,118279:CD,118283:CD,118289:CD,118293:CD,118298:CD,118302:CD,118314:CD,118331:CD,118348:CD,118365:CD,118374:CD,118379:CD,118435:CD,118440:JM,118107:JM,118140
118161 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118175 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
118184 :: CALL :: call :: I :: v38 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118189 :: CALL :: call :: I :: v42 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118188 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,118193:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188:JM,118272
118193 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118194 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118200 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,118208:JM,118213:JM,118228:JM,118233:JM,118379
118204 :: CALL :: call :: I :: v49 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118209 :: CALL :: call :: I :: v53 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118208 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,118193:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188:JM,118272
118213 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118214 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118220 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,118228:JM,118233:JM,118379
118224 :: CALL :: call :: I :: v61 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118229 :: CALL :: call :: I :: v65 = v28.length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118228 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,118193:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188:JM,118272
118233 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118234 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118240 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,118379
118245 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118244 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,118441:JM,118440:JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118251 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118255 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
118263 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,118441:JM,118440
118268 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118273 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118272 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118279 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118379:JM,118188
118283 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,118441:JM,118440
118289 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,118441:JM,118440
118293 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,118441:JM,118440
118298 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,118441:JM,118440
118302 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,118441:JM,118440
118314 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
118331 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
118348 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
118365 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
118374 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,118379
118379 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,118380:JM,118379
118380 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,118379
118395 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,118193:JM,118272:JM,118208:JM,118213:JM,118228:JM,118233:JM,118107:JM,118379:JM,118140:JM,118188
118396 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
118404 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
118409 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
118435 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,118441:JM,118440
118441 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
118440 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,118447:CD,118455:CD,118460
118447 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
118452 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
118455 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
118460 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
118592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,118597
118597 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
118603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,118604:CD,118610
118604 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,101966
118607 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,118610
118610 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,118604
118612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,118617:JM,118621
118617 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,118621
118621 :: EXPR :: modify :: Z :: p0 $this .published = v5::
118637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,118642
118642 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
118658 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,118663
118663 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
118679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,118684
118684 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
118690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,118695
118695 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
118701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,118706
118706 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
118712 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,118717
118717 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
118723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,118728
118728 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
118734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,118739
118739 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
118745 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,118749:CD,118753:CD,118757:CD,118762:CD,118767:CD,118772:CD,118777:CD,118782:CD,118787:CD,118792:CD,118800:CD,118820:CD,118824:CD,118825:CD,118830:CD,118838:CD,118843:CD,118848:CD,118856:CD,118860:CD,118902:CD,118907:CD,118912:CD,118920:CD,118925:CD,118947:CD,118952:CD,118974:CD,118979:CD,119001:CD,119006:CD,119025
118749 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,118749
118753 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
118757 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
118762 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
118767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
118772 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
118777 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
118782 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
118787 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
118792 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
118797 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,118824
118800 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,118824
118805 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,118824
118810 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
118815 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
118820 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,118824
118825 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
118824 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,118805:CD,118810:CD,118815:CD,118820:JM,118824
118830 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
118835 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
118838 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
118843 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
118848 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
118853 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,118860
118856 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,118860
118861 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,118888
118860 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,118864:CD,118884:CD,118888:CD,118889:CD,118894
118864 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,118888
118869 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,118888
118874 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
118879 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
118884 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,118888
118889 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
118888 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,118869:CD,118874:CD,118879:CD,118884:JM,118888
118894 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
118899 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
118902 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
118907 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
118912 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
118917 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,118925
118920 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,118925
118925 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,118929:CD,118934:CD,118939
118926 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
118929 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
118934 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
118939 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
118944 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,118952
118947 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,118952
118953 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
118952 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,118956:CD,118961:CD,118966
118956 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
118961 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
118966 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
118971 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,118979
118974 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,118979
118979 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,118983:CD,118988:CD,118993
118980 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
118983 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
118988 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
118993 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
118998 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,119006
119001 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,119006
119007 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
119006 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,119010:CD,119015:CD,119020
119010 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
119015 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
119020 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
119025 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
119143 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,119148
119148 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
119155 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,102376:JM,102456:JM,137673
119154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,119155:CD,119159:CD,119184:CD,119188:JM,119168
119159 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,119168:JM,119188
119164 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,119168:JM,119188
119169 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,119182:CL,70427
119168 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,119183
119173 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,119182:CL,70427
119177 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,119182
119183 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,119155
119182 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,119183:CD,119184:CD,119188:JM,119168
119184 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,119168:JM,119188
119188 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,119164:CD,119168:CD,119169:CD,119173:CD,119177:CD,119182:CD,119191:CD,119196:CD,119200:CD,119205:CD,119210:CD,119214:CD,119219:CD,119227:JM,119188
119191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
119196 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,70427
119200 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
119205 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
119210 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,119168:JM,119188
119214 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,119168:JM,119188
119219 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
119227 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,119155
119245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,119251:CD,119255:CD,119270:CD,119274:CD,119290:CD,119294:CD,119307:CD,119313
119251 :: CALL :: call :: Ljava/util/List :: v6 = p2 $seqRes .getAtomGroups()::CL,58133
119255 :: CALL :: call :: Ljava/util/List :: v8 = p1 $atomRes .getAtomGroups()::CL,58133
119270 :: CALL :: call :: I :: v18 = v8.size()::
119274 :: CALL :: call :: Ljava/lang/Integer :: v20 = valueOf(v18)::
119290 :: CALL :: call :: I :: v26 = v6.size()::
119294 :: CALL :: call :: Ljava/lang/Integer :: v28 = valueOf(v26)::
119307 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,119313:CL,132056
119313 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,119314:CD,119327:CD,119332:CD,119338:CD,119343:CD,119347
119314 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,93447
119327 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,119347:CL,60101
119332 :: CALL :: call :: I :: v40 = v38.size()::JM,119347
119338 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,119348:CL,60101
119343 :: CALL :: call :: I :: v45 = v43.size()::JM,119348
119347 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,119348:CD,119406:CD,119411:CD,119415
119348 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,119355:CD,119365:CD,119382:CD,119390
119355 :: CALL :: call :: Ljava/lang/Integer :: v81 = valueOf(v45)::
119365 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,132520
119382 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v40)::
119390 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v45)::
119406 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,119415:CL,60101
119411 :: CALL :: call :: I :: v50 = v48.size()::JM,119415
119415 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,119443:CD,119449
119443 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,119449:CL,132599
119449 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,119450
119450 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,93447
119524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,119529:CD,119543:CD,119547:JM,119548
119529 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,119547:JM,119548
119534 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,119547
119539 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,98063
119543 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,119547
119547 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,119534:CD,119539:CD,119543:JM,119547
119548 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
119562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,119568:CD,119582:CD,119586:CD,119590:CD,119598
119568 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,119586
119573 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,119586
119578 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,108212
119582 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,119586
119587 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
119586 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,119573:CD,119578:CD,119582:JM,119586
119590 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,119586
119595 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
119598 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,119586
119619 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,150476:JM,155526:JM,155558
119618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,119619:CD,119625
119622 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,119625
119625 :: NORM :: compound :: I :: return v3::CF,119619
119627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,119628:CD,119632:CD,119638
119628 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
119632 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,119638:CL,132867
119638 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,119628
119642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,119647
119647 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
119653 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,119661
119658 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
119661 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
119671 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,138332
119670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,119671:CD,119675:CD,119681
119675 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,119681:CL,92988
119681 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,119671
119685 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,119686:CD,119692
119686 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,102823
119689 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,119692
119692 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,119686
119694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,119702
119702 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
119715 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,119720
119720 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
119727 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
119726 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,119727:CD,119733
119730 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,119733
119733 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,119727
119735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,119736:CD,119741:CD,119748
119736 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
119741 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,119748:CL,133014
119748 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,119736
119753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,119754:CD,119760
119754 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,138562:JM,138477
119757 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,119760
119760 :: NORM :: compound :: Ljava/util/List :: return v3::CF,119754
119763 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,103421
119762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,119763:CD,119769
119766 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,119769
119769 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,119763
119771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,119772:CD,119778
119772 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,103431
119775 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,119778
119778 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,119772
119825 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,119826:CD,119835:CD,119844:CD,119850:CD,119854:CD,119858:CD,119863:JM,97522:JM,97525:JM,97519:CD,119873:CD,119878:CD,119882:CD,119899:CD,119904:CD,119909:CD,119914:CD,119919:CD,119924:CD,119929:CD,119934:CD,119943:CD,119948:CD,119949:JM,119840:JM,119836
119826 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,151150:JM,151184
119835 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,119836:CD,119840:CD,119949:JM,119835
119836 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,119840:JM,119835:JM,119949:JM,119836
119840 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,119949
119844 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,119670
119850 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,119840:JM,119835:JM,119949:JM,119836
119854 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,119840
119858 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
119863 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
119873 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,133161
119878 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,119878:JM,119882
119883 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,119878:JM,119882
119882 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,119883:CD,119892:JM,119878:JM,119882
119892 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,133245
119899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
119904 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,119878:JM,119882
119909 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
119914 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,119840:JM,119835:JM,119949:JM,119836
119919 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,119840
119924 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
119929 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,119840:JM,119835:JM,119949:JM,119836
119934 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,119840
119943 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,119948:CL,58309
119949 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
119948 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,119826
120044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,120048:CD,120049:CD,120057:CD,120062:CD,120066:CD,120067:CD,120075:CD,120083:CD,120088:CD,120093:CD,120097:CD,120098:CD,120106:CD,120114:CD,120119:CD,120124:CD,120128:CD,120129:CD,120137:CD,120145:CD,120150:CD,120155:CD,120159:CD,120160:CD,120168:CD,120176:CD,120181:CD,120186:CD,120190:CD,120191:CD,120199:CD,120207:CD,120212:CD,120217:CD,120221:CD,120222:CD,120230:CD,120238:CD,120243:CD,120248:CD,120252:CD,120253:CD,120261:CD,120266:CD,120270:CD,120271:CD,120279:CD,120287:CD,120292:CD,120297:CD,120301:CD,120302:CD,120310:CD,120318:CD,120323:CD,120328:CD,120332:CD,120333:CD,120341:CD,120349:CD,120354:CD,120359:CD,120363:CD,120364:CD,120372:CD,120380:CD,120385:CD,120390:CD,120394:CD,120395:CD,120403:CD,120411:CD,120416:CD,120421:CD,120425:CD,120426:CD,120434:CD,120442:CD,120447:CD,120452:CD,120456:CD,120457:CD,120465:CD,120470
120049 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
120048 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
120057 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
120062 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
120067 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
120066 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
120075 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
120080 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
120083 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
120088 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
120093 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
120097 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
120098 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
120106 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
120111 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
120114 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
120119 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
120124 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
120129 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
120128 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
120137 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
120142 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
120145 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
120150 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
120155 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
120159 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
120160 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
120168 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
120173 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
120176 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
120181 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
120186 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
120191 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
120190 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
120199 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
120204 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
120207 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
120212 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
120217 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
120221 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
120222 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
120230 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
120235 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
120238 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
120243 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
120248 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
120253 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
120252 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
120261 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
120266 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
120271 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
120270 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
120279 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
120284 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
120287 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
120292 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
120297 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
120301 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
120302 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
120310 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
120315 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
120318 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
120323 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
120328 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
120333 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
120332 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
120341 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
120346 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
120349 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
120354 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
120359 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
120363 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
120364 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
120372 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
120377 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
120380 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
120385 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
120390 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
120395 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
120394 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
120403 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
120408 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
120411 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
120416 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
120421 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
120425 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
120426 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
120434 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
120439 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
120442 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
120447 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
120452 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
120457 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
120456 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
120465 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
120470 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
120563 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,103587
120562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,120563:CD,120579:CD,120601:CD,120611:JM,133378:JM,133381:JM,133375:JM,133372:CD,120621:CD,120625:CD,120636:CD,120652
120579 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,119825
120601 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,119825
120611 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,120625
120621 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,133450
120625 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,120563
120636 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,133467
120652 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,120563
120679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,120686:CD,120690:CD,120777:CD,120781
120686 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120781:CL,52102
120690 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120781
120695 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120781
120700 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,120775:JM,120710:JM,120718:CL,93438
120705 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,120775:JM,120710:JM,120718
120711 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,120712:CD,120713:CD,120718:CD,120719:CF,120770
120710 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,120711
120713 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,120775:JM,120710:JM,120718
120712 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,120775:JM,120710:JM,120718
120719 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,120721:CD,120727:CD,120728:CD,120734:CD,120738:JM,120775:JM,120710:JM,120718
120718 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,120719
120721 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,120775:JM,120710:JM,120718
120727 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,120775:JM,120710:JM,120718
120728 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,120775:JM,120710:JM,120718
120734 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,120738:CL,70356
120739 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,120743:CL,70356
120738 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,120739:CD,120743:CF,120770
120743 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,120745:CD,120749:CD,120753
120745 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,120753:CL,133763
120749 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,120754:CL,133775
120753 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,120754:CF,120770
120754 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,120756:CD,120761:CD,120762
120756 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,120761:CL,80507
120761 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,120762
120762 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,133378:JM,133381:JM,133375:JM,133372:CF,120770
120771 :: CALL :: call :: I :: v17 = v15.size()::JM,120775:JM,120710:JM,120718
120770 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,120783
120775 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,120776
120777 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120781
120776 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,120705:CD,120710:CD,120711:CD,120770:CD,120771:CD,120775:CD,120783:JM,120718:JM,120781
120781 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,120695:CD,120700:CD,120771:CD,120775:CD,120776:CD,120777:CD,120783:JM,120781
120783 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,120775:JM,120710:JM,120718:DD,120712:DD,120727:DD,120770:DD,120776
120832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,120839:CD,120843:CD,120930:CD,120934
120839 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120934:CL,52102
120843 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120934
120848 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120934
120853 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,120928:JM,120871:JM,120863:CL,93438
120858 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,120928:JM,120871:JM,120863
120863 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,120864
120865 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,120928:JM,120871:JM,120863
120864 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,120865:CD,120866:CD,120871:CD,120872:CF,120923
120866 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,120928:JM,120871:JM,120863
120871 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,120872
120872 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,120874:CD,120880:CD,120881:CD,120887:CD,120891:JM,120928:JM,120871:JM,120863
120874 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,120928:JM,120871:JM,120863
120881 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,120928:JM,120871:JM,120863
120880 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,120928:JM,120871:JM,120863
120887 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,120891:CL,70356
120891 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,120892:CD,120896:CF,120923
120892 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,120896:CL,70356
120896 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,120898:CD,120902:CD,120906
120898 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,120906:CL,133787
120902 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,120907:CL,133799
120907 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,120909:CD,120914:CD,120915
120906 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,120907:CF,120923
120909 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,120914:CL,80507
120915 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,133378:JM,133381:JM,133375:JM,133372:CF,120923
120914 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,120915
120923 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,120936
120924 :: CALL :: call :: I :: v17 = v15.size()::JM,120928:JM,120871:JM,120863
120929 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,120858:CD,120863:CD,120864:CD,120923:CD,120924:CD,120928:CD,120936:JM,120871:JM,120934
120928 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,120929
120930 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120934
120934 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,120848:CD,120853:CD,120924:CD,120928:CD,120929:CD,120930:CD,120936:JM,120934
120936 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,120928:JM,120871:JM,120863:DD,120865:DD,120880:DD,120923:DD,120929
120985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,120992:CD,120996:CD,121137:CD,121141
120992 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,121141:CL,52102
120996 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,121141
121001 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,121141
121006 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,121136:JM,121019:CL,58133
121010 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,121136:JM,121019
121015 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,121136:JM,121019
121019 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
121020 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,121024:CL,70356
121024 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,121026:CD,121030:CD,121035:CD,121039:CD,121054:CD,121058:CD,121059:CD,121127:CD,121131
121026 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,121131
121030 :: CALL :: call :: Z :: v29 = v26.add(v22)::
121035 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,121058:JM,121048:CL,94640
121039 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,121058:JM,121048
121044 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,121058:JM,121048
121049 :: CALL :: call :: Z :: v40 = v26.add(v38)::
121048 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
121054 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,121058:JM,121048
121059 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,121131
121058 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,121044:CD,121048:CD,121049:CD,121054:JM,121058:JM,121131
121064 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,121131
121073 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,121312
121077 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,121126:CL,133811
121081 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,121126
121086 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,121126
121095 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,121109:CL,58309
121104 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,121110:CL,58309
121109 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,121110:JM,121126
121110 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,133378:JM,133381:JM,133375:JM,133372:JM,121126
121122 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,121126
121127 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,121131
121126 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,121086:CD,121095:CD,121104:CD,121109:CD,121122:JM,121126:JM,121131
121131 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,121064:CD,121073:CD,121077:CD,121081:CD,121122:CD,121126:CD,121127:JM,121131:JM,121136:JM,121019
121132 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,121136:JM,121019
121137 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,121141
121136 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,121015:CD,121019:CD,121020:CD,121024:CD,121132:JM,121136:JM,121141
121141 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,121001:CD,121006:CD,121010:CD,121132:CD,121136:CD,121137:JM,121141
121202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,121209:CD,121213:CD,121283:CD,121287
121209 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,121287:CL,52102
121213 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,121287
121218 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,121287
121223 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,121282:CL,58133
121227 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,121282
121232 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,121282
121237 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,121277:CL,115540
121241 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,121277
121246 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,121277
121251 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,121255:CL,133820
121255 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,121256:CD,121260:CD,121264:JM,121277
121256 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,121264:CL,133820
121260 :: CALL :: call :: I :: v38 = v36.size()::JM,121264
121265 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,121269:CL,133820
121264 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,121265:CD,121269:CD,121270:JM,121277
121269 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
121270 :: CALL :: call :: V :: v41.trimToSize()::
121273 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,121277
121277 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,121246:CD,121251:CD,121255:CD,121273:JM,121277:JM,121282
121278 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,121282
121283 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,121287
121282 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,121232:CD,121237:CD,121241:CD,121273:CD,121277:CD,121278:JM,121282:JM,121287
121287 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,121218:CD,121223:CD,121227:CD,121278:CD,121282:CD,121283:JM,121287
121313 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,115184:JM,115416
121312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,121313:CD,121316:CD,121320:CD,121324:CD,121326:CD,121331:CD,121332
121316 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,121331:JM,121326
121320 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,121331:JM,121326
121324 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,121331:JM,121326
121326 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,121331:JM,121326
121331 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,121332:JM,121340:DD,121362
121332 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,121335:CD,121340:CD,121344:CD,121349:CD,121354:CD,121362:CD,121365:CD,121370:CD,121375:CD,121386:CD,121390:CD,121395:CD,121405:CD,121418
121335 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
121340 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,121340
121344 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
121349 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
121354 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
121362 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,121313
121365 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
121370 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,121331:JM,121326
121375 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
121386 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
121390 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
121395 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
121405 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,121418:CL,133944
121418 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,121313
121443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,121444:CD,121450
121444 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,103700:JM,103871
121447 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,121450
121450 :: NORM :: compound :: Ljava/util/List :: return v3::CF,121444
121453 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,165127:JM,165153
121452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,121453:CD,121459
121456 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,121459
121459 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,121453
121461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,121476:CD,121485:CD,121490:CD,121494:JM,121514
121476 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
121485 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,121494:CL,58116
121490 :: CALL :: call :: I :: v13 = v11.size()::JM,121494
121494 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,121496:CD,121504:CD,121510:CD,121514:JM,121494
121496 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,121461
121504 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,121494:JM,121514
121510 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,121514:CL,134162
121514 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,121516:CD,121536
121516 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,121461
121536 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,134175
121573 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,104425:JM,121609:JM,121629
121572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,121573:CD,121582:CD,121586:JM,121600:JM,121620
121582 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,121586:CL,93747
121587 :: NORM :: compound :: Z :: return #(0)::DD,121573
121586 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,121587:CD,121591:CD,121596:CD,121600
121591 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,121600:CL,58116
121596 :: CALL :: call :: I :: v13 = v11.size()::JM,121600
121600 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,121602:CD,121609:CD,121610:CD,121616:CD,121620:JM,121600
121602 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,121609:CL,121572
121609 :: NORM :: compound :: Z :: return v26::DD,121573
121610 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,121600:JM,121620
121616 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,121620:CL,134162
121620 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,121622:CD,121629:CD,121631
121622 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,121629:CL,121572
121629 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,121630:CD,121631
121631 :: NORM :: compound :: Z :: return #(1)::DD,121573
121630 :: NORM :: compound :: Z :: return #(0)::DD,121573
121675 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,104594
121674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,121675:CD,121678:CD,121682:CD,121687:CD,121691
121678 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,134316
121682 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
121687 :: CALL :: call :: Z :: v8 = v5.exists()::JM,121691
121691 :: NORM :: compound :: Z :: return v8::DD,121675
121698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,121703:CD,121712:CD,121716:CD,121721
121703 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,134351
121712 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,134316
121716 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
121721 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,134430
121741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,121745:CD,121746:CD,121758:CD,121759:CD,121773
121745 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
121746 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,134316
121759 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
121758 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,121759
121773 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,134647
121790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,121797:CD,121801:CD,121814:CD,121826:CD,121837:CD,121849
121794 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,121801
121797 :: CALL :: call :: Z :: v5 = v3.get()::JM,121801
121801 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,121803:CD,121807:CD,121831:CD,121857
121803 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,121807:CL,135375
121807 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,121808
121808 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,135399
121814 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
121823 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
121826 :: CALL :: call :: V :: v16.set(#(0))::
121831 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,135442
121837 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
121846 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
121849 :: CALL :: call :: V :: v24.set(#(0))::
121854 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,121857
121857 :: CALL :: call :: V :: v26.set(#(1))::JM,121857
121873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,121874:CD,121877:CD,121881:CD,121886:CD,121890
121874 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,104696
121877 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,135491
121881 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
121886 :: CALL :: call :: Z :: v8 = v5.exists()::JM,121890
121890 :: NORM :: compound :: Z :: return v8::DD,121874
121897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,121902:CD,121911:CD,121915:CD,121920
121902 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,134351
121911 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,135491
121915 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
121920 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,134430
121940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,121944:CD,121945:CD,121957:CD,121958:CD,121972
121945 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,135491
121944 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
121957 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,121958
121958 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
121972 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,135526
121989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,121995:CD,121997:CD,122001:CD,122035:CD,122039
121995 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,122039:JM,122010
121997 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,122039:JM,122010
122001 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,122039:JM,122010
122006 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,122039:JM,122010
122011 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,122015
122010 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,122015
122015 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,122020
122016 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,122020
122020 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,122032:JM,122039:JM,122010
122032 :: CALL :: call :: V :: v7.remove()::
122035 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,122039:JM,122010
122039 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,122006:CD,122010:CD,122011:CD,122015:CD,122016:CD,122020:CD,122035:JM,122039
122139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,122143
122143 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,136292
122163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,122186:CD,122190:CD,122202:CD,122276:CD,122280
122183 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,122186
122187 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,136292
122186 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,122187:CF,122190
122190 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,122196
122196 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
122199 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,122211:JM,122280
122202 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,122211:JM,122280
122207 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,122211:JM,122280
122211 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
122212 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,122216:CL,108236
122217 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,122226:JM,122221:JM,122222:CL,105197
122216 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,122217:CD,122221
122221 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,122222:CD,122226
122222 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,122226:JM,122222
122226 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,122229:CD,122234
122229 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
122234 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
122242 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,122247
122247 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,122258:CD,122251:CD,122256:CD,122265:CD,122318
122251 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,122256
122256 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,122318
122258 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,122318
122265 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
122271 :: CALL :: call :: Z :: v53 = v51.add(v25)::
122276 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,122211:JM,122280
122280 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,122207:CD,122211:CD,122212:CD,122216:CD,122242:CD,122247:CD,122271:CD,122276:CD,122318:JM,122280
122318 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
122527 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,105216
122526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,122527:CD,122531:CD,122536:CD,122540:CD,122548:CD,122553:CD,122558:CD,122563:CD,122567:CD,122572:CD,122580:CD,122584:CD,122588:CD,122592:CD,122596
122531 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
122536 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
122540 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
122548 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
122553 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
122558 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
122563 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,81417
122567 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
122572 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
122580 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,81527
122584 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,122592:JM,122596:CL,71814
122588 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,122592:JM,122596
122592 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,122592:JM,122596
122597 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,122601:CL,136447
122596 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,122597:CD,122601:CD,122602
122601 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,122527
122602 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,122527
122633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CD,122637:CD,122652:CD,122663
122637 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CD,122643:CD,122647:CD,122675:CD,122679:CD,122706
122643 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,122637
122647 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
122652 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
122659 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
122663 :: CALL :: call :: I :: v19 = parseInt(v17)::
122671 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,122706
122675 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,99647
122679 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,122680:CD,122685:CD,122689
122680 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,99658
122685 :: CALL :: call :: I :: v29 = v26.length()::JM,122689
122689 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,122690:CD,122699
122690 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
122699 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,99658
122706 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,122679:JM,122689
122806 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,122813:CD,122872:CD,122879:CD,123000:CD,123004:CD,123022:CD,123026:CD,123072:CD,123076:CD,123092:CD,123096:CD,123112:CD,123116:CD,123422:CD,123426:CD,123449:CD,123455:CD,123459:CD,123466:CD,123470:CD,123650:CD,123653:CD,123656:CD,123663:CD,123770:CD,123774:CD,123775:CD,123779:CD,123810:CD,123815:CD,123820:CD,123828:CD,123832
122810 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,122813
122813 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,122820:CD,122834:CD,122839
122820 :: CALL :: call :: V :: v12.addGroup(v13)::CL,93505
122834 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,122839:CL,136680
122839 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,122846
122840 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
122843 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
122846 :: CALL :: call :: Z :: v24 = v21.add(v22)::
122872 :: CALL :: call :: V :: v25.addModel(v26)::CL,92758
122876 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,122888:JM,123004
122879 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,122888:JM,123004
122884 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,122888:JM,123004
122888 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,122964
122916 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
122926 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,136725
122931 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,136794
122936 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,136975
122945 :: CALL :: call :: V :: v58.setChainID(v60)::CL,93358
122949 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
122952 :: CALL :: call :: Z :: v64 = v62.add(v58)::
122959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
122964 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,122964
122968 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
122973 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
122978 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
122983 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
122988 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
122996 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,137096
123000 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,122888:JM,123004
123004 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,122884:CD,122888:CD,122916:CD,122926:CD,122931:CD,122936:CD,122945:CD,122952:CD,122959:CD,122964:CD,122968:CD,122973:CD,122978:CD,122983:CD,122988:CD,122996:CD,123000:JM,123004
123022 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,123026:CL,102319
123026 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,123030:CD,123034:CD,123064
123030 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,123034:CL,89387
123034 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,123041:CD,123064
123041 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,137636
123064 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,102406
123069 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,123076
123072 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,123076
123076 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
123083 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,123086
123086 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
123089 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,123096
123092 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,123096
123096 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
123103 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,123106
123106 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
123112 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,123116:CL,137878
123116 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,123334:CD,123338:CD,123414:CD,123418:CD,123842:CD,123845
123121 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,123139:JM,123321:CL,58116
123126 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
123130 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,123139:JM,123321
123135 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,123139:JM,123321
123139 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
123140 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,123156:JM,123316
123143 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,123156:JM,123316
123147 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,123156:JM,123316
123152 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,123156:JM,123316
123157 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,123166:CL,70427
123156 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,123166
123161 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,123166
123166 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,123840:CD,123170:CD,123183:CD,123187:CD,123191:CD,123208:CD,123212:CD,123216:CD,123220:CD,123239:CD,123243:CD,123244:CD,123248:CD,123267:CD,123271:CD,123276:CD,123281:CD,123312:CD,123316:CD,123837:CD,123838:CD,123841
123170 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
123183 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,58133
123187 :: CALL :: call :: I :: v205 = v203.size()::
123191 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
123208 :: CALL :: call :: V :: v179.setChainID(v197)::CL,93358
123212 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,137887
123216 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,123243:CL,58133
123220 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,123243
123225 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,123243
123230 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,123234:CL,70356
123235 :: CALL :: call :: V :: v222.setChainId(v197)::CL,92943
123234 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,123837:CD,123235
123239 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,123243
123243 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,123225:CD,123230:CD,123234:CD,123239:CD,123837:JM,123243
123244 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,123271:CL,93438
123248 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,123271
123253 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,123271
123258 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,123262:CL,70356
123263 :: CALL :: call :: V :: v234.setChainId(v197)::CL,92943
123262 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,123838:CD,123263
123267 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,123271
123271 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,123253:CD,123258:CD,123262:CD,123267:CD,123838:JM,123271
123276 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,123281:CL,136680
123281 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,123282:CD,123288:CD,123292:CD,123306:CD,123310:CD,123839:CD,123841
123282 :: CALL :: call :: Z :: v242 = v171.add(v179)::
123288 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,123310:CL,58133
123292 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,123310
123297 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,123310
123302 :: CALL :: call :: V :: v240.addGroup(v251)::CL,93505
123306 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,123310
123310 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,123297:CD,123302:CD,123306:CD,123839:JM,123310
123312 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,123156:JM,123316
123317 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,123139:JM,123321
123316 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,123841:CD,123152:CD,123156:CD,123157:CD,123161:CD,123166:CD,123840:JM,123316
123321 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,123135:CD,123139:CD,123143:CD,123147:CD,123312:CD,123316:CD,123317:CD,123840:CD,123841:JM,123321
123325 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,92811
123330 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,123842
123334 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,123338:CL,93747
123338 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,123121:CD,123126:CD,123130:CD,123317:CD,123321:CD,123325:CD,123330:CD,123334:CD,123841:CD,123842
123344 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,123409:CL,58116
123349 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,123409
123354 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,123409
123359 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,123404:JM,123375
123362 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,123404:JM,123375
123366 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,123404:JM,123375
123371 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,123404:JM,123375
123375 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,123385
123376 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,123385:CL,70427
123380 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,123385
123385 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,123843:CD,123389:CD,123395:CD,123400:CD,123404:CD,123844
123389 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
123395 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,137887
123400 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,123404:JM,123375
123405 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,123409
123404 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,123844:CD,123371:CD,123375:CD,123376:CD,123380:CD,123385:CD,123843:JM,123404
123409 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,123354:CD,123362:CD,123366:CD,123400:CD,123404:CD,123405:CD,123843:CD,123844:JM,123409:CF,123410
123410 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,123845
123414 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,123418:CL,93747
123418 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,123344:CD,123349:CD,123405:CD,123409:CD,123410:CD,123414:CD,123844:CD,123845
123422 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,123426:CL,89387
123426 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,123430:CD,123434:CD,123441:CD,123445
123430 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,123434:CL,89293
123435 :: CALL :: call :: V :: p0 $this .addBonds()::CL,137898
123434 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,123435
123441 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,123445:CL,89366
123445 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,123446
123446 :: CALL :: call :: V :: p0 $this .addCharges()::CL,137932
123449 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,137944
123455 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,123459:CL,89387
123459 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,123460
123460 :: CALL :: call :: V :: p0 $this .addSites()::CL,138254
123466 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,123470:CL,99071
123471 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
123470 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,123471:CD,123478:CD,123634:CD,123638:CD,123646
123475 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,123638:JM,123487
123478 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,123638:JM,123487
123483 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,123638:JM,123487
123487 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,123510:JM,123514:JM,123519:JM,123846:JM,123544:JM,123564:CF,123488
123488 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
123493 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,123505:JM,123529
123496 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,123505:JM,123529
123501 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,123505:JM,123529
123505 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,123506:JM,123514:JM,123519
123506 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,123506:JM,123514:JM,123519
123510 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,123510:JM,123514:JM,123519
123514 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,123514:JM,123519
123519 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,123520:JM,123505:JM,123529
123520 :: CALL :: call :: Z :: v312 = v295.add(v304)::
123525 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,123505:JM,123529
123529 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,123501:CD,123505:CD,123506:CD,123510:CD,123514:CD,123519:CD,123525:JM,123529
123537 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,138687
123544 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,123846:JM,123544
123548 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,123846
123564 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,123564
123568 :: CALL :: call :: I :: v334 = parseInt(v332)::
123607 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,123612:CD,123616:CD,123620:CD,123624:CD,123628:JM,123638:JM,123487
123612 :: CALL :: call :: V :: v354.setId(v330)::CL,131457
123616 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,131468
123620 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,131479
123624 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
123628 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
123634 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,123638:JM,123487
123638 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,123483:CD,123487:CD,123488:CD,123496:CD,123525:CD,123529:JM,138672:JM,138679:CD,123537:CD,123544:CD,123548:CD,123564:CD,123568:CD,123607:CD,123634:CD,123846:JM,123638
123646 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,103353
123650 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,138811
123653 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,139185
123656 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,123832:JM,123788
123660 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,123774
123663 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,123774
123668 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,123774
123673 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
123681 :: CALL :: call :: V :: v382.setDetails(v385)::CL,139247
123696 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,139258
123704 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,139269
123712 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,139280
123720 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,139291
123728 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,139302
123736 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,139313
123744 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,123749
123749 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,123750:DD,123849
123751 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,123849
123750 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,123849:CF,123751:CD,123759
123759 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
123765 :: CALL :: call :: Z :: v422 = v420.add(v382)::
123770 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,123774
123775 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,123832:JM,123788
123774 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,123668:CD,123673:CD,123681:CD,123696:CD,123704:CD,123712:CD,123720:CD,123728:CD,123736:CD,123744:CD,123749:CD,123750:CD,123765:CD,123770:CD,123849:JM,123774:JM,123832:JM,123788
123779 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,123832:JM,123788
123784 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,123832:JM,123788
123788 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
123792 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,119670
123797 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
123803 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,93494
123810 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
123815 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
123820 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
123828 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,123832:JM,123788
123832 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,123784:CD,123788:CD,123792:CD,123797:CD,123803:CD,123828:JM,123832
123837 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,123243:DD,123837:DD,123838
123839 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,123310:DD,123839:DD,123841
123838 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,123271:DD,123838:DD,123839:DD,123841
123841 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,123139:JM,123321:DD,123330:DD,123840
123840 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,123156:JM,123316:DD,123837:DD,123840:DD,123841
123843 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,123404:JM,123375:DD,123843:DD,123844
123842 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,123338:DD,123841
123845 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,123418:DD,123844
123844 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,123409:DD,123410:DD,123843
123846 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,123564:DD,123607
123849 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
124159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,124160:CD,124164:CD,124168:CD,124172:CD,124176:JM,124192:JM,124208:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124160 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,106305:JM,106295
124164 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,124177:DD,124193:DD,124471
124168 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124172 :: CALL :: call :: I :: v9 = v7.length()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124177 :: NORM :: compound :: Ljava/util/List :: return v4::DD,124160
124176 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,124177:CD,124178:CD,124182:CD,124186:JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235
124178 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124182 :: CALL :: call :: I :: v14 = v12.length()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124187 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124186 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,124187:CD,124192:CD,124451:CD,124455:CD,124456:CD,124460:CD,124465:CD,124471:CD,124483:CD,124484:CD,124485:CD,124486:CD,124487:JM,124208:JM,124176:JM,124276:JM,124356:JM,124473:JM,124472:JM,124235:JM,124186
124193 :: NORM :: compound :: Ljava/util/List :: return v4::DD,124160
124192 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,124193:CD,124451:CD,124455:CD,124456:CD,124460:CD,124465:CD,124471:CD,124483:CD,124484:CD,124485:CD,124486:CD,124487
124195 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124200 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124204 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124209 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,124472:CD,124210:CD,124211:CD,124216
124208 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,124209
124211 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124210 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124216 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124221 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124220 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,124473:CD,124221:CD,124222:CD,124227
124222 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124227 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124231 :: CALL :: call :: C :: v43 = v25.charValue()::JM,124276:JM,124356:JM,124473:JM,124472:JM,124235
124235 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,124236:CD,124272:CD,124276:JM,124356:JM,124473:JM,124472:JM,124235
124237 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,124242
124236 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,124253:CD,124237:CD,124242:CD,124254:CD,124262:CD,124267:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124243 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
124242 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,124243:CD,124247
124247 :: CALL :: call :: Z :: v50 = v4.add(v48)::
124253 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
124254 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
124262 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,124481
124267 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,124481
124272 :: CALL :: call :: C :: v60 = v25.charValue()::JM,124276:JM,124356:JM,124473:JM,124472:JM,124235
124277 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,124278:CD,124290:CD,124326:CD,124474:CD,124475
124276 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,124277:CD,124352:CD,124356:JM,124276:JM,124473:JM,124472:JM,124235
124279 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,124280:CD,124284:CD,124288:CD,124289:CD,124474:CD,124475
124278 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,124474:CD,124279
124280 :: CALL :: call :: C :: v63 = v35.charValue()::JM,124288
124284 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,124288
124289 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,124474
124288 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,124474:CD,124289:CD,124475
124291 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,124296
124290 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,124307:CD,124291:CD,124296:CD,124308:CD,124316:CD,124321:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124297 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
124296 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,124297:CD,124301
124301 :: CALL :: call :: Z :: v74 = v4.add(v72)::
124307 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
124308 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
124316 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,124481
124321 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,124481
124327 :: CALL :: call :: C :: v84 = v41.charValue()::JM,124331
124326 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,124327:CD,124331:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124331 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,124333:CD,124334:CD,124342:CD,124347:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124333 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
124334 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
124342 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,124481
124347 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,124481
124352 :: CALL :: call :: C :: v94 = v25.charValue()::JM,124276:JM,124356:JM,124473:JM,124472:JM,124235
124357 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,124358:CD,124370:CD,124406:CD,124476:CD,124477
124356 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,124432:CD,124357:CD,124433:CD,124441:CD,124446:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124359 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,124360:CD,124364:CD,124368:CD,124369:CD,124476:CD,124477
124358 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,124476:CD,124359
124360 :: CALL :: call :: C :: v97 = v35.charValue()::JM,124368
124364 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,124368
124369 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,124476
124368 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,124476:CD,124369:CD,124477
124371 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,124376
124370 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,124387:CD,124371:CD,124376:CD,124388:CD,124396:CD,124401:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124377 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
124376 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,124377:CD,124381
124381 :: CALL :: call :: Z :: v108 = v4.add(v106)::
124387 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
124388 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
124396 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,124481
124401 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,124481
124407 :: CALL :: call :: C :: v118 = v41.charValue()::JM,124411
124406 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,124407:CD,124411:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124411 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,124413:CD,124414:CD,124422:CD,124427:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482
124413 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
124414 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
124422 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,124481
124427 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,124481
124433 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
124432 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
124441 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,124481
124446 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,124481
124451 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124455:JM,124473:JM,124472:JM,124235:JM,124186
124450 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,124487:CF,124483
124455 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,124195:CD,124200:CD,124204:CD,124208:CD,124209:CD,124220:CD,124231:CD,124235:CD,124450:CD,124451:CD,124472:CD,124473:CD,124478:CD,124479:CD,124480:CD,124481:CD,124482:CD,124483:CD,124484:CD,124485:CD,124486:CD,124487:JM,124192:JM,124176:JM,124276:JM,124356:JM,124455:JM,124186:JM,124465
124456 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,124465
124460 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,124465
124465 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,124466:CF,124471
124466 :: CALL :: call :: Z :: v151 = v4.add(v144)::
124471 :: NORM :: compound :: Ljava/util/List :: return v4::DD,124160
124473 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,124276:JM,124356:JM,124473:JM,124472:JM,124235:DD,124326:JM,124331:DD,124406:JM,124411
124472 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,124279:JM,124288:DD,124359:JM,124368:CF,124220
124475 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,124290
124474 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,124475:DD,124482
124477 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,124370
124476 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,124477:DD,124482
124479 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,124480:DD,124484
124478 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,124479:DD,124483
124481 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,124482:DD,124486
124480 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,124481:DD,124485
124483 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,124484:DD,124236:DD,124277:DD,124357:DD,124478
124482 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,124450
124485 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,124486:DD,124278:DD,124480
124484 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,124485:DD,124358:DD,124479
124487 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,124192:JM,124208:JM,124176:JM,124276:JM,124356:JM,124473:JM,124472:JM,124235:JM,124186:DD,124209:DD,124210:DD,124220:DD,124221:DD,124289:DD,124369:DD,124455:DD,124474:DD,124476:DD,124482
124486 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,124487:JM,124242:JM,124296:JM,124376:JM,124465:DD,124481
124649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,124650:CD,124657:CD,124661:CD,124678:CD,124679:CD,124687:CD,124691:CD,124695:CD,124712:CD,124713:CD,124733:CD,124734:CD,124735:CD,124921:CD,124925:CD,124926:CD,124929:CD,124930:CD,124931:JM,124751
124650 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,106687
124657 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,124657:JM,124661:JM,124925:JM,124751:JM,124926
124661 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,124661:JM,124925:JM,124751:JM,124926
124679 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,124733:CL,139324
124678 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,124650
124687 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,124695
124691 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
124695 :: EXPR :: assign :: I :: v27 = v24.length::DD,124712
124705 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
124711 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,124929
124713 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
124712 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,124713:CD,124705:CD,124711:CD,124929
124726 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
124733 :: EXPR :: assign :: I :: v39 = v20.length::CF,124734
124732 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,124930
124735 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,124657:JM,124661:JM,124925:JM,124751:JM,124926
124734 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,124726:CD,124732:CD,124733:CD,124930:JM,124657:JM,124661:JM,124925:JM,124751:JM,124926
124740 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,124661:JM,124925:JM,124751:JM,124926
124745 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,124661:JM,124925:JM,124751:JM,124926:DD,124931
124746 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,124661:JM,124925:JM,124751:JM,124926
124751 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,124856:JM,124862:JM,124868
124752 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,124757
124757 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,124758:JM,124772:JM,124776:JM,124782:JM,124803:JM,124791:JM,124795:JM,124799
124759 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,139501
124758 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,124767:CD,124759:CD,124772:CD,124776:CD,124782:CD,124786:CD,124791:CD,124795:CD,124799:CD,124803:CD,124809:CD,124814:CD,124818:CD,124823:CD,124824:CD,124931
124767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
124772 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,124772:JM,124776:JM,124782
124776 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,124776:JM,124782
124782 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,124782
124786 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
124791 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,124803:JM,124791
124795 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,124803:JM,124795:JM,124799
124799 :: CALL :: call :: I :: v77 = v75.length()::JM,124803:JM,124799
124803 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,124803
124809 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
124814 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
124818 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,124823
124823 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,124824:JM,124833
124825 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,139501
124824 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,124825:CD,124833:CD,124841:CD,124845:CD,124846:CD,124850:CD,124855:CD,124931
124833 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,124833
124837 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,124850:JM,124855:JM,124841
124841 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,124850:JM,124855:JM,124841
124845 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,124850:JM,124855:JM,124846
124846 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,124850:JM,124855:JM,124846
124850 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,124850:JM,124855
124855 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,124856:CD,124931
124857 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,124862
124856 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,124931:CD,124857:CD,124862
124863 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,124868
124862 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,124931:CD,124863:CD,124868
124869 :: CALL :: call :: I :: v108 = parseInt(v57)::
124868 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,124931:CD,124869:CD,124873
124873 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
124921 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,124661:JM,124925:JM,124751:JM,124926
124925 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,124740:CD,124745:CD,124746:CD,124751:CD,124752:CD,124757:CD,124758:CD,124921:CD,124931:JM,124661:JM,124925:CF,124926
124926 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,124650
124929 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,124711:DD,124712
124931 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,124661:JM,124925:JM,124751:JM,124926:DD,124745
124930 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,124732:DD,124734:CF,124733
125052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,125060:CD,125074:CD,125078
125057 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125078
125060 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125078
125065 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125078
125070 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,139651
125074 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125078
125078 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125065:CD,125070:CD,125074:JM,125078
125088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,125096:CD,125110:CD,125114
125093 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125114
125096 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125114
125101 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125114
125106 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,139694
125110 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125114
125114 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125101:CD,125106:CD,125110:JM,125114
125124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,125132:CD,125146:CD,125150
125129 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125150
125132 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125150
125137 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125150
125142 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,140529
125146 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125150
125150 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125137:CD,125142:CD,125146:JM,125150
125160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,125168:CD,125182:CD,125186
125165 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125186
125168 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125186
125173 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125186
125178 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,140688
125182 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125186
125186 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125173:CD,125178:CD,125182:JM,125186
125196 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,125204:CD,125218:CD,125222
125201 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125222
125204 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125222
125209 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125222
125214 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,140762
125218 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125222
125222 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125209:CD,125214:CD,125218:JM,125222
125232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,125240:CD,125254:CD,125258
125237 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125258
125240 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125258
125245 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125258
125250 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,140863
125254 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125258
125258 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125245:CD,125250:CD,125254:JM,125258
125268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,125276:CD,125290:CD,125294
125273 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125294
125276 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125294
125281 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125294
125286 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,140904
125290 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125294
125294 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125281:CD,125286:CD,125290:JM,125294
125304 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,125312:CD,125326:CD,125330
125309 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125330
125312 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125330
125317 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125330
125322 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,141103
125326 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125330
125330 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125317:CD,125322:CD,125326:JM,125330
125340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,125348:CD,125362:CD,125366
125345 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125366
125348 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125366
125353 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125366
125358 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,141212
125362 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125366
125366 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125353:CD,125358:CD,125362:JM,125366
125376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,125384:CD,125398:CD,125402
125381 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125402
125384 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125402
125389 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125402
125394 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,141235
125398 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125402
125402 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125389:CD,125394:CD,125398:JM,125402
125412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,125420:CD,125434:CD,125438
125417 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125438
125420 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125438
125425 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125438
125430 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,141415
125434 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125438
125438 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125425:CD,125430:CD,125434:JM,125438
125448 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,125456:CD,125470:CD,125474
125453 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125474
125456 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125474
125461 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125474
125466 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,141456
125470 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125474
125474 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125461:CD,125466:CD,125470:JM,125474
125484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,125492:CD,125506:CD,125510
125489 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125510
125492 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125510
125497 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125510
125502 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,141858
125506 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125510
125510 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125497:CD,125502:CD,125506:JM,125510
125520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,125528:CD,125542:CD,125546
125525 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125546
125528 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125546
125533 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125546
125538 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,141887
125542 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125546
125546 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125533:CD,125538:CD,125542:JM,125546
125556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,125564:CD,125578:CD,125582
125561 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125582
125564 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125582
125569 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125582
125574 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,141910
125578 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125582
125582 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125569:CD,125574:CD,125578:JM,125582
125592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,125600:CD,125614:CD,125618
125597 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125618
125600 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125618
125605 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125618
125610 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,142041
125614 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125618
125618 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125605:CD,125610:CD,125614:JM,125618
125628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,125636:CD,125650:CD,125654
125633 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125654
125636 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125654
125641 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125654
125646 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,142346
125650 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125654
125654 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125641:CD,125646:CD,125650:JM,125654
125664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,125672:CD,125686:CD,125690
125669 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125690
125672 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125690
125677 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125690
125682 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,142363
125686 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125690
125690 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125677:CD,125682:CD,125686:JM,125690
125700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,125708:CD,125722:CD,125726
125705 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125726
125708 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125726
125713 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125726
125718 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,142392
125722 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125726
125726 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125713:CD,125718:CD,125722:JM,125726
125736 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,125744:CD,125758:CD,125762
125741 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125762
125744 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125762
125749 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125762
125754 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,142415
125758 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125762
125762 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125749:CD,125754:CD,125758:JM,125762
125772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,125780:CD,125794:CD,125798
125777 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125798
125780 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125798
125785 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125798
125790 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,142438
125794 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125798
125798 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125785:CD,125790:CD,125794:JM,125798
125808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,125816:CD,125830:CD,125834
125813 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125834
125816 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125834
125821 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125834
125826 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,142511
125830 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125834
125834 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125821:CD,125826:CD,125830:JM,125834
125844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,125852:CD,125866:CD,125870
125849 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125870
125852 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125870
125857 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125870
125866 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125870
125870 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125857:CD,125866:JM,125870
125880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,125888:CD,125902:CD,125906
125885 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125906
125888 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125906
125893 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125906
125898 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,142608
125902 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125906
125906 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125893:CD,125898:CD,125902:JM,125906
125916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,125924:CD,125938:CD,125942
125921 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125942
125924 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125942
125929 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125942
125934 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,142652
125938 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125942
125942 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125929:CD,125934:CD,125938:JM,125942
125952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,125960:CD,125974:CD,125978
125957 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125978
125960 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125978
125965 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125978
125970 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,142862
125974 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125978
125978 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125965:CD,125970:CD,125974:JM,125978
125988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,125996:CD,126010:CD,126014
125993 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126014
125996 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126014
126001 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126014
126006 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,142953
126010 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126014
126014 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126001:CD,126006:CD,126010:JM,126014
126024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,126032:CD,126046:CD,126050
126029 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126050
126032 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126050
126037 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126050
126042 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,143131
126046 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126050
126050 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126037:CD,126042:CD,126046:JM,126050
126060 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,126068:CD,126082:CD,126086
126065 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126086
126068 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126086
126073 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126086
126078 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,143169
126082 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126086
126086 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126073:CD,126078:CD,126082:JM,126086
126096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,126104:CD,126118:CD,126122
126101 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126122
126104 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126122
126109 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126122
126114 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,143198
126118 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126122
126122 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126109:CD,126114:CD,126118:JM,126122
126132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,126140:CD,126154:CD,126158
126137 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126158
126140 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126158
126145 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126158
126150 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,143215
126154 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126158
126158 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126145:CD,126150:CD,126154:JM,126158
126168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,126176:CD,126190:CD,126194
126173 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126194
126176 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126194
126181 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126194
126186 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,143244
126190 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126194
126194 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126181:CD,126186:CD,126190:JM,126194
126204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,126212:CD,126226:CD,126230
126209 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126230
126212 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126230
126217 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126230
126222 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,143280
126226 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126230
126230 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126217:CD,126222:CD,126226:JM,126230
126240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,126248:CD,126262:CD,126266
126245 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126266
126248 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126266
126253 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126266
126262 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126266
126266 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126253:CD,126262:JM,126266
126276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,126284:CD,126298:CD,126302
126281 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126302
126284 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126302
126289 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126302
126298 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126302
126302 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126289:CD,126298:JM,126302
126312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,126320:CD,126334:CD,126338
126317 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,126338
126320 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,126338
126325 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,126338
126330 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,143340
126334 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,126338
126338 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,126325:CD,126330:CD,126334:JM,126338
126348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,126358:CD,126374:CD,126378
126355 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,126378
126358 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,126378
126363 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,126378
126374 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,126378
126378 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,126363:CD,126374:JM,126378
126396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,126404:CD,126408:CD,126417:CD,126425:CD,126432:CD,126443
126404 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,126408:CL,92484
126408 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
126417 :: CALL :: call :: V :: v10.setTitle(v12)::CL,98366
126425 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,98326
126432 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,92493
126443 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,92473
126586 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,126590:CD,126594:CD,126639:CD,126643:CD,126647:CD,126648:CD,126652:CD,127255:CD,127259:CD,127260:CD,127326:CD,127330:CD,127332
126590 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,126661:JM,127259:JM,126675:JM,127254:JM,127248:JM,127330
126594 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
126602 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,143610
126607 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,126611:CL,143627
126611 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,126615:CD,126620:CD,126626:CD,126630
126615 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,143610
126620 :: CALL :: call :: Z :: v22 = v5.add(v20)::
126626 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
126630 :: CALL :: call :: Z :: v26 = v3.add(v24)::
126635 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,127332
126639 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,126647:CL,52102
126643 :: CALL :: call :: I :: v12 = v10.size()::JM,126647
126647 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,126648:CD,126602:CD,126607:CD,126611:CD,126635:CD,126639:CD,126643:CD,127332
126648 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,127248
126652 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,126661:JM,127259
126657 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,126661:JM,127259
126661 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,126680
126662 :: CALL :: call :: I :: v40 = v38.intValue()::JM,126680
126666 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,126675:JM,127254
126671 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,126675:JM,127254
126675 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,126680
126676 :: CALL :: call :: I :: v49 = v47.intValue()::JM,126680
126680 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,126685:CD,126693:CD,126698:CD,126702:CD,126710:CD,126720:CD,126726:CD,126731:CD,127250:CD,127254
126685 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,143610
126693 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,143610
126698 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
126702 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
126710 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,143678
126720 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,143678
126726 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,126731:CL,144009
126731 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,126732:CD,126737:CD,126763:CD,126768
126732 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,126737:CL,144009
126737 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,126738:CD,126743:CD,126748:CD,126752:CD,126756:CD,126763:CD,126768:CD,126844:CD,126848:CD,126852:CD,126856:CD,126860:CD,126861:CD,126865:CD,126866:CD,126867:CD,126868:CD,126869:CD,126870:CD,126871:CD,126872:CD,126873:CD,126894:CD,126902:CD,126912:CD,126920:CD,126930:CD,126938:CD,126954:CD,126959:CD,126964:CD,126969:CD,126977:CD,126978:CD,127161:CD,127162:CD,127240:CD,127244:CD,127248:CD,127333:CD,127334:CD,127335
126738 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,127333:JM,126748:CL,144025
126743 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,126752:JM,127334:CL,144025
126748 :: CALL :: call :: I :: v78 = v74.getLength()::JM,127333:JM,126748
126752 :: CALL :: call :: I :: v80 = v76.getLength()::JM,126752:JM,127334
126756 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,127335:CL,144050
126763 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,126768:CL,144090
126769 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,126774:CL,144090
126768 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,126769:CD,126774:CD,126800:CD,126805
126775 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,126785:JM,127333:CL,144106
126774 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,126775:CD,126780:CD,126785:CD,126789:CD,126793:CD,126800:CD,126805:CD,126844:CD,126848:CD,126852:CD,126856:CD,126860:CD,126861:CD,126865:CD,126866:CD,126867:CD,126868:CD,126869:CD,126870:CD,126871:CD,126872:CD,126873:CD,126894:CD,126902:CD,126912:CD,126920:CD,126930:CD,126938:CD,126954:CD,126959:CD,126964:CD,126969:CD,126977:CD,126978:CD,127161:CD,127162:CD,127240:CD,127244:CD,127248:CD,127333:CD,127334:CD,127335
126780 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,126789:JM,127334:CL,144106
126785 :: CALL :: call :: I :: v92 = v88.getLength()::JM,126785:JM,127333
126789 :: CALL :: call :: I :: v94 = v90.getLength()::JM,126789:JM,127334
126793 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,127335:CL,144131
126800 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,126805:CL,144171
126805 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,126806:CD,126811:CD,127250:CD,127254
126806 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,126811:CL,144171
126811 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,126812:CD,126817:CD,126822:CD,126826:CD,126830:CD,126844:CD,126848:CD,126852:CD,126856:CD,126860:CD,126861:CD,126865:CD,126866:CD,126867:CD,126868:CD,126869:CD,126870:CD,126871:CD,126872:CD,126873:CD,126894:CD,126902:CD,126912:CD,126920:CD,126930:CD,126938:CD,126954:CD,126959:CD,126964:CD,126969:CD,126977:CD,126978:CD,127161:CD,127162:CD,127240:CD,127244:CD,127248:CD,127250:CD,127254:CD,127333:CD,127334:CD,127335
126812 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,127333:JM,126822:CL,144187
126817 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,127334:JM,126826:CL,144187
126822 :: CALL :: call :: I :: v106 = v102.getLength()::JM,127333:JM,126822
126826 :: CALL :: call :: I :: v108 = v104.getLength()::JM,127334:JM,126826
126830 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,127335:CL,144212
126844 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,126860:CL,144252
126848 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,126868:CL,144288
126852 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,126871:CL,144335
126856 :: CALL :: call :: I :: v123 = v113.getLength()::JM,126856:JM,126860
126861 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,126865:JM,126861
126860 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,126866:JM,126865:JM,126861
126865 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,126867:CF,126866
126867 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,126894:DD,126977:DD,127161:JM,127202:CF,126868
126866 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,126867
126869 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,126870
126868 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,126870:CF,126869
126871 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,126873:CF,126872
126870 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,126912:DD,126979:CF,126871
126873 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,126930:DD,126981
126872 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,126873
126894 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,126894
126902 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
126912 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,126912
126920 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
126930 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,126930
126938 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
126954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
126959 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,126959
126964 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
126969 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
126977 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,126978
126979 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,126980
126978 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,126979:CD,126980
126981 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,126982
126980 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,126981:CD,126982
126982 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,126987:CD,126992:CD,127139
126987 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,126992
126992 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,126997:CD,127002:CD,127061:CD,127066:CD,127067
126997 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,127002
127002 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,100548:JM,100541:CD,127023:CD,127027:CD,127032:CD,127040:CD,127050:CD,127061:CD,127066:CD,127067
127023 :: CALL :: call :: V :: v196.addChain(v52)::CL,119653
127027 :: CALL :: call :: V :: v196.addChain(v55)::CL,119653
127032 :: CALL :: call :: V :: v196.setMolId(v290)::CL,119715
127040 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
127050 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
127061 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,127066
127067 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,127088:CD,127094:CD,127102:CD,127125:CD,127133
127066 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,127067
127088 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
127094 :: CALL :: call :: V :: v226.addChain(v52)::CL,119653
127102 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
127125 :: CALL :: call :: V :: v214.addChain(v55)::CL,119653
127133 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
127139 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,144406
127161 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,127162
127162 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,127182:CD,127186:CD,127194:CD,127202:CD,127217:CD,127222:CD,127227:CD,127232:JM,127248
127182 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,127182
127186 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
127194 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
127202 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,127202
127217 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
127222 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,127222
127227 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
127232 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
127240 :: CALL :: call :: I :: v284 = v30.size()::JM,127248
127244 :: CALL :: call :: I :: v286 = v3.size()::JM,127248
127248 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,127250:CD,127254
127250 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,126675:JM,127254
127255 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,126661:JM,127259
127254 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,126671:CD,126675:CD,126676:CD,126680:CD,127255:CD,127259:JM,127254
127259 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,126657:CD,126661:CD,126662:CD,126666:CD,127250:CD,127254:JM,127259
127260 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,127330
127265 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,127330
127277 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,143610
127286 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,127291
127291 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,100548:JM,100541:CD,127307:CD,127312:CD,127320
127307 :: CALL :: call :: V :: v316.addChain(v304)::CL,119653
127312 :: CALL :: call :: V :: v316.setMolId(v325)::CL,119715
127320 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
127326 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,127330
127330 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,127265:CD,127277:CD,127286:CD,127291:CD,127326:JM,127330
127333 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,127334:DD,126869
127332 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,126635:DD,126647
127335 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,126856:JM,126860:JM,126865:JM,126861:JM,126959:JM,127182:JM,127222
127334 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,127335:DD,126872
127633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,127634:CD,127637:CD,127641:CD,127645:CD,127678:CD,127682:CD,127683:JM,127654
127634 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,108184
127637 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,127664:JM,127671:DD,127683
127641 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,127682:JM,127654
127645 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,127682:JM,127654
127650 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,127682:JM,127654
127655 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,127664:JM,127671
127654 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,127665:JM,127664:JM,127671
127660 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,127664:JM,127671
127665 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,127667:CD,127671:CD,127684:JM,127664
127664 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,127665
127667 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,127664:JM,127671
127671 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,127684:CD,127660:CD,127664:CD,127665:JM,127671
127673 :: CALL :: call :: Z :: v25 = v3.add(v14)::
127672 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,127673:JM,127682:JM,127654
127678 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,127682:JM,127654
127683 :: NORM :: compound :: Ljava/util/List :: return v3::DD,127634
127682 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,127650:CD,127654:CD,127655:CD,127667:CD,127671:CD,127672:CD,127678:CD,127684:JM,127682:CF,127683
127684 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,127672
127710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,127715:CD,127750:CD,127754:CD,127758:CD,127759:CD,127763:CD,127835:JM,127768
127715 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,127763:JM,127833
127723 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,143610
127728 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,127732:CL,143627
127732 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,127736:CD,127741:CF,127746
127736 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,143610
127741 :: CALL :: call :: Z :: v21 = v4.add(v19)::
127746 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,127835
127750 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,127758:CL,52102
127754 :: CALL :: call :: I :: v11 = v9.size()::JM,127758
127759 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,127763
127758 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,127723:CD,127728:CD,127732:CD,127746:CD,127750:CD,127754:CD,127835:JM,127763
127763 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,127764:CD,127768:CD,127784:CD,127785:CD,127829:CD,127833:CD,127836
127764 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,127768
127768 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,127774:CF,127784
127774 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
127785 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,127833
127784 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,127836:JM,127833
127790 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,127833
127795 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,127768
127799 :: CALL :: call :: V :: v44.addChain(v43)::CL,119653
127803 :: CALL :: call :: V :: v44.setMolId(v58)::CL,119715
127813 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
127823 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,127836:JM,127768
127824 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,127768
127829 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,127833
127833 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,127790:CD,127795:JM,100548:JM,100541:CD,127799:CD,127803:CD,127813:CD,127823:CD,127824:CD,127829:CD,127836:JM,127833
127835 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,127746:DD,127758
127836 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,127833:DD,127823
128041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,128042:CD,128048
128042 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,112990
128045 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,128048
128048 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,128042
128051 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,113173
128050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,128051:CD,128053:CD,128055:CD,128056:CD,128064
128053 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,128055
128055 :: EXPR :: assign :: I :: v4 = v2.length::DD,128056
128056 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,128064
128064 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,128051
128077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,128078:CD,128088:CD,128092:JM,128343:JM,128246:JM,128234:JM,128202:JM,128124
128078 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,113328:JM,113323
128088 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,128097:JM,128092:CL,144677
128093 :: CALL :: call :: I :: v12 = v9.size()::JM,128097
128092 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,128093:CD,128097:CD,128105
128097 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,128105:CD,128106:CD,128112:CD,128117:CD,128118:JM,128097
128105 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128106 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,128097
128112 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,128117
128117 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,128118:JM,128124
128119 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,128124:JM,128343:JM,128246:JM,128234:JM,128202
128118 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,128119:CD,128124:CD,128132
128124 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,128132:CD,128133:CD,128138:CD,128139
128133 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,128138
128132 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128139 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,128147:CD,128148:CD,128152
128138 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,128139
128147 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128148 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,128152:CL,145047
128152 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,128161:CD,128160:CD,128165:CD,128168:CD,128176
128161 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,128182:DD,128214:DD,128293:DD,128307:DD,128370
128160 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128165 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,145266
128168 :: CALL :: call :: I :: v33 = v27.ordinal()::
128172 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,128176
128177 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,128343:JM,128246:JM,128234:JM,128202:JM,128124
128176 :: PRED :: IF :: null :: switch v34::CD,128177:CD,128182:CD,128183:CD,128188:CD,128189:CD,128294:CD,128295:CD,128300:CD,128301
128183 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,128188
128182 :: NORM :: compound :: Ljava/util/List :: return v28::DD,128078
128189 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,128197:CD,128198:CD,128202:CD,128208:CD,128213
128188 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,128189
128197 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128198 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,128213
128203 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,128343:JM,128246:JM,128234:JM,128202:JM,128124
128202 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,128203:JM,128213
128208 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,128213
128213 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,128214:CD,128215:CD,128224:CD,128228:CD,128292:CD,128293:CD,128371
128215 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,128228
128214 :: NORM :: compound :: Ljava/util/List :: return v28::DD,128078
128224 :: CALL :: call :: V :: sort(v75, v76)::
128228 :: EXPR :: assign :: I :: v79 = v75.length::DD,128292
128235 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,128077
128234 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,128235:CD,128241:CD,128246
128241 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,145538
128247 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,128252
128246 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,128247:CD,128252:CD,128256:CD,128261:CD,128265:CD,128268:CD,128276
128252 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,128252
128256 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,145538
128261 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,113559
128265 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,145266
128268 :: CALL :: call :: I :: v93 = v89.ordinal()::
128272 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,128276
128276 :: PRED :: IF :: null :: switch v94::CD,128278:CD,128283:CD,128287
128278 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,128283
128283 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,128283
128287 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,145538
128291 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,128371
128293 :: NORM :: compound :: Ljava/util/List :: return v28::DD,128078
128292 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,128234:CD,128291:CD,128371:CF,128293
128295 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,128300
128294 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128301 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,128302:CD,128307:CD,128308:CD,128312:CD,128317
128300 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,128301
128302 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,128343:JM,128246:JM,128234:JM,128202:JM,128124
128307 :: NORM :: compound :: Ljava/util/List :: return v28::DD,128078
128308 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,128317
128312 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,128317
128317 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,128318:CD,128319:CD,128324:CD,128333:CD,128337:CD,128369:CD,128370:CD,128372
128319 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,128343:JM,128246:JM,128234:JM,128202:JM,128124
128318 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,128078
128324 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,128337
128333 :: CALL :: call :: V :: sort(v48, v49)::
128337 :: EXPR :: assign :: I :: v52 = v48.length::DD,128369
128343 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,128344:CD,128350:CD,128355:CD,128360:CD,128364
128344 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,128077
128350 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,145538
128355 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,128360
128360 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,128360
128364 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,145538
128369 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,128343:CD,128368:CD,128372:CF,128370
128368 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,128372
128371 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,128291:DD,128292
128370 :: NORM :: compound :: Ljava/util/List :: return v28::DD,128078
128372 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,128368:DD,128369
128535 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
128534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,128535:CD,128540:CD,128580:CD,128584:CD,128601:CD,128602
128541 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,128540
128540 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,128541:CD,128547:CD,128551:CD,128561:CD,128567:CD,128571:CD,128602:JM,128540
128547 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
128551 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,128602
128552 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
128561 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,128540
128567 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
128571 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,128602
128572 :: EXPR :: reference :: Ljava/io/File :: v14 = p0 $this .splitDirPath::
128580 :: CALL :: call :: Z :: v26 = v23.exists()::JM,128584
128585 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
128584 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,128585:CF,128601
128601 :: NORM :: compound :: Ljava/io/File :: return v23::DD,128535
128602 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,128601
128633 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
128632 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,128633:CD,128637:CD,128638:CD,128642:CD,128650:CD,128655:CD,128659
128637 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,128659
128638 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
128642 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
128650 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,128659
128655 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,128659
128659 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,128633
128663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,128664:CD,128668:CD,128673:CD,128677:CD,128682:CD,128687:CD,128691
128664 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
128668 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,128691
128673 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,128691
128677 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,128691
128682 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,128691
128687 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,128691
128691 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,128664
128697 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,113424:JM,113429:JM,113433
128696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,128697:CD,128701:CD,128705:CD,128722:CD,128761:CD,128764:JM,128731
128701 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,128705:JM,128722:JM,128731:JM,128764
128705 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,128705:JM,128722:JM,128731:JM,128764
128723 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,128731:JM,128764
128722 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,128764:CF,128723:CD,128731
128731 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,128731:JM,128764
128761 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,128697
128764 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,128761
128781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,128790:CD,128795:CD,128799:CD,128804:CD,128808:CD,128817:CD,128887:CD,128891
128790 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
128795 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,145811
128799 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
128804 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
128808 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
128817 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,145864
128887 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,145895
128891 :: CALL :: call :: Z :: v63 = v19.delete()::
128949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,128950:CD,128953:CD,128954:CD,128955:CD,128959:JM,129072:JM,128964
128950 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,113572
128953 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,128954
128955 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,128965:JM,128959:JM,129054:CL,144677
128954 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,129074
128959 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,128960:CD,128964:CD,128965:CD,128968:CD,128977:JM,129054
128960 :: CALL :: call :: I :: v9 = v6.size()::JM,128965:JM,129054
128965 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,128968:CD,128977:CD,129072:CD,129073:CD,129074:CD,129078
128964 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,128965
128968 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
128977 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,128950
128979 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,128965:JM,129054
128984 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,129054
128989 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,128994
128995 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,129076:CD,129000:CD,129005
128994 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,128995:JM,129005
128996 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,129005
129000 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,129005
129005 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,129007:CD,129012:CD,129013:CD,129034:CD,129075:CD,129076:CD,129077
129007 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,129012
129013 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,129030:CD,129075
129012 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,129013
129025 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
129030 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,129075:CL,145047
129034 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
129042 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
129046 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
129050 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,129054
129055 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,129071
129054 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,128984:CD,128989:CD,128994:CD,128995:CD,129050:CD,129076:CD,129077:JM,129054:CF,129055
129067 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
129071 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,129078
129073 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,128979:CD,129050:CD,129054:CD,129055:CD,129071:CD,129072:CD,129076:CD,129077:CD,129078:JM,128965:CF,129074
129072 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,129073
129075 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,129034:DD,129046
129074 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,128950
129077 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,129054:DD,129055:DD,129077
129076 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,129077:DD,129071:DD,129076
129078 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,129073:DD,129076:CF,129072
129691 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .defaultBerkeleyDownloadURL = #(http://scop.berkeley....)::
129694 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .defaultBerkeleyScopVersion = #(2.05)::
129700 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,129737
129712 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,147065
129720 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,147065
129737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,129743:CD,129752:CD,129757:JM,129759
129743 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
129749 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,129757
129752 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,129757:JM,129759
129757 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,129765:CD,129772:CD,129779:CD,129786
129759 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopVersion = p1 $scopVersion ::
129762 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,129765
129765 :: CALL :: call :: V :: v9.set(#(0))::JM,129765
129769 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,129772
129772 :: CALL :: call :: V :: v11.set(#(0))::JM,129772
129776 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,129779
129779 :: CALL :: call :: V :: v13.set(#(0))::JM,129779
129783 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,129786
129786 :: CALL :: call :: V :: v15.set(#(0))::JM,129786
129813 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .server = #(http://source.rcsb.or...)::
129816 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = #(null)::
129825 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.setScopVersion(java.lang.String)::JM,129830
129830 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
129857 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
129856 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,129856
129865 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,129856
129870 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
129875 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
129874 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,129856
129883 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,129856
129888 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
129893 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
129892 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,129856
129901 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,129856
129906 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
129911 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
129910 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,129856
129919 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,129856
129924 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
129955 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
129954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,129955:CD,129960:CD,129962:CD,129966:CD,130001:CD,130005:CD,130006:CD,130015:CD,130019:CD,130082:JM,130049:JM,130079
129960 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,130005:JM,129975
129962 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,130005:JM,129975
129966 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,130005:JM,129975
129971 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,130005:JM,129975
129975 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,129980:JM,129997
129976 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,129980
129981 :: EXPR :: assign :: I :: v19 = v18.length::DD,130000
129980 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,129981
129983 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,129992
129987 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,129992
129993 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,129997
129992 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,129993:CD,129997:CD,129999:CD,130000:CD,130080:CD,130081:CD,130082
129997 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,130082
129999 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,130081:CF,130080
130001 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,130005:JM,129975
130000 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,130082:CD,129987:CD,129992
130005 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,129971:CD,129975:CD,129976:CD,129980:CD,129981:CD,130000:CD,130001:CD,130080:CD,130081:CD,130082:JM,130005
130006 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
130011 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,130019
130015 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,130019
130019 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,130050:CF,130020:CD,130025:CD,130030:CD,130035:CD,130040:CD,130045:CD,130049:CD,130055:CD,130060:CD,130065:CD,130070:CD,130075:CD,130079
130020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,130049
130025 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,130049:JM,130082:JM,130079
130030 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,130049:JM,130079
130035 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,130049:JM,130079
130040 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,130049:JM,130079
130045 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,130049:JM,130079
130049 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,129955
130050 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,130079
130055 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,130079:JM,130049:JM,130082
130060 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,130049:JM,130079
130065 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,130049:JM,130079
130070 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,130049:JM,130079
130075 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,130049:JM,130079
130079 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,129955
130081 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,129999:DD,130000
130080 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,130081:JM,129992:DD,130080:DD,130082
130082 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,130005:JM,129975:JM,130049:JM,130079:DD,130080
130124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,130129:CD,130137:CD,130142:CD,130181
130129 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,130179:JM,130181
130134 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,130142
130137 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,130142
130142 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,130179:CD,130180:CD,130186:JM,130181
130144 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,130152:JM,130159:JM,130174
130148 :: CALL :: call :: I :: v15 = v13.length()::JM,130152
130152 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,130154:CD,130159
130154 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,130159
130159 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,130160:CD,130165:CD,130170:CF,130178
130160 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,130174
130165 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,130174
130170 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,130174
130174 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
130179 :: EXPR :: assign :: I :: v12 = v6.length::CF,130180
130178 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,130186
130181 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,130181
130180 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,130148:CD,130152:CD,130178:CD,130179:CD,130186:JM,130181
130186 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,130178:DD,130180:CF,130179
130427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,130428:CD,130431:CD,130439:CD,130444:CD,130452:CD,130456:CD,130461:CD,130469:CD,130510:CD,130514:CD,130515:CD,130517:CD,130522:CD,130526
130428 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,114893
130431 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,130526
130436 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
130439 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
130444 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
130449 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
130452 :: CALL :: call :: I :: v14 = v12.size()::
130456 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
130461 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
130466 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,130514
130469 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,130514
130474 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,130514
130492 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,147177
130500 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
130505 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
130510 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,130514
130515 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
130514 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,130474:CD,130492:CD,130500:CD,130505:CD,130510:JM,130514
130517 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
130522 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,130526
130526 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,130428
130843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,130844:CD,130850
130844 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,163605:JM,163593:JM,163596:JM,163613
130847 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,130850
130850 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,130844
130853 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,115218:JM,115332:JM,115223:JM,115206:JM,115212:JM,143906:JM,143818:JM,163584:JM,163590
130852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,130853:CD,130859
130856 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,130859
130859 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,130853
130861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,130862:CD,130868
130862 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,115233:JM,115229:JM,115228:JM,163578:JM,163577:JM,163583
130865 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,130868
130868 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,130862
130871 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,115473:JM,115483
130870 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,130871:CD,130877
130874 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,130877
130877 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,130871
130888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,130893
130893 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
130899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,130920:CD,130926:CD,130947:CD,130953:CD,130974:CD,130980
130920 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
130926 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
130947 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
130953 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
130974 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
130980 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
131015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,131016:CD,131019:CD,131023:CD,131028:CD,131179:CD,131180
131016 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,116064
131019 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131023 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131028 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,131030:CD,131035:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131161:JM,131070:JM,131133
131030 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131035 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,131037:CD,131042:CD,131180:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131037 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131042 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,131044:CD,131049:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131044 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131049 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,131051:CD,131056:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131051 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131056 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,131058:CD,131063:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131058 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131063 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,131065:CD,131070:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131133
131065 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131070 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,131072:CD,131077:CD,131180:JM,131042:JM,131105:JM,131140:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131072 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131079 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131077 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,131079:CD,131084:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131086 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131084 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,131086:CD,131091:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131091 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,131093:CD,131098:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131035:JM,131161:JM,131070:JM,131133
131093 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131098 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,131100:CD,131105:CD,131180:JM,131042:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131100 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131107 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131105 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,131107:CD,131112:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131114 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131112 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,131114:CD,131119:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131119 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,131121:CD,131126:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131121 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131126 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,131128:CD,131133:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070
131128 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131135 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131133 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,131135:CD,131140:CD,131180:JM,131042:JM,131105:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131142 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131140 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,131142:CD,131147:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131147 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,131149:CD,131154:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131149 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131154 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,131156:CD,131161:CD,131180:JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131070:JM,131133
131156 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,131042:JM,131105:JM,131140:JM,131077:JM,131049:JM,131147:JM,131112:JM,131119:JM,131084:JM,131154:JM,131056:JM,131091:JM,131126:JM,131028:JM,131063:JM,131098:JM,131035:JM,131161:JM,131070:JM,131133
131163 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,131168
131161 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,131163:CD,131168:CD,131180
131168 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,131180:CD,131169:CD,131175
131169 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,131180
131175 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,131180
131179 :: NORM :: compound :: I :: return v94::DD,131016
131180 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,131179
131299 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,131319
131319 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
131426 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,131431
131431 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
131437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,131442
131442 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
131457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,131462
131462 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
131468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,131473
131473 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
131479 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,131484
131484 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
131534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,131539
131539 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
131545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,131550
131550 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
131556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,131561
131561 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
131567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,131572
131572 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
131578 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,131583
131583 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
131589 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,131594
131594 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
131600 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,131605
131605 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
131611 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,131616
131616 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
131622 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,131627
131627 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
131633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,131638
131638 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
131644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,131649
131649 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
131655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,131660
131660 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
131666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,131671
131671 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
131677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,131682
131682 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
131688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,131693
131693 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
131699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,131704
131704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
131710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,131715
131715 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
131721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,131726
131726 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
131732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,131737
131737 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
131743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,131748
131748 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
131754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,131759
131759 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
131765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,131770
131770 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
131776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,131781
131781 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
131787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,131792
131792 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
131798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,131803
131803 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
131809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,131814
131814 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
131820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,131825
131825 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
131831 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,131836
131836 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
131842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,131847
131847 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
131853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,131858
131858 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
131864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,131869
131869 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
131875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,131880
131880 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
131886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,131891
131891 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
131897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,131902
131902 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
131908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,131913
131913 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
131919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,131924
131924 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
131930 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,131935
131935 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
131941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,131946
131946 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
131952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,131957
131957 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
131970 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
131973 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
131982 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,131987
131987 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
131994 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
131993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,131994:CD,132000
131997 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,132000
132002 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,132007
132000 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,131994
132007 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
132056 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,132057:CD,132062:CD,132063:CD,132067:CD,132400:CD,132404:CD,132409:CD,132410:JM,132074:JM,132251:JM,132152
132057 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,119313
132062 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,132067
132063 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,132067
132067 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,132405
132069 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,132404:JM,132074:JM,132251:JM,132152
132074 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,132153:DD,132200:DD,132272
132075 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,132079:CL,147366
132079 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,132085:CD,132089:CD,132093:CD,132399:CD,132400:CD,132404:CD,132408:CD,132409:CD,132410
132085 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,132146:JM,132407:JM,132106:JM,132093:CL,147383
132089 :: CALL :: call :: I :: v23 = v21.intValue()::JM,132146:JM,132407:JM,132106:JM,132093
132093 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,132105:CD,132106:CD,132406
132106 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,132406:CD,132107:CD,132113:CD,132117:CD,132121:CD,132126:CD,132145:CD,132147:CD,132407:JM,132404:JM,132074:JM,132251:JM,132152
132107 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,132404:JM,132074:JM,132251:JM,132152
132105 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132113 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,132126:CL,58663
132117 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,132126:CL,58663
132121 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,132126
132126 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,132144:CD,132145:CD,132147:CD,132406:CD,132407
132146 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,132407
132147 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,132148:CD,132152:CD,132247:CD,132251:JM,132404:JM,132074
132144 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132145 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,132407:CD,132146
132148 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,132404:JM,132074:JM,132251:JM,132152
132154 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,132157:CD,132162:CD,132167:CD,132172:CD,132176:CD,132181:CD,132186:CD,132191:CD,132199:CD,132200:CD,132201:CD,132408
132152 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,132153:CD,132154:CD,132247:CD,132251:JM,132404:JM,132074:JM,132152
132153 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,132154
132157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
132162 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
132167 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
132172 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,132404:JM,132074:JM,132251:JM,132152
132176 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,132404:JM,132074:JM,132251
132181 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
132186 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
132191 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
132199 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132200 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,132201
132201 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,132408:CD,132204:CD,132209:CD,132214:CD,132219:CD,132223:CD,132228:CD,132233:CD,132238:CD,132246:CD,132399:CD,132400:CD,132404:CD,132409:CD,132410
132204 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
132209 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
132214 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
132219 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,132404:JM,132074:JM,132251:JM,132152
132223 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,132404:JM,132074:JM,132251
132228 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
132233 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
132238 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
132246 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132247 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,132404:JM,132074:JM,132251:JM,132152
132251 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,132254:CD,132259:CD,132264:CD,132272:CD,132273:CD,132275:CD,132281:CD,132285:CD,132289:CD,132293:CD,132297:CD,132302:CD,132408:JM,132404:JM,132074:JM,132251:JM,132152
132254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
132259 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
132264 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
132274 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132275 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,132404:JM,132074:JM,132251:JM,132152
132272 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,132273
132273 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,132408:CD,132274:CD,132399:CD,132400:CD,132404:CD,132409:CD,132410
132281 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,132302:CL,58663
132285 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,132302
132289 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,132302:CL,58663
132293 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,132302
132297 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,132302
132302 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,132305:CD,132310:CD,132315:CD,132320:CD,132325:CD,132330:CD,132335:CD,132343:CD,132344:CD,132354:CD,132399:CD,132400:CD,132404:CD,132408:CD,132409:CD,132410
132305 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
132310 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
132315 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
132320 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
132325 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
132330 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
132335 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
132343 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,132057
132344 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
132354 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
132399 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,132410:CF,132409
132400 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,132404:JM,132074:JM,132251:JM,132152
132406 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,132145:DD,132147:DD,132408
132407 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,132152:DD,132251:JM,132404:JM,132074:CF,132147
132404 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,132069:CD,132074:CD,132075:CD,132079:CD,132405:JM,132404:JM,132251:JM,132152
132405 :: NORM :: compound :: Ljava/util/List :: return v8::DD,132057
132410 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,132074:JM,132251:JM,132152:DD,132399:DD,132404
132408 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,132409:CF,132399
132409 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,132410:DD,132406:DD,132408
132520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,132528:CD,132533:CD,132537
132528 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,132537:CL,60101
132533 :: CALL :: call :: I :: v9 = v7.size()::JM,132537
132537 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,132569:CD,132575
132569 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,132575:CL,147392
132575 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,132576
132576 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,93447
132599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,132600:CD,132605:CD,132609:CD,132613:CD,132619:CD,132627:CD,132632:CD,132636:CD,132641:CD,132646:CD,132651:CD,132661:CD,132666:CD,132670:CD,132675:CD,132680:CD,132685:CD,132693:CD,132698:CD,132715:CD,132716:CD,132719:CD,132725:CD,132726:CD,132734:CD,132738
132600 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,119449
132605 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
132609 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
132613 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,143678
132619 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,143678
132627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
132632 :: CALL :: call :: I :: v19 = v11.length()::
132636 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
132641 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
132646 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
132651 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
132661 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
132666 :: CALL :: call :: I :: v35 = v13.length()::
132670 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
132675 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
132680 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
132685 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
132693 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132698 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132715 :: NORM :: compound :: Z :: return #(1)::DD,132600
132719 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132716 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132726 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132725 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132734 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,132738:JM,132739:JM,132726:JM,132743:JM,132776:JM,132734
132738 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,132739:CD,132743:CD,132768:JM,132776
132739 :: CALL :: call :: I :: v68 = v65.getLength()::JM,132739:JM,132743:JM,132776
132743 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,132768:CD,132771:CD,132776:CD,132781:CD,132786:CD,132794:CD,132803
132771 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
132768 :: NORM :: compound :: Z :: return #(1)::DD,132600
132776 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,132739:JM,132743:JM,132776
132781 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
132786 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
132794 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,132803:CL,147789
132803 :: NORM :: compound :: Z :: return v82::DD,132600
132867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,132868:CD,132873:CD,132878:CD,132883:CD,132887:CD,132888:CD,132892:CD,132897:CD,132898:CD,132899:CD,132905:CD,132910:CD,132915:CD,132923:CD,132928
132868 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,119638
132873 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,132887:CL,108223
132878 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,132887
132883 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,132887
132887 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,132898
132888 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,132897:CL,70427
132892 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,132897
132898 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,132868
132899 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,132887
132897 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,132883:CD,132887:CD,132888:CD,132892:CD,132899:CF,132898
132905 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
132910 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,132897
132915 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
132923 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
132920 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
132928 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
133014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,133015:CD,133030:CD,133035:CD,133040:CD,133048:CD,133052:CD,133057:CD,133062:CD,133071:CD,133077:CD,133081:CD,133086:CD,133090:CD,133095:CD,133099:CD,133104:CD,133105:CD,133106:CD,133112:CD,133117:CD,133122:CD,133127:CD,133132
133015 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,119748
133030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
133035 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,133104
133040 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
133045 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
133048 :: CALL :: call :: I :: v52 = v50.size()::
133052 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
133057 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
133062 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
133071 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,132867
133077 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,133090:CL,58133
133081 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,133090
133086 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,133090
133090 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,133105
133095 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,133104:CL,70365
133099 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,133104
133106 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,133090
133104 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,133086:CD,133090:CD,133095:CD,133099:CD,133106:CF,133105
133105 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,133015
133112 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
133117 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,133104
133122 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
133127 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,133104
133132 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,133104
133162 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,138558
133161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,133162:CD,133166:CD,133173:CD,133182:CD,133187:CD,133191:CD,133195:CD,133200:CD,133201:CD,133203:CD,133208:CD,133213:CD,133221:CD,133226
133166 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,70365
133173 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
133182 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,133187
133187 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,133200
133191 :: CALL :: call :: I :: v31 = v28.intValue()::JM,133200
133188 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,133200
133195 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,133200
133203 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
133200 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,133201
133201 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,133162
133208 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
133213 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
133218 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
133221 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
133226 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
133245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,133250:CD,133255:JM,133266:JM,133320
133250 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,133255:CL,95226
133255 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,133257:CD,133261:CD,133266
133257 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,133266:CL,108473
133261 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,133266:JM,133320
133266 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,133271
133271 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,133275:CD,133279
133268 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,133271
133275 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,133279
133272 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,133279
133279 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,133284:CD,133322:CD,133326
133281 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,133326
133284 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,133326
133289 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,133326
133294 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,133302:CL,115540
133298 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,133302
133302 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,133304:CD,133309:CD,133322:CD,133326
133304 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,133309:CL,95226
133311 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,133320:CL,108473
133309 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,133311:CD,133315:CD,133320:CD,133322:CD,133326
133315 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,133320:JM,133266
133322 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,133326
133320 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,133322:CD,133326
133326 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,133289:CD,133294:CD,133298:CD,133302:JM,133326
133375 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
133372 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
133378 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
133382 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,148405
133381 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,133382
133450 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,133458
133455 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
133458 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
133467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,133471:CD,133472:CD,133480:CD,133485:CD,133489:CD,133490:CD,133498:CD,133506:CD,133511:CD,133516:CD,133520:CD,133521:CD,133529:CD,133537:CD,133542:CD,133547:CD,133551:CD,133552:CD,133560:CD,133568:CD,133573:CD,133578:CD,133582:CD,133583:CD,133591:CD,133596:CD,133600:CD,133601:CD,133609:CD,133617:CD,133622:CD,133627:CD,133631:CD,133632:CD,133640:CD,133648:CD,133653:CD,133658:CD,133662:CD,133663:CD,133671:CD,133679:CD,133684:CD,133689:CD,133693:CD,133694:CD,133702:CD,133707
133471 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
133472 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
133480 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
133485 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
133490 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
133489 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
133498 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
133503 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
133506 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
133511 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
133516 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
133520 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
133521 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
133529 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
133534 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
133537 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
133542 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
133547 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
133551 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
133552 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
133560 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
133565 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
133568 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
133573 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
133578 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
133582 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
133583 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
133591 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
133596 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
133600 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
133601 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
133609 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
133614 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
133617 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
133622 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
133627 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
133631 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
133632 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
133640 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
133645 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
133648 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
133653 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
133658 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
133662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
133663 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
133671 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
133679 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
133676 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
133684 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
133689 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
133694 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
133693 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
133702 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
133707 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
133763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,133764:CD,133767:CD,133772
133767 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,133772:CL,58309
133764 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,120753
133775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,133776:CD,133779:CD,133784
133772 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,133764
133779 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,133784:CL,58309
133776 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,120754
133787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,133788:CD,133791:CD,133796
133784 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,133776
133791 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,133796:CL,58309
133788 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,120906
133799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,133800:CD,133803:CD,133808
133796 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,133788
133803 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,133808:CL,58309
133800 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,120907
133811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,133812:CD,133818
133808 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,133800
133815 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,133818
133812 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,121126
133818 :: NORM :: compound :: Ljava/util/List :: return v3::CF,133812
133820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,133821:CD,133827
133821 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,121255:JM,121264:JM,121269:JM,148416:JM,148478
133827 :: NORM :: compound :: Ljava/util/List :: return v3::CF,133821
133824 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,133827
133944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,133945:CD,133949:CD,133953:CD,133957:CD,133962
133945 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,121418
133949 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,133962
133953 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,133962
133957 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,133962
133962 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,133963:CD,133964:CD,133968:CD,133972:CD,133976:CD,133981:CD,134108
133963 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,133945
133964 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,133968:CL,148507
133968 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,133969
133969 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,148531
133972 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,133976:CL,148507
133976 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,134108:CD,133977
133977 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,134108:CL,148620
133982 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,148928
133981 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,133982:JM,91430:JM,156231:JM,156245:JM,156238:JM,149068:CD,134003:CD,134007:CD,134008:CD,134017:CD,134025:CD,134042:CD,134097:CD,134102
134003 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,91479
134007 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,134008
134008 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
134017 :: CALL :: call :: V :: v28.parse(v33)::CL,91496
134025 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,134042:CL,149088
134042 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,133945
134097 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,134102:CL,149122
134102 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,133945
134108 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,133981
134162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,134163:CD,134169:CD,134173
134163 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,121514:JM,121620
134166 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,134173
134169 :: CALL :: call :: I :: v5 = v3.size()::JM,134173
134175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,134176:CD,134183:CD,134188:CD,134189
134173 :: NORM :: compound :: I :: return v5::CF,134163
134176 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,136923
134183 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,134188
134180 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,134188
134188 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,134189
134189 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,134176
134202 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,149342
134206 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
134209 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
134212 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,134209:JM,134206:DD,134217
134217 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
134220 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,134209:JM,134206:DD,134225
134225 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
134228 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,134209:JM,134206:DD,134233
134233 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
134236 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,134209:JM,134206:DD,134241
134241 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
134247 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
134244 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
134250 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,134209:JM,134206:DD,134254
134254 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
134257 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,134209:JM,134206:DD,134261
134261 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
134264 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,134209:JM,134206:DD,134268
134271 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,134274
134268 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
134274 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,134275
134275 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,134279
134279 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
134316 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CE,134317:CD,134320:CD,134324:CD,134332:CD,134337:CD,134342:CD,134346
134317 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::
134320 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,134346
134324 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
134332 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::JM,134346:CL,149387
134337 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,134346
134342 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,134346
134346 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,134317
134351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,134356:CD,134361:CD,134365:CD,134373:CD,134378:CD,134386:CD,134391:CD,134396:CD,134401:CD,134406:CD,134411
134356 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,149387
134361 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
134365 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
134373 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
134378 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
134383 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
134386 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
134391 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
134396 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
134401 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
134406 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
134411 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
134430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,134436:CD,134443:CD,134448:CD,134452:CD,134457:CD,134461:CD,134495:CD,134499:CD,134503:CD,134507:CD,134508:CD,134509:CD,134510:CD,134512:CD,134522:CD,134524:CD,134532:CD,134537:CD,134545:CD,134550:CD,134562:CD,134563:CD,134564:CD,134578:CD,134579
134436 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,134562
134443 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
134448 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,145811
134452 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
134457 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
134461 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
134495 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,145895
134499 :: CALL :: call :: Z :: v35 = v19.delete()::
134503 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,134507
134507 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,134508
134510 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,134578:CD,134511:CD,134579
134511 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,134578
134508 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,134509:DD,134511:DD,134578
134509 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,134510
134512 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,134562
134522 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
134524 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,134524
134532 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
134537 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
134545 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
134550 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
134562 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,134563
134563 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
134564 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
134578 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,134579:JM,134524
134579 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,134512
134647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,135150:CD,135154:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134658 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134663 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,134665:CD,134670:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134665 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134670 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,134671:CD,134675:CD,134684:CD,134688:CD,134692:CD,134696:CD,134701:CD,134706:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134671 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,135158
134675 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134684 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,135159
134688 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,135160
134692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,135161
134696 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,135162
134701 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134706 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,134707:CD,134717:CD,134722:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134707 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134717 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134722 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,134723:CD,134733:CD,134738:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134723 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134733 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134738 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,134739:CD,134766:CD,134771:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134739 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134766 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134771 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,134772:CD,134777:CD,134783:CD,134788:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134772 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134777 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,134979:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134862:JM,135053:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134783 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134788 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,134789:CD,134794:CD,134800:CD,134805:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134879:JM,134845:JM,134909
134789 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134794 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,134979:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134862:JM,135053:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134800 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134806 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134805 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,134806:CD,134811:CD,134816:CD,134821:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134811 :: CALL :: call :: V :: v82.setCATH(v112)::CL,149464
134816 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134822 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134821 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,134822:CD,134827:CD,134831:CD,134840:CD,134845:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134909
134827 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,134979:JM,134916:JM,135013:JM,134890:JM,134955:JM,134862:JM,135053:JM,134929:JM,134996:JM,135162:JM,134879:JM,134845:JM,134909
134831 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,135162
134840 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134846 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134845 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,134846:CD,134851:CD,134857:CD,134862:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134851 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,134979:JM,134929:JM,134916:JM,134996:JM,135013:JM,134890:JM,135162:JM,134955:JM,134862:JM,134879:JM,134909:JM,135053
134857 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134862 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,134863:CD,134868:CD,134874:CD,134879:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134845:JM,134909
134863 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134868 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,135162:JM,134979:JM,134929:JM,134916:JM,134996:JM,135013:JM,134890:JM,134955:JM,134879:JM,134909:JM,135053
134874 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134879 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,134880:CD,134885:CD,134890:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134880 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,135163
134885 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134890 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,134891:CD,134895:CD,134899:CD,134904:CD,134909:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845
134891 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,135164
134895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,135165
134899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,135166
134904 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134910 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134909 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,134910:CD,134916:CD,134917:CD,134923:CD,134929:CD,134930:CD,134940:CD,134950:CD,134955:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134821:JM,135013:JM,134890:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134916 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909:JM,135154
134917 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134923 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134930 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134929 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909:JM,135154
134940 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134950 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134955 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,134956:CD,134961:CD,134965:CD,134974:CD,134979:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134956 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134961 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,134979:JM,134996:JM,135013:JM,135162:JM,135053
134965 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
134974 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134979 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,134980:CD,134985:CD,134991:CD,134996:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134805:JM,134879:JM,134845:JM,134909
134980 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134985 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,134996:JM,135013:JM,135162:JM,135053
134991 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
134996 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,134997:CD,135002:CD,135008:CD,135013:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
134997 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
135002 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,135013:JM,135162:JM,135053
135008 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
135014 :: CALL :: call :: Z :: v174 = v131.add(v138)::
135013 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,135014:CD,135019:CD,135023:CD,135031:CD,135039:CD,135048:CD,135053:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
135019 :: CALL :: call :: I :: v176 = v131.size()::
135023 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
135031 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
135039 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
135048 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
135054 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
135053 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,135158:CD,135054:CD,135062:CD,135070:CD,135078:CD,135090:CD,135094:CD,135103:CD,135108:CD,135132:CD,135144:CD,135157:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166
135062 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
135070 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
135078 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
135090 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,149695
135094 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
135103 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,135108
135108 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,135119:CD,135112:CD,135117:CD,135126:CD,135157
135112 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,135117
135119 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,135157
135117 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,135157
135126 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
135132 :: CALL :: call :: Z :: v218 = v216.add(v82)::
135144 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
135150 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909
135154 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,134658:CD,134663:CD,135150:CD,135158:CD,135159:CD,135160:CD,135161:CD,135162:CD,135163:CD,135164:CD,135165:CD,135166:JM,134722:JM,134979:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,134879:JM,134845:JM,134909
135158 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,135159:DD,135158
135159 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,135160:DD,135159
135157 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
135162 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,135163:DD,135162
135163 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,135164:DD,135163
135160 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,135161:DD,135160
135161 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,135162:DD,135161
135166 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,134722:JM,134979:JM,134663:JM,134788:JM,134916:JM,134821:JM,135013:JM,134890:JM,134955:JM,134670:JM,134862:JM,135053:JM,135154:JM,134706:JM,134738:JM,134771:JM,134929:JM,134996:JM,134805:JM,135162:JM,134879:JM,134845:JM,134909:DD,135166
135164 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,135165:DD,135164
135165 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,135166:DD,135165
135375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,135376:CD,135379:CD,135383:CD,135388:CD,135392
135379 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,149782
135376 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,121807
135383 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
135388 :: CALL :: call :: Z :: v8 = v5.exists()::JM,135392
135392 :: NORM :: compound :: Z :: return v8::DD,135376
135399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,135404:CD,135413:CD,135417:CD,135422
135404 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,134351
135413 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,149782
135417 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
135422 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,134430
135442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,135446:CD,135447:CD,135459:CD,135460:CD,135474
135446 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
135447 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,149782
135459 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,135460
135460 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
135474 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,149817
135491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CE,135492:CD,135495:CD,135499:CD,135507:CD,135512:CD,135517:CD,135521
135495 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,135521
135492 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::
135499 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
135507 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::JM,135521:CL,149387
135512 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,135521
135517 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,135521
135521 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,135492
135526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,136062:CD,136066:JM,135537:JM,135543
135532 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,136066:JM,135537:JM,135543
135539 :: CALL :: call :: I :: v12 = v5.length()::JM,136066:JM,135537:JM,135543
135537 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,135539:CD,135543:JM,136066:JM,135537
135543 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,135545:CD,135558:CD,135563:CD,135567:CD,135575:CD,135580:CD,135584:CD,135893:CD,135897:CD,135901:CD,136077:CD,136078
135545 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
135554 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,135897:JM,135598
135558 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,135897:JM,135598
135563 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,135897:JM,135598
135567 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,135897:JM,135598
135571 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,136052
135575 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,136052
135580 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,136052
135584 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,136052
135589 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,135665
135594 :: CALL :: call :: I :: v40 = v24.intValue()::JM,135897:JM,135598
135598 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,135655:CF,135599:CD,135600:CD,135608:CD,135613:CD,135620:CD,135625:CD,135626:CD,135656:CD,135664:CD,135665:CD,135670:CD,135675:CD,135682:CD,135687:CD,136068
135599 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
135600 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
135608 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
135613 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
135620 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,135625
135626 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,136068:CF,135627:CD,135628:CD,135636:CD,135641:CD,135648:CD,135653
135627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
135625 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,135626:DD,136068
135628 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
135636 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
135641 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
135648 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,135653
135655 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
135653 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,136068
135656 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
135664 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,135665
135665 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,135665
135670 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
135675 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
135682 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,135687
135687 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,136068
135688 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,135889:JM,135880:JM,135705
135692 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,135889:JM,135880:JM,135705
135696 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,135889:JM,135880:JM,135705
135700 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,135709:CD,135701:CD,135705:CD,135706:CD,135707:CD,135710:CD,135876:CD,135880:CD,135885:CD,135889:CD,135890:CD,135891:CD,136071:CD,136072:CD,136073:CD,136074:CD,136075:CD,136076
135701 :: CALL :: call :: I :: v90 = v87.intValue()::JM,135889:JM,135880:JM,135705
135706 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,135707
135707 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,136075
135705 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,135706
135710 :: CALL :: call :: I :: v96 = v87.intValue()::JM,135889:JM,135880:JM,135705
135709 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,135889:JM,135880:JM,135705
135719 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
135723 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
135731 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,135732
135732 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
135733 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,135860
135737 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,135860
135741 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,135860
135746 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
135747 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,135756:DD,136069
135745 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,135746
135751 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,135756
135758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
135756 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,136069
135762 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
135767 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
135772 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
135782 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,135855
135780 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,135781
135781 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
135786 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,135855
135790 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,135855
135794 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,135795
135795 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
135796 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,135805:DD,136070
135800 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,135805
135807 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
135805 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,136070
135811 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
135816 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
135821 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
135829 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
135833 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
135838 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
135843 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
135851 :: CALL :: call :: I :: v163 = v136.intValue()::JM,135855
135855 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,135860
135856 :: CALL :: call :: I :: v166 = v111.intValue()::JM,135860
135860 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
135861 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
135869 :: CALL :: call :: Z :: v172 = v94.add(v100)::
135874 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,136072:CF,135875
135875 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,136074:CF,136071
135876 :: CALL :: call :: I :: v99 = v87.intValue()::JM,135889:JM,135880:JM,135705
135880 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,135719:CD,135723:CD,135731:CD,135732:CD,135737:CD,135741:CD,135745:CD,135746:CD,135751:CD,135756:CD,135758:CD,135762:CD,135767:CD,135772:CD,135780:CD,135781:CD,135786:CD,135790:CD,135794:CD,135795:CD,135800:CD,135805:CD,135807:CD,135811:CD,135816:CD,135821:CD,135829:CD,135833:CD,135838:CD,135843:CD,135851:CD,135855:CD,135856:CD,135860:CD,135861:CD,135869:CD,135874:CD,135875:CD,135876:CD,136069:CD,136070:CD,136071:CD,136072:CD,136073:CD,136074
135885 :: CALL :: call :: I :: v179 = v87.intValue()::JM,135889:JM,135880:JM,135705
135890 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,135891
135891 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,136075
135889 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,135890
135892 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,136078:CF,136077
135893 :: CALL :: call :: I :: v35 = v24.intValue()::JM,135897:JM,135598
135898 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,135901
135897 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,135589:CD,135594:CD,135598:CD,135692:CD,135696:CD,135700:CD,135892:CD,135893:CD,136068:CD,136075:CD,136076:CD,136077:CD,136078
135902 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,136052
135903 :: CALL :: call :: I :: v193 = v32.intValue()::JM,136052
135901 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,135902:CD,135903:CD,136048:CD,136052:CD,136056:CD,136081:CD,136082:JM,136066:JM,135537:JM,135543
135912 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
135916 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
135924 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
135925 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
135929 :: CALL :: call :: I :: v205 = parseInt(v203)::
135933 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
135938 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,135947:DD,136079
135937 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
135942 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,135947
135947 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,136079
135949 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
135953 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
135958 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
135963 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
135971 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
135972 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
135976 :: CALL :: call :: I :: v225 = parseInt(v223)::
135980 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
135984 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
135985 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,135994:DD,136080
135989 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,135994
135994 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,136080
135996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
136000 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
136005 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
136010 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
136023 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
136029 :: CALL :: call :: I :: v248 = parseInt(v246)::
136033 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
136041 :: CALL :: call :: Z :: v253 = v191.add(v197)::
136046 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,136081:CF,136047
136047 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,136082:CF,136081
136048 :: CALL :: call :: I :: v196 = v32.intValue()::JM,136052
136052 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,135912:CD,135916:CD,135924:CD,135929:CD,135933:CD,135937:CD,135942:CD,135947:CD,135949:CD,135953:CD,135958:CD,135963:CD,135971:CD,135976:CD,135980:CD,135984:CD,135989:CD,135994:CD,135996:CD,136000:CD,136005:CD,136010:CD,136023:CD,136029:CD,136033:CD,136041:CD,136046:CD,136047:CD,136048:CD,136079:CD,136080:CD,136081:CD,136082
136056 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
136062 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,136066:JM,135537:JM,135543
136066 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,135532:CD,135537:CD,136062:JM,136066:JM,135543
136070 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,135807
136071 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,136072:DD,135731:DD,135745:DD,135780:DD,135794:DD,135891:DD,136071
136068 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,135700
136069 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,135758
136074 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,135875:DD,135880:JM,135889:JM,135705
136075 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,136076:DD,136077
136072 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,136073:DD,135731:DD,135745:DD,135780:DD,135794:DD,135874
136073 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,136074:DD,136073:DD,136076
136078 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,135664:DD,135897:DD,136073:DD,136076:JM,135598
136079 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,135949
136076 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,135892
136077 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,136078:DD,135707:DD,136071:DD,136081
136082 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,136047:DD,136052
136080 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,135996
136081 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,136082:DD,135924:DD,135937:DD,135971:DD,135984:DD,136046
136292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,136315
136315 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,136382:CD,136386:CD,136390
136312 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,136315
136382 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,136386:CL,149987
136386 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,136387
136387 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,150074
136390 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,150255
136447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,136448:CD,136451:CD,136453:CD,136457:CD,136458:CD,136466:CD,136471:CD,136473:CD,136480:CD,136481
136451 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,136466:JM,136471:JM,136453
136448 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,122601
136453 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,136466:JM,136471:JM,136453
136458 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
136457 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,136466:JM,136471
136466 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,136466:JM,136471
136471 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,136480
136473 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
136480 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,136448
136481 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
136680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,136681:CD,136704:CD,136708:CD,136710:JM,136691:JM,136701
136681 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,122839:JM,123281:JM,140307:JM,139919
136686 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,136691:JM,136708:JM,136701
136691 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,136702
136692 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,136701:CL,70427
136696 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,136691:JM,136708:JM,136701
136702 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,136681
136703 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,136710
136701 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,136702:CD,136703:CD,136704:CD,136708:CD,136710
136704 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,136691:JM,136708:JM,136701
136710 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,136691:JM,136701:DD,136703:DD,136708
136708 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,136686:CD,136691:CD,136692:CD,136696:CD,136701:CD,136709:JM,136708
136709 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,136681
136725 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,136733:CD,136754:CD,136758:JM,136752
136730 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,136758
136733 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,136758
136738 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,136758
136743 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,136752:CL,70427
136747 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,136752
136754 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,136758
136752 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,136754:CD,136758
136758 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,136759:CD,136738:CD,136743:CD,136747:CD,136752:JM,93315:JM,93334:JM,93320:JM,93327:CD,136763:CD,136770:JM,136758
136759 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
136763 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,93358
136767 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
136770 :: CALL :: call :: Z :: v22 = v20.add(v17)::
136794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,93315:JM,93334:JM,93320:JM,93327:CD,136806:CD,136814:CD,136821:CD,136828:CD,136835:CD,136858:CD,136862:CD,136866
136806 :: CALL :: call :: V :: v3.setChainID(v6)::CL,93358
136814 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,130888
136821 :: CALL :: call :: V :: v3.setCompound(v11)::CL,108201
136828 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,137887
136835 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,136862
136832 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,136862
136840 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,136862
136845 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,79373:CL,79198:CL,79056
136850 :: CALL :: call :: V :: v3.addGroup(v26)::CL,93505
136854 :: CALL :: call :: V :: v26.setChain(v3)::CL,98063
136858 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,136862
136862 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,136840:CD,136845:CD,136850:CD,136854:CD,136858:JM,136862
136863 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,136866
136866 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,136867:CD,136874:CD,136913:CD,136917:CD,136918
136867 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
136871 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,136917
136874 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,136917
136879 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,136917
136887 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,136892:CL,150346
136892 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,136893:CD,136899:CD,136903:CD,136923
136893 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,136923:CL,134175
136899 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,136903:CL,79373:CL,79198:CL,79056
136903 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,136923
136904 :: CALL :: call :: V :: v50.setChain(v3)::CL,98063
136908 :: CALL :: call :: Z :: v53 = v31.add(v50)::
136913 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,136917
136918 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,93447
136917 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,136879:CD,136887:CD,136892:CD,136904:CD,136908:CD,136913:CD,136923:JM,136917
136923 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
136975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,136976:CD,136980:JM,93315:JM,93334:JM,93320:JM,93327:CD,136984:CD,136988:CD,137061:CD,137065:CD,137066:CD,137067
136976 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
136980 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,137066
136984 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,137065:CL,58133
136988 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,137065
136993 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,137065
136998 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,137067
137030 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,137035:CL,44052
137029 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,137030:CD,137035:CD,137036
137035 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,137036:CD,137043:CD,137048:CD,137053
137036 :: CALL :: call :: V :: v4.addGroup(v16)::CL,93505
137043 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
137048 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
137053 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
137061 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,137065
137066 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,136976
137067 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,137065:DD,137029
137065 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,136993:CD,136998:JM,97522:JM,97525:JM,97519:CD,137029:CD,137061:CD,137067:JM,137065:CF,137066
137096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,137101:CD,137105:CD,137121:CD,137129:CD,137261:CD,137265:CD,137269:CD,137351:CD,137355:CD,137359:CD,137441:CD,137445:CD,137449:CD,137454:CD,137507:JM,137283:JM,137152:JM,137377:JM,137382:JM,137143:JM,137287:JM,137147:JM,137292:JM,137373
137101 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,137283:JM,137507:JM,137152:JM,137377:JM,137382:JM,137143:JM,137287:JM,137147:JM,137292:JM,137101:JM,137373
137105 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,137507:JM,137152:JM,137377:JM,137382:JM,137287:JM,137147:JM,137292
137121 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137163:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468:CL,150394
137126 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,137138:JM,137265
137129 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,137138:JM,137265
137134 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,137138:JM,137265
137138 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,137139:JM,137152:JM,137147:JM,137239
137139 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,137139:JM,137152:JM,137147
137143 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,137283:JM,137507:JM,137152:JM,137377:JM,137382:JM,137143:JM,137287:JM,137147:JM,137292:JM,137101:JM,137373
137147 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,137152:JM,137147:JM,137507:JM,137377:JM,137382:JM,137287:JM,137292
137152 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,137157:CD,137162
137157 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,137162:CL,150454
137162 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,137163:JM,137138:JM,137265
137163 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,137164:CD,137168:CD,137173:JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137394:JM,137393:JM,137398:JM,137303:JM,137463:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468:JM,137138:JM,137265
137164 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137168 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137174 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,150494
137173 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,137174:CD,137184:CD,137191:CD,137197:CD,137212:CD,137216:CD,137221:JM,137313:JM,137473:JM,137222:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137308:JM,137468
137184 :: CALL :: call :: V :: v53.setMolName(v55)::CL,131534
137191 :: CALL :: call :: V :: v57.addCompound(v53)::CL,150584
137197 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
137212 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137216 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137222 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137221 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,137222:CD,137226:CD,137231:JM,137216:JM,137313:JM,137473:JM,137221:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468:JM,137138:JM,137265
137226 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137231 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,137234:CD,137239:CD,137243:CD,137248:CD,137253:JM,137138:JM,137265
137234 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
137239 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,137239
137243 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
137248 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
137253 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
137261 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,137138:JM,137265
137266 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,137355:JM,137278
137265 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,137134:CD,137138:CD,137139:CD,137143:CD,137147:CD,137152:CD,137261:JM,137265
137269 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,137355:JM,137278
137274 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,137355:JM,137278
137278 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,137287:JM,137279:JM,137292
137279 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,137287:JM,137279:JM,137292
137283 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,137283:JM,137507:JM,137152:JM,137377:JM,137382:JM,137143:JM,137287:JM,137147:JM,137292:JM,137101:JM,137373
137287 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,137287:JM,137292:JM,137507:JM,137152:JM,137377:JM,137382:JM,137147
137292 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,137297:CD,137302
137297 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,137302:CL,150454
137302 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,137303:JM,137355:JM,137278
137303 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,137304:CD,137308:CD,137313:JM,137216:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137463:JM,137173:JM,137403:JM,137464:JM,137212:JM,137468:JM,137355:JM,137278
137304 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137308 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137314 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,150610
137313 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,137314:CD,137324:CD,137331:CD,137337:JM,137355:JM,137278
137324 :: CALL :: call :: V :: v103.setMolName(v105)::CL,131534
137331 :: CALL :: call :: V :: v107.addCompound(v103)::CL,150584
137337 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
137351 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,137355:JM,137278
137355 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,137274:CD,137278:CD,137279:CD,137283:CD,137287:CD,137292:CD,137351:JM,137355
137359 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,137445:JM,137368
137356 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,137445:JM,137368
137364 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,137445:JM,137368
137368 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,137377:JM,137382:JM,137369
137369 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,137377:JM,137382:JM,137369
137373 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,137283:JM,137507:JM,137152:JM,137377:JM,137382:JM,137143:JM,137287:JM,137147:JM,137292:JM,137101:JM,137373
137377 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,137377:JM,137382:JM,137507:JM,137152:JM,137287:JM,137147:JM,137292
137382 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,137387:CD,137392
137387 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,137392:CL,150454
137394 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137398:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137392 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,137393:JM,137445:JM,137368
137393 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,137394:CD,137398:CD,137403:JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137168:JM,137463:JM,137173:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468:JM,137445:JM,137368
137398 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137403 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,137404:CD,137414:CD,137421:CD,137427:JM,137445:JM,137368
137404 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,150680
137414 :: CALL :: call :: V :: v138.setMolName(v140)::CL,131534
137421 :: CALL :: call :: V :: v142.addCompound(v138)::CL,150584
137427 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
137441 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,137445:JM,137368
137445 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,137364:CD,137368:CD,137369:CD,137373:CD,137377:CD,137382:CD,137441:JM,137445
137449 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,137454:CL,150454
137454 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,100548:JM,100541:CD,137459:CD,137463
137459 :: CALL :: call :: V :: v153.setMolId(v16)::CL,119715
137463 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,137464:CD,137468:CD,137473:JM,137216:JM,137313:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137398:JM,137173:JM,137403:JM,137304:JM,137212:JM,137308
137464 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137231:JM,137164:JM,137394:JM,137168:JM,137398:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468
137468 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,137168:JM,137216:JM,137313:JM,137473:JM,137398:JM,137173:JM,137221:JM,137226:JM,137403:JM,137231:JM,137308:JM,137468
137473 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,137478:CD,137485
137478 :: CALL :: call :: V :: v153.setMolName(v161)::CL,131534
137485 :: CALL :: call :: V :: v163.addCompound(v153)::CL,150584
137507 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
137636 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,137796:CD,137800:CD,137810
137650 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,58116
137655 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,137791
137658 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,137791
137663 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,137791
137668 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,137673:CL,119154
137673 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,137686:CD,137712:CD,137716:CD,137720:CD,137778:CD,137782:CD,137783:CD,137802:CD,137803:CD,137807:CD,137808:CD,137809
137686 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,137782
137691 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,58133
137695 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
137701 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,137705:CL,79373:CL,79198:CL,79056
137706 :: CALL :: call :: Z :: v44 = v29.add(v42)::
137705 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
137711 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,137803:CF,137802
137712 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,137720:CL,58133
137716 :: CALL :: call :: I :: v34 = v32.size()::JM,137720
137722 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
137720 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,137691:CD,137695:CD,137701:CD,137705:CD,137706:CD,137711:CD,137712:CD,137716:CD,137802:CD,137803
137728 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,137771:JM,137741:CL,58133
137732 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,137771:JM,137741
137737 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,137771:JM,137741
137742 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,137759:CL,150730
137741 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
137751 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,137759:CL,147383
137755 :: CALL :: call :: I :: v69 = v67.intValue()::JM,137759
137759 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,137804:CD,137760:CD,137767:CD,137771:CD,137805:CD,137806
137760 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
137767 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,137771:JM,137741
137771 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,137806:CD,137737:CD,137741:CD,137742:CD,137751:CD,137755:CD,137759:CD,137804:CD,137805:JM,137771
137772 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,137773:CF,137777
137773 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,94183
137778 :: CALL :: call :: I :: v49 = v29.size()::JM,137782
137777 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,137808:CF,137807
137782 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,137722:CD,137728:CD,137732:CD,137767:CD,137771:CD,137772:CD,137777:CD,137778:CD,137804:CD,137805:CD,137806:CD,137807:CD,137808
137783 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,93447
137787 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,137791
137791 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,137663:CD,137668:CD,137673:CD,137787:CD,137809:JM,137791:CF,137792
137792 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,137810
137796 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,137800:CL,93747
137802 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,137803:DD,137802:DD,137807
137803 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,137711:DD,137720
137800 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,137650:CD,137658:CD,137787:CD,137791:CD,137792:CD,137796:CD,137809:CD,137810
137806 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,137772
137807 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,137808:DD,137804:DD,137809
137804 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,137805:DD,137804:DD,137807
137805 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,137771:JM,137741:DD,137777:DD,137805
137810 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,137800:DD,137809
137808 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,137782:DD,137805
137809 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,137791:DD,137792:DD,137802:DD,137809
137878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,137879:CD,137885
137879 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,123116:JM,137974:JM,138299
137882 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,137885
137887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,137892
137885 :: NORM :: compound :: Z :: return v3::CF,137879
137892 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
137898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,137914:CD,137920
137914 :: CALL :: call :: V :: v3.makeBonds()::CL,103624
137920 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,150822
137932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,137939
137939 :: CALL :: call :: V :: addCharges(v3)::CL,103645
137944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,138117:CD,138121:CD,138125:CD,138129:CD,138170:CD,138174:CD,138178
137952 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,138112:CL,58116
137957 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,138112
137962 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,138112
137970 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,137974:CL,137878
137974 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,137982:CD,137987:CD,137996:CD,138001:CD,138176
137982 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,137987
137987 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,138176
137996 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,138001
138002 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,138015:CD,138022:CD,138027:CD,138177
138001 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,138176
138015 :: CALL :: call :: I :: v40 = parseInt(v32)::
138022 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,138027:CL,150454
138027 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,138030:JM,100548:JM,100541:CD,138048:CD,138052:CD,138056:CD,138063:CD,138087:CD,138100:CD,138104:CD,138177
138030 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
138048 :: CALL :: call :: V :: v51.setMolId(v40)::CL,119715
138052 :: CALL :: call :: V :: v51.addChain(v16)::CL,119653
138056 :: CALL :: call :: V :: v16.setCompound(v51)::CL,108201
138063 :: CALL :: call :: V :: v56.addCompound(v51)::CL,150584
138087 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
138100 :: CALL :: call :: V :: v43.addChain(v16)::CL,119653
138104 :: CALL :: call :: V :: v16.setCompound(v43)::CL,108201
138108 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,138112
138112 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,137962:CD,137970:CD,137974:CD,138002:CD,138108:CD,138176:CD,138177:JM,138112:CF,138113
138113 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,138178
138117 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,138121:CL,93747
138121 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,137952:CD,137957:CD,138108:CD,138112:CD,138113:CD,138117:CD,138177:CD,138178
138125 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,138174:CL,92610
138129 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,138174
138134 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,138174
138170 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,138174
138174 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,138134:CD,138170:JM,138174
138178 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,138121:DD,138177
138176 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,138002
138177 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,138112:DD,138113:DD,138177
138254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,138261:CD,138265:CD,138273:CD,138371:CD,138376:CD,138381:CD,138386:CD,138397:CD,138402:CD,138406:CD,138411:CD,138416:CD,138420:CD,138425:CD,138538:CD,138542:CD,138546:CD,138552:CD,138553
138261 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,138265:JM,138553:CL,92738
138266 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,138553
138265 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,138553:CF,138266
138270 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,138282:JM,138542
138273 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,138282:JM,138542
138278 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,138282:JM,138542
138282 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,138554:JM,138283:JM,138287:JM,138288:JM,138486:JM,138491:JM,138555:JM,138300:JM,138305:JM,138309:JM,138323:JM,138313:JM,138318:JM,138556:JM,138317
138283 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,138554:JM,138283:JM,138287
138287 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,138554
138288 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,138288:JM,138486:JM,138491
138295 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,138299:CL,137878
138299 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,138300:CD,138305:CD,138555
138300 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,138555:JM,138300
138305 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,138305:JM,138555
138309 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,138309
138313 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,138323:JM,138313:JM,138318:JM,138556:JM,138317
138318 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,138323:JM,138318:JM,138556
138317 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,138556:CD,138318:CD,138323
138323 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,138556
138327 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,138332:CL,119670
138334 :: CALL :: call :: I :: v45 = v40.length()::JM,138338:JM,138334
138332 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,138558:CD,138333:CD,138349:CD,138353:JM,97522:JM,97525:JM,97519:CD,138363
138333 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,138334:CD,138338
138338 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,138339:CD,138344
138339 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,138339
138344 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
138349 :: CALL :: call :: I :: v53 = parseInt(v34)::
138353 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
138363 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,138558:CL,133161
138371 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
138376 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
138381 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
138386 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
138397 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
138402 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
138406 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
138411 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
138416 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
138420 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
138425 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
138438 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,138439:CD,138459:CD,138463:CD,138464:CD,138473:CD,138477:CD,138482:CD,138486:CD,138491:CD,138532:CD,138559:CD,138560:CD,138561:CD,138562:JM,138448:JM,138282:JM,138542
138439 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,138448:JM,138463
138444 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,138448:JM,138463
138448 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,138559
138449 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,138458:CL,115886
138453 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,138458
138458 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,138559
138459 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,138448:JM,138463
138463 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,138444:CD,138448:CD,138449:CD,138453:CD,138458:CD,138459:CD,138559:JM,138463:CF,138464
138464 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,138560:CD,138465:JM,151467:CD,138469
138465 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,138560
138469 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,151490
138473 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,138562:JM,138477:CL,119753
138478 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,138562
138477 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,138562:CF,138478
138482 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,138486:JM,138491:CL,58663
138486 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,138486:JM,138491
138491 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,138494:CD,138499:CD,138504:CD,138509:CD,138514:CD,138523:CD,138528
138494 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
138499 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
138504 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
138509 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
138514 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
138523 :: CALL :: call :: Z :: v139 = v119.add(v94)::
138528 :: CALL :: call :: V :: v113.setGroups(v119)::CL,151501
138532 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,138533:JM,138282:JM,138542
138533 :: CALL :: call :: Z :: v142 = v9.add(v113)::
138538 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,138282:JM,138542
138542 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,138278:CD,138282:CD,138283:CD,138287:CD,138288:CD,138295:CD,138299:CD,138309:CD,138313:CD,138317:CD,138327:CD,138332:CD,138438:CD,138538:CD,138554:CD,138555:CD,138556:CD,138558:JM,138542
138546 :: CALL :: call :: V :: v143.setSites(v9)::CL,92747
138554 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,138288:JM,138486:JM,138491:JM,138458
138555 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,138309
138552 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
138553 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,138448:JM,138463
138558 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,138438
138559 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,138448:JM,138463:DD,138464:DD,138559:DD,138560
138556 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,138333:JM,138338:JM,138334:JM,138339
138562 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
138560 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,138561
138561 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,138532
138672 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
138679 :: CALL :: call :: V :: p0 $this .init()::CL,151512
138687 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,138694:CD,138700:CD,138750:CD,138754:CD,138759:CD,138768:CD,138773:CD,138778
138694 :: CALL :: call :: V :: p0 $this .init()::CL,151512
138700 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,138754
138705 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,138754
138710 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
138718 :: CALL :: call :: V :: v15.setId(v18)::CL,131426
138742 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
138745 :: CALL :: call :: Z :: v30 = v28.add(v15)::
138750 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,138754
138754 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,138705:CD,138710:JM,131299:CD,138718:CD,138745:CD,138750:JM,138754
138759 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,151537
138768 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,151703
138773 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
138778 :: CALL :: call :: V :: v34.trimToSize()::
138811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,138815:CD,138822:CD,139050:CD,139055:CD,139056:CD,139065:CD,139069:CD,139070:CD,139074
138815 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,139074:JM,139086
138819 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,138831:JM,139069
138822 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,138831:JM,139069
138827 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,138831:JM,139069
138831 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,138832:JM,138836:JM,138841:JM,139055
138832 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,138832:JM,138836:JM,138841
138836 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,138836:JM,138841
138843 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
138841 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,138843:CD,139039
139039 :: CALL :: call :: Z :: v91 = v3.add(v19)::
139047 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,139055
139050 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,139055
139055 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
139056 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
139065 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,138831:JM,139069
139070 :: CALL :: call :: I :: v104 = v3.size()::JM,139074
139069 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,138827:CD,138831:CD,138832:CD,138836:CD,138841:CD,139065:JM,139069:JM,139074
139074 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,139082:CD,139086:CD,139087:CD,139093
139082 :: CALL :: call :: I :: v109 = v3.size()::JM,139086
139086 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
139087 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
139093 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,103364
139185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,139192
139189 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,139192
139192 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,139200:CD,139204:CD,139218
139200 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,139204:CL,151910
139204 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,139212
139212 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,151919
139218 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,152013
139247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,139252
139252 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
139258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,139263
139263 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
139269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,139274
139274 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
139280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,139285
139285 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
139291 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,139296
139296 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
139302 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,139307
139307 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
139313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,139318
139318 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
139324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,139325:CD,139328:CD,139332:CD,139333:CD,139334:CD,139358:CD,139359:CD,139364:CD,139365:CD,139367:CD,139368
139325 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,124733
139328 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,139334:JM,139332
139334 :: EXPR :: assign :: I :: v8 = v4.length::DD,139358
139332 :: EXPR :: assign :: I :: v5 = v4.length::CF,139333
139333 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,139364:JM,139359:CF,139334
139336 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,139345:JM,139350
139344 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,139345:JM,139350
139345 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,139345:JM,139350
139350 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,139351
139351 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,139366:CD,139356
139358 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,139344:CD,139345:CD,139350:CD,139351:CD,139357:CD,139366:CD,139367:CD,139368:JM,139364:JM,139359
139359 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,139364:JM,139359
139356 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,139366
139357 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,139368:CF,139367
139366 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,139367:CF,139357
139367 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,139368:DD,139356:JM,139364:JM,139359:DD,139366
139364 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,139365
139365 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,139325
139368 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,139357:DD,139358
139501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,139509:CD,139514:CD,139519:CD,139524:CD,139528:CD,139533:CD,139538:CD,139543:CD,139548:CD,139552:CD,139553:CD,139561:CD,139566:CD,139570:CD,139575:CD,139579:CD,139584:CD,139611:JM,139590:JM,139591
139509 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
139514 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139519 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,139584:JM,139590
139524 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139528 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
139533 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
139538 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139543 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,139584:JM,139590
139548 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
139552 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
139553 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
139561 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
139566 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139570 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
139575 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
139579 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139584 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,139585:CD,139590:JM,139584:JM,139591:JM,139524:JM,139611:JM,139566
139585 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,139584:JM,139590:JM,139591:JM,139524:JM,139611:JM,139566
139590 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,139591
139591 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,139592
139592 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
139611 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,139612
139612 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
139651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,139670
139667 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
139670 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
139694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,139702:CD,139706:JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139702 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,139706:CL,89387
139706 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,139708:CD,139712:CD,139716:CD,139720:CD,139724:CD,139732:CD,139737:CD,139758:CD,139762:CD,139767:CD,139777:CD,139781:CD,139786:CD,139793:CD,139800:CD,139805:CD,139855:CD,139884:CD,139888:CD,139893:JM,97522:JM,97525:JM,97519:CD,139990:CD,140016:CD,140042:CD,140046:CD,140050:CD,140054:CD,140085:CD,140090:CD,140220:CD,140224:CD,140306:CD,140308:CD,140309:CD,140310:JM,140225:JM,140229:JM,140234:JM,140235:JM,140239:JM,139794:JM,140055:JM,140244:JM,139929:JM,139806:JM,140073:JM,139768
139708 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139712 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139716 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139720 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139724 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,140054:JM,139767:JM,140244:JM,140309:JM,140234:JM,140073:JM,139805
139732 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139738 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,58672
139737 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,139738:CD,139743:CD,139747
139743 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,139747:CL,58672
139747 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,139748
139748 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
139758 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139762 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139767 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,139768:CD,139773:JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805
139768 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139773 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,140054:JM,140244:JM,140309:JM,140234:JM,140073:JM,139805
139777 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139781 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139786 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
139790 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,139793
139794 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
139793 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
139797 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,139800:JM,139805
139800 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,139800:JM,139805:JM,140229:JM,140234:JM,140073:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139768:JM,139929:JM,139737:JM,139806
139806 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
139805 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,139812:CD,139835:CD,139839
139809 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,139812
139812 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,139819:CD,139826
139819 :: CALL :: call :: V :: v59.addGroup(v60)::CL,93505
139826 :: CALL :: call :: V :: v62.trimToSize()::CL,97708
139835 :: CALL :: call :: V :: v64.addModel(v65)::CL,92758
139839 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,139843
139843 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
139846 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
139849 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
139855 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,140306:CD,139856:JM,93315:JM,93334:JM,93320:JM,93327:CD,139866:CD,139876
139852 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,139855
139856 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,139860
139860 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
139866 :: CALL :: call :: V :: v72.setChainID(v9)::CL,93358
139870 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
139873 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
139876 :: CALL :: call :: Z :: v77 = v74.add(v75)::
139884 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,139888:JM,139893:CL,70427
139888 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139806:JM,139805
139893 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,140308:CD,139900:CD,139914:CD,139919:CD,139938:CD,139963:CD,139968:CD,140307
139900 :: CALL :: call :: V :: v85.addGroup(v86)::CL,93505
139914 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,140307:JM,139919:CL,136680
139919 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,139920:CD,139924:CD,139929:CD,139933:CD,140307
139920 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,139929:CL,70427
139924 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,139929:JM,140229:JM,140234:JM,140073:JM,140239:JM,139794:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139737:JM,139806:JM,139805
139929 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,140307:CD,139933
139933 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,140307:CL,136680
139938 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,139939:JM,93315:JM,93334:JM,93320:JM,93327:CD,139949
139939 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,139943
139943 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
139949 :: CALL :: call :: V :: v104.setChainID(v9)::CL,93358
139954 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
139957 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,139968
139963 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,139968
139960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,139968
139968 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,140308:CD,139975
139969 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
139975 :: CALL :: call :: Z :: v113 = v110.add(v111)::
139972 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
139987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,139990
139990 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,139991:CD,140005:CD,140012:CF,140016
139991 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,139999:CL,152333
139999 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
140005 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,94183
140012 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,94598:CL,94194
140016 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,140017:CD,140031:CD,140038:JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140017 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,140025:CL,152333
140025 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
140031 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,94183
140038 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,94598:CL,94194
140042 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140046 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,140309
140050 :: CALL :: call :: I :: v136 = v131.length()::JM,140229:JM,140234:JM,140073:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139805
140054 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,140309:CD,140055:CD,140060:CD,140064:CD,140068:CD,140073:JM,140229:JM,140234:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,139767:JM,139732:JM,140244:JM,139893:JM,139800:JM,139768:JM,139929:JM,139737:JM,139805
140055 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,140229:JM,140234:JM,140073:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139805
140060 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,140244:JM,140309:JM,140234:JM,140073
140064 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,140073
140068 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,140309:JM,140073
140074 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,140309
140073 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,140309:CD,140074
140085 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,140090:CL,44052
140090 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,140097:CD,140104:CD,140107:CD,140121:CD,140128:CD,140133:CD,140137:CD,140142:CD,140310
140097 :: CALL :: call :: V :: v187.addGroup(v188)::CL,93505
140107 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,140115:CL,152333
140104 :: CALL :: call :: V :: v190.trimToSize()::CL,97708
140115 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
140121 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,94598:CL,94194
140128 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,94183
140133 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,140142
140137 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,140142
140142 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,140310:CD,140143:CD,140147:CD,140152
140143 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,140152
140147 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,140152
140155 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
140152 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,140310:CD,140155:CD,140160:CD,140165:CD,140173:CD,140178:CD,140183:CD,140188:CD,140196:CD,140205:CD,140209
140160 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
140165 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
140173 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
140178 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
140183 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
140188 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
140196 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,140310:CL,152543
140205 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,140209:CL,60092
140209 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,140310:CD,140213
140213 :: CALL :: call :: V :: v182.setChain(v185)::CL,98063
140220 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,140224:CL,82798
140224 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,140225:CD,140229:CD,140234:CD,140257:CD,140263:CD,140268:CD,140288:CD,140293:JM,139712:JM,139777:JM,139716:JM,139786:JM,140042:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140225 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140229 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,140229:JM,140234:JM,140073:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139805
140234 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,140235:CD,140239:CD,140244:JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140235 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,139712:JM,139777:JM,140225:JM,139716:JM,140229:JM,139786:JM,140042:JM,140234:JM,140235:JM,140239:JM,139794:JM,140050:JM,140054:JM,140055:JM,139732:JM,140244:JM,140309:JM,139800:JM,139929:JM,139737:JM,139806:JM,139805:JM,140073:JM,139758:JM,139762:JM,139888:JM,139767:JM,139893:JM,139768:JM,139708
140239 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,140229:JM,140234:JM,140073:JM,140239:JM,140050:JM,139762:JM,139888:JM,140054:JM,140055:JM,139767:JM,139732:JM,140244:JM,139893:JM,140309:JM,139800:JM,139768:JM,139929:JM,139737:JM,139805
140244 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,140257:CD,140263:CD,140268:CD,140288:CD,140293
140257 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
140263 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,152792
140268 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,140269:CD,140277
140269 :: CALL :: call :: V :: v198.addAtom(v220)::CL,94344
140277 :: CALL :: call :: V :: v221.addAtom(v220)::CL,94344
140288 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,140293:CL,58234
140293 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,140297
140297 :: CALL :: call :: V :: v230.addAtom(v220)::CL,94344
140306 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,140308
140307 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,139938:DD,139954
140310 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,140268
140308 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,140016
140309 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,140142:JM,140152
140529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,140545:CD,140549:CD,140554:CD,140558:CD,140563:CD,140643
140545 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,140549:CL,92484
140549 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
140554 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,140563:JM,140554:JM,140558
140558 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,140563:JM,140558
140563 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,140573:CD,140598:CD,140624
140573 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,98315
140598 :: CALL :: call :: V :: v14.setModDate(v48)::CL,99409
140624 :: CALL :: call :: V :: v14.setModDate(v24)::CL,99409
140643 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,92493
140688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,140696:CD,140700:CD,140712:CD,140716:CD,140725:CD,140732
140696 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,140700:CL,92484
140700 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127:CD,140708
140708 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,92493
140712 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,140716:JM,140732:CL,153006
140716 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,140732:CF,140717:CD,140721
140717 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,140732
140721 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,153015
140725 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
140732 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
140762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,140767:CD,140771:CD,140776:CD,140805:CD,140810:CD,140815:JM,140786:JM,140777:JM,140781
140767 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,140786:JM,140771:JM,140776:JM,140777:JM,140767:JM,140781
140771 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,140786:JM,140771:JM,140776:JM,140781
140776 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,140777:CD,140781:CD,140786:JM,140771:JM,140776:JM,140767
140777 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,140786:JM,140771:JM,140776:JM,140777:JM,140767:JM,140781
140781 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,140786:JM,140771:JM,140776:JM,140781
140786 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,140831
140805 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
140810 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,140786:JM,140771:JM,140776:JM,140781
140815 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
140831 :: CALL :: call :: V :: v36.setResolution(v23)::CL,99312
140863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,140879
140879 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,98377
140904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,140962:CD,140967:CD,140972:CD,140977:CD,140982:CD,140987:CD,140991:CD,140995:CD,141035:CD,141041:CD,141046:CD,141050:CD,141055:CD,141060:CD,141069
140962 :: CALL :: call :: V :: v28.setA(v30)::CL,98430
140967 :: CALL :: call :: V :: v28.setB(v32)::CL,98441
140972 :: CALL :: call :: V :: v28.setC(v34)::CL,98452
140977 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,98463
140982 :: CALL :: call :: V :: v28.setBeta(v38)::CL,98483
140987 :: CALL :: call :: V :: v28.setGamma(v40)::CL,98503
140991 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,140995:CL,98523
140995 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,140998:CD,141019
140998 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,140998
141019 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,98558
141035 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,98558
141041 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
141046 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
141050 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
141055 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
141060 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
141069 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
141103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,141108:CD,141112:CD,141116
141108 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,141108
141112 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,141116:CL,98569
141119 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
141116 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,141119:CD,141124:CD,141129:CD,141134:CD,141153:CD,141169:CD,141184
141124 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
141129 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
141134 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
141153 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,98648
141169 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,98659
141184 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,98648
141212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,141220
141217 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
141220 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
141235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,141240:CD,141382
141240 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,141356
141356 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
141382 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,152013
141415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,141433
141430 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
141433 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
141456 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,141461:CD,141469:CD,141477:CD,141485:CD,141493:CD,141501:CD,141506:CD,141558:CD,141562:CD,141566:CD,141570:CD,141574:CD,141575:CD,141579:CD,141588:CD,141589:CD,141593:CD,141602:CD,141606:CD,141611:CD,141615:CD,141620:CD,141628:CD,141632:CD,141640:CD,141644:CD,141648:CD,141652:CD,141656:CD,141660:CD,141661:CD,141665:CD,141674:CD,141675:CD,141679:CD,141688:CD,141692:CD,141697:CD,141701:CD,141706:CD,141714:CD,141718:CD,141726:CD,141733:CD,141737:CD,141742:CD,141749:CD,141760:CD,141769:JM,141514
141461 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
141469 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,99449
141477 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,99572
141485 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,99583
141493 :: CALL :: call :: V :: v4.setChainId(v16)::CL,99460
141501 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,141506:CL,153035
141506 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,141509:CD,141514:CD,141518:CD,141523:CD,141528:CD,141533:CD,141546:CD,141554
141509 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
141514 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141518 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141523 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,141574:JM,141588:JM,141674:JM,141660
141528 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
141533 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
141546 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,99561
141554 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,99583
141558 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141562 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141566 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141570 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141574 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,141574:JM,141588:JM,141674:JM,141660:JM,141606:JM,141665:JM,141575:JM,141514:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141589:JM,141593:JM,141566:JM,141661
141575 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141579 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141588 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,141574:JM,141588:JM,141674:JM,141660:JM,141615:JM,141665:JM,141575:JM,141514:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141589:JM,141593:JM,141566:JM,141661
141589 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141593 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141602 :: CALL :: call :: C :: v67 = v53.charValue()::JM,141606
141606 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,141607
141607 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
141611 :: CALL :: call :: C :: v74 = v60.charValue()::JM,141615
141615 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,141616
141616 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
141620 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,99517
141628 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,99528
141632 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,99539
141640 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,99550
141644 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141648 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141652 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141656 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141660 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,141574:JM,141588:JM,141674:JM,141660:JM,141692:JM,141665:JM,141575:JM,141514:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141589:JM,141593:JM,141566:JM,141661
141661 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141665 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141674 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,141574:JM,141588:JM,141674:JM,141660:JM,141701:JM,141665:JM,141575:JM,141514:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141589:JM,141593:JM,141566:JM,141661
141675 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,141665:JM,141574:JM,141575:JM,141514:JM,141674:JM,141675:JM,141579:JM,141679:JM,141644:JM,141558:JM,141652:JM,141588:JM,141589:JM,141593:JM,141566:JM,141660:JM,141661
141679 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,141665:JM,141574:JM,141588:JM,141674:JM,141579:JM,141593:JM,141679:JM,141660
141688 :: CALL :: call :: C :: v107 = v94.charValue()::JM,141692
141692 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,141693
141693 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
141697 :: CALL :: call :: C :: v112 = v100.charValue()::JM,141701
141702 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
141701 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,141702
141706 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,99594
141714 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,99605
141718 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,99616
141726 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,99627
141733 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,141737:JM,141769:CL,92514
141738 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,141769
141737 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,141769:CF,141738
141742 :: CALL :: call :: Z :: v131 = v129.add(v4)::
141749 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,153081
141760 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,92523
141769 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
141858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,141866
141863 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
141866 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
141887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,141895
141895 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
141892 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
141910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,141918:CD,141922:JM,141959:JM,141950
141918 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,141922:CL,89387
141922 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,141927:CD,141931:CD,141936:CD,141960:CD,141964:CD,141965:CD,141974:CD,141982:CD,141986:CD,141995:CD,142000:CD,142001:CD,142002:CD,142003
141927 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,142000:JM,141931:CL,92738
141931 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,142000:CF,141932
141932 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,142000
141936 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,141945:JM,141964
141941 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,141945:JM,141964
141946 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,141959:CL,115886
141945 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,142001
141950 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,141959:JM,141950
141954 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,141959
141959 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,142001
141960 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,141945:JM,141964
141966 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,142002
141964 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,141941:CD,141945:CD,141946:CD,141950:CD,141954:CD,141959:CD,141960:CD,142001:JM,141964:CF,141965
141965 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,142002:CF,141966:JM,151467:CD,142003
141974 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,151490
141982 :: CALL :: call :: V :: v32.setDescription(v38)::CL,115951
141986 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,141987
141987 :: CALL :: call :: Z :: v41 = v14.add(v32)::
141995 :: CALL :: call :: V :: v42.setSites(v14)::CL,92747
142002 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,142003
142003 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,141986
142000 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,141945:JM,141964
142001 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,141945:JM,141964:DD,141965:DD,142001:DD,142002
142041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,142048:CD,142053:CD,142058:CD,142066:CD,142070:CD,142077:CD,142082:CD,142086:CD,142091:CD,142099:CD,142104:CD,142268:JM,142178:JM,142112:JM,142170:JM,142174
142048 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
142053 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
142058 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
142066 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,142066:JM,142178:JM,142112:JM,142170:JM,142174
142070 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,142178:JM,142174
142077 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
142082 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
142086 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
142091 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
142099 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,142104:CL,150394
142107 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
142104 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,142107:CD,142112:CD,142116:CD,142121:CD,142126:CD,142139:CD,142148:CD,142152:CD,142247:CD,142251:CD,142259:CD,142263
142112 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,142066:JM,142178:JM,142112:JM,142170:JM,142174
142116 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,142178:JM,142174
142121 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,142178
142126 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
142139 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,136725
142148 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,142162:JM,142152:CL,115168
142152 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,142153:CD,142157:CD,142161:CD,142170:CD,142174:CD,142178:JM,142066:JM,142112
142153 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,115401
142157 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,142161:CL,115461
142162 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,142163
142163 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,142165
142161 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,142162:CD,142163:CD,142170:CD,142174:CD,142178:JM,142066:JM,142112
142165 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,94629
142170 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,142066:JM,142178:JM,142112:JM,142170:JM,142174
142174 :: CALL :: call :: I :: v51 = v49.length()::JM,142178:JM,142174
142178 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,142183:CD,142187:CD,142213:CD,142217
142183 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,142187:CL,58672
142187 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,142192:CD,142200:CD,142204:CD,142213:CD,142217
142192 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,94629
142200 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,58672
142204 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,94618
142213 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,142217:CL,79020
142217 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,94100:JM,94107:JM,94123:JM,94125:JM,94127
142247 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,122633
142251 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,94183
142259 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,94598:CL,94194
142263 :: CALL :: call :: V :: v38.addGroup(v84)::CL,93505
142268 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
142346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,142354
142351 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
142354 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
142363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,142371
142371 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
142368 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
142392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,142400
142397 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
142400 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
142415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,142423
142423 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
142420 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
142438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,142450:CD,142455:JM,142457:JM,142461
142450 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,142455
142455 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,142457:CD,142461
142457 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,142457:JM,142461
142461 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,142473:CD,142491
142473 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
142491 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
142511 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,142523:CD,142528:JM,142530:JM,142534
142523 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,142528
142530 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,142530:JM,142534
142528 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,142530:CD,142534
142534 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,142546:CD,142564
142546 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
142564 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
142608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,142616:CD,142620:CD,142629:CD,142637
142616 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,142620:CL,92484
142620 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,76087:JM,76103:JM,76120:JM,76095:JM,76127
142629 :: CALL :: call :: V :: v10.setDescription(v12)::CL,92599
142637 :: CALL :: call :: V :: v10.setClassification(v15)::CL,98304
142652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,142664:CD,142668:CD,142669:CD,142708:CD,142715:CD,142720:CD,142724:CD,142729:CD,142734:CD,142738:CD,142743:CD,142751:CD,142755:CD,142756:CD,142787:CD,142791:CD,142824
142664 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,142668:CL,99303
142668 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,142669
142669 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,142677:CD,142681:CD,142689
142677 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,142681:CL,99303
142681 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,142681
142689 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
142708 :: CALL :: call :: V :: v6.setResolution(v29)::CL,99312
142715 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
142720 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,142787:JM,142791
142724 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,142791
142729 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
142734 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
142738 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
142743 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
142751 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,142755:CL,153103
142755 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,142756
142756 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,142764:CD,142768:CD,142776:JM,142787:JM,142791
142764 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,142768:CL,153103
142768 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,142768
142776 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
142787 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,142787:JM,142791
142791 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,142807
142807 :: CALL :: call :: V :: v6.setRfree(v73)::CL,103375
142824 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
142862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,142867:CD,142871:CD,142892:CD,142902:JM,142896
142867 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,142867:JM,142896:JM,142871:JM,142892
142871 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,142874:CD,142879:CD,142884:JM,142867:JM,142896:JM,142871:JM,142892
142874 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
142879 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
142884 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
142892 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,142867:JM,142896:JM,142871:JM,142892
142896 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
142902 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,153112
142953 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,142958:CD,142962:CD,142966:CD,142970:CD,142974:CD,142997:CD,142998:CD,143002:CD,143007:CD,143019:CD,143023:CD,143066:CD,143067
142958 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,142970:JM,142958:JM,142974
142962 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
142966 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
142970 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,142970:JM,142974
142974 :: EXPR :: assign :: I :: v13 = v12.length::DD,142997
142976 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,142980:DD,142982
142982 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,142984:CD,143065
142980 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,142982:CD,143065
142984 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,142985:CD,142991:CD,143065
142985 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
142991 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
142998 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
142996 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,143067:CF,143066
142997 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,142998:CD,142980:CD,142996:CD,143065:CD,143066:CD,143067
143002 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
143007 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
143019 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,143023:CL,98337
143023 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,143033:CD,143024:CD,143028:CD,143034:CD,143042:CD,143047:CD,143051:CD,143056:CD,143060
143024 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
143028 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,98346
143034 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
143033 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
143042 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
143047 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
143051 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
143056 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
143060 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,98346
143066 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,143067:DD,142984:DD,143065
143067 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,142996:DD,142997
143065 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,143066:CF,142996
143131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,143142
143142 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,149088
143169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,143177
143174 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
143177 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
143198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,143206
143203 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
143206 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
143215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,143223
143223 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
143220 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
143244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,143255
143255 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,149088
143280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,143291
143291 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,149088
143340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,143348
143345 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
143348 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
143610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,143611:CD,143615:CD,143621
143611 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
143615 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,143621:CL,92916
143621 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,143611
143627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,143628:CD,143631:CD,143635:CD,143660:CD,143664
143631 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,143664:CL,58133
143628 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,126611:JM,127732
143635 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,143664
143640 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,143664
143645 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,143651:CL,58210:CL,58226:CL,58218
143651 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,143652:CD,143656:CD,143658:CD,143659
143649 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,143651
143652 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,143658:CL,58210:CL,58226:CL,58218
143658 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,143659:CD,143660:CD,143664
143659 :: NORM :: compound :: Z :: return #(0)::DD,143628
143656 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,143658
143660 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,143664
143664 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,143640:CD,143645:CD,143649:CD,143651:CD,143665:JM,143664
143665 :: NORM :: compound :: Z :: return #(1)::DD,143628
143678 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,143679:CD,143684:CD,143895:CD,143899:CD,143900:CD,143904:CD,143912:CD,143913:JM,143694:JM,143819
143679 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,147418:JM,147422:JM,147427:JM,147423
143684 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,143904
143689 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,143899:JM,143694
143694 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,143695
143695 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,143696
143698 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,143905:JM,143706:CL,94609
143696 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,143698:CD,143702:CD,143706:CD,143707:CD,143711:CD,143715:CD,143721:CD,143726:CD,143728:CD,143732:CD,143905:CD,143910:CD,143911
143702 :: CALL :: call :: C :: v18 = v16.charValue()::JM,143905:JM,143706
143706 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,143905
143707 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
143711 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
143715 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
143721 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
143726 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,143910
143728 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,143732:CL,147366
143734 :: CALL :: call :: I :: v35 = v12.size()::JM,143738:CL,95213
143732 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,143734:CD,143738:CD,143910:CD,143911
143738 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,143739:CD,143744:CD,143756:CD,143760
143739 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,143744:CL,95226
143744 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,143750:CD,143754:CD,143910:CD,143911
143750 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,143754:CL,153422
143754 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,143756:CD,143760:CD,143910:CD,143911
143756 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,143760:CL,115401
143763 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,108494:CL,108782:CL,108684
143760 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,143763:CD,143773:CD,143775:CD,143779:CD,143784:CD,143910:CD,143911
143775 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,143779:JM,143784:CL,153435
143773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,143779:JM,143784
143779 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,143779:JM,143784
143784 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,143791:CD,143796:CD,143809:CD,143813:CD,143818:CD,143833:CD,143837:CD,143877:CD,143881:CD,143906:CD,143907:CD,143908:CD,143909:CD,143910:CD,143911
143791 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,143796
143796 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,143803:CD,143808:CD,143809:CD,143813:CD,143818:CD,143833:CD,143837:CD,143877:CD,143881:CD,143906:CD,143907:CD,143908:CD,143909:CD,143910:CD,143911
143803 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,143808
143808 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,143809:CD,143813:CD,143818:CD,143833:CD,143837:CD,143877:CD,143881:CD,143885:CD,143906:CD,143907:CD,143908:CD,143909:CD,143910:CD,143911
143809 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,143906:JM,143818:CL,130852
143813 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,143906:JM,143818
143818 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,143906:CD,143819
143819 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,143826:CD,143831:CD,143906
143826 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,143831
143831 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,143906
143833 :: CALL :: call :: I :: v79 = v77.length()::JM,143837
143837 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,143840
143840 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,108494:CL,108782:CL,108684
143851 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
143855 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
143859 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
143865 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
143870 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
143875 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,143907:CF,143876
143876 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,143909:CF,143907
143877 :: CALL :: call :: I :: v86 = v77.length()::JM,143881
143881 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,143851:CD,143855:CD,143859:CD,143865:CD,143870:CD,143875:CD,143876:CD,143877:CD,143907:CD,143908:CD,143909
143885 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,108494:CL,108782:CL,108684
143894 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,143913:CF,143912
143895 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,143899:JM,143694
143899 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,143689:CD,143694:CD,143695:CD,143696:CD,143894:CD,143895:CD,143910:CD,143911:CD,143912:CD,143913:JM,143899:JM,143904
143900 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,143904
143906 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,143837:JM,143881
143907 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,143908:DD,143875:DD,143910
143904 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,143679
143905 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
143910 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,143911:DD,143912
143911 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,143894
143908 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,143909:DD,143908:DD,143911
143909 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,143876:DD,143881
143912 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,143913:DD,143726:DD,143907:DD,143910
143913 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,143694:DD,143899:DD,143908:DD,143911
144010 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,126731:JM,126737
144009 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,144010:CF,144020:CD,144021
144020 :: NORM :: compound :: Z :: return #(0)::CF,144010
144021 :: NORM :: compound :: Z :: return #(1)::CF,144010
144026 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,127333:JM,126748:JM,126752:JM,127334
144025 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,144026:CF,144043:CD,144030:CD,144035
144030 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,144035
144035 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,144026
144043 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,144026
144050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,144051:CD,144056:CD,144059:CD,144065:CD,144066:CD,144074:CD,144078
144051 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,127335
144059 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,144066:JM,144074:JM,144078
144056 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,144066:JM,144074:JM,144078
144066 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,144066:JM,144074:JM,144056:JM,144078
144065 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,144066:JM,144074:JM,144078:JM,144056
144074 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,144066:JM,144074:JM,144078
144078 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,144051
144090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,144091:CF,144101:CD,144102
144091 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,126768:JM,126774
144102 :: NORM :: compound :: Z :: return #(1)::CF,144091
144101 :: NORM :: compound :: Z :: return #(0)::CF,144091
144106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,144107:CF,144124:CD,144111:CD,144116
144107 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,126785:JM,127333:JM,126789:JM,127334
144111 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,144116
144116 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,144107
144124 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,144107
144131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,144132:CD,144137:CD,144140:CD,144146:CD,144147:CD,144155:CD,144159
144132 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,127335
144137 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,144147:JM,144155:JM,144159
144140 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,144147:JM,144155:JM,144159
144146 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,144147:JM,144155:JM,144159:JM,144137
144147 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,144147:JM,144155:JM,144137:JM,144159
144155 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,144147:JM,144155:JM,144159
144159 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,144132
144171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,144172:CF,144182:CD,144183
144172 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,126805:JM,126811
144182 :: NORM :: compound :: Z :: return #(0)::CF,144172
144183 :: NORM :: compound :: Z :: return #(1)::CF,144172
144187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,144188:CF,144205:CD,144192:CD,144197
144188 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,127333:JM,126822:JM,127334:JM,126826
144192 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,144197
144197 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,144188
144205 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,144188
144212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,144213:CD,144218:CD,144221:CD,144227:CD,144228:CD,144236:CD,144240
144213 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,127335
144218 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,144240:JM,144228:JM,144236
144221 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,144240:JM,144228:JM,144236
144227 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,144240:JM,144228:JM,144236:JM,144218
144228 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,144240:JM,144228:JM,144218:JM,144236
144236 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,144240:JM,144228:JM,144236
144240 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,144213
144252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,144257:JM,144262:CF,144253:CD,144265:CD,144269:CD,144270:CD,144272:CD,144273
144253 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126860
144257 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,144257:JM,144262:JM,144265:JM,144269
144262 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,144271:CD,144263
144263 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,144271
144264 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,144273:CF,144272
144265 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,144257:JM,144262:JM,144265:JM,144269
144270 :: NORM :: compound :: I :: return v12::CF,144253
144271 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,144272:CF,144264
144269 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,144257:CD,144262:CD,144264:CD,144265:CD,144271:CD,144272:CD,144273:JM,144269:CF,144270
144272 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,144273:DD,144263:DD,144270:DD,144271
144273 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,144257:JM,144262:JM,144265:DD,144264:DD,144269
144288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,144293:JM,144298:CF,144289:CD,144311:CD,144315:CD,144316:CD,144318:CD,144319
144289 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126868
144293 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,144311:JM,144293:JM,144298:JM,144315
144298 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,144308:JM,144299:JM,144303
144299 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,144308:JM,144299:JM,144303
144303 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,144308:JM,144303
144310 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,144319:CF,144318
144311 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,144311:JM,144293:JM,144298:JM,144315
144308 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,144317:CD,144309
144309 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,144317
144315 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,144293:CD,144298:CD,144299:CD,144303:CD,144308:CD,144310:CD,144311:CD,144317:CD,144318:CD,144319:JM,144315:CF,144316
144318 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,144319:DD,144309:DD,144316:DD,144317
144319 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,144311:JM,144293:JM,144298:DD,144310:DD,144315
144316 :: NORM :: compound :: I :: return v18::CF,144289
144317 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,144318:CF,144310
144335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,144340:JM,144345:CF,144336:CD,144358:CD,144362:CD,144363:CD,144365:CD,144366
144336 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126871
144340 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,144358:JM,144340:JM,144362:JM,144345
144346 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,144355:JM,144346:JM,144350
144345 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,144355:JM,144346:JM,144350
144350 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,144355:JM,144350
144355 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,144364:CD,144356
144358 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,144358:JM,144340:JM,144362:JM,144345
144356 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,144364
144357 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,144366:CF,144365
144362 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,144340:CD,144345:CD,144346:CD,144350:CD,144355:CD,144357:CD,144358:CD,144364:CD,144365:CD,144366:JM,144362:CF,144363
144363 :: NORM :: compound :: I :: return v18::CF,144336
144366 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,144358:JM,144340:JM,144345:DD,144357:DD,144362
144364 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,144365:CF,144357
144365 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,144366:DD,144356:DD,144363:DD,144364
144406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,144411:CD,144415:CD,144419
144411 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,144419:JM,144421:CL,153444
144415 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,144419:CL,153444
144419 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,144421:CD,144437:CD,144520:CD,144524:CD,144589
144421 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,144424:CD,144432:CD,144589
144424 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,144589:CL,60101
144432 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,144589:CL,60101
144437 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,144524
144442 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,144524
144451 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,133161
144456 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,144469:CL,58663
144460 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,144469:CL,58663
144464 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,144469
144469 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,144520:CD,144524
144520 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,144524
144524 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,144442:CD,144451:CD,144456:CD,144460:CD,144464:CD,144469:JM,144524
144589 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,144524
144678 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,128097:JM,128092:JM,128965:JM,128959:JM,129054
144677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,144678:CD,144681:CD,144682:CD,144687:CD,144691:CD,144715:CD,144726:CD,144731:CD,144787:CD,144788:CD,144792:CD,144793:CD,144798:CD,144894:CD,144908:CD,144911:CD,144925:CD,144928:CD,144942:CD,144949:CD,144950
144682 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
144681 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,144799:DD,144943:CF,144682
144687 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,144691:JM,144687
144691 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,144704
144704 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
144715 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
144726 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,144949
144731 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,144787
144737 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,144756:JM,144948:JM,144748
144743 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,144748:JM,144756:JM,144948
144741 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,144748
144751 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,144756:JM,144948:JM,144748
144748 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,144763:CD,144749:CD,144751:CD,144756:CD,144757:CD,144764:CD,144772:CD,144777:CD,144782:CD,144948
144749 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,144756
144756 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
144757 :: CALL :: call :: Z :: v38 = v3.add(v36)::
144763 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,144948
144764 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
144772 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,144948:JM,144756:JM,144748
144777 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,144948
144782 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,144948
144786 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,144950:CF,144949
144787 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,144737:CD,144741:CD,144743:CD,144748:CD,144786:CD,144948:CD,144949:CD,144950:JM,144792
144788 :: CALL :: call :: I :: v55 = v52.length()::JM,144792
144792 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,144798
144793 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,144798
144798 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,144799:CD,144832:CD,144844:CD,144848:CD,144877:CD,144881:CD,144882:CD,144886:CD,144943
144799 :: NORM :: compound :: Ljava/util/List :: return v3::DD,144678
144832 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,144848:JM,144881:JM,144853:JM,144857:JM,144844:JM,144877:JM,144882
144844 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,144848:JM,144881:JM,144853:JM,144857:JM,144844:JM,144877
144848 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,144848:JM,144881:JM,144853:JM,144857:JM,144877
144853 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,144881:JM,144853:JM,144857:JM,144877
144858 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,144858:JM,144863
144857 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,144858:JM,144863
144863 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,144864:JM,144868
144864 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,144864:JM,144868
144871 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
144868 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,144869:CD,144871:JM,144881:JM,144853:JM,144857:JM,144877
144869 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
144877 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,144881:JM,144853:JM,144857:JM,144877
144882 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,144882
144881 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,144853:CD,144857:CD,144858:CD,144863:CD,144864:CD,144868:CD,144877:JM,144881:JM,144882
144886 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
144894 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
144911 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
144908 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144678
144925 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144678
144928 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
144942 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144678
144943 :: NORM :: compound :: Ljava/util/List :: return v3::DD,144678
144950 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,144786:DD,144787
144948 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,144949:CF,144786
144949 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,144950:JM,144792:JM,144798:DD,144948
145047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,145048:CD,145051:CD,145055:CD,145060:CD,145172:CD,145173:CD,145178:CD,145183:CD,145188:CD,145197:CD,145198
145051 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145048 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,128152:JM,129075
145055 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145060 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,145061:CD,145064:CD,145069:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132
145061 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,145198
145064 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145070 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,145198
145069 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,145070:CD,145073:CD,145078:CD,145198:JM,145123:JM,145105:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145073 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145078 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,145079:CD,145082:CD,145087:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145132:JM,145069
145079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,145198
145082 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145087 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,145088:CD,145091:CD,145096:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145150:JM,145087:JM,145132:JM,145069
145091 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145088 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,145198
145096 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,145097:CD,145100:CD,145105:CD,145198:JM,145123:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145097 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,145198
145100 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145106 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,145198
145105 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,145106:CD,145109:CD,145114:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145109 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145114 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,145115:CD,145118:CD,145123:CD,145198:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145115 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,145198
145118 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145123 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,145124:CD,145127:CD,145132:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145069
145127 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145124 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,145198
145132 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,145133:CD,145136:CD,145141:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145133 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,145198
145136 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145142 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,145198
145141 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,145142:CD,145145:CD,145150:CD,145198:JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145087:JM,145132:JM,145069
145145 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145150 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,145151:CD,145154:CD,145159:CD,145198:JM,145123:JM,145105:JM,145078:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145151 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,145198
145154 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145159 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,145160:CD,145169:CD,145198
145160 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,145198
145169 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,145198
145172 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
145173 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
145178 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,145123:JM,145105:JM,145078:JM,145159:JM,145060:JM,145141:JM,145114:JM,145096:JM,145150:JM,145087:JM,145132:JM,145069
145183 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
145188 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
145198 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,145197
145197 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,145048
145266 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,145267:CD,145269:CD,145271
145267 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
145271 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,145272:CD,145273:CD,145276:CD,145277:CD,145278:CD,145280:CD,145289:CD,145291:CD,145300:CD,145302:CD,145311:CD,145313:CD,145322:CD,145324:CD,145333:CD,145335:CD,145344:CD,145346:CD,145355:CD,145357:CD,145366:CD,145368:CD,145377:CD,145379:CD,145388:CD,145390:CD,145399:CD,145401:CD,145410:CD,145412:CD,145423
145269 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,145271:DD,145272
145272 :: NORM :: compound :: [I :: return v2::DD,145267
145273 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,145276:CL,153461
145278 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
145276 :: EXPR :: assign :: I :: v6 = v5.length::CF,145277
145277 :: NORM :: declaration :: [I :: v7 = new []::DD,145423
145280 :: CALL :: call :: I :: v10 = v8.ordinal()::
145284 :: EXPR :: modify :: I :: v7[v10] = #(3)::
145291 :: CALL :: call :: I :: v16 = v14.ordinal()::
145289 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
145295 :: EXPR :: modify :: I :: v7[v16] = #(2)::
145302 :: CALL :: call :: I :: v22 = v20.ordinal()::
145300 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
145306 :: EXPR :: modify :: I :: v7[v22] = #(4)::
145311 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
145313 :: CALL :: call :: I :: v28 = v26.ordinal()::
145317 :: EXPR :: modify :: I :: v7[v28] = #(5)::
145322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
145324 :: CALL :: call :: I :: v34 = v32.ordinal()::
145328 :: EXPR :: modify :: I :: v7[v34] = #(12)::
145335 :: CALL :: call :: I :: v40 = v38.ordinal()::
145333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
145339 :: EXPR :: modify :: I :: v7[v40] = #(1)::
145346 :: CALL :: call :: I :: v46 = v44.ordinal()::
145344 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
145350 :: EXPR :: modify :: I :: v7[v46] = #(6)::
145355 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
145357 :: CALL :: call :: I :: v52 = v50.ordinal()::
145361 :: EXPR :: modify :: I :: v7[v52] = #(7)::
145366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
145368 :: CALL :: call :: I :: v58 = v56.ordinal()::
145372 :: EXPR :: modify :: I :: v7[v58] = #(8)::
145379 :: CALL :: call :: I :: v64 = v62.ordinal()::
145377 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
145383 :: EXPR :: modify :: I :: v7[v64] = #(9)::
145390 :: CALL :: call :: I :: v70 = v68.ordinal()::
145388 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
145394 :: EXPR :: modify :: I :: v7[v70] = #(13)::
145399 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
145401 :: CALL :: call :: I :: v76 = v74.ordinal()::
145405 :: EXPR :: modify :: I :: v7[v76] = #(10)::
145410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
145412 :: CALL :: call :: I :: v82 = v80.ordinal()::
145416 :: EXPR :: modify :: I :: v7[v82] = #(11)::
145423 :: NORM :: compound :: [I :: return v7::DD,145267
145538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,145543:CD,145547:JM,145553:JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145543 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,145649:JM,145553:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145547 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,145549:CD,145553:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145549 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,145553:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145554 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,145553:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145553 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,145554:CD,145560:CD,145564:CD,145568:CD,145572:CD,145626:CD,145630:CD,145653:JM,145553:JM,145649:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145598:JM,145615
145560 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,145553:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145564 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,145649:JM,145553:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145568 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145574 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145572 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,145653
145578 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,145604:JM,145610:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145579 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145584 :: CALL :: call :: V :: v10.add(v31)::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145588 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145594 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145592 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,145594:CD,145598:CD,145599:CD,145604:CD,145651:JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145630:JM,145615
145598 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,145651
145599 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,145604
145604 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,145584:CD,145588:CD,145592:CD,145605:CD,145610:CD,145652:JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145640:JM,145630:JM,145598:JM,145615
145605 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,145610
145610 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,145652:CD,145611:CD,145615:CD,145622:CD,145626:CD,145630:CD,145653:JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598
145611 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145615 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,145617:CD,145621:CD,145622:CD,145626:CD,145630:CD,145652:CD,145653:JM,145649:JM,145572:JM,145578:JM,145592:JM,145640:JM,145598:JM,145615
145617 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145622 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145621 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,145652
145626 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145630 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,145574:CD,145578:CD,145579:CD,145599:CD,145604:CD,145631:CD,145645:CD,145649:CD,145651:JM,145572:JM,145621:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145631 :: CALL :: call :: V :: v10.add(v42)::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145636 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145640 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145641 :: CALL :: call :: V :: v10.add(v48)::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615
145645 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145598:JM,145630:JM,145615
145651 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615:JM,145604:JM,145610:DD,145652
145649 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,145636:CD,145640:CD,145641:CD,145645:JM,145649:JM,145572:JM,145621:JM,145578:JM,145592:JM,145598:JM,145630:JM,145615
145652 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615:DD,145653
145653 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,145649:JM,145572:JM,145621:JM,145578:JM,145547:JM,145592:JM,145640:JM,145630:JM,145598:JM,145615:DD,145651
145811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,145812:CD,145815:CD,145819:CD,145824:CD,145825:CD,145829:CD,145835
145815 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,145824:JM,145825:JM,145829:JM,145819:JM,145835
145812 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
145819 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,145824:JM,145825:JM,145829:JM,145819:JM,145835
145824 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,145824:JM,145829:JM,145819:JM,145835:JM,145825
145825 :: CALL :: call :: I :: v12 = v4.length()::JM,145824:JM,145825:JM,145829:JM,145819:JM,145835
145829 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,145824:JM,145825:JM,145829:JM,145819:JM,145835
145835 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,145812
145864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
145895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::
147065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,147073
147070 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
147073 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
147177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,147184:CD,147221
147181 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,147184
147184 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,147185:CD,147192:CD,147197
147185 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
147192 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
147197 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
147221 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
147366 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,147367:CD,147370:CD,147375:CD,147380
147367 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,132079:JM,143732:JM,157515
147370 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,147380
147375 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,147380
147372 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,147380
147383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,147384:CD,147390
147380 :: NORM :: compound :: Z :: return v6::CF,147367
147387 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,147390
147384 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,132146:JM,132407:JM,132106:JM,132093:JM,137759
147390 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,147384
147392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,147393:CD,147398:CD,147402:CD,147406:CD,147412:CD,147418:CD,147422:CD,147555:CD,147560:CD,147565:CD,147573:CD,147599:CD,147604:CD,147609:CD,147617
147393 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,132575
147398 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
147402 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
147406 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,147418:JM,147422:CL,143678
147412 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,147427:JM,147423:CL,143678
147418 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,147418:JM,147422
147422 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,147423:CD,147427:CD,147434
147423 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,147427:JM,147423
147427 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,147434:CD,147437:CD,147442:CD,147446:CD,147451:CD,147456:CD,147461:CD,147471:CD,147476:CD,147480:CD,147485:CD,147490:CD,147495:CD,147503:CD,147508:CD,147513
147434 :: NORM :: compound :: Z :: return #(1)::DD,147393
147437 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
147442 :: CALL :: call :: I :: v24 = v11.length()::JM,147418:JM,147422
147446 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
147451 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
147456 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,147418:JM,147422
147461 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
147471 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
147476 :: CALL :: call :: I :: v40 = v13.length()::JM,147427:JM,147423
147480 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
147485 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
147490 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,147427:JM,147423
147495 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
147503 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,147537:JM,147542:JM,147703:JM,147524:JM,147530:JM,147704:JM,147513:JM,147529:JM,147516:CL,154899
147508 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,147586:JM,147520:JM,147574:JM,147524:JM,147514:JM,147705:JM,147529:JM,147581:CL,154899
147514 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,147515:CD,147516:CD,147520:CD,147524:CD,147529:CD,147618:CD,147621:CD,147627:CD,147628:CD,147636:CD,147640:CD,147704:CD,147705:JM,147537:JM,147542:JM,147703:JM,147530
147515 :: NORM :: compound :: Z :: return #(1)::DD,147393
147513 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,147514:CD,147515
147516 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,147537:JM,147542:JM,147703:JM,147524:JM,147530:JM,147704:JM,147529:JM,147516
147520 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,147586:JM,147520:JM,147574:JM,147524:JM,147705:JM,147529:JM,147581
147524 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,147537:JM,147542:JM,147524:JM,147529:JM,147586:JM,147581
147530 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,147537:JM,147542:JM,147703:JM,147524:JM,147530:JM,147704:JM,147529:JM,147516
147529 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,147704:CD,147530:CD,147534:CD,147537:CD,147542:CD,147574:CD,147578:CD,147581:CD,147586:CD,147703:CD,147705:JM,147524:JM,147529:JM,147516
147534 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,147537:JM,147542
147537 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,147537:JM,147542:JM,147524:JM,147529
147542 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,147703:CF,147543
147543 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,147703
147555 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
147560 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,147418:JM,147422
147565 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
147574 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,147586:JM,147520:JM,147574:JM,147524:JM,147705:JM,147529:JM,147581
147573 :: NORM :: compound :: Z :: return #(1)::DD,147393
147578 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,147586:JM,147581
147581 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,147586:JM,147524:JM,147529:JM,147581
147586 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,147704:CF,147587:CD,147705
147587 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,147705
147599 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
147604 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,147427:JM,147423
147609 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
147618 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,147636:JM,147640:JM,147673:JM,147628
147617 :: NORM :: compound :: Z :: return #(1)::DD,147393
147621 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,147636:JM,147640:JM,147673:JM,147628
147627 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,147636:JM,147640:JM,147673:JM,147628
147628 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,147636:JM,147640:JM,147673:JM,147628
147636 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,147636:JM,147640:JM,147673:JM,147628
147640 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,147665:CD,147668:CD,147673:CD,147678:CD,147683:CD,147691:CD,147700
147665 :: NORM :: compound :: Z :: return #(1)::DD,147393
147668 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
147673 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,147673
147678 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
147683 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
147691 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,147700:CL,154973
147703 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,147586:JM,147520:JM,147574:JM,147524:JM,147705:JM,147529:JM,147581:DD,147704
147700 :: NORM :: compound :: Z :: return v126::DD,147393
147704 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,147705:JM,147636:JM,147640:JM,147673:JM,147628
147705 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,147618:JM,147636:JM,147640:JM,147673:JM,147628
147790 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,132803
147789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,147790:CD,147798:CD,147802:CD,147805:CD,148188:CD,148198:CD,148199:JM,147811:JM,147840:JM,147873:JM,147841:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835
147798 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147802 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,147840:JM,147841:JM,147846:JM,147835:JM,147805
147805 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,147840:JM,147841:JM,147846:JM,147835:JM,147805
147811 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147817 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147823 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147828 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147829 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147834 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,147840:JM,147841:JM,147846:JM,147828:JM,147834:JM,147835:JM,147848:JM,147817:JM,147853
147835 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,147840:JM,147841:JM,147846:JM,147828:JM,147834:JM,147835:JM,147848:JM,147817:JM,147853
147840 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,148197:CD,147841:CD,147846:CD,148187:CD,148188:CD,148198:CD,148199:JM,147840:JM,147828:JM,147834:JM,147835:JM,147848:JM,147853
147841 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,147840:JM,147841:JM,147846:JM,147828:JM,147834:JM,147835:JM,147848:JM,147853
147846 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,147848:CD,147853:CD,148187:CD,148188:CD,148197:CD,148198:CD,148199:JM,147840:JM,147841:JM,147846:JM,147828:JM,147834:JM,147835:JM,147817
147848 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,147840:JM,147841:JM,147846:JM,147828:JM,147834:JM,147835:JM,147848:JM,147817:JM,147853
147854 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
147853 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,148197:CD,147854:CD,147858:CD,147863:CD,147864:CD,147868:CD,147873:CD,147874:CD,147878:CD,147883:CD,147884:CD,147888:CD,147893:CD,147894:CD,148187:CD,148188:CD,148198:CD,148199
147858 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,147863
147863 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,147873
147864 :: CALL :: call :: I :: v40 = v38.intValue()::JM,147873
147868 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,147811:JM,147840:JM,147873:JM,147841:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147874 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
147873 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,147894
147878 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,147883
147883 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,147893
147884 :: CALL :: call :: I :: v50 = v48.intValue()::JM,147893
147888 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,147811:JM,147840:JM,147841:JM,147873:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
147894 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,147895:CD,147898:CD,147903:CD,147908:CD,147913:CD,147918:CD,147923:CD,147928:CD,147933:CD,147938:CD,147943:CD,147948:CD,147953:CD,147958:CD,148187:CD,148188:CD,148197:CD,148198:CD,148199
147895 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,147898:CD,147903:CD,147908:CD,147913:CD,147918:CD,147923:CD,147928:CD,147933:CD,147938:CD,147943:CD,147948:CD,147953:CD,147958:CD,147967:CD,147971:CD,147975:CD,148187:CD,148188:CD,148197:CD,148198:CD,148199
147893 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,147895:JM,147811:JM,147840:JM,147873:JM,147841:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188:CF,147894
147898 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
147903 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
147908 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
147913 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
147918 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
147923 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
147928 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
147933 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
147938 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
147943 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
147948 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
147953 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
147958 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
147967 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,147975:JM,148029:CL,58663
147971 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,147976:JM,148029:CL,58663
147975 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,147976:CD,148015
147976 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,148015:CD,148016:CD,148020:CD,148024:CD,148029:CD,148167:CD,148171:CD,148176:CD,148177:CD,148181:CD,148187:CD,148188:CD,148197:CD,148198:CD,148199
148015 :: NORM :: compound :: Z :: return #(1)::DD,147790
148016 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,148029
148020 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,148029
148024 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,148029
148030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
148029 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,148030:CD,148035:CD,148040:CD,148045:CD,148050:CD,148055:CD,148060:CD,148065:CD,148070:CD,148075:CD,148080:CD,148085:CD,148090:CD,148094:CD,148098:CD,148100:CD,148105
148035 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
148040 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
148045 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
148050 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
148055 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
148060 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
148065 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
148070 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
148075 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
148080 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
148085 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
148090 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
148094 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,148100:JM,148105:CL,58210:CL,58226:CL,58218
148098 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,148100:JM,148105
148100 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,148100:JM,148105
148106 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,148112:JM,148117:CL,58210:CL,58226:CL,58218
148105 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,148106:CD,148110:CD,148112:CD,148117:CD,148145:CD,148146:CD,148154:CD,148159
148110 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,148112:JM,148117
148112 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,148112:JM,148117
148117 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,148120:CD,148121:CD,148129:CD,148134:CD,148145:CD,148146:CD,148154:CD,148159
148120 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
148121 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
148129 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
148134 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
148146 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
148145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
148154 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
148159 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
148167 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
148171 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,148176
148176 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
148177 :: CALL :: call :: I :: v166 = v164.intValue()::
148181 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,147811:JM,147840:JM,147873:JM,147841:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147798:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,148188
148187 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,148199:CF,148198
148188 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,147811:CD,147817:CD,147823:CD,147828:CD,147829:CD,147834:CD,147835:CD,147840:CD,148196:CD,148197:JM,147841:JM,147873:JM,147846:JM,147848:JM,147853:JM,147798:JM,147893:JM,148188
148198 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,148199:DD,148196:DD,148197
148199 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,147811:JM,147840:JM,147841:JM,147846:JM,147848:JM,147817:JM,147823:JM,147853:JM,147828:JM,147829:JM,147893:JM,147834:JM,147835:JM,147873:DD,148187:DD,148188
148196 :: NORM :: compound :: Z :: return v171::DD,147790
148197 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,148198:CF,148187
148369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,148377
148377 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,155520
148387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,148395
148395 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,155552
148405 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,148412:CD,148416:CD,148429:CD,148457:CD,148461:CD,148462:CD,148478:CD,148479
148412 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,148416:JM,148478:CL,133820
148416 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,148478:CF,148417:CD,148425
148417 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,148478
148425 :: CALL :: call :: V :: v10.setBonds(v7)::CL,155584
148429 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,148461
148434 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,148461
148442 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,148450:JM,148455:CL,155595
148447 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,148450:JM,148455
148450 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,148450:JM,148455
148455 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,148457:CD,148461:CD,148479
148457 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,148461
148462 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,148466:CD,148473
148461 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,148479:CD,148434:CD,148442:CD,148450:CD,148455:JM,148461
148466 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,155634
148473 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,155634
148478 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,148461
148479 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,148462
148507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,148508:CD,148511:CD,148515:CD,148520:CD,148524
148511 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,148928
148508 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,133968:JM,133976
148515 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
148520 :: CALL :: call :: Z :: v8 = v5.exists()::JM,148524
148524 :: NORM :: compound :: Z :: return v8::DD,148508
148531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,148538
148535 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,148538
148538 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,148540:CD,148541:CD,148548:CD,148554:CD,148558
148540 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
148541 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
148548 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
148554 :: CALL :: call :: Z :: v13 = v9.exists()::JM,148558
148558 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,148559:CD,148568:CD,148573:CD,148574
148559 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,155668
148568 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,148573
148574 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,148575
148575 :: CALL :: call :: V :: p0 $this .split()::CL,155941
148573 :: EXPR :: assign :: I :: v18 = v17.length::DD,148574
148620 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,148621:CD,148624:CD,148628:CD,148633:CD,148638:CD,148642:CD,148659:CD,148660:CD,148665:CD,148670:CD,148675:CD,148681:CD,148686:CD,148691:CD,148699:CD,148704:CD,148708:CD,148723:CD,148724:CD,148742:CD,148746:CD,148747:CD,148750:CD,148756:CD,148760:CD,148773:CD,148807:CD,148810:CD,148815:CD,148819:CD,148824:CD,148829:CD,148834:CD,148839:CD,148843:CD,148848:CD,148856:CD,148860:CD,148865:CD,148870
148621 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,134108
148624 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,148928
148628 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
148633 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
148638 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
148642 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
148659 :: NORM :: compound :: Z :: return #(0)::DD,148621
148660 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
148665 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
148670 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
148675 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
148681 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
148686 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
148691 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
148699 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,148870
148704 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,156169
148708 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,148760
148723 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,148746:DD,148750:CF,148724
148724 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
148738 :: CALL :: call :: V :: v47.println(v60)::
148742 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,148746
148746 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,148738:CD,148742
148747 :: CALL :: call :: V :: v47.flush()::
148750 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,148751:CF,148760
148751 :: CALL :: call :: V :: v53.close()::
148756 :: CALL :: call :: V :: v53.close()::
148760 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,148761
148761 :: CALL :: call :: V :: v47.close()::
148773 :: CALL :: call :: V :: v47.close()::
148807 :: NORM :: compound :: Z :: return #(1)::DD,148621
148810 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
148815 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
148819 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
148824 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
148829 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
148834 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
148839 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
148843 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
148848 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
148856 :: CALL :: call :: Z :: v113 = v14.delete()::
148860 :: NORM :: compound :: Z :: return #(0)::DD,148621
148865 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
148870 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
148928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,148929:CD,148932:CD,148934:CD,148939:CD,148954:CD,148956:CD,148957:CD,148964:CD,148968:CD,149001:CD,149002:CD,149003:CD,149011:CD,149016:CD,149025:CD,149029
148929 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
148934 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,148939
148932 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,148939
148939 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,148940:CD,148945:CD,148950
148940 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
148945 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,148939
148950 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
148954 :: CALL :: call :: V :: initPath()::CL,45760
148956 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
148957 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
148964 :: CALL :: call :: Z :: v21 = v16.exists()::JM,148968
148971 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
148968 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,149001:CD,148971:CD,148976:CD,148981:CD,148989
148976 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
148981 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
148989 :: CALL :: call :: Z :: v32 = v16.mkdir()::
149002 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
149003 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
149001 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,149029:CF,149002
149011 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
149016 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
149025 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,149029
149029 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,148929
149068 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,149072
149072 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
149088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,149089:CD,149096:CD,149101:CD,149102
149089 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,134042:JM,149252
149096 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,149101
149102 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,149089
149101 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,149102
149122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,149123:CD,149127:CD,149131:CD,149139:CD,149144:CD,149149:CD,149154:CD,149158:CD,149165:CD,149170:CD,149175:CD,149180:CD,149188:CD,149281:CD,149284:CD,149288
149123 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,134102
149127 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
149131 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
149139 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
149144 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
149149 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
149154 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
149158 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,149188
149165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
149170 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
149175 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
149180 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
149188 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,149196:CD,149199:CD,149207:JM,91430:JM,156231:JM,156245:JM,156238:JM,149068:CD,149216:CD,149220:CD,149221:CD,149235:CD,149243:CD,149252
149199 :: CALL :: call :: V :: v55.setId(v7)::CL,156335
149196 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,149207:CL,156296
149207 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,149123
149216 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,91479
149220 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,149221
149221 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
149235 :: CALL :: call :: V :: v34.parse(v39)::CL,91496
149243 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,149252:CL,149088
149252 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,149123
149281 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,149288:CL,156296
149284 :: CALL :: call :: V :: v73.setId(v7)::CL,156335
149288 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,149123
149342 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,149347:CD,149349:CD,149354:CD,149379
149347 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,149379:JM,149354
149349 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,149379:JM,149354
149354 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,149379:CF,149355:CD,149356:CD,149364:CD,149366:CD,149371
149355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,149379
149356 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
149366 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,149379
149364 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,149379
149371 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,149379
149375 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
149379 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,149375
149387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,149388:CD,149400:CD,149405
149388 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::JM,134346:JM,135521:JM,149812
149400 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,149405
149405 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,149388
149464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,149469:CD,149478:CD,149482:CD,149494:CD,149498:CD,149510:CD,149514:CD,149526
149469 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
149474 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
149478 :: CALL :: call :: I :: v10 = parseInt(v8)::
149482 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
149490 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
149494 :: CALL :: call :: I :: v17 = parseInt(v15)::
149498 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
149506 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
149510 :: CALL :: call :: I :: v24 = parseInt(v22)::
149514 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
149522 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
149526 :: CALL :: call :: I :: v31 = parseInt(v29)::
149695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,149696:CD,149699:CD,149703:CD,149709:CD,149720:CD,149726:CD,149731:CD,149756:CD,149761:CD,149765:CD,149766
149699 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,149765
149696 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
149703 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
149700 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
149709 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
149717 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,149731
149720 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,149731
149726 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,149731
149731 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,149732:CD,149740:CD,149746:CD,149751:CD,149766
149732 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,149766
149737 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,149766
149740 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,149766
149746 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,149766
149751 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,149766
149756 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,149765
149761 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,149765
149766 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,149765
149765 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,149696
149782 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CE,149783:CD,149786:CD,149790:CD,149798:CD,149803:CD,149808:CD,149812
149783 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::
149786 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,149812
149790 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
149798 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::JM,149812:CL,149387
149803 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,149812
149808 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,149812
149812 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,149783
149817 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,149895:CD,149899:JM,149828
149823 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,149828:JM,149899
149830 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,156390
149828 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,149830:CD,149835:CD,149839:CD,149848:CD,149853:CD,149877:CD,149889:CD,149901
149835 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,149695
149839 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
149848 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,149853
149853 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,149864:CD,149857:CD,149862:CD,149871:CD,149901
149857 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,149862
149862 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,149901
149864 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,149901
149871 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
149877 :: CALL :: call :: Z :: v32 = v30.add(v12)::
149889 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
149895 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,149828:JM,149899
149899 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,149823:CD,149828:CD,149895:JM,149899
149901 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
149987 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,149988:CD,150007:CD,150011:CD,150015:CD,150039:CD,150058
149988 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,136386
150007 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,156631
150011 :: CALL :: call :: Z :: v13 = v11.exists()::JM,150015
150015 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,150016:CD,150020:CD,150021:CD,150058
150016 :: CALL :: call :: J :: v16 = v11.length()::JM,150020
150020 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,150021
150021 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,150058
150039 :: NORM :: compound :: Z :: return v28::DD,149988
150058 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,150039
150074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,150095:CD,150099:CD,150107:CD,150112:CD,150116:CD,150121:CD,150129:CD,150141:CD,150148:CD,150156:CD,150161:CD,150166:CD,150170:CD,150175
150095 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
150099 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
150107 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
150112 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,156653
150116 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
150121 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
150129 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,156631
150141 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,128781
150148 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
150153 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
150156 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
150161 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
150166 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,156653
150170 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
150175 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
150255 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,150276:JM,160771:JM,159261:CD,150284
150276 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,156631
150284 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,150288:CL,156694
150288 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
150346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,150347:CD,150351:CD,150364:CD,150368:CD,150370:JM,150360:JM,150361
150347 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,136892
150351 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,150368:JM,150360:JM,150361
150356 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,150368:JM,150360
150362 :: NORM :: compound :: I :: return v14::DD,150347
150363 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,150370
150360 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,150361
150361 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,150362:CD,150363:CD,150364:CD,150368:CD,150370
150364 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,150368:JM,150360
150370 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,150368:JM,150360:DD,150362:DD,150363
150368 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,150356:CD,150360:CD,150361:CD,150369:JM,150368
150369 :: NORM :: compound :: I :: return #(-1)::DD,150347
150394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,150395:CD,150402:CD,150422:CD,150426:JM,150420
150395 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,137216:JM,137313:JM,137473:JM,137222:JM,137221:JM,137226:JM,137163:JM,137231:JM,137164:JM,137394:JM,137168:JM,137393:JM,137398:JM,137303:JM,137463:JM,137173:JM,137403:JM,137304:JM,137464:JM,137212:JM,137308:JM,137468:JM,142104
150399 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,150426:JM,150411
150402 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,150426:JM,150411
150407 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,150426:JM,150411
150411 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,150420:JM,150412:DD,150421
150412 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,150420:JM,150412
150416 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,150420
150422 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,150426:JM,150411
150420 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,150421:CD,150422:CD,150426:JM,150411
150421 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,150395
150426 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,150407:CD,150411:CD,150412:CD,150416:CD,150420:CD,150439:JM,150426
150439 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,150395
150454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,150455:CD,150462:CD,150478:CD,150482:JM,150476
150455 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,137162:JM,137302:JM,137392:JM,137454:JM,138027
150459 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,150482:JM,150471
150462 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,150482:JM,150471
150467 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,150482:JM,150471
150471 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,150477
150472 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,150476:CL,119618
150478 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,150482:JM,150471
150476 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,150477:CD,150478:CD,150482:JM,150471
150477 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,150455
150482 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,150467:CD,150471:CD,150472:CD,150476:CD,150483:JM,150482
150483 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,150455
150494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,100548:JM,100541:CD,150504:CD,150512:CD,150520:CD,150528:CD,150536:CD,150544:CD,150552:CD,150560
150504 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,119715
150512 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,131699
150520 :: CALL :: call :: V :: v5.setCell(v12)::CL,131732
150528 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,131655
150536 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,131633
150544 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,131644
150552 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,131798
150560 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,131787
150584 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,150592
150589 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
150592 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
150610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,100548:JM,100541:CD,150620:CD,150628:CD,150636:CD,150644:CD,150652:CD,150660
150620 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,119715
150628 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,131699
150636 :: CALL :: call :: V :: v5.setCell(v12)::CL,131732
150644 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,131655
150652 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,131633
150660 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,131644
150680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,100548:JM,100541:CD,150690:CD,150698:CD,150706:CD,150714
150690 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,119715
150698 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,131655
150706 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,131633
150714 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,131644
150730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,150731:CD,150735:CD,150739:CD,150741:CD,150746
150731 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,137759
150735 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,150741:JM,150746:CL,58210:CL,58226:CL,58218
150739 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,150741:JM,150746
150741 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,150741:JM,150746
150746 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,150748:CD,150749:CD,150757:CD,150761:CD,150762:CD,150766:CD,150768:CD,150773
150748 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,150748:JM,150761
150749 :: CALL :: call :: J :: v32 = v29.getId()::JM,150748:CL,156712
150757 :: CALL :: call :: I :: v35 = v30.intValue()::JM,150761
150762 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,150768:JM,150773:CL,58210:CL,58226:CL,58218
150761 :: NORM :: compound :: I :: return v35::DD,150731
150766 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,150768:JM,150773
150768 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,150768:JM,150773
150775 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,150775:JM,150788
150773 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,150775:CD,150776:CD,150784:CD,150788:CD,150790:CD,150791:CD,150799:CD,150803
150776 :: CALL :: call :: J :: v25 = v22.getId()::JM,150775:CL,156712
150784 :: CALL :: call :: I :: v28 = v23.intValue()::JM,150788
150790 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,150790:JM,150803
150791 :: CALL :: call :: J :: v18 = v15.getId()::JM,150790:CL,156712
150788 :: NORM :: compound :: I :: return v28::DD,150731
150799 :: CALL :: call :: I :: v21 = v16.intValue()::JM,150803
150803 :: NORM :: compound :: I :: return v21::DD,150731
150822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,150827:CD,150831:CD,151240:CD,151244:CD,151248:JM,150840
150827 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
150831 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,150840:JM,151244
150836 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,150840:JM,151244
150840 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,150931:JM,150935:JM,150940:JM,151259:JM,150941:JM,150945:JM,150949:JM,150954:JM,150955:JM,151260:JM,150963:JM,150968:JM,150959:JM,150978:JM,150969:JM,150973:JM,151234:JM,151225:JM,151229
150847 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,150852
150852 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,150931:CD,150935:CD,150940:CD,150945:CD,150949:CD,150954:CD,150959:CD,150963:CD,150968:CD,151259:CD,151260
150931 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,150931:JM,150935:JM,150940
150935 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,150935:JM,150940
150940 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,151259:CD,150941
150941 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,151259:JM,150941
150945 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,150945:JM,150949:JM,150954
150949 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,150949:JM,150954
150954 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,151260:CD,150955
150955 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,150955:JM,151260
150959 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,150963:JM,150968:JM,150959
150963 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,150963:JM,150968
150968 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,150969:CD,150973:CD,150978
150969 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,150978:JM,150969:JM,150973
150973 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,150978:JM,150973
150978 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,151012:CD,151016:CD,151037:CD,151041:CD,151062:CD,151106:CD,151150
151012 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,151012:JM,151016
151018 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
151016 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,151018:CD,151023:CD,151028:CD,151033
151023 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
151028 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
151033 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
151037 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,151041:JM,151037
151043 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
151041 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,151043:CD,151048:CD,151053:CD,151058
151048 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
151053 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
151058 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
151062 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,151150:CL,119825
151106 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,151184:CL,119825
151150 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,151184
151184 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,151218:JM,133378:JM,133381:JM,133375:JM,133372:CD,151225:CD,151229:CD,151234
151218 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
151225 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,151234:JM,151225:JM,151229
151229 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,151234:JM,151229
151234 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,151235:JM,150840:JM,151244
151235 :: CALL :: call :: Z :: v146 = v5.add(v112)::
151240 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,150840:JM,151244
151244 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,150836:CD,150840:CD,150847:CD,150852:CD,151240:JM,151244
151248 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,92727
151259 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,151012:JM,151016:JM,150945:JM,150949:JM,150954
151260 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,150963:JM,150968:JM,150959:JM,151041:JM,151037
151467 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,151471
151464 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
151471 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
151474 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
151477 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
151490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,151495
151495 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
151501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,151506
151506 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
151512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,151523
151523 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,151528
151528 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
151538 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
151537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,151538:CD,151542:CD,151549:CD,151653:CD,151657:CD,151658:JM,151568:JM,151563
151542 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,151658
151546 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,151558:JM,151657
151549 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,151558:JM,151657
151554 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,151558:JM,151657
151558 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,151568:JM,151559:JM,151563:JM,151587:JM,151591:JM,151652:JM,151596
151559 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,151568:JM,151559:JM,151563
151563 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,151568:JM,151563
151568 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,151576:CD,151583:CD,151587:CD,151591:CD,151596:CD,151600:CD,151648:CD,151652:JM,151558:JM,151657
151576 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,156744
151583 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,151647:CL,156792
151587 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,151587:JM,151591:JM,151652:JM,151596
151591 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,151591:JM,151652:JM,151596
151596 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,151652:JM,151596
151600 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,151652
151605 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,151652
151610 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,151647
151615 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,151647
151620 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,156801
151625 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
151630 :: CALL :: call :: V :: v49.setChainId(v39)::CL,131437
151634 :: CALL :: call :: V :: v49.setId(v46)::CL,131426
151638 :: CALL :: call :: Z :: v54 = v4.add(v49)::
151643 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,151647
151647 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,151615:CD,151620:CD,151625:JM,156883:JM,156901:JM,156894:CD,151630:CD,151634:CD,151638:CD,151643:JM,151647:JM,151652
151648 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,151652
151652 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,151605:CD,151610:CD,151643:CD,151647:CD,151648:JM,151652:JM,151558:JM,151657
151653 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,151558:JM,151657
151658 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,151538
151657 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,151554:CD,151558:CD,151559:CD,151563:CD,151568:CD,151653:JM,151657:CF,151658
151703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,151704:CD,151708:CD,151715:CD,151722:CD,151839:CD,151843:CD,151844:JM,151736:JM,151741
151704 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
151708 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,151844
151715 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,151833:CL,156917
151719 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,151731:JM,151843
151722 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,151731:JM,151843
151727 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,151731:JM,151843
151731 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,151732:JM,151736:JM,151741:JM,151746:JM,151751:JM,151742:JM,151838
151732 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,151732:JM,151736:JM,151741
151736 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,151736:JM,151741
151742 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,151746:JM,151751:JM,151742:JM,151838
151741 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,151742:CD,151746:CD,151751:CD,151762:CD,151766:CD,151834:CD,151838:JM,151731:JM,151843
151746 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,151746:JM,151751:JM,151838
151751 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,151751:JM,151838
151762 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,156744
151766 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,151838
151771 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,151838
151776 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,151833
151781 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,151833
151791 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,156801
151801 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,156801
151806 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,156944
151811 :: CALL :: call :: V :: v59.setChainId(v39)::CL,131437
151815 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
151819 :: CALL :: call :: V :: v59.setId(v62)::CL,131426
151823 :: CALL :: call :: Z :: v65 = v4.add(v59)::
151828 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,151845
151829 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,151833
151834 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,151838
151833 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,151781:CD,151791:CD,151801:CD,151806:CD,151811:CD,151815:CD,151819:CD,151823:CD,151828:CD,151829:CD,151845:JM,151833:JM,151838
151838 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,151771:CD,151776:CD,151829:CD,151833:CD,151834:CD,151845:JM,151838:JM,151731:JM,151843
151839 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,151731:JM,151843
151843 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,151727:CD,151731:CD,151732:CD,151736:CD,151741:CD,151839:JM,151843:CF,151844
151844 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,151704
151845 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,151833:DD,151828
151910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,151911:CD,151917
151911 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,139204
151914 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,151917
151919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,151924
151917 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,151911
151924 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,156983
152013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,152018
152018 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
152334 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,139999:JM,140025:JM,140115:JM,152731
152333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,152334:CD,152341:CD,152345:JM,152384:JM,152404:JM,152379:JM,152441:JM,152399
152341 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,152355:JM,152371:JM,152378:JM,152363:JM,152345:CL,115168
152346 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,115401
152345 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,152346:CD,152350:CD,152354:CD,152379:CD,152384:CD,152463:CD,152464:JM,152404:JM,152441:JM,152399
152350 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,152354:CL,115461
152354 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,152355:CD,152356:CD,152378:CD,152379:CD,152384:CD,152463:CD,152464:JM,152404:JM,152441:JM,152399
152355 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,152356
152358 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,157091
152356 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,152358:CD,152363:CD,152364
152363 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,152364
152366 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,157091
152364 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,152366:CD,152371:CD,152372
152371 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,152372
152374 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,157091
152372 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,152374:CF,152378
152378 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,152334
152379 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,152384:JM,152404:JM,152379:JM,152441:JM,152399
152384 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,152385:CD,152389:CD,152427:CD,152431
152385 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,152389:CL,79020
152390 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,152464
152389 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,152390:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,152394:CD,152399:CD,152464
152394 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,157091
152399 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,152405:CD,152400:CD,152404:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,152409:CD,152464:JM,152384:JM,152379:JM,152441
152400 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,152384:JM,152404:JM,152379:JM,152441
152404 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,152414:CF,152405:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,152409:CD,152418:CD,152422:CD,152464
152405 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,152464
152409 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,157091
152414 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,152464
152418 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,94618
152422 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,157091
152427 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,152431:CL,79020
152431 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,152432:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,152436:CD,152441:CD,152464
152432 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,152464
152436 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,157091
152442 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,152464
152441 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,152455:CF,152442:JM,94100:JM,94107:JM,94123:JM,94125:JM,94127:CD,152446:CD,152450:CD,152459:CD,152464
152446 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,94618
152450 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,157091
152455 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,152464
152459 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,157091
152463 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,152334
152464 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,152463
152543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,152544:CD,152555:CD,152559:CD,152563:JM,152579:JM,152629:JM,152648:JM,152653
152544 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,140310
152555 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,152563:CL,115540
152559 :: CALL :: call :: I :: v12 = v10.size()::JM,152563
152563 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,152564:CD,152570:CD,152574:CD,152579:CD,152587:CD,152591:CD,152636:CD,152640:JM,152563
152564 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,152563
152570 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,152579:CL,108473
152574 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,152579:JM,152629
152579 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,152583:CD,152587:CD,152591:CD,152636:CD,152640
152583 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,152544
152580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,152583
152587 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,152640:JM,152600:CL,94640
152591 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,152640:JM,152600
152596 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,152640:JM,152600
152600 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,152630
152601 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,152609:JM,152635:CL,115540
152605 :: CALL :: call :: I :: v34 = v32.size()::JM,152609:JM,152635
152610 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,152609:JM,152635
152609 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,152610:CD,152631:CD,152635:CD,152636:CD,152640:JM,152609:JM,152600
152615 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,152635
152620 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,152629:CL,108473
152624 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,152629:JM,152579
152630 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,152544
152631 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,152635
152629 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,152630:CD,152631:CD,152635
152635 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,152615:CD,152620:CD,152624:CD,152629:CD,152636:CD,152640:JM,152635:JM,152600
152636 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,152640:JM,152600
152640 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,152596:CD,152600:CD,152601:CD,152605:CD,152609:CD,152644:CD,152648:CD,152653:JM,152640
152644 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,152648:JM,152653:CL,58663
152648 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,152648:JM,152653
152653 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,152657:CD,152661:CD,152665:CD,152701:CD,152709:CD,152720:CD,152727:CD,152731
152657 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,152665:CL,115540
152661 :: CALL :: call :: I :: v65 = v63.size()::JM,152665
152666 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,152669
152665 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,152669:CD,152673:CD,152677:CD,152678:CD,152682:CD,152686:CD,152690:CD,152696:CD,152700
152669 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,152544
152673 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,152677:CL,79373:CL,79198:CL,79056
152678 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
152677 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,152700:CF,152678
152682 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,115549
152686 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,94640
152690 :: CALL :: call :: V :: v74.clear()::
152696 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,94536
152700 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,152544
152701 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,152731:CL,152333
152709 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,94598:CL,94194
152720 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,94183
152727 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,94536
152731 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,152544
152792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,79989:JM,79994:CD,152801:CD,152805:CD,152809:CD,152817:CD,152845:CD,152849:CD,152853:CD,152865:CD,152877:CD,152881:CD,152885:CD,152927:CD,152950:JM,152896:JM,152886:JM,152890:JM,152891
152801 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,152896:JM,152801:JM,152881:JM,152886:JM,152885:JM,152890:JM,152891
152805 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,152896:JM,152886:JM,152885:JM,152890:JM,152891
152809 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,98181
152817 :: CALL :: call :: V :: v4.setName(v12)::CL,98216
152845 :: CALL :: call :: V :: v4.setX(v17)::CL,80036
152849 :: CALL :: call :: V :: v4.setY(v21)::CL,80052
152853 :: CALL :: call :: V :: v4.setZ(v25)::CL,80068
152865 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,98227
152877 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,98238
152881 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,152896:JM,152801:JM,152881:JM,152886:JM,152885:JM,152890:JM,152891
152886 :: CALL :: call :: I :: v43 = v40.length()::JM,152896:JM,152886:JM,152890:JM,152891
152885 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,152886:CD,152890:CD,152917:JM,152896:JM,152891
152890 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,152891:CD,152896:CD,152917:JM,152886:JM,152890
152891 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,152896:JM,152886:JM,152890:JM,152891
152896 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,152907:CD,152917
152907 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,98192
152917 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,98192
152927 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,98249
152950 :: CALL :: call :: V :: v4.setElement(v72)::CL,98293
153006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,153007:CD,153013
153007 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,140716:JM,140732
153010 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,153013
153015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,153020
153013 :: NORM :: compound :: Ljava/util/List :: return v3::CF,153007
153020 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
153035 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,153036:CD,153043:CD,153064:CD,153068:JM,153057:JM,153062
153036 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,141506
153043 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,153052:JM,153068
153040 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,153052:JM,153068
153048 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,153052:JM,153068
153052 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,153057:JM,153062:JM,153053:DD,153063
153053 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,153057:JM,153062:JM,153053
153057 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,153057:JM,153062
153062 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,153063:CD,153064:CD,153068:JM,153052
153063 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,153036
153064 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,153052:JM,153068
153068 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,153048:CD,153052:CD,153053:CD,153057:CD,153062:CD,153069:JM,153068
153069 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,153036
153081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,153085:CD,153089:CD,153093
153085 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
153089 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,157102
153093 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
153103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,153104:CD,153110
153107 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,153110
153104 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,142755:JM,142768
153110 :: NORM :: compound :: F :: return v3::CF,153104
153112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,153124:CD,153130:CD,153134:CD,153154:CD,153158:JM,153159:JM,153140:JM,153135:JM,153164
153124 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
153130 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,153154:JM,153158:JM,153159:JM,153140:JM,153130:JM,153134:JM,153135:JM,153164
153134 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,153135:CD,153140:JM,153158:JM,153159:JM,153164:JM,153154:JM,153130:JM,153134
153135 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,153158:JM,153159:JM,153140:JM,153135:JM,153164
153140 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,153148:JM,153154:JM,153158:JM,153159:JM,153140:JM,153130:JM,153134:JM,153135:JM,153164
153148 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
153154 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,153154:JM,153158:JM,153159:JM,153140:JM,153130:JM,153134:JM,153135:JM,153164
153158 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,153159:CD,153164:JM,153140:JM,153135
153159 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,153159:JM,153140:JM,153135:JM,153164
153164 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,153172
153172 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
153422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,153423:CD,153429:CD,153433
153423 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,143754
153429 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,153433:CL,157455
153435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,153436:CD,153442
153433 :: NORM :: compound :: Z :: return v5::CF,153423
153439 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,153442
153436 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,143779:JM,143784
153442 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,153436
153444 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,153445:CD,153448:CD,153452:CD,153454
153445 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,144419:JM,144421
153448 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,153454:CL,157464
153454 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,153455:CD,153456
153455 :: NORM :: compound :: Z :: return #(1)::DD,153445
153452 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,153454
153456 :: NORM :: compound :: Z :: return #(0)::DD,153445
153462 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,145276
153461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,153462:CD,153464:CD,153466:CD,153467:CD,153475
153466 :: EXPR :: assign :: I :: v4 = v2.length::DD,153467
153467 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,153475
153464 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,153466
153475 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,153462
154468 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,158346
154472 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154476
154479 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,154482
154476 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
154482 :: CALL :: call :: V :: v8.set(#(0))::JM,154482
154486 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154490
154490 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
154493 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,154496
154496 :: CALL :: call :: V :: v13.set(#(0))::JM,154496
154500 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154504
154507 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,154510
154504 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
154510 :: CALL :: call :: V :: v17.set(#(0))::JM,154510
154514 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154518
154518 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
154521 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,154524
154524 :: CALL :: call :: V :: v21.set(#(0))::JM,154524
154531 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154536
154528 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopVersion = #(1.75)::
154539 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154543
154536 :: EXPR :: modify :: Ljava/util/List :: p0 $this .mirrors = v24::
154543 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v27::
154546 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154550
154550 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .sunidMap = v29::
154553 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,129857:JM,129856:JM,129888:JM,129893:JM,129892:JM,129924:JM,129865:JM,129901:JM,129870:JM,129875:JM,129874:JM,129906:JM,129911:JM,129910:JM,129883:JM,129919:DD,154557
154557 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scopTree = v31::
154899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,154900:CD,154904:CD,154914:CD,154924:CD,154943:CD,154948:CD,154953:CD,154961:CD,154962:CD,154966
154900 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,147537:JM,147542:JM,147703:JM,147524:JM,147530:JM,147704:JM,147513:JM,147529:JM,147516:JM,147586:JM,147520:JM,147574:JM,147514:JM,147705:JM,147581
154904 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,154966
154914 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,154966
154924 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,154966
154943 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
154948 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
154953 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
154962 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,154900
154961 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,154900
154966 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,154962
154974 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,147700
154973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,154974:CD,154982:CD,154986:CD,154989:CD,155388:CD,155396:CD,155398:CD,155399:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155057:JM,155025:JM,155030:JM,155032:JM,155001:JM,155007:JM,155037
154982 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
154986 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,155024:JM,155025:JM,155030:JM,155019:JM,154989
154989 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,155024:JM,155025:JM,155030:JM,155019:JM,154989
154995 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155001 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155007 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155012 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155013 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155018 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,155024:JM,155025:JM,155030:JM,155012:JM,155018:JM,155019:JM,155032:JM,155001:JM,155037
155019 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,155024:JM,155025:JM,155030:JM,155012:JM,155018:JM,155019:JM,155032:JM,155001:JM,155037
155024 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,155397:CD,155025:CD,155030:JM,155024:JM,155012:JM,155018:JM,155019:JM,155032:JM,155037
155025 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,155024:JM,155025:JM,155030:JM,155012:JM,155018:JM,155019:JM,155032:JM,155037
155030 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,155032:CD,155037:CD,155397:JM,155024:JM,155025:JM,155030:JM,155012:JM,155018:JM,155019:JM,155001
155032 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,155024:JM,155025:JM,155030:JM,155012:JM,155018:JM,155019:JM,155032:JM,155001:JM,155037
155038 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
155037 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,155397:CD,155038:CD,155042:CD,155047:CD,155048:CD,155052:CD,155057:CD,155058:CD,155062:CD,155067:CD,155068:CD,155072:CD,155077:CD,155078
155042 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,155047
155047 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,155057
155048 :: CALL :: call :: I :: v40 = v38.intValue()::JM,155057
155052 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155057:JM,155025:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155058 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
155057 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,155078
155062 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,155067
155067 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,155077
155068 :: CALL :: call :: I :: v50 = v48.intValue()::JM,155077
155072 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155057:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155078 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,155079:CD,155082:CD,155087:CD,155092:CD,155097:CD,155102:CD,155107:CD,155112:CD,155117:CD,155122:CD,155127:CD,155132:CD,155137:CD,155142:CD,155397
155079 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,155082:CD,155087:CD,155092:CD,155097:CD,155102:CD,155107:CD,155112:CD,155117:CD,155122:CD,155127:CD,155132:CD,155137:CD,155142:CD,155151:CD,155155:CD,155159:CD,155217:CD,155222:CD,155367:CD,155371:CD,155376:CD,155377:CD,155381:CD,155397
155077 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,155079:JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155057:JM,155025:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037:CF,155078
155082 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
155087 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
155092 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
155097 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
155102 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
155107 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
155112 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
155117 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
155122 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
155127 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
155132 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
155137 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
155142 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
155151 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,155222:JM,155159:JM,155236:CL,58663
155155 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,155222:JM,155236:JM,155160:CL,58663
155159 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,155160:CD,155163:CD,155168:CD,155173:CD,155178:CD,155183:CD,155188:CD,155193:CD,155198:CD,155203
155163 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
155160 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,155163:CD,155168:CD,155173:CD,155178:CD,155183:CD,155188:CD,155193:CD,155198:CD,155203:JM,155222:JM,155236
155168 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
155173 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
155178 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
155183 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
155188 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
155193 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
155198 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
155203 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
155217 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,155222:JM,155236
155222 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,155223:CD,155227:CD,155231:CD,155236:JM,155222
155223 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,155222:JM,155236
155227 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,155222:JM,155236
155231 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,155236
155239 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
155236 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,155239:CD,155243:CD,155248:CD,155253:CD,155258:CD,155263:CD,155268:CD,155273:CD,155278:CD,155283:CD,155288:CD,155293:CD,155298:CD,155306:CD,155310:CD,155312:CD,155317
155243 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
155248 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
155253 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
155258 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
155263 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
155268 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
155273 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
155278 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
155283 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
155288 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
155293 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
155298 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
155306 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,155312:JM,155317:CL,58210:CL,58226:CL,58218
155310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,155312:JM,155317
155312 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,155312:JM,155317
155318 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,155329:JM,155324:CL,58210:CL,58226:CL,58218
155317 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,155318:CD,155322:CD,155324:CD,155329:CD,155339:CD,155344:CD,155349:CD,155354:CD,155359
155322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,155329:JM,155324
155324 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,155329:JM,155324
155329 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,155339:CD,155344:CD,155349:CD,155354:CD,155359
155339 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
155344 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
155349 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
155354 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
155359 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
155367 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
155371 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,155376
155376 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
155377 :: CALL :: call :: I :: v188 = v186.intValue()::
155381 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,154982:JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155057:JM,155025:JM,155030:JM,155032:JM,155001:JM,155007:JM,155388:JM,155037
155387 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,155399:CF,155398
155388 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,154995:CD,155001:CD,155007:CD,155012:CD,155013:CD,155018:CD,155019:CD,155024:CD,155387:CD,155397:CD,155398:CD,155399:JM,154982:JM,155077:JM,155025:JM,155057:JM,155030:JM,155032:JM,155388:JM,155037
155398 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,155399:DD,155396:DD,155397
155399 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,155012:JM,155013:JM,155077:JM,155018:JM,155019:JM,154995:JM,155024:JM,155025:JM,155030:JM,155032:JM,155001:JM,155007:JM,155037:JM,155057:DD,155387:DD,155388
155396 :: NORM :: compound :: Z :: return v193::DD,154974
155397 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,155398:CF,155387
155520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,155526:CD,155527:CD,155535:CD,155539
155526 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,155526
155527 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,155526:CL,119618
155535 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,119618
155539 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
155552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,155558:CD,155559:CD,155567:CD,155571
155558 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,155558
155559 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,155558:CL,119618
155567 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,119618
155571 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
155584 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,155589
155589 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
155595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,155596:CD,155608:CD,155617
155596 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,148450:JM,148455
155608 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
155614 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,155617
155618 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,155621
155617 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,155621:CD,155625
155622 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,155625
155621 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,155596
155625 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,155596
155634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,155642:CD,155654
155639 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,155642
155642 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,155643
155643 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,155648
155651 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
155648 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
155654 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
155668 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,155685:CD,155687:CD,155691:CD,155698:CD,155703:CD,155707:CD,155712:CD,155762:CD,155764:CD,155784:CD,155786:CD,155828
155687 :: CALL :: call :: Z :: v12 = v10.get()::JM,155691
155685 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,155691
155691 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,155727:CD,155729:CD,155733:CD,155748:CD,155769:CD,155791:CD,155796:CD,155801:CD,155802:CD,155803:CD,155808:CD,155813:CD,155821:CD,155823
155698 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
155703 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
155707 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
155712 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
155727 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,155729
155729 :: CALL :: call :: V :: v13.set(#(1))::JM,155729
155733 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,155801
155748 :: CALL :: call :: V :: downloadFile()::CL,158757
155762 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
155764 :: CALL :: call :: V :: v31.set(#(0))::
155769 :: CALL :: call :: V :: p0 $this .split()::CL,155941
155786 :: CALL :: call :: V :: v40.set(#(0))::
155784 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
155791 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,155801
155796 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
155802 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
155803 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
155801 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,155802
155808 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
155813 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
155823 :: CALL :: call :: V :: v59.set(#(0))::JM,155823
155821 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,155823
155828 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
155941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,155951:CD,155952:CD,155959:CD,155969:CD,155970:CD,155984:CD,155988:CD,156035:CD,156036:CD,156040:CD,156045:CD,156046:CD,156052:CD,156066:CD,156071:CD,156076:CD,156081:CD,156096:CD,156097:CD,156098:CD,156099
155951 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
155952 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
155959 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
155970 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
155969 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,156097:DD,156046:CF,155970
155984 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,156097
155988 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,156098
155993 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,155998
155998 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,156093:CD,155999:CD,156010:CD,156015:CD,156092:CD,156094:CD,156095
155999 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,156092:CD,156000:CD,156004:CD,156009
156000 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
156004 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,158861
156010 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,156095
156009 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,156092
156015 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,156094
156019 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
156026 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
156024 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
156031 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,156097
156035 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,155993:CD,155998:CD,156019:CD,156024:CD,156026:CD,156031:CD,156093:CD,156094:CD,156095:CD,156096:CD,156097:CD,156098:CD,156099
156036 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
156040 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,158861
156046 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,156047
156047 :: CALL :: call :: V :: v17.close()::
156045 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,156046
156052 :: CALL :: call :: V :: v17.close()::
156066 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
156071 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
156076 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
156081 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
156094 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,156095:DD,156098
156095 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,156099
156092 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,156093:JM,156095
156093 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,156094:DD,156096
156098 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,156099:DD,156094
156099 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,155999:DD,156095:CF,156035
156096 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,156097:DD,156009:DD,156045:DD,156092:DD,156093
156097 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,156098:JM,155998:JM,156095:DD,156035
156169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,156173
156173 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,95258
156231 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,156235
156235 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
156238 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,156242
156242 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
156245 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,156249
156249 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
156299 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,156323
156296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,156297:CD,156299:JM,159104:JM,159111:JM,159118:CD,156303:CD,156307:CD,156313:CD,156319:CD,156323
156297 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,149207:JM,149288
156303 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,159133
156307 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,159148
156313 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,159159
156319 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,159170
156323 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,156297
156335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,156340
156340 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
156390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,156391:CD,156395:CD,156399:CD,156416:CD,156420:CD,156432:CD,156436:CD,156448:CD,156452:CD,156464:CD,156468:CD,156480:CD,156484:CD,156496:CD,156500:CD,156512:CD,156516:CD,156528:CD,156532:CD,156544:CD,156548:CD,156560:CD,156588
156391 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
156395 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,156588
156399 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
156412 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
156416 :: CALL :: call :: I :: v15 = parseInt(v13)::
156420 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
156428 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
156432 :: CALL :: call :: I :: v22 = parseInt(v20)::
156436 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
156444 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
156448 :: CALL :: call :: I :: v29 = parseInt(v27)::
156452 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
156460 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
156464 :: CALL :: call :: I :: v36 = parseInt(v34)::
156468 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
156476 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
156480 :: CALL :: call :: I :: v43 = parseInt(v41)::
156484 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
156492 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
156496 :: CALL :: call :: I :: v50 = parseInt(v48)::
156500 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
156508 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
156512 :: CALL :: call :: I :: v57 = parseInt(v55)::
156516 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
156524 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
156528 :: CALL :: call :: I :: v64 = parseInt(v62)::
156532 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
156540 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
156544 :: CALL :: call :: I :: v71 = parseInt(v69)::
156548 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
156556 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
156560 :: CALL :: call :: I :: v78 = parseInt(v76)::
156588 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,156391
156631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,156640
156640 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,156653
156654 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
156653 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,156654:CD,156665:CD,156670
156665 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,156670
156670 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,156654
156694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,156695:CD,156701
156695 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,150288
156698 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,156701
156701 :: NORM :: compound :: Ljava/util/List :: return v3::CF,156695
156712 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,156713:CD,156719
156713 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,150748:JM,150775:JM,150790
156719 :: NORM :: compound :: J :: return v3::CF,156713
156716 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,156719
156744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,156759:CD,156763
156759 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,156763:CL,159274
156763 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,156764:CD,156772
156764 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,159313
156772 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,159323
156792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,156793:CD,156799
156793 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,151647
156799 :: NORM :: compound :: Ljava/util/List :: return v3::CF,156793
156796 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,156799
156801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,156809:CD,156830:CD,156834:JM,156828
156806 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,156834
156809 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,156834
156814 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,156834
156819 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,156828:CL,159421
156823 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,156828
156830 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,156834
156828 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,156830:CD,156834
156834 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,156814:CD,156819:CD,156823:CD,156828:CD,156837:CD,156842:CD,156847:JM,131299:JM,156834
156837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
156842 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,156828
156847 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
156883 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,156891
156891 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
156894 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,156898:CL,159421
156898 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
156901 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,156905:CL,159430
156905 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
156918 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,151833
156917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,156918:CD,156924
156921 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,156924
156924 :: NORM :: compound :: Ljava/util/List :: return v3::CF,156918
156944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,156945:CD,156964:JM,131299:CD,156968:CD,156972
156945 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
156964 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,156972
156968 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,159439
156972 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,156945
156983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,156990
156987 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,156990
156990 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,156995:CD,156999
156995 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,159450
156999 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,157003
157003 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
157091 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,157096
157096 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
157102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,157107:CD,157108:CD,157112:CD,157137:CD,157148:CD,157159:CD,157170:CD,157202:CD,157213:CD,157224:CD,157235:CD,157243:CD,157249:CD,157253:CD,157258
157107 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,157108
157108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
157112 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
157134 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
157137 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
157145 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
157148 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
157159 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
157156 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
157167 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
157170 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
157199 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
157202 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
157210 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
157213 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
157221 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
157224 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
157235 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
157232 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
157243 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
157249 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
157253 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
157258 :: CALL :: call :: V :: v4.close()::
157455 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,157456:CD,157462
157459 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,157462
157456 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,153433
157462 :: NORM :: compound :: Z :: return v3::CF,157456
157464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,157465:CD,157470:CD,157475:CD,157481:CD,157486:CD,157492:CD,157497:CD,157501:CD,157517:CD,157521:CD,157522:CD,157523:CD,157524:CD,157525:CD,157526:CD,157527:CD,157528:CD,157529:CD,157646
157465 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,153454
157470 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,157618:JM,157523:JM,157525:JM,157557:JM,157549:CL,60101
157475 :: CALL :: call :: I :: v7 = v5.size()::JM,157618:JM,157523:JM,157525:JM,157557:JM,157549
157481 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,157523:JM,157550:JM,157533:JM,157549:JM,157629:CL,60101
157486 :: CALL :: call :: I :: v12 = v10.size()::JM,157523:JM,157550:JM,157533:JM,157549:JM,157629
157492 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,157522:JM,157521:CL,60101
157497 :: CALL :: call :: I :: v17 = v15.size()::JM,157522:JM,157521
157501 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,157522:JM,157521
157506 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,157521
157511 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,157515:CL,147366
157515 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,157646:CD,157516
157516 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,157646
157517 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,157521
157522 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,157524:DD,157541:DD,157550:DD,157557:CF,157523
157523 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,157524
157521 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,157506:CD,157511:CD,157515:CD,157517:CD,157646:JM,157521:CF,157522
157526 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,157527
157527 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,157528
157524 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,157526:DD,157534:DD,157542:DD,157619:DD,157630:CF,157525
157525 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,157527:CF,157526
157530 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,157532
157528 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,157529
157529 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,157530:CD,157532:CD,157533:CD,157534:CD,157535:CD,157536:CD,157537
157534 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,157535
157535 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,157536
157532 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,157465
157533 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,157535:CF,157534
157538 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,157540
157536 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,157537
157537 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,157538:CD,157540:CD,157541:CD,157542:CD,157543:CD,157544:CD,157545
157542 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,157543
157543 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,157544
157540 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,157465
157541 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,157543:CF,157542
157546 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,157548
157544 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,157545
157545 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,157546:CD,157548:CD,157549:CD,157574:CD,157586:CD,157594:CD,157602:CD,157610:CD,157618:CD,157619:CD,157620:CD,157621:CD,157629:CD,157630:CD,157631:CD,157632:CD,157645:CD,157647
157550 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,157551:CD,157554:CD,157647
157551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,157647
157548 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,157465
157549 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,157550:CD,157557
157554 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,157647
157558 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,157647
157557 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,157558:CD,157561:CD,157647
157561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,157647
157574 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,157574
157586 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,157618
157594 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,157629
157602 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
157610 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
157618 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,157620:CF,157619
157619 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,157620
157620 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,157621
157621 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,157621
157630 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,157631
157631 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,157632
157629 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,157631:CF,157630
157632 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,157632
157646 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,157521:DD,157516:DD,157522:DD,157646
157647 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,157645
157645 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,157465
157734 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
157733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,157734:CD,157741:CD,157747
157741 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,157747:CL,159647
157747 :: NORM :: compound :: I :: return v8::CF,157734
157751 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,157752:CD,157759:CD,157765
157752 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
157759 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,157765:CL,159702
157765 :: NORM :: compound :: I :: return v8::CF,157752
157770 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
157769 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,157770:CD,157777:CD,157783
157777 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,157783:CL,159716
157783 :: NORM :: compound :: I :: return v8::CF,157770
158346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,158351:CD,158353:CD,158358:CD,158383
158351 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,158358:JM,158383
158353 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,158358:JM,158383
158358 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,158383:CF,158359:CD,158360:CD,158368:CD,158370:CD,158375
158359 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,158383
158360 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
158370 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,158383
158368 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,158383
158375 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,158383
158379 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
158383 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,158379
158757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,158760:CD,158762:CD,158764:CD,158767:CD,158770:CD,158778:CD,158783:CD,158788:CD,158797:CD,158802
158762 :: CALL :: call :: V :: initServerName()::CL,160505
158760 :: CALL :: call :: V :: initPath()::CL,160482
158767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
158764 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,160520
158770 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
158778 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
158783 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
158788 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
158797 :: NORM :: declaration :: Ljava/io/File :: v21 = new java.io.File::
158802 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,160578
158847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,158848:CD,158853:CD,158858
158848 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
158853 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,158853:JM,158858
158858 :: NORM :: compound :: Z :: return v7::CF,158848
158861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,158867:CD,158871:CD,158890:CD,158894:CD,158897:CD,158903
158867 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,148928
158871 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,158897
158890 :: CALL :: call :: V :: v8.print(v15)::
158894 :: CALL :: call :: V :: v8.flush()::
158898 :: CALL :: call :: V :: v8.close()::
158897 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,158898
158903 :: CALL :: call :: V :: v8.close()::
159104 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,159108
159111 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,159115
159108 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
159115 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
159118 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,159122
159122 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
159133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,159141:JM,159138
159138 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
159141 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,160746
159148 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,159153
159153 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
159159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,159164
159164 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
159170 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,159175
159175 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
159261 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,160771:JM,159261
159274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,159291:JM,159289:JM,159292:CF,159275:CD,159278:CD,159283:CD,159288
159275 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,156763
159278 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,159283:JM,159291:JM,159288:JM,159289:JM,159278:JM,159292
159283 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,159283:JM,159291:JM,159288:JM,159289:JM,159278:JM,159292
159290 :: NORM :: compound :: Z :: return #(1)::CF,159275
159291 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,159292:CD,159295
159288 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,159289:CD,159290
159289 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,159290:CD,159291:CD,159294:CD,159295
159294 :: NORM :: compound :: Z :: return v10::CF,159275
159295 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,159294
159292 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,159295
159313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,159317
159317 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,160781
159323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,159333:CD,159334:CD,159339:CD,159344:CD,159355:CD,159356:CD,159361:CD,159366:CD,159379:CD,159387:CD,159397
159334 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
159333 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
159339 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
159344 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
159355 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
159356 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
159361 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
159366 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
159379 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,160781
159387 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,160781
159397 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,160935
159422 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,156828:JM,156898
159421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,159422:CD,159428
159425 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,159428
159430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,159431:CD,159437
159431 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,156905
159428 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,159422
159434 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,159437
159439 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,159444
159437 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,159431
159444 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
159450 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,159457
159454 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,159457
159457 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,159462:CD,159472
159462 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,159466
159466 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
159472 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,161029
159647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,159648:CD,159653:CD,159657:CD,159661:CD,159666:JM,159682:JM,159670:JM,159691
159648 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,157747
159653 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,159682:JM,159666:JM,159670:JM,159653:JM,159691:JM,159657:JM,159661
159657 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,159682:JM,159666:JM,159670:JM,159653:JM,159691:JM,159657:JM,159661
159661 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,159666:JM,159691:JM,159661
159666 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,159670:CD,159674:CD,159682:CD,159686:CD,159691:CD,159692:CD,159693
159667 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,159691
159670 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,159682:JM,159666:JM,159670:JM,159653:JM,159691:JM,159657:JM,159661
159674 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,159691:JM,159666:JM,159661
159679 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,159691
159682 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,159682:JM,159666:JM,159670:JM,159653:JM,159691:JM,159657:JM,159661
159686 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,159691:JM,159666:JM,159661
159691 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,159692
159692 :: NORM :: compound :: I :: return v22::CF,159648
159693 :: NORM :: compound :: I :: return #(0)::CF,159648
159702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,159703:CD,159708:CD,159713
159703 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,157765
159708 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,159713
159713 :: NORM :: compound :: I :: return v6::CF,159703
159716 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,159717:CD,159722:CD,159727
159717 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,157783
159722 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,159727
159727 :: NORM :: compound :: I :: return v6::CF,159717
160482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,160485:CD,160487
160487 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,46674:JM,46681
160485 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,160487
160505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,160508:CD,160510
160510 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,160511
160511 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,56989
160508 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,160510
160523 :: NORM :: declaration :: Ljava/io/File :: v2 = new java.io.File::
160520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CE,160521:CD,160523:CD,160524:CD,160531:CD,160535:CD,160551:CD,160557:CD,160561
160521 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::
160524 :: EXPR :: reference :: Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::
160531 :: CALL :: call :: Z :: v7 = v2.exists()::JM,160535
160535 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CF,160551:CD,160547
160547 :: CALL :: call :: Z :: v15 = v2.mkdir()::
160551 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::JM,160561
160557 :: CALL :: call :: Ljava/lang/String :: v20 = v16.toString()::JM,160561
160561 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,160521
160578 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,160585:CD,160590:CD,160595:CD,160600:CD,160605
160585 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
160590 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
160595 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
160600 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
160605 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
160746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,160750
160750 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,160754:CL,163561
160754 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
160771 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,163651
160781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,160785:CD,160791:CD,160797:CD,160802:CD,160807:CD,160808:CD,160813:CD,160818:CD,160827:CD,160831:CD,160862:CD,160866:JM,160840
160785 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,160802:JM,160866:JM,160785:JM,160791:JM,160840:JM,160797
160791 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,160802:JM,160866:JM,160791:JM,160840:JM,160797
160797 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,160802:JM,160866:JM,160840:JM,160797
160802 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,160802:JM,160866:JM,160840
160807 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
160808 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
160813 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,160802:JM,160866:JM,160785:JM,160791:JM,160840:JM,160797
160818 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,160802:JM,160866:JM,160791:JM,160840:JM,160797
160827 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
160831 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,160866:JM,160840
160836 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,160866:JM,160840
160840 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,160846
160841 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,160846
160846 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,160847:CD,160851:CD,160857
160847 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,164540
160851 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
160857 :: CALL :: call :: Z :: v44 = v26.add(v35)::
160862 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,160866:JM,160840
160866 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,160836:CD,160840:CD,160841:CD,160846:CD,160862:JM,160866
160935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,160939:CD,160943:CD,160950:CD,160954:CD,160962:CD,161001:CD,161005
160939 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
160943 :: CALL :: call :: I :: v6 = v4.size()::JM,160954
160940 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,160954
160947 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,160954
160950 :: CALL :: call :: I :: v9 = v7.size()::JM,160954
160954 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
160959 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,161005
160962 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,161005
160967 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,161005
160975 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,161000
160972 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,161000
160980 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,161000
160985 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
160991 :: CALL :: call :: Z :: v32 = v3.add(v29)::
160996 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,161000
161000 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,160980:CD,160985:JM,164645:JM,164648:CD,160991:CD,160996:JM,161000:JM,161005
161001 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,161005
161005 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,160967:CD,160975:CD,160996:CD,161000:CD,161001:JM,161005
161029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,161036
161033 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,161036
161036 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,161041:CD,161095
161041 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,161112
161095 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,164706
161112 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
163562 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,160754
163561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,163562:CD,163565:CD,163569:CD,163573:CD,163577
163565 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,163578:JM,163577:JM,163583:CL,130861
163569 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,163584:JM,163590:CL,130852
163573 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,163605:JM,163593:JM,163596:JM,163613:CL,130843
163578 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,163578:JM,163583
163577 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,163578:CD,163583:CD,163584
163583 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,163584:CD,163620
163584 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,163585:CD,163590:CD,163620
163585 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,163590
163590 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,163591:CD,163593:CD,163620
163591 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,163593
163594 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,163596
163593 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,163594:CD,163596:CD,163597:CD,163602
163596 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,163597:CD,163602:CD,163603:CD,163605
163597 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,163602:CL,165076
163602 :: NORM :: compound :: Z :: return v25::DD,163562
163603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,163605
163606 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,163610:CL,165115
163605 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,163606:CD,163610:CD,163611:CD,163613
163610 :: NORM :: compound :: Z :: return v23::DD,163562
163611 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,163613
163614 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,163618:CL,165134
163613 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,163614:CD,163618:CD,163619
163618 :: NORM :: compound :: Z :: return v21::DD,163562
163619 :: NORM :: compound :: Z :: return #(0)::DD,163562
163620 :: NORM :: compound :: Z :: return #(0)::DD,163562
163651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,163656:CD,163661:CD,163665:CD,163669:CD,164091:CD,164096:CD,164101:CD,164145:CD,164196:CD,164200:CD,164224:CD,164225:CD,164226:CD,164227:CD,164232:CD,164233:CD,164234:CD,164235:CD,164236
163656 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
163661 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
163665 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
163669 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,164235:JM,164200
163674 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,163683
163679 :: CALL :: call :: Z :: v22 = v20.matches()::JM,163683
163683 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,163684:CD,163693:CD,163698:CD,163702:CD,164228:CD,164229:CD,164230:CD,164231:JM,163683
163684 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,163683
163693 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,163702
163698 :: CALL :: call :: Z :: v27 = v25.matches()::JM,163702
163702 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,164228:CD,163703:CD,163708:CD,163709
163703 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,163712:JM,163904:JM,163732:JM,163710:JM,163708
163710 :: EXPR :: assign :: I :: v33 = v30.length::DD,163711
163711 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,163712:CD,163713:CD,163714:CD,163719:CD,163723:CD,163727:CD,163732:CD,163733:CD,163774:CD,163779:CD,163784:CD,163785:CD,163829:CD,163830:CD,163844:CD,163845:CD,163859:CD,163860:CD,163874:CD,163875:CD,163889:CD,163894:CD,163899:CD,163904:CD,163905:CD,163911:CD,163920:CD,163929:CD,163938:CD,163947:CD,163956:CD,163961:CD,163966:CD,164017:CD,164022:CD,164060:CD,164082:CD,164207:CD,164209:CD,164214:CD,164216:CD,164221:CD,164222:CD,164228:CD,164229:CD,164230:CD,164231
163708 :: EXPR :: assign :: I :: v31 = v30.length::DD,163709
163709 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,163710:CD,163711:CD,163714:CD,163719:CD,163723:CD,163727:CD,163732:CD,163733:CD,163774:CD,163779:CD,163784:CD,163785:CD,163829:CD,163830:CD,163844:CD,163845:CD,163859:CD,163860:CD,163874:CD,163875:CD,163889:CD,163894:CD,163899:CD,163904:CD,163905:CD,163911:CD,163920:CD,163929:CD,163938:CD,163947:CD,163956:CD,163961:CD,163966:CD,164017:CD,164022:CD,164060:CD,164082:CD,164207:CD,164209:CD,164214:CD,164216:CD,164221:CD,164222:CD,164228:CD,164229:CD,164230:CD,164231
163714 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,163727
163715 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
163712 :: EXPR :: assign :: I :: v35 = v30.length::DD,163713
163713 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,163714:CD,163719:CD,163723:CD,163727:CD,163732:CD,163733:CD,163774:CD,163779:CD,163784:CD,163785:CD,163829:CD,163830:CD,163844:CD,163845:CD,163859:CD,163860:CD,163874:CD,163875:CD,163889:CD,163894:CD,163899:CD,163904:CD,163905:CD,163911:CD,163920:CD,163929:CD,163938:CD,163947:CD,163956:CD,163961:CD,163966:CD,164017:CD,164022:CD,164060:CD,164082:CD,164111:CD,164207:CD,164209:CD,164214:CD,164216:CD,164221:CD,164222:CD,164228:CD,164229:CD,164230:CD,164231
163719 :: CALL :: call :: J :: v42 = parseLong(v40)::
163723 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
163727 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,163734:DD,164207
163734 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,164207
163735 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,163744:JM,163755
163732 :: EXPR :: assign :: I :: v47 = v30.length::DD,163733
163733 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,164207:CD,163734:CD,163739:CD,163744
163739 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,163744
163744 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,163750:CD,163755:CD,164207
163750 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,163755
163755 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,163764:CD,164207
163764 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
163774 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,163889
163779 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,163874:JM,163859:JM,163844:JM,163829:JM,163786:JM,163784
163786 :: EXPR :: assign :: I :: v76 = v72.length::CF,163787
163787 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,164209:CD,163788
163784 :: EXPR :: assign :: I :: v73 = v72.length::DD,163785
163785 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,163786:CD,163787:CD,163788:CD,164209
163788 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,163797:CD,163807:CD,163809:CD,164209
163797 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
163807 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,164209
163809 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,164209:CD,163818:CD,163828
163818 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
163830 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,163835:CD,163839
163831 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
163828 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,164209
163829 :: EXPR :: assign :: I :: v97 = v72.length::DD,163830
163835 :: CALL :: call :: I :: v100 = parseInt(v98)::
163839 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
163846 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
163844 :: EXPR :: assign :: I :: v104 = v72.length::DD,163845
163845 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,163850:CD,163854
163850 :: CALL :: call :: I :: v107 = parseInt(v105)::
163854 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
163859 :: EXPR :: assign :: I :: v111 = v72.length::DD,163860
163860 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,163865:CD,163869
163861 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
163865 :: CALL :: call :: I :: v115 = parseInt(v113)::
163869 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
163874 :: EXPR :: assign :: I :: v119 = v72.length::DD,163875
163875 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,163880:CD,163884
163876 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
163880 :: CALL :: call :: I :: v122 = parseInt(v120)::
163884 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
163889 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,163894
163894 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,163899
163899 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,163906:DD,164214
163906 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,164214
163904 :: EXPR :: assign :: I :: v132 = v30.length::DD,163905
163905 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,164214:CD,163906
163911 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,163920
163920 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,163929
163929 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,163938
163938 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,163947
163947 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,163956
163956 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
163957 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,163966:JM,163973
163961 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,163966
163966 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,163968:CD,163973:CD,164216
163968 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,163973
163974 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,163978:CD,163987:CD,163989:CD,164216
163973 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,163974:CD,164004:CD,164008:CD,164216
163978 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
163987 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,164216
163989 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,164216:CD,163993:CD,164002
163993 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
164002 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,164216
164004 :: CALL :: call :: J :: v180 = parseLong(v158)::
164008 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
164013 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,164022:JM,164023:JM,164027
164017 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,164022
164022 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,164023:CD,164027:CD,164221:CD,164222
164023 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,164023:JM,164027
164027 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,164032:CD,164037:CD,164038:CD,164043:CD,164059:CD,164218:CD,164219:CD,164220:CD,164221:CD,164222
164032 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,164038:JM,164043
164038 :: EXPR :: assign :: I :: v196 = v194.length::
164037 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,164038
164043 :: EXPR :: assign :: I :: v198 = v194.length::DD,164059
164053 :: CALL :: call :: Z :: v203 = v195.add(v201)::
164058 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,164220:CF,164218
164059 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,164221:CD,164053:CD,164058:CD,164218:CD,164219:CD,164220
164060 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
164082 :: CALL :: call :: Z :: v212 = v4.add(v209)::
164091 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
164096 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
164101 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
164111 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,164115:CD,164124:CD,164126:CD,164228:CD,164229:CD,164230:CD,164231
164115 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
164126 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,164228:CD,164130:CD,164139:CD,164229:CD,164230:CD,164231
164124 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,164230
164130 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
164139 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,164228
164140 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,164235:JM,164200
164144 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,164236:CF,164232
164145 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,163674:CD,163679:CD,163683:CD,164140:CD,164144:CD,164228:CD,164229:CD,164230:CD,164231:CD,164232:CD,164233:CD,164234:CD,164235:CD,164236
164196 :: CALL :: call :: V :: p1 $in .close()::JM,164235:JM,164200
164200 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,164201:JM,164235
164201 :: CALL :: call :: V :: p1 $in .close()::JM,164235
164207 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,163774
164209 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,163829:DD,164225:DD,164229
164214 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,163911
164218 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,164219:DD,164218:DD,164221:DD,164226
164219 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,164220:DD,164219:DD,164222:DD,164227
164216 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,164224:DD,164228
164222 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,164227:DD,164231
164220 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,164058:DD,164059
164221 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,164222:DD,164226:DD,164230
164226 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,164230
164227 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,164231
164224 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,164228
164225 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,164229
164230 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,164231:DD,164234
164231 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,164235:JM,164200:DD,164144
164228 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,164229:DD,164232
164229 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,164230:DD,164233
164234 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,164235:DD,164111:DD,164124:DD,164126:DD,164218:DD,164221:DD,164226:DD,164230
164235 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,164236:DD,164145
164232 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,164233:DD,163974:DD,163987:DD,163989:DD,164002:DD,164139:DD,164216:DD,164224:DD,164228
164233 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,164234:DD,163788:DD,163807:DD,163809:DD,163828:DD,164209:DD,164225:DD,164229
164236 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,164219:DD,164222:DD,164227:DD,164231:CF,164145
164540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,164541:CD,164544:CD,164553:CD,164561:CD,164566:CD,164567:CD,164572:CD,164577:CD,164586:CD,164587:CD,164588:CD,164604:CD,164605:CD,164607
164541 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
164544 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
164549 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,164587:JM,164607
164553 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,164587:JM,164607
164557 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,164587:JM,164604
164561 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,164587:JM,164604
164566 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
164567 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
164572 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
164577 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
164586 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,164605:CF,164587
164587 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,164588
164588 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
164594 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
164598 :: CALL :: call :: Z :: v32 = v25.add(v30)::
164603 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,164607
164607 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,164603:DD,164604
164604 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,164594:CD,164598:CD,164603:CD,164607:CF,164605
164605 :: NORM :: compound :: Ljava/util/List :: return v25::DD,164541
164645 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
164648 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
164706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,164725
164725 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,165300
165076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,165077:CD,165081:CD,165083:CD,165087:CD,165092
165077 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,163602
165083 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,165092
165081 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,165092
165087 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,165092
165092 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,165093:CD,165098:CD,165102
165093 :: NORM :: compound :: Z :: return #(0)::DD,165077
165098 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,165102:CL,166462
165102 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,165103:CD,165104
165103 :: NORM :: compound :: Z :: return #(0)::DD,165077
165104 :: NORM :: compound :: Z :: return #(1)::DD,165077
165115 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,165116:CD,165119:CD,165123:CD,165127
165119 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,165127:CL,121452
165116 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,163610
165123 :: CALL :: call :: I :: v6 = v4.length()::JM,165127
165127 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,165128:CD,165129
165128 :: NORM :: compound :: Z :: return #(1)::CF,165116
165129 :: NORM :: compound :: Z :: return #(0)::CF,165116
165134 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,165135:CD,165138:CD,165142:CD,165144:CD,165148:CD,165153
165135 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,163618
165138 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,165153:CL,121452
165142 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,165153
165144 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,165153
165148 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,165153
165154 :: NORM :: compound :: Z :: return #(0)::DD,165135
165153 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,165154:CD,165159:CD,165163
165159 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,165163:CL,166477
165163 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,165164:CD,165165
165164 :: NORM :: compound :: Z :: return #(0)::DD,165135
165165 :: NORM :: compound :: Z :: return #(1)::DD,165135
165300 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,165307:CD,165308
165307 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,165308
165304 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,165307
165308 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,165319:CD,165323:CD,165327:CD,165334:CD,165338:CD,165339:CD,165343:CD,165350:CD,165354:CD,165355:CD,165359:CD,165366:CD,165370:CD,165371:CD,165375:CD,165379:CD,165383:CD,165387:CD,165391:CD,165395:CD,165396:CD,165397:CD,165401
165313 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,165319
165319 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,165323
165316 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,165319
165323 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,165401
165320 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,165323
165327 :: CALL :: call :: D :: v15 = cos(v13)::JM,165338:JM,165327
165324 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,165338:JM,165327
165331 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,165334:JM,165338
165334 :: CALL :: call :: D :: v18 = cos(v16)::JM,165334:JM,165338
165338 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,165339
165339 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,165355
165343 :: CALL :: call :: D :: v23 = cos(v21)::JM,165354:JM,165343
165340 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,165354:JM,165343
165347 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,165350:JM,165354
165350 :: CALL :: call :: D :: v26 = cos(v24)::JM,165350:JM,165354
165354 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,165355
165355 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,165371
165359 :: CALL :: call :: D :: v31 = cos(v29)::JM,165370:JM,165359
165356 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,165370:JM,165359
165363 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,165366:JM,165370
165366 :: CALL :: call :: D :: v34 = cos(v32)::JM,165366:JM,165370
165370 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,165371
165371 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,165396
165375 :: CALL :: call :: D :: v40 = cos(v38)::JM,165379:JM,165375
165372 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,165379:JM,165375
165379 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,165387
165383 :: CALL :: call :: D :: v44 = cos(v42)::JM,165383:JM,165387
165380 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,165383:JM,165387
165387 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,165395
165391 :: CALL :: call :: D :: v48 = cos(v46)::JM,165395:JM,165391
165388 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,165395:JM,165391
165395 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,165396
165396 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,165397:JM,165401
165397 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,165397:JM,165401
165402 :: EXPR :: modify :: D :: p0 $this .volume = v53::
165401 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,165402
166462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,166463:CD,166468:CD,166473:CD,166474
166463 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,165102
166468 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,166473
166474 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,166463
166473 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,166474
166478 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,165163
166477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,166478:CD,166483:CD,166488:CD,166489
166483 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,166488
166488 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,166489
166489 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,166478
