[50740]
1 :: ENTR :: entry :: null :: demo.DemoCommandLineStartup.main(java.lang.String[])::CD,5:CD,10
5 :: CALL :: call :: [Ljava/lang/String :: v6 = #(-file1 /tmp/cd/pdb1cd...).split(#( ))::JM,37866:JM,37930
10 :: CALL :: call :: V :: main(v6)::JM,37866:JM,37930:CL,36209
414 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.<clinit>()::CD,418:CD,432
418 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
432 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,629:CD,635:CD,637:CD,643:CD,645:CD,651:CD,653:CD,659:CD,661:CD,667:CD,669:CD,670:CD,676:CD,682:CD,688:CD,694
629 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,635
635 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
637 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,643
643 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
645 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,651
651 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
653 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,659
659 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
661 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,667
667 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
669 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
670 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,672
672 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
676 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,678
678 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
682 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,684
684 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
688 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,690
690 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
694 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,696
696 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
745 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,755:CD,763:CD,767:CD,775:CD,779:CD,787:CD,791:CD,799:CD,803:CD,811:CD,815:CD,823:CD,827:CD,835:CD,839:CD,847:CD,851:CD,859:CD,863:CD,871:CD,875:CD,883:CD,887:CD,895:CD,899:CD,907:CD,911:CD,919:CD,923:CD,931:CD,935:CD,943:CD,947:CD,955:CD,959:CD,967:CD,971:CD,979:CD,983:CD,991:CD,995:CD,1003:CD,1007:CD,1015:CD,1019:CD,1027:CD,1031:CD,1039:CD,1043:CD,1051:CD,1055:CD,1063:CD,1067:CD,1073:CD,1079:CD,1128:CD,1157:CD,1158:CD,1166:CD,1170:CD,1178:CD,1182:CD,1190:CD,1194:CD,1202:CD,1206:CD,1214:CD,1218:CD,1226:CD,1230:CD,1238:CD,1242:CD,1250:CD,1254:CD,1262:CD,1266:CD,1274:CD,1278:CD,1286:CD,1290:CD,1298:CD,1302:CD,1310:CD,1314:CD,1322:CD,1326:CD,1334:CD,1338:CD,1346:CD,1350:CD,1358:CD,1362:CD,1370:CD,1374:CD,1382:CD,1386:CD,1394:CD,1398:CD,1406:CD,1410:CD,1418:CD,1422:CD,1430:CD,1434:CD,1442:CD,1446:CD,1454:CD,1458:CD,1464:CD,1474:CD,1483:CD,1492:CD,1498
755 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
763 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
767 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
775 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
779 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
787 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
791 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
799 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
803 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
811 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
815 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
823 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
827 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
835 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
839 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
847 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
851 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
859 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
863 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
871 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
875 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
883 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
887 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
895 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
899 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
907 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
911 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
919 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
923 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
931 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
935 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
943 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
947 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
955 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
959 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
967 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
971 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
979 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
983 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
991 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
995 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
1003 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
1007 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
1015 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
1019 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
1027 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
1031 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
1039 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
1043 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
1051 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
1055 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
1063 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
1067 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
1073 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
1079 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1128
1080 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
1084 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
1088 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
1092 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
1096 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
1100 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
1104 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
1108 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
1112 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
1116 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
1120 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1124 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1128 :: EXPR :: assign :: I :: v193 = v173.length::DD,1157
1130 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1140
1136 :: CALL :: call :: I :: v197 = v194.length()::JM,1140
1140 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1141 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1146 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1150 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1156 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1498
1157 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1158:CD,1136:CD,1140:CD,1141:CD,1146:CD,1150:CD,1156:CD,1498
1158 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1166 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1170 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1178 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1182 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1190 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1194 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1202 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1206 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1214 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1218 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1226 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1230 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1238 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1242 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1250 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1254 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1262 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1266 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1274 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1278 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1286 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1290 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1298 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1302 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1310 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1314 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1322 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1326 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1334 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1338 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1346 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1350 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1358 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1362 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1370 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1374 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1382 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1386 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1394 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1398 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1406 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1410 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1418 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1422 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1430 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1434 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1442 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1446 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1454 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1458 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1464 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1474 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1483 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1492 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1498 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1156:DD,1157
1739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.<clinit>()::CD,1743:CD,1751:CD,1834:CD,1917:CD,2000:CD,2083:CD,2166:CD,2249:CD,2332:CD,2415:CD,3018
1743 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1751 :: NORM :: declaration :: [D :: v9 = new []::
1752 :: EXPR :: modify :: D :: v9[#(0)] = #(2.54 d)::
1756 :: EXPR :: modify :: D :: v9[#(1)] = #(2.51 d)::
1760 :: EXPR :: modify :: D :: v9[#(2)] = #(2.72 d)::
1764 :: EXPR :: modify :: D :: v9[#(3)] = #(3.01 d)::
1768 :: EXPR :: modify :: D :: v9[#(4)] = #(3.31 d)::
1772 :: EXPR :: modify :: D :: v9[#(5)] = #(3.61 d)::
1776 :: EXPR :: modify :: D :: v9[#(6)] = #(3.9 d)::
1780 :: EXPR :: modify :: D :: v9[#(7)] = #(4.19 d)::
1784 :: EXPR :: modify :: D :: v9[#(8)] = #(4.47 d)::
1788 :: EXPR :: modify :: D :: v9[#(9)] = #(4.74 d)::
1792 :: EXPR :: modify :: D :: v9[#(10)] = #(4.99 d)::
1796 :: EXPR :: modify :: D :: v9[#(11)] = #(5.22 d)::
1800 :: EXPR :: modify :: D :: v9[#(12)] = #(5.46 d)::
1804 :: EXPR :: modify :: D :: v9[#(13)] = #(5.7 d)::
1808 :: EXPR :: modify :: D :: v9[#(14)] = #(5.94 d)::
1812 :: EXPR :: modify :: D :: v9[#(15)] = #(6.13 d)::
1816 :: EXPR :: modify :: D :: v9[#(16)] = #(6.36 d)::
1820 :: EXPR :: modify :: D :: v9[#(17)] = #(6.52 d)::
1824 :: EXPR :: modify :: D :: v9[#(18)] = #(6.68 d)::
1828 :: EXPR :: modify :: D :: v9[#(19)] = #(6.91 d)::
1834 :: NORM :: declaration :: [D :: v48 = new []::
1835 :: EXPR :: modify :: D :: v48[#(0)] = #(1.33 d)::
1839 :: EXPR :: modify :: D :: v48[#(1)] = #(0.88 d)::
1843 :: EXPR :: modify :: D :: v48[#(2)] = #(0.73 d)::
1847 :: EXPR :: modify :: D :: v48[#(3)] = #(0.71 d)::
1851 :: EXPR :: modify :: D :: v48[#(4)] = #(0.74 d)::
1855 :: EXPR :: modify :: D :: v48[#(5)] = #(0.8 d)::
1859 :: EXPR :: modify :: D :: v48[#(6)] = #(0.86 d)::
1863 :: EXPR :: modify :: D :: v48[#(7)] = #(0.92 d)::
1867 :: EXPR :: modify :: D :: v48[#(8)] = #(0.98 d)::
1871 :: EXPR :: modify :: D :: v48[#(9)] = #(1.04 d)::
1875 :: EXPR :: modify :: D :: v48[#(10)] = #(1.08 d)::
1879 :: EXPR :: modify :: D :: v48[#(11)] = #(1.1 d)::
1883 :: EXPR :: modify :: D :: v48[#(12)] = #(1.15 d)::
1887 :: EXPR :: modify :: D :: v48[#(13)] = #(1.19 d)::
1891 :: EXPR :: modify :: D :: v48[#(14)] = #(1.23 d)::
1895 :: EXPR :: modify :: D :: v48[#(15)] = #(1.25 d)::
1899 :: EXPR :: modify :: D :: v48[#(16)] = #(1.32 d)::
1903 :: EXPR :: modify :: D :: v48[#(17)] = #(1.34 d)::
1907 :: EXPR :: modify :: D :: v48[#(18)] = #(1.36 d)::
1911 :: EXPR :: modify :: D :: v48[#(19)] = #(1.45 d)::
1917 :: NORM :: declaration :: [D :: v69 = new []::
1918 :: EXPR :: modify :: D :: v69[#(0)] = #(0.0 d)::
1922 :: EXPR :: modify :: D :: v69[#(1)] = #(11.5 d)::
1926 :: EXPR :: modify :: D :: v69[#(2)] = #(23.32 d)::
1930 :: EXPR :: modify :: D :: v69[#(3)] = #(35.95 d)::
1934 :: EXPR :: modify :: D :: v69[#(4)] = #(49.02 d)::
1938 :: EXPR :: modify :: D :: v69[#(5)] = #(62.44 d)::
1942 :: EXPR :: modify :: D :: v69[#(6)] = #(76.28 d)::
1946 :: EXPR :: modify :: D :: v69[#(7)] = #(90.26 d)::
1950 :: EXPR :: modify :: D :: v69[#(8)] = #(104.86 d)::
1954 :: EXPR :: modify :: D :: v69[#(9)] = #(119.97 d)::
1958 :: EXPR :: modify :: D :: v69[#(10)] = #(134.86 d)::
1962 :: EXPR :: modify :: D :: v69[#(11)] = #(150.54 d)::
1966 :: EXPR :: modify :: D :: v69[#(12)] = #(164.86 d)::
1970 :: EXPR :: modify :: D :: v69[#(13)] = #(179.57 d)::
1974 :: EXPR :: modify :: D :: v69[#(14)] = #(194.39 d)::
1978 :: EXPR :: modify :: D :: v69[#(15)] = #(209.38 d)::
1982 :: EXPR :: modify :: D :: v69[#(16)] = #(224.74 d)::
1986 :: EXPR :: modify :: D :: v69[#(17)] = #(238.96 d)::
1990 :: EXPR :: modify :: D :: v69[#(18)] = #(253.72 d)::
1994 :: EXPR :: modify :: D :: v69[#(19)] = #(270.79 d)::
2000 :: NORM :: declaration :: [D :: v90 = new []::
2001 :: EXPR :: modify :: D :: v90[#(0)] = #(0.0 d)::
2005 :: EXPR :: modify :: D :: v90[#(1)] = #(9.88 d)::
2009 :: EXPR :: modify :: D :: v90[#(2)] = #(14.34 d)::
2013 :: EXPR :: modify :: D :: v90[#(3)] = #(17.99 d)::
2017 :: EXPR :: modify :: D :: v90[#(4)] = #(21.1 d)::
2021 :: EXPR :: modify :: D :: v90[#(5)] = #(23.89 d)::
2025 :: EXPR :: modify :: D :: v90[#(6)] = #(26.55 d)::
2029 :: EXPR :: modify :: D :: v90[#(7)] = #(29.0 d)::
2033 :: EXPR :: modify :: D :: v90[#(8)] = #(31.11 d)::
2037 :: EXPR :: modify :: D :: v90[#(9)] = #(33.1 d)::
2041 :: EXPR :: modify :: D :: v90[#(10)] = #(35.02 d)::
2045 :: EXPR :: modify :: D :: v90[#(11)] = #(36.03 d)::
2049 :: EXPR :: modify :: D :: v90[#(12)] = #(37.19 d)::
2053 :: EXPR :: modify :: D :: v90[#(13)] = #(38.82 d)::
2057 :: EXPR :: modify :: D :: v90[#(14)] = #(41.04 d)::
2061 :: EXPR :: modify :: D :: v90[#(15)] = #(43.35 d)::
2065 :: EXPR :: modify :: D :: v90[#(16)] = #(45.45 d)::
2069 :: EXPR :: modify :: D :: v90[#(17)] = #(48.41 d)::
2073 :: EXPR :: modify :: D :: v90[#(18)] = #(50.87 d)::
2077 :: EXPR :: modify :: D :: v90[#(19)] = #(52.27 d)::
2083 :: NORM :: declaration :: [D :: v110 = new []::
2084 :: EXPR :: modify :: D :: v110[#(0)] = #(1.98 d)::
2088 :: EXPR :: modify :: D :: v110[#(1)] = #(1.97 d)::
2092 :: EXPR :: modify :: D :: v110[#(2)] = #(2.22 d)::
2096 :: EXPR :: modify :: D :: v110[#(3)] = #(2.54 d)::
2100 :: EXPR :: modify :: D :: v110[#(4)] = #(2.87 d)::
2104 :: EXPR :: modify :: D :: v110[#(5)] = #(3.18 d)::
2108 :: EXPR :: modify :: D :: v110[#(6)] = #(3.48 d)::
2112 :: EXPR :: modify :: D :: v110[#(7)] = #(3.77 d)::
2116 :: EXPR :: modify :: D :: v110[#(8)] = #(4.05 d)::
2120 :: EXPR :: modify :: D :: v110[#(9)] = #(4.31 d)::
2124 :: EXPR :: modify :: D :: v110[#(10)] = #(4.57 d)::
2128 :: EXPR :: modify :: D :: v110[#(11)] = #(4.82 d)::
2132 :: EXPR :: modify :: D :: v110[#(12)] = #(5.03 d)::
2136 :: EXPR :: modify :: D :: v110[#(13)] = #(5.24 d)::
2140 :: EXPR :: modify :: D :: v110[#(14)] = #(5.43 d)::
2144 :: EXPR :: modify :: D :: v110[#(15)] = #(5.64 d)::
2148 :: EXPR :: modify :: D :: v110[#(16)] = #(5.82 d)::
2152 :: EXPR :: modify :: D :: v110[#(17)] = #(6.02 d)::
2156 :: EXPR :: modify :: D :: v110[#(18)] = #(6.21 d)::
2160 :: EXPR :: modify :: D :: v110[#(19)] = #(6.42 d)::
2166 :: NORM :: declaration :: [D :: v130 = new []::
2167 :: EXPR :: modify :: D :: v130[#(0)] = #(1.15 d)::
2171 :: EXPR :: modify :: D :: v130[#(1)] = #(0.73 d)::
2175 :: EXPR :: modify :: D :: v130[#(2)] = #(0.63 d)::
2179 :: EXPR :: modify :: D :: v130[#(3)] = #(0.64 d)::
2183 :: EXPR :: modify :: D :: v130[#(4)] = #(0.71 d)::
2187 :: EXPR :: modify :: D :: v130[#(5)] = #(0.8 d)::
2191 :: EXPR :: modify :: D :: v130[#(6)] = #(0.87 d)::
2195 :: EXPR :: modify :: D :: v130[#(7)] = #(0.95 d)::
2199 :: EXPR :: modify :: D :: v130[#(8)] = #(1.01 d)::
2203 :: EXPR :: modify :: D :: v130[#(9)] = #(1.07 d)::
2207 :: EXPR :: modify :: D :: v130[#(10)] = #(1.13 d)::
2211 :: EXPR :: modify :: D :: v130[#(11)] = #(1.19 d)::
2215 :: EXPR :: modify :: D :: v130[#(12)] = #(1.22 d)::
2219 :: EXPR :: modify :: D :: v130[#(13)] = #(1.25 d)::
2223 :: EXPR :: modify :: D :: v130[#(14)] = #(1.28 d)::
2227 :: EXPR :: modify :: D :: v130[#(15)] = #(1.32 d)::
2231 :: EXPR :: modify :: D :: v130[#(16)] = #(1.35 d)::
2235 :: EXPR :: modify :: D :: v130[#(17)] = #(1.39 d)::
2239 :: EXPR :: modify :: D :: v130[#(18)] = #(1.45 d)::
2243 :: EXPR :: modify :: D :: v130[#(19)] = #(1.5 d)::
2249 :: NORM :: declaration :: [D :: v143 = new []::
2250 :: EXPR :: modify :: D :: v143[#(0)] = #(0.0 d)::
2254 :: EXPR :: modify :: D :: v143[#(1)] = #(10.12 d)::
2258 :: EXPR :: modify :: D :: v143[#(2)] = #(20.25 d)::
2262 :: EXPR :: modify :: D :: v143[#(3)] = #(31.29 d)::
2266 :: EXPR :: modify :: D :: v143[#(4)] = #(42.95 d)::
2270 :: EXPR :: modify :: D :: v143[#(5)] = #(55.2 d)::
2274 :: EXPR :: modify :: D :: v143[#(6)] = #(67.53 d)::
2278 :: EXPR :: modify :: D :: v143[#(7)] = #(80.15 d)::
2282 :: EXPR :: modify :: D :: v143[#(8)] = #(93.3 d)::
2286 :: EXPR :: modify :: D :: v143[#(9)] = #(106.47 d)::
2290 :: EXPR :: modify :: D :: v143[#(10)] = #(120.52 d)::
2294 :: EXPR :: modify :: D :: v143[#(11)] = #(134.38 d)::
2298 :: EXPR :: modify :: D :: v143[#(12)] = #(148.59 d)::
2302 :: EXPR :: modify :: D :: v143[#(13)] = #(162.58 d)::
2306 :: EXPR :: modify :: D :: v143[#(14)] = #(176.64 d)::
2310 :: EXPR :: modify :: D :: v143[#(15)] = #(191.23 d)::
2314 :: EXPR :: modify :: D :: v143[#(16)] = #(204.12 d)::
2318 :: EXPR :: modify :: D :: v143[#(17)] = #(218.64 d)::
2322 :: EXPR :: modify :: D :: v143[#(18)] = #(231.82 d)::
2326 :: EXPR :: modify :: D :: v143[#(19)] = #(243.43 d)::
2332 :: NORM :: declaration :: [D :: v163 = new []::
2333 :: EXPR :: modify :: D :: v163[#(0)] = #(0.0 d)::
2337 :: EXPR :: modify :: D :: v163[#(1)] = #(9.8 d)::
2341 :: EXPR :: modify :: D :: v163[#(2)] = #(14.44 d)::
2345 :: EXPR :: modify :: D :: v163[#(3)] = #(18.14 d)::
2349 :: EXPR :: modify :: D :: v163[#(4)] = #(21.35 d)::
2353 :: EXPR :: modify :: D :: v163[#(5)] = #(24.37 d)::
2357 :: EXPR :: modify :: D :: v163[#(6)] = #(27.0 d)::
2361 :: EXPR :: modify :: D :: v163[#(7)] = #(29.68 d)::
2365 :: EXPR :: modify :: D :: v163[#(8)] = #(32.22 d)::
2369 :: EXPR :: modify :: D :: v163[#(9)] = #(34.37 d)::
2373 :: EXPR :: modify :: D :: v163[#(10)] = #(36.65 d)::
2377 :: EXPR :: modify :: D :: v163[#(11)] = #(38.63 d)::
2381 :: EXPR :: modify :: D :: v163[#(12)] = #(40.31 d)::
2385 :: EXPR :: modify :: D :: v163[#(13)] = #(42.16 d)::
2389 :: EXPR :: modify :: D :: v163[#(14)] = #(43.78 d)::
2393 :: EXPR :: modify :: D :: v163[#(15)] = #(44.98 d)::
2397 :: EXPR :: modify :: D :: v163[#(16)] = #(47.08 d)::
2401 :: EXPR :: modify :: D :: v163[#(17)] = #(49.09 d)::
2405 :: EXPR :: modify :: D :: v163[#(18)] = #(50.78 d)::
2409 :: EXPR :: modify :: D :: v163[#(19)] = #(52.15 d)::
2415 :: NORM :: declaration :: [D :: v184 = new []::
2416 :: EXPR :: modify :: D :: v184[#(0)] = #(1.0 d)::
2420 :: EXPR :: modify :: D :: v184[#(1)] = #(0.92 d)::
2424 :: EXPR :: modify :: D :: v184[#(2)] = #(0.841 d)::
2428 :: EXPR :: modify :: D :: v184[#(3)] = #(0.764 d)::
2432 :: EXPR :: modify :: D :: v184[#(4)] = #(0.689 d)::
2436 :: EXPR :: modify :: D :: v184[#(5)] = #(0.617 d)::
2440 :: EXPR :: modify :: D :: v184[#(6)] = #(0.549 d)::
2444 :: EXPR :: modify :: D :: v184[#(7)] = #(0.484 d)::
2448 :: EXPR :: modify :: D :: v184[#(8)] = #(0.424 d)::
2452 :: EXPR :: modify :: D :: v184[#(9)] = #(0.368 d)::
2456 :: EXPR :: modify :: D :: v184[#(10)] = #(0.317 d)::
2460 :: EXPR :: modify :: D :: v184[#(11)] = #(0.271 d)::
2464 :: EXPR :: modify :: D :: v184[#(12)] = #(0.23 d)::
2468 :: EXPR :: modify :: D :: v184[#(13)] = #(0.194 d)::
2472 :: EXPR :: modify :: D :: v184[#(14)] = #(0.162 d)::
2476 :: EXPR :: modify :: D :: v184[#(15)] = #(0.134 d)::
2480 :: EXPR :: modify :: D :: v184[#(16)] = #(0.11 d)::
2484 :: EXPR :: modify :: D :: v184[#(17)] = #(0.0891 d)::
2488 :: EXPR :: modify :: D :: v184[#(18)] = #(0.0719 d)::
2492 :: EXPR :: modify :: D :: v184[#(19)] = #(0.0574 d)::
2496 :: EXPR :: modify :: D :: v184[#(20)] = #(0.0455 d)::
2500 :: EXPR :: modify :: D :: v184[#(21)] = #(0.0357 d)::
2504 :: EXPR :: modify :: D :: v184[#(22)] = #(0.0278 d)::
2508 :: EXPR :: modify :: D :: v184[#(23)] = #(0.0214 d)::
2512 :: EXPR :: modify :: D :: v184[#(24)] = #(0.0164 d)::
2516 :: EXPR :: modify :: D :: v184[#(25)] = #(0.0124 d)::
2520 :: EXPR :: modify :: D :: v184[#(26)] = #(0.00932 d)::
2524 :: EXPR :: modify :: D :: v184[#(27)] = #(0.00693 d)::
2528 :: EXPR :: modify :: D :: v184[#(28)] = #(0.00511 d)::
2532 :: EXPR :: modify :: D :: v184[#(29)] = #(0.00373 d)::
2536 :: EXPR :: modify :: D :: v184[#(30)] = #(0.0027 d)::
2540 :: EXPR :: modify :: D :: v184[#(31)] = #(0.00194 d)::
2544 :: EXPR :: modify :: D :: v184[#(32)] = #(0.00137 d)::
2548 :: EXPR :: modify :: D :: v184[#(33)] = #(9.67E-4 d)::
2552 :: EXPR :: modify :: D :: v184[#(34)] = #(6.74E-4 d)::
2556 :: EXPR :: modify :: D :: v184[#(35)] = #(4.65E-4 d)::
2560 :: EXPR :: modify :: D :: v184[#(36)] = #(3.18E-4 d)::
2564 :: EXPR :: modify :: D :: v184[#(37)] = #(2.16E-4 d)::
2568 :: EXPR :: modify :: D :: v184[#(38)] = #(1.45E-4 d)::
2572 :: EXPR :: modify :: D :: v184[#(39)] = #(9.62E-5 d)::
2576 :: EXPR :: modify :: D :: v184[#(40)] = #(6.33E-5 d)::
2580 :: EXPR :: modify :: D :: v184[#(41)] = #(4.13E-5 d)::
2584 :: EXPR :: modify :: D :: v184[#(42)] = #(2.67E-5 d)::
2588 :: EXPR :: modify :: D :: v184[#(43)] = #(1.71E-5 d)::
2592 :: EXPR :: modify :: D :: v184[#(44)] = #(1.08E-5 d)::
2596 :: EXPR :: modify :: D :: v184[#(45)] = #(6.8E-6 d)::
2600 :: EXPR :: modify :: D :: v184[#(46)] = #(4.22E-6 d)::
2604 :: EXPR :: modify :: D :: v184[#(47)] = #(2.6E-6 d)::
2608 :: EXPR :: modify :: D :: v184[#(48)] = #(1.59E-6 d)::
2612 :: EXPR :: modify :: D :: v184[#(49)] = #(9.58E-7 d)::
2616 :: EXPR :: modify :: D :: v184[#(50)] = #(5.73E-7 d)::
2620 :: EXPR :: modify :: D :: v184[#(51)] = #(3.4E-7 d)::
2624 :: EXPR :: modify :: D :: v184[#(52)] = #(1.99E-7 d)::
2628 :: EXPR :: modify :: D :: v184[#(53)] = #(1.16E-7 d)::
2632 :: EXPR :: modify :: D :: v184[#(54)] = #(6.66E-8 d)::
2636 :: EXPR :: modify :: D :: v184[#(55)] = #(3.8E-8 d)::
2640 :: EXPR :: modify :: D :: v184[#(56)] = #(2.14E-8 d)::
2644 :: EXPR :: modify :: D :: v184[#(57)] = #(1.2E-8 d)::
2648 :: EXPR :: modify :: D :: v184[#(58)] = #(6.63E-9 d)::
2652 :: EXPR :: modify :: D :: v184[#(59)] = #(3.64E-9 d)::
2656 :: EXPR :: modify :: D :: v184[#(60)] = #(1.97E-9 d)::
2660 :: EXPR :: modify :: D :: v184[#(61)] = #(1.06E-9 d)::
2664 :: EXPR :: modify :: D :: v184[#(62)] = #(5.65E-10 d)::
2668 :: EXPR :: modify :: D :: v184[#(63)] = #(2.98E-10 d)::
2672 :: EXPR :: modify :: D :: v184[#(64)] = #(1.55E-10 d)::
2676 :: EXPR :: modify :: D :: v184[#(65)] = #(8.03E-11 d)::
2680 :: EXPR :: modify :: D :: v184[#(66)] = #(4.11E-11 d)::
2684 :: EXPR :: modify :: D :: v184[#(67)] = #(2.08E-11 d)::
2688 :: EXPR :: modify :: D :: v184[#(68)] = #(1.05E-11 d)::
2692 :: EXPR :: modify :: D :: v184[#(69)] = #(5.2E-12 d)::
2696 :: EXPR :: modify :: D :: v184[#(70)] = #(2.56E-12 d)::
2700 :: EXPR :: modify :: D :: v184[#(71)] = #(1.25E-12 d)::
2704 :: EXPR :: modify :: D :: v184[#(72)] = #(6.02E-13 d)::
2708 :: EXPR :: modify :: D :: v184[#(73)] = #(2.88E-13 d)::
2712 :: EXPR :: modify :: D :: v184[#(74)] = #(1.36E-13 d)::
2716 :: EXPR :: modify :: D :: v184[#(75)] = #(6.38E-14 d)::
2720 :: EXPR :: modify :: D :: v184[#(76)] = #(2.96E-14 d)::
2724 :: EXPR :: modify :: D :: v184[#(77)] = #(1.36E-14 d)::
2728 :: EXPR :: modify :: D :: v184[#(78)] = #(6.19E-15 d)::
2732 :: EXPR :: modify :: D :: v184[#(79)] = #(2.79E-15 d)::
2736 :: EXPR :: modify :: D :: v184[#(80)] = #(1.24E-15 d)::
2740 :: EXPR :: modify :: D :: v184[#(81)] = #(5.5E-16 d)::
2744 :: EXPR :: modify :: D :: v184[#(82)] = #(2.4E-16 d)::
2748 :: EXPR :: modify :: D :: v184[#(83)] = #(1.04E-16 d)::
2752 :: EXPR :: modify :: D :: v184[#(84)] = #(4.46E-17 d)::
2756 :: EXPR :: modify :: D :: v184[#(85)] = #(1.9E-17 d)::
2760 :: EXPR :: modify :: D :: v184[#(86)] = #(7.97E-18 d)::
2764 :: EXPR :: modify :: D :: v184[#(87)] = #(3.32E-18 d)::
2768 :: EXPR :: modify :: D :: v184[#(88)] = #(1.37E-18 d)::
2772 :: EXPR :: modify :: D :: v184[#(89)] = #(5.58E-19 d)::
2776 :: EXPR :: modify :: D :: v184[#(90)] = #(2.26E-19 d)::
2780 :: EXPR :: modify :: D :: v184[#(91)] = #(9.03E-20 d)::
2784 :: EXPR :: modify :: D :: v184[#(92)] = #(3.58E-20 d)::
2788 :: EXPR :: modify :: D :: v184[#(93)] = #(1.4E-20 d)::
2792 :: EXPR :: modify :: D :: v184[#(94)] = #(5.46E-21 d)::
2796 :: EXPR :: modify :: D :: v184[#(95)] = #(2.1E-21 d)::
2800 :: EXPR :: modify :: D :: v184[#(96)] = #(7.99E-22 d)::
2804 :: EXPR :: modify :: D :: v184[#(97)] = #(3.02E-22 d)::
2808 :: EXPR :: modify :: D :: v184[#(98)] = #(1.13E-22 d)::
2812 :: EXPR :: modify :: D :: v184[#(99)] = #(4.16E-23 d)::
2816 :: EXPR :: modify :: D :: v184[#(100)] = #(1.52E-23 d)::
2820 :: EXPR :: modify :: D :: v184[#(101)] = #(5.52E-24 d)::
2824 :: EXPR :: modify :: D :: v184[#(102)] = #(1.98E-24 d)::
2828 :: EXPR :: modify :: D :: v184[#(103)] = #(7.05E-25 d)::
2832 :: EXPR :: modify :: D :: v184[#(104)] = #(2.48E-25 d)::
2836 :: EXPR :: modify :: D :: v184[#(105)] = #(8.64E-26 d)::
2840 :: EXPR :: modify :: D :: v184[#(106)] = #(2.98E-26 d)::
2844 :: EXPR :: modify :: D :: v184[#(107)] = #(1.02E-26 d)::
2848 :: EXPR :: modify :: D :: v184[#(108)] = #(3.44E-27 d)::
2852 :: EXPR :: modify :: D :: v184[#(109)] = #(1.15E-27 d)::
2856 :: EXPR :: modify :: D :: v184[#(110)] = #(3.82E-28 d)::
2860 :: EXPR :: modify :: D :: v184[#(111)] = #(1.25E-28 d)::
2864 :: EXPR :: modify :: D :: v184[#(112)] = #(4.08E-29 d)::
2868 :: EXPR :: modify :: D :: v184[#(113)] = #(1.31E-29 d)::
2872 :: EXPR :: modify :: D :: v184[#(114)] = #(4.18E-30 d)::
2876 :: EXPR :: modify :: D :: v184[#(115)] = #(1.32E-30 d)::
2880 :: EXPR :: modify :: D :: v184[#(116)] = #(4.12E-31 d)::
2884 :: EXPR :: modify :: D :: v184[#(117)] = #(1.27E-31 d)::
2888 :: EXPR :: modify :: D :: v184[#(118)] = #(3.9E-32 d)::
2892 :: EXPR :: modify :: D :: v184[#(119)] = #(1.18E-32 d)::
2896 :: EXPR :: modify :: D :: v184[#(120)] = #(3.55E-33 d)::
2900 :: EXPR :: modify :: D :: v184[#(121)] = #(1.06E-33 d)::
2904 :: EXPR :: modify :: D :: v184[#(122)] = #(3.11E-34 d)::
2908 :: EXPR :: modify :: D :: v184[#(123)] = #(9.06E-35 d)::
2912 :: EXPR :: modify :: D :: v184[#(124)] = #(2.61E-35 d)::
2916 :: EXPR :: modify :: D :: v184[#(125)] = #(7.47E-36 d)::
2920 :: EXPR :: modify :: D :: v184[#(126)] = #(2.11E-36 d)::
2924 :: EXPR :: modify :: D :: v184[#(127)] = #(5.91E-37 d)::
2928 :: EXPR :: modify :: D :: v184[#(128)] = #(1.64E-37 d)::
2932 :: EXPR :: modify :: D :: v184[#(129)] = #(4.5E-38 d)::
2936 :: EXPR :: modify :: D :: v184[#(130)] = #(1.22E-38 d)::
2940 :: EXPR :: modify :: D :: v184[#(131)] = #(3.29E-39 d)::
2944 :: EXPR :: modify :: D :: v184[#(132)] = #(8.77E-40 d)::
2948 :: EXPR :: modify :: D :: v184[#(133)] = #(2.31E-40 d)::
2952 :: EXPR :: modify :: D :: v184[#(134)] = #(6.05E-41 d)::
2956 :: EXPR :: modify :: D :: v184[#(135)] = #(1.56E-41 d)::
2960 :: EXPR :: modify :: D :: v184[#(136)] = #(4.0E-42 d)::
2964 :: EXPR :: modify :: D :: v184[#(137)] = #(1.02E-42 d)::
2968 :: EXPR :: modify :: D :: v184[#(138)] = #(2.55E-43 d)::
2972 :: EXPR :: modify :: D :: v184[#(139)] = #(6.33E-44 d)::
2976 :: EXPR :: modify :: D :: v184[#(140)] = #(1.56E-44 d)::
2980 :: EXPR :: modify :: D :: v184[#(141)] = #(3.8E-45 d)::
2984 :: EXPR :: modify :: D :: v184[#(142)] = #(9.16E-46 d)::
2988 :: EXPR :: modify :: D :: v184[#(143)] = #(2.19E-46 d)::
2992 :: EXPR :: modify :: D :: v184[#(144)] = #(5.17E-47 d)::
2996 :: EXPR :: modify :: D :: v184[#(145)] = #(1.21E-47 d)::
3000 :: EXPR :: modify :: D :: v184[#(146)] = #(2.81E-48 d)::
3004 :: EXPR :: modify :: D :: v184[#(147)] = #(6.45E-49 d)::
3008 :: EXPR :: modify :: D :: v184[#(148)] = #(1.46E-49 d)::
3012 :: EXPR :: modify :: D :: v184[#(149)] = #(3.3E-50 d)::
3018 :: NORM :: declaration :: [D :: v463 = new []::
3019 :: EXPR :: modify :: D :: v463[#(0)] = #(0.0 d)::
3023 :: EXPR :: modify :: D :: v463[#(1)] = #(0.73 d)::
3027 :: EXPR :: modify :: D :: v463[#(2)] = #(1.24 d)::
3031 :: EXPR :: modify :: D :: v463[#(3)] = #(1.64 d)::
3035 :: EXPR :: modify :: D :: v463[#(4)] = #(1.99 d)::
3039 :: EXPR :: modify :: D :: v463[#(5)] = #(2.3 d)::
3043 :: EXPR :: modify :: D :: v463[#(6)] = #(2.58 d)::
3047 :: EXPR :: modify :: D :: v463[#(7)] = #(2.83 d)::
3051 :: EXPR :: modify :: D :: v463[#(8)] = #(3.07 d)::
3055 :: EXPR :: modify :: D :: v463[#(9)] = #(3.29 d)::
3059 :: EXPR :: modify :: D :: v463[#(10)] = #(3.5 d)::
3063 :: EXPR :: modify :: D :: v463[#(11)] = #(3.7 d)::
3067 :: EXPR :: modify :: D :: v463[#(12)] = #(3.89 d)::
3071 :: EXPR :: modify :: D :: v463[#(13)] = #(4.07 d)::
3075 :: EXPR :: modify :: D :: v463[#(14)] = #(4.25 d)::
3079 :: EXPR :: modify :: D :: v463[#(15)] = #(4.42 d)::
3083 :: EXPR :: modify :: D :: v463[#(16)] = #(4.58 d)::
3087 :: EXPR :: modify :: D :: v463[#(17)] = #(4.74 d)::
3091 :: EXPR :: modify :: D :: v463[#(18)] = #(4.89 d)::
3095 :: EXPR :: modify :: D :: v463[#(19)] = #(5.04 d)::
3099 :: EXPR :: modify :: D :: v463[#(20)] = #(5.19 d)::
3103 :: EXPR :: modify :: D :: v463[#(21)] = #(5.33 d)::
3107 :: EXPR :: modify :: D :: v463[#(22)] = #(5.46 d)::
3111 :: EXPR :: modify :: D :: v463[#(23)] = #(5.6 d)::
3115 :: EXPR :: modify :: D :: v463[#(24)] = #(5.73 d)::
3119 :: EXPR :: modify :: D :: v463[#(25)] = #(5.86 d)::
3123 :: EXPR :: modify :: D :: v463[#(26)] = #(5.99 d)::
3127 :: EXPR :: modify :: D :: v463[#(27)] = #(6.11 d)::
3131 :: EXPR :: modify :: D :: v463[#(28)] = #(6.23 d)::
3135 :: EXPR :: modify :: D :: v463[#(29)] = #(6.35 d)::
3139 :: EXPR :: modify :: D :: v463[#(30)] = #(6.47 d)::
3143 :: EXPR :: modify :: D :: v463[#(31)] = #(6.58 d)::
3147 :: EXPR :: modify :: D :: v463[#(32)] = #(6.7 d)::
3151 :: EXPR :: modify :: D :: v463[#(33)] = #(6.81 d)::
3155 :: EXPR :: modify :: D :: v463[#(34)] = #(6.92 d)::
3159 :: EXPR :: modify :: D :: v463[#(35)] = #(7.02 d)::
3163 :: EXPR :: modify :: D :: v463[#(36)] = #(7.13 d)::
3167 :: EXPR :: modify :: D :: v463[#(37)] = #(7.24 d)::
3171 :: EXPR :: modify :: D :: v463[#(38)] = #(7.34 d)::
3175 :: EXPR :: modify :: D :: v463[#(39)] = #(7.44 d)::
3179 :: EXPR :: modify :: D :: v463[#(40)] = #(7.54 d)::
3183 :: EXPR :: modify :: D :: v463[#(41)] = #(7.64 d)::
3187 :: EXPR :: modify :: D :: v463[#(42)] = #(7.74 d)::
3191 :: EXPR :: modify :: D :: v463[#(43)] = #(7.84 d)::
3195 :: EXPR :: modify :: D :: v463[#(44)] = #(7.93 d)::
3199 :: EXPR :: modify :: D :: v463[#(45)] = #(8.03 d)::
3203 :: EXPR :: modify :: D :: v463[#(46)] = #(8.12 d)::
3207 :: EXPR :: modify :: D :: v463[#(47)] = #(8.21 d)::
3211 :: EXPR :: modify :: D :: v463[#(48)] = #(8.3 d)::
3215 :: EXPR :: modify :: D :: v463[#(49)] = #(8.4 d)::
3219 :: EXPR :: modify :: D :: v463[#(50)] = #(8.49 d)::
3223 :: EXPR :: modify :: D :: v463[#(51)] = #(8.57 d)::
3227 :: EXPR :: modify :: D :: v463[#(52)] = #(8.66 d)::
3231 :: EXPR :: modify :: D :: v463[#(53)] = #(8.75 d)::
3235 :: EXPR :: modify :: D :: v463[#(54)] = #(8.84 d)::
3239 :: EXPR :: modify :: D :: v463[#(55)] = #(8.92 d)::
3243 :: EXPR :: modify :: D :: v463[#(56)] = #(9.01 d)::
3247 :: EXPR :: modify :: D :: v463[#(57)] = #(9.09 d)::
3251 :: EXPR :: modify :: D :: v463[#(58)] = #(9.17 d)::
3255 :: EXPR :: modify :: D :: v463[#(59)] = #(9.25 d)::
3259 :: EXPR :: modify :: D :: v463[#(60)] = #(9.34 d)::
3263 :: EXPR :: modify :: D :: v463[#(61)] = #(9.42 d)::
3267 :: EXPR :: modify :: D :: v463[#(62)] = #(9.5 d)::
3271 :: EXPR :: modify :: D :: v463[#(63)] = #(9.58 d)::
3275 :: EXPR :: modify :: D :: v463[#(64)] = #(9.66 d)::
3279 :: EXPR :: modify :: D :: v463[#(65)] = #(9.73 d)::
3283 :: EXPR :: modify :: D :: v463[#(66)] = #(9.81 d)::
3287 :: EXPR :: modify :: D :: v463[#(67)] = #(9.89 d)::
3291 :: EXPR :: modify :: D :: v463[#(68)] = #(9.97 d)::
3295 :: EXPR :: modify :: D :: v463[#(69)] = #(10.04 d)::
3299 :: EXPR :: modify :: D :: v463[#(70)] = #(10.12 d)::
3303 :: EXPR :: modify :: D :: v463[#(71)] = #(10.19 d)::
3307 :: EXPR :: modify :: D :: v463[#(72)] = #(10.27 d)::
3311 :: EXPR :: modify :: D :: v463[#(73)] = #(10.34 d)::
3315 :: EXPR :: modify :: D :: v463[#(74)] = #(10.41 d)::
3319 :: EXPR :: modify :: D :: v463[#(75)] = #(10.49 d)::
3323 :: EXPR :: modify :: D :: v463[#(76)] = #(10.56 d)::
3327 :: EXPR :: modify :: D :: v463[#(77)] = #(10.63 d)::
3331 :: EXPR :: modify :: D :: v463[#(78)] = #(10.7 d)::
3335 :: EXPR :: modify :: D :: v463[#(79)] = #(10.77 d)::
3339 :: EXPR :: modify :: D :: v463[#(80)] = #(10.84 d)::
3343 :: EXPR :: modify :: D :: v463[#(81)] = #(10.91 d)::
3347 :: EXPR :: modify :: D :: v463[#(82)] = #(10.98 d)::
3351 :: EXPR :: modify :: D :: v463[#(83)] = #(11.05 d)::
3355 :: EXPR :: modify :: D :: v463[#(84)] = #(11.12 d)::
3359 :: EXPR :: modify :: D :: v463[#(85)] = #(11.19 d)::
3363 :: EXPR :: modify :: D :: v463[#(86)] = #(11.26 d)::
3367 :: EXPR :: modify :: D :: v463[#(87)] = #(11.32 d)::
3371 :: EXPR :: modify :: D :: v463[#(88)] = #(11.39 d)::
3375 :: EXPR :: modify :: D :: v463[#(89)] = #(11.46 d)::
3379 :: EXPR :: modify :: D :: v463[#(90)] = #(11.52 d)::
3383 :: EXPR :: modify :: D :: v463[#(91)] = #(11.59 d)::
3387 :: EXPR :: modify :: D :: v463[#(92)] = #(11.66 d)::
3391 :: EXPR :: modify :: D :: v463[#(93)] = #(11.72 d)::
3395 :: EXPR :: modify :: D :: v463[#(94)] = #(11.79 d)::
3399 :: EXPR :: modify :: D :: v463[#(95)] = #(11.85 d)::
3403 :: EXPR :: modify :: D :: v463[#(96)] = #(11.91 d)::
3407 :: EXPR :: modify :: D :: v463[#(97)] = #(11.98 d)::
3411 :: EXPR :: modify :: D :: v463[#(98)] = #(12.04 d)::
3415 :: EXPR :: modify :: D :: v463[#(99)] = #(12.1 d)::
3419 :: EXPR :: modify :: D :: v463[#(100)] = #(12.17 d)::
3423 :: EXPR :: modify :: D :: v463[#(101)] = #(12.23 d)::
3427 :: EXPR :: modify :: D :: v463[#(102)] = #(12.29 d)::
3431 :: EXPR :: modify :: D :: v463[#(103)] = #(12.35 d)::
3435 :: EXPR :: modify :: D :: v463[#(104)] = #(12.42 d)::
3439 :: EXPR :: modify :: D :: v463[#(105)] = #(12.48 d)::
3443 :: EXPR :: modify :: D :: v463[#(106)] = #(12.54 d)::
3447 :: EXPR :: modify :: D :: v463[#(107)] = #(12.6 d)::
3451 :: EXPR :: modify :: D :: v463[#(108)] = #(12.66 d)::
3455 :: EXPR :: modify :: D :: v463[#(109)] = #(12.72 d)::
3459 :: EXPR :: modify :: D :: v463[#(110)] = #(12.78 d)::
3463 :: EXPR :: modify :: D :: v463[#(111)] = #(12.84 d)::
3467 :: EXPR :: modify :: D :: v463[#(112)] = #(12.9 d)::
3471 :: EXPR :: modify :: D :: v463[#(113)] = #(12.96 d)::
3475 :: EXPR :: modify :: D :: v463[#(114)] = #(13.02 d)::
3479 :: EXPR :: modify :: D :: v463[#(115)] = #(13.07 d)::
3483 :: EXPR :: modify :: D :: v463[#(116)] = #(13.13 d)::
3487 :: EXPR :: modify :: D :: v463[#(117)] = #(13.19 d)::
3491 :: EXPR :: modify :: D :: v463[#(118)] = #(13.25 d)::
3495 :: EXPR :: modify :: D :: v463[#(119)] = #(13.31 d)::
3499 :: EXPR :: modify :: D :: v463[#(120)] = #(13.36 d)::
3503 :: EXPR :: modify :: D :: v463[#(121)] = #(13.42 d)::
3507 :: EXPR :: modify :: D :: v463[#(122)] = #(13.48 d)::
3511 :: EXPR :: modify :: D :: v463[#(123)] = #(13.53 d)::
3515 :: EXPR :: modify :: D :: v463[#(124)] = #(13.59 d)::
3519 :: EXPR :: modify :: D :: v463[#(125)] = #(13.65 d)::
3523 :: EXPR :: modify :: D :: v463[#(126)] = #(13.7 d)::
3527 :: EXPR :: modify :: D :: v463[#(127)] = #(13.76 d)::
3531 :: EXPR :: modify :: D :: v463[#(128)] = #(13.81 d)::
3535 :: EXPR :: modify :: D :: v463[#(129)] = #(13.87 d)::
3539 :: EXPR :: modify :: D :: v463[#(130)] = #(13.92 d)::
3543 :: EXPR :: modify :: D :: v463[#(131)] = #(13.98 d)::
3547 :: EXPR :: modify :: D :: v463[#(132)] = #(14.03 d)::
3551 :: EXPR :: modify :: D :: v463[#(133)] = #(14.09 d)::
3555 :: EXPR :: modify :: D :: v463[#(134)] = #(14.14 d)::
3559 :: EXPR :: modify :: D :: v463[#(135)] = #(14.19 d)::
3563 :: EXPR :: modify :: D :: v463[#(136)] = #(14.25 d)::
3567 :: EXPR :: modify :: D :: v463[#(137)] = #(14.3 d)::
3571 :: EXPR :: modify :: D :: v463[#(138)] = #(14.35 d)::
3575 :: EXPR :: modify :: D :: v463[#(139)] = #(14.41 d)::
3579 :: EXPR :: modify :: D :: v463[#(140)] = #(14.46 d)::
3583 :: EXPR :: modify :: D :: v463[#(141)] = #(14.51 d)::
3587 :: EXPR :: modify :: D :: v463[#(142)] = #(14.57 d)::
3591 :: EXPR :: modify :: D :: v463[#(143)] = #(14.62 d)::
3595 :: EXPR :: modify :: D :: v463[#(144)] = #(14.67 d)::
3599 :: EXPR :: modify :: D :: v463[#(145)] = #(14.72 d)::
3603 :: EXPR :: modify :: D :: v463[#(146)] = #(14.77 d)::
3607 :: EXPR :: modify :: D :: v463[#(147)] = #(14.83 d)::
3611 :: EXPR :: modify :: D :: v463[#(148)] = #(14.88 d)::
3615 :: EXPR :: modify :: D :: v463[#(149)] = #(14.93 d)::
5027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,5030:CD,5036:CD,5038:CD,5044:CD,5046:CD,5052:CD,5054:CD,5055:CD,5061:CD,5067
5030 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5036
5036 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
5038 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5044
5044 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
5046 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5052
5052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
5054 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
5055 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,5057
5057 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
5061 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,5063
5063 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
5067 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,5069
5069 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
5116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,5119:CD,5138
5119 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
5120 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
5124 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
5128 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
5132 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
5138 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
5139 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
5143 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
5147 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
5151 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
5186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,5190:CD,5225:CD,5230:CD,5234:CD,5239:CD,5256
5190 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
5225 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
5230 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
5234 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
5239 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
5256 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
5282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,5285:CD,5286:JM,36544:JM,36547:JM,36550:JM,36553:JM,36556:JM,36559:JM,36529:JM,36562:JM,36532:JM,36565:JM,36535:JM,36568:JM,36538:JM,36571:JM,36541:CD,5314:CD,5316:CD,5317:CD,5373:CD,5375:CD,5376:CD,5432:CD,5434:CD,5435:CD,5475:CD,5477:CD,5478:CD,5506:CD,5508:CD,5509:CD,5537:CD,5539:CD,5564:CD,5566:CD,5567:CD,5595:CD,5597:CD,5598:CD,5630:CD,5632:CD,5633:CD,5669:CD,5671:CD,5672:CD,5704:CD,5706:CD,5731:CD,5733:CD,5734:CD,5766:CD,5768:CD,5769:CD,5801:CD,5803:CD,5804:CD,5840:CD,5842:CD,5843:CD,5899:CD,5901:CD,5902:CD,5958:CD,5960:CD,5961:CD,6017:CD,6019:CD,6020:CD,6076:CD,6078:CD,6103:CD,6105:CD,6106:CD,6138:CD,6140:CD,6141:CD,6173:CD,6175:CD,6176:CD,6212:CD,6214:CD,6215:CD,6259:CD,6261:CD,6262:CD,6310:CD,6312:CD,6313:CD,6369:CD,6371:CD,6372:CD,6436:CD,6438:CD,6439:CD,6495:CD,6497:CD,6498:CD,6546:CD,6548:CD,6549:CD,6593:CD,6595:CD,6596:CD,6636:CD,6638:CD,6639:CD,6671:CD,6673:CD,6674:CD,6710:CD,6712:CD,6713:CD,6769:CD,6771:CD,6772:CD,6816:CD,6818:CD,6819:CD,6863:CD,6865:CD,6866:CD,6918:CD,6920:CD,6921:CD,6949:CD,6951:CD,6952:CD,6984:CD,6986:CD,6987:CD,7019:CD,7021:CD,7022:CD,7058:CD,7060:CD,7061:CD,7101:CD,7103:CD,7104:CD,7152:CD,7154:CD,7155:CD,7211:CD,7213:CD,7214:CD,7274:CD,7276:CD,7277:CD,7337:CD,7339:CD,7340:CD,7392:CD,7394:CD,7395:CD,7431:CD,7433:CD,7434:CD,7474:CD,7476:CD,7477:CD,7509:CD,7511:CD,7512:CD,7548:CD,7550:CD,7551:CD,7587:CD,7589:CD,7590:CD,7626:CD,7628:CD,7629:CD,7673:CD,7675:CD,7676:CD,7724:CD,7726:CD,7727:CD,7771:CD,7773:CD,7774:CD,7806:CD,7808:CD,7809:CD,7837:CD,7839:CD,7840:CD,7872:CD,7874:CD,7875:CD,7911:CD,7913:CD,7914:CD,7950:CD,7952:CD,7953:CD,7989:CD,7991:CD,7992:CD,8024:CD,8026:CD,8027:CD,8059:CD,8061:CD,8062:CD,8094:CD,8096:CD,8097:CD,8133:CD,8135:CD,8136:CD,8176:CD,8178:CD,8179:CD,8215:CD,8217:CD,8218:CD,8250:CD,8252:CD,8253:CD,8285:CD,8287:CD,8288:CD,8324:CD,8326:CD,8327:CD,8359:CD,8361:CD,8362:CD,8390:CD,8392:CD,8393:CD,8429:CD,8431:CD,8432:CD,8476:CD,8478:CD,8479:CD,8535:CD,8537:CD,8538:CD,8598:CD,8600:CD,8601:CD,8665:CD,8667:CD,8668:CD,8728:CD,8730:CD,8731:CD,8787:CD,8789:CD,8790:CD,8834:CD,8836:CD,8837:CD,8873:CD,8875:CD,8876:CD,8912:CD,8914:CD,8915:CD,8951:CD,8953:CD,8954:CD,8994:CD,8996:CD,8997:CD,9041:CD,9043:CD,9044:CD,9088:CD,9090:CD,9091:CD,9123:CD,9125:CD,9126:CD,9154:CD,9156:CD,9157:CD,9185:CD,9187:CD,9188:CD,9220:CD,9222:CD,9223:CD,9259:CD,9261:CD,9262:CD,9302:CD,9304:CD,9305:CD,9349:CD,9351:CD,9352:CD,9396:CD,9398:CD,9399:CD,9447:CD,9449:CD,9450:CD,9498:CD,9500:CD,9501:CD,9533:CD,9535:CD,9536:CD,9572:CD,9574:CD,9575:CD,9611:CD,9613:CD,9614:CD,9646:CD,9648:CD,9649:CD,9681:CD,9683:CD,9684:CD,9716:CD,9718:CD,9719:CD,9751:CD,9753:CD,9754:CD,9782:CD,9784:CD,9808:CD,9810:CD,9811:CD,9817:CD,9823:CD,9829:CD,9835:CD,9841:CD,9847:CD,9853:CD,9859:CD,9865:CD,9871:CD,9877:CD,9883:CD,9889:CD,9895:CD,9901:CD,9907:CD,9913:CD,9919:CD,9925:CD,9931:CD,9937:CD,9943:CD,9949:CD,9955:CD,9961:CD,9967:CD,9973:CD,9979:CD,9985:CD,9991:CD,9997:CD,10003:CD,10009:CD,10015:CD,10021:CD,10027:CD,10033:CD,10039:CD,10045:CD,10051:CD,10057:CD,10063:CD,10069:CD,10075:CD,10081:CD,10087:CD,10093:CD,10099:CD,10105:CD,10111:CD,10117:CD,10123:CD,10129:CD,10135:CD,10141:CD,10147:CD,10153:CD,10159:CD,10165:CD,10171:CD,10177:CD,10183:CD,10189:CD,10195:CD,10201:CD,10207:CD,10213:CD,10219:CD,10225:CD,10231:CD,10237:CD,10243:CD,10249:CD,10255:CD,10261:CD,10267:CD,10273:CD,10279:CD,10285:CD,10291:CD,10297:CD,10303:CD,10309:CD,10315:CD,10321:CD,10327:CD,10333:CD,10339:CD,10345:CD,10351:CD,10357:CD,10363:CD,10369:CD,10375:CD,10381:CD,10387:CD,10393:CD,10399:CD,10405:CD,10411:CD,10417:CD,10423:CD,10429:CD,10435:CD,10441:CD,10449:CD,10455:CD,10458:CD,10481:CD,10483
5285 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,5314:CF,5286
5286 :: NORM :: declaration :: [I :: v10 = new []::
5287 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
5314 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
5316 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,5373:CF,5317
5317 :: NORM :: declaration :: [I :: v24 = new []::
5318 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
5322 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
5326 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
5330 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
5334 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
5338 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
5342 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
5346 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
5373 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
5375 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,5432:CF,5376
5376 :: NORM :: declaration :: [I :: v41 = new []::
5377 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
5381 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
5385 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
5389 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
5393 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
5397 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
5401 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
5405 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
5432 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
5434 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,5475:CF,5435
5435 :: NORM :: declaration :: [I :: v51 = new []::
5436 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
5440 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
5444 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
5448 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
5475 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
5477 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,5506:CF,5478
5478 :: NORM :: declaration :: [I :: v58 = new []::
5479 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
5506 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
5508 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,5537:CF,5509
5509 :: NORM :: declaration :: [I :: v64 = new []::
5510 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
5537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
5539 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,5564
5564 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
5566 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,5595:CF,5567
5567 :: NORM :: declaration :: [I :: v83 = new []::
5568 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
5595 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
5597 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,5630:CF,5598
5598 :: NORM :: declaration :: [I :: v92 = new []::
5599 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
5603 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
5630 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
5632 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,5669:CF,5633
5633 :: NORM :: declaration :: [I :: v101 = new []::
5634 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
5638 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
5642 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
5669 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
5671 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,5704:CF,5672
5672 :: NORM :: declaration :: [I :: v111 = new []::
5673 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
5677 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
5704 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
5706 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,5731
5731 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
5733 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,5766:CF,5734
5734 :: NORM :: declaration :: [I :: v130 = new []::
5735 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
5739 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
5766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
5768 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,5801:CF,5769
5769 :: NORM :: declaration :: [I :: v140 = new []::
5770 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
5774 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
5801 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
5803 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,5840:CF,5804
5804 :: NORM :: declaration :: [I :: v149 = new []::
5805 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
5809 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
5813 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
5840 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
5842 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,5899:CF,5843
5843 :: NORM :: declaration :: [I :: v159 = new []::
5844 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
5848 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
5852 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
5856 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
5860 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
5864 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
5868 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
5872 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
5899 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
5901 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,5958:CF,5902
5902 :: NORM :: declaration :: [I :: v170 = new []::
5903 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
5907 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
5911 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
5915 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
5919 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
5923 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
5927 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
5931 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
5958 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
5960 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,6017:CF,5961
5961 :: NORM :: declaration :: [I :: v181 = new []::
5962 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
5966 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
5970 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
5974 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
5978 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
5982 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
5986 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
5990 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
6017 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
6019 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,6076:CF,6020
6020 :: NORM :: declaration :: [I :: v192 = new []::
6021 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
6025 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
6029 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
6033 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
6037 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
6041 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
6045 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
6049 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
6076 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
6078 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,6103
6103 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
6105 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,6138:CF,6106
6106 :: NORM :: declaration :: [I :: v211 = new []::
6107 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
6111 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
6138 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
6140 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,6173:CF,6141
6141 :: NORM :: declaration :: [I :: v219 = new []::
6142 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
6146 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
6173 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
6175 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,6212:CF,6176
6176 :: NORM :: declaration :: [I :: v230 = new []::
6177 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
6181 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
6185 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
6212 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
6214 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,6259:CF,6215
6215 :: NORM :: declaration :: [I :: v239 = new []::
6216 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
6220 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
6224 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
6228 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
6232 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
6259 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
6261 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,6310:CF,6262
6262 :: NORM :: declaration :: [I :: v248 = new []::
6263 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
6267 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
6271 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
6275 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
6279 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
6283 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
6310 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
6312 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,6369:CF,6313
6313 :: NORM :: declaration :: [I :: v258 = new []::
6314 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
6318 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
6322 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
6326 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
6330 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
6334 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
6338 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
6342 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
6369 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
6371 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,6436:CF,6372
6372 :: NORM :: declaration :: [I :: v269 = new []::
6373 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
6377 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
6381 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
6385 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
6389 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
6393 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
6397 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
6401 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
6405 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
6409 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
6436 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
6438 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,6495:CF,6439
6439 :: NORM :: declaration :: [I :: v276 = new []::
6440 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
6444 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
6448 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
6452 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
6456 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
6460 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
6464 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
6468 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
6495 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
6497 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,6546:CF,6498
6498 :: NORM :: declaration :: [I :: v285 = new []::
6499 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
6503 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
6507 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
6511 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
6515 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
6519 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
6546 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
6548 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,6593:CF,6549
6549 :: NORM :: declaration :: [I :: v295 = new []::
6550 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
6554 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
6558 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
6562 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
6566 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
6593 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
6595 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,6636:CF,6596
6596 :: NORM :: declaration :: [I :: v305 = new []::
6597 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
6601 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
6605 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
6609 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
6636 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
6638 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,6671:CF,6639
6639 :: NORM :: declaration :: [I :: v313 = new []::
6640 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
6644 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
6671 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
6673 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,6710:CF,6674
6674 :: NORM :: declaration :: [I :: v321 = new []::
6675 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
6679 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
6683 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
6710 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
6712 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,6769:CF,6713
6713 :: NORM :: declaration :: [I :: v329 = new []::
6714 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
6718 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
6722 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
6726 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
6730 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
6734 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
6738 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
6742 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
6769 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
6771 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,6816:CF,6772
6772 :: NORM :: declaration :: [I :: v338 = new []::
6773 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
6777 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
6781 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
6785 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
6789 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
6816 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
6818 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,6863:CF,6819
6819 :: NORM :: declaration :: [I :: v348 = new []::
6820 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
6824 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
6828 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
6832 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
6836 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
6863 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
6865 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,6918:CF,6866
6866 :: NORM :: declaration :: [I :: v355 = new []::
6867 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
6871 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
6875 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
6879 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
6883 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
6887 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
6891 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
6918 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
6920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,6949:CF,6921
6921 :: NORM :: declaration :: [I :: v364 = new []::
6922 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
6949 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
6951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,6984:CF,6952
6952 :: NORM :: declaration :: [I :: v374 = new []::
6953 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
6957 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
6984 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
6986 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,7019:CF,6987
6987 :: NORM :: declaration :: [I :: v382 = new []::
6988 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
6992 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
7019 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
7021 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,7058:CF,7022
7022 :: NORM :: declaration :: [I :: v391 = new []::
7023 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
7027 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
7031 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
7058 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
7060 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,7101:CF,7061
7061 :: NORM :: declaration :: [I :: v401 = new []::
7062 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
7066 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
7070 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
7074 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
7101 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
7103 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,7152:CF,7104
7104 :: NORM :: declaration :: [I :: v411 = new []::
7105 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
7109 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
7113 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
7117 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
7121 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
7125 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
7152 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
7154 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,7211:CF,7155
7155 :: NORM :: declaration :: [I :: v420 = new []::
7156 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
7160 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
7164 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
7168 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
7172 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
7176 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
7180 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
7184 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
7211 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
7213 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,7274:CF,7214
7214 :: NORM :: declaration :: [I :: v431 = new []::
7215 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
7219 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
7223 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
7227 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
7231 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
7235 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
7239 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
7243 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
7247 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
7274 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
7276 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,7337:CF,7277
7277 :: NORM :: declaration :: [I :: v440 = new []::
7278 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
7282 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
7286 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
7290 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
7294 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
7298 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
7302 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
7306 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
7310 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
7337 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
7339 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,7392:CF,7340
7340 :: NORM :: declaration :: [I :: v448 = new []::
7341 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
7345 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
7349 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
7353 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
7357 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
7361 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
7365 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
7392 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
7394 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,7431:CF,7395
7395 :: NORM :: declaration :: [I :: v456 = new []::
7396 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
7400 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
7404 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
7431 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
7433 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,7474:CF,7434
7434 :: NORM :: declaration :: [I :: v463 = new []::
7435 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
7439 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
7443 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
7447 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
7474 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
7476 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,7509:CF,7477
7477 :: NORM :: declaration :: [I :: v471 = new []::
7478 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
7482 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
7509 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
7511 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,7548:CF,7512
7512 :: NORM :: declaration :: [I :: v479 = new []::
7513 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
7517 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
7521 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
7548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
7550 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,7587:CF,7551
7551 :: NORM :: declaration :: [I :: v490 = new []::
7552 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
7556 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
7560 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
7587 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
7589 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,7626:CF,7590
7590 :: NORM :: declaration :: [I :: v498 = new []::
7591 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
7595 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
7599 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
7626 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
7628 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,7673:CF,7629
7629 :: NORM :: declaration :: [I :: v507 = new []::
7630 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
7634 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
7638 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
7642 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
7646 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
7673 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
7675 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,7724:CF,7676
7676 :: NORM :: declaration :: [I :: v515 = new []::
7677 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
7681 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
7685 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
7689 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
7693 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
7697 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
7724 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
7726 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,7771:CF,7727
7727 :: NORM :: declaration :: [I :: v524 = new []::
7728 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
7732 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
7736 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
7740 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
7744 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
7771 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
7773 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,7806:CF,7774
7774 :: NORM :: declaration :: [I :: v533 = new []::
7775 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
7779 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
7806 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
7808 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,7837:CF,7809
7809 :: NORM :: declaration :: [I :: v542 = new []::
7810 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
7837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
7839 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,7872:CF,7840
7840 :: NORM :: declaration :: [I :: v549 = new []::
7841 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
7845 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
7872 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
7874 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,7911:CF,7875
7875 :: NORM :: declaration :: [I :: v557 = new []::
7876 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
7880 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
7884 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
7911 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
7913 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,7950:CF,7914
7914 :: NORM :: declaration :: [I :: v565 = new []::
7915 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
7919 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
7923 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
7950 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
7952 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,7989:CF,7953
7953 :: NORM :: declaration :: [I :: v572 = new []::
7954 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
7958 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
7962 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
7989 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
7991 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,8024:CF,7992
7992 :: NORM :: declaration :: [I :: v580 = new []::
7993 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
7997 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
8024 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
8026 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,8059:CF,8027
8027 :: NORM :: declaration :: [I :: v589 = new []::
8028 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
8032 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
8059 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
8061 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,8094:CF,8062
8062 :: NORM :: declaration :: [I :: v598 = new []::
8063 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
8067 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
8094 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
8096 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,8133:CF,8097
8097 :: NORM :: declaration :: [I :: v605 = new []::
8098 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
8102 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
8106 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
8133 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
8135 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,8176:CF,8136
8136 :: NORM :: declaration :: [I :: v614 = new []::
8137 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
8141 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
8145 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
8149 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
8176 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
8178 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,8215:CF,8179
8179 :: NORM :: declaration :: [I :: v621 = new []::
8180 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
8184 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
8188 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
8215 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
8217 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,8250:CF,8218
8218 :: NORM :: declaration :: [I :: v628 = new []::
8219 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
8223 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
8250 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
8252 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,8285:CF,8253
8253 :: NORM :: declaration :: [I :: v638 = new []::
8254 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
8258 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
8285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
8287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,8324:CF,8288
8288 :: NORM :: declaration :: [I :: v646 = new []::
8289 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
8293 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
8297 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
8324 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
8326 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,8359:CF,8327
8327 :: NORM :: declaration :: [I :: v654 = new []::
8328 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
8332 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
8359 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
8361 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,8390:CF,8362
8362 :: NORM :: declaration :: [I :: v662 = new []::
8363 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
8390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
8392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,8429:CF,8393
8393 :: NORM :: declaration :: [I :: v669 = new []::
8394 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
8398 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
8402 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
8429 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
8431 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,8476:CF,8432
8432 :: NORM :: declaration :: [I :: v677 = new []::
8433 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
8437 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
8441 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
8445 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
8449 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
8476 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
8478 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,8535:CF,8479
8479 :: NORM :: declaration :: [I :: v685 = new []::
8480 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
8484 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
8488 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
8492 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
8496 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
8500 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
8504 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
8508 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
8535 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
8537 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,8598:CF,8538
8538 :: NORM :: declaration :: [I :: v694 = new []::
8539 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
8543 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
8547 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
8551 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
8555 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
8559 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
8563 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
8567 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
8571 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
8598 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
8600 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,8665:CF,8601
8601 :: NORM :: declaration :: [I :: v701 = new []::
8602 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
8606 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
8610 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
8614 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
8618 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
8622 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
8626 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
8630 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
8634 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
8638 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
8665 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
8667 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,8728:CF,8668
8668 :: NORM :: declaration :: [I :: v707 = new []::
8669 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
8673 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
8677 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
8681 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
8685 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
8689 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
8693 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
8697 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
8701 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
8728 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
8730 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,8787:CF,8731
8731 :: NORM :: declaration :: [I :: v713 = new []::
8732 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
8736 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
8740 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
8744 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
8748 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
8752 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
8756 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
8760 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
8787 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
8789 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,8834:CF,8790
8790 :: NORM :: declaration :: [I :: v720 = new []::
8791 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
8795 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
8799 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
8803 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
8807 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
8834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
8836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,8873:CF,8837
8837 :: NORM :: declaration :: [I :: v727 = new []::
8838 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
8842 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
8846 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
8873 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
8875 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,8912:CF,8876
8876 :: NORM :: declaration :: [I :: v735 = new []::
8877 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
8881 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
8885 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
8912 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
8914 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,8951:CF,8915
8915 :: NORM :: declaration :: [I :: v742 = new []::
8916 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
8920 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
8924 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
8951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
8953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,8994:CF,8954
8954 :: NORM :: declaration :: [I :: v750 = new []::
8955 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
8959 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
8963 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
8967 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
8994 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
8996 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,9041:CF,8997
8997 :: NORM :: declaration :: [I :: v757 = new []::
8998 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
9002 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
9006 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
9010 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
9014 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
9041 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
9043 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,9088:CF,9044
9044 :: NORM :: declaration :: [I :: v764 = new []::
9045 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
9049 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
9053 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
9057 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
9061 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
9088 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
9090 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,9123:CF,9091
9091 :: NORM :: declaration :: [I :: v771 = new []::
9092 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
9096 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
9123 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
9125 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,9154:CF,9126
9126 :: NORM :: declaration :: [I :: v778 = new []::
9127 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
9154 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
9156 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,9185:CF,9157
9157 :: NORM :: declaration :: [I :: v787 = new []::
9158 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
9185 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
9187 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,9220:CF,9188
9188 :: NORM :: declaration :: [I :: v794 = new []::
9189 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
9193 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
9220 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
9222 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,9259:CF,9223
9223 :: NORM :: declaration :: [I :: v802 = new []::
9224 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
9228 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
9232 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
9259 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
9261 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,9302:CF,9262
9262 :: NORM :: declaration :: [I :: v808 = new []::
9263 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
9267 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
9271 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
9275 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
9302 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
9304 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,9349:CF,9305
9305 :: NORM :: declaration :: [I :: v816 = new []::
9306 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
9310 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
9314 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
9318 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
9322 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
9349 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
9351 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,9396:CF,9352
9352 :: NORM :: declaration :: [I :: v823 = new []::
9353 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
9357 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
9361 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
9365 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
9369 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
9396 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
9398 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,9447:CF,9399
9399 :: NORM :: declaration :: [I :: v829 = new []::
9400 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
9404 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
9408 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
9412 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
9416 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
9420 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
9447 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
9449 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,9498:CF,9450
9450 :: NORM :: declaration :: [I :: v835 = new []::
9451 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
9455 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
9459 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
9463 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
9467 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
9471 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
9498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
9500 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,9533:CF,9501
9501 :: NORM :: declaration :: [I :: v841 = new []::
9502 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
9506 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
9533 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
9535 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,9572:CF,9536
9536 :: NORM :: declaration :: [I :: v848 = new []::
9537 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
9541 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
9545 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
9572 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
9574 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,9611:CF,9575
9575 :: NORM :: declaration :: [I :: v854 = new []::
9576 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
9580 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
9584 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
9611 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
9613 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,9646:CF,9614
9614 :: NORM :: declaration :: [I :: v860 = new []::
9615 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
9619 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
9646 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
9648 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,9681:CF,9649
9649 :: NORM :: declaration :: [I :: v866 = new []::
9650 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
9654 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
9681 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
9683 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,9716:CF,9684
9684 :: NORM :: declaration :: [I :: v872 = new []::
9685 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
9689 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
9716 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
9718 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,9751:CF,9719
9719 :: NORM :: declaration :: [I :: v877 = new []::
9720 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
9724 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
9751 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
9753 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,9782:CF,9754
9754 :: NORM :: declaration :: [I :: v883 = new []::
9755 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
9782 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
9784 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,9808
9808 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
9810 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
9811 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,9813
9813 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
9817 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,9819
9819 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
9823 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,9825
9825 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
9829 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,9831
9831 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
9835 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,9837
9837 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
9841 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,9843
9843 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
9847 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,9849
9849 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
9853 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,9855
9855 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
9859 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,9861
9861 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
9865 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,9867
9867 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
9871 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,9873
9873 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
9877 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,9879
9879 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
9883 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,9885
9885 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
9889 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,9891
9891 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
9895 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,9897
9897 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
9901 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,9903
9903 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
9907 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,9909
9909 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
9913 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,9915
9915 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
9919 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,9921
9921 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
9925 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,9927
9927 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
9931 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,9933
9933 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
9937 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,9939
9939 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
9943 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,9945
9945 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
9949 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,9951
9951 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
9955 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,9957
9957 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
9961 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,9963
9963 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
9967 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,9969
9969 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
9973 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,9975
9975 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
9979 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,9981
9981 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
9985 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,9987
9987 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
9991 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,9993
9993 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
9997 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,9999
9999 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
10003 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,10005
10005 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
10009 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,10011
10011 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
10015 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,10017
10017 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
10021 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,10023
10023 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
10027 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,10029
10029 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
10033 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,10035
10035 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
10039 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,10041
10041 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
10045 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,10047
10047 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
10051 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,10053
10053 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
10057 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,10059
10059 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
10063 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,10065
10065 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
10069 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,10071
10071 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
10075 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,10077
10077 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
10081 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,10083
10083 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
10087 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,10089
10089 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
10093 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,10095
10095 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
10099 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,10101
10101 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
10105 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,10107
10107 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
10111 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,10113
10113 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
10117 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,10119
10119 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
10123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,10125
10125 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
10129 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,10131
10131 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
10135 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,10137
10137 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
10141 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,10143
10143 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
10147 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,10149
10149 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
10153 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,10155
10155 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
10159 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,10161
10161 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
10165 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,10167
10167 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
10171 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,10173
10173 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
10177 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,10179
10179 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
10183 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,10185
10185 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
10189 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,10191
10191 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
10195 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,10197
10197 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
10201 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,10203
10203 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
10207 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,10209
10209 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
10213 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,10215
10215 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
10219 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,10221
10221 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
10225 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,10227
10227 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
10231 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,10233
10233 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
10237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,10239
10239 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
10243 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,10245
10245 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
10249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,10251
10251 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
10255 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,10257
10257 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
10261 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,10263
10263 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
10267 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,10269
10269 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
10273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,10275
10275 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
10279 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,10281
10281 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
10285 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,10287
10287 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
10291 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,10293
10293 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
10297 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,10299
10299 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
10303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,10305
10305 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
10309 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,10311
10311 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
10315 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,10317
10317 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
10321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,10323
10323 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
10327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,10329
10329 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
10333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,10335
10335 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
10339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,10341
10341 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
10345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,10347
10347 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
10351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,10353
10353 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
10357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,10359
10359 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
10363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,10365
10365 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
10369 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,10371
10371 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
10375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,10377
10377 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
10381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,10383
10383 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
10387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,10389
10389 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
10393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,10395
10395 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
10399 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,10401
10401 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
10405 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,10407
10407 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
10411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,10413
10413 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
10417 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,10419
10419 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
10423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,10425
10425 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
10429 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,10431
10431 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
10435 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,10437
10437 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
10441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,10443
10443 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
10449 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
10455 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,10458:CL,36608
10458 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,10481
10474 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
10480 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,10483
10481 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,10474:CD,10480:CD,10483
10483 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,10480:DD,10481
14107 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.<clinit>()::CD,14117:CD,14118:CD,14195:CD,14268:CD,14357:CD,14442:CD,14519:CD,14588:CD,14669:CD,14734:CD,14807:CD,14876:CD,14957:CD,15034:CD,15111:CD,15192:CD,15277:CD,15362:CD,15443:CD,15520:CD,15609:CD,15698:CD,15789:CD,15790:CD,15798:CD,15806:CD,15814:CD,15822:CD,15830:CD,15838:CD,15846:CD,15854:CD,15862:CD,15870:CD,15878:CD,15886:CD,15894:CD,15902:CD,15910:CD,15918:CD,15926:CD,15934:CD,15942:CD,15950:CD,15958:CD,15960:CD,15962
14117 :: NORM :: declaration :: [[I :: v6 = new [][]::CF,14118
14118 :: NORM :: declaration :: [I :: v8 = new []::DD,14191
14119 :: EXPR :: modify :: I :: v8[#(0)] = #(6)::
14123 :: EXPR :: modify :: I :: v8[#(2)] = #(-2)::
14127 :: EXPR :: modify :: I :: v8[#(3)] = #(-3)::
14131 :: EXPR :: modify :: I :: v8[#(4)] = #(-2)::
14135 :: EXPR :: modify :: I :: v8[#(6)] = #(-1)::
14139 :: EXPR :: modify :: I :: v8[#(8)] = #(-2)::
14143 :: EXPR :: modify :: I :: v8[#(9)] = #(-2)::
14147 :: EXPR :: modify :: I :: v8[#(10)] = #(-2)::
14151 :: EXPR :: modify :: I :: v8[#(11)] = #(-2)::
14155 :: EXPR :: modify :: I :: v8[#(12)] = #(-2)::
14159 :: EXPR :: modify :: I :: v8[#(13)] = #(-3)::
14163 :: EXPR :: modify :: I :: v8[#(14)] = #(-4)::
14167 :: EXPR :: modify :: I :: v8[#(15)] = #(-4)::
14171 :: EXPR :: modify :: I :: v8[#(16)] = #(-3)::
14175 :: EXPR :: modify :: I :: v8[#(17)] = #(-3)::
14179 :: EXPR :: modify :: I :: v8[#(18)] = #(-3)::
14183 :: EXPR :: modify :: I :: v8[#(19)] = #(-2)::
14187 :: EXPR :: modify :: I :: v8[#(20)] = #(-4)::
14191 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
14195 :: NORM :: declaration :: [I :: v31 = new []::DD,14264
14196 :: EXPR :: modify :: I :: v31[#(1)] = #(4)::
14200 :: EXPR :: modify :: I :: v31[#(2)] = #(-1)::
14204 :: EXPR :: modify :: I :: v31[#(5)] = #(1)::
14208 :: EXPR :: modify :: I :: v31[#(6)] = #(-2)::
14212 :: EXPR :: modify :: I :: v31[#(7)] = #(-2)::
14216 :: EXPR :: modify :: I :: v31[#(8)] = #(-1)::
14220 :: EXPR :: modify :: I :: v31[#(9)] = #(-1)::
14224 :: EXPR :: modify :: I :: v31[#(10)] = #(-1)::
14228 :: EXPR :: modify :: I :: v31[#(11)] = #(-2)::
14232 :: EXPR :: modify :: I :: v31[#(12)] = #(-1)::
14236 :: EXPR :: modify :: I :: v31[#(14)] = #(-1)::
14240 :: EXPR :: modify :: I :: v31[#(15)] = #(-1)::
14244 :: EXPR :: modify :: I :: v31[#(16)] = #(-1)::
14248 :: EXPR :: modify :: I :: v31[#(17)] = #(-2)::
14252 :: EXPR :: modify :: I :: v31[#(18)] = #(-2)::
14256 :: EXPR :: modify :: I :: v31[#(19)] = #(-3)::
14260 :: EXPR :: modify :: I :: v31[#(20)] = #(-4)::
14264 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v31::
14268 :: NORM :: declaration :: [I :: v34 = new []::DD,14353
14269 :: EXPR :: modify :: I :: v34[#(0)] = #(-2)::
14273 :: EXPR :: modify :: I :: v34[#(1)] = #(-1)::
14277 :: EXPR :: modify :: I :: v34[#(2)] = #(7)::
14281 :: EXPR :: modify :: I :: v34[#(3)] = #(-3)::
14285 :: EXPR :: modify :: I :: v34[#(4)] = #(-1)::
14289 :: EXPR :: modify :: I :: v34[#(5)] = #(-1)::
14293 :: EXPR :: modify :: I :: v34[#(6)] = #(-1)::
14297 :: EXPR :: modify :: I :: v34[#(7)] = #(-2)::
14301 :: EXPR :: modify :: I :: v34[#(8)] = #(-1)::
14305 :: EXPR :: modify :: I :: v34[#(9)] = #(-1)::
14309 :: EXPR :: modify :: I :: v34[#(10)] = #(-1)::
14313 :: EXPR :: modify :: I :: v34[#(11)] = #(-2)::
14317 :: EXPR :: modify :: I :: v34[#(12)] = #(-2)::
14321 :: EXPR :: modify :: I :: v34[#(13)] = #(-2)::
14325 :: EXPR :: modify :: I :: v34[#(14)] = #(-3)::
14329 :: EXPR :: modify :: I :: v34[#(15)] = #(-3)::
14333 :: EXPR :: modify :: I :: v34[#(16)] = #(-2)::
14337 :: EXPR :: modify :: I :: v34[#(17)] = #(-4)::
14341 :: EXPR :: modify :: I :: v34[#(18)] = #(-3)::
14345 :: EXPR :: modify :: I :: v34[#(19)] = #(-4)::
14349 :: EXPR :: modify :: I :: v34[#(20)] = #(-4)::
14353 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = v34::
14357 :: NORM :: declaration :: [I :: v35 = new []::DD,14438
14358 :: EXPR :: modify :: I :: v35[#(0)] = #(-3)::
14362 :: EXPR :: modify :: I :: v35[#(2)] = #(-3)::
14366 :: EXPR :: modify :: I :: v35[#(3)] = #(9)::
14370 :: EXPR :: modify :: I :: v35[#(4)] = #(-1)::
14374 :: EXPR :: modify :: I :: v35[#(5)] = #(-1)::
14378 :: EXPR :: modify :: I :: v35[#(6)] = #(-3)::
14382 :: EXPR :: modify :: I :: v35[#(7)] = #(-3)::
14386 :: EXPR :: modify :: I :: v35[#(8)] = #(-4)::
14390 :: EXPR :: modify :: I :: v35[#(9)] = #(-3)::
14394 :: EXPR :: modify :: I :: v35[#(10)] = #(-3)::
14398 :: EXPR :: modify :: I :: v35[#(11)] = #(-3)::
14402 :: EXPR :: modify :: I :: v35[#(12)] = #(-3)::
14406 :: EXPR :: modify :: I :: v35[#(13)] = #(-1)::
14410 :: EXPR :: modify :: I :: v35[#(14)] = #(-1)::
14414 :: EXPR :: modify :: I :: v35[#(15)] = #(-1)::
14418 :: EXPR :: modify :: I :: v35[#(16)] = #(-1)::
14422 :: EXPR :: modify :: I :: v35[#(17)] = #(-2)::
14426 :: EXPR :: modify :: I :: v35[#(18)] = #(-2)::
14430 :: EXPR :: modify :: I :: v35[#(19)] = #(-2)::
14434 :: EXPR :: modify :: I :: v35[#(20)] = #(-4)::
14438 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(3)] = v35::
14442 :: NORM :: declaration :: [I :: v36 = new []::DD,14515
14443 :: EXPR :: modify :: I :: v36[#(0)] = #(-2)::
14447 :: EXPR :: modify :: I :: v36[#(2)] = #(-1)::
14451 :: EXPR :: modify :: I :: v36[#(3)] = #(-1)::
14455 :: EXPR :: modify :: I :: v36[#(4)] = #(5)::
14459 :: EXPR :: modify :: I :: v36[#(5)] = #(1)::
14463 :: EXPR :: modify :: I :: v36[#(6)] = #(-1)::
14467 :: EXPR :: modify :: I :: v36[#(8)] = #(-1)::
14471 :: EXPR :: modify :: I :: v36[#(9)] = #(-1)::
14475 :: EXPR :: modify :: I :: v36[#(10)] = #(-1)::
14479 :: EXPR :: modify :: I :: v36[#(11)] = #(-2)::
14483 :: EXPR :: modify :: I :: v36[#(12)] = #(-1)::
14487 :: EXPR :: modify :: I :: v36[#(14)] = #(-1)::
14491 :: EXPR :: modify :: I :: v36[#(15)] = #(-1)::
14495 :: EXPR :: modify :: I :: v36[#(16)] = #(-1)::
14499 :: EXPR :: modify :: I :: v36[#(17)] = #(-2)::
14503 :: EXPR :: modify :: I :: v36[#(18)] = #(-2)::
14507 :: EXPR :: modify :: I :: v36[#(19)] = #(-2)::
14511 :: EXPR :: modify :: I :: v36[#(20)] = #(-4)::
14515 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v36::
14519 :: NORM :: declaration :: [I :: v37 = new []::DD,14584
14520 :: EXPR :: modify :: I :: v37[#(1)] = #(1)::
14524 :: EXPR :: modify :: I :: v37[#(2)] = #(-1)::
14528 :: EXPR :: modify :: I :: v37[#(3)] = #(-1)::
14532 :: EXPR :: modify :: I :: v37[#(4)] = #(1)::
14536 :: EXPR :: modify :: I :: v37[#(5)] = #(4)::
14540 :: EXPR :: modify :: I :: v37[#(7)] = #(1)::
14544 :: EXPR :: modify :: I :: v37[#(11)] = #(-1)::
14548 :: EXPR :: modify :: I :: v37[#(12)] = #(-1)::
14552 :: EXPR :: modify :: I :: v37[#(13)] = #(-2)::
14556 :: EXPR :: modify :: I :: v37[#(14)] = #(-2)::
14560 :: EXPR :: modify :: I :: v37[#(15)] = #(-2)::
14564 :: EXPR :: modify :: I :: v37[#(16)] = #(-1)::
14568 :: EXPR :: modify :: I :: v37[#(17)] = #(-2)::
14572 :: EXPR :: modify :: I :: v37[#(18)] = #(-2)::
14576 :: EXPR :: modify :: I :: v37[#(19)] = #(-3)::
14580 :: EXPR :: modify :: I :: v37[#(20)] = #(-4)::
14584 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(5)] = v37::
14588 :: NORM :: declaration :: [I :: v38 = new []::DD,14665
14589 :: EXPR :: modify :: I :: v38[#(0)] = #(-1)::
14593 :: EXPR :: modify :: I :: v38[#(1)] = #(-2)::
14597 :: EXPR :: modify :: I :: v38[#(2)] = #(-1)::
14601 :: EXPR :: modify :: I :: v38[#(3)] = #(-3)::
14605 :: EXPR :: modify :: I :: v38[#(4)] = #(-1)::
14609 :: EXPR :: modify :: I :: v38[#(6)] = #(6)::
14613 :: EXPR :: modify :: I :: v38[#(7)] = #(1)::
14617 :: EXPR :: modify :: I :: v38[#(8)] = #(2)::
14621 :: EXPR :: modify :: I :: v38[#(10)] = #(-1)::
14625 :: EXPR :: modify :: I :: v38[#(11)] = #(-1)::
14629 :: EXPR :: modify :: I :: v38[#(12)] = #(-2)::
14633 :: EXPR :: modify :: I :: v38[#(13)] = #(-3)::
14637 :: EXPR :: modify :: I :: v38[#(14)] = #(-3)::
14641 :: EXPR :: modify :: I :: v38[#(15)] = #(-4)::
14645 :: EXPR :: modify :: I :: v38[#(16)] = #(-3)::
14649 :: EXPR :: modify :: I :: v38[#(17)] = #(-3)::
14653 :: EXPR :: modify :: I :: v38[#(18)] = #(-3)::
14657 :: EXPR :: modify :: I :: v38[#(19)] = #(-4)::
14661 :: EXPR :: modify :: I :: v38[#(20)] = #(-4)::
14665 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(6)] = v38::
14669 :: NORM :: declaration :: [I :: v39 = new []::DD,14730
14670 :: EXPR :: modify :: I :: v39[#(1)] = #(-2)::
14674 :: EXPR :: modify :: I :: v39[#(2)] = #(-2)::
14678 :: EXPR :: modify :: I :: v39[#(3)] = #(-3)::
14682 :: EXPR :: modify :: I :: v39[#(5)] = #(1)::
14686 :: EXPR :: modify :: I :: v39[#(6)] = #(1)::
14690 :: EXPR :: modify :: I :: v39[#(7)] = #(6)::
14694 :: EXPR :: modify :: I :: v39[#(11)] = #(1)::
14698 :: EXPR :: modify :: I :: v39[#(13)] = #(-3)::
14702 :: EXPR :: modify :: I :: v39[#(14)] = #(-3)::
14706 :: EXPR :: modify :: I :: v39[#(15)] = #(-3)::
14710 :: EXPR :: modify :: I :: v39[#(16)] = #(-2)::
14714 :: EXPR :: modify :: I :: v39[#(17)] = #(-3)::
14718 :: EXPR :: modify :: I :: v39[#(18)] = #(-2)::
14722 :: EXPR :: modify :: I :: v39[#(19)] = #(-4)::
14726 :: EXPR :: modify :: I :: v39[#(20)] = #(-4)::
14730 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(7)] = v39::
14734 :: NORM :: declaration :: [I :: v40 = new []::DD,14803
14735 :: EXPR :: modify :: I :: v40[#(0)] = #(-2)::
14739 :: EXPR :: modify :: I :: v40[#(1)] = #(-1)::
14743 :: EXPR :: modify :: I :: v40[#(2)] = #(-1)::
14747 :: EXPR :: modify :: I :: v40[#(3)] = #(-4)::
14751 :: EXPR :: modify :: I :: v40[#(4)] = #(-1)::
14755 :: EXPR :: modify :: I :: v40[#(6)] = #(2)::
14759 :: EXPR :: modify :: I :: v40[#(8)] = #(5)::
14763 :: EXPR :: modify :: I :: v40[#(9)] = #(2)::
14767 :: EXPR :: modify :: I :: v40[#(10)] = #(1)::
14771 :: EXPR :: modify :: I :: v40[#(13)] = #(-2)::
14775 :: EXPR :: modify :: I :: v40[#(14)] = #(-3)::
14779 :: EXPR :: modify :: I :: v40[#(15)] = #(-3)::
14783 :: EXPR :: modify :: I :: v40[#(16)] = #(-2)::
14787 :: EXPR :: modify :: I :: v40[#(17)] = #(-3)::
14791 :: EXPR :: modify :: I :: v40[#(18)] = #(-2)::
14795 :: EXPR :: modify :: I :: v40[#(19)] = #(-3)::
14799 :: EXPR :: modify :: I :: v40[#(20)] = #(-4)::
14803 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(8)] = v40::
14807 :: NORM :: declaration :: [I :: v41 = new []::DD,14872
14808 :: EXPR :: modify :: I :: v41[#(0)] = #(-2)::
14812 :: EXPR :: modify :: I :: v41[#(1)] = #(-1)::
14816 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
14820 :: EXPR :: modify :: I :: v41[#(3)] = #(-3)::
14824 :: EXPR :: modify :: I :: v41[#(4)] = #(-1)::
14828 :: EXPR :: modify :: I :: v41[#(8)] = #(2)::
14832 :: EXPR :: modify :: I :: v41[#(9)] = #(5)::
14836 :: EXPR :: modify :: I :: v41[#(10)] = #(1)::
14840 :: EXPR :: modify :: I :: v41[#(12)] = #(1)::
14844 :: EXPR :: modify :: I :: v41[#(13)] = #(-2)::
14848 :: EXPR :: modify :: I :: v41[#(14)] = #(-3)::
14852 :: EXPR :: modify :: I :: v41[#(15)] = #(-2)::
14856 :: EXPR :: modify :: I :: v41[#(17)] = #(-3)::
14860 :: EXPR :: modify :: I :: v41[#(18)] = #(-1)::
14864 :: EXPR :: modify :: I :: v41[#(19)] = #(-2)::
14868 :: EXPR :: modify :: I :: v41[#(20)] = #(-4)::
14872 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(9)] = v41::
14876 :: NORM :: declaration :: [I :: v42 = new []::DD,14953
14877 :: EXPR :: modify :: I :: v42[#(0)] = #(-2)::
14881 :: EXPR :: modify :: I :: v42[#(1)] = #(-1)::
14885 :: EXPR :: modify :: I :: v42[#(2)] = #(-1)::
14889 :: EXPR :: modify :: I :: v42[#(3)] = #(-3)::
14893 :: EXPR :: modify :: I :: v42[#(4)] = #(-1)::
14897 :: EXPR :: modify :: I :: v42[#(6)] = #(-1)::
14901 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
14905 :: EXPR :: modify :: I :: v42[#(9)] = #(1)::
14909 :: EXPR :: modify :: I :: v42[#(10)] = #(5)::
14913 :: EXPR :: modify :: I :: v42[#(11)] = #(-1)::
14917 :: EXPR :: modify :: I :: v42[#(12)] = #(2)::
14921 :: EXPR :: modify :: I :: v42[#(13)] = #(-2)::
14925 :: EXPR :: modify :: I :: v42[#(14)] = #(-3)::
14929 :: EXPR :: modify :: I :: v42[#(15)] = #(-2)::
14933 :: EXPR :: modify :: I :: v42[#(16)] = #(-1)::
14937 :: EXPR :: modify :: I :: v42[#(17)] = #(-3)::
14941 :: EXPR :: modify :: I :: v42[#(18)] = #(-2)::
14945 :: EXPR :: modify :: I :: v42[#(19)] = #(-3)::
14949 :: EXPR :: modify :: I :: v42[#(20)] = #(-4)::
14953 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(10)] = v42::
14957 :: NORM :: declaration :: [I :: v43 = new []::DD,15030
14958 :: EXPR :: modify :: I :: v43[#(0)] = #(-2)::
14962 :: EXPR :: modify :: I :: v43[#(1)] = #(-2)::
14966 :: EXPR :: modify :: I :: v43[#(2)] = #(-2)::
14970 :: EXPR :: modify :: I :: v43[#(3)] = #(-3)::
14974 :: EXPR :: modify :: I :: v43[#(4)] = #(-2)::
14978 :: EXPR :: modify :: I :: v43[#(5)] = #(-1)::
14982 :: EXPR :: modify :: I :: v43[#(6)] = #(-1)::
14986 :: EXPR :: modify :: I :: v43[#(7)] = #(1)::
14990 :: EXPR :: modify :: I :: v43[#(10)] = #(-1)::
14994 :: EXPR :: modify :: I :: v43[#(11)] = #(8)::
14998 :: EXPR :: modify :: I :: v43[#(13)] = #(-3)::
15002 :: EXPR :: modify :: I :: v43[#(14)] = #(-3)::
15006 :: EXPR :: modify :: I :: v43[#(15)] = #(-3)::
15010 :: EXPR :: modify :: I :: v43[#(16)] = #(-2)::
15014 :: EXPR :: modify :: I :: v43[#(17)] = #(-1)::
15018 :: EXPR :: modify :: I :: v43[#(18)] = #(2)::
15022 :: EXPR :: modify :: I :: v43[#(19)] = #(-2)::
15026 :: EXPR :: modify :: I :: v43[#(20)] = #(-4)::
15030 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(11)] = v43::
15034 :: NORM :: declaration :: [I :: v44 = new []::DD,15107
15035 :: EXPR :: modify :: I :: v44[#(0)] = #(-2)::
15039 :: EXPR :: modify :: I :: v44[#(1)] = #(-1)::
15043 :: EXPR :: modify :: I :: v44[#(2)] = #(-2)::
15047 :: EXPR :: modify :: I :: v44[#(3)] = #(-3)::
15051 :: EXPR :: modify :: I :: v44[#(4)] = #(-1)::
15055 :: EXPR :: modify :: I :: v44[#(5)] = #(-1)::
15059 :: EXPR :: modify :: I :: v44[#(6)] = #(-2)::
15063 :: EXPR :: modify :: I :: v44[#(9)] = #(1)::
15067 :: EXPR :: modify :: I :: v44[#(10)] = #(2)::
15071 :: EXPR :: modify :: I :: v44[#(12)] = #(5)::
15075 :: EXPR :: modify :: I :: v44[#(13)] = #(-3)::
15079 :: EXPR :: modify :: I :: v44[#(14)] = #(-3)::
15083 :: EXPR :: modify :: I :: v44[#(15)] = #(-2)::
15087 :: EXPR :: modify :: I :: v44[#(16)] = #(-1)::
15091 :: EXPR :: modify :: I :: v44[#(17)] = #(-3)::
15095 :: EXPR :: modify :: I :: v44[#(18)] = #(-2)::
15099 :: EXPR :: modify :: I :: v44[#(19)] = #(-3)::
15103 :: EXPR :: modify :: I :: v44[#(20)] = #(-4)::
15107 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(12)] = v44::
15111 :: NORM :: declaration :: [I :: v45 = new []::DD,15188
15112 :: EXPR :: modify :: I :: v45[#(0)] = #(-3)::
15116 :: EXPR :: modify :: I :: v45[#(2)] = #(-2)::
15120 :: EXPR :: modify :: I :: v45[#(3)] = #(-1)::
15124 :: EXPR :: modify :: I :: v45[#(5)] = #(-2)::
15128 :: EXPR :: modify :: I :: v45[#(6)] = #(-3)::
15132 :: EXPR :: modify :: I :: v45[#(7)] = #(-3)::
15136 :: EXPR :: modify :: I :: v45[#(8)] = #(-2)::
15140 :: EXPR :: modify :: I :: v45[#(9)] = #(-2)::
15144 :: EXPR :: modify :: I :: v45[#(10)] = #(-2)::
15148 :: EXPR :: modify :: I :: v45[#(11)] = #(-3)::
15152 :: EXPR :: modify :: I :: v45[#(12)] = #(-3)::
15156 :: EXPR :: modify :: I :: v45[#(13)] = #(4)::
15160 :: EXPR :: modify :: I :: v45[#(14)] = #(3)::
15164 :: EXPR :: modify :: I :: v45[#(15)] = #(1)::
15168 :: EXPR :: modify :: I :: v45[#(16)] = #(1)::
15172 :: EXPR :: modify :: I :: v45[#(17)] = #(-1)::
15176 :: EXPR :: modify :: I :: v45[#(18)] = #(-1)::
15180 :: EXPR :: modify :: I :: v45[#(19)] = #(-3)::
15184 :: EXPR :: modify :: I :: v45[#(20)] = #(-4)::
15188 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(13)] = v45::
15192 :: NORM :: declaration :: [I :: v46 = new []::DD,15273
15193 :: EXPR :: modify :: I :: v46[#(0)] = #(-4)::
15197 :: EXPR :: modify :: I :: v46[#(1)] = #(-1)::
15201 :: EXPR :: modify :: I :: v46[#(2)] = #(-3)::
15205 :: EXPR :: modify :: I :: v46[#(3)] = #(-1)::
15209 :: EXPR :: modify :: I :: v46[#(4)] = #(-1)::
15213 :: EXPR :: modify :: I :: v46[#(5)] = #(-2)::
15217 :: EXPR :: modify :: I :: v46[#(6)] = #(-3)::
15221 :: EXPR :: modify :: I :: v46[#(7)] = #(-3)::
15225 :: EXPR :: modify :: I :: v46[#(8)] = #(-3)::
15229 :: EXPR :: modify :: I :: v46[#(9)] = #(-3)::
15233 :: EXPR :: modify :: I :: v46[#(10)] = #(-3)::
15237 :: EXPR :: modify :: I :: v46[#(11)] = #(-3)::
15241 :: EXPR :: modify :: I :: v46[#(12)] = #(-3)::
15245 :: EXPR :: modify :: I :: v46[#(13)] = #(3)::
15249 :: EXPR :: modify :: I :: v46[#(14)] = #(4)::
15253 :: EXPR :: modify :: I :: v46[#(15)] = #(2)::
15257 :: EXPR :: modify :: I :: v46[#(16)] = #(1)::
15261 :: EXPR :: modify :: I :: v46[#(18)] = #(-1)::
15265 :: EXPR :: modify :: I :: v46[#(19)] = #(-3)::
15269 :: EXPR :: modify :: I :: v46[#(20)] = #(-4)::
15273 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(14)] = v46::
15277 :: NORM :: declaration :: [I :: v47 = new []::DD,15358
15278 :: EXPR :: modify :: I :: v47[#(0)] = #(-4)::
15282 :: EXPR :: modify :: I :: v47[#(1)] = #(-1)::
15286 :: EXPR :: modify :: I :: v47[#(2)] = #(-3)::
15290 :: EXPR :: modify :: I :: v47[#(3)] = #(-1)::
15294 :: EXPR :: modify :: I :: v47[#(4)] = #(-1)::
15298 :: EXPR :: modify :: I :: v47[#(5)] = #(-2)::
15302 :: EXPR :: modify :: I :: v47[#(6)] = #(-4)::
15306 :: EXPR :: modify :: I :: v47[#(7)] = #(-3)::
15310 :: EXPR :: modify :: I :: v47[#(8)] = #(-3)::
15314 :: EXPR :: modify :: I :: v47[#(9)] = #(-2)::
15318 :: EXPR :: modify :: I :: v47[#(10)] = #(-2)::
15322 :: EXPR :: modify :: I :: v47[#(11)] = #(-3)::
15326 :: EXPR :: modify :: I :: v47[#(12)] = #(-2)::
15330 :: EXPR :: modify :: I :: v47[#(13)] = #(1)::
15334 :: EXPR :: modify :: I :: v47[#(14)] = #(2)::
15338 :: EXPR :: modify :: I :: v47[#(15)] = #(4)::
15342 :: EXPR :: modify :: I :: v47[#(16)] = #(2)::
15346 :: EXPR :: modify :: I :: v47[#(18)] = #(-1)::
15350 :: EXPR :: modify :: I :: v47[#(19)] = #(-2)::
15354 :: EXPR :: modify :: I :: v47[#(20)] = #(-4)::
15358 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(15)] = v47::
15362 :: NORM :: declaration :: [I :: v48 = new []::DD,15439
15363 :: EXPR :: modify :: I :: v48[#(0)] = #(-3)::
15367 :: EXPR :: modify :: I :: v48[#(1)] = #(-1)::
15371 :: EXPR :: modify :: I :: v48[#(2)] = #(-2)::
15375 :: EXPR :: modify :: I :: v48[#(3)] = #(-1)::
15379 :: EXPR :: modify :: I :: v48[#(4)] = #(-1)::
15383 :: EXPR :: modify :: I :: v48[#(5)] = #(-1)::
15387 :: EXPR :: modify :: I :: v48[#(6)] = #(-3)::
15391 :: EXPR :: modify :: I :: v48[#(7)] = #(-2)::
15395 :: EXPR :: modify :: I :: v48[#(8)] = #(-2)::
15399 :: EXPR :: modify :: I :: v48[#(10)] = #(-1)::
15403 :: EXPR :: modify :: I :: v48[#(11)] = #(-2)::
15407 :: EXPR :: modify :: I :: v48[#(12)] = #(-1)::
15411 :: EXPR :: modify :: I :: v48[#(13)] = #(1)::
15415 :: EXPR :: modify :: I :: v48[#(14)] = #(1)::
15419 :: EXPR :: modify :: I :: v48[#(15)] = #(2)::
15423 :: EXPR :: modify :: I :: v48[#(16)] = #(5)::
15427 :: EXPR :: modify :: I :: v48[#(18)] = #(-1)::
15431 :: EXPR :: modify :: I :: v48[#(19)] = #(-1)::
15435 :: EXPR :: modify :: I :: v48[#(20)] = #(-4)::
15439 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(16)] = v48::
15443 :: NORM :: declaration :: [I :: v49 = new []::DD,15516
15444 :: EXPR :: modify :: I :: v49[#(0)] = #(-3)::
15448 :: EXPR :: modify :: I :: v49[#(1)] = #(-2)::
15452 :: EXPR :: modify :: I :: v49[#(2)] = #(-4)::
15456 :: EXPR :: modify :: I :: v49[#(3)] = #(-2)::
15460 :: EXPR :: modify :: I :: v49[#(4)] = #(-2)::
15464 :: EXPR :: modify :: I :: v49[#(5)] = #(-2)::
15468 :: EXPR :: modify :: I :: v49[#(6)] = #(-3)::
15472 :: EXPR :: modify :: I :: v49[#(7)] = #(-3)::
15476 :: EXPR :: modify :: I :: v49[#(8)] = #(-3)::
15480 :: EXPR :: modify :: I :: v49[#(9)] = #(-3)::
15484 :: EXPR :: modify :: I :: v49[#(10)] = #(-3)::
15488 :: EXPR :: modify :: I :: v49[#(11)] = #(-1)::
15492 :: EXPR :: modify :: I :: v49[#(12)] = #(-3)::
15496 :: EXPR :: modify :: I :: v49[#(13)] = #(-1)::
15500 :: EXPR :: modify :: I :: v49[#(17)] = #(6)::
15504 :: EXPR :: modify :: I :: v49[#(18)] = #(3)::
15508 :: EXPR :: modify :: I :: v49[#(19)] = #(1)::
15512 :: EXPR :: modify :: I :: v49[#(20)] = #(-4)::
15516 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(17)] = v49::
15520 :: NORM :: declaration :: [I :: v50 = new []::DD,15605
15521 :: EXPR :: modify :: I :: v50[#(0)] = #(-3)::
15525 :: EXPR :: modify :: I :: v50[#(1)] = #(-2)::
15529 :: EXPR :: modify :: I :: v50[#(2)] = #(-3)::
15533 :: EXPR :: modify :: I :: v50[#(3)] = #(-2)::
15537 :: EXPR :: modify :: I :: v50[#(4)] = #(-2)::
15541 :: EXPR :: modify :: I :: v50[#(5)] = #(-2)::
15545 :: EXPR :: modify :: I :: v50[#(6)] = #(-3)::
15549 :: EXPR :: modify :: I :: v50[#(7)] = #(-2)::
15553 :: EXPR :: modify :: I :: v50[#(8)] = #(-2)::
15557 :: EXPR :: modify :: I :: v50[#(9)] = #(-1)::
15561 :: EXPR :: modify :: I :: v50[#(10)] = #(-2)::
15565 :: EXPR :: modify :: I :: v50[#(11)] = #(2)::
15569 :: EXPR :: modify :: I :: v50[#(12)] = #(-2)::
15573 :: EXPR :: modify :: I :: v50[#(13)] = #(-1)::
15577 :: EXPR :: modify :: I :: v50[#(14)] = #(-1)::
15581 :: EXPR :: modify :: I :: v50[#(15)] = #(-1)::
15585 :: EXPR :: modify :: I :: v50[#(16)] = #(-1)::
15589 :: EXPR :: modify :: I :: v50[#(17)] = #(3)::
15593 :: EXPR :: modify :: I :: v50[#(18)] = #(7)::
15597 :: EXPR :: modify :: I :: v50[#(19)] = #(2)::
15601 :: EXPR :: modify :: I :: v50[#(20)] = #(-4)::
15605 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(18)] = v50::
15609 :: NORM :: declaration :: [I :: v51 = new []::DD,15694
15610 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
15614 :: EXPR :: modify :: I :: v51[#(1)] = #(-3)::
15618 :: EXPR :: modify :: I :: v51[#(2)] = #(-4)::
15622 :: EXPR :: modify :: I :: v51[#(3)] = #(-2)::
15626 :: EXPR :: modify :: I :: v51[#(4)] = #(-2)::
15630 :: EXPR :: modify :: I :: v51[#(5)] = #(-3)::
15634 :: EXPR :: modify :: I :: v51[#(6)] = #(-4)::
15638 :: EXPR :: modify :: I :: v51[#(7)] = #(-4)::
15642 :: EXPR :: modify :: I :: v51[#(8)] = #(-3)::
15646 :: EXPR :: modify :: I :: v51[#(9)] = #(-2)::
15650 :: EXPR :: modify :: I :: v51[#(10)] = #(-3)::
15654 :: EXPR :: modify :: I :: v51[#(11)] = #(-2)::
15658 :: EXPR :: modify :: I :: v51[#(12)] = #(-3)::
15662 :: EXPR :: modify :: I :: v51[#(13)] = #(-3)::
15666 :: EXPR :: modify :: I :: v51[#(14)] = #(-3)::
15670 :: EXPR :: modify :: I :: v51[#(15)] = #(-2)::
15674 :: EXPR :: modify :: I :: v51[#(16)] = #(-1)::
15678 :: EXPR :: modify :: I :: v51[#(17)] = #(1)::
15682 :: EXPR :: modify :: I :: v51[#(18)] = #(2)::
15686 :: EXPR :: modify :: I :: v51[#(19)] = #(11)::
15690 :: EXPR :: modify :: I :: v51[#(20)] = #(-4)::
15694 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(19)] = v51::
15698 :: NORM :: declaration :: [I :: v52 = new []::DD,15783
15699 :: EXPR :: modify :: I :: v52[#(0)] = #(-4)::
15703 :: EXPR :: modify :: I :: v52[#(1)] = #(-4)::
15707 :: EXPR :: modify :: I :: v52[#(2)] = #(-4)::
15711 :: EXPR :: modify :: I :: v52[#(3)] = #(-4)::
15715 :: EXPR :: modify :: I :: v52[#(4)] = #(-4)::
15719 :: EXPR :: modify :: I :: v52[#(5)] = #(-4)::
15723 :: EXPR :: modify :: I :: v52[#(6)] = #(-4)::
15727 :: EXPR :: modify :: I :: v52[#(7)] = #(-4)::
15731 :: EXPR :: modify :: I :: v52[#(8)] = #(-4)::
15735 :: EXPR :: modify :: I :: v52[#(9)] = #(-4)::
15739 :: EXPR :: modify :: I :: v52[#(10)] = #(-4)::
15743 :: EXPR :: modify :: I :: v52[#(11)] = #(-4)::
15747 :: EXPR :: modify :: I :: v52[#(12)] = #(-4)::
15751 :: EXPR :: modify :: I :: v52[#(13)] = #(-4)::
15755 :: EXPR :: modify :: I :: v52[#(14)] = #(-4)::
15759 :: EXPR :: modify :: I :: v52[#(15)] = #(-4)::
15763 :: EXPR :: modify :: I :: v52[#(16)] = #(-4)::
15767 :: EXPR :: modify :: I :: v52[#(17)] = #(-4)::
15771 :: EXPR :: modify :: I :: v52[#(18)] = #(-4)::
15775 :: EXPR :: modify :: I :: v52[#(19)] = #(-4)::
15779 :: EXPR :: modify :: I :: v52[#(20)] = #(1)::
15783 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(20)] = v52::
15789 :: NORM :: declaration :: [Ljava/lang/Character :: v53 = new java.lang.Character[]::DD,15958:JM,15794
15790 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(71))::JM,15794
15794 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(0)] = v56::
15798 :: CALL :: call :: Ljava/lang/Character :: v59 = valueOf(#(65))::JM,15802
15802 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(1)] = v59::
15806 :: CALL :: call :: Ljava/lang/Character :: v62 = valueOf(#(80))::JM,15810
15810 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(2)] = v62::
15814 :: CALL :: call :: Ljava/lang/Character :: v65 = valueOf(#(67))::JM,15818
15818 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(3)] = v65::
15822 :: CALL :: call :: Ljava/lang/Character :: v68 = valueOf(#(84))::JM,15826
15826 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(4)] = v68::
15830 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(83))::JM,15834
15834 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(5)] = v71::
15838 :: CALL :: call :: Ljava/lang/Character :: v74 = valueOf(#(68))::JM,15842
15842 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(6)] = v74::
15846 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(78))::JM,15850
15850 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(7)] = v77::
15854 :: CALL :: call :: Ljava/lang/Character :: v80 = valueOf(#(69))::JM,15858
15858 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(8)] = v80::
15862 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(81))::JM,15866
15866 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(9)] = v83::
15870 :: CALL :: call :: Ljava/lang/Character :: v86 = valueOf(#(75))::JM,15874
15874 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(10)] = v86::
15878 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(72))::JM,15882
15882 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(11)] = v89::
15886 :: CALL :: call :: Ljava/lang/Character :: v92 = valueOf(#(82))::JM,15890
15890 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(12)] = v92::
15894 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(86))::JM,15898
15898 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(13)] = v95::
15902 :: CALL :: call :: Ljava/lang/Character :: v98 = valueOf(#(73))::JM,15906
15906 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(14)] = v98::
15910 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(76))::JM,15914
15914 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(15)] = v101::
15918 :: CALL :: call :: Ljava/lang/Character :: v104 = valueOf(#(77))::JM,15922
15922 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(16)] = v104::
15926 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(70))::JM,15930
15930 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(17)] = v107::
15934 :: CALL :: call :: Ljava/lang/Character :: v110 = valueOf(#(89))::JM,15938
15938 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(18)] = v110::
15942 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(87))::JM,15946
15946 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(19)] = v113::
15950 :: CALL :: call :: Ljava/lang/Character :: v116 = valueOf(#(45))::JM,15954
15954 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(20)] = v116::
15958 :: EXPR :: modify :: [Ljava/lang/Character :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1 = v53::
15960 :: EXPR :: reference :: [Ljava/lang/Character :: v117 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1::JM,15962
15962 :: CALL :: call :: Ljava/util/List :: v119 = asList(v117)::JM,15962
17287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.ScoringStrategy.<clinit>()::CD,17290:JM,36647:CD,17297:CD,17299:CD,17306:CD,17308:CD,17315:CD,17317:CD,17324:CD,17326:CD,17333:CD,17335:CD,17336:CD,17342:CD,17348:CD,17354:CD,17360
17290 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v2 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17297
17297 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING = v2::
17299 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17306
17306 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING = v7::
17308 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v12 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17315
17315 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING = v12::
17317 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v17 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17324
17324 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING = v17::
17326 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v22 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,17333
17333 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION = v22::
17335 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy[]::
17336 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::DD,17338
17338 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(0)] = v29::
17342 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v30 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::DD,17344
17344 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(1)] = v30::
17348 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v31 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::DD,17350
17350 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(2)] = v31::
17354 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::DD,17356
17356 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(3)] = v32::
17360 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::DD,17362
17362 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(4)] = v33::
17483 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,17493:CD,17500:CD,17507
17493 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
17500 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
17507 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
17525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,17528:JM,36683:CD,17535:CD,17537:CD,17544:CD,17546:CD,17553:CD,17555:CD,17562:CD,17564:CD,17571:CD,17573:CD,17580:CD,17582:CD,17589:CD,17591:CD,17598:CD,17600:CD,17607:CD,17609:CD,17616:CD,17618:CD,17625:CD,17627:CD,17628:CD,17634:CD,17640:CD,17646:CD,17652:CD,17658:CD,17664:CD,17670:CD,17676:CD,17682:CD,17688
17528 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,17535
17535 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
17537 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,17544
17544 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
17546 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,17553
17553 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
17555 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,17562
17562 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
17564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,17571
17571 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
17573 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,17580
17580 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
17582 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,17589
17589 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
17591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,17598
17598 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
17600 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,17607
17607 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
17609 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,17616
17616 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
17618 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,17625
17625 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
17627 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
17628 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,17630
17630 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
17634 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,17636
17636 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
17640 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,17642
17642 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
17646 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,17648
17648 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
17652 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,17654
17654 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
17658 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,17660
17660 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
17664 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,17666
17666 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
17670 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,17672
17672 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
17676 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,17678
17678 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
17682 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,17684
17684 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
17688 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,17690
17690 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
17787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,17790:CD,17793:JM,36768:JM,36765:CD,17804:CD,17806:CD,17809:CD,17820:CD,17822:CD,17823:CD,17833:CD,17835:CD,17836:CD,17842:CD,17848:CD,17856:CD,17869
17790 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,17804
17793 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,36692
17804 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
17806 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,17820
17809 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,36692
17820 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
17822 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,17833
17823 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,36779
17833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
17835 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
17836 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,17838
17838 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
17842 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,17844
17844 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
17848 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,17850
17850 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
17856 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,17869
17857 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
17861 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
17865 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
17869 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,17869
17951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.FarmJobParameters.<clinit>()::CD,17954:CD,17962
17954 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(jfatcat))::CL,36910
17962 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getString(#(server.url))::CL,36922
17975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,17985:CD,18001
17985 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,36910
18001 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
18133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,18149:CD,18150:CD,18191:CD,18201:CD,18202:CD,18223:CD,18233:CD,18234:CD,18371
18149 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,18150
18150 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,18191
18151 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
18155 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
18159 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
18163 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
18167 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
18171 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
18175 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
18179 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
18183 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
18187 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
18191 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,18191
18201 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,18202
18202 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,18223
18203 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
18207 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
18211 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
18215 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
18219 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
18223 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,18223
18233 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,18234
18234 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,18371
18235 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
18239 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
18243 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
18247 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
18251 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
18255 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
18259 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
18263 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
18267 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
18271 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
18275 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
18279 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
18283 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
18287 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
18291 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
18295 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
18299 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
18303 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
18307 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
18311 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
18315 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
18319 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
18323 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
18327 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
18331 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
18335 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
18339 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
18343 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
18347 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
18351 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
18355 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
18359 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
18363 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
18367 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
18371 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,18371
18541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,18544:JM,36997:CD,18551:CD,18553:CD,18560:CD,18562:CD,18569:CD,18571:CD,18578:CD,18580:CD,18587:CD,18589:CD,18596:CD,18598:CD,18605:CD,18607:CD,18614:CD,18616:CD,18623:CD,18625:CD,18632:CD,18634:CD,18641:CD,18643:CD,18644:CD,18650:CD,18656:CD,18662:CD,18668:CD,18674:CD,18680:CD,18686:CD,18692:CD,18698:CD,18704:CD,18712:CD,18718:CD,18723:CD,18729:CD,18735:CD,18740:CD,18746:CD,18752:CD,18757:CD,18763:CD,18769:CD,18776:CD,18783:CD,18795:CD,18798
18544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18551
18551 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
18553 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18560
18560 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
18562 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18569
18569 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
18571 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18578
18578 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
18580 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18587
18587 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
18589 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18596
18596 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
18598 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18605
18605 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
18607 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18614
18614 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
18616 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18623
18623 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
18625 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18632
18632 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
18634 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,18641
18641 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
18643 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
18644 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,18646
18646 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
18650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,18652
18652 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
18656 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,18658
18658 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
18662 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,18664
18664 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
18668 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,18670
18670 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
18674 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,18676
18676 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
18680 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,18682
18682 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
18686 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,18688
18688 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
18692 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,18694
18694 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
18698 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,18700
18700 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
18704 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,18706
18706 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
18712 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,18723
18718 :: CALL :: call :: Z :: v74 = v70.add(v72)::
18723 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,18723
18729 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,18740
18735 :: CALL :: call :: Z :: v81 = v77.add(v79)::
18740 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,18740
18746 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,18757
18752 :: CALL :: call :: Z :: v88 = v84.add(v86)::
18757 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,18757
18763 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
18769 :: CALL :: call :: Z :: v95 = v91.add(v93)::
18776 :: CALL :: call :: Z :: v98 = v91.add(v96)::
18783 :: CALL :: call :: Z :: v101 = v91.add(v99)::
18795 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,18798:CL,37006
18798 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,18798
18933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AlignmentTools.<clinit>()::CD,18937
18937 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
24338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,24341:CD,24347:CD,24349:CD,24355:CD,24357:CD,24363:CD,24365:CD,24371:CD,24373:CD,24379:CD,24381:CD,24387:CD,24389:CD,24395:CD,24397:CD,24403:CD,24405:CD,24406:CD,24412:CD,24418:CD,24424:CD,24430:CD,24436:CD,24442:CD,24448
24341 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24347
24347 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
24349 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24355
24355 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
24357 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24363
24363 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
24365 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24371
24371 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
24373 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24379
24379 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
24381 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24387
24387 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
24389 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24395
24395 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
24397 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,24403
24403 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
24405 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
24406 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,24408
24408 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
24412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,24414
24414 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
24418 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,24420
24420 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
24424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,24426
24426 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
24430 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,24432
24432 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
24436 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,24438
24438 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
24442 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,24444
24444 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
24448 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,24450
24450 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
24606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,24609:JM,37207:JM,37210:CD,24617:CD,24619:CD,24629:CD,24631:CD,24641:CD,24643:CD,24653:CD,24655:CD,24665:CD,24667:CD,24677:CD,24679:CD,24689:CD,24691:CD,24701:CD,24703:CD,24713:CD,24715:CD,24725:CD,24727:CD,24737:CD,24739:CD,24749:CD,24751:CD,24761:CD,24763:CD,24773:CD,24775:CD,24785:CD,24787:CD,24797:CD,24799:CD,24809:CD,24811:CD,24821:CD,24823:CD,24833:CD,24835:CD,24845:CD,24847:CD,24857:CD,24859:CD,24869:CD,24871:CD,24881:CD,24883:CD,24893:CD,24895:CD,24905:CD,24907:CD,24917:CD,24919:CD,24929:CD,24931:CD,24941:CD,24943:CD,24951:CD,24953:CD,24961:CD,24963:CD,24964:CD,24970:CD,24976:CD,24982:CD,24988:CD,24994:CD,25000:CD,25006:CD,25012:CD,25018:CD,25024:CD,25030:CD,25036:CD,25042:CD,25048:CD,25054:CD,25060:CD,25066:CD,25072:CD,25078:CD,25084:CD,25090:CD,25096:CD,25102:CD,25108:CD,25114:CD,25120:CD,25126:CD,25132:CD,25138
24609 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24617
24617 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
24619 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24629
24629 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
24631 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24641
24641 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
24643 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24653
24653 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
24655 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24665
24665 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
24667 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24677
24677 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
24679 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24689
24689 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
24691 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24701
24701 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
24703 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24713
24713 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
24715 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24725
24725 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
24727 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24737
24737 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
24739 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24749
24749 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
24751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24761
24761 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
24763 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24773
24773 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
24775 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24785
24785 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
24787 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24797
24797 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
24799 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24809
24809 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
24811 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24821
24821 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
24823 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24833
24833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
24835 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24845
24845 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
24847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24857
24857 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
24859 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24869
24869 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
24871 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24881
24881 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
24883 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24893
24893 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
24895 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24905
24905 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
24907 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24917
24917 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
24919 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24929
24929 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
24931 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24941
24941 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
24943 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24951
24951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
24953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,24961
24961 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
24963 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
24964 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,24966
24966 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
24970 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,24972
24972 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
24976 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,24978
24978 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
24982 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,24984
24984 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
24988 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,24990
24990 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
24994 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,24996
24996 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
25000 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,25002
25002 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
25006 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,25008
25008 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
25012 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,25014
25014 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
25018 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,25020
25020 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
25024 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,25026
25026 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
25030 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,25032
25032 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
25036 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,25038
25038 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
25042 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,25044
25044 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
25048 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,25050
25050 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
25054 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,25056
25056 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
25060 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,25062
25062 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
25066 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,25068
25068 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
25072 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,25074
25074 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
25078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,25080
25080 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
25084 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,25086
25086 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
25090 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,25092
25092 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
25096 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,25098
25098 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
25102 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,25104
25104 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
25108 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,25110
25110 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
25114 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,25116
25116 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
25120 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,25122
25122 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
25126 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,25128
25128 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
25132 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,25134
25134 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
25138 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,25140
25140 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
25399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,25409
25409 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
25451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,25454
25454 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
25465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,25468
25468 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
25491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,25501
25501 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
25513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,25516
25516 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
25525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,25535:CD,25539
25535 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,25539
25539 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,25539
25553 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,25556:CD,25562
25556 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
25562 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
31645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,31661:CD,31667
31661 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
31667 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,37327
31727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,31737:CD,31745:CD,31752:CD,31759:CD,31766:CD,31773:CD,31780
31737 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
31745 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
31752 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
31759 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
31766 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
31773 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
31780 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
31814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,31817:CD,31818:JM,37521:JM,37518:CD,31829:CD,31831:CD,31832:CD,31843:CD,31845:CD,31846:CD,31857:CD,31859:CD,31860:CD,31871:CD,31873:CD,31874:CD,31885:CD,31887:CD,31888:CD,31899:CD,31901:CD,31902:CD,31913:CD,31915:CD,31916:CD,31927:CD,31929:CD,31930:CD,31936:CD,31942:CD,31948:CD,31954:CD,31960:CD,31966:CD,31972
31817 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31829
31818 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
31829 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
31831 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31843
31832 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
31843 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
31845 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31857
31846 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
31857 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
31859 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31871
31860 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
31871 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
31873 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31885
31874 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
31885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
31887 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31899
31888 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
31899 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
31901 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31913
31902 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
31913 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
31915 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,31927
31916 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
31927 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
31929 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
31930 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,31932
31932 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
31936 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,31938
31938 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
31942 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,31944
31944 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
31948 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,31950
31950 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
31954 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,31956
31956 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
31960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,31962
31962 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
31966 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,31968
31968 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
31972 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,31974
31974 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
32087 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
32148 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
32154 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
32174 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
32180 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
32204 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
32213 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
32222 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
32231 :: CALL :: call :: J :: v74 = highMask(#(;/))::
32238 :: CALL :: call :: J :: v78 = lowMask(#(-))::
32244 :: CALL :: call :: J :: v80 = highMask(#(-))::
32250 :: CALL :: call :: J :: v83 = lowMask(#(.))::
32256 :: CALL :: call :: J :: v85 = highMask(#(.))::
32265 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
32274 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
32284 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
32293 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
32308 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
32323 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
32332 :: CALL :: call :: J :: v126 = lowMask(#(%))::
32341 :: CALL :: call :: J :: v130 = highMask(#(%))::
32348 :: CALL :: call :: J :: v134 = lowMask(#([))::
32354 :: CALL :: call :: J :: v136 = highMask(#([))::
32362 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
32371 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
32381 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
32390 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
32397 :: NORM :: declaration :: [C :: v157 = new []::
32398 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
32402 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
32406 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
32410 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
32414 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
32418 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
32422 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
32426 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
32430 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
32434 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
32438 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
32442 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
32446 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
32450 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
32454 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
32458 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
32773 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,32777:CD,32792
32777 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
32792 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
32807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,32810:CD,32816:CD,32818:CD,32824:CD,32826:CD,32832:CD,32834:CD,32840:CD,32842:CD,32848:CD,32850:CD,32856:CD,32858:CD,32864:CD,32866:CD,32872:CD,32874:CD,32880:CD,32882:CD,32888:CD,32890:CD,32896:CD,32898:CD,32904:CD,32906:CD,32912:CD,32914:CD,32915:CD,32921:CD,32927:CD,32933:CD,32939:CD,32945:CD,32951:CD,32957:CD,32963:CD,32969:CD,32975:CD,32981:CD,32987
32810 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32816
32816 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
32818 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32824
32824 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
32826 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32832
32832 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
32834 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32840
32840 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
32842 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32848
32848 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
32850 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32856
32856 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
32858 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32864
32864 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
32866 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32872
32872 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
32874 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32880
32880 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
32882 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32888
32888 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
32890 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32896
32896 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
32898 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32904
32904 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
32906 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32912
32912 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
32914 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
32915 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,32917
32917 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
32921 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,32923
32923 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
32927 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,32929
32929 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
32933 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,32935
32935 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
32939 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,32941
32941 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
32945 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,32947
32947 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
32951 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,32953
32953 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
32957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,32959
32959 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
32963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,32965
32965 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
32969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,32971
32971 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
32975 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,32977
32977 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
32981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,32983
32983 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
32987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,32989
32989 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
33231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,37563
33305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,33308:JM,37585:JM,37588:JM,37591:CD,33317:CD,33319:CD,33328:CD,33330:CD,33339:CD,33341:CD,33350:CD,33352:CD,33361:CD,33363:CD,33372:CD,33374:CD,33383:CD,33385:CD,33394:CD,33396:CD,33405:CD,33407:CD,33416:CD,33418:CD,33427:CD,33429:CD,33430:CD,33436:CD,33442:CD,33448:CD,33454:CD,33460:CD,33466:CD,33472:CD,33478:CD,33484:CD,33490:CD,33498
33308 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33317
33317 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
33319 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33328
33328 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
33330 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33339
33339 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
33341 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33350
33350 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
33352 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33361
33361 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
33363 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33372
33372 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
33374 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33383
33383 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
33385 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33394
33394 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
33396 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33405
33405 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
33407 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33416
33416 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
33418 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,33427
33427 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
33429 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
33430 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,33432
33432 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
33436 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,33438
33438 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
33442 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,33444
33444 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
33448 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,33450
33450 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
33454 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,33456
33456 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
33460 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,33462
33462 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
33466 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,33468
33468 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
33472 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,33474
33474 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
33478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,33480
33480 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
33484 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,33486
33486 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
33490 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,33492
33492 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
33498 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,37604
33641 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,33651
33651 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
33767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,33770:CD,33778:CD,33783:CD,33791:CD,33796:CD,33804:CD,33809
33770 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
33778 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
33779 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
33783 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
33791 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
33792 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
33796 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
33804 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
33805 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
33809 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
33865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,33881:CD,33888:CD,33892:CD,33894:CD,33896:CD,33901:CD,33903:CD,33908:CD,33910:CD,33915:CD,33917
33881 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
33888 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,33892
33892 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
33894 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
33896 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
33901 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
33903 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
33908 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
33910 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
33915 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
33917 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
33940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,33943:CD,33949:CD,33951:CD,33957:CD,33959:CD,33960:CD,33966
33943 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,33949
33949 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
33951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,33957
33957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
33959 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
33960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,33962
33962 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
33966 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,33968
33968 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
34250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,34253:CD,34259:CD,34265:CD,34269:CD,34273:CD,34279:CD,34283:CD,34289:CD,34293:CD,34299:CD,34303:CD,34309:CD,34313:CD,34319:CD,34323:CD,34329:CD,34333:CD,34339:CD,34343:CD,34349:CD,34353:CD,34359:CD,34363:CD,34369:CD,34373:CD,34379:CD,34383:CD,34389:CD,34393:CD,34399:CD,34403:CD,34409:CD,34413:CD,34419:CD,34423:CD,34429:CD,34433:CD,34439:CD,34443:CD,34449:CD,34453:CD,34459:CD,34463:CD,34469:CD,34473:CD,34479:CD,34483:CD,34489:CD,34493:CD,34497:CD,34499:CD,34503:CD,34507:CD,34513:CD,34517:CD,34523:CD,34527:CD,34533:CD,34537:CD,34543:CD,34547:CD,34553:CD,34557:CD,34563:CD,34567:CD,34573:CD,34577:CD,34583:CD,34587:CD,34593:CD,34597:CD,34603:CD,34607:CD,34613:CD,34617:CD,34623:CD,34627:CD,34633:CD,34637:CD,34643:CD,34647:CD,34653:CD,34657:CD,34663:CD,34667:CD,34673:CD,34677:CD,34683:CD,34687:CD,34693:CD,34697:CD,34703:CD,34707:CD,34713:CD,34717:CD,34723:CD,34727:CD,34733:CD,34737:CD,34741:CD,34747:CD,34751:CD,34757:CD,34761:CD,34767:CD,34771:CD,34777:CD,34781:CD,34787:CD,34791:CD,34797:CD,34801:CD,34805:CD,34807:CD,34811:CD,34815:CD,34821:CD,34825:CD,34831:CD,34835:CD,34841:CD,34845:CD,34851:CD,34855:CD,34861:CD,34865:CD,34871:CD,34875:CD,34881:CD,34885:CD,34887:CD,34891:CD,34896:CD,34898:CD,34902
34253 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
34259 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
34265 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,34497:JM,34489:JM,34493
34269 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
34273 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
34279 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
34283 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
34289 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
34293 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
34299 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
34303 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
34309 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
34313 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
34319 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
34323 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
34329 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
34333 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
34339 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
34343 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
34349 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
34353 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
34359 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
34363 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
34369 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
34373 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
34379 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
34383 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
34389 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
34393 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
34399 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
34403 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
34409 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
34413 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
34419 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
34423 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
34429 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
34433 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
34439 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
34443 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
34449 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
34453 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
34459 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
34463 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
34469 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
34473 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
34479 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
34483 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
34489 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,34497:JM,34489:JM,34493
34493 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,34497:JM,34493
34497 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
34499 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,34723:JM,34727
34503 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
34507 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
34513 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
34517 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
34523 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
34527 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
34533 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
34537 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
34543 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
34547 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
34553 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
34557 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
34563 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
34567 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
34573 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
34577 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
34583 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
34587 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
34593 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
34597 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
34603 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
34607 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
34613 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
34617 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
34623 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
34627 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
34633 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
34637 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
34643 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
34647 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
34653 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
34657 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
34663 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
34667 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
34673 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
34677 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
34683 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
34687 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
34693 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
34697 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
34703 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
34707 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
34713 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
34717 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
34723 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,34723:JM,34727
34727 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,34727
34733 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,34801:JM,34805:JM,34797
34737 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
34741 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
34747 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
34751 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
34757 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
34761 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
34767 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
34771 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
34777 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
34781 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
34787 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
34791 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
34797 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,34801:JM,34805:JM,34797
34801 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,34801:JM,34805
34805 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
34807 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,34871:JM,34875
34811 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
34815 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
34821 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
34825 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
34831 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
34835 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
34841 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
34845 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
34851 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
34855 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
34861 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
34865 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
34871 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,34871:JM,34875
34875 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,34875
34881 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
34885 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
34887 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
34891 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
34896 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
34898 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
34902 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
35160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECPParameters.DuplicationHint.<clinit>()::CD,35163:JM,37697:CD,35170:CD,35172:CD,35179:CD,35181:CD,35188:CD,35190:CD,35191:CD,35197:CD,35203
35163 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v2 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,35170
35170 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.SHORTER = v2::
35172 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v7 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,35179
35179 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.LEFT = v7::
35181 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v12 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,35188
35188 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.RIGHT = v12::
35190 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v18 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint[]::
35191 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v19 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.SHORTER::DD,35193
35193 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
35197 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v20 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.LEFT::DD,35199
35199 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
35203 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v21 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.RIGHT::DD,35205
35205 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
35238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,35241:JM,42353:JM,47907:JM,42357:JM,47863:JM,47927:JM,42345:JM,42361:JM,47849:JM,47913:JM,47899:JM,42349:JM,42365:JM,37742:CD,35256:CD,35258:JM,42401:JM,42405:JM,42393:JM,42397:CD,35273:CD,35275:CD,35285:CD,35287:CD,35288:CD,35294:CD,35300
35241 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35256
35256 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
35258 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35273
35273 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
35275 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,35285
35285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
35287 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
35288 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,35290
35290 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
35294 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,35296
35296 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
35300 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,35302
35302 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
35426 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,35429:CD,35448
35429 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
35430 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
35434 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
35438 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
35442 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
35448 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
35449 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
35453 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
35457 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
35461 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
36209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeMain.main(java.lang.String[])::CD,36217:JM,37866:JM,37930
36217 :: CALL :: call :: V :: v3.process(p1 $args )::JM,37866:JM,37930:CL,37771
36529 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
36532 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
36535 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
36538 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
36541 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
36544 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
36547 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
36550 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
36553 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
36556 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
36559 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
36562 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
36565 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
36568 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
36571 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
36608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,36609:CD,36611:CD,36613:CD,36614:CD,36622
36609 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,10458
36611 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,36613
36613 :: EXPR :: assign :: I :: v4 = v2.length::DD,36614
36614 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,36622
36622 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,36609
36647 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
36683 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
36692 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,36696:CD,36700:CD,36703:CD,36724:CD,36730
36696 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
36700 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,36703:CL,41331
36703 :: EXPR :: assign :: I :: v7 = v6.length::DD,36724
36712 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,36717
36717 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,36718:CF,36723
36718 :: CALL :: call :: Z :: v14 = v3.add(v9)::
36723 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,36730
36724 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,36712:CD,36717:CD,36723:CD,36730
36730 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,36723:DD,36724
36765 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
36768 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
36779 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,36782:CD,36786:CD,36789:CD,36825:CD,36831
36782 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
36786 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,36789:CL,41331
36789 :: EXPR :: assign :: I :: v6 = v5.length::DD,36825
36801 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,36806
36806 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,36813:CD,36818:CF,36824
36813 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,36818
36818 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,36819:CF,36824
36819 :: CALL :: call :: Z :: v20 = v2.add(v8)::
36824 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,36831
36825 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,36801:CD,36806:CD,36824:CD,36831
36831 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,36824:DD,36825
36910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,41639:JM,41631
36922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::CE,36923:CD,36930:CD,36935:CD,36942:CD,36946:CD,36947:CD,36955:CD,36960:CD,36965:CD,36969
36923 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::
36930 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getString(p1 $key )::JM,36935
36935 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,36923
36942 :: CALL :: call :: V :: v8.println(v10)::
36946 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::JM,36969
36947 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(#(33))::
36955 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v12.append(p1 $key )::JM,36969
36960 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(#(33))::JM,36969
36965 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::JM,36969
36969 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,36923
36997 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
37006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,37007:CD,37009:CD,37011:CD,37012:CD,37020
37007 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,18798
37009 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,37011
37011 :: EXPR :: assign :: I :: v4 = v2.length::DD,37012
37012 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,37020
37020 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,37007
37207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
37210 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
37327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,37331:CD,37335:CD,37340:CD,37350:CD,37354:CD,37361:CD,37366:CD,37370:CD,37375:CD,37383:CD,37389:CD,37394:CD,37398:CD,37403:CD,37411:CD,37414:CD,37420:CD,37424:CD,37466:CD,37470:CD,37472:CD,37473:CD,37474
37331 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,37340
37335 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,37340
37340 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,37350:CD,37347
37347 :: CALL :: call :: V :: exit(#(1))::
37350 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,37474
37354 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,37474:CL,42254
37361 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
37366 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
37370 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
37375 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
37383 :: CALL :: call :: V :: exit(#(1))::
37389 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
37394 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
37398 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
37403 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
37411 :: CALL :: call :: V :: exit(#(1))::
37414 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
37420 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,37433:JM,37470
37424 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,37433:JM,37470
37429 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,37433:JM,37470
37433 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,37449:JM,37453
37443 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
37449 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,37449:JM,37453
37453 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,37460:JM,37433:JM,37470
37460 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
37466 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,37433:JM,37470
37470 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,37429:CD,37433:CD,37443:CD,37449:CD,37453:CD,37466:JM,37470
37472 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
37473 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
37474 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,37414:JM,37433:JM,37470
37518 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37521 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
37554 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
37563 :: CALL :: call :: V :: initPath()::CL,42276
37585 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37588 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
37591 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
37604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,37607:CD,37611:CD,37614:CD,37631:CD,37633
37607 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
37611 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,37614:CL,42305
37614 :: EXPR :: assign :: I :: v6 = v5.length::DD,37631
37624 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
37630 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,37633
37631 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,37624:CD,37630:CD,37633
37633 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,37630:DD,37631
37697 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
37742 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
37771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.process(java.lang.String[])::CD,37776:CD,37930:CD,37931:CD,38121:JM,37866
37776 :: CALL :: call :: V :: printAboutMe()::CL,42438
37779 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $argv [v42]::JM,37788:JM,37794:JM,37800:JM,37817:JM,37823
37783 :: CALL :: call :: Z :: v10 = v7.equalsIgnoreCase(#(-h))::JM,37788
37788 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 39::CD,37789:CD,37794
37789 :: CALL :: call :: Z :: v13 = v7.equalsIgnoreCase(#(-help))::JM,37794
37794 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 39::CD,37795:CD,37800
37795 :: CALL :: call :: Z :: v16 = v7.equalsIgnoreCase(#(--help))::JM,37800
37800 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 53::CD,37812:CD,37817
37812 :: CALL :: call :: Z :: v19 = v7.equalsIgnoreCase(#(-version))::JM,37817
37817 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 69::CD,37818:CD,37823
37818 :: CALL :: call :: Z :: v22 = v7.equalsIgnoreCase(#(--version))::JM,37823
37823 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 121::CD,37866:CD,37867:CD,37868:CD,37874:CD,37895:CD,37929:CD,37930:CD,37931:CD,38118:CD,38119:CD,38121
37866 :: EXPR :: assign :: I :: v24 = p1 $argv .length::DD,37867
37867 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v24 - #(1)::CF,37868
37868 :: PRED :: IF :: Z :: if (v42 >= v26) goto 136::CF,38118:CD,37869
37869 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v42 + #(1)::
37870 :: EXPR :: reference :: Ljava/lang/Object :: v28 = p1 $argv [v27]::DD,38118
37874 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 155::CD,37875:CD,37880:CD,37882:CD,38119
37875 :: CALL :: call :: Z :: v32 = v29.startsWith(#(-))::JM,37880
37880 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 155::CD,37882:CD,38119
37882 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v42 + #(1)::DD,38119
37895 :: CALL :: call :: [Ljava/lang/String :: v40 = configureBean(v38, v37)::CL,43453
37929 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v34 + #(1)::DD,38121
37930 :: EXPR :: assign :: I :: v6 = p1 $argv .length::CF,37931
37931 :: PRED :: IF :: Z :: if (v42 < v6) goto 10::CD,37783:CD,37788:CD,37935:CD,37939:CD,37955:CD,37959:CD,37975:CD,37979:CD,38005:CD,38009:CD,38039:CD,38046:CD,38050
37935 :: CALL :: call :: Ljava/lang/String :: v45 = v43.getPdbFilePath()::JM,37939:CL,44928
37939 :: PRED :: IF :: Z :: if (v45 == #(null)) goto 252::CD,37947
37947 :: CALL :: call :: Ljava/lang/String :: v51 = setProperty(#(PDB_DIR), v49)::
37955 :: CALL :: call :: Ljava/lang/String :: v54 = v52.getCacheFilePath()::JM,37959:CL,44979
37959 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 275::CD,37967
37967 :: CALL :: call :: Ljava/lang/String :: v60 = setProperty(#(PDB_CACHE_DIR), v58)::
37975 :: CALL :: call :: Z :: v63 = v61.isShowMenu()::JM,37979:CL,44988
37979 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 314::CD,37982:CD,37986
37982 :: CALL :: call :: V :: v64.println(#(showing menu...))::
37986 :: CALL :: call :: V :: showAlignmentGUI()::CL,44997
38005 :: CALL :: call :: Ljava/lang/String :: v78 = v76.getShowDBresult()::JM,38009:CL,45073
38009 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 357::CD,38012:CD,38019
38012 :: CALL :: call :: V :: v79.println(#(showing DB results...))::
38019 :: CALL :: call :: V :: showDBResults(v82)::CL,45082
38039 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getPdb1()::JM,38050:CL,45179
38046 :: CALL :: call :: Ljava/lang/String :: v97 = v95.getFile1()::JM,38051:CL,45188
38050 :: PRED :: IF :: Z :: if (v94 != #(null)) goto 381::CD,38051
38051 :: PRED :: IF :: Z :: if (v97 == #(null)) goto 386::CD,38059:CD,38063
38059 :: CALL :: call :: Ljava/lang/String :: v100 = v98.getAlignPairs()::JM,38063:CL,45739
38063 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 401::CD,38064:CD,38071:CD,38075
38064 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,45748
38071 :: CALL :: call :: Ljava/lang/String :: v103 = v101.getSearchFile()::JM,38075:CL,46000
38075 :: PRED :: IF :: Z :: if (v103 == #(null)) goto 433::CD,38076
38076 :: CALL :: call :: V :: p0 $this .runDBSearch()::CL,45748
38118 :: EXPR :: assign :: null :: PHI v29 = #(null), v28::DD,37874:JM,37880
38119 :: EXPR :: assign :: null :: PHI v34 = v42, v33::DD,37929
38121 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,37868:DD,37869:DD,37882:DD,37931:DD,38119:CF,37930
38418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,38419:CD,38422:CD,38426:CD,38435:CD,38436:CD,38440:CD,38449:CD,38450:CD,38454:CD,38463:CD,38464:CD,38468:CD,38477:CD,38478:CD,38482:CD,38491:CD,38492:CD,38496:CD,38505:CD,38506:CD,38507:CD,38508:CD,38509:CD,38510:CD,38511:CD,38512
38419 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
38422 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,38435
38423 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,38426
38426 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,38431:CD,38507
38428 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,38507
38431 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,38507
38435 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38436
38436 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,38449
38437 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,38440
38440 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,38445:CD,38508
38442 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,38508
38445 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38508
38449 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38450
38450 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,38463
38451 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,38454
38454 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,38459:CD,38509
38456 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,38509
38459 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38509
38463 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38464
38464 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,38477
38465 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,38468
38468 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,38473:CD,38510
38470 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,38510
38473 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,38510
38477 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,38478
38478 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,38491
38479 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,38482
38482 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,38487:CD,38511
38484 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,38511
38487 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,38511
38491 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,38492
38492 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,38505
38493 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,38496
38496 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,38501:CD,38512
38498 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,38512
38501 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,38512
38505 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,38506
38506 :: NORM :: compound :: I :: return v48::CF,38419
38507 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38435
38508 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,38449
38509 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,38463
38510 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,38477
38511 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,38491
38512 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,38505
38638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,38639:CD,38642:CD,38646:CD,38655:CD,38656:CD,38660:CD,38669:CD,38670:CD,38674:CD,38683:CD,38684:CD,38685:CD,38686:CD,38687
38639 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,38941:JM,38942
38642 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,38655
38643 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,38646
38646 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,38651:CD,38685
38648 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,38685
38651 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,38685
38655 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38656
38656 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,38669
38657 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,38660
38660 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,38665:CD,38686
38662 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,38686
38665 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38686
38669 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38670
38670 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,38683
38671 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,38674
38674 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,38679:CD,38687
38676 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,38687
38679 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38687
38683 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38684
38684 :: NORM :: compound :: I :: return v27::CF,38639
38685 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38655
38686 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,38669
38687 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,38683
38753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,38754:CD,38757:CD,38761:CD,38770:CD,38771:CD,38775:CD,38784:CD,38785:CD,38789:CD,38798:CD,38799:CD,38803:CD,38812:CD,38813:CD,38814:CD,38815:CD,38816:CD,38817
38754 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
38757 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,38770
38758 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,38761
38761 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,38765:CD,38814
38762 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,38814
38765 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,38814
38770 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38771
38771 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,38784
38772 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,38775
38775 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,38779:CD,38815
38779 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38815
38784 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38785
38785 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,38798
38786 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,38789
38789 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,38793:CD,38816
38790 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,38816
38793 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38816
38798 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38799
38799 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,38812
38800 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,38803
38803 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,38807:CD,38817
38804 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,38817
38807 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,38817
38812 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,38813
38813 :: NORM :: compound :: I :: return v34::DD,38754
38814 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,38770
38815 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,38784
38816 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,38798
38817 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,38812
38893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,38894:CD,38897:CD,38901:CD,38910:CD,38911:CD,38915:CD,38924:CD,38925:CD,38929:CD,38938:CD,38939:CD,38940:CD,38941:CD,38942
38894 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
38897 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,38910
38898 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,38901
38901 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,38906:CD,38940
38903 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,38940
38906 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,38940
38910 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38911
38911 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,38924
38912 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,38915
38915 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,38920:CD,38941
38920 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38941:CL,38638
38924 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38925
38925 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,38938
38926 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,38929
38929 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,38934:CD,38942
38934 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38942:CL,38638
38938 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38939
38939 :: NORM :: compound :: I :: return v27::CF,38894
38940 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38910
38941 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,38924
38942 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,38938
38969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,38970:CD,38973:CD,38977:CD,38986:CD,38987:CD,38991:CD,39000:CD,39001:CD,39002:CD,39003
38970 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
38973 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,38986
38974 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,38977
38977 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,38981:CD,39002
38978 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,39002
38981 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,39002
38986 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38987
38987 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,39000
38988 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,38991
38991 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,38995:CD,39003
38992 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,39003
38995 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39003
39000 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39001
39001 :: NORM :: compound :: I :: return v20::CF,38970
39002 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,38986
39003 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,39000
39021 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,39022:CD,39025:CD,39029:CD,39038:CD,39039:CD,39043:CD,39052:CD,39053:CD,39057:CD,39066:CD,39067:CD,39071:CD,39080:CD,39081:CD,39085:CD,39094:CD,39095:CD,39099:CD,39108:CD,39109:CD,39113:CD,39122:CD,39123:CD,39127:CD,39136:CD,39137:CD,39141:CD,39150:CD,39151:CD,39155:CD,39164:CD,39165:CD,39169:CD,39178:CD,39179:CD,39183:CD,39192:CD,39193:CD,39197:CD,39206:CD,39207:CD,39211:CD,39220:CD,39221:CD,39225:CD,39234:CD,39235:CD,39239:CD,39248:CD,39249:CD,39253:CD,39262:CD,39263:CD,39264:CD,39265:CD,39266:CD,39267:CD,39268:CD,39269:CD,39270:CD,39271:CD,39272:CD,39273:CD,39274:CD,39275:CD,39276:CD,39277:CD,39278:CD,39279:CD,39280
39022 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
39025 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39038
39026 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,39029
39029 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39034:CD,39264
39031 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,39264
39034 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39264
39038 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39039
39039 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39052
39040 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,39043
39043 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39048:CD,39265
39045 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,39265
39048 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39265
39052 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39053
39053 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39066
39054 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,39057
39057 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39062:CD,39266
39059 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,39266
39062 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39266
39066 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39067
39067 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,39080
39068 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,39071
39071 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,39076:CD,39267
39073 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,39267
39076 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,39267
39080 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39081
39081 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,39094
39082 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,39085
39085 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,39090:CD,39268
39087 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,39268
39090 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,39268
39094 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,39095
39095 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,39108
39096 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,39099
39099 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,39104:CD,39269
39101 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,39269
39104 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,39269
39108 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,39109
39109 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,39122
39110 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,39113
39113 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,39118:CD,39270
39115 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,39270
39118 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,39270
39122 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,39123
39123 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,39136
39124 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,39127
39127 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,39132:CD,39271
39129 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,39271
39132 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,39271
39136 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,39137
39137 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,39150
39138 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,39141
39141 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,39146:CD,39272
39146 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,39272
39150 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,39151
39151 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,39164
39152 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,39155
39155 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,39160:CD,39273
39157 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,39273
39160 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,39273
39164 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,39165
39165 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,39178
39166 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,39169
39169 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,39174:CD,39274
39171 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,39274
39174 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,39274
39178 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,39179
39179 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,39192
39180 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,39183
39183 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,39188:CD,39275
39185 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,39275
39188 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,39275
39192 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,39193
39193 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,39206
39194 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,39197
39197 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,39202:CD,39276
39199 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,39276
39202 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,39276
39206 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,39207
39207 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,39220
39208 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,39211
39211 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,39216:CD,39277
39213 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,39277
39216 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,39277
39220 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,39221
39221 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,39234
39222 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,39225
39225 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,39230:CD,39278
39227 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,39278
39230 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,39278
39234 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,39235
39235 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,39248
39236 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,39239
39239 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,39244:CD,39279
39241 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,39279
39244 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,39279
39248 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,39249
39249 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,39262
39250 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,39253
39253 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,39258:CD,39280
39255 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,39280
39258 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,39280
39262 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,39263
39263 :: NORM :: compound :: I :: return v125::DD,39022
39264 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39038
39265 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39052
39266 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39066
39267 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,39080
39268 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,39094
39269 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,39108
39270 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,39122
39271 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,39136
39272 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,39150
39273 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,39164
39274 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,39178
39275 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,39192
39276 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,39206
39277 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,39220
39278 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,39234
39279 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,39248
39280 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,39262
39518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,39519:CD,39523:JM,39525:JM,39529:JM,39533:JM,39535
39519 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
39523 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,39524:CD,39525:CD,39529:CD,39533:JM,39523:JM,39535
39524 :: NORM :: compound :: Z :: return #(0)::CF,39519
39525 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,39523:JM,39525:JM,39529:JM,39533:JM,39535
39529 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,39523:JM,39525:JM,39529:JM,39533:JM,39535
39533 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,39534:CD,39535:CD,39539
39534 :: NORM :: compound :: Z :: return #(0)::CF,39519
39535 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
39536 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,39539
39539 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,39543:CD,39551:CD,39556
39540 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,39543
39543 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,39557:CD,39561:CD,39580:CD,39581
39545 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,39556
39548 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,39556
39551 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,39556
39556 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,39557:CD,39561:CD,39580:CD,39581
39557 :: NORM :: compound :: Z :: return #(0)::CF,39519
39558 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,39561
39561 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,39565:CD,39573:CD,39578
39562 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,39565
39565 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,39581
39567 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,39578
39570 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,39578
39573 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,39578
39578 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,39581
39580 :: NORM :: compound :: Z :: return v24::CF,39519
39581 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,39580
39607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,39608:CD,39612:JM,39616:JM,39620:JM,39624:JM,39626:JM,39614
39608 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
39612 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,39613:CD,39614
39613 :: NORM :: compound :: Z :: return #(1)::DD,39608
39614 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,39615:CD,39616:CD,39620:CD,39624:JM,39626:JM,39612:JM,39614
39615 :: NORM :: compound :: Z :: return #(0)::DD,39608
39616 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,39616:JM,39620:JM,39624:JM,39626:JM,39612:JM,39614
39620 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,39616:JM,39620:JM,39624:JM,39626:JM,39612
39624 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,39625:CD,39626:CD,39630
39625 :: NORM :: compound :: Z :: return #(0)::DD,39608
39626 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
39627 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,39630
39630 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,39634:CD,39642:CD,39647
39631 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,39634
39634 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,39635:CD,39652
39635 :: NORM :: compound :: Z :: return #(0)::DD,39608
39636 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,39647
39639 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,39647
39642 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,39647
39647 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,39648:CD,39652
39648 :: NORM :: compound :: Z :: return #(0)::DD,39608
39649 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,39652
39652 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,39656:CD,39664:CD,39669
39653 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,39656
39656 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,39657:CD,39674
39657 :: NORM :: compound :: Z :: return #(0)::DD,39608
39658 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,39669
39661 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,39669
39664 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,39669
39669 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,39670:CD,39674
39670 :: NORM :: compound :: Z :: return #(0)::DD,39608
39671 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,39674
39674 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,39678:CD,39686:CD,39691
39675 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,39678
39678 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,39679:CD,39696
39679 :: NORM :: compound :: Z :: return #(0)::DD,39608
39680 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,39691
39683 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,39691
39686 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,39691
39691 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,39692:CD,39696
39692 :: NORM :: compound :: Z :: return #(0)::DD,39608
39693 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,39696
39696 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,39700:CD,39708:CD,39713
39697 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,39700
39700 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,39701:CD,39718
39701 :: NORM :: compound :: Z :: return #(0)::DD,39608
39702 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,39713
39705 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,39713
39708 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,39713
39713 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,39714:CD,39718
39714 :: NORM :: compound :: Z :: return #(0)::DD,39608
39715 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,39718
39718 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,39722:CD,39730:CD,39735
39719 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,39722
39722 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,39723:CD,39740
39723 :: NORM :: compound :: Z :: return #(0)::DD,39608
39724 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,39735
39727 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,39735
39730 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,39735
39735 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,39736:CD,39740
39736 :: NORM :: compound :: Z :: return #(0)::DD,39608
39737 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,39740
39740 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,39744:CD,39752:CD,39757
39741 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,39744
39744 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,39745:CD,39762
39745 :: NORM :: compound :: Z :: return #(0)::DD,39608
39746 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,39757
39749 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,39757
39752 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,39757
39757 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,39758:CD,39762
39758 :: NORM :: compound :: Z :: return #(0)::DD,39608
39759 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,39762
39762 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,39766:CD,39774:CD,39779
39763 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,39766
39766 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,39767:CD,39784
39767 :: NORM :: compound :: Z :: return #(0)::DD,39608
39768 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,39779
39771 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,39779
39774 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,39779
39779 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,39780:CD,39784
39780 :: NORM :: compound :: Z :: return #(0)::DD,39608
39781 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,39784
39784 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,39788:CD,39796:CD,39801
39785 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,39788
39788 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,39789:CD,39806
39789 :: NORM :: compound :: Z :: return #(0)::DD,39608
39790 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,39801
39793 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,39801
39796 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,39801
39801 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,39802:CD,39806
39802 :: NORM :: compound :: Z :: return #(0)::DD,39608
39803 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,39806
39806 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,39810:CD,39818:CD,39823
39807 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,39810
39810 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,39811:CD,39828
39811 :: NORM :: compound :: Z :: return #(0)::DD,39608
39818 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,39823
39823 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,39824:CD,39828
39824 :: NORM :: compound :: Z :: return #(0)::DD,39608
39825 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,39828
39828 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,39832:CD,39840:CD,39845
39829 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,39832
39832 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,39833:CD,39850
39833 :: NORM :: compound :: Z :: return #(0)::DD,39608
39834 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,39845
39837 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,39845
39840 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,39845
39845 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,39846:CD,39850
39846 :: NORM :: compound :: Z :: return #(0)::DD,39608
39847 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,39850
39850 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,39854:CD,39862:CD,39867
39851 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,39854
39854 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,39855:CD,39872
39855 :: NORM :: compound :: Z :: return #(0)::DD,39608
39856 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,39867
39859 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,39867
39862 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,39867
39867 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,39868:CD,39872
39868 :: NORM :: compound :: Z :: return #(0)::DD,39608
39869 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,39872
39872 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,39876:CD,39884:CD,39889
39873 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,39876
39876 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,39877:CD,39894
39877 :: NORM :: compound :: Z :: return #(0)::DD,39608
39878 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,39889
39881 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,39889
39884 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,39889
39889 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,39890:CD,39894
39890 :: NORM :: compound :: Z :: return #(0)::DD,39608
39891 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,39894
39894 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,39898:CD,39906:CD,39911
39895 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,39898
39898 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,39899:CD,39916
39899 :: NORM :: compound :: Z :: return #(0)::DD,39608
39900 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,39911
39903 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,39911
39906 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,39911
39911 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,39912:CD,39916
39912 :: NORM :: compound :: Z :: return #(0)::DD,39608
39913 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,39916
39916 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,39920:CD,39928:CD,39933
39917 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,39920
39920 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,39921:CD,39938
39921 :: NORM :: compound :: Z :: return #(0)::DD,39608
39922 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,39933
39925 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,39933
39928 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,39933
39933 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,39934:CD,39938
39934 :: NORM :: compound :: Z :: return #(0)::DD,39608
39935 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,39938
39938 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,39942:CD,39950:CD,39955
39939 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,39942
39942 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,39943:CD,39960
39943 :: NORM :: compound :: Z :: return #(0)::DD,39608
39944 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,39955
39947 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,39955
39950 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,39955
39955 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,39956:CD,39960
39956 :: NORM :: compound :: Z :: return #(0)::DD,39608
39957 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,39960
39960 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,39964:CD,39972:CD,39977
39961 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,39964
39964 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,39965:CD,39982
39965 :: NORM :: compound :: Z :: return #(0)::DD,39608
39966 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,39977
39969 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,39977
39972 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,39977
39977 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,39978:CD,39982
39978 :: NORM :: compound :: Z :: return #(0)::DD,39608
39979 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,39982
39982 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,39986:CD,39994:CD,39999
39983 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,39986
39986 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,39987:CD,40001
39987 :: NORM :: compound :: Z :: return #(0)::DD,39608
39988 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,39999
39991 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,39999
39994 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,39999
39999 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,40000:CD,40001
40000 :: NORM :: compound :: Z :: return #(0)::DD,39608
40001 :: NORM :: compound :: Z :: return #(1)::DD,39608
40167 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,40168:CD,40172:JM,40176:JM,40180:JM,40184:JM,40186:JM,40174
40168 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
40172 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40173:CD,40174
40173 :: NORM :: compound :: Z :: return #(1)::CF,40168
40174 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40175:CD,40176:CD,40180:CD,40184:JM,40186:JM,40172:JM,40174
40175 :: NORM :: compound :: Z :: return #(0)::CF,40168
40176 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40176:JM,40180:JM,40184:JM,40186:JM,40172:JM,40174
40180 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40176:JM,40180:JM,40184:JM,40186:JM,40172
40184 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40185:CD,40186:CD,40190
40185 :: NORM :: compound :: Z :: return #(0)::CF,40168
40186 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40187 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,40190
40190 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40194:CD,40202:CD,40207
40191 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,40194
40194 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40195:CD,40212
40195 :: NORM :: compound :: Z :: return #(0)::CF,40168
40196 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,40207
40199 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,40207
40202 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40207
40207 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40208:CD,40212
40208 :: NORM :: compound :: Z :: return #(0)::CF,40168
40209 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,40212
40212 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40216:CD,40224:CD,40229
40213 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,40216
40216 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40217:CD,40234
40217 :: NORM :: compound :: Z :: return #(0)::CF,40168
40218 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,40229
40221 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,40229
40224 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40229
40229 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40230:CD,40234
40230 :: NORM :: compound :: Z :: return #(0)::CF,40168
40231 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,40234
40234 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40238:CD,40246:CD,40251
40235 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,40238
40238 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40239:CD,40256
40239 :: NORM :: compound :: Z :: return #(0)::CF,40168
40240 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,40251
40243 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,40251
40246 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40251
40251 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40252:CD,40256
40252 :: NORM :: compound :: Z :: return #(0)::CF,40168
40253 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,40256
40256 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,40260:CD,40268:CD,40273
40257 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,40260
40260 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,40261:CD,40278
40261 :: NORM :: compound :: Z :: return #(0)::CF,40168
40262 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,40273
40265 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,40273
40268 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,40273
40273 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,40274:CD,40278
40274 :: NORM :: compound :: Z :: return #(0)::CF,40168
40275 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,40278
40278 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,40282:CD,40290:CD,40295
40279 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,40282
40282 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,40283:CD,40300
40283 :: NORM :: compound :: Z :: return #(0)::CF,40168
40284 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,40295
40287 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,40295
40290 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,40295
40295 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,40296:CD,40300
40296 :: NORM :: compound :: Z :: return #(0)::CF,40168
40297 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,40300
40300 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,40304:CD,40312:CD,40317
40301 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,40304
40304 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,40305:CD,40319
40305 :: NORM :: compound :: Z :: return #(0)::CF,40168
40306 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,40317
40309 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,40317
40312 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,40317
40317 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,40318:CD,40319
40318 :: NORM :: compound :: Z :: return #(0)::CF,40168
40319 :: NORM :: compound :: Z :: return #(1)::CF,40168
40573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,40574:CD,40578:JM,40592:JM,40580:JM,40582:JM,40586:JM,40590
40574 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,40976:JM,40998:JM,92602:JM,145628:JM,148683
40578 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40579:CD,40580
40579 :: NORM :: compound :: Z :: return #(1)::CF,40574
40580 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40581:CD,40582:CD,40586:CD,40590:JM,40592:JM,40578:JM,40580
40581 :: NORM :: compound :: Z :: return #(0)::CF,40574
40582 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40592:JM,40578:JM,40580:JM,40582:JM,40586:JM,40590
40586 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40592:JM,40578:JM,40582:JM,40586:JM,40590
40590 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40591:CD,40592:CD,40596
40591 :: NORM :: compound :: Z :: return #(0)::CF,40574
40592 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40593 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,40596
40596 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40600:CD,40608:CD,40613
40597 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,40600
40600 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40601:CD,40618
40601 :: NORM :: compound :: Z :: return #(0)::CF,40574
40602 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,40613
40605 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,40613
40608 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40613
40613 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40614:CD,40618
40614 :: NORM :: compound :: Z :: return #(0)::CF,40574
40615 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,40618
40618 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40622:CD,40630:CD,40635
40619 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,40622
40622 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40623:CD,40640
40623 :: NORM :: compound :: Z :: return #(0)::CF,40574
40624 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,40635
40627 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,40635
40630 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40635
40635 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40636:CD,40640
40636 :: NORM :: compound :: Z :: return #(0)::CF,40574
40637 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,40640
40640 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40644:CD,40652:CD,40657
40641 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,40644
40644 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40645:CD,40659
40645 :: NORM :: compound :: Z :: return #(0)::CF,40574
40646 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,40657
40649 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,40657
40652 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40657
40657 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40658:CD,40659
40658 :: NORM :: compound :: Z :: return #(0)::CF,40574
40659 :: NORM :: compound :: Z :: return #(1)::CF,40574
40771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,40772:CD,40776:CD,40777:JM,40779
40772 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
40776 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,40777
40777 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,40778:CD,40779:CD,40786
40778 :: NORM :: compound :: Z :: return #(0)::CF,40772
40779 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
40780 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,40786
40783 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,40786
40786 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,40787:CD,40788
40787 :: NORM :: compound :: Z :: return #(1)::CF,40772
40788 :: NORM :: compound :: Z :: return #(0)::CF,40772
40914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,40915:CD,40919:JM,40931:JM,40933:JM,40921:JM,40923:JM,40927
40915 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
40919 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40920:CD,40921
40920 :: NORM :: compound :: Z :: return #(1)::CF,40915
40921 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40922:CD,40923:CD,40927:CD,40931:JM,40933:JM,40919:JM,40921
40922 :: NORM :: compound :: Z :: return #(0)::CF,40915
40923 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40931:JM,40933:JM,40919:JM,40921:JM,40923:JM,40927
40927 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40931:JM,40933:JM,40919:JM,40923:JM,40927
40931 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40932:CD,40933:CD,40937
40932 :: NORM :: compound :: Z :: return #(0)::CF,40915
40933 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40934 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,40937
40937 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40941:CD,40949:CD,40954
40938 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,40941
40941 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40942:CD,40959
40942 :: NORM :: compound :: Z :: return #(0)::CF,40915
40943 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,40954
40946 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,40954
40949 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40954
40954 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40955:CD,40959
40955 :: NORM :: compound :: Z :: return #(0)::CF,40915
40956 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,40959
40959 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40963:CD,40971:CD,40976
40960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,40963
40963 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40964:CD,40981
40964 :: NORM :: compound :: Z :: return #(0)::CF,40915
40971 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40976:CL,40573
40976 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40977:CD,40981
40977 :: NORM :: compound :: Z :: return #(0)::CF,40915
40978 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,40981
40981 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40985:CD,40993:CD,40998
40982 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,40985
40985 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40986:CD,41000
40986 :: NORM :: compound :: Z :: return #(0)::CF,40915
40993 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40998:CL,40573
40998 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40999:CD,41000
40999 :: NORM :: compound :: Z :: return #(0)::CF,40915
41000 :: NORM :: compound :: Z :: return #(1)::CF,40915
41040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,41041:CD,41045:JM,41057:JM,41047:JM,41051:JM,41055
41041 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
41045 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,41046:CD,41047:CD,41051:CD,41055:JM,41057:JM,41045
41046 :: NORM :: compound :: Z :: return #(0)::DD,41041
41047 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41057:JM,41045:JM,41047:JM,41051:JM,41055
41051 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41057:JM,41045:JM,41047:JM,41051:JM,41055
41055 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,41056:CD,41057:CD,41061
41056 :: NORM :: compound :: Z :: return #(0)::DD,41041
41057 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41058 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,41061
41061 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,41065:CD,41073:CD,41078
41062 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,41065
41065 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,41079:CD,41086
41067 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,41078
41070 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,41078
41073 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41078
41078 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,41079:CD,41086
41079 :: NORM :: compound :: Z :: return #(0)::DD,41041
41080 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,41086
41083 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,41086
41086 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,41090:CD,41107
41087 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,41090
41090 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,41097:CD,41102:CD,41103
41097 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,41102
41102 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,41103:CD,41107
41103 :: NORM :: compound :: Z :: return #(0)::DD,41041
41104 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,41107
41107 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,41111:CD,41119:CD,41124
41108 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,41111
41111 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,41125:CD,41129
41113 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,41124
41116 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,41124
41119 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,41124
41124 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,41125:CD,41129
41125 :: NORM :: compound :: Z :: return #(0)::DD,41041
41126 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,41129
41129 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,41133:CD,41141:CD,41146
41130 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,41133
41133 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,41147:CD,41148
41135 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,41146
41138 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,41146
41141 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,41146
41146 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,41147:CD,41148
41147 :: NORM :: compound :: Z :: return #(0)::DD,41041
41148 :: NORM :: compound :: Z :: return #(1)::DD,41041
41331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,41332:CD,41334:CD,41336:CD,41337:CD,41345
41332 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,36703:JM,36789
41334 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,41336
41336 :: EXPR :: assign :: I :: v4 = v2.length::DD,41337
41337 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,41345
41345 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,41332
41631 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,41635
41635 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
41639 :: CALL :: call :: V :: v7.printStackTrace()::
42254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,42255:CD,42258:CD,42262:CD,42266:CD,42270
42255 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,37474
42258 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,47679
42262 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,42266:JM,42270:CL,47737
42266 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,42266:JM,42270
42270 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,42255
42276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,42279:CD,42281
42279 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,42281
42281 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,47810:JM,47803:CD,42286:CD,42287:CD,42295
42286 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,42295
42287 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,47832
42295 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
42305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,42306:CD,42308:CD,42310:CD,42311:CD,42319
42306 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,37614
42308 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,42310
42310 :: EXPR :: assign :: I :: v4 = v2.length::DD,42311
42311 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,42319
42319 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,42306
42345 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,47954
42349 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,47954
42353 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,47954
42357 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,47954
42361 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,47954
42365 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,47954
42393 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,47954
42397 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,47954
42401 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,47954
42405 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,47954
42438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.printAboutMe()::CD,42441:CD,42445:CD,42450:CD,42457:CD,42462:CD,42467:CD,42472:CD,42477:CD,42481:CD,42486
42441 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(about))::CL,36910
42445 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getString(#(project_version))::CL,36922
42450 :: CALL :: call :: Ljava/lang/String :: v10 = v4.getString(#(build))::CL,36922
42457 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
42462 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v7)::
42467 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#( ))::
42472 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v10)::
42477 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
42481 :: CALL :: call :: V :: v11.println(v23)::
42486 :: CALL :: call :: V :: v25.printStackTrace()::
43453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CliTools.configureBean(java.lang.Object,java.lang.String[])::CD,43458:CD,43462:CD,43468:CD,43473:CD,43477:CD,43482:CD,43491:CD,43495:CD,43499:CD,43516:CD,43517:CD,43521:CD,43525:CD,43582:CD,43587:CD,43592:CD,43597:CD,43602:CD,43607:CD,43627:CD,43632:CD,43637:CD,43642:CD,43652:CD,43657:CD,43662:CD,43667:CD,43704:CD,43709:CD,43714:CD,43719:CD,43745:CD,43750:CD,43755:CD,43760:CD,43820:CD,43825:CD,43830:CD,43835:CD,43907:CD,43912:CD,43917:CD,43922:CD,43971:CD,43976:CD,43981:CD,43986:CD,44040:CD,44045:CD,44050:CD,44055:CD,44104:CD,44109:CD,44114:CD,44119:CD,44144:CD,44148:CD,44154:CD,44158:CD,44163:CD,44168:CD,44173:CD,44177:CD,44182:CD,44187:CD,44197:CD,44198:CD,44202:CD,44207:CD,44212:CD,44215:CD,44288:CD,44293:CD,44297:CD,44302:CD,44328:CD,44333:CD,44337:CD,44342:CD,44347:CD,44357:CD,44362:CD,44366:CD,44371:CD,44376:CD,44397:CD,44398:CD,44399:CD,44403:CD,44453:CD,44458:CD,44462:CD,44467:CD,44472:CD,44513:CD,44518:CD,44522:CD,44527:CD,44532:CD,44542:CD,44547:CD,44551:CD,44556:CD,44561:CD,44570:CD,44574:CD,44575:CD,44579:CD,44580:CD,44587:CD,44600:CD,44603:CD,44616
43458 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $bean .getClass()::JM,43458:JM,43462:JM,43495:JM,43499:JM,44397
43462 :: CALL :: call :: Ljava/beans/BeanInfo :: v7 = getBeanInfo(v5)::JM,43462:JM,43495:JM,43499
43468 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
43473 :: CALL :: call :: Ljava/lang/String :: v14 = v8.getMessage()::
43477 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
43482 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
43491 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::
43495 :: CALL :: call :: [Ljava/beans/PropertyDescriptor :: v23 = v7.getPropertyDescriptors()::JM,43495:JM,43499
43499 :: EXPR :: assign :: I :: v24 = v23.length::DD,43516
43509 :: CALL :: call :: Ljava/lang/Object :: v30 = v20.put(v28, v26)::
43515 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,44600
43516 :: PRED :: IF :: Z :: if (v33 < v24) goto 69::CF,43517:CD,43509:CD,43515:CD,44600
43517 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::JM,44579
43521 :: NORM :: declaration :: Ljava/util/HashMap :: v36 = new java.util.HashMap::JM,44412:JM,44574
43525 :: NORM :: declaration :: Ljava/util/HashSet :: v38 = new java.util.HashSet::
43530 :: EXPR :: reference :: Ljava/lang/Object :: v41 = p2 $args [v232]::DD,43534:JM,43540:JM,43546:JM,43570
43534 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 151::CD,43536:CD,43540:CD,44613
43536 :: CALL :: call :: I :: v44 = v41.length()::JM,43540
43540 :: PRED :: IF :: Z :: if (v44 <= #(0)) goto 1538::CD,43541:CD,43546:CD,44391:CD,44613
43541 :: CALL :: call :: C :: v46 = v41.charAt(#(0))::JM,43546
43546 :: PRED :: IF :: Z :: if (v46 != #(45)) goto 1538::CD,43547:CD,43552:CD,43557:CD,43558:CD,44257:CD,44391:CD,44606:CD,44607:CD,44608:CD,44609:CD,44613
43547 :: CALL :: call :: Ljava/lang/String :: v49 = v41.substring(#(1))::
43552 :: CALL :: call :: Ljava/lang/Object :: v51 = v20.get(v49)::JM,43557
43557 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,43558:JM,43680:JM,43684:JM,43685:JM,44602:JM,43676:DD,44607
43558 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 361::CD,43565:CD,43570:CD,43574:CD,43579:CD,43623:CD,43676:CD,43680:CD,43684:CD,43689:CD,43691:CD,44601:CD,44602:CD,44606:CD,44607:CD,44608:CD,44609:JM,43685
43565 :: CALL :: call :: Ljava/lang/String :: v58 = v41.substring(#(3))::JM,43570
43570 :: CALL :: call :: Ljava/lang/String :: v60 = decapitalize(v58)::JM,43570
43574 :: CALL :: call :: Ljava/lang/Object :: v62 = v20.get(v60)::JM,43579
43579 :: EXPR :: assign :: Ljava/lang/Object :: v63 = CHECKCAST v62::DD,44607
43582 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v510 = new java.lang.StringBuilder::
43587 :: CALL :: call :: Ljava/lang/String :: v513 = v41.substring(#(1))::
43592 :: CALL :: call :: Ljava/lang/StringBuilder :: v515 = v510.append(v513)::
43597 :: CALL :: call :: Ljava/lang/StringBuilder :: v518 = v515.append(#( or ))::
43602 :: CALL :: call :: Ljava/lang/StringBuilder :: v520 = v518.append(v60)::
43607 :: CALL :: call :: Ljava/lang/String :: v522 = v520.toString()::
43623 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = java.lang.Boolean.FALSE::DD,44609
43627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v461 = new java.lang.StringBuilder::
43632 :: CALL :: call :: Ljava/lang/StringBuilder :: v465 = v461.append(v41)::
43637 :: CALL :: call :: Ljava/lang/StringBuilder :: v468 = v465.append(#( does not refer to a ...))::
43642 :: CALL :: call :: Ljava/lang/String :: v470 = v468.toString()::
43652 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v450 = new java.lang.StringBuilder::
43657 :: CALL :: call :: Ljava/lang/String :: v454 = v41.substring(#(1))::
43662 :: CALL :: call :: Ljava/lang/StringBuilder :: v456 = v450.append(v454)::
43667 :: CALL :: call :: Ljava/lang/String :: v458 = v456.toString()::
43676 :: CALL :: call :: Ljava/lang/Class :: v69 = v52.getPropertyType()::JM,43680:JM,43684:JM,43685:JM,44602:JM,43676
43680 :: CALL :: call :: Z :: v71 = v69.isArray()::JM,43680:JM,43684:JM,43685:JM,44602
43684 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 386::CF,44601:CD,43685:CD,44602:JM,43680:JM,43684
43685 :: CALL :: call :: Ljava/lang/Class :: v73 = v69.getComponentType()::JM,43680:JM,43684:JM,43685:JM,44602
43689 :: EXPR :: reference :: Ljava/lang/Class :: v76 = java.lang.Integer.TYPE::CF,43691
43691 :: PRED :: IF :: Z :: if (v75 != v76) goto 445::CF,43692:CD,43693:CD,43728:CD,43730:CD,44606:CD,44607:CD,44608:CD,44609
43692 :: NORM :: declaration :: Ljava/lang/Integer :: v77 = new java.lang.Integer::JM,43692:DD,44609:CF,43693
43693 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v232 + #(1)::DD,44606
43694 :: EXPR :: reference :: Ljava/lang/Object :: v79 = p2 $args [v78]::JM,43692
43704 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v439 = new java.lang.StringBuilder::
43709 :: CALL :: call :: Ljava/lang/StringBuilder :: v442 = v439.append(v41)::
43714 :: CALL :: call :: Ljava/lang/StringBuilder :: v445 = v442.append(#( requires an integer ...))::
43719 :: CALL :: call :: Ljava/lang/String :: v447 = v445.toString()::
43728 :: EXPR :: reference :: Ljava/lang/Class :: v81 = java.lang.Double.TYPE::CF,43730
43730 :: PRED :: IF :: Z :: if (v75 == v81) goto 458::CF,43733:CD,43731:CD,43732:CD,43734:CD,44606:CD,44607:CD,44608:CD,44609
43731 :: EXPR :: assign :: Ljava/lang/Class :: v82 = metadata <Application,Ljava/lang/Double>-><Primordial,Ljava/lang/Class>::CF,43732
43732 :: PRED :: IF :: Z :: if (v75 != v82) goto 511::CF,43733:CD,43734:CD,43769:CD,43770:CD,44606:CD,44607:CD,44608:CD,44609
43733 :: NORM :: declaration :: Ljava/lang/Double :: v83 = new java.lang.Double::DD,44609:CF,43734
43734 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v232 + #(1)::DD,44606
43735 :: EXPR :: reference :: Ljava/lang/Object :: v85 = p2 $args [v84]::
43745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v427 = new java.lang.StringBuilder::
43750 :: CALL :: call :: Ljava/lang/StringBuilder :: v430 = v427.append(v41)::
43755 :: CALL :: call :: Ljava/lang/StringBuilder :: v433 = v430.append(#( requires a numerical...))::
43760 :: CALL :: call :: Ljava/lang/String :: v435 = v433.toString()::
43769 :: EXPR :: assign :: Ljava/lang/Class :: v87 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::CF,43770
43770 :: PRED :: IF :: Z :: if (v75 != v87) goto 530::CD,43771:CD,43777:CD,43779:CD,44606:CD,44607:CD,44608:CD,44609
43771 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v232 + #(1)::DD,44606
43772 :: EXPR :: reference :: Ljava/lang/Object :: v89 = p2 $args [v88]::DD,44609
43777 :: EXPR :: reference :: Ljava/lang/Class :: v90 = java.lang.Boolean.TYPE::CF,43779
43779 :: PRED :: IF :: Z :: if (v75 != v90) goto 644::CF,43844:CD,43780:CD,43785:CD,43845:CD,43850
43780 :: EXPR :: assign :: Ljava/lang/Object :: v91 = v232 + #(1)::DD,44606
43781 :: EXPR :: reference :: Ljava/lang/Object :: v92 = p2 $args [v91]::DD,43785:JM,43794:JM,43800
43785 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 562::CD,43786:CD,43789:CD,43794:CD,44606:CD,44607:CD,44608:CD,44609
43786 :: EXPR :: reference :: Ljava/lang/Boolean :: v93 = java.lang.Boolean.TRUE::DD,44609
43789 :: CALL :: call :: Z :: v96 = v92.equalsIgnoreCase(#(true))::JM,43794
43794 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 578::CD,43795:CD,43800:CD,43801:CD,44606:CD,44607:CD,44608:CD,44609
43795 :: CALL :: call :: Z :: v99 = v92.equalsIgnoreCase(#(t))::JM,43800
43800 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 590::CD,43801:CD,43816:CD,44606:CD,44607:CD,44608:CD,44609
43801 :: EXPR :: reference :: Ljava/lang/Boolean :: v100 = java.lang.Boolean.TRUE::DD,44609
43816 :: EXPR :: reference :: Ljava/lang/Boolean :: v107 = java.lang.Boolean.FALSE::DD,44609
43820 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v415 = new java.lang.StringBuilder::
43825 :: CALL :: call :: Ljava/lang/StringBuilder :: v418 = v415.append(v41)::
43830 :: CALL :: call :: Ljava/lang/StringBuilder :: v421 = v418.append(#( requires a boolean p...))::
43835 :: CALL :: call :: Ljava/lang/String :: v423 = v421.toString()::
43844 :: EXPR :: assign :: Ljava/lang/Class :: v108 = metadata <Application,Ljava/io/File>-><Primordial,Ljava/lang/Class>::JM,43845:JM,43850
43845 :: CALL :: call :: Z :: v110 = v108.isAssignableFrom(v75)::JM,43845:JM,43850
43850 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 673::CF,43862:CF,43851:CD,43852:CD,43863:CD,43868:CD,44606:CD,44607:CD,44608:CD,44609
43851 :: NORM :: declaration :: Ljava/io/File :: v111 = new java.io.File::DD,44609:CF,43852
43852 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v232 + #(1)::DD,44606
43853 :: EXPR :: reference :: Ljava/lang/Object :: v113 = p2 $args [v112]::
43862 :: EXPR :: assign :: Ljava/lang/Class :: v115 = metadata <Application,Ljava/io/Reader>-><Primordial,Ljava/lang/Class>::JM,43863:JM,43868
43863 :: CALL :: call :: Z :: v117 = v115.isAssignableFrom(v75)::JM,43863:JM,43868
43868 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 788::CF,43931:CD,43869:CD,43874:CD,43879:CD,43932:CD,43937
43869 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v232 + #(1)::DD,44606
43870 :: EXPR :: reference :: Ljava/lang/Object :: v119 = p2 $args [v118]::JM,43879
43874 :: CALL :: call :: Z :: v122 = #(-).equals(v119)::JM,43879
43879 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 735::CF,43895:CD,43887:CD,43896:CD,44606:CD,44607:CD,44608:CD,44609
43887 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v123 = new java.io.InputStreamReader::DD,44609
43895 :: NORM :: declaration :: Ljava/io/FileReader :: v126 = new java.io.FileReader::DD,44609:CF,43896
43896 :: NORM :: declaration :: Ljava/io/File :: v127 = new java.io.File::
43907 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v403 = new java.lang.StringBuilder::
43912 :: CALL :: call :: Ljava/lang/StringBuilder :: v406 = v403.append(v119)::
43917 :: CALL :: call :: Ljava/lang/StringBuilder :: v408 = v406.append(#( for input))::
43922 :: CALL :: call :: Ljava/lang/String :: v410 = v408.toString()::
43931 :: EXPR :: assign :: Ljava/lang/Class :: v130 = metadata <Application,Ljava/io/InputStream>-><Primordial,Ljava/lang/Class>::JM,43937:JM,43932
43932 :: CALL :: call :: Z :: v132 = v130.isAssignableFrom(v75)::JM,43937:JM,43932
43937 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 896::CF,43995:CD,43938:CD,43943:CD,43948:CD,43996:CD,44001
43938 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v232 + #(1)::DD,44606
43939 :: EXPR :: reference :: Ljava/lang/Object :: v134 = p2 $args [v133]::JM,43948
43943 :: CALL :: call :: Z :: v136 = #(-).equals(v134)::JM,43948
43948 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 843::CF,43959:CD,43956:CD,43960:CD,44606:CD,44607:CD,44608:CD,44609
43956 :: EXPR :: reference :: Ljava/io/InputStream :: v137 = java.lang.System.in::DD,44609
43959 :: NORM :: declaration :: Ljava/io/FileInputStream :: v138 = new java.io.FileInputStream::DD,44609:CF,43960
43960 :: NORM :: declaration :: Ljava/io/File :: v139 = new java.io.File::
43971 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v388 = new java.lang.StringBuilder::
43976 :: CALL :: call :: Ljava/lang/StringBuilder :: v391 = v388.append(v134)::
43981 :: CALL :: call :: Ljava/lang/StringBuilder :: v394 = v391.append(#( for input))::
43986 :: CALL :: call :: Ljava/lang/String :: v396 = v394.toString()::
43995 :: EXPR :: assign :: Ljava/lang/Class :: v142 = metadata <Application,Ljava/io/Writer>-><Primordial,Ljava/lang/Class>::JM,44001:JM,43996
43996 :: CALL :: call :: Z :: v144 = v142.isAssignableFrom(v75)::JM,44001:JM,43996
44001 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 1011::CF,44064:CD,44002:CD,44007:CD,44012:CD,44065:CD,44070
44002 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v232 + #(1)::DD,44606
44003 :: EXPR :: reference :: Ljava/lang/Object :: v146 = p2 $args [v145]::JM,44012
44007 :: CALL :: call :: Z :: v148 = #(-).equals(v146)::JM,44012
44012 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 958::CF,44028:CD,44020:CD,44029:CD,44606:CD,44607:CD,44608:CD,44609
44020 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v149 = new java.io.OutputStreamWriter::DD,44609
44028 :: NORM :: declaration :: Ljava/io/FileWriter :: v152 = new java.io.FileWriter::DD,44609:CF,44029
44029 :: NORM :: declaration :: Ljava/io/File :: v153 = new java.io.File::
44040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v375 = new java.lang.StringBuilder::
44045 :: CALL :: call :: Ljava/lang/StringBuilder :: v378 = v375.append(v146)::
44050 :: CALL :: call :: Ljava/lang/StringBuilder :: v380 = v378.append(#( for output))::
44055 :: CALL :: call :: Ljava/lang/String :: v382 = v380.toString()::
44064 :: EXPR :: assign :: Ljava/lang/Class :: v156 = metadata <Application,Ljava/io/OutputStream>-><Primordial,Ljava/lang/Class>::JM,44065:JM,44070
44065 :: CALL :: call :: Z :: v158 = v156.isAssignableFrom(v75)::JM,44065:JM,44070
44070 :: PRED :: IF :: Z :: if (v158 == #(0)) goto 1121::CD,44071:CD,44076:CD,44081:CD,44128:CD,44132
44071 :: EXPR :: assign :: Ljava/lang/Object :: v159 = v232 + #(1)::DD,44606
44072 :: EXPR :: reference :: Ljava/lang/Object :: v160 = p2 $args [v159]::JM,44081
44076 :: CALL :: call :: Z :: v162 = #(-).equals(v160)::JM,44081
44081 :: PRED :: IF :: Z :: if (v162 == #(0)) goto 1066::CF,44092:CD,44089:CD,44093:CD,44606:CD,44607:CD,44608:CD,44609
44089 :: EXPR :: reference :: Ljava/io/PrintStream :: v163 = java.lang.System.out::DD,44609
44092 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v164 = new java.io.FileOutputStream::DD,44609:CF,44093
44093 :: NORM :: declaration :: Ljava/io/File :: v165 = new java.io.File::
44104 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v359 = new java.lang.StringBuilder::
44109 :: CALL :: call :: Ljava/lang/StringBuilder :: v363 = v359.append(v160)::
44114 :: CALL :: call :: Ljava/lang/StringBuilder :: v366 = v363.append(#( for output))::
44119 :: CALL :: call :: Ljava/lang/String :: v368 = v366.toString()::
44128 :: CALL :: call :: Z :: v169 = v75.isEnum()::JM,44128:JM,44132
44132 :: PRED :: IF :: Z :: if (v169 == #(0)) goto 1287::CD,44133:CD,44138:CD,44226:CD,44231:CD,44236:CD,44241:CD,44246:CD,44250:CD,44254:CD,44606:CD,44607:CD,44608:CD,44609
44133 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v232 + #(1)::DD,44606
44138 :: CALL :: call :: Ljava/lang/Enum :: v173 = valueOf(v75, v171)::JM,44609
44144 :: CALL :: call :: Ljava/lang/String :: v176 = v171.toUpperCase()::
44148 :: CALL :: call :: Ljava/lang/Enum :: v178 = valueOf(v75, v176)::JM,44609
44154 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v322 = new java.lang.StringBuilder::
44158 :: CALL :: call :: Ljava/lang/StringBuilder :: v326 = v322.append(#(Option ))::
44163 :: CALL :: call :: Ljava/lang/StringBuilder :: v328 = v326.append(v41)::
44168 :: CALL :: call :: Ljava/lang/StringBuilder :: v331 = v322.append(#( requires a ))::
44173 :: CALL :: call :: Ljava/lang/String :: v333 = v75.getSimpleName()::
44177 :: CALL :: call :: Ljava/lang/StringBuilder :: v335 = v331.append(v333)::
44182 :: CALL :: call :: Ljava/lang/StringBuilder :: v338 = v322.append(#( parameter. One of: ))::
44187 :: CALL :: call :: [Ljava/lang/Object :: v340 = v75.getEnumConstants()::
44193 :: EXPR :: reference :: Ljava/lang/Object :: v342 = v340[v352]::DD,44197
44197 :: EXPR :: assign :: Ljava/lang/Object :: v343 = CHECKCAST v342::
44198 :: CALL :: call :: Ljava/lang/String :: v345 = v343.name()::
44202 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v322.append(v345)::
44207 :: CALL :: call :: Ljava/lang/StringBuilder :: v350 = v322.append(#( ))::
44212 :: EXPR :: assign :: Ljava/lang/Object :: v351 = v352 + #(1)::DD,44603
44215 :: CALL :: call :: Ljava/lang/String :: v355 = v322.toString()::
44226 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v180 = new java.lang.StringBuilder::
44231 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v180.append(v41)::
44236 :: CALL :: call :: Ljava/lang/StringBuilder :: v187 = v184.append(#( propType:))::
44241 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v187.append(v75)::
44246 :: CALL :: call :: Ljava/lang/String :: v191 = v189.toString()::
44250 :: CALL :: call :: V :: v179.println(v191)::
44254 :: CALL :: call :: V :: exit(#(1))::
44257 :: PRED :: IF :: Z :: if (v199 == #(0)) goto 1388::CD,44258:CD,44263:CD,44264:CD,44275:CD,44281:CD,44385:CD,44610:CD,44613
44258 :: CALL :: call :: Ljava/lang/Object :: v204 = v36.get(v198)::JM,44263
44263 :: EXPR :: assign :: Ljava/lang/Object :: v205 = CHECKCAST v204::DD,44264:DD,44610
44264 :: PRED :: IF :: Z :: if (v205 != #(null)) goto 1375::CF,44610:CF,44265:CD,44269
44265 :: NORM :: declaration :: Ljava/util/ArrayList :: v206 = new java.util.ArrayList::DD,44610
44269 :: CALL :: call :: Ljava/lang/Object :: v209 = v36.put(v198, v206)::
44275 :: CALL :: call :: Z :: v212 = v210.add(v200)::
44281 :: CALL :: call :: Z :: v214 = v38.contains(v198)::
44288 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v499 = new java.lang.StringBuilder::
44293 :: CALL :: call :: Ljava/lang/String :: v503 = v198.getName()::
44297 :: CALL :: call :: Ljava/lang/StringBuilder :: v505 = v499.append(v503)::
44302 :: CALL :: call :: Ljava/lang/String :: v507 = v505.toString()::
44328 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v487 = new java.lang.StringBuilder::
44333 :: CALL :: call :: Ljava/lang/String :: v490 = v198.getName()::
44337 :: CALL :: call :: Ljava/lang/StringBuilder :: v492 = v487.append(v490)::
44342 :: CALL :: call :: Ljava/lang/StringBuilder :: v494 = v492.append(#('))::
44347 :: CALL :: call :: Ljava/lang/String :: v496 = v494.toString()::
44357 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v474 = new java.lang.StringBuilder::
44362 :: CALL :: call :: Ljava/lang/String :: v477 = v198.getName()::
44366 :: CALL :: call :: Ljava/lang/StringBuilder :: v479 = v474.append(v477)::
44371 :: CALL :: call :: Ljava/lang/StringBuilder :: v481 = v479.append(#('))::
44376 :: CALL :: call :: Ljava/lang/String :: v483 = v481.toString()::
44385 :: CALL :: call :: Z :: v221 = v38.add(v198)::
44391 :: CALL :: call :: Z :: v223 = v34.add(v41)::
44396 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v227 + #(1)::DD,44616
44397 :: EXPR :: assign :: I :: v40 = p2 $args .length::CF,44398
44398 :: PRED :: IF :: Z :: if (v232 < v40) goto 138::CD,43534:CD,44396:CD,44397:CD,44613:CD,44616:JM,44412:JM,44574
44399 :: CALL :: call :: Ljava/util/Set :: v234 = v36.entrySet()::JM,44412:JM,44574
44403 :: CALL :: call :: Ljava/util/Iterator :: v236 = v234.iterator()::JM,44412:JM,44574
44408 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.next()::JM,44412:JM,44574
44412 :: EXPR :: assign :: Ljava/lang/Object :: v241 = CHECKCAST v240::JM,44417:JM,44422
44413 :: CALL :: call :: Ljava/lang/Object :: v243 = v241.getKey()::JM,44417
44417 :: EXPR :: assign :: Ljava/lang/Object :: v244 = CHECKCAST v243::JM,44435:JM,44485:JM,44438:JM,44423:JM,44490:JM,44427:JM,44431:JM,44422
44418 :: CALL :: call :: Ljava/lang/Object :: v246 = v241.getValue()::JM,44422
44422 :: EXPR :: assign :: Ljava/lang/Object :: v247 = CHECKCAST v246::JM,44485:JM,44490:JM,44435:JM,44438:JM,44423:JM,44427:JM,44431
44423 :: CALL :: call :: Ljava/lang/Class :: v249 = v244.getPropertyType()::JM,44435:JM,44485:JM,44438:JM,44423:JM,44490:JM,44427:JM,44431
44427 :: CALL :: call :: Ljava/lang/Class :: v251 = v249.getComponentType()::JM,44435:JM,44485:JM,44438:JM,44490:JM,44427:JM,44431
44431 :: CALL :: call :: Z :: v253 = v251.isPrimitive()::JM,44435:JM,44485:JM,44438:JM,44490:JM,44431
44435 :: PRED :: IF :: Z :: if (v253 == #(0)) goto 1702::CD,44436:CD,44438:CD,44481:CD,44485:CD,44490:CD,44491
44436 :: EXPR :: reference :: Ljava/lang/Class :: v254 = java.lang.Integer.TYPE::CF,44438
44438 :: PRED :: IF :: Z :: if (v251 != v254) goto 1645::CD,44439:CD,44447
44439 :: CALL :: call :: [I :: v256 = toIntArray(v247)::CL,48440
44447 :: CALL :: call :: [D :: v259 = toDoubleArray(v247)::CL,48489
44453 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v280 = new java.lang.StringBuilder::
44458 :: CALL :: call :: Ljava/lang/String :: v284 = v251.getName()::JM,44435:JM,44485:JM,44490:JM,44431
44462 :: CALL :: call :: Ljava/lang/StringBuilder :: v286 = v280.append(v284)::JM,44490
44467 :: CALL :: call :: Ljava/lang/StringBuilder :: v289 = v286.append(#( are currently unsupp...))::
44472 :: CALL :: call :: Ljava/lang/String :: v291 = v289.toString()::
44481 :: CALL :: call :: I :: v261 = v247.size()::JM,44485:JM,44490
44485 :: CALL :: call :: Ljava/lang/Object :: v263 = newInstance(v251, v261)::JM,44435:JM,44485:JM,44490:JM,44431
44490 :: EXPR :: assign :: Ljava/lang/Object :: v264 = CHECKCAST v263::
44491 :: CALL :: call :: [Ljava/lang/Object :: v266 = v247.toArray(v264)::
44513 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v310 = new java.lang.StringBuilder::
44518 :: CALL :: call :: Ljava/lang/String :: v313 = v244.getName()::
44522 :: CALL :: call :: Ljava/lang/StringBuilder :: v315 = v310.append(v313)::
44527 :: CALL :: call :: Ljava/lang/StringBuilder :: v317 = v315.append(#('))::
44532 :: CALL :: call :: Ljava/lang/String :: v319 = v317.toString()::
44542 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v295 = new java.lang.StringBuilder::
44547 :: CALL :: call :: Ljava/lang/String :: v299 = v244.getName()::
44551 :: CALL :: call :: Ljava/lang/StringBuilder :: v301 = v295.append(v299)::
44556 :: CALL :: call :: Ljava/lang/StringBuilder :: v304 = v301.append(#('))::
44561 :: CALL :: call :: Ljava/lang/String :: v306 = v304.toString()::
44570 :: CALL :: call :: Z :: v238 = v236.hasNext()::JM,44412:JM,44574
44574 :: PRED :: IF :: Z :: if (v238 != #(0)) goto 1573::CD,44408:CD,44412:CD,44413:CD,44417:CD,44418:CD,44422:CD,44423:CD,44427:CD,44431:CD,44435:CD,44570:JM,44574:JM,44579
44575 :: CALL :: call :: I :: v274 = v34.size()::JM,44579
44579 :: NORM :: declaration :: [Ljava/lang/String :: v275 = new java.lang.String[]::
44580 :: CALL :: call :: [Ljava/lang/Object :: v277 = v34.toArray(v275)::
44587 :: EXPR :: assign :: Ljava/lang/Exception :: v8 = catch <exc>::
44600 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,43515:DD,43516
44601 :: EXPR :: assign :: null :: PHI v74 = #(0), #(1)::CF,44602:DD,44608
44602 :: EXPR :: assign :: null :: PHI v75 = v69, v73::DD,43691:DD,43730:DD,43732:DD,43770:DD,43779:JM,43845:JM,43850:JM,43863:JM,43868:JM,43937:JM,43932:JM,44001:JM,43996:JM,44065:JM,44070:JM,44128:JM,44132
44603 :: EXPR :: assign :: null :: PHI v352 = #(0), v351::DD,44212
44606 :: EXPR :: assign :: null :: PHI v197 = v232, v78, v84, v88, v91, v91, v91, v112, v118, v118, v133, v133, v145, v145, v159, v159, v170, v170, v232::CF,44607:DD,44613
44607 :: EXPR :: assign :: null :: PHI v198 = v63, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52::CF,44608
44608 :: EXPR :: assign :: null :: PHI v199 = #(0), v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74::CF,44609:DD,44257
44609 :: EXPR :: assign :: null :: PHI v200 = v67, v77, v83, v89, v93, v100, v107, v111, v123, v126, v137, v138, v149, v152, v163, v164, v173, v178, #(null)::CF,44257
44610 :: EXPR :: assign :: null :: PHI v210 = v205, v206::
44613 :: EXPR :: assign :: null :: PHI v227 = v232, v197, v197, v232::DD,44396
44616 :: EXPR :: assign :: null :: PHI v232 = #(0), v228::DD,43693:DD,43734:DD,43771:DD,43780:DD,43852:DD,43869:DD,43938:DD,44002:DD,44071:DD,44133:DD,44398:DD,44606:DD,44613:CF,44397
44928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::CE,44929:CD,44935
44929 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::JM,37939:JM,45760:JM,45765:JM,45759
44932 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,44935
44935 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,44929
44979 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::CE,44980:CD,44986
44980 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::JM,37959
44983 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,44986
44986 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,44980
44988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::CE,44989:CD,44995
44989 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::JM,37979
44992 :: EXPR :: reference :: Z :: v3 = p0 $this .showMenu::DD,44995
44995 :: NORM :: compound :: Z :: return v3::CF,44989
44997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showAlignmentGUI()::CD,45000:CD,45004:CD,45010
45000 :: CALL :: call :: Ljava/lang/Class :: v4 = forName(#(org.biojava.nbio.stru...))::JM,45000
45004 :: CALL :: call :: Ljava/lang/reflect/Method :: v8 = v4.getMethod(#(getInstance), #(null))::
45010 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.invoke(v4, #(null))::
45073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::CE,45074:CD,45080
45074 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::JM,38009
45077 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .showDBresult::DD,45080
45080 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,45074
45082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showDBResults(org.biojava.nbio.structure.align.ce.StartupParameters)::CD,45086:CD,45090:CD,45094:CD,45109:CD,45115:CD,45116:CD,45117:CD,45133:CD,45140:CD,45145
45086 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/UserConfiguration :: v4 = fromStartupParams(p1 $params )::CL,48616
45090 :: CALL :: call :: Ljava/lang/Class :: v7 = forName(#(org.biojava.nbio.stru...))::JM,45090:JM,45094
45094 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.newInstance()::JM,45094
45109 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(show), v12)::
45115 :: NORM :: declaration :: [Ljava/lang/Object :: v19 = new java.lang.Object[]::CF,45116
45116 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
45117 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $params .getShowDBresult()::CL,45073
45133 :: CALL :: call :: Ljava/lang/Object :: v25 = v18.invoke(v9, v19)::
45140 :: CALL :: call :: V :: v26.printStackTrace()::
45145 :: CALL :: call :: V :: v28.println(#(Probably structure-gu...))::
45179 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::CE,45180:CD,45186
45180 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::JM,38050
45183 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb1::DD,45186
45186 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,45180
45188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::CE,45189:CD,45195
45189 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::JM,38051
45192 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file1::DD,45195
45195 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,45189
45739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::CE,45740:CD,45746
45740 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getAlignPairs()::JM,38063:JM,45896:JM,45897:JM,45902
45743 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .alignPairs::DD,45746
45746 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,45740
45748 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runDBSearch()::CD,45755:CD,45759:JM,48737:JM,48690:JM,48709:JM,48694:JM,48742:JM,48711:JM,48762:JM,48716:CD,45822:CD,45829:CD,45875:CD,45883:CD,45888:CD,45892:CD,45896
45755 :: CALL :: call :: Ljava/lang/String :: v5 = v3.getPdbFilePath()::JM,45760:JM,45765:JM,45759:CL,44928
45759 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 21::CD,45760:CD,45765:JM,47810:JM,47803:CD,45770:CD,45776:CD,45781:CD,45786:CD,45791:CD,45795
45760 :: CALL :: call :: Z :: v9 = v5.equals(#())::JM,45760:JM,45765
45765 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 64::JM,47810:JM,47803:CD,45770:CD,45776:CD,45781:CD,45786:CD,45791:CD,45795
45770 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getPdbFilePath()::CL,48672
45776 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
45781 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v16.append(v14)::
45786 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(#(.))::
45791 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
45795 :: CALL :: call :: V :: v15.println(v25)::
45822 :: CALL :: call :: Ljava/lang/String :: v38 = v36.getAlignPairs()::JM,45896:JM,45897:JM,45902:CL,45739
45829 :: CALL :: call :: Ljava/lang/String :: v41 = v39.getSearchFile()::CL,46000
45875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
45883 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v52.append(v55)::
45888 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
45892 :: CALL :: call :: V :: v51.println(v59)::
45896 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 244::CD,45897:CD,45902:CD,45913:CD,45920
45897 :: CALL :: call :: Z :: v62 = v38.equals(#())::JM,45897:JM,45902
45902 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 244::CD,45913:CD,45920
45913 :: CALL :: call :: I :: v65 = v63.getNrCPU()::CL,50667
45920 :: CALL :: call :: V :: p0 $this .runDbSearch(v34, v41, v48, v65, v66)::CL,50676
46000 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::CE,46001:CD,46007
46001 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getSearchFile()::JM,38075
46004 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .searchFile::DD,46007
46007 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46001
47679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,47683:CD,47684:CD,47693:CD,47710:CD,47714:CD,47715
47683 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,47714:CF,47684
47684 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
47693 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
47698 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,47714
47703 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
47705 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
47710 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,47714
47714 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,47698:CD,47703:CD,47705:CD,47710
47715 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
47737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,47738:CD,47741:CD,47747:CD,47751:CD,47755:CD,47756:CD,47764:CD,47769:CD,47770
47738 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,42266:JM,42270
47741 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,47747:JM,47764:JM,47751:JM,47769
47747 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,47747:JM,47764:JM,47751:JM,47769
47751 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,47764:JM,47751:JM,47769
47755 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,47764:JM,47769:JM,47741
47756 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,47741
47764 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,47764:JM,47769
47769 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,47770
47770 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,47738
47803 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,52652
47810 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,52978
47832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,47833:CD,47839
47833 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
47836 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,47839
47839 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47833
47849 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,47863
47863 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,47810:JM,47803:CD,47868:CD,47884:CD,47927
47868 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,47927:CL,48672
47884 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,47927:CL,53427
47899 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,47863
47907 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,53492
47913 :: CALL :: call :: V :: p0 $this .initPaths()::CL,53589
47927 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,47899:JM,47863
47954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,47962
47959 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
47962 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
48440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toIntArray(java.util.Collection)::CD,48449:CD,48468:CD,48472
48449 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,48472
48455 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,48472
48468 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,48472
48472 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,48455:CD,48468
48489 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toDoubleArray(java.util.Collection)::CD,48498:CD,48517:CD,48521
48498 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,48521
48504 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,48521
48517 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,48521
48521 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,48504:CD,48517
48616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.fromStartupParams(org.biojava.nbio.structure.align.ce.StartupParameters)::JM,47810:JM,47803
48672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,48673:CD,48679
48673 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,47927
48676 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,48679
48679 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,48673
48690 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,48716:JM,48694:JM,48698
48694 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,48694:JM,48698
48698 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
48709 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,48716
48711 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,48716
48716 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,48717:CD,48718:CD,48726:CD,48728:CD,48733
48717 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
48718 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
48726 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
48728 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
48733 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
48737 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
48742 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,54375
48759 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
48762 :: CALL :: call :: V :: v34.clear()::
50667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getNrCPU()::CE,50668:CD,50674
50668 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.ce.StartupParameters.getNrCPU()::
50671 :: EXPR :: reference :: I :: v3 = p0 $this .nrCPU::DD,50674
50674 :: NORM :: compound :: I :: return v3::CF,50668
50676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runDbSearch(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String,int,org.biojava.nbio.structure.align.ce.StartupParameters)::CD,50687:CD,50692:CD,50697:CD,50702:CD,50706:JM,42353:JM,47907:JM,42357:JM,47863:JM,47927:JM,42345:JM,42361:JM,47849:JM,47913:JM,47899:JM,42349:JM,42365:CD,50714:CD,50740
50687 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
50692 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p4 $useNrCPUs )::
50697 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#( CPUs.))::
50702 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
50706 :: CALL :: call :: V :: v8.println(v18)::
50714 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v24 = v20.getStructure(p2 $searchFile )::CL,58954
50740 :: NORM :: declaration :: Ljava/io/File :: v35 = new java.io.File::
52652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,52656:CD,52660:CD,52851:CD,52853:CD,52858:CD,52880
52656 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,52656:JM,52880:JM,52660:JM,52665:JM,52669
52660 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,52661:CD,52665:CD,52669:CD,52731:CD,52734:CD,52739:JM,52880
52661 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,52880:JM,52665:JM,52669
52665 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,52665:JM,52669
52669 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,52678:CD,52683:CD,52687:CD,52731:CD,52734:CD,52739
52678 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
52683 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,52687
52687 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,52712:CD,52717:CD,52721:CD,52880
52712 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,52880:JM,52712
52717 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,52721
52721 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,52880
52731 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
52734 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,52739
52739 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,52740:CD,52745:CD,52746:CD,52750:CD,52754:CD,52822:CD,52846:CD,52880
52740 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,52745
52745 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,52754:JM,52750
52746 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,52754:JM,52750
52750 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,52754:JM,52750
52754 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,52755:CD,52760:CD,52769:CD,52774:CD,52778:CD,52822:CD,52846:CD,52880
52755 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,52760
52760 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,52880
52769 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
52774 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,52778
52778 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,52803:CD,52808:CD,52812:CD,52880
52803 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,52880:JM,52803
52808 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,52812
52812 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,52880
52822 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,52880:JM,52822
52846 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
52851 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,52858
52853 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,52858
52858 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,52859:CD,52860:CD,52868:CD,52870:CD,52875
52859 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
52860 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
52868 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
52870 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
52875 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
52880 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,52858
52978 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,52982:CD,52986:CD,53247:CD,53249:CD,53254:CD,53276
52982 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,52982:JM,52986:JM,53276
52986 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,52995:CD,53000:CD,53004:CD,53073:CD,53076:CD,53081
52995 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
53000 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,53004
53004 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,53029:CD,53034:CD,53038:CD,53276
53029 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,53029:JM,53276
53034 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,53038
53038 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,53276:CD,53063:CD,53067
53063 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,53063:JM,53276
53067 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
53073 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
53076 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,53081
53081 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,53169:CD,53082:CD,53087:CD,53096:CD,53101:CD,53105:CD,53177:CD,53181
53082 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,53087
53087 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,53276
53096 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
53101 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,53105
53105 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,53130:CD,53135:CD,53139:CD,53276
53130 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,53130:JM,53276
53135 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,53139
53139 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,53276:CD,53164
53164 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,53164:JM,53276
53169 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
53170 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
53177 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,53181
53181 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,53205:CD,53211:CD,53242:CD,53276
53182 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,53276
53205 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
53211 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,53211:JM,53276
53242 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
53247 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,53254
53249 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,53254
53254 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,53255:CD,53256:CD,53264:CD,53266:CD,53271
53255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
53256 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
53264 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
53266 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
53271 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
53276 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,53254
53427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,53428:CD,53431:CD,53436:CD,53438:CD,53443:CD,53447:CD,53452:CD,53480:CD,53481
53428 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,47927
53431 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,53452
53436 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,53452
53438 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,53452
53443 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,53452
53447 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,53481:JM,53452
53452 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,53481:CF,53453:CD,53458:CD,53466:CD,53471:CD,53476
53453 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,53481
53458 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
53466 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,53481:JM,53452
53471 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,53481
53476 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,53481
53480 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,53428
53481 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,53480
53492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,53495:CD,53499
53495 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,53504:JM,53522:JM,53508:JM,53495:JM,53528:JM,53499
53499 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,53500:CD,53504:CD,53508:JM,53522:JM,53528
53500 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,53504:JM,53522:JM,53508:JM,53528
53504 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,53504:JM,53522:JM,53508:JM,53528
53508 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,53517:CD,53522:JM,53504:JM,53508:JM,53528
53517 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,53504:JM,53522:JM,53508:JM,53528
53522 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,53523:CD,53528:JM,53504:JM,53522:JM,53508
53523 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,53504:JM,53522:JM,53508:JM,53528
53528 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,53537:CD,53542:CD,53547
53537 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
53542 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,53504:JM,53522:JM,53508:JM,53528
53547 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,53504:JM,53508
53589 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,53593:CD,53597:CD,53601:CD,53622:CD,53623:CD,53624:CD,53645:CD,53646:CD,53647:CD,53654:CD,53685:CD,53686:CD,53711:CD,53712:CD,53714:CD,53715:CD,53716:CD,53717
53593 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,53685:JM,53622:CL,62057:CL,62065
53597 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,53645:JM,53711:CL,62081:CL,62073
53601 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
53607 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
53612 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
53616 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
53621 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,53714
53622 :: EXPR :: assign :: I :: v11 = v4.length::CF,53623
53623 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,53624:CD,53607:CD,53616:CD,53621:CD,53622:CD,53714
53624 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
53630 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
53635 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
53639 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
53644 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,53715
53645 :: EXPR :: assign :: I :: v23 = v6.length::CF,53646
53646 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,53630:CD,53639:CD,53644:CD,53645:CD,53715
53647 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
53654 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
53661 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,53664
53664 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
53668 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,53681
53669 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
53672 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
53681 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
53684 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,53716
53685 :: EXPR :: assign :: I :: v36 = v4.length::CF,53686
53686 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,53668:CD,53684:CD,53685:CD,53716
53687 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,53690
53690 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
53694 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,53707
53695 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
53698 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
53707 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
53710 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,53717
53711 :: EXPR :: assign :: I :: v44 = v6.length::CF,53712
53712 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,53694:CD,53710:CD,53711:CD,53717
53714 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,53621:DD,53623:CF,53622
53715 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,53644:DD,53646:CF,53645
53716 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,53684:DD,53686:CF,53685
53717 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,53710:DD,53712:CF,53711
54375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,54380
54380 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,53427
54558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.io.File)::CD,54572
54572 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,62436
54721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,54722:CD,54725:CD,54730
54722 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,112077:JM,112213:JM,125987:JM,126140:JM,126347:JM,126493:JM,131722:JM,132833
54725 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,54730:CL,62549
54730 :: NORM :: compound :: Ljava/util/List :: return v5::DD,54722
55052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,55053:CD,55056:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,55064:CD,55071:CD,55079:CD,55086:CD,55109:CD,55113:CD,55117:CD,55148:CD,55156
55053 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,107191:JM,145496:JM,146298:JM,161339
55056 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,55156
55064 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,62839
55071 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,62850
55079 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,62870
55083 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,55113
55086 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,55113
55091 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,55113
55096 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,62901
55101 :: CALL :: call :: V :: v3.addAtom(v24)::CL,63020
55105 :: CALL :: call :: V :: v24.setGroup(v3)::CL,63201
55109 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,55113
55113 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,55091:CD,55096:CD,55101:CD,55105:CD,55109:JM,55113
55114 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,55117
55117 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,55121:CD,55140:CD,55144
55118 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,55144
55121 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,55144
55126 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,55144
55131 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,55052:CL,55194:CL,55369
55136 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,63212
55140 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,55144
55144 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,55126:CD,55131:CD,55136:CD,55140:JM,55144
55145 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,55148
55148 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,55152:CF,55156
55152 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,63244
55156 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,55053
55194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,55195:CD,55198:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,55206:CD,55214:CD,55222:CD,55230:CD,55237:CD,55244:CD,55267:CD,55271:CD,55272:CD,55276:CD,55317:CD,55325
55195 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,107191:JM,145496:JM,146298:JM,161339
55198 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,55325
55206 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,62839
55214 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,62850
55222 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,63283
55230 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,63303
55237 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,63314
55241 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,55271
55244 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,55271
55249 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,55271
55254 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,62901
55259 :: CALL :: call :: V :: v3.addAtom(v30)::CL,63020
55263 :: CALL :: call :: V :: v30.setGroup(v3)::CL,63201
55267 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,55271
55271 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,55249:CD,55254:CD,55259:CD,55263:CD,55267:JM,55271
55272 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,55276:CL,63325
55276 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,55277:CD,55281:CD,55285
55277 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,55285:CL,63325
55281 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,55285
55285 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,55286:CD,55290:CD,55309:CD,55313
55286 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,55313:CL,63325
55290 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,55313
55295 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,55313
55300 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,55052:CL,55194:CL,55369
55305 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,63212
55309 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,55313
55313 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,55295:CD,55300:CD,55305:CD,55309:JM,55313
55314 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,55317
55317 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,55321:CF,55325
55321 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,63244
55325 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,55195
55369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,55370:CD,55373:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,55381:CD,55389:CD,55397:CD,55404:CD,55427:CD,55431:CD,55432:CD,55436:CD,55477:CD,55485
55370 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,107191:JM,145496:JM,146298:JM,161339
55373 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,55485
55381 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,62839
55389 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,62850
55397 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,62870
55401 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,55431
55404 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,55431
55409 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,55431
55414 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,62901
55419 :: CALL :: call :: V :: v3.addAtom(v25)::CL,63020
55423 :: CALL :: call :: V :: v25.setGroup(v3)::CL,63201
55427 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,55431
55431 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,55409:CD,55414:CD,55419:CD,55423:CD,55427:JM,55431
55432 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,55436:CL,63325
55436 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,55437:CD,55441:CD,55445
55437 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,55445:CL,63325
55441 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,55445
55445 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,55446:CD,55450:CD,55469:CD,55473
55446 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,55473:CL,63325
55450 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,55473
55455 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,55473
55460 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,55052:CL,55194:CL,55369
55465 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,63212
55469 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,55473
55473 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,55455:CD,55460:CD,55465:CD,55469:JM,55473
55474 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,55477
55477 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,55481:CF,55485
55481 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,63244
55485 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,55370
55525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,55526:CD,55532
55526 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,55575:JM,62714:JM,120960
55529 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,55532
55532 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55526
55534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,55535:CD,55542:JM,55575
55535 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,113026:JM,113054:JM,125154:JM,126315:JM,126316:JM,142698:JM,142710:JM,142722:JM,142734
55539 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,55542
55542 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,55546:CD,55551:CD,55552:CD,55556:CD,55577:CD,55581
55546 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,55551
55551 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,55552
55552 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,55535
55553 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,55565:JM,55581
55556 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,55565:JM,55581
55561 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,55565:JM,55581
55565 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,55576
55566 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,55575:CL,55525
55570 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,55575
55575 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,55576:CD,55577:CD,55581:JM,55565
55576 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,55535
55577 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,55565:JM,55581
55581 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,55561:CD,55565:CD,55566:CD,55570:CD,55575:CD,55582:JM,55581
55582 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,55535
57420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,57421:CD,57427
57421 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,92706:JM,148802
57424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,57427
57427 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,57421
58954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.lang.String)::CD,58959:CD,58963:CD,58968
58959 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $filename )::CL,53427
58963 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
58968 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v6)::CL,54558
62057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,62058:CD,62061:CD,62063
62058 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,53685:JM,53622
62061 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,62063
62063 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,62058
62065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,62066:CD,62069:CD,62071
62066 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,53685:JM,53622
62069 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,62071
62071 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,62066
62073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,62074:CD,62077:CD,62079
62074 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,53645:JM,53711
62077 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,62079
62079 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,62074
62081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,62082:CD,62085:CD,62087
62082 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,53645:JM,53711
62085 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,62087
62087 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,62082
62436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,75905:JM,75877:JM,76007:JM,75912:JM,75976:JM,75949:JM,84525:JM,75884:JM,75919:JM,75983:JM,84558:JM,75891:JM,84533:JM,84565:JM,75926:JM,75990:JM,76057:JM,75898:JM,75997:JM,84541:CD,62453
62453 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,76176
62549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,62550:CD,62557:CD,62562:CD,62563
62550 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,54730:JM,117430:JM,126569:JM,126675:JM,128214:JM,128396:JM,128484:JM,146705
62554 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,62562
62557 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,62562
62562 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,62563
62563 :: NORM :: compound :: Ljava/util/List :: return v7::DD,62550
62566 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,62567:CD,62573
62567 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,113073:JM,120933:JM,121006:JM,126225:JM,126342:JM,126488:JM,128318:JM,128385:JM,142016:JM,145658:JM,146313:JM,146334:JM,146364:JM,152257
62570 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,62573
62573 :: NORM :: compound :: Ljava/util/List :: return v3::CF,62567
62643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,62644:CD,62647:CD,62649
62644 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,67225:JM,67230:JM,106882:JM,106887:JM,152244:JM,152251:JM,157602:JM,157597:JM,157609:JM,157614:JM,159408:JM,159403:JM,159430:JM,159435:JM,164657:JM,164652:JM,164664:JM,164669
62647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,62649
62649 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,62644
62651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,62652:CD,62655:CD,62657
62652 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,67225:JM,67230:JM,106882:JM,106887:JM,152244:JM,152251:JM,157602:JM,157597:JM,157609:JM,157614:JM,159408:JM,159403:JM,159430:JM,159435:JM,164657:JM,164652:JM,164664:JM,164669
62655 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,62657
62657 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,62652
62659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,62660:CD,62663:CD,62665
62660 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,67225:JM,67230:JM,106882:JM,106887:JM,152244:JM,152251:JM,157602:JM,157597:JM,157609:JM,157614:JM,159408:JM,159403:JM,159430:JM,159435:JM,164657:JM,164652:JM,164664:JM,164669
62663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,62665
62665 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,62660
62667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,62668:CD,62675:JM,62714
62668 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,93130:JM,113503:JM,113509:JM,113515:JM,113521:JM,148886
62672 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,62675
62675 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,62679:CD,62683:CD,62688:CD,62689:CD,62695:CD,62716:CD,62720
62679 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,62714
62683 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,62688
62688 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,62689
62689 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,62690:CD,62691
62690 :: NORM :: compound :: Z :: return #(1)::DD,62668
62691 :: NORM :: compound :: Z :: return #(0)::DD,62668
62692 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,62720
62695 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,62720
62700 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,62720
62705 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,62714:CL,55525
62709 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,62714
62714 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,62715:CD,62716:CD,62720
62715 :: NORM :: compound :: Z :: return #(1)::DD,62668
62716 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,62720
62720 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,62700:CD,62705:CD,62709:CD,62714:CD,62721:JM,62720
62721 :: NORM :: compound :: Z :: return #(0)::DD,62668
62742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,62743:CD,62749
62743 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,120967
62746 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,62749
62749 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,62743
62758 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
62761 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
62764 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
62767 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,62771
62771 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
62774 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,62778
62778 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
62781 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
62784 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
62787 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
62790 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,62794
62792 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,62794
62794 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,62795
62795 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,62799
62799 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
62803 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
62839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,62844
62844 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
62850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,62855
62855 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
62861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,62862:CD,62868
62862 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,106869:JM,107167:JM,141052:JM,141228:JM,147079:JM,147084:JM,153062:JM,157472:JM,157526:JM,157473:JM,161315:JM,161310:JM,164562:JM,164499:JM,164576:JM,164500
62865 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,62868
62868 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,62862
62870 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,62888
62888 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
62901 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,62905:JM,76836:JM,76831:CD,62913:CD,62921:CD,62935:CD,62947:CD,62955:CD,62963:CD,62971:CD,62979:CD,62987
62905 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
62913 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,76887
62921 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,76907
62925 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,62928
62928 :: EXPR :: modify :: C :: v3.altLoc = v11::
62935 :: CALL :: call :: V :: v3.setCharge(v13)::CL,76927
62947 :: CALL :: call :: V :: v3.setX(v18)::CL,76947
62955 :: CALL :: call :: V :: v3.setY(v21)::CL,76963
62963 :: CALL :: call :: V :: v3.setZ(v24)::CL,76979
62971 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,77004
62979 :: CALL :: call :: V :: v3.setName(v30)::CL,77015
62987 :: CALL :: call :: V :: v3.setElement(v33)::CL,77026
63020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,63025:CD,63032:CD,63037:CD,63041:CD,63049
63025 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,63201
63029 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
63032 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
63037 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,63041:CL,76938
63041 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,63042
63042 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,62839
63046 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,63049
63049 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,63057:CD,63063:CD,63064
63057 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,63063
63063 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,63064
63064 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,63065:CD,63069:CD,63073:CD,63095:CD,63100:CD,63104:CD,63109:CD,63114:CD,63119:CD,63124:CD,63128:CD,63133:CD,63138:CD,63142:CD,63147:CD,63152:CD,63161
63065 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,63073:JM,63161:CL,77037
63069 :: CALL :: call :: C :: v24 = v22.charValue()::JM,63073:JM,63161
63073 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,63161:CF,63074:CD,63079:CD,63084:CD,63089
63074 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,63161
63079 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,63161
63084 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,63161
63089 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,63161
63095 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
63100 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,55525
63104 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
63109 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
63114 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
63119 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
63124 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,77058:CL,77346:CL,77248
63128 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
63133 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
63138 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,76995
63142 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
63147 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
63152 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
63161 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
63201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,63206
63206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
63212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,63220:CD,63231
63217 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,63220
63220 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,63221
63221 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,63225
63225 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
63228 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
63231 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
63244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,63249
63249 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
63262 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
63265 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
63274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,63275:CD,63281
63275 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,103027:JM,125944:JM,125949:JM,126097:JM,126102:JM,126230:JM,128309:JM,128337
63278 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,63281
63281 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,63275
63283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,63288
63288 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
63294 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,63295:CD,63301
63295 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,152498:JM,152299
63298 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,63301
63301 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,63295
63303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,63308
63308 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
63314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,63319
63319 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
63325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,63326:CD,63332
63326 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,55276:JM,55285:JM,55313:JM,55436:JM,55445:JM,55473:JM,77186:JM,77220:JM,103014:JM,107003:JM,107154:JM,107114:JM,113063:JM,126264:JM,126254:JM,161302:JM,161262
63329 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,63332
63332 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,63333:CD,63337:CD,63341
63333 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,63337
63337 :: NORM :: compound :: Ljava/util/List :: return v6::DD,63326
63338 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,63341
63341 :: NORM :: compound :: Ljava/util/List :: return v5::DD,63326
67199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,67200:CD,67204:CD,67211:CD,67236:CD,67240:CD,67241:JM,67225:JM,67230
67200 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,124553:JM,124554:JM,124621:JM,141463:JM,153182:JM,166211:JM,166187:JM,166219:JM,166280:JM,166185:JM,166195:JM,166291:JM,166212:JM,166183:JM,166184
67204 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,67241
67208 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,67220:JM,67240
67211 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,67220:JM,67240
67216 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,67220:JM,67240
67221 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,67225:JM,67230:CL,62643:CL,62651:CL,62659
67220 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
67225 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,67225:JM,67230
67231 :: CALL :: call :: Z :: v20 = v4.add(v14)::
67230 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,67231:JM,67220:JM,67240
67236 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,67220:JM,67240
67241 :: NORM :: compound :: Ljava/util/List :: return v4::DD,67200
67240 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,67216:CD,67220:CD,67221:CD,67225:CD,67230:CD,67236:JM,67240:CF,67241
75421 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,75422:CD,75425:JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75422 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,75425
75425 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,75426:JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75426 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
75430 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75435 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,75694
75437 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75436 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,75695:CD,75437:CD,75438:CD,75443
75438 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75443 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,75435:CD,75436:CD,75694:CD,75695
75445 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,75695
75447 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75446 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,75447:CD,75452:JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75644:JM,75518
75453 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75452 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,75445:CD,75446:CD,75695:JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75463 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,75696
75462 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,75696:CD,75463
75464 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75469 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75468 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,75697:CD,75469:CD,75474:JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75474 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,75697
75477 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75476 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,75477:CD,75483:CD,75487:CD,75492:CD,75495:CD,75496:CD,75698:CD,75699:CD,75700:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75483 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,75700:JM,75492
75487 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75507:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518:JM,75700
75493 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,75699
75492 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,75699:CD,75493:CD,75700
75495 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,75698
75497 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,75699:CD,75498:CD,75503:CD,75700:JM,75492:JM,75462:JM,75468:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75496 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,75699:CD,75497:CD,75700
75498 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75503 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,75699:CD,75476
75507 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,75703:CD,75508
75509 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,75517
75508 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,75512:CD,75517:CD,75518:CD,75525:CD,75535:CD,75701:CD,75702:CD,75703
75512 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,75517
75517 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,75703:CD,75518:CD,75525:CD,75535:CD,75701:CD,75702
75519 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,75701
75518 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,75701
75522 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,75525
75525 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,75702:CD,75529:CD,75534
75526 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,75529:JM,75534
75529 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,75529:JM,75534
75535 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,75703
75534 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,75702
75583 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
75582 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
75588 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75593 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,75643:JM,75644
75602 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,75705:CD,75606
75606 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,75705
75611 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
75612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
75617 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
75620 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
75625 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
75634 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
75637 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75643 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CD,75644:CD,75645
75645 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,75492:JM,75462:JM,75468:JM,75503:JM,75694:JM,75443:JM,75474:JM,75701:JM,75476:JM,75703:JM,75643:JM,75421:JM,75452:JM,75644:JM,75518
75644 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,75443:JM,75474:JM,75492:JM,75476:JM,75462:JM,75643:JM,75452:JM,75468:JM,75644:JM,75503:JM,75694:JM,75701:JM,75703:JM,75421:JM,75518
75681 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
75682 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
75695 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,75445:DD,75446:JM,75443:JM,75474:JM,75492:JM,75476:JM,75462:JM,75643:JM,75452:JM,75468:JM,75644:JM,75503:JM,75694:DD,75463:DD,75696
75694 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,75435:DD,75436:DD,75437:DD,75446:DD,75497:JM,75443:JM,75474:JM,75476:JM,75462:JM,75643:JM,75452:JM,75468:JM,75644:JM,75503:JM,75694
75697 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,75496
75696 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,75468:JM,75443:JM,75474:JM,75492:JM,75476:JM,75462:JM,75643:JM,75452:JM,75644:JM,75503:JM,75694:DD,75698:DD,75699:JM,75701:JM,75703:JM,75421:JM,75518
75699 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,75700:JM,75443:JM,75474:JM,75476:JM,75462:JM,75643:JM,75452:JM,75468:JM,75644:JM,75503:JM,75694
75698 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,75443:JM,75474:JM,75476:JM,75462:JM,75643:JM,75452:JM,75468:JM,75644:JM,75503:JM,75694:DD,75493:DD,75495:DD,75497:JM,75492:CF,75496
75701 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,75703
75700 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,75508:JM,75517:DD,75702
75703 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::DD,75602:DD,75705
75702 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,75535
75705 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,75634
75877 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75884 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75891 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75898 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75905 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75912 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75919 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75926 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75949 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75976 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75983 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75990 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
75997 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
76007 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
76057 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
76176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,76181:CD,76186
76181 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,84619
76186 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,84649
76828 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
76831 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,76833
76833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
76837 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
76836 :: NORM :: declaration :: [D :: v7 = new []::DD,76837
76840 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
76843 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
76846 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
76849 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
76852 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
76855 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
76887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,76892
76892 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
76907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,76912
76912 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
76927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,76932
76932 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
76939 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,63041
76938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,76939:CD,76945
76942 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,76945
76945 :: NORM :: compound :: [D :: return v3::CF,76939
76947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,76955
76952 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
76955 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
76963 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,76971
76968 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
76971 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
76979 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,76987
76984 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
76987 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
76995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,76996:CD,77002
76996 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
76999 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,77002
77002 :: NORM :: compound :: I :: return v3::CF,76996
77004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,77009
77009 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
77015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,77020
77020 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
77026 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,77031
77031 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
77037 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,77038:CD,77044
77038 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,63073:JM,63161:JM,107093:JM,107143:JM,142192:JM,142246:JM,161241:JM,161291
77041 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,77044
77045 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,77038
77044 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,77045:CD,77049:CD,77053
77046 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,77053
77049 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,77053
77053 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,77038
77059 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
77058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,77059:CD,77062:CD,77070:CD,77075:CD,77083:CD,77088:CD,77096:CD,77101:CD,77109:CD,77114:CD,77122:CD,77127:CD,77135:CD,77140:CD,77147:CD,77178:CD,77182:CD,77186:CD,77218:CD,77219:CD,77220
77062 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
77067 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
77070 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
77075 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
77080 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
77083 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
77088 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
77096 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
77101 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
77109 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,77219
77114 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,77219
77119 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,77219
77122 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,77219
77127 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,77219
77132 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,77219
77135 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,77219
77140 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,77219
77144 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,77147
77147 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,77219:CF,77148:CD,77149:CD,77157:CD,77165:CD,77169:CD,77174
77149 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
77148 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,77219
77157 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,77219
77162 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,77219
77165 :: CALL :: call :: I :: v49 = v47.size()::JM,77219
77169 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,77219
77174 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,77219
77178 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,77186:CL,63325
77182 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,77186
77187 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,77220
77186 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,77220:CF,77187:CD,77188:CD,77196:CD,77201:CD,77205:CD,77209:CD,77214
77188 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
77196 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,77220
77201 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,77220:CL,63325
77205 :: CALL :: call :: I :: v69 = v67.size()::JM,77220
77209 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,77220
77214 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,77220
77219 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,77220
77218 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,77059
77220 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,77218
77249 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
77248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,77249:CD,77252:CD,77260:CD,77265:CD,77273:CD,77278:CD,77286:CD,77291:CD,77298:CD,77329:CD,77330
77252 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
77257 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
77260 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
77265 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
77273 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,77330
77278 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,77330
77283 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,77330
77286 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,77330
77291 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,77330
77295 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,77298
77299 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,77330
77298 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,77330:CF,77299:CD,77300:CD,77308:CD,77316:CD,77320:CD,77325
77300 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
77308 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,77330
77313 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,77330
77316 :: CALL :: call :: I :: v33 = v31.size()::JM,77330
77320 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,77330
77325 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,77330
77329 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,77249
77330 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,77329
77347 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
77346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,77347:CD,77350:CD,77358:CD,77363:CD,77371:CD,77376:CD,77384:CD,77389:CD,77396:CD,77430:CD,77461:CD,77462:CD,77463
77350 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
77358 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,77462
77363 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,77462
77368 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,77462
77371 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,77462
77376 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,77462
77381 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,77462
77384 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,77462
77389 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,77462
77393 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,77396
77397 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,77462
77396 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,77462:CF,77397:CD,77398:CD,77406:CD,77414:CD,77418:CD,77423
77398 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
77406 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,77462
77411 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,77462
77414 :: CALL :: call :: I :: v33 = v31.size()::JM,77462
77418 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,77462
77423 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,77462
77427 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,77430
77431 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,77463
77430 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,77463:CF,77431:CD,77432:CD,77440:CD,77448:CD,77452:CD,77457
77432 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
77440 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,77463
77445 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,77463
77448 :: CALL :: call :: I :: v50 = v48.size()::JM,77463
77452 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,77463
77457 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,77463
77461 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,77347
77463 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,77461
77462 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,77463
78389 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,78390:CD,78400
78390 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,87471
78393 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
78396 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,78400
78400 :: NORM :: compound :: D :: return v5::CF,78390
79235 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,121206:JM,121361
79234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,79235:CD,79239:JM,89906:JM,89909:JM,89903:CD,79245:CD,79264:CD,79265:CD,79269:JM,79262
79239 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,79265
79245 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,89922
79251 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
79255 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,79266
79257 :: EXPR :: modify :: D :: v9[v15] = v12::
79261 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,79268:CF,79267
79263 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,79269
79262 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,79255:CD,79261:CD,79266:CD,79267:CD,79268:CF,79263
79265 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,79235
79264 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,79262:CD,79263:CD,79267:CD,79268:CD,79269:CF,79265
79267 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,79268:DD,79255:DD,79263:DD,79267
79266 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,79257
79269 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,79264:DD,79267
79268 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,79255:DD,79261:DD,79262
80803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,80804:CD,80807:CD,80814:CD,80818:CD,80826:CD,80847:CD,80851
80804 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,103164:JM,113282:JM,113342:JM,142030
80807 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,80851
80814 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
80818 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
80823 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,80826
80827 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,80834
80826 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,80830:CD,80834:JM,80851
80830 :: CALL :: call :: C :: v14 = v12.charValue()::JM,80834
80835 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
80834 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,80838:CD,80842:JM,80851
80838 :: CALL :: call :: C :: v18 = v16.charValue()::
80842 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
80847 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,80851
80851 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,80804
80865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,80866:CD,80872
80866 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,92331:JM,92368:JM,102496:JM,106726:JM,113250:JM,113310:JM,124388:JM,128241:JM,128460:JM,141823:JM,145294:JM,145345:JM,148481:JM,148486:JM,148522
80869 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,80872
80872 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,80866
80913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,80914:CD,80924
80914 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,87480
80917 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
80920 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,80924
80924 :: NORM :: compound :: D :: return v5::CF,80914
80927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,80928:CD,80938
80928 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,87489
80931 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
80934 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,80938
80938 :: NORM :: compound :: D :: return v5::CF,80928
84238 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
84249 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,75705
84252 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,84259
84254 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,84259:JM,84433:JM,84400:JM,84436:JM,84439:JM,84363:JM,84266:JM,84410
84259 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,84260:DD,84433:DD,84441
84261 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,84263
84260 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,84441:CD,84261:CD,84263:CD,84271:CD,84393:CD,84395:CD,84400:CD,84401:CD,84429:CD,84433:CD,84434:CD,84438
84263 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,84433:CD,84264:CD,84266:CD,84434
84264 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,84433:JM,84266
84266 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,84433:JM,84266:JM,84400:JM,84259:JM,84436:JM,84439:JM,84363:JM,84410
84271 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,84438:CD,84278:CD,84282:CD,84283:CD,84302:CD,84303:CD,84311:CD,84316:CD,84320:CD,84384:CD,84437
84278 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,84282
84283 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,84284:CD,84285:CD,84293:CD,84298
84282 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,84283
84285 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
84284 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
84293 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
84298 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
84303 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
84302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
84311 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
84316 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
84320 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,84389
84327 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
84331 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
84335 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,84436:JM,84363
84336 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
84344 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,84436:JM,84363
84349 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,84436:JM,84363:JM,84433:JM,84400:JM,84259:JM,84439:JM,84266:JM,84410
84354 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,84400:JM,84436:JM,84439:JM,84363
84359 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,84436:JM,84363
84363 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,84436:JM,84363
84368 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,84436
84372 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,84436:JM,84363
84377 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,84437:CD,84378:CD,84382
84378 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,84378:JM,84382
84382 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,84437
84385 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,84389
84384 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,84438:CD,84385:CD,84389
84389 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,84438:CD,84327:CD,84331:CD,84335:CD,84336:CD,84344:CD,84349:CD,84354:CD,84359:CD,84363:CD,84377:CD,84384:CD,84436:CD,84437
84393 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,84400
84395 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,84400:JM,84433:JM,84259:JM,84436:JM,84439:JM,84363:JM,84266:JM,84410
84401 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,84403:CD,84404:CD,84415:CD,84416:CD,84429:CD,84439:CD,84440:CD,84441
84400 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,84401:DD,84403:DD,84439
84403 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,84249
84405 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,84407
84404 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,84439:CD,84405:CD,84407
84407 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,84439:CD,84408:CD,84410
84408 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,84439:JM,84410
84410 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,84439:JM,84410:JM,84433:JM,84400:JM,84259:JM,84436:JM,84363:JM,84266
84415 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,84440
84417 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
84416 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,84417:CD,84419
84419 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,84433:JM,84400:JM,84259:JM,84436:JM,84439:JM,84363:JM,84266:JM,84410
84429 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,84249
84433 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,84434:DD,84271:DD,84437:DD,84438
84434 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,84404:CF,84271
84437 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,84384:DD,84437:DD,84438
84436 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,84377:JM,84378:JM,84382
84439 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,84415:DD,84440
84438 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,84440
84441 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,84429
84440 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,84416:JM,84433:JM,84400:JM,84259:JM,84436:JM,84439:JM,84363:DD,84441
84525 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,84530
84530 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
84533 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,84538
84538 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
84541 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,84549
84549 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
84552 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
84555 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
84558 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,84562
84562 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
84565 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,84569
84569 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
84619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,84631:CD,84632
84631 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,84632
84632 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
84649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,92192:JM,92227:JM,92199:JM,92234:JM,84525:JM,92206:JM,84558:JM,92213:JM,84533:JM,84565:JM,92182:JM,84541:JM,92220:CD,84681:CD,84688:CD,84695:CD,84715:CD,84737:CD,84743:CD,84758:CD,84764:CD,84770:CD,84776:CD,84788:CD,84798:CD,85149:CD,85153:CD,85160:CD,85165:CD,85171:CD,85175:CD,85182:CD,85186:CD,85193:CD,85197:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84681 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
84688 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
84695 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
84715 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
84734 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
84737 :: CALL :: call :: V :: v24.clear()::
84740 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
84743 :: CALL :: call :: V :: v26.clear()::
84755 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
84758 :: CALL :: call :: V :: v30.clear()::
84761 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
84764 :: CALL :: call :: V :: v32.clear()::
84767 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
84770 :: CALL :: call :: V :: v34.clear()::
84773 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
84776 :: CALL :: call :: V :: v36.clear()::
84788 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
84795 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
84798 :: CALL :: call :: V :: v40.clear()::
84812 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84817 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,84818:CD,84820:CD,84825:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84818 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84820 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84825 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,84827:CD,84832:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84827 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84833 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84832 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,84833:CD,84838:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84838 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,84840:CD,84844:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84840 :: CALL :: call :: I :: v60 = v46.length()::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84844 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,84847:CD,84852:CD,84857:CD,84862:CD,84871:CD,84877:CD,84881:CD,84886:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84847 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
84852 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84857 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84862 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84871 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84877 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84881 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84887 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,92270
84886 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,84887:CD,84892:CD,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84892 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84897 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,84898:CD,84903:CD,84908:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84898 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,93469
84903 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84909 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,92270
84908 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,84909:CD,84914:CD,84919:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84914 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84919 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,84920:CD,84925:CD,84930:JM,84897:JM,84993:JM,84963:JM,85059:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84920 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,93733
84925 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84931 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,93849
84930 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,84931:CD,84936:CD,84941:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84936 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84941 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,84942:CD,84947:CD,84952:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,85048:JM,85144
84942 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,94105
84947 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84953 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,94176
84952 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,84953:CD,84958:CD,84963:JM,84897:JM,84993:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84958 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84963 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,84967:CD,84973:CD,84978:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84964 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
84967 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84973 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84979 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
84978 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,84982:CD,84988:CD,84993:JM,84897:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84982 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
84988 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84993 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,84994:CD,84999:CD,85004:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
84994 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,94326
84999 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85005 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,94411
85004 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,85005:CD,85010:CD,85015:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85010 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85015 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,85016:CD,85021:CD,85026:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85016 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,94490
85021 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85027 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,94844
85026 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,85027:CD,85032:CD,85037:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85032 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85037 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,85038:CD,85043:CD,85048:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85144
85038 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,95198
85043 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85049 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,95523
85048 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,85049:CD,85054:CD,85059:JM,84897:JM,84993:JM,84963:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85054 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85059 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,85060:CD,85065:CD,85070:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85060 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,95886
85065 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85071 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,95981
85070 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,85071:CD,85076:CD,85081:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,84952:JM,85048:JM,85144
85076 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85081 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,85082:CD,85087:CD,85092:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85082 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,96306
85087 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85093 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,96910
85092 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,85093:CD,85098:CD,85103:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85098 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85103 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,85104:CD,85112:CD,85116
85104 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,97210
85112 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,85116:CL,97466
85117 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85116 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,85117:CD,85122:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144:JM,84817:JM,84825:JM,85153:JM,84832:JM,84838:JM,84844
85123 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,97475
85122 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,85123:CD,85128:CD,85133:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85128 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85133 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,85134:CD,85139:CD,85144:JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048
85134 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,97701
85139 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,84897:JM,84993:JM,84963:JM,85059:JM,84930:JM,85026:JM,85122:JM,85092:JM,84941:JM,85037:JM,85133:JM,84908:JM,85004:JM,85103:JM,85070:JM,84978:JM,84919:JM,85015:JM,84886:JM,85081:JM,84952:JM,85048:JM,85144
85145 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,97927
85144 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,85145:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
85149 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,84817:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
85153 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,84812:CD,84817:CD,85149:JM,84993:JM,85059:JM,84930:JM,85122:JM,84941:JM,85133:JM,85004:JM,85070:JM,85015:JM,84886:JM,84825:JM,85081:JM,84952:JM,85144:JM,85153:JM,84897:JM,84832:JM,84963:JM,85026:JM,85092:JM,84838:JM,85037:JM,84844:JM,84908:JM,85103:JM,84978:JM,84919:JM,85048
85160 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,98153
85165 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,98289
85171 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,85175:CL,98756
85175 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,85176
85176 :: CALL :: call :: V :: p0 $this .formBonds()::CL,98765
85182 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,85186:CL,98829
85187 :: CALL :: call :: V :: p0 $this .addCharges()::CL,98838
85186 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,85187
85193 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,85197:CL,97466
85197 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,85201:CD,85205
85201 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,85205:CL,98850
85205 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,85206
85206 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,98859
87459 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,125967:JM,126120
87458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,87459:CD,87463:CD,87467:CD,87471:CD,87472:CD,87476:CD,87480:CD,87481:CD,87485:CD,87489:CD,87490:CD,87491:CD,87492:CD,87493:CD,87494:CD,87495:CD,87499
87463 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,87471:CL,78389
87467 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,87471:CL,78389
87471 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,87490
87472 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,87480:CL,80913
87476 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,87480:CL,80913
87481 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,87489:CL,80927
87480 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,87491
87485 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,87489:CL,80927
87489 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,87493:CF,87490
87491 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,87492
87490 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,87492:CF,87491
87493 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,87494
87492 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,87494:CF,87493
87495 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,87495:JM,87499
87494 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,87495:JM,87499
87499 :: NORM :: compound :: D :: return v25::CF,87459
89903 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
89906 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
89909 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,89910
89910 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
89923 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
89922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,89923:CD,89929
89926 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,89929
89929 :: NORM :: compound :: [[D :: return v3::CF,89923
89961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,89962:CD,89965:CD,89969:CD,90006:CD,90008
89962 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,92496:JM,96499
89965 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,89969:JM,90008:CL,104640
89969 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,90008:CD,89970:CD,89974:CD,89978
89970 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
89974 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,89978:CL,104655
89978 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,89981:CD,89986:CD,89987:CD,89996:CD,90002:CD,90007:CD,90008
89981 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,89986
89987 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,90007:CD,89990:CD,89995
89986 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,89987:DD,90007
89990 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,89995
89995 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,90007
89997 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,90008
89996 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,90008:CD,89997
90002 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,90008
90007 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,89996:DD,90008
90006 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,89962
90008 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,90006
91477 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
91476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,91477:CD,91482:CD,91487
91482 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,91487:CL,106197
91487 :: NORM :: compound :: I :: return v6::CF,91477
91491 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
91490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,91491:CD,91496:CD,91501
91496 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,91501:CL,106411
91501 :: NORM :: compound :: I :: return v6::DD,91491
92182 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92186
92186 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
92189 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
92192 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92196
92196 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
92199 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92203
92203 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
92206 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92210
92210 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
92213 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,92217
92217 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
92220 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92224
92224 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
92227 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92231
92231 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
92234 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:DD,92238
92238 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
92261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,92262:CD,92268
92262 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,148817
92265 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,92268
92268 :: NORM :: compound :: Z :: return v3::CF,92262
92270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,92278:CD,92282:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92278 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,92282:CL,98850
92282 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,92284:CD,92293:CD,92322:CD,92326:CD,92331:CD,92420:CD,92426:CD,92430:CD,92436:CD,92440:CD,92446:CD,92450:CD,92456:CD,92461:CD,92471:JM,106760:JM,106763:JM,106766:CD,92481:CD,92486:CD,92510:CD,92542:CD,92574:CD,92575:CD,92581:JM,92977:JM,92883:JM,92981:JM,92968:JM,92954:JM,92973:JM,92940:JM,93068:JM,93084:JM,92878:CD,92597:CD,92602:CD,92717:CD,92727:CD,92771:CD,93143:CD,93145:CD,93148:JM,92993:JM,92844:JM,92368:JM,93043:JM,93013
92284 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92290 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,92293
92293 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,93143:CD,92294:JM,102805:JM,102793:JM,102812:JM,102798:CD,92304:CD,92314
92294 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,92298
92298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
92304 :: CALL :: call :: V :: v16.setChainID(v11)::CL,102836
92308 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
92311 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
92314 :: CALL :: call :: Z :: v22 = v19.add(v20)::
92322 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,92331:CL,80865
92326 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92331 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,93145:CD,92338:CD,92352:CD,92358:CD,92378:CD,92403:CD,92408:CD,93144
92338 :: CALL :: call :: V :: v29.addGroup(v30)::CL,102983
92352 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,92358:JM,93144:CL,106704
92359 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,92368:CL,80865
92358 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,92359:CD,92363:CD,92368:CD,92372:CD,93144
92363 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,92368:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92368 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,93144:CD,92372
92372 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,93144:CL,106704
92379 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,92383
92378 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,92379:JM,102805:JM,102793:JM,102812:JM,102798:CD,92389
92383 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
92389 :: CALL :: call :: V :: v48.setChainID(v11)::CL,102836
92394 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
92397 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,92408
92400 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,92408
92403 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,92408
92409 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
92408 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,93145:CD,92415
92412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
92415 :: CALL :: call :: Z :: v57 = v54.add(v55)::
92420 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92426 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92430 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92436 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92440 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92446 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92450 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92456 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92461 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,92486:JM,92968:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92883:JM,92981:JM,92954:JM,93084:JM,92574
92471 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,92486:JM,92968:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92883:JM,92981:JM,92954:JM,93084:JM,92574
92481 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,92486:JM,92968:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92883:JM,92981:JM,92954:JM,93084:JM,92574
92487 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,89961
92486 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,92487:CD,92492:CD,92496
92492 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,92496:CL,89961
92497 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
92496 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,92497
92507 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,92510
92511 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,106777
92510 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,92511:CD,92524:CD,92531:CD,92538:CF,92542
92524 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,63283:CL,62870
92531 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,62850
92538 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,106855
92543 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,106777
92542 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,92574:CD,92543:CD,92556:CD,92563:CD,92570
92556 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,63283:CL,62870
92563 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,62850
92570 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,106855
92575 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92574 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,92977:JM,92883:JM,92981:JM,92486:JM,92973:JM,93068:JM,93084:JM,92574:JM,92660:JM,92993:JM,92968:JM,92331:JM,92844:JM,92940:JM,92878:JM,92368:JM,93043:JM,93013:JM,92954
92581 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92597 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,92602:CL,40573
92602 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,92609:CD,92616:CD,92619:CD,92632:CD,92639:CD,92646:CD,92651:CD,92655:CD,92660:CD,93148
92609 :: CALL :: call :: V :: v157.addGroup(v158)::CL,102983
92616 :: CALL :: call :: V :: v160.trimToSize()::CL,106949
92619 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,106777
92632 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,63283:CL,62870
92639 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,62850
92646 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,106855
92651 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,92660
92655 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,92660
92660 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,93148:CD,92663:CD,92671:CD,92676:CD,92681:CD,92686:CD,92694:CD,92702:CD,92706
92663 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
92671 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
92676 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
92681 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
92686 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
92694 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,93148:CL,107058
92702 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,92706:CL,57420
92706 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,93148:CD,92710
92710 :: CALL :: call :: V :: v152.setChain(v155)::CL,107304
92714 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,92717
92717 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,92718
92718 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
92721 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,92727
92724 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,92727
92727 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,92730:CD,92738:CD,92743:CD,92748:CD,92759:CD,92762
92730 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
92735 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
92738 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
92743 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
92748 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
92756 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
92759 :: CALL :: call :: V :: v188.clear()::
92762 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,107334
92765 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,92771
92768 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,92771
92771 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,92774:CD,92782:CD,92787:CD,92792:CD,92802:CD,92807:CD,92812:CD,92827
92774 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
92779 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
92782 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
92787 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
92792 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
92802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
92807 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92812 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92821 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,92827
92824 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,92827
92827 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,92829:CD,92838:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92829 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92835 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,92838
92839 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92838 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,92839:CD,92844:CD,92856:CD,92860:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92844 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,92856:CD,92860
92856 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,92860:CL,107413
92860 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,92864:CD,92868:CD,92886:CD,92887:CD,92896:CD,92902:CD,92906:JM,76836:JM,76831:CD,92922:CD,92930:CD,92936:CD,92940:CD,92944:CD,92950:CD,92954:CD,92958:CD,92964:CD,92968:CD,92972:CD,92989:CD,92993:CD,93009:CD,93013:CD,93039:CD,93043:CD,93105:CD,93125:CD,93130:CD,93149:CD,93150:JM,92486:JM,92331:JM,92973:JM,92844:JM,93068:JM,92878:JM,92977:JM,92368:JM,92883:JM,92981:JM,93084:JM,92574
92864 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,92868:CL,107413
92868 :: EXPR :: assign :: I :: v208 = v207.length::DD,92886
92870 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,92883:JM,92878
92874 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92878 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,92883:JM,92878:JM,92977:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,93068:JM,93084:JM,92940:JM,92574
92883 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,92885:CD,92886:CD,93149:CD,93150
92885 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,93149
92887 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,92896:CD,92902:CD,92906:JM,76836:JM,76831:CD,92922:CD,92930:CD,92936:CD,92940:CD,92944:CD,92950:CD,92954:CD,92958:CD,92964:CD,92968:CD,92972:CD,92989:CD,92993:CD,93009:CD,93013:CD,93039:CD,93043:CD,93105:CD,93125:CD,93130:JM,92486:JM,92331:JM,92973:JM,92844:JM,93068:JM,92878:JM,92977:JM,92368:JM,92883:JM,92981:JM,93084:JM,92574
92886 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,93150:CD,92874:CD,92878:CD,92883
92896 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92902 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92906 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,92940:JM,93068:JM,93084:JM,92878:JM,92574
92922 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92930 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92936 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92940:JM,92844:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92940 :: CALL :: call :: D :: v238 = parseDouble(v236)::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,92940:JM,93068:JM,93084:JM,92878:JM,92574
92944 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92950 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92954 :: CALL :: call :: D :: v245 = parseDouble(v243)::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,92940:JM,93068:JM,93084:JM,92878:JM,92574
92958 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92964 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,92981:JM,93013:JM,92954:JM,93084:JM,92574
92968 :: CALL :: call :: D :: v252 = parseDouble(v250)::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,92940:JM,93068:JM,93084:JM,92878:JM,92574
92973 :: EXPR :: modify :: D :: v254[#(0)] = v238::
92972 :: NORM :: declaration :: [D :: v254 = new []::
92977 :: EXPR :: modify :: D :: v254[#(1)] = v245::
92981 :: EXPR :: modify :: D :: v254[#(2)] = v252::
92989 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92993 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,92994:CD,93000:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
92994 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93000 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93009 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93013 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,93014:CD,93020:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93014 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93020 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,92981:JM,92954:JM,93084:JM,92574
93039 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93043 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,93044:CD,93050:CD,93054:CD,93060:CD,93064:CD,93068:CD,93096:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93044 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93050 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,92883:JM,92981:JM,92954:JM,93084:JM,92574
93054 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,107457
93060 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93064 :: CALL :: call :: I :: v294 = v292.length()::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,93068:JM,93084:JM,92940:JM,92878:JM,92574
93069 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93068 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,93069:CD,93076:CD,93080:CD,93084:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,92574
93076 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93080 :: CALL :: call :: I :: v299 = v297.length()::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,93068:JM,93084:JM,92940:JM,92878:JM,92574
93085 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93084 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,93085:CD,93091:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,93068:JM,92940:JM,92878:JM,92977:JM,92368:JM,92883:JM,93043:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93091 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,92977:JM,92883:JM,92981:JM,92486:JM,92968:JM,92954:JM,92973:JM,93068:JM,93084:JM,92940:JM,92878:JM,92574
93096 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,107457
93105 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,93106:CD,93114
93106 :: CALL :: call :: V :: v170.addAtom(v224)::CL,63020
93114 :: CALL :: call :: V :: v323.addAtom(v224)::CL,63020
93125 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,93130:CL,62667
93130 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,93134
93134 :: CALL :: call :: V :: v332.addAtom(v224)::CL,63020
93143 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,93145
93145 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,92542:JM,92993:JM,92486:JM,92968:JM,92331:JM,92973:JM,92844:JM,92940:JM,93068:JM,92878:JM,92977:JM,92368:JM,93043:JM,92883:JM,93013:JM,92981:JM,92954:JM,93084:JM,92574
93144 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,92378:DD,92394
93149 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,92885:DD,92886
93148 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,93105
93150 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,92887
93469 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,93474:CD,93480:CD,93484:CD,93490:CD,93496:CD,93500:CD,93508:CD,93516:CD,93521:CD,93526
93474 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,93526
93480 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,93526
93484 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,93526
93490 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,93526
93496 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,93526
93500 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,93526
93505 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,93508
93509 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,93526
93508 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,93516:CD,93509:JM,93526
93516 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,93611
93521 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,93526
93526 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,93531:CD,93543:CD,93607:CD,93611:CD,93615:CD,93621:CD,93636:CD,93649
93531 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,93537:CL,106704
93537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
93540 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,93543
93543 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,93544:JM,102805:JM,102793:JM,102812:JM,102798:CD,93554:JM,93611
93544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,93548
93548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
93554 :: CALL :: call :: V :: v39.setChainID(v13)::CL,102836
93559 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
93563 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,89961
93567 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,93574:CL,106777
93574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
93580 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,63283:CL,62870
93584 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,93587
93587 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,93588
93588 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,93593
93593 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,63314
93603 :: CALL :: call :: V :: v57.addGroup(v58)::CL,102983
93607 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,93611
93611 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,93559:CD,93563:CD,93567:CD,93580:CD,93587:CD,93588:CD,93603:CD,93607
93615 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,93621:CL,106704
93621 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,93628
93622 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
93625 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
93628 :: CALL :: call :: Z :: v67 = v64.add(v65)::
93633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,93636
93636 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,93640
93640 :: CALL :: call :: V :: v69.trimToSize()::CL,106949
93649 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,93526
93733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,93741:CD,93745
93741 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,93745:CL,98850
93745 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,93750
93747 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,93750
93751 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,93754
93750 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,93754:CD,93781:CD,93787:CD,93805:CD,93809
93754 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,93761:CD,93768
93761 :: CALL :: call :: V :: v11.addGroup(v12)::CL,102983
93768 :: CALL :: call :: V :: v14.trimToSize()::CL,106949
93781 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,93787:CL,106704
93787 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,93794
93788 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
93791 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
93794 :: CALL :: call :: Z :: v25 = v22.add(v23)::
93805 :: CALL :: call :: V :: v26.addModel(v27)::CL,102236
93809 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
93849 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,93854:CD,93858:CD,93862:CD,93885:CD,93919:CD,93924:CD,93929:CD,93934:CD,93942:CD,93998:JM,93863:JM,93943:JM,93958:JM,94013:JM,93886
93854 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93858 :: CALL :: call :: I :: v8 = v6.length()::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93863 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,93863:JM,93943:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93862 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,93863:CD,93868:CD,93874:CD,93881:JM,93943:JM,93942:JM,93958:JM,94013:JM,93998:JM,93886:CF,93885
93868 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93874 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,93863:JM,93943:JM,93958:JM,93862:JM,93942:JM,93885:JM,94013:JM,93998:JM,93886
93881 :: CALL :: call :: V :: v17.setClassification(v16)::CL,107501
93885 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,93886:CD,93891:CD,93897:CD,93912:JM,93863:JM,93943:JM,93958:JM,94013:JM,93998:CF,93942
93886 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,93863:JM,93943:JM,93942:JM,93958:JM,94013:JM,93998:JM,93886
93891 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93897 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,93863:JM,93943:JM,93958:JM,93862:JM,93942:JM,93885:JM,94013:JM,93998:JM,93886
93912 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,107512
93919 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
93924 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,93863:JM,93943:JM,93958:JM,94013:JM,93886
93929 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
93934 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
93943 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,93863:JM,93943:JM,93958:JM,94013:JM,93998:JM,93886
93942 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,93943:CD,93948:CD,93954:CD,93963:CD,93971:CD,93976:CD,93994:JM,93863:JM,93958:JM,94013:JM,93886:CF,93998
93948 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
93954 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,93863:JM,93943:JM,93958:JM,93862:JM,93942:JM,93885:JM,94013:JM,93998:JM,93886
93958 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
93963 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
93968 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
93971 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
93976 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
93994 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,107523
93999 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,94013
93998 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,94002:CD,94008:CD,94013
94002 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,94013:JM,93998:JM,93886
94008 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,94013:JM,93863:JM,93943:JM,93862:JM,93942:JM,93958:JM,93885:JM,93998:JM,93886
94013 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,94019:CD,94023:CD,94031:CD,94036:CD,94040
94019 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
94023 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
94031 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
94036 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
94040 :: CALL :: call :: V :: v79.println(v89)::
94105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,94110:CD,94115:CD,94122:CD,94126
94110 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
94115 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
94122 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,94126:CL,107534
94126 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,94135:CD,94130:CD,94136:CD,94144:CD,94149:CD,94156
94130 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,107543
94135 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
94136 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
94144 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
94149 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
94156 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,107543
94176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,94181:CD,94185:CD,94214:CD,94218:CD,94264:CD,94265:CD,94273:CD,94278:CD,94285:CD,94290
94181 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,94290:JM,94185
94185 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,94186:CD,94192:CD,94197:CD,94201:CD,94207:CD,94290:JM,94185
94186 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,94290:JM,94185
94192 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,94290
94197 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,94290:JM,94185
94201 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,94290:JM,94185
94207 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,94290
94214 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,94224:JM,94230:JM,94218:CL,107554
94219 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,94224:JM,94230
94218 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,94219:CD,94224:JM,94230
94225 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,94224:JM,94230
94224 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,94225:CD,94230:JM,94224
94231 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
94230 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,94245:CF,94231:CD,94232:CD,94240:CD,94246:CD,94254:CD,94259
94232 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
94240 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
94245 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
94246 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
94254 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
94259 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
94265 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
94264 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
94273 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
94278 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
94285 :: CALL :: call :: V :: v55.setTitle(v54)::CL,107563
94290 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
94326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,94331:CD,94335:CD,94336:CD,94340:CD,94341:CD,94350:CD,94355:JM,94366
94331 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,94355:JM,94340:JM,94335:JM,94366
94335 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,94355:JM,94340:JM,94335:JM,94366
94336 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,94355:JM,94340:JM,94335:JM,94366
94341 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,94355:JM,94340:JM,94335:JM,94366
94340 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,94355:JM,94340:JM,94335:JM,94366
94347 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,94355
94350 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,94355:JM,94366
94355 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,94362:CD,94366:CD,94367:CD,94376:CD,94385
94362 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,94355:JM,94340:JM,94335:JM,94366
94367 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,94355:JM,94340:JM,94335:JM,94366
94366 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,94355:JM,94340:JM,94335:JM,94366
94373 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
94376 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,94355
94382 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
94385 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,94355:JM,94340:JM,94335:JM,94366
94411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,94416:CD,94420:CD,94441:CD,94446:CD,94461:CD,94464
94416 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,94420
94421 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,94420
94420 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,94421:CD,94427:CD,94432:CD,94437:JM,94420
94427 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
94432 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,94420
94437 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
94441 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,94446
94446 :: EXPR :: assign :: I :: v21 = v20.length::DD,94461
94455 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,107574
94461 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,94455:CD,94460:CD,94464
94460 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,94464
94464 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,94460:DD,94461
94490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,94495:CD,94499:CD,94594:CD,94599:CD,94603:CD,94608:CD,94613:CD,94618:CD,94768:JM,94769:JM,94631
94495 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,94769:JM,94499:JM,94631
94499 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,94507:CD,94513:CD,94521:CD,94527:CD,94535:CD,94541:CD,94549:CD,94555:CD,94563:CD,94569:CD,94577:CD,94583:CD,94627:CD,94631:CD,94662:CD,94667:CD,94672:CD,94677:CD,94682:CD,94687:CD,94691:CD,94695:CD,94715:CD,94719:CD,94769:JM,94499
94507 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,94769:JM,94499:JM,94631
94513 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,94769:JM,94631
94521 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,94769:JM,94499:JM,94631
94527 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,94769:JM,94631
94535 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,94769:JM,94499:JM,94631
94541 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,94769:JM,94631
94549 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,94769:JM,94499:JM,94631
94555 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,94769:JM,94631
94563 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,94769:JM,94499:JM,94631
94569 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,94769:JM,94631
94577 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,94769:JM,94499:JM,94631
94583 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,94769:JM,94631
94594 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
94599 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
94603 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
94608 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
94613 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,94769:JM,94499:JM,94631
94618 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,94769:JM,94631
94627 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,94769:JM,94499:JM,94631
94631 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,94632:CD,94638:CD,94643:CD,94647:CD,94653:CD,94769:JM,94499:JM,94631
94632 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,94769:JM,94499:JM,94631
94638 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,94769
94643 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,94769:JM,94499:JM,94631
94647 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,94769:JM,94499:JM,94631
94653 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,94769
94662 :: CALL :: call :: V :: v83.setA(v85)::CL,107627
94667 :: CALL :: call :: V :: v83.setB(v87)::CL,107638
94672 :: CALL :: call :: V :: v83.setC(v89)::CL,107649
94677 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,107660
94682 :: CALL :: call :: V :: v83.setBeta(v93)::CL,107680
94687 :: CALL :: call :: V :: v83.setGamma(v95)::CL,107700
94691 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,94695:CL,107720
94695 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,94698:CD,94711
94698 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,94698
94711 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,107755
94715 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,94719:CL,107766
94719 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,94722:CD,94727:CD,94732:CD,94737:CD,94748:CD,94756:CD,94763
94722 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
94727 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
94732 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
94737 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
94748 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,107845
94756 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,107856
94763 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,107845
94769 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
94768 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
94844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,94849:CD,94853:JM,95094:JM,95017:JM,94926
94849 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,94853:JM,95094:JM,95017:JM,94926
94853 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,94861:CD,94867:CD,94871:CD,94881:CD,94891:CD,94901:CD,94911:CD,94917:CD,94921:CD,94926:CD,94937:CD,95094:JM,94853:JM,95017
94861 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,94853:JM,95094:JM,95017:JM,94926
94867 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,95094:JM,95017:JM,94926
94871 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,94853:JM,95094:JM,95017:JM,94926
94881 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,94853:JM,95094:JM,95017:JM,94926
94891 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,94853:JM,95094:JM,95017:JM,94926
94901 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,94853:JM,95094:JM,95017:JM,94926
94911 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,94853:JM,95094:JM,95017:JM,94926
94917 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,95094:JM,95017:JM,94926
94921 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,95094:JM,94926
94927 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,94853:JM,95094:JM,95017:JM,94926
94926 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,95094:CD,94927:CD,94933:JM,94853:JM,95017:JM,94926
94933 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,95094:JM,95017:JM,94926
94937 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,94942:CD,94953:CD,95017
94939 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,94942
94943 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,94947
94942 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,94943
94947 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
94950 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,94953
94953 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,94954
94954 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,94974
94974 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
95017 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,95024
95018 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
95021 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
95024 :: CALL :: call :: Z :: v76 = v73.add(v74)::
95094 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,94937
95198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,95203:CD,95289:CD,95294:CD,95299:CD,95304:CD,95309:CD,95346:CD,95439:JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95203 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,95204:CD,95208:JM,95362:JM,95259:JM,95226:JM,95215
95204 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95208 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,95210:CD,95215:JM,95362:JM,95208:JM,95259:JM,95226
95210 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95215 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,95216:CD,95221:CD,95226:JM,95362:JM,95208:JM,95259:JM,95215
95216 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,107867
95221 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95226 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,95230:CD,95234:CD,95254:CD,95259:JM,95362:JM,95208:JM,95226:JM,95215
95230 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,95234:CL,108268
95235 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,95238
95234 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,95238:CD,95249
95238 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,108300:JM,108287
95249 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,108324
95254 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95259 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,95260:CD,95264:CD,95269:CD,95273:CD,95317:CD,95321:CD,95326:CD,95330:CD,95357:CD,95362:JM,95208:JM,95259:JM,95226:JM,95215
95260 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
95264 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,95273
95269 :: CALL :: call :: Z :: v66 = v64.matches()::JM,95273
95273 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,95274:JM,95273
95274 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,95273
95289 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
95294 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,95273
95299 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
95304 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
95309 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
95317 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
95321 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,95330
95326 :: CALL :: call :: Z :: v93 = v91.matches()::JM,95330
95331 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,95330
95330 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,95331:JM,95330
95346 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,95330
95357 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,95362:JM,95208:JM,95259:JM,95226:JM,95215
95363 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
95362 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,95363:CD,95367:CD,95372:CD,95376
95367 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,95376
95372 :: CALL :: call :: Z :: v27 = v25.matches()::JM,95376
95377 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,95376
95376 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,95377:CD,95389:CD,95393:CD,95394:CD,95432:JM,95376
95389 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,95393:CL,108500
95393 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,95394
95394 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,95397:CD,95406:CD,95410:CD,95418
95397 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,95376
95406 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,95410:CL,108500
95410 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,95410
95418 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
95432 :: CALL :: call :: V :: v52.setResolution(v32)::CL,108509
95439 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,95376
95523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,95531:CD,95722:CD,95727:CD,95731:CD,95736:CD,95741:CD,95746:CD,95756
95528 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,95531
95531 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,95536:CD,95540
95536 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,95540:CL,98850
95540 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,95542:CD,95548:CD,95552:CD,95556:CD,95563:CD,95570:CD,95577:CD,95584:CD,95591:CD,95598:CD,95605:CD,95612:CD,95619:CD,95626:CD,95635:CD,95641:CD,95648:CD,95655:CD,95662:CD,95669:CD,95676:CD,95683:CD,95690:CD,95697:CD,95704:CD,95714
95542 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
95548 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
95552 :: CALL :: call :: I :: v16 = parseInt(v14)::
95556 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,95641:CL,108520
95563 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,95648:CL,108520
95570 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,95655:CL,108520
95577 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,95662:CL,108520
95584 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,95669:CL,108520
95591 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,95676:CL,108520
95598 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,95683:CL,108520
95605 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,95690:CL,108520
95612 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,95697:CL,108520
95619 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,95704:CL,108520
95626 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
95635 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
95641 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,95642:CF,95648
95642 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
95649 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
95648 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,95649:CF,95655
95655 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,95656:CF,95662
95656 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
95663 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
95662 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,95663:CF,95669
95669 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,95670:CF,95676
95670 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
95677 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
95676 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,95677:CF,95683
95683 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,95684:CF,95690
95684 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
95691 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
95690 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,95691:CF,95697
95697 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,95698:CF,95704
95698 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
95705 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
95704 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,95705
95711 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
95714 :: CALL :: call :: Z :: v87 = v85.add(v47)::
95722 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
95727 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
95731 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
95736 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
95741 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
95746 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
95756 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
95886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,95894:CD,95898:CD,95938:CD,95943:CD,95948:CD,95953
95894 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,95898:CL,108570
95899 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
95898 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,95899:CD,95904:CD,95909:CD,95910:CD,95916:CD,95931
95904 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,95909
95909 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,95910:CD,95916:CD,95931
95910 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
95916 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
95931 :: CALL :: call :: V :: v23.setModDate(v22)::CL,108606
95938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
95943 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
95948 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
95953 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
95981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,96006:CD,96201
96006 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
96198 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
96201 :: CALL :: call :: Z :: v105 = v103.add(v13)::
96306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,96314:CD,96318:JM,96770
96314 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96318:CL,98850
96318 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,96322:CD,96327:CD,96332:CD,96340:CD,96349:CD,96354:CD,96355:CD,96360:CD,96364:CD,96369:CD,96371:CD,96372:CD,96449:CD,96458:CD,96659:CD,96665:CD,96670:CD,96673:CD,96681:CD,96685:CD,96689:CD,96694:CD,96699:CD,96710:CD,96714:CD,96761:CD,96765:CD,96767:CD,96768:CD,96769:CD,96770
96322 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
96327 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,96770
96332 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,96770
96340 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,96770
96349 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,96354
96355 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,96767
96354 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,96355:DD,96769
96360 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,96770
96364 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,96369
96369 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,96768
96371 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,96372
96373 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,96769
96372 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,96769:CF,96373:CD,96380:CD,96384:CD,96401:CD,96412:CD,96420:CD,96424:CD,96429:CD,96434
96380 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,96770
96384 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
96401 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
96412 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
96417 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
96420 :: CALL :: call :: I :: v55 = v53.size()::
96424 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
96429 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
96434 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
96449 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
96458 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,96770
96466 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
96471 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,96670
96476 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,96670
96481 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
96489 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,96670
96495 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,96499:CL,89961
96499 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,96500:JM,96670
96500 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
96510 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,96670
96516 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,96670
96522 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,96670
96526 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
96530 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,96670
96536 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,96670
96541 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
96564 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
96573 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
96579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
96584 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
96589 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
96594 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
96599 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
96607 :: CALL :: call :: V :: v126.setChainId(v106)::CL,102421
96611 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,108844
96615 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,108855
96619 :: CALL :: call :: Z :: v145 = v64.add(v126)::
96626 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
96631 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
96636 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
96641 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,96770
96646 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
96654 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,96770
96659 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,96670
96665 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,96670
96670 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,96466:CD,96471:CD,96476:CD,96481:CD,96489:CD,96495:CD,96499:CD,96510:CD,96516:CD,96522:CD,96526:CD,96530:CD,96536:CD,96541:CD,96564:CD,96573:CD,96579:CD,96584:CD,96589:CD,96594:CD,96599:CD,96607:CD,96611:CD,96615:CD,96619:CD,96626:CD,96631:CD,96636:CD,96641:CD,96646:CD,96654:CD,96659:CD,96665:CD,96770
96673 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
96678 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
96681 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
96685 :: CALL :: call :: I :: v172 = v170.size()::
96689 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
96694 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
96699 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
96707 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,96765
96710 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,96765
96714 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,96765
96719 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,96765
96727 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
96726 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
96735 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
96743 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
96748 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
96753 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
96761 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,96765
96765 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,96719:CD,96726:CD,96727:CD,96735:CD,96743:CD,96748:CD,96753:CD,96761:JM,96765
96767 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,96371
96769 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
96768 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,96371
96770 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,96770:JM,96670
96910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,96918:CD,96922:JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96918 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,96922:CL,98850
96922 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,96924:CD,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96924 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96928 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,96936:CD,96942:CD,96948:CD,96952:CD,96958:CD,96964:CD,96970:CD,96974:CD,96980:CD,96984:JM,96928:JM,97010:JM,97028:JM,97016:JM,97022
96936 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96942 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96948 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96952 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96958 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96964 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96970 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96974 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96980 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96985 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
96984 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,96985:CD,96991:CD,96995:CD,97001:CD,97005:CD,97010:CD,97086:CD,97117:JM,96928:JM,97028:JM,96984:JM,97016:JM,97022
96991 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,97010:JM,97028:JM,97016:JM,97022
96995 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,96928:JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
97001 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,97010:JM,97028:JM,97016:JM,97022
97005 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,97010:JM,97028:JM,97016:JM,97022
97011 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,97010:JM,97028:JM,97016:JM,97022
97010 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,97011:CD,97016:CD,97086:CD,97117:JM,97010:JM,97028:JM,97022
97017 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,97010:JM,97028:JM,97016:JM,97022
97016 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,97017:CD,97022:CD,97086:CD,97117:JM,97010:JM,97028:JM,97016
97023 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,97010:JM,97028:JM,97016:JM,97022
97022 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,97023:CD,97028:CD,97031:CD,97032:CD,97040:CD,97045:CD,97049:CD,97050:CD,97058:CD,97063:JM,97010:JM,97016:JM,97022
97028 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,97031:CD,97032:CD,97040:CD,97045:CD,97049:CD,97050:CD,97058:CD,97063:CD,97086:CD,97117
97031 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
97032 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
97040 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
97045 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,97010:JM,97028:JM,97016:JM,97022
97049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
97050 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
97058 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,97010:JM,97028:JM,96984:JM,97016:JM,97022
97063 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,97010:JM,97028:JM,97016:JM,97022
97086 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
97114 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
97117 :: CALL :: call :: Z :: v77 = v75.add(v67)::
97210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,97218:CD,97222
97218 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,97222:CL,98850
97222 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,97224:CD,97230:CD,97234:CD,97240:CD,97244:CD,97250:CD,97254:CD,97260:CD,97264:CD,97270:CD,97274:CD,97280:CD,97284:CD,97290:CD,97294:CD,97300:CD,97304:CD,97310:CD,97314:CD,97320:CD,97324:CD,97330:CD,97334:CD,97340:CD,97344:CD,97350:CD,97354:CD,97360:CD,97367:CD,97385
97224 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
97230 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
97234 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
97240 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
97244 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
97250 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
97254 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
97260 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
97264 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
97270 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
97274 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
97280 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
97284 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
97290 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
97294 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
97300 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
97304 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
97310 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
97314 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
97320 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
97324 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
97330 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
97334 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
97340 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
97344 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
97350 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
97354 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
97360 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
97364 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
97367 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
97385 :: CALL :: call :: Z :: v88 = v84.add(v85)::
97467 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,85116:JM,85197
97466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,97467:CD,97473
97470 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,97473
97473 :: NORM :: compound :: Z :: return v3::CF,97467
97475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,97483:CD,97487:JM,97493
97483 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,97487:CL,98850
97487 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,97489:CD,97493
97489 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,97493
97493 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,97501:CD,97507:CD,97511:CD,97517:CD,97523:CD,97527:CD,97533:CD,97539:CD,97543:CD,97549:CD,97555:CD,97559:CD,97565:CD,97569:CD,97575:CD,97581:CD,97587:CD,97593:CD,97599:CD,97605:CD,97611:CD,97620:JM,97493
97501 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,97493
97507 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
97511 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,97493
97517 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,97493
97523 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
97527 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,97493
97533 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,97493
97539 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
97543 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,97493
97549 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,97493
97555 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
97559 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,97493
97565 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
97569 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
97575 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
97581 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
97587 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
97593 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
97599 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
97605 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
97611 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
97617 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
97620 :: CALL :: call :: Z :: v76 = v74.add(v48)::
97701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,97709:CD,97713:JM,97719
97709 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,97713:CL,98850
97713 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,97715:CD,97719
97715 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,97719
97719 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,97727:CD,97733:CD,97737:CD,97743:CD,97749:CD,97753:CD,97759:CD,97765:CD,97769:CD,97775:CD,97781:CD,97785:CD,97791:CD,97795:CD,97801:CD,97807:CD,97813:CD,97819:CD,97825:CD,97831:CD,97837:CD,97846:JM,97719
97727 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,97719
97733 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
97737 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,97719
97743 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,97719
97749 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
97753 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,97719
97759 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,97719
97765 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
97769 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,97719
97775 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,97719
97781 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
97785 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,97719
97791 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
97795 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
97801 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
97807 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
97813 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
97819 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
97825 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
97831 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
97837 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
97843 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
97846 :: CALL :: call :: Z :: v74 = v72.add(v46)::
97927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,97935:CD,97939:JM,97945
97935 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,97939:CL,98850
97939 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,97941:CD,97945
97941 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,97945
97945 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,97953:CD,97959:CD,97963:CD,97969:CD,97975:CD,97979:CD,97985:CD,97991:CD,97995:CD,98001:CD,98007:CD,98011:CD,98017:CD,98021:CD,98027:CD,98033:CD,98039:CD,98045:CD,98051:CD,98057:CD,98063:CD,98072:JM,97945
97953 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,97945
97959 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
97963 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,97945
97969 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,97945
97975 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
97979 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,97945
97985 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,97945
97991 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
97995 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,97945
98001 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,97945
98007 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
98011 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,97945
98017 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
98021 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
98027 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
98033 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
98039 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
98045 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
98051 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
98057 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
98063 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
98069 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
98072 :: CALL :: call :: Z :: v74 = v72.add(v46)::
98153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,98159:CD,98187:CD,98191:CD,98195:CD,98199:CD,98220:CD,98248:CD,98252
98159 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,98252:JM,98191
98164 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,98252:JM,98191
98183 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,109039
98187 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,98252:JM,98191
98191 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,98164:CD,98183:CD,98187:JM,98252:JM,98191
98192 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,98199
98195 :: CALL :: call :: I :: v22 = v20.size()::JM,98199
98199 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,109745:JM,109738:CD,98211
98208 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
98211 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
98220 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,98252:JM,98191
98225 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,98252:JM,98191
98244 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,109849
98248 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,98252:JM,98191
98252 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,98225:CD,98244:CD,98248:JM,98252:JM,98191
98289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,98300:CD,98305:CD,98310:CD,98334:CD,98376:CD,98380:CD,98400:CD,98410:CD,98420:CD,98430:CD,98440:CD,98447:CD,98451:CD,98509:CD,98519:CD,98526:CD,98530:CD,98537:CD,98555:CD,98591:CD,98592:CD,98653
98300 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
98305 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,98310
98310 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,98318:CD,98323
98318 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,98323
98323 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,98327
98327 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,107512
98331 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,98334
98334 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,98341:CD,98355:CD,98361
98341 :: CALL :: call :: V :: v21.addGroup(v22)::CL,102983
98355 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,98361:CL,106704
98361 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,98368
98362 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
98365 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
98368 :: CALL :: call :: Z :: v33 = v30.add(v31)::
98373 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,98380
98376 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,98380
98381 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,110515
98380 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,98381:CD,98390
98390 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,111479
98400 :: CALL :: call :: V :: v41.addModel(v42)::CL,102236
98410 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,101971
98420 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,111490
98430 :: CALL :: call :: V :: v50.setConnections(v51)::CL,111505
98440 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,102001
98447 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,98451:CL,111516
98451 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,98455:CD,98459:CD,98501
98455 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,98459:CL,98850
98459 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,98476:CD,98501
98476 :: CALL :: call :: V :: v74.align(v76, v77)::CL,111547
98501 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,111603
98509 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,111746
98519 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,102185
98526 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,98530:CL,98850
98531 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,112183
98530 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,98531
98534 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,98537
98537 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,98548
98548 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,112550
98552 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,98555
98555 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,98559:CD,98563
98556 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,98563
98559 :: CALL :: call :: I :: v97 = v95.size()::JM,98563
98563 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,98573:CD,98577:CD,98578:CD,98584
98567 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
98570 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,98577
98573 :: CALL :: call :: I :: v102 = v100.size()::JM,98577
98577 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
98578 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
98584 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,112561
98588 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,98591
98591 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,98592
98593 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,98596
98592 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,98596:CD,98597:CD,98612:CD,98613
98597 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,98604:CD,98612:CD,98613
98596 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,98597
98604 :: CALL :: call :: V :: v127.setRfree(v128)::CL,112572
98609 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,98612
98613 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,98617:CD,98618:CD,98633:CD,98634
98612 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,98613
98614 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,98617
98617 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,98618
98618 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,98625:CD,98633:CD,98634
98625 :: CALL :: call :: V :: v124.setRfree(v125)::CL,112572
98630 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,98633
98633 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,98634
98635 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,98638
98634 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,98638:CD,98639
98639 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,98646
98638 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,98639
98646 :: CALL :: call :: V :: v121.setRfree(v122)::CL,112572
98653 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,102088
98757 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,85175:JM,128509
98756 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,98757:CD,98763
98760 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,98763
98763 :: NORM :: compound :: Z :: return v3::CF,98757
98765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,98784:CD,98798:CD,98802:CD,98806:CD,98810
98781 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,98802
98784 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,98802
98789 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,98802
98794 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,112604
98798 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,98802
98802 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,98789:CD,98794:CD,98798:JM,98802
98806 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,112760
98810 :: CALL :: call :: V :: v3.makeBonds()::CL,112821
98829 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,98830:CD,98836
98830 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,85186:JM,128520
98833 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,98836
98836 :: NORM :: compound :: Z :: return v3::CF,98830
98838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,98845
98845 :: CALL :: call :: V :: addCharges(v3)::CL,112842
98851 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,85205:JM,92282:JM,93745:JM,95540:JM,96318:JM,96922:JM,97222:JM,97487:JM,97713:JM,97939:JM,98459:JM,98530:JM,107879:JM,128109:JM,128501:JM,128534:JM,148299:JM,150515
98850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,98851:CD,98857
98854 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,98857
98857 :: NORM :: compound :: Z :: return v3::CF,98851
98859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,98868:CD,98879:CD,98890:CD,98934:CD,98938
98868 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,113159
98879 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,113159
98890 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,113159
98905 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,113467
98909 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,98913:CL,113494
98913 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,98914:CD,98919
98914 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,98919:CL,113538
98919 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::CD,98929
98929 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,113581
98934 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,98938:CL,113601
98938 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,98905:CD,98909:CD,98913:CD,98934
100908 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
100957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,100965
100962 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
100965 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
100974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,100979:CD,100982:CD,100989:CD,100993:CD,100997:CD,101001:CD,101005:JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
100979 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,115346
100982 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,100986
100986 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
100989 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,101336:JM,101571
100993 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,101604
100997 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
101001 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,101605:JM,101161:JM,101451:JM,101005:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101005 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,101006:CD,101011:CD,101014:CD,101019:CD,101024:CD,101029:CD,101037:CD,101602:CD,101603:CD,101604:CD,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101006 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101011 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,101602:CD,101014:CD,101019:CD,101024:CD,101029:CD,101037:CD,101552:CD,101556:CD,101603:CD,101604:CD,101605
101014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
101019 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101024 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,101045:JM,101605:JM,101161:JM,101051:JM,101451:JM,101101:JM,101389:JM,101087:JM,101118:JM,101246
101029 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,101246
101037 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,115388
101041 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101045 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,101602:CD,101046:CD,101051:CD,101552:CD,101556:CD,101603:CD,101604:CD,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101087:JM,101118:JM,101246
101046 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101051 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,101055:CD,101056:CD,101064:CD,101069:CD,101074:CD,101082:CD,101087:CD,101095:CD,101552:CD,101556:CD,101600:CD,101601:CD,101602:CD,101603:CD,101604:CD,101605
101055 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,101056
101056 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,101056
101064 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
101069 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101074 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101087:JM,101118:JM,101246
101082 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101087 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,101600:CD,101088:CD,101601
101089 :: CALL :: call :: V :: v154.clear()::
101088 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,101600:CD,101089:CD,101092
101092 :: CALL :: call :: V :: v9.clear()::
101095 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,101096:CD,101101:CD,101384:CD,101389:JM,101605:JM,101161:JM,101451:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101096 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101101 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,101102:CD,101106:CD,101111:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605
101102 :: CALL :: call :: V :: v9.clear()::
101106 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,101111
101111 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,101112:CD,101295:CD,101304:CD,101308:CD,101319:CD,101328:CD,101332:CD,101336:CD,101373:CD,101380:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605
101113 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101112 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,101113:CD,101118:CD,101237:CD,101241:CD,101246:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101051:JM,101087
101118 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,101125:CD,101128:CD,101135:CD,101139:CD,101237:CD,101241:CD,101246:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101051:JM,101087:JM,101118
101125 :: CALL :: call :: V :: v9.clear()::
101128 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,101139:JM,101206:JM,101149:CL,115421
101135 :: CALL :: call :: I :: v84 = v82.size()::JM,101139:JM,101206:JM,101149
101139 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,101140:CD,101144:CD,101149:CD,101150:CD,101155:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101139:JM,101206
101140 :: CALL :: call :: V :: v154.clear()::
101144 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,101139:JM,101206:JM,101149
101149 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,101155:JM,101605:JM,101207
101150 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,101155:JM,101605:JM,101207
101155 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,101156:CD,101161:CD,101195:CD,101201:CD,101206:CD,101207:CD,101208:CD,101212:CD,101218:CD,101223:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101051:JM,101087:JM,101118:JM,101246
101156 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101161 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,101164:CD,101169:CD,101174:CD,101179:CD,101187:CD,101191:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605
101164 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
101169 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101174 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,101605:JM,101451:JM,101389:JM,101246
101179 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,101246
101187 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,115388
101191 :: CALL :: call :: V :: v154.clear()::
101195 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,101605:JM,101207
101201 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,101139:JM,101206:JM,101149
101207 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
101206 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,101207
101208 :: CALL :: call :: I :: v102 = v88.length()::
101212 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
101218 :: CALL :: call :: Z :: v106 = v9.add(v104)::
101223 :: CALL :: call :: Z :: v108 = v154.add(v99)::
101237 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101241 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,101605:JM,101451:JM,101389:JM,101246
101247 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,101273
101246 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,101247:CD,101260:CD,101273:CD,101274:CD,101602:CD,101603:CD,101604:CD,101605
101252 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,101605
101256 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
101260 :: CALL :: call :: Z :: v67 = v9.add(v65)::
101273 :: EXPR :: assign :: I :: v71 = v62.length::DD,101274
101274 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,101602:CD,101603:CD,101604:CD,101605
101295 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,101604:JM,101336:CL,115421
101304 :: CALL :: call :: I :: v125 = v121.size()::JM,101604:JM,101336
101308 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,101336
101319 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
101328 :: CALL :: call :: I :: v135 = v121.size()::JM,101604:JM,101336
101332 :: CALL :: call :: I :: v137 = v9.size()::JM,101336
101336 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,101340:CD,101344:CD,101352:CD,101356
101340 :: CALL :: call :: I :: v143 = v9.size()::
101344 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
101352 :: CALL :: call :: I :: v147 = v121.size()::JM,101604:JM,101336
101356 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
101373 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,115737
101380 :: CALL :: call :: V :: v121.clear()::JM,101604:JM,101336
101384 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101389 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,101390:CD,101398:CD,101418:CD,101425:CD,101429:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605
101391 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,115737
101390 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,101391
101398 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,117158
101418 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,101522:JM,101429:JM,101439:CL,115421
101425 :: CALL :: call :: I :: v169 = v167.size()::JM,101522:JM,101429:JM,101439
101429 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,101430:CD,101434:CD,101439:CD,101440:CD,101445:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101522:JM,101429
101430 :: CALL :: call :: V :: v154.clear()::
101434 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,101522:JM,101429:JM,101439
101439 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,101523:JM,101445:JM,101605:JM,101497
101440 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,101523:JM,101445:JM,101605:JM,101497
101445 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,101446:CD,101451:CD,101485:CD,101511:CD,101517:CD,101522:CD,101523:CD,101524:CD,101528:CD,101534:CD,101539:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605:JM,101161:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101051:JM,101087:JM,101118:JM,101246
101446 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101451 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,101454:CD,101459:CD,101464:CD,101469:CD,101477:CD,101481:CD,101552:CD,101556:CD,101602:CD,101603:CD,101604:CD,101605
101454 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
101459 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101464 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,101246
101469 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
101477 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,115388
101481 :: CALL :: call :: V :: v154.clear()::
101485 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,101486:CD,101492:CD,101497:JM,101605
101486 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,101497:JM,101523:JM,101605
101492 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,101605:JM,101497
101497 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,101498:CD,101505:JM,101605
101498 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,115737
101505 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,117158
101511 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,101605:JM,101523:JM,101497
101517 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,101522:JM,101429:JM,101439
101523 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
101522 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,101523
101524 :: CALL :: call :: I :: v192 = v173.length()::
101528 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
101534 :: CALL :: call :: Z :: v196 = v9.add(v194)::
101539 :: CALL :: call :: Z :: v198 = v154.add(v189)::
101552 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,101605:JM,101161:JM,101451:JM,101005:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101557 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,101558:CD,101562
101556 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,101041:CD,101045:CD,101557:CD,101588:CD,101596:CD,101602:CD,101603:CD,101604:CD,101605:JM,101161:JM,101451:JM,101101:JM,101389:JM,101011:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246
101558 :: CALL :: call :: I :: v202 = v154.size()::JM,101562
101563 :: CALL :: call :: I :: v204 = v154.size()::JM,101571
101562 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,101563:CD,101567:CD,101571
101567 :: CALL :: call :: I :: v206 = v9.size()::JM,101571
101571 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,101572:CD,101579
101572 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,115737
101579 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,117158
101585 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,101588
101588 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,101592
101592 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,117178
101596 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,115388
101601 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,101112:DD,101603:CF,101095
101600 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,101601:DD,101095:DD,101602
101603 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,101604:DD,101601:DD,101603
101602 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,101603:JM,101056:DD,101088:DD,101600:DD,101602
101605 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,101161:JM,101451:JM,101005:JM,101101:JM,101389:JM,101041:JM,101011:JM,101045:JM,101556:JM,101051:JM,101087:JM,101118:JM,101246:DD,101390:DD,101485:JM,101497:DD,101557:DD,101605
101604 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,101605:JM,101562:JM,101571:DD,101604
101951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,101956
101956 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
101963 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,131483:JM,149142:JM,149293:JM,151213
101962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,101963:CD,101969
101966 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,101969
101969 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,101963
101971 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,101976
101976 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
101993 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,150330:JM,150362
101992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,101993:CD,101999
101996 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,101999
101999 :: NORM :: compound :: Ljava/util/List :: return v3::CF,101993
102001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,102007:CD,102013:CD,102027:CD,102031:JM,102032
102007 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
102013 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,102032:JM,102031
102018 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,102031
102023 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,117339
102027 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,102031
102031 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,102018:CD,102023:CD,102027:JM,102031
102032 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
102077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,102082
102082 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
102089 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,146767
102088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,102089:CD,102095:CD,102160
102092 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,102095
102095 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,102099:CD,102103:CD,102109:CD,102119:CD,102152:CD,102156
102096 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,102103
102099 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,102103
102103 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,102109:CD,102119:CD,102152:CD,102156
102109 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,102113:CL,117365
102113 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
102116 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,102156
102119 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,102156
102124 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,102156
102129 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,102151:CL,117389
102133 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,102151
102138 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,102151
102143 :: CALL :: call :: V :: v29.setCompound(v20)::CL,117398
102147 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,102151
102151 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,102138:CD,102143:CD,102147:JM,102151:JM,102156
102152 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,102156
102157 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,102160
102156 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,102124:CD,102129:CD,102133:CD,102147:CD,102151:CD,102152:JM,102156
102160 :: NORM :: compound :: Ljava/util/List :: return v31::DD,102089
102185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,102190
102190 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
102205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,102210
102210 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
102217 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,146858:JM,147146:JM,150593:JM,150524
102216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,102217:CD,102223
102220 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,102223
102223 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102217
102225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,102230
102230 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
102236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,102241:CD,102255:CD,102259:CD,102263
102241 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,102259
102246 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,102259
102251 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,117409
102255 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,102259
102259 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,102246:CD,102251:CD,102255:JM,102259
102260 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
102263 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,102259
102289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,102296:CD,102302:CD,102316:CD,102320:CD,102324:CD,102328
102296 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
102302 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,102320
102307 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,102320
102312 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,117409
102316 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,102320
102321 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,102328
102320 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,102307:CD,102312:CD,102316:JM,102320
102324 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,102328
102329 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
102328 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,102332:CD,102341
102332 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,102320
102338 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
102341 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,102320
102395 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,152214
102394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,102395:CD,102403:CD,102408:CD,102409:CD,102414:CD,102415
102400 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,102408
102403 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,102408:JM,102414
102409 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,102414:JM,102408
102408 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,102414
102415 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,102395
102414 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,102415
102421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,102426
102426 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
102467 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,124887
102466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,102467:CD,102472:CD,102477:CD,102482:CD,102486:CD,102487:CD,102491:CD,102496:CD,102497:CD,102498:CD,102504:CD,102509:CD,102514:CD,102519:CD,102527:CD,102532
102472 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,102486:CL,117420
102477 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,102486
102482 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,102486
102487 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,102496:CL,80865
102486 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,102497
102491 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,102496
102497 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,102467
102496 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,102482:CD,102486:CD,102487:CD,102491:CD,102498:CF,102497
102498 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,102486
102504 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
102509 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,102496
102514 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
102519 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
102524 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
102527 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
102532 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
102790 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
102793 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,102795
102795 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
102798 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,102802
102802 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
102805 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,102809
102809 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
102812 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,102816
102816 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
102819 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
102836 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,102841
102841 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
102917 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,125924:JM,125981:JM,125916:JM,126069:JM,126134:JM,126077:JM,128346
102916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,102917:CD,102923
102920 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,102923
102923 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102917
102925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,102930:CD,102944:CD,102948:JM,102949
102930 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,102949:JM,102948
102935 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,102948
102940 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,107304
102944 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,102948
102949 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
102948 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,102935:CD,102940:CD,102944:JM,102948
102972 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,102977
102977 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
102983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,102988:CD,102992:CD,102996:CD,103010:CD,103014:CD,103018:CD,103023:CD,103027:CD,103032:CD,103164:JM,103142
102988 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,107304
102992 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,103014:CL,63325
102996 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,103014
103001 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,103014
103006 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,107304
103010 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,103014
103015 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
103014 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,103001:CD,103006:CD,103010:JM,103014
103018 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,103142
103023 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,103027:CL,63274
103027 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,103164:CD,103028
103028 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,103164:CL,80803
103033 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,103040
103032 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,103036:CD,103040:CD,103041:CD,103048:CD,103053
103036 :: CALL :: call :: I :: v27 = v25.size()::JM,103040
103041 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
103040 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
103048 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,103053
103053 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,103083:CD,103088:CD,103089:CD,103093:CD,103113:CD,103118:CD,103119:CD,103123:CD,103142:CD,103143:CD,103157
103077 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
103083 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,103088
103089 :: CALL :: call :: I :: v54 = v52.intValue()::
103088 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
103093 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
103107 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
103113 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,103118
103119 :: CALL :: call :: I :: v67 = v65.intValue()::
103118 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
103123 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
103143 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,103147
103142 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,103143
103147 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
103157 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
103164 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,103032
103225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,103226:CD,103232:CD,103236
103226 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,107380:JM,111703:JM,113084:JM,126661:JM,128413:JM,128493:JM,146393:JM,146714
103229 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,103236
103232 :: CALL :: call :: I :: v5 = v3.size()::JM,103236
103236 :: NORM :: compound :: I :: return v5::CF,103226
104491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,104492:CD,104498:CD,104539
104492 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,106875:JM,152353
104495 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,104498
104498 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,104502:CD,104512
104502 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,104506:CL,118177
104506 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
104509 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,104512
104512 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,104515:CD,104523:CD,104528
104515 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
104520 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
104523 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
104528 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
104536 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,104539
104539 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,104492
104551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,104552:CD,104558
104552 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,120484:JM,120598:JM,120489:JM,120472:JM,120478:JM,152499:JM,152411:JM,170071:JM,170077
104555 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,104558
104558 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,104552
104560 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,104574
104567 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
104570 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
104574 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
104641 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,89969:JM,90008:JM,148340:JM,150780
104640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,104641:CD,104646:CD,104651:CD,104652
104646 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,104651
104651 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,104652
104652 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,104641
104655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,104656:CD,104659:CD,104665:CD,104670
104656 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,89978:JM,106814:JM,150810:JM,161051:JM,161093
104659 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
104665 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,104670
104670 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,104673:CD,104678:CD,104680
104673 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,104678
104679 :: NORM :: compound :: Z :: return #(0)::DD,104656
104678 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,104679:CD,104680
104680 :: NORM :: compound :: Z :: return #(1)::DD,104656
104691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,104696:CD,104700:CD,104706:CD,104710:CD,104715:CD,104719:CD,104724:CD,104728:CD,104733:CD,104737:CD,104753:CD,104759:CD,104769:CD,104782:CD,104788:CD,104798:CD,104805
104696 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,104700
104700 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
104706 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
104710 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,104700
104715 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
104719 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
104724 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
104728 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,104700
104733 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
104737 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
104753 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
104759 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
104769 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
104782 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
104788 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
104798 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
104805 :: CALL :: call :: V :: v54.printStackTrace()::
106197 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,106198:CD,106205
106198 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,91487
106202 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,106205
106205 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,106209:CD,106237
106206 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,106209
106209 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,106216:CD,106221:CD,106237
106210 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,106221
106213 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,106221
106216 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,106221
106221 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,106228:CD,106233:CD,106237
106222 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,106233
106225 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,106233
106228 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,106233
106233 :: NORM :: compound :: I :: return v49::CF,106198
106234 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,106237
106237 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,106241:CD,106246
106238 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,106241
106241 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,106242:CD,106246
106243 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,106246
106242 :: NORM :: compound :: I :: return #(1)::CF,106198
106247 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,106250
106246 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,106250:CD,106255
106251 :: NORM :: compound :: I :: return #(-1)::CF,106198
106250 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,106251:CD,106255
106252 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,106255
106255 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,106259:CD,106287
106256 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,106259
106259 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,106266:CD,106271:CD,106287
106260 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,106271
106263 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,106271
106266 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,106271
106271 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,106278:CD,106283:CD,106287
106272 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,106283
106275 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,106283
106278 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,106283
106283 :: NORM :: compound :: I :: return v45::CF,106198
106284 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,106287
106287 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,106291:CD,106296
106288 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,106291
106291 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,106292:CD,106296
106293 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,106296
106292 :: NORM :: compound :: I :: return #(1)::CF,106198
106297 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,106300
106296 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,106300:CD,106305
106301 :: NORM :: compound :: I :: return #(-1)::CF,106198
106300 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,106301:CD,106305
106302 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,106305
106305 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,106309:CD,106337
106306 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,106309
106309 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,106316:CD,106321:CD,106337
106310 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,106321
106313 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,106321
106316 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,106321
106321 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,106328:CD,106333:CD,106337
106322 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,106333
106325 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,106333
106328 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,106333
106333 :: NORM :: compound :: I :: return v41::CF,106198
106334 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,106337
106337 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,106341:CD,106346
106338 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,106341
106341 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,106342:CD,106346
106343 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,106346
106342 :: NORM :: compound :: I :: return #(1)::CF,106198
106347 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,106350
106346 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,106350:CD,106352
106351 :: NORM :: compound :: I :: return #(-1)::CF,106198
106350 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,106351:CD,106352
106352 :: NORM :: compound :: I :: return #(0)::CF,106198
106411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,106412:CD,106416:CD,106420:CD,106424:CD,106429
106412 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,91501
106416 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,106429:CL,120018
106420 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,106429:CL,120018
106424 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,106429
106429 :: NORM :: compound :: I :: return v9::DD,106412
106705 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,92358:JM,93144:JM,93537:JM,93621:JM,93787:JM,98361
106704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,106705:CD,106729:CD,106733:CD,106735:JM,106726:JM,106716
106711 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,106726:JM,106733:JM,106716
106717 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,106726:CL,80865
106716 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,106727
106721 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,106726:JM,106733:JM,106716
106727 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,106705
106726 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,106727:CD,106728:CD,106729:CD,106733:CD,106735
106729 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,106726:JM,106733:JM,106716
106728 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,106735
106733 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,106711:CD,106716:CD,106717:CD,106721:CD,106726:CD,106734:JM,106733
106735 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,106726:JM,106716:DD,106728:DD,106733
106734 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,106705
106760 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
106763 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
106766 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
106777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,106778:CD,106784:CD,106788:JM,106804:JM,106799
106778 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,93574:JM,107244
106784 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,106788:JM,106798:CL,120434
106789 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,104491
106788 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,106789:CD,106793:CD,106797:CD,106799:CD,106828:CD,106829
106793 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,106797:CL,120667
106797 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,106798:CD,106799:CD,106828:CD,106829
106799 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,106805:CD,106800:CD,106804:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,106829
106798 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,106778
106800 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,106804
106805 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,106829
106804 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,106805:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,106810:CD,106814:CD,106829
106810 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,106814:CL,104655
106815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,106829
106814 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,106820:CF,106815:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,106824:CD,106829
106820 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,106829
106824 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,63303
106829 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,106828
106828 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,106778
106855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,106860:CD,106864:CD,106869:JM,106911
106860 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,106869:CL,62861
106864 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,106869
106869 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,106871:CD,106875:CD,106898:CD,106925
106871 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,106875:CL,104491
106875 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,106876:CD,106880:CD,106882:CD,106887:CD,106889:CD,106893:CD,106897:CD,106925
106876 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,106882:JM,106887:CL,62643:CL,62651:CL,62659
106880 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,106882:JM,106887
106882 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,106882:JM,106887
106887 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,106925
106889 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,104491
106893 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,106897:CL,120701
106897 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,106925
106898 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,106902:CD,106906:CD,106911
106902 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,106911:CL,120710
106906 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,106911
106911 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,106915:CD,106919
106915 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,120710
106919 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,106911
106925 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,106898
106949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,106956:CD,106957:CD,106968:CD,106969:CD,106977:CD,106981:CD,107004:CD,107018
106953 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,106956
106957 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,106961:CD,106962
106956 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,106957
106958 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,106961
106961 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
106962 :: CALL :: call :: V :: v7.trimToSize()::
106965 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,106968
106969 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,106973:CD,106974
106968 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,106969
106970 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,106973
106973 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
106974 :: CALL :: call :: V :: v12.trimToSize()::
106977 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,106981:CL,120719
106981 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,106982:CD,106986:CD,106999:CD,107003:CF,107004
106982 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,107003:CL,63325
106986 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,107003
106991 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,107003
106996 :: CALL :: call :: V :: v24.trimToSize()::CL,106949
106999 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,107003
107003 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,106991:CD,106996:CD,106999:JM,107003:CF,107004
107004 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,107012
107012 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
107015 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,107018
107019 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,107027
107018 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,107019
107027 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
107059 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,93148
107058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,107059:CD,107069:CD,107073:CD,107077:JM,107093:JM,107143:JM,107167
107069 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,107077:CL,120746
107073 :: CALL :: call :: I :: v11 = v9.size()::JM,107077
107077 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,107078:CD,107084:CD,107088:CD,107093:CD,107101:CD,107105:CD,107150:CD,107154:JM,107077
107078 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,107077
107084 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,107093:CL,77037
107088 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,107093:JM,107143
107093 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,107097:CD,107101:CD,107105:CD,107150:CD,107154
107094 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,107097
107097 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,107059
107101 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,107154:JM,107114:CL,63325
107105 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,107154:JM,107114
107110 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,107154:JM,107114
107115 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,107123:JM,107149:CL,120746
107114 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,107144
107119 :: CALL :: call :: I :: v33 = v31.size()::JM,107123:JM,107149
107123 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,107124:CD,107145:CD,107149:CD,107150:CD,107154:JM,107123:JM,107114
107124 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,107123:JM,107149
107129 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,107149
107134 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,107143:CL,77037
107138 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,107143:JM,107093
107143 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,107144:CD,107145:CD,107149
107145 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,107149
107144 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,107059
107149 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,107129:CD,107134:CD,107138:CD,107143:CD,107150:CD,107154:JM,107149:JM,107114
107150 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,107154:JM,107114
107154 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,107110:CD,107114:CD,107115:CD,107119:CD,107123:CD,107158:CD,107162:CD,107167:JM,107154
107158 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,107167:CL,62861
107162 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,107167
107167 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,107171:CD,107175:CD,107179:CD,107215:CD,107222:CD,107233:CD,107240:CD,107244
107171 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,107179:CL,120746
107175 :: CALL :: call :: I :: v64 = v62.size()::JM,107179
107179 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,107183:CD,107187:CD,107191:CD,107192:CD,107196:CD,107200:CD,107204:CD,107210:CD,107214
107180 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,107183
107183 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,107059
107187 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,107191:CL,55052:CL,55194:CL,55369
107191 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,107214:CF,107192
107192 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
107196 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,120755
107200 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,63325
107204 :: CALL :: call :: V :: v73.clear()::
107210 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,63212
107215 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,107244:CL,106777
107214 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,107059
107222 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,63283:CL,62870
107233 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,62850
107240 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,63212
107244 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,107059
107304 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,107315:JM,107309
107309 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
107312 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,107315
107315 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,107323
107323 :: CALL :: call :: V :: v6.setChainId(v8)::CL,102421
107334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,107344:CD,107376:CD,107380:CD,107384:CD,107392
107338 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
107344 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,120841
107355 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,62549
107360 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,120841
107367 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,102289
107372 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,107392
107376 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,107380:CL,103225
107380 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,107355:CD,107360:CD,107367:CD,107372:CD,107376:CD,107392
107384 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,120888
107392 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,107372:DD,107380
107413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,107414:CD,107420
107414 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,92860:JM,92868
107417 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,107420
107420 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,107414
107422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,107427:JM,107436
107427 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,107432:JM,107427:JM,107436
107428 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
107432 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,107427:JM,107436
107436 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
107457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,107463:CD,107467:CD,107475:CD,107476:CD,107481:CD,107486
107463 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
107467 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
107475 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
107476 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
107481 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
107486 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
107501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,107506
107506 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
107512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,107517
107517 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
107523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,107528
107528 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
107535 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,94126:JM,151616
107534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,107535:CD,107541
107538 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,107541
107541 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,107535
107543 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,107548
107548 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
107555 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,94224:JM,94230:JM,94218
107554 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,107555:CD,107561
107558 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,107561
107561 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,107555
107563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,107568
107568 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
107574 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,107579:CD,107583
107579 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,107589:JM,107593:JM,107583:CL,121050
107583 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,107588
107585 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,107588
107589 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,107589:JM,107593
107588 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,107589:JM,107593
107593 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
107627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,107632
107632 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
107638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,107643
107643 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
107649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,107654
107654 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
107660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,107665:JM,107672:CD,107668
107665 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
107668 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,107668:JM,107672
107672 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
107680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,107685:JM,107692:CD,107688
107685 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
107688 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,107688:JM,107692
107692 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
107700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,107712:JM,107705:CD,107708
107705 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
107708 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,107712:JM,107708
107712 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
107721 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,94695:JM,149588
107720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,107721:CD,107724:CD,107728:CD,107729
107724 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,107728:CL,121065
107729 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,107730:CD,107734:CD,107735:CD,107743
107728 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,107729
107730 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,107734:CL,121074
107735 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,107736:CD,107740:CD,107741:CD,107743
107734 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,107735
107736 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,107740:CL,121083
107741 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,107742:CD,107743
107740 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,107741
107743 :: NORM :: compound :: Z :: return #(1)::CF,107721
107742 :: NORM :: compound :: Z :: return #(0)::CF,107721
107755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,107760
107760 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
107767 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,94719:JM,149709
107766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,107767:CD,107770:JM,107825:JM,107782:JM,107775
107771 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,107825:JM,107782:JM,107775
107770 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,107771:CD,107775:CD,107776:JM,107825:JM,107782
107775 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,107776:CD,107777:CD,107782:CD,107783:CD,107784:CD,107790:CD,107798:CD,107803:CD,107807:CD,107812:CD,107818:CD,107823:CD,107824:CD,107825:JM,107775
107777 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,107825:JM,107782:JM,107775
107776 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,107767
107783 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
107782 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,107825
107784 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
107790 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
107798 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
107803 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
107807 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
107812 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
107818 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,107823
107823 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,107824
107825 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,107783
107824 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,107767
107845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,107850
107850 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
107856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,107861
107861 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
107867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,107875:CD,107879
107875 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,107879:CL,98850
107879 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,107881:CD,107886:CD,107891:CD,107892
107881 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
107886 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,107891
107891 :: EXPR :: assign :: I :: v14 = v13.length::DD,107892
107893 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,107902
107892 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,107897:CD,107902:CD,108056:CD,108061:CD,108106:CD,108111
107897 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,107902
107903 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,107964
107902 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,107907:CD,107913:CD,107918:CD,107923:CD,107928:CD,107939:CD,107944:CD,107951
107907 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,107964
107913 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
107918 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,107964
107923 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,107964
107928 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
107939 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,107944
107945 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
107944 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,107945
107948 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,107951
107951 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,107955:CD,107959:CD,107964:CD,107966:JM,121126:JM,121113:JM,121129:CD,107991:CD,107999:CD,108007:CD,108012:CD,108022:CD,108030:CD,108034:CD,108039:CD,108044
107955 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,107964:CL,121092
107959 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,107964
107964 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,107966:JM,121126:JM,121113:JM,121129:CD,107991:CD,107999:CD,108007:CD,108012:CD,108022:CD,108030:CD,108034:CD,108039:CD,108044
107966 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
107991 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
107999 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
108007 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
108012 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
108022 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
108027 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
108030 :: CALL :: call :: I :: v74 = v72.size()::
108034 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
108039 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
108044 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
108052 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,108061
108056 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,108061
108061 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,108066:CD,108072:CD,108077:CD,108082:CD,108087:CD,108098
108062 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
108066 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
108072 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
108077 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
108082 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
108087 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
108098 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,121146
108102 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,108111
108106 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,108111
108111 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,108116:CD,108122:CD,108127:CD,108132:CD,108137:CD,108148:CD,108154:CD,108162:CD,108166:CD,108171:CD,108184
108112 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
108116 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
108122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
108127 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
108132 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
108137 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
108148 :: CALL :: call :: V :: v121.setDescription(v109)::CL,121157
108154 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
108162 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,121092
108166 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
108171 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
108184 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,121168
108269 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,95234:JM,128545
108268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,108269:CD,108275
108272 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,108275
108275 :: NORM :: compound :: Z :: return v3::CF,108269
108284 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
108287 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,108291
108291 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
108294 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
108297 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
108300 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,108304
108304 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
108307 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
108324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,108329:CD,108334:JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425
108329 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108335 :: CALL :: call :: V :: p0 $this .initialize()::CL,121190
108334 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,108335:CD,108338:CD,108343:CD,108347:CD,108351:CD,108359:CD,108364
108338 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108343 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,108385:JM,108355:JM,108419:JM,108402:JM,108436:JM,108425
108347 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,108355
108351 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,108355
108355 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
108359 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,108364
108365 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,108370
108364 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,108365:CD,108370:CD,108371
108371 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,108376:CL,121236
108370 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,108371:CD,108380:CD,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108376 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
108380 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108385 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,108389:CD,108392:CD,108397:CD,108402:JM,108385:JM,108419:JM,108355:JM,108436:JM,108425:JM,108334
108386 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
108389 :: CALL :: call :: V :: v39.clear()::
108392 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,121281
108397 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108403 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
108402 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,108406:CD,108409:CD,108414:CD,108419:JM,108385:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108406 :: CALL :: call :: V :: v36.clear()::
108409 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,121281
108414 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108419 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,108420:CD,108425:CD,108431:CD,108436:JM,108385:JM,108419:JM,108355:JM,108402:JM,108334
108420 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108425 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,108426:CD,108431:CD,108436:JM,108385:JM,108419:JM,108355:JM,108402:JM,108425:JM,108334
108426 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,121281
108431 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,108385:JM,108419:JM,108355:JM,108402:JM,108436:JM,108425:JM,108334
108437 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,108442:CL,121332
108436 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,108437:CD,108442
108443 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,121488
108442 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,108443:CD,108449
108446 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,108449
108449 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,108450
108450 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
108501 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,95393:JM,95410:JM,151261:JM,151274
108500 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,108501:CD,108507
108504 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,108507
108507 :: NORM :: compound :: F :: return v3::CF,108501
108509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,108514
108514 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
108521 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,95641:JM,95648:JM,95655:JM,95662:JM,95669:JM,95676:JM,95683:JM,95690:JM,95697:JM,95704
108520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,108521:CD,108527:CD,108533:CD,108537:CD,108542:CD,108552:CD,108553:JM,108547
108527 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,108547:JM,108542
108533 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,108547:JM,108542
108537 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,108547:JM,108542
108543 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,108547:JM,108542
108542 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,108553:CD,108543:CD,108547:JM,108542
108547 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,108547:DD,108553
108553 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,108552
108552 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,108521
108571 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,95898
108570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,108571:CD,108577
108574 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,108577
108577 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,108571
108606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,108611
108611 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
108624 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
108627 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
108630 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
108633 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
108646 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,108651
108651 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
108657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,108662
108662 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
108714 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,108719
108719 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
108725 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,108730
108730 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
108736 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,108741
108741 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
108747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,108752
108752 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
108758 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,108763
108763 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
108769 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,108774
108774 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
108780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,108785
108785 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
108791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,108796
108796 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
108802 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,108807
108807 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
108813 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,108818
108818 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
108824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,108829
108829 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
108844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,108849
108849 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
108855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,108860
108860 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
109039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,109046:CD,109054:CD,109059:CD,109069:CD,109077:CD,109082:CD,109092:CD,109100:CD,109105:CD,109115:CD,109123:CD,109128:CD,109139:CD,109146:CD,109150:CD,109156:CD,109160:CD,109165:CD,109166:CD,109486
109046 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
109051 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
109054 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
109059 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
109069 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
109074 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
109077 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
109082 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
109092 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
109097 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
109100 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
109105 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
109115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
109123 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
109128 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
109136 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,109139
109139 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,109486:CD,109140
109140 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,109486
109146 :: CALL :: call :: I :: v52 = v49.length()::
109150 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
109156 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
109160 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,109165
109165 :: EXPR :: assign :: I :: v60 = v59.length::DD,109166:DD,109202
109167 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,109178
109166 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,109167:CD,109173:CD,109178:CD,109202
109169 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,109178
109173 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,109178
109179 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,109183
109178 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,109189:CD,109194:CD,109202:CD,109223:CD,109229:CD,109233:CD,109447:CD,109451:CD,109455
109183 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
109186 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,109194
109189 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,109194
109195 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,109198
109194 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
109198 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
109203 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,109212
109202 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,109207:CD,109212:CD,109223:CD,109229:CD,109233:CD,109447:CD,109451:CD,109455
109207 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,109212
109212 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,109223:CD,109229:CD,109233:CD,109447:CD,109451:CD,109455
109223 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
109229 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
109233 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,109397:JM,109451
109239 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,109397
109243 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,109251
109246 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,109251
109251 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
109252 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,109255
109255 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
109258 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,109269
109261 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,109269
109264 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,109269
109269 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,109270:CD,109275:CD,109280
109270 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,109280
109272 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,109280
109275 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,109280
109280 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,109283:CD,109291:CD,109296:CD,109306:CD,109311:CD,109316:CD,109327:CD,109328:CD,109336:CD,109341:CD,109345:CD,109355:CD,109363:CD,109368
109283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
109288 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
109291 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
109296 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
109306 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
109311 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,109397
109316 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
109324 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,109350
109327 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,109350
109328 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
109336 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,109350
109341 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,109350
109345 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,109350
109350 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
109355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
109360 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
109363 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
109368 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
109376 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,109387
109379 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,109387
109382 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,109387
109387 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,109391:CD,109396
109388 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,109396
109391 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,109396
109397 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
109396 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,109407:CD,109418:CD,109419:CD,109427:CD,109432
109407 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,121678
109412 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,109415
109415 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
109419 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
109418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,109436
109427 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,109436
109432 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,109436
109436 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
109447 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,109451
109451 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,109239:CD,109246:CD,109251:CD,109264:CD,109269:CD,109382:CD,109387:CD,109447:JM,109397
109452 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,109455
109455 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,109462:CD,109473
109462 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,121678
109470 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,109473
109473 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,109480
109474 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
109477 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
109480 :: CALL :: call :: Z :: v173 = v170.add(v171)::
109486 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
109609 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
109612 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
109615 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
109618 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
109621 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
109624 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
109627 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
109630 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
109633 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
109636 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
109639 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
109642 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
109645 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
109648 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
109651 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
109654 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
109657 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
109660 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
109663 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
109666 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
109669 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
109672 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
109675 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
109678 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
109681 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
109684 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
109687 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
109690 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
109693 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
109696 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
109699 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
109702 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
109705 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
109708 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
109711 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
109714 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
109717 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
109720 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
109723 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
109726 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
109729 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
109732 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
109735 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
109738 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,109742
109742 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
109745 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,109749
109749 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
109752 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
109849 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,109854:CD,109860:CD,109866:CD,109871:CD,109876:CD,109886:CD,109894:CD,109899:CD,109909:CD,109917:CD,109922:CD,109932:CD,109940:CD,109945:CD,109955:CD,109963:CD,109968:CD,109976:CD,109980:CD,109987:CD,109991:CD,109999:CD,110004:CD,110009:CD,110014:CD,110022:CD,110031:CD,110036:CD,110142:CD,110148:CD,110152:CD,110346:CD,110350:CD,110354:CD,110370:JM,110114
109854 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,110370:JM,110114:JM,109980
109860 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,110114:JM,110370:JM,109980
109866 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
109871 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,110114
109876 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,110114
109886 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
109891 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
109894 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
109899 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
109909 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
109914 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
109917 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
109922 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
109932 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
109937 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
109940 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
109945 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
109955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
109963 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
109968 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
109976 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,110370:JM,110114:JM,109980
109981 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,110370:JM,110114:JM,109980
109980 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,110370:CD,109981:JM,110114:JM,109980
109987 :: CALL :: call :: I :: v67 = v65.length()::
109991 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
109999 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
110004 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
110009 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
110014 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
110022 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,110072
110027 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,110036
110031 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,110036
110037 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,110048
110036 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,110037:CD,110043:CD,110048:CD,110072:CD,110073
110039 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,110048
110043 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,110048
110049 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,110053
110048 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,110059:CD,110064:CD,110072:CD,110073
110053 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
110056 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,110064
110059 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,110064
110065 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,110068
110064 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
110068 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
110073 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,110074:CD,110080:CD,110085:CD,110109:CD,110114
110072 :: EXPR :: assign :: I :: v93 = v84.length::DD,110073
110074 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,110085
110076 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,110085
110080 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,110085
110085 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,110096:CD,110101:CD,110109:CD,110114
110086 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,110090
110090 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
110093 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,110101
110096 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,110101
110101 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
110102 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,110105
110105 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
110109 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,110114
110114 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,110127:CD,110132
110121 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
110124 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,110132
110127 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,110132
110133 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,110136
110132 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
110136 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
110142 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
110148 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
110152 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,110296:JM,110350
110158 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,110296
110162 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,110170
110165 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,110170
110171 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,110174
110170 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
110174 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
110177 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,110188
110180 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,110188
110183 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,110188
110189 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,110199
110188 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,110189:CD,110194:CD,110199
110191 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,110199
110194 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,110199
110199 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,110202:CD,110210:CD,110215:CD,110226:CD,110227:CD,110235:CD,110240:CD,110244:CD,110254:CD,110262:CD,110267
110202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
110207 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
110210 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
110215 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
110223 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,110249
110227 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
110226 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,110249
110235 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,110249
110240 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,110249
110244 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,110249
110249 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
110254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
110259 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
110262 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
110267 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
110275 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,110286
110278 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,110286
110281 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,110286
110287 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,110295
110286 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,110290:CD,110295
110290 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,110295
110295 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,110306:CD,110317:CD,110318:CD,110326:CD,110331
110296 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
110306 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,122104
110311 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,110314
110314 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
110317 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,110335
110318 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
110326 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,110335
110331 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,110335
110335 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
110346 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,110350
110351 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,110354
110350 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,110158:CD,110165:CD,110170:CD,110183:CD,110188:CD,110281:CD,110286:CD,110346:JM,110296
110354 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,110361
110361 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,122104
110370 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
110515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,122801:JM,122808:CD,110532:CD,110536:CD,110540:CD,110544:CD,110548:CD,110552:CD,110556:CD,110560:CD,110567:CD,111082:CD,111086:CD,111090:CD,111094:CD,111099:CD,111106:CD,111110:CD,111115:CD,111122:CD,111126:CD,111131:JM,123585:JM,123394:JM,123300:JM,123399:JM,123434:JM,123308:JM,123439:JM,123313:JM,123601:JM,123602:JM,123346:JM,123285:JM,123478:JM,123414:JM,123419:JM,123290:JM,123610:JM,123295:JM,123615:CD,111147:CD,111154:CD,111158:CD,111163:CD,111182:CD,111193:CD,111204:CD,111211:CD,111215:CD,111219:CD,111226:CD,111230:CD,111234:CD,111241:CD,111245:CD,111249:CD,111256:CD,111260:CD,111264:CD,111271:CD,111275:CD,111279:CD,111294
110532 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
110536 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
110540 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
110544 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
110548 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
110552 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
110556 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
110560 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
110564 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,110576:JM,111086
110567 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,110576:JM,111086
110572 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,110576:JM,111086
110577 :: CALL :: call :: I :: v34 = v32.length()::JM,110581
110576 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,110581:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668:JM,110904
110581 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,110584:CD,110589:CD,110594:CD,110603:CD,110609:CD,110614:CD,110663:CD,110668:CD,110722:CD,110727:CD,110776:CD,110781:CD,110835:CD,110840:CD,110894:CD,110899:JM,110979:JM,111033
110584 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
110589 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
110594 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
110603 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110609 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110615 :: CALL :: call :: I :: v44 = v32.length()::
110614 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,110615:CD,110619:CD,110625:CD,110629:CD,110636:CD,110641:CD,110645:CD,110650:CD,110655:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110619 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
110625 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
110629 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
110636 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
110641 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
110645 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
110650 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
110655 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
110663 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110669 :: CALL :: call :: I :: v69 = v32.length()::
110668 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,110669:CD,110673:CD,110679:CD,110683:CD,110688:CD,110695:CD,110700:CD,110704:CD,110709:CD,110714:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110673 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
110679 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
110683 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
110688 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
110695 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
110700 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
110704 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
110709 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
110714 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
110722 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110727 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,110728:CD,110732:CD,110738:CD,110742:CD,110749:CD,110754:CD,110758:CD,110763:CD,110768:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110728 :: CALL :: call :: I :: v96 = v32.length()::
110732 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
110738 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
110742 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
110749 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
110754 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
110758 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
110763 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
110768 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
110776 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110781 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,110782:CD,110786:CD,110792:CD,110796:CD,110801:CD,110808:CD,110813:CD,110817:CD,110822:CD,110827:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110782 :: CALL :: call :: I :: v120 = v32.length()::
110786 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
110792 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
110796 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
110801 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
110808 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
110813 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
110817 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
110822 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
110827 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
110835 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110841 :: CALL :: call :: I :: v146 = v32.length()::
110840 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,110841:CD,110845:CD,110851:CD,110855:CD,110860:CD,110867:CD,110872:CD,110876:CD,110881:CD,110886:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110845 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
110851 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
110855 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
110860 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
110867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
110872 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
110876 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
110881 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
110886 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
110894 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110899 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,110900:CD,110904:CD,110974:CD,110979:CD,111028:CD,111033:JM,110899:JM,110727:JM,110614:JM,110840:JM,110781:JM,110668
110900 :: CALL :: call :: I :: v172 = v32.length()::JM,110904
110904 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,110907:CD,110912:CD,110917:CD,110926:CD,110930:CD,110936:CD,110940:CD,110947:CD,110952:CD,110956:CD,110961:CD,110966:CD,110974:CD,110979:CD,111028:CD,111033
110907 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
110912 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
110917 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
110926 :: CALL :: call :: I :: v175 = v32.length()::
110930 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
110936 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
110940 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
110947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
110952 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
110956 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
110961 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
110966 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
110974 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110979 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,110980:CD,110984:CD,110990:CD,110994:CD,111001:CD,111006:CD,111010:CD,111015:CD,111020:JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
110980 :: CALL :: call :: I :: v199 = v32.length()::
110984 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
110990 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
110994 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
111001 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
111006 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
111010 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
111015 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
111020 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
111028 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,110899:JM,110979:JM,110727:JM,110614:JM,111033:JM,110840:JM,110781:JM,110668
111033 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,111034:CD,111038:CD,111044:CD,111048:CD,111055:CD,111060:CD,111064:CD,111069:CD,111074:JM,110576:JM,111086
111034 :: CALL :: call :: I :: v241 = v32.length()::
111038 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
111044 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
111048 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
111055 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
111060 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
111064 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
111069 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
111074 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
111082 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,110576:JM,111086
111086 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,110572:CD,110576:CD,110577:CD,110581:CD,111082:JM,111086
111090 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
111094 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,122861
111099 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,123237
111106 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
111110 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,122861
111115 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,123248
111122 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
111126 :: CALL :: call :: V :: v273.setRef(v275)::CL,123259
111131 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
111147 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,123798
111154 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,111163:CL,123809
111158 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,111163
111163 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,111171
111171 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,123818
111182 :: CALL :: call :: V :: v296.setVolume(v298)::CL,123843
111193 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,123864
111204 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,123885
111211 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
111215 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
111219 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,123896
111226 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
111230 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
111234 :: CALL :: call :: V :: v314.setTitle(v318)::CL,123907
111241 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
111245 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
111249 :: CALL :: call :: V :: v320.setRefn(v324)::CL,123918
111256 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
111260 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
111264 :: CALL :: call :: V :: v326.setPmid(v330)::CL,123929
111271 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
111275 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
111279 :: CALL :: call :: V :: v332.setDoi(v336)::CL,123940
111294 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,123951
111479 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,111484
111484 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
111490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,111498
111498 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,124349
111505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,111510
111510 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
111517 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,98451:JM,128101
111516 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,111517:CD,111523
111520 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,111523
111523 :: NORM :: compound :: Z :: return v3::CF,111517
111547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,111553:CD,111558:CD,111580:CD,111584
111553 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,62549
111558 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,111584
111563 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,111584
111568 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,111573:CL,124360
111573 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,111575
111575 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,124451
111580 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,111584
111584 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,111563:CD,111568:CD,111573:CD,111580:JM,111584
111603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,111699:CD,111703:CD,111706:JM,111625:JM,111624:JM,111691:JM,111692
111610 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,62549
111615 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,111625:JM,111624:JM,111691:JM,111692
111620 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,111624:JM,111691
111625 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,111630:CD,111634:CD,111638:CD,111642:CD,111648:CD,111653:CD,111705
111624 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,111625
111630 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,102925
111634 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
111638 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,124730
111642 :: CALL :: call :: Z :: v24 = v9.add(v16)::
111648 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,111653:CL,124360
111653 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,111658:CD,111665:CD,111670:CD,111674:CD,111679:CD,111705
111658 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,102925
111665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
111670 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,80865
111674 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
111679 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
111687 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,111624:JM,111691
111691 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,111620:CD,111624:CD,111625:CD,111687:CD,111705:JM,111691:CF,111692
111693 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,124768
111692 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,111693:CF,111698
111699 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,111703:CL,103225
111698 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,111706
111703 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,111610:CD,111615:CD,111687:CD,111691:CD,111692:CD,111698:CD,111699:CD,111705:CD,111706
111705 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,111624:JM,111691:DD,111698:DD,111705
111706 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,111703:DD,111705
111746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,111754:CD,111839:CD,111843:CD,111847:CD,111851:CD,111901:CD,111985:CD,111989:CD,111993
111751 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,111843
111754 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,111843
111759 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,111843
111764 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
111771 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,124824
111775 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
111779 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,111784
111785 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,111787:CD,111830:CD,111834:CD,111835
111784 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,111785:JM,111834
111787 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,111834
111792 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,111834
111803 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,124833
111808 :: CALL :: call :: Z :: v39 = v13.add(v37)::
111830 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,111834
111835 :: CALL :: call :: V :: v12.setChains(v13)::CL,124848
111834 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,111792:CD,111803:CD,111808:CD,111830:JM,111834
111839 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,111843
111843 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,111759:CD,111764:CD,111771:CD,111775:CD,111779:CD,111784:CD,111785:CD,111839:JM,111843
111844 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,111851
111847 :: CALL :: call :: I :: v53 = v51.size()::JM,111851
111851 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,111855:CD,111864:CD,111868:CD,111872:CD,111877
111852 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
111855 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
111864 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,124824
111868 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
111872 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,111877
111877 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,111878:CD,111883:CD,111887
111878 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,111887:CL,117420
111883 :: CALL :: call :: I :: v69 = v67.size()::JM,111887
111887 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,111888:CD,111894:JM,111887
111888 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,111887
111894 :: CALL :: call :: V :: v58.addChain(v72)::CL,124859
111898 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,111989
111901 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,111989
111906 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,111989
111914 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,124824
111918 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
111922 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,111927
111927 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,111932:CD,111936:CD,111940:CD,111945:CD,111946:CD,111980:CD,111984
111932 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,124824
111936 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
111940 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,111945
111945 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,111984:JM,111955
111946 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,111984:JM,111955
111951 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,111984:JM,111955
111955 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,111961
111956 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,111961
111961 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,111963:CD,111968
111963 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,124876
111968 :: CALL :: call :: V :: v110.setCompound(v83)::CL,117398
111980 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,111984:JM,111955
111985 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,111989
111984 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,111951:CD,111955:CD,111956:CD,111961:CD,111980:JM,111984:JM,111989
111989 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,111906:CD,111914:CD,111918:CD,111922:CD,111927:CD,111985:JM,111989
111990 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,111993
111993 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,111997:CD,112001
111994 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,112001
111997 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,112001
112001 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,112002:CD,112006:CD,112073:CD,112077
112002 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,112077:CL,54721
112006 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,112077
112011 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,112077
112016 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,112020:CL,124891
112021 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
112020 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,112021:JM,109745:JM,109738:CD,112025:CD,112032:CD,112037:CD,112041:CD,112048:CD,112059:CD,112063:JM,112077
112025 :: CALL :: call :: V :: v134.addChain(v130)::CL,124859
112032 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,124900
112037 :: CALL :: call :: V :: v134.setMolId(v140)::CL,124921
112041 :: CALL :: call :: V :: v130.setCompound(v134)::CL,117398
112045 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
112048 :: CALL :: call :: Z :: v145 = v143.add(v134)::
112059 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,124824
112063 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
112073 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,112077
112077 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,112011:CD,112016:CD,112020:CD,112073:JM,112077
112183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,112190:CD,112391:CD,112396:CD,112401:CD,112406:CD,112411:CD,112419:CD,112424:CD,112429
112187 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,112190
112191 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,112194
112190 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,112194
112194 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,112205:CD,112209:CD,112213
112205 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,112213:CL,54721
112209 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,112213
112213 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,112214:CD,112218:CD,112236:CD,112243:CD,112247:CD,112252:CD,112327:CD,112331:CD,112452:CD,112456:CD,112457:CD,112461:CD,112472
112215 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
112214 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
112218 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
112233 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
112236 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
112240 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
112243 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
112247 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,112252
112252 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,112255:CD,112263:CD,112268:CD,112273:CD,112283:CD,112290:CD,112294:CD,112299:CD,112307:CD,112311:CD,112316
112255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
112260 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
112263 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
112268 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
112273 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
112283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
112287 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
112290 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
112294 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
112299 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
112304 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
112307 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
112311 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
112316 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
112324 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,112456
112327 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,112456
112331 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,112456
112336 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,112456
112344 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
112353 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,112358
112359 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,112361:CD,112447:CD,112451
112358 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,112359:JM,112451
112361 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,112451
112366 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,112451
112371 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,80803
112375 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,124932
112382 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,124941
112391 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
112396 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
112401 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
112406 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
112411 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
112416 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
112419 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
112424 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
112429 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
112438 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,124959
112442 :: CALL :: call :: Z :: v111 = v109.add(v83)::
112447 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,112451
112451 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,112366:CD,112371:CD,112375:CD,112382:CD,112438:CD,112442:CD,112447:JM,112451:JM,112456
112452 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,112456
112457 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
112456 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,112457:CD,112336:CD,112344:CD,112353:CD,112358:CD,112359:CD,112452:JM,112456
112458 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
112461 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
112472 :: CALL :: call :: V :: v117.setSites(v112)::CL,102225
112550 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,112555
112555 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
112561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,112566
112566 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
112572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,112577
112577 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
112604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,112609:CD,112613:CD,112618:CD,112716
112609 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,112618:CL,124968
112613 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,112618
112619 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,112628:CL,124977
112618 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,112619:CD,112623:CD,112628
112623 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,112628
112628 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,112654:CD,112688:JM,142307:JM,142304:JM,142298:JM,142301
112654 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,125031
112688 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,125031
112716 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,125250
112760 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,112765:CD,112769:CD,112790:CD,112794:CD,112798
112765 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
112769 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,112794
112774 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,112794
112779 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,112784:CL,125768
112785 :: CALL :: call :: Z :: v18 = v4.add(v15)::
112784 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,112785:JM,112794
112790 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,112794
112794 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,112774:CD,112779:CD,112784:CD,112790:JM,112794
112798 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,102205
112821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,112825:CD,112828:CD,112831:CD,112834
112825 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,125885
112828 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,126038
112831 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,126191
112834 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,126408
112842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,112925:CD,112930:CD,112935:CD,112940:CD,113080:CD,113084:CD,113092
112847 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,113078:CL,117420
112852 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,113078
112857 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,113078
112862 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,113073:CL,62566
112866 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,113073
112871 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,113073
112880 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,118177
112884 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,112897:JM,113068:CL,126518
112888 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,112897:JM,113068
112893 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,112897:JM,113068
112897 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,112912:JM,112917:JM,112907:JM,112911:JM,112956:JM,112995
112902 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,113026:CL,55534
112907 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,112912:JM,112917:JM,112907:JM,112911
112911 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,112912:CD,112917:CD,112990:CD,112995:CD,112999:CD,113004:CD,113009:CD,113013:CD,113018
112912 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,112912:JM,112917
112917 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,112918:CD,112951:CD,112956:CD,112960:CD,112965:CD,112970:CD,112974:CD,112979:JM,112912:JM,112917
112918 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,112912:JM,112917
112925 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
112930 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,112912:JM,112917
112935 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
112940 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
112951 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
112956 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,112956
112960 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
112965 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
112970 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,126527
112974 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
112979 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
112990 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
112995 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,112995
112999 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
113004 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
113009 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,126527
113013 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
113018 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
113027 :: CALL :: call :: V :: v40.setCharge(v97)::CL,76927
113026 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,113027
113031 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,113063:CL,63325
113035 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,113063
113040 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,113063
113049 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,113054:CL,55534
113055 :: CALL :: call :: V :: v111.setCharge(v97)::CL,76927
113054 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,113088:CD,113055
113059 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,113063
113063 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,113089:CD,113040:CD,113049:CD,113054:CD,113059:CD,113088:JM,113063
113064 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,112897:JM,113068
113069 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,113073
113068 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,113090:CD,112893:CD,112897:CD,112902:CD,112907:CD,112911:CD,113026:CD,113031:CD,113035:CD,113059:CD,113063:CD,113064:CD,113088:CD,113089:JM,113068
113073 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,113091:CD,112871:CD,112880:CD,112884:CD,112888:CD,113064:CD,113068:CD,113069:CD,113089:CD,113090:JM,113073
113074 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,113078
113079 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,113092
113078 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,112857:CD,112862:CD,112866:CD,113069:CD,113073:CD,113074:CD,113090:CD,113091:JM,113078:CF,113079
113080 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,113084:CL,103225
113084 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,112847:CD,112852:CD,113074:CD,113078:CD,113079:CD,113080:CD,113091:CD,113092
113089 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,112897:JM,113068:DD,113088:DD,113090
113088 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,113063:DD,113088:DD,113089
113091 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,113078:DD,113079:DD,113090
113090 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,113073:DD,113089:DD,113091
113092 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,113084:DD,113091
113159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,113166:CD,113349:CD,113353
113166 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,113353
113171 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,113353
113176 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,113181
113181 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,113250
113182 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
113188 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,113193
113193 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,113217:DD,113355
113194 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,113199
113199 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,113310
113200 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
113206 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,113211
113211 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,113223:DD,113356:JM,113217
113212 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,113217
113217 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,113355
113218 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,113223
113223 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,113356
113233 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,113467
113241 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,113250:CL,80865
113245 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,113250
113251 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,113282
113250 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,113357:CF,113251:CD,113252:CD,113260:CD,113265:CD,113273:CD,113277:CD,113282
113252 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
113260 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,113282
113265 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,113282
113273 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,113282:CL,80803
113277 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,113282
113283 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,113284:CD,113288
113282 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,113357
113284 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,113288:CL,113494
113288 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::CD,113296
113296 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,113581
113301 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,113310:CL,80865
113305 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,113310
113311 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,113342
113310 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,113358:CF,113311:CD,113312:CD,113320:CD,113325:CD,113333:CD,113337:CD,113342:CD,113344:CD,113348
113312 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
113320 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,113342
113325 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,113342
113333 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,113342:CL,80803
113337 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,113342
113342 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,113358:CD,113344:CD,113348
113344 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,113348:CL,113601
113349 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,113353
113348 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,113233:CD,113241:CD,113245:CD,113250:CD,113283:CD,113301:CD,113305:CD,113310:CD,113357:CD,113358:JM,113353
113353 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,113171:CD,113176:CD,113181:CD,113182:CD,113188:CD,113193:CD,113194:CD,113199:CD,113200:CD,113206:CD,113211:CD,113212:CD,113217:CD,113218:CD,113223:CD,113344:CD,113348:CD,113349:CD,113355:CD,113356:CD,113358:JM,113353
113355 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,113282:JM,113223
113357 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,113283:DD,113358
113356 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,113342
113358 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,113357
113467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,113481
113481 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,126536
113495 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,98913:JM,113288
113494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,113495:CD,113498:CD,113503
113498 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,113503:CL,62667
113503 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,113504:CD,113509:CD,113523
113504 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,113509:CL,62667
113509 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,113510:CD,113515:CD,113523
113510 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,113515:CL,62667
113515 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,113516:CD,113521:CD,113523
113516 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,113521:CL,62667
113521 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,113522:CD,113523
113523 :: NORM :: compound :: Z :: return #(0)::DD,113495
113522 :: NORM :: compound :: Z :: return #(1)::DD,113495
113539 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,98919
113538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,113539:CD,113546:CD,113551
113546 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,113551
113551 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,113539
113581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,113590
113590 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
113601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,113602:CD,113615:CD,113622
113602 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,98938:JM,113348
113615 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,113622:CL,126647
113622 :: NORM :: compound :: Z :: return v9::DD,113602
115146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,115150:JM,92192:JM,92227:JM,92199:JM,92234:JM,84525:JM,92206:JM,84558:JM,92213:JM,84533:JM,84565:JM,92182:JM,84541:JM,92220:CD,115166:CD,115173:CD,115180:CD,115187:CD,115194:CD,115201:CD,115208:CD,115215:CD,115222:CD,115229:CD,115236:CD,115243:CD,115250:CD,115257:CD,115264:CD,115271:CD,115278:CD,115285:CD,115292
115150 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,115154
115154 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
115157 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
115160 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
115163 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
115166 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,115170
115170 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
115173 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,115177
115177 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
115180 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,115184
115184 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
115187 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,115191
115191 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
115194 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,115198
115198 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
115201 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,115205
115205 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
115208 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,115212
115212 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
115215 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,115219
115219 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
115222 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,115226
115226 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
115229 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,115233
115233 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
115236 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,115240
115240 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
115243 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,115247
115247 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
115250 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,115254
115254 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
115257 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,115261
115261 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
115264 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,115268
115268 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
115271 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,115275
115275 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
115278 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,115282
115282 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
115285 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,115289
115289 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
115292 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,115296
115296 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
115346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,115353:CD,115366:CD,115370
115350 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,115370
115353 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,115370
115358 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,115370
115363 :: CALL :: call :: V :: v11.documentStart()::CL,115146
115366 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,115370
115370 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,115358:CD,115363:CD,115366:JM,115370
115388 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,115395:CD,115408:CD,115412
115392 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,115412
115395 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,115412
115400 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,115412
115405 :: CALL :: call :: V :: v11.documentEnd()::CL,127881
115408 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,115412
115412 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,115400:CD,115405:CD,115408:JM,115412
115421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,115422:CD,115428:CD,115432:CD,115437:CD,115503:CD,115507:CD,115575:CD,115576:CD,115577:CD,115581:CD,115582:CD,115583:JM,115573:JM,115567
115422 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,101139:JM,101206:JM,101149:JM,101604:JM,101336:JM,101522:JM,101429:JM,101439
115428 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,115507:DD,115562:JM,115567:DD,115568:DD,115574
115432 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,115437
115437 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,115438:CD,115471
115439 :: CALL :: call :: I :: v26 = v48.length()::JM,115443
115438 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,115439:CD,115443:CD,115461:CD,115465:CD,115581:CD,115582:CD,115583
115443 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,115455:CF,115444:CD,115445:CD,115581:CD,115582:CD,115583
115445 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
115444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,115583
115455 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,115583
115461 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
115465 :: CALL :: call :: Z :: v37 = v6.add(v35)::
115471 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,115472:CD,115478:CD,115483:CD,115498:CD,115502:CD,115578:CD,115579:CD,115580:CD,115581:CD,115582:CD,115583
115472 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
115478 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,115492:JM,115502:CL,129234
115483 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,115492:JM,115502
115488 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,115492:JM,115502
115493 :: CALL :: call :: Z :: v23 = v6.add(v21)::
115492 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
115498 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,115492:JM,115502
115503 :: CALL :: call :: I :: v43 = v6.size()::JM,115507
115502 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,115581:CD,115488:CD,115492:CD,115493:CD,115498:CD,115578:CD,115579:CD,115580:JM,115502
115507 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,115510:CD,115515:CD,115519:CD,115524:CD,115529:CD,115534:CD,115539:CD,115544:CD,115549:CD,115554:CD,115562:CD,115563:CD,115567
115510 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
115515 :: CALL :: call :: I :: v60 = v6.size()::
115519 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
115524 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
115529 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,115573:JM,115575:JM,115567
115534 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
115539 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
115544 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
115549 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
115554 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
115563 :: CALL :: call :: I :: v45 = v6.size()::JM,115567
115562 :: NORM :: compound :: Ljava/util/List :: return v6::DD,115422
115567 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,115568:CD,115569:CD,115573:CD,115575:CD,115576:CD,115577:JM,115507:JM,115567
115569 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,115507:JM,115573:JM,115575:JM,115567
115568 :: NORM :: compound :: Ljava/util/List :: return v6::DD,115422
115573 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,115575:CD,115432:CD,115437:CD,115503:CD,115507:CD,115574:CD,115576:CD,115577:CD,115581:CD,115582:CD,115583
115575 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,115576:JM,115437:JM,115443:DD,115578:DD,115581
115574 :: NORM :: compound :: Ljava/util/List :: return v6::DD,115422
115577 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,115580:DD,115583:JM,115437
115576 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,115577:DD,115438:DD,115471:DD,115579:DD,115582
115579 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,115580:DD,115579:DD,115582
115578 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,115579:DD,115578:DD,115581
115581 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,115582
115580 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,115492:JM,115502:DD,115580:DD,115583
115583 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,115507:DD,115577
115582 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,115583:DD,115576
115737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,115747:CD,115772:CD,115773:CD,115778:CD,115782:CD,115787:CD,115792:CD,115796:CD,115801:CD,115806:CD,115811:CD,115816:CD,115821:CD,115826:CD,115831:CD,115840:CD,115845:JM,115969:JM,116544:JM,116419:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115747 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
115773 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
115772 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
115778 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115782 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
115787 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
115792 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115796 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
115801 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
115806 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115811 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115816 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
115821 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
115826 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
115831 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
115840 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115845 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,115851:CD,115860:CD,115865:CD,115870:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115851 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
115860 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,130127
115865 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115870 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,115876:CD,115884:CD,115889:CD,115894:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,116344:JM,116219:JM,116669:JM,116094
115876 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,115884:CL,129724
115885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
115884 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,115885
115889 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115894 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,115900:CD,115909:CD,115914:CD,115919:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115900 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
115909 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,130163
115914 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115919 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,115925:CD,115934:CD,115939:CD,115944:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115925 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
115934 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,130199
115939 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115944 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,115950:CD,115959:CD,115964:CD,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115950 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
115959 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,130235
115964 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115969 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,115975:CD,115984:CD,115989:CD,115994:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115975 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
115984 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,130271
115989 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
115994 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,116000:CD,116009:CD,116014:CD,116019:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116000 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116009 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,130307
116014 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116019 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,116025:CD,116034:CD,116039:CD,116044:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116025 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116034 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,130343
116039 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116044 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,116050:CD,116059:CD,116064:CD,116069:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116050 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116059 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,130379
116064 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116069 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,116075:CD,116084:CD,116089:CD,116094:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669
116075 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116084 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,130415
116089 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116094 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,116100:CD,116109:CD,116114:CD,116119:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116100 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116109 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,130451
116114 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116119 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,116125:CD,116134:CD,116139:CD,116144:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116125 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116134 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,130487
116139 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116144 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,116150:CD,116159:CD,116164:CD,116169:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116150 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116159 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,130523
116164 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116169 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,116175:CD,116184:CD,116189:CD,116194:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116175 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116184 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,130559
116189 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116194 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,116200:CD,116209:CD,116214:CD,116219:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116669:JM,116094
116200 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116209 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,130595
116214 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116219 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,116225:CD,116234:CD,116239:CD,116244:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116225 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116234 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,130631
116239 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116244 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,116250:CD,116259:CD,116264:CD,116269:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116250 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116259 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,130667
116264 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116269 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,116275:CD,116284:CD,116289:CD,116294:JM,115969:JM,116544:JM,116419:JM,115845:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116275 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116284 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,130703
116289 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116294 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,116300:CD,116309:CD,116314:CD,116319:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116300 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116309 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,130739
116314 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116319 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,116325:CD,116334:CD,116339:CD,116344:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116219:JM,116669:JM,116094
116325 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116334 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,130775
116339 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116344 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,116350:CD,116359:CD,116364:CD,116369:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116350 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116359 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,130811
116364 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116369 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,116375:CD,116384:CD,116389:CD,116394:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116375 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116384 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,130847
116389 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116394 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,116400:CD,116409:CD,116414:CD,116419:JM,115969:JM,116544:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116400 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116409 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,130883
116414 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116419 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,116425:CD,116434:CD,116439:CD,116444:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116425 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116434 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,130919
116439 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116444 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,116450:CD,116459:CD,116464:CD,116469:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116450 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116459 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,130955
116464 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116469 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,116475:CD,116484:CD,116489:CD,116494:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116475 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116484 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,130991
116489 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116494 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,116500:CD,116509:CD,116514:CD,116519:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116500 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116509 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,131027
116514 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116519 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,116525:CD,116534:CD,116539:CD,116544:JM,115969:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116525 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116534 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,131063
116539 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116544 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,116550:CD,116559:CD,116564:CD,116569:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116550 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116559 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,131099
116564 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116569 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,116575:CD,116584:CD,116589:CD,116594:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116575 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116584 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,131135
116589 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116594 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,116600:CD,116609:CD,116614:CD,116619:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116600 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116609 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,131171
116614 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116619 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,116625:CD,116634:CD,116639:CD,116644:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116625 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116634 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,131207
116639 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116644 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,116650:CD,116659:CD,116664:CD,116669:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116094
116650 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116659 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,131243
116664 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116669 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,116675:CD,116684:CD,116689:CD,116694:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116675 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116684 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,131279
116689 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116694 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,116700:CD,116709:CD,116714:CD,116719:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116700 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116709 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,131315
116714 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116719 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,116725:CD,116734:CD,116739:CD,116744:JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116725 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116734 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,131351
116739 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,115969:JM,116544:JM,116419:JM,115845:JM,116294:JM,116169:JM,116744:JM,116619:JM,116044:JM,115919:JM,116494:JM,116369:JM,116244:JM,116119:JM,116694:JM,116569:JM,115994:JM,116444:JM,116319:JM,115870:JM,116194:JM,116069:JM,116644:JM,116519:JM,115944:JM,116394:JM,116269:JM,116719:JM,116144:JM,116019:JM,116594:JM,116469:JM,115894:JM,116344:JM,116219:JM,116669:JM,116094
116744 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,116750:CD,116759:CD,116771
116750 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,129724
116759 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,131387
116771 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,131423
117158 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,117165:CD,117168:CD,117171
117165 :: CALL :: call :: V :: p1 $loopFields .clear()::
117168 :: CALL :: call :: V :: p2 $lineData .clear()::
117171 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
117178 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,117186:CD,117200:CD,117204
117183 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,117204
117186 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,117204
117191 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,117204
117196 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,131471
117200 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,117204
117204 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,117191:CD,117196:CD,117200:JM,117204
117339 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,117344
117344 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
117365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,117366:CD,117369:CD,117373:CD,117377:CD,117381
117366 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,102113
117369 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,131661
117373 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,117381:CL,132708
117377 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,132785
117381 :: NORM :: compound :: Ljava/util/List :: return v6::DD,117366
117389 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,117390:CD,117396
117390 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,102151
117393 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,117396
117396 :: NORM :: compound :: Ljava/util/List :: return v3::CF,117390
117398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,117403
117403 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
117409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,117414
117414 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
117421 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,102486:JM,111887:JM,113078:JM,141813
117420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,117421:CD,117425:CD,117430
117425 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,117430:CL,62549
117430 :: NORM :: compound :: Ljava/util/List :: return v5::DD,117421
118133 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,152331
118132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,118133:CD,118139:CD,118143
118136 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,118143
118139 :: CALL :: call :: I :: v5 = v3.size()::JM,118143
118143 :: NORM :: compound :: I :: return v5::CF,118133
118145 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,118146:CD,118150:JM,118168:JM,118158
118146 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,142181:JM,142235:JM,152337
118151 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,118158
118150 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,118154:CD,118158:CD,118159
118154 :: CALL :: call :: I :: v7 = v5.size()::JM,118158
118159 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,118146
118158 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,118159:CD,118163:CD,118168:CD,118169
118160 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,118168
118163 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,118168:JM,118150
118169 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,118146
118168 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,118169
118177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,118178:CD,118181:CD,118185:CD,118189:CD,118191:CD,118196:CD,118197
118178 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,104506:JM,120450
118181 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,118196:JM,118191
118185 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,118196:JM,118191
118189 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,118196:JM,118191
118191 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,118196:JM,118191
118197 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,118200:CD,118205:CD,118209:CD,118214:CD,118219:CD,118227:CD,118230:CD,118235:CD,118240:CD,118251:CD,118255:CD,118260:CD,118270:CD,118283
118196 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,118197:JM,118205:DD,118227
118200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
118205 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,118205
118209 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
118214 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
118219 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
118227 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,118178
118230 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
118235 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,118196:JM,118191
118240 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
118251 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
118255 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
118260 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
118270 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,118283:CL,137106
118283 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,118178
120019 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,106429
120018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,120019:CD,120022:CD,120030:CD,120035:CD,120043:CD,120047:CD,120052:CD,120060:CD,120101:CD,120105:CD,120106:CD,120108:CD,120113:CD,120117
120022 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,120117
120027 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
120030 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
120035 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
120040 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
120043 :: CALL :: call :: I :: v14 = v12.size()::
120047 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
120052 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
120057 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,120105
120060 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,120105
120065 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,120105
120083 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,139710
120091 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
120096 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
120101 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,120105
120105 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,120065:CD,120083:CD,120091:CD,120096:CD,120101:JM,120105
120106 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
120108 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
120113 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,120117
120117 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,120019
120435 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,106788:JM,106798:JM,150755:JM,150745:JM,161040:JM,161025:JM,161017:JM,161033:JM,161007
120434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,120435:CD,120438:CD,120442:CD,120446:CD,120450
120438 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
120442 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
120446 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,120450:CL,118177
120451 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,120435
120450 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,120451:CD,120458:CD,120463:CD,120593:CD,120597:CD,120599
120458 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,120463
120463 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,120464:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,120468:CD,120472:CD,120512:CD,120578:CD,120583:CD,120598:CD,120599
120464 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,120599
120468 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,120484:JM,120598:JM,120489:JM,120472:JM,120478:CL,104551
120473 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,120484:JM,120598:JM,120489:JM,120478
120472 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,120473:CD,120478:CD,120490:CD,120494:CD,120598:JM,120484:JM,120489
120479 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,120484:JM,120598:JM,120489:JM,120478
120478 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,120479:CD,120484:CD,120490:CD,120494:CD,120598:JM,120489:JM,120478
120485 :: CALL :: call :: I :: v36 = v28.length()::JM,120484:JM,120598:JM,120489:JM,120478
120484 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,120485:CD,120489:CD,120490:CD,120494:CD,120598:JM,120484:JM,120478
120489 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,120598:CD,120490:CD,120494
120490 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,120499:JM,120495:JM,120494:CL,139787
120495 :: CALL :: call :: I :: v40 = v38.length()::JM,120499:JM,120495
120494 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,120598:CD,120495:CD,120499
120499 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,120598:CD,120504:CD,120508
120504 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,118177
120508 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,120598:CL,104551
120513 :: CALL :: call :: I :: v50 = v48.length()::JM,120517
120512 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,120513:CD,120517:CD,120526:CD,120531:CD,120536:CD,120541:CD,120553
120517 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,120518:CD,120523:CD,120526:CD,120531:CD,120536:CD,120541:CD,120553
120518 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,120523
120523 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,120526:CD,120531:CD,120536:CD,120541:CD,120553:CD,120558:CD,120567
120526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
120531 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
120536 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
120541 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
120553 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,63303
120558 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
120567 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,63303
120578 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,120583
120583 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,120589:CF,120584:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,120599
120584 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,120599
120589 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,120599
120593 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,63244
120597 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,120435
120599 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,120597
120598 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,120512:JM,120517:JM,120523
120667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,120668:CD,120674
120668 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,106797:JM,150754:JM,161016
120671 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,120674
120675 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,120679:CL,139796
120674 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,120675:CD,120679:CD,120691
120679 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,120680:CD,120684:CD,120689:CD,120691
120680 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,120689:CL,139796
120684 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,120689
120689 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,120690:CD,120691
120691 :: NORM :: compound :: Z :: return #(1)::CF,120668
120690 :: NORM :: compound :: Z :: return #(0)::CF,120668
120701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,120702:CD,120708
120702 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,106897
120705 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,120708
120708 :: NORM :: compound :: Z :: return v3::CF,120702
120711 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,106911
120710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,120711:CD,120717
120714 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,120717
120717 :: NORM :: compound :: Ljava/util/List :: return v3::CF,120711
120719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,120720:CD,120726
120720 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,106981
120723 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,120726
120727 :: NORM :: compound :: Z :: return #(0)::CF,120720
120726 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,120727:CD,120731:CD,120735:CD,120737:CD,120738
120728 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,120735
120731 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,120735
120735 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,120738
120737 :: NORM :: compound :: Z :: return v10::CF,120720
120738 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,120737
120747 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,107077:JM,107123:JM,107149:JM,107179:JM,121001:JM,126483:JM,142228:JM,161225:JM,161297:JM,161271:JM,161327
120746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,120747:CD,120753
120750 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,120753
120753 :: NORM :: compound :: Ljava/util/List :: return v3::CF,120747
120755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,120763:CD,120770:CD,120801:CD,120805:CD,120809:CD,120813:JM,120806
120760 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,120763
120763 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,120767:JM,120805:JM,120806:JM,120813
120764 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
120767 :: CALL :: call :: V :: v6.clear()::
120770 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,120805:JM,120806:JM,120813
120775 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,120805:JM,120813
120780 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,63201
120784 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,120787
120787 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,120795:JM,120805:JM,120813
120795 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
120801 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,120805:JM,120813
120805 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,120775:CD,120780:CD,120787:CD,120801:JM,120805:JM,120813
120806 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
120809 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,120805:JM,120813
120813 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
120814 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
120841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,120845:CD,120849:CD,120868:CD,120872
120845 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
120849 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,120872
120854 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,120872
120859 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,120888
120863 :: CALL :: call :: Z :: v16 = v3.add(v14)::
120868 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,120872
120872 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,120854:CD,120859:CD,120863:CD,120868:JM,120872
120889 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
120888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,120889:CD,120892:JM,102805:JM,102793:JM,102812:JM,102798:CD,120900:CD,120908:CD,120916:CD,120920:CD,120924:CD,121002:CD,121006:CD,121007
120892 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,121007
120900 :: CALL :: call :: V :: v3.setChainID(v6)::CL,102836
120908 :: CALL :: call :: V :: v3.setCompound(v9)::CL,117398
120916 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,139814
120920 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,120933:JM,121006:CL,62566
120924 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,120933:JM,121006
120929 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,120933:JM,121006
120933 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,120938
120934 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,121001:CL,120746
120939 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,120941:CD,120997:CD,121001
120938 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,120939
120941 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,121001
120946 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,121001
120951 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,120960:CL,55525
120955 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,120960
120961 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,120967:CL,62742
120960 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,120961:CD,120965:CD,120967:CD,120997:CD,121001
120965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,120967
120967 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,120976:CD,120984:CD,120988:CD,120992:CD,120997:CD,121001
120976 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,63283
120984 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,62850
120988 :: CALL :: call :: V :: v42.addAtom(v33)::CL,63020
120992 :: CALL :: call :: V :: v3.addGroup(v42)::CL,102983
120997 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,121001
121001 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,120946:CD,120951:CD,120955:CD,120960:JM,121001:JM,120933:JM,121006
121002 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,120933:JM,121006
121007 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,120889
121006 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,120929:CD,120933:CD,120934:CD,120938:CD,120939:CD,121002:JM,121006:CF,121007
121051 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,107589:JM,107593:JM,107583
121050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,121051:CD,121056:CD,121061:CD,121062
121056 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,121061
121061 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,121062
121062 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,121051
121065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,121066:CD,121072
121066 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,107728
121069 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,121072
121072 :: NORM :: compound :: D :: return v3::CF,121066
121075 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,107734
121074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,121075:CD,121081
121078 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,121081
121081 :: NORM :: compound :: D :: return v3::CF,121075
121083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,121084:CD,121090
121084 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,107740
121087 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,121090
121090 :: NORM :: compound :: D :: return v3::CF,121084
121093 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,107964:JM,147051:JM,150552
121092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,121093:CD,121099
121096 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,121099
121099 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,121093
121110 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
121113 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,121126:JM,121129:DD,121117
121117 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
121120 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
121123 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
121126 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
121129 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
121146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,121151
121151 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
121157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,121162
121162 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
121168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,121172:CD,121176:CD,121180
121172 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
121176 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,139825
121180 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
121190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,121194:CD,121201:CD,121212
121194 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,121198
121198 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
121201 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,121206:CL,79234
121206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
121209 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
121213 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
121212 :: NORM :: declaration :: [D :: v9 = new []::DD,121213
121216 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
121219 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
121237 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,108376
121236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,121237:CD,121241:CD,121246:CD,121247:CD,121251:CD,121252:CD,121258:CD,121262:CD,121266:CD,121270
121241 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,121251:JM,121246
121247 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,121251:JM,121246
121246 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,121251:JM,121246
121251 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,121251:JM,121246
121252 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,121251:JM,121246
121258 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
121262 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
121266 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,121270:CL,139941
121270 :: NORM :: compound :: I :: return v19::DD,121237
121281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,121286:CD,121291:CD,121292:CD,121297:CD,121301:CD,121309:CD,121313
121286 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,121291
121291 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,121291
121292 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,121291
121297 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
121301 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,121309
121306 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
121309 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,121309
121313 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
121333 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,108442
121332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,121333:CD,121337:CD,121346:CD,121351:CD,121355:CD,121381:CD,121400:CD,121419:CD,121428:CD,121433:CD,121437:CD,121442
121337 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
121342 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,121442:JM,121428:JM,121355
121346 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,121442:JM,121428:JM,121355
121351 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,121442:JM,121428:JM,121355
121355 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,121356:CD,121364
121356 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,121361:CL,79234
121361 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
121365 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
121364 :: NORM :: declaration :: [D :: v18 = new []::DD,121365
121381 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,104560
121400 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,104560
121419 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,104560
121425 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
121429 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,121433:JM,121437
121428 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
121433 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,121433:JM,121437
121437 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,121438
121438 :: EXPR :: modify :: D :: v43[v44] = v49::
121443 :: NORM :: compound :: Z :: return #(1)::DD,121333
121442 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,121443:CD,121444
121444 :: NORM :: compound :: Z :: return #(0)::DD,121333
121488 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,121495:CD,121550:CD,121554:CD,121561:CD,121566
121492 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,121554
121495 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,121554
121500 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,121554
121505 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
121527 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
121530 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
121542 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
121545 :: CALL :: call :: Z :: v27 = v25.add(v12)::
121550 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,121554
121554 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,121500:CD,121505:JM,140225:CD,121530:CD,121545:CD,121550:JM,121554
121561 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,121566
121566 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,121616
121616 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
121678 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,121684:CD,121688:CD,121694:CD,121699:CD,121767:JM,121937:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121684 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121688 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,121986
121694 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121699 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,121700:CD,121704:CD,121716:CD,121986
121700 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,121986
121704 :: CALL :: call :: I :: v19 = v17.intValue()::JM,121986
121717 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,121720
121716 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,121720
121721 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,121724
121720 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,121724:CD,121738:CD,121747:JM,109745:JM,109738:CD,121757
121725 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
121724 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,121731
121728 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
121731 :: CALL :: call :: Z :: v32 = v29.add(v30)::
121738 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
121747 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,121751
121751 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
121757 :: CALL :: call :: V :: v40.setMolId(v25)::CL,124921
121764 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,121767
121767 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,121769:CD,121774:CD,121782:CD,121787:CD,121843:CD,121848:CD,121881:CD,121886:CD,121919:CD,121924:CD,121932:CD,121937:CD,121945:CD,121950:CD,121958:CD,121963:CD,121971:CD,121976:JM,121699
121769 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121774 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,121778:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121778 :: CALL :: call :: V :: v47.setMolName(v10)::CL,140460
121782 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121787 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,121788:CD,121794:CD,121818:CD,121822:CD,121829:CD,121833:CD,121837:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121788 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,121987:JM,121812:JM,121822
121794 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
121799 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,121987:JM,121812
121803 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,121987:JM,121812
121807 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,121987:JM,121812
121813 :: CALL :: call :: Z :: v69 = v55.add(v67)::
121812 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,121987
121818 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,121822
121822 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,121799:CD,121803:CD,121807:CD,121812:CD,121813:CD,121818:CD,121987
121829 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,124824
121833 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
121837 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
121843 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121849 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,121880
121848 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,121849:CD,121855:CD,121876:CD,121880:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121855 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
121860 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
121864 :: CALL :: call :: Z :: v90 = v83.add(v88)::
121872 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,140471
121876 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,121880
121881 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121880 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,121860:CD,121864:CD,121872:CD,121876:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121887 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,121918
121886 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,121887:CD,121893:CD,121914:CD,121918:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121893 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
121898 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
121902 :: CALL :: call :: Z :: v105 = v98.add(v103)::
121910 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,140482
121914 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,121918
121919 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121918 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,121898:CD,121902:CD,121910:CD,121914:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121924 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,121928:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121928 :: CALL :: call :: V :: v111.setFragment(v10)::CL,140493
121932 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121937 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,121941:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121941 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,140504
121945 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121950 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,121954:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121954 :: CALL :: call :: V :: v121.setMutation(v10)::CL,140515
121958 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121963 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,121967:JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121967 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,140526
121971 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,121937:JM,121699:JM,121924:JM,121848:JM,121976:JM,121787:JM,121963:JM,121774:JM,121886:JM,121950
121976 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,121980
121980 :: CALL :: call :: V :: v131.setDetails(v10)::CL,140537
121987 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
121986 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,121716:DD,121720
122104 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,122110:CD,122114:CD,122120:CD,122125:CD,122150:CD,122155:CD,122159:CD,122164:CD,122173:CD,122178:CD,122621:JM,122304:JM,122500:JM,122374:JM,122248:JM,122570:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122110 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122114 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,122137
122120 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122125 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,122129:CD,122133:CD,122137:CD,122138:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122126 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
122129 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,122137
122133 :: CALL :: call :: I :: v19 = v17.intValue()::JM,122137
122137 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
122138 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
122150 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
122155 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
122159 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
122164 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
122173 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122178 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,122182:CD,122187:CD,122192:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122182 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,140548
122187 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122192 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,122196:CD,122201:CD,122206:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122196 :: CALL :: call :: V :: v193.setFragment(v10)::CL,140493
122201 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122206 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,122210:CD,122215:CD,122220:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122210 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,140559
122215 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122220 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,122224:CD,122229:CD,122234:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122556:JM,122430
122224 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,140570
122229 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122234 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,122238:CD,122243:CD,122248:JM,122304:JM,122178:JM,122500:JM,122374:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122238 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,140581
122243 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122248 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,122252:CD,122257:CD,122262:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122252 :: CALL :: call :: V :: v185.setStrain(v10)::CL,140592
122257 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122262 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,122266:CD,122271:CD,122276:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122266 :: CALL :: call :: V :: v183.setVariant(v10)::CL,140603
122271 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122276 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,122280:CD,122285:CD,122290:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122280 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,140614
122285 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122290 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,122294:CD,122299:CD,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122294 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,140625
122299 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122304 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,122308:CD,122313:CD,122318:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122308 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,140636
122313 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122318 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,122322:CD,122327:CD,122332:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122322 :: CALL :: call :: V :: v175.setTissue(v10)::CL,140647
122327 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122332 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,122336:CD,122341:CD,122346:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122336 :: CALL :: call :: V :: v173.setCell(v10)::CL,140658
122341 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122346 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,122350:CD,122355:CD,122360:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122234:JM,122556:JM,122430
122350 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,140669
122355 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122360 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,122364:CD,122369:CD,122374:JM,122304:JM,122178:JM,122500:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122364 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,140680
122369 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122374 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,122378:CD,122383:CD,122388:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122378 :: CALL :: call :: V :: v167.setGene(v10)::CL,140691
122383 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122388 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,122392:CD,122397:CD,122402:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122392 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,140702
122397 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122402 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,122406:CD,122411:CD,122416:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122406 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,140713
122411 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122416 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,122420:CD,122425:CD,122430:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556
122420 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,140724
122425 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122430 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,122434:CD,122439:CD,122444:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122434 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,140735
122439 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122444 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,122448:CD,122453:CD,122458:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122448 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,140746
122453 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122458 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,122462:CD,122467:CD,122472:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122462 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,140757
122467 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122472 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,122476:CD,122481:CD,122486:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122360:JM,122234:JM,122556:JM,122430
122476 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,140768
122481 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122486 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,122490:CD,122495:CD,122500:JM,122304:JM,122178:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122490 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,140779
122495 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122500 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,122504:CD,122509:CD,122514:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122504 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,140790
122509 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122514 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,122518:CD,122523:CD,122528:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122518 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,140801
122523 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122528 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,122532:CD,122537:CD,122542:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122532 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,140812
122537 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122542 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,122546:CD,122551:CD,122556:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122430
122546 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,140823
122551 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122556 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,122560:CD,122565:CD,122570:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122560 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,140834
122565 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122570 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,122574:CD,122579:CD,122584:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122574 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,140845
122579 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122584 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,122588:CD,122593:CD,122598:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122588 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,140856
122593 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122598 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,122602:CD,122607:CD,122612:JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122602 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,140867
122607 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,122304:JM,122178:JM,122500:JM,122374:JM,122248:JM,122570:JM,122125:JM,122444:JM,122318:JM,122192:JM,122514:JM,122388:JM,122262:JM,122584:JM,122458:JM,122332:JM,122206:JM,122528:JM,122402:JM,122276:JM,122598:JM,122472:JM,122346:JM,122220:JM,122542:JM,122416:JM,122290:JM,122612:JM,122486:JM,122360:JM,122234:JM,122556:JM,122430
122612 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,122616
122616 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,140878
122621 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
122801 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,122805
122805 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
122808 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,122812
122812 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
122815 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
122818 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
122821 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
122824 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
122827 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
122830 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
122833 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
122836 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
122861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,122866:CD,122870:CD,122875
122866 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
122870 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,122875
122875 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,122877:CD,122882:CD,122883
122877 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,122882:JM,123133
122883 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,122884:CD,122892:CD,122898:CD,122903:CD,122907:CD,122912:CD,122920:CD,123133:CD,123134:CD,123140
122882 :: EXPR :: assign :: I :: v13 = v12.length::DD,122883
122884 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
122892 :: CALL :: call :: V :: v112.setSurname(v114)::CL,140908
122898 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
122903 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,140919
122907 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
122912 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
122920 :: CALL :: call :: Z :: v128 = v4.add(v112)::
122927 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
122933 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
122938 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
122943 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
122951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
122955 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,122960:JM,123001:JM,123065:JM,123097
122961 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,122962:CD,122968:CD,122973:CD,122978:CD,122983:CD,122987:CD,122992:CD,123001:CD,123002:CD,123139
122960 :: EXPR :: assign :: I :: v31 = v30.length::DD,122961
122962 :: CALL :: call :: V :: v26.setSurname(v16)::CL,140908
122968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
122973 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
122978 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
122983 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,140919
122987 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
122992 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
123001 :: EXPR :: assign :: I :: v49 = v30.length::DD,123002
123002 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,123007:CD,123013:CD,123018:CD,123022:CD,123027:CD,123065:CD,123066:CD,123067:CD,123070:CD,123075:CD,123080:CD,123085:CD,123093:CD,123097:CD,123098:CD,123105:CD,123110:CD,123115:CD,123123:CD,123136:CD,123137:CD,123138:CD,123139
123007 :: CALL :: call :: V :: v26.setSurname(v50)::CL,140908
123013 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
123018 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,140919
123022 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
123027 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
123037 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,123137
123041 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,123137
123042 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
123050 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,123137
123055 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,123137
123060 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,123137
123065 :: EXPR :: assign :: I :: v63 = v30.length::DD,123066
123064 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,123138:CF,123136
123067 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,123041:CD,123042:CD,123050:CD,123055:CD,123060:CD,123064:CD,123065:CD,123066:CD,123136:CD,123137:CD,123138
123066 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,123067
123070 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
123075 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
123080 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
123085 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
123093 :: CALL :: call :: V :: v26.setInitials(v78)::CL,140928
123097 :: EXPR :: assign :: I :: v93 = v30.length::DD,123098
123099 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
123098 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
123105 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
123110 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
123115 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
123123 :: CALL :: call :: V :: v26.setSurname(v95)::CL,140908
123127 :: CALL :: call :: Z :: v107 = v4.add(v26)::
123133 :: EXPR :: assign :: I :: v15 = v12.length::CF,123134
123132 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,123140
123134 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,122933:CD,122938:CD,122943:CD,122951:CD,122955:CD,122960:CD,122961:CD,123127:CD,123132:CD,123133:CD,123139:CD,123140
123137 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,123138
123136 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,123137:DD,123136:DD,123139
123139 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,123132
123138 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,123064:DD,123067:CF,123065
123140 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,123134:DD,123136:DD,123139:CF,123133
123237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,123242
123242 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
123248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,123253
123253 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
123259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,123264
123264 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
123285 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123290 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123295 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123300 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123419:JM,123434:JM,123439
123308 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123313 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,123314:CD,123332:CD,123342:CD,123346:JM,123313:JM,123585:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123314 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123332 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
123342 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123346 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,123367:CD,123381:CD,123390:CD,123394:CD,123395:CD,123399:CD,123400:CD,123406:CD,123410:CD,123414:CD,123415:CD,123419:CD,123420:CD,123426:CD,123430:CD,123434:CD,123435:CD,123439:CD,123440:CD,123446:CD,123450:CD,123451:CD,123457:CD,123461:CD,123469:CD,123474:CD,123478:CD,123479:CD,123485:CD,123489:CD,123495:CD,123499:CD,123504:CD,123508:CD,123520:CD,123537:CD,123554:CD,123571:CD,123580:CD,123585:CD,123641:CD,123646:JM,123313:JM,123346
123367 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123381 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
123390 :: CALL :: call :: I :: v38 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123395 :: CALL :: call :: I :: v42 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123394 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123419:JM,123434:JM,123439:JM,123478
123399 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123400 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123406 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,123585:JM,123414:JM,123419:JM,123434:JM,123439
123410 :: CALL :: call :: I :: v49 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123415 :: CALL :: call :: I :: v53 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123414 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123419:JM,123434:JM,123439:JM,123478
123419 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123420 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123426 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,123585:JM,123434:JM,123439
123430 :: CALL :: call :: I :: v61 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123435 :: CALL :: call :: I :: v65 = v28.length()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123434 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123419:JM,123434:JM,123439:JM,123478
123439 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123440 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123446 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,123585
123451 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123450 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,123647:JM,123646:JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123457 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,123585:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123461 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
123469 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,123647:JM,123646
123474 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123479 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123478 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123485 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,123585:JM,123394:JM,123399:JM,123414:JM,123478:JM,123419:JM,123434:JM,123439
123489 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,123647:JM,123646
123495 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,123647:JM,123646
123499 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,123647:JM,123646
123504 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,123647:JM,123646
123508 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,123647:JM,123646
123520 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
123537 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
123554 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
123571 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
123580 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,123585
123585 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,123586:JM,123585
123586 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,123585
123601 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,123313:JM,123585:JM,123346:JM,123394:JM,123399:JM,123478:JM,123414:JM,123419:JM,123434:JM,123439
123602 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
123610 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
123615 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
123641 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,123647:JM,123646
123647 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
123646 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,123653:CD,123661:CD,123666
123653 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
123658 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
123661 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
123666 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
123798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,123803
123803 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
123809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,123810:CD,123816
123810 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,111163
123813 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,123816
123816 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,123810
123818 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,123823:JM,123827
123823 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,123827
123827 :: EXPR :: modify :: Z :: p0 $this .published = v5::
123843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,123848
123848 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
123864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,123869
123869 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
123885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,123890
123890 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
123896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,123901
123901 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
123907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,123912
123912 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
123918 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,123923
123923 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
123929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,123934
123934 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
123940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,123945
123945 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
123951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,123955:CD,123959:CD,123963:CD,123968:CD,123973:CD,123978:CD,123983:CD,123988:CD,123993:CD,123998:CD,124006:CD,124026:CD,124030:CD,124031:CD,124036:CD,124044:CD,124049:CD,124054:CD,124062:CD,124066:CD,124108:CD,124113:CD,124118:CD,124126:CD,124131:CD,124153:CD,124158:CD,124180:CD,124185:CD,124207:CD,124212:CD,124231
123955 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,123955
123959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
123963 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
123968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
123973 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
123978 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
123983 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
123988 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
123993 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
123998 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
124003 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,124030
124006 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,124030
124011 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,124030
124016 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
124021 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
124026 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,124030
124031 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
124030 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,124011:CD,124016:CD,124021:CD,124026:JM,124030
124036 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
124041 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
124044 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
124049 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
124054 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
124059 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,124066
124062 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,124066
124067 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,124094
124066 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,124070:CD,124090:CD,124094:CD,124095:CD,124100
124070 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,124094
124075 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,124094
124080 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
124085 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
124090 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,124094
124095 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
124094 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,124075:CD,124080:CD,124085:CD,124090:JM,124094
124100 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
124105 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
124108 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
124113 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
124118 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
124123 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,124131
124126 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,124131
124131 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,124135:CD,124140:CD,124145
124132 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
124135 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
124140 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
124145 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
124150 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,124158
124153 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,124158
124159 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
124158 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,124162:CD,124167:CD,124172
124162 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
124167 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
124172 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
124177 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,124185
124180 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,124185
124185 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,124189:CD,124194:CD,124199
124186 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
124189 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
124194 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
124199 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
124204 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,124212
124207 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,124212
124213 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
124212 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,124216:CD,124221:CD,124226
124216 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
124221 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
124226 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
124231 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
124349 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,124354
124354 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
124361 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,111573:JM,111653:JM,146266
124360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,124361:CD,124365:CD,124390:CD,124394:JM,124374
124365 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,124374:JM,124394
124370 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,124374:JM,124394
124375 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,124388:CL,80865
124374 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,124389
124379 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,124388:CL,80865
124383 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,124388
124389 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,124361
124388 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,124389:CD,124390:CD,124394:JM,124374
124390 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,124374:JM,124394
124394 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,124370:CD,124374:CD,124375:CD,124379:CD,124383:CD,124388:CD,124397:CD,124402:CD,124406:CD,124411:CD,124416:CD,124420:CD,124425:CD,124433:JM,124394
124397 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
124402 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,80865
124406 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
124411 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
124416 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,124374:JM,124394
124420 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,124374:JM,124394
124425 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
124433 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,124361
124451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,124513:CD,124519
124513 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,124519:CL,140982
124519 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,124520:CD,124533:CD,124538:CD,124544:CD,124549:CD,124553
124520 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,102925
124533 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,124553:CL,67199
124538 :: CALL :: call :: I :: v40 = v38.size()::JM,124553
124544 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,124554:CL,67199
124549 :: CALL :: call :: I :: v45 = v43.size()::JM,124554
124553 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,124554:CD,124612:CD,124617:CD,124621
124554 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,124571
124571 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,141446
124612 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,124621:CL,67199
124617 :: CALL :: call :: I :: v50 = v48.size()::JM,124621
124621 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,124649:CD,124655
124649 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,124655:CL,141525
124655 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,124656
124656 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,102925
124730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,124735:CD,124749:CD,124753:JM,124754
124735 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,124753:JM,124754
124740 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,124753
124745 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,107304
124749 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,124753
124753 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,124740:CD,124745:CD,124749:JM,124753
124754 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
124768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,124774:CD,124788:CD,124792:CD,124796:CD,124804
124774 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,124792
124779 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124792
124784 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,117409
124788 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124792
124793 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
124792 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,124779:CD,124784:CD,124788:JM,124792
124796 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,124792
124801 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
124804 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,124792
124825 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,159138:JM,164866:JM,164898
124824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,124825:CD,124831
124828 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,124831
124831 :: NORM :: compound :: I :: return v3::CF,124825
124833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,124834:CD,124838:CD,124844
124834 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
124838 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,124844:CL,141793
124844 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,124834
124848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,124853
124853 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
124859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,124867
124864 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
124867 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
124877 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,146925
124876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,124877:CD,124881:CD,124887
124881 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,124887:CL,102466
124887 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,124877
124891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,124892:CD,124898
124892 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,112020
124895 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,124898
124898 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,124892
124900 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,124908
124908 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
124921 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,124926
124926 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
124933 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
124932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,124933:CD,124939
124936 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,124939
124939 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124933
124941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,124942:CD,124947:CD,124954
124942 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
124947 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,124954:CL,141940
124954 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,124942
124959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,124960:CD,124966
124960 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,147155:JM,147070
124963 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,124966
124966 :: NORM :: compound :: Ljava/util/List :: return v3::CF,124960
124969 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,112618
124968 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,124969:CD,124975
124972 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,124975
124975 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124969
124977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,124978:CD,124984
124978 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,112628
124981 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,124984
124984 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124978
125031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,125032:CD,125041:CD,125050:CD,125056:CD,125060:CD,125064:CD,125069:JM,106760:JM,106763:JM,106766:CD,125079:CD,125084:CD,125088:CD,125105:CD,125110:CD,125115:CD,125120:CD,125125:CD,125130:CD,125135:CD,125140:CD,125149:CD,125154:CD,125155:JM,125042:JM,125046
125032 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,159812:JM,159846
125041 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,125042:CD,125046:CD,125155:JM,125041
125042 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,125041:JM,125155:JM,125042:JM,125046
125046 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,125155
125050 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,124876
125056 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,125041:JM,125155:JM,125042:JM,125046
125060 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,125046
125064 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
125069 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
125079 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,142087
125084 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,125088:JM,125084
125089 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,125088:JM,125084
125088 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,125089:CD,125098:JM,125088:JM,125084
125098 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,142171
125105 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
125110 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,125088:JM,125084
125115 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
125120 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,125041:JM,125155:JM,125042:JM,125046
125125 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,125046
125130 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
125135 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,125041:JM,125155:JM,125042:JM,125046
125140 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,125046
125149 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,125154:CL,55534
125155 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
125154 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,125032
125250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,125254:CD,125255:CD,125263:CD,125268:CD,125272:CD,125273:CD,125281:CD,125289:CD,125294:CD,125299:CD,125303:CD,125304:CD,125312:CD,125320:CD,125325:CD,125330:CD,125334:CD,125335:CD,125343:CD,125351:CD,125356:CD,125361:CD,125365:CD,125366:CD,125374:CD,125382:CD,125387:CD,125392:CD,125396:CD,125397:CD,125405:CD,125413:CD,125418:CD,125423:CD,125427:CD,125428:CD,125436:CD,125444:CD,125449:CD,125454:CD,125458:CD,125459:CD,125467:CD,125472:CD,125476:CD,125477:CD,125485:CD,125493:CD,125498:CD,125503:CD,125507:CD,125508:CD,125516:CD,125524:CD,125529:CD,125534:CD,125538:CD,125539:CD,125547:CD,125555:CD,125560:CD,125565:CD,125569:CD,125570:CD,125578:CD,125586:CD,125591:CD,125596:CD,125600:CD,125601:CD,125609:CD,125617:CD,125622:CD,125627:CD,125631:CD,125632:CD,125640:CD,125648:CD,125653:CD,125658:CD,125662:CD,125663:CD,125671:CD,125676
125255 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
125254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
125263 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
125268 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
125273 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
125272 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
125281 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
125286 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
125289 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
125294 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
125299 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
125303 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
125304 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
125312 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
125317 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
125320 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
125325 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
125330 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
125335 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
125334 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
125343 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
125348 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
125351 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
125356 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
125361 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
125365 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
125366 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
125374 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
125379 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
125382 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
125387 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
125392 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
125397 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
125396 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
125405 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
125410 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
125413 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
125418 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
125423 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
125427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
125428 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
125436 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
125441 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
125444 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
125449 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
125454 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
125459 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
125458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
125467 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
125472 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
125477 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
125476 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
125485 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
125490 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
125493 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
125498 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
125503 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
125507 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
125508 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
125516 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
125521 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
125524 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
125529 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
125534 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
125539 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
125538 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
125547 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
125552 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
125555 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
125560 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
125565 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
125569 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
125570 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
125578 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
125583 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
125586 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
125591 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
125596 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
125601 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
125600 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
125609 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
125614 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
125617 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
125622 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
125627 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
125631 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
125632 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
125640 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
125645 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
125648 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
125653 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
125658 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
125663 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
125662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
125671 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
125676 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
125769 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,112784
125768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,125769:CD,125785:CD,125807:CD,125817:JM,142307:JM,142304:JM,142298:JM,142301:CD,125827:CD,125831:CD,125842:CD,125858
125785 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,125031
125807 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,125031
125817 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,125831
125827 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,142376
125831 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,125769
125842 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,142393
125858 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,125769
125885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,125892:CD,125896:CD,125983:CD,125987
125892 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,125987:CL,54721
125896 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,125987
125901 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,125987
125906 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,125924:JM,125981:JM,125916:CL,102916
125911 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,125924:JM,125981:JM,125916
125917 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,125918:CD,125919:CD,125924:CD,125925:CF,125976
125916 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,125917
125919 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,125924:JM,125981:JM,125916
125918 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,125924:JM,125981:JM,125916
125925 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,125927:CD,125933:CD,125934:CD,125940:CD,125944:JM,125924:JM,125981:JM,125916
125924 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,125925
125927 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,125924:JM,125981:JM,125916
125933 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,125924:JM,125981:JM,125916
125934 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,125924:JM,125981:JM,125916
125940 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,125944:CL,63274
125945 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,125949:CL,63274
125944 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,125945:CD,125949:CF,125976
125949 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,125951:CD,125955:CD,125959
125951 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,125959:CL,142689
125955 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,125960:CL,142701
125959 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,125960:CF,125976
125960 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,125962:CD,125967:CD,125968
125962 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,125967:CL,87458
125967 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,125968
125968 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,142307:JM,142304:JM,142298:JM,142301:CF,125976
125977 :: CALL :: call :: I :: v17 = v15.size()::JM,125924:JM,125981:JM,125916
125976 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,125989
125981 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,125982
125983 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,125987
125982 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,125911:CD,125916:CD,125917:CD,125976:CD,125977:CD,125981:CD,125989:JM,125924:JM,125987
125987 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,125901:CD,125906:CD,125977:CD,125981:CD,125982:CD,125983:CD,125989:JM,125987
125989 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,125924:JM,125981:JM,125916:DD,125918:DD,125933:DD,125976:DD,125982
126038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,126045:CD,126049:CD,126136:CD,126140
126045 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,126140:CL,54721
126049 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,126140
126054 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,126140
126059 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,126069:JM,126134:JM,126077:CL,102916
126064 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,126069:JM,126134:JM,126077
126069 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,126070
126071 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,126069:JM,126134:JM,126077
126070 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,126071:CD,126072:CD,126077:CD,126078:CF,126129
126072 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,126069:JM,126134:JM,126077
126077 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,126078
126078 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,126080:CD,126086:CD,126087:CD,126093:CD,126097:JM,126069:JM,126134:JM,126077
126080 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,126069:JM,126134:JM,126077
126087 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,126069:JM,126134:JM,126077
126086 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,126069:JM,126134:JM,126077
126093 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,126097:CL,63274
126097 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,126098:CD,126102:CF,126129
126098 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,126102:CL,63274
126102 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,126104:CD,126108:CD,126112
126104 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,126112:CL,142713
126108 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,126113:CL,142725
126113 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,126115:CD,126120:CD,126121
126112 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,126113:CF,126129
126115 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,126120:CL,87458
126121 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,142307:JM,142304:JM,142298:JM,142301:CF,126129
126120 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,126121
126129 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,126142
126130 :: CALL :: call :: I :: v17 = v15.size()::JM,126069:JM,126134:JM,126077
126135 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,126064:CD,126069:CD,126070:CD,126129:CD,126130:CD,126134:CD,126142:JM,126077:JM,126140
126134 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,126135
126136 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,126140
126140 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,126054:CD,126059:CD,126130:CD,126134:CD,126135:CD,126136:CD,126142:JM,126140
126142 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,126069:JM,126134:JM,126077:DD,126071:DD,126086:DD,126129:DD,126135
126191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,126198:CD,126202:CD,126343:CD,126347
126198 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,126347:CL,54721
126202 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,126347
126207 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,126347
126212 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,126225:JM,126342:CL,62566
126216 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,126225:JM,126342
126221 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,126225:JM,126342
126225 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
126226 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,126230:CL,63274
126230 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,126232:CD,126236:CD,126241:CD,126245:CD,126260:CD,126264:CD,126265:CD,126333:CD,126337
126232 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,126337
126236 :: CALL :: call :: Z :: v29 = v26.add(v22)::
126241 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,126264:JM,126254:CL,63325
126245 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,126264:JM,126254
126250 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,126264:JM,126254
126255 :: CALL :: call :: Z :: v40 = v26.add(v38)::
126254 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
126260 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,126264:JM,126254
126265 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,126337
126264 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,126250:CD,126254:CD,126255:CD,126260:JM,126264:JM,126337
126270 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,126337
126279 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,118177
126283 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,126332:CL,142737
126287 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,126332
126292 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,126332
126301 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,126315:CL,55534
126310 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,126316:CL,55534
126315 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,126316:JM,126332
126316 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,142307:JM,142304:JM,142298:JM,142301:JM,126332
126328 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,126332
126333 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,126337
126332 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,126292:CD,126301:CD,126310:CD,126315:CD,126328:JM,126332:JM,126337
126337 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,126270:CD,126279:CD,126283:CD,126287:CD,126328:CD,126332:CD,126333:JM,126337:JM,126225:JM,126342
126338 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,126225:JM,126342
126343 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,126347
126342 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,126221:CD,126225:CD,126226:CD,126230:CD,126338:JM,126342:JM,126347
126347 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,126207:CD,126212:CD,126216:CD,126338:CD,126342:CD,126343:JM,126347
126408 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,126415:CD,126419:CD,126489:CD,126493
126415 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,126493:CL,54721
126419 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,126493
126424 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,126493
126429 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,126488:CL,62566
126433 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,126488
126438 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,126488
126443 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,126483:CL,120746
126447 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,126483
126452 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,126483
126457 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,126461:CL,142746
126461 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,126462:CD,126466:CD,126470:JM,126483
126462 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,126470:CL,142746
126466 :: CALL :: call :: I :: v38 = v36.size()::JM,126470
126471 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,126475:CL,142746
126470 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,126471:CD,126475:CD,126476:JM,126483
126475 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
126476 :: CALL :: call :: V :: v41.trimToSize()::
126479 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,126483
126483 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,126452:CD,126457:CD,126461:CD,126479:JM,126483:JM,126488
126484 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,126488
126489 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,126493
126488 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,126438:CD,126443:CD,126447:CD,126479:CD,126483:CD,126484:JM,126488:JM,126493
126493 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,126424:CD,126429:CD,126433:CD,126484:CD,126488:CD,126489:JM,126493
126519 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,112897:JM,113068
126518 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,126519:CD,126525
126522 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,126525
126525 :: NORM :: compound :: Ljava/util/List :: return v3::CF,126519
126527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,126528:CD,126534
126528 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,173643:JM,173669
126531 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,126534
126534 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,126528
126536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,126551:CD,126560:CD,126565:CD,126569:JM,126589
126551 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
126560 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,126569:CL,62549
126565 :: CALL :: call :: I :: v13 = v11.size()::JM,126569
126569 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,126571:CD,126579:CD,126585:CD,126589:JM,126569
126571 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,126536
126579 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,126569:JM,126589
126585 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,126589:CL,142755
126589 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,126591:CD,126611
126591 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,126536
126611 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,142768
126647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,126648:CD,126657:CD,126661:JM,126675:JM,126695
126648 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,113622:JM,126684:JM,126704
126657 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,126661:CL,103225
126661 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,126662:CD,126666:CD,126671:CD,126675
126662 :: NORM :: compound :: Z :: return #(0)::DD,126648
126666 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,126675:CL,62549
126671 :: CALL :: call :: I :: v13 = v11.size()::JM,126675
126675 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,126677:CD,126684:CD,126685:CD,126691:CD,126695:JM,126675
126677 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,126684:CL,126647
126685 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,126675:JM,126695
126684 :: NORM :: compound :: Z :: return v26::DD,126648
126691 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,126695:CL,142755
126695 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,126697:CD,126704:CD,126706
126697 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,126704:CL,126647
126705 :: NORM :: compound :: Z :: return #(0)::DD,126648
126704 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,126705:CD,126706
126706 :: NORM :: compound :: Z :: return #(1)::DD,126648
127708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CD,127712:CD,127727:CD,127738
127712 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CD,127718:CD,127722:CD,127750:CD,127754:CD,127781
127718 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,127712
127722 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
127727 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
127734 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
127738 :: CALL :: call :: I :: v19 = parseInt(v17)::
127746 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,127781
127750 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,108844
127755 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,108855
127754 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,127755:CD,127760:CD,127764
127760 :: CALL :: call :: I :: v29 = v26.length()::JM,127764
127765 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
127764 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,127765:CD,127774
127774 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,108855
127781 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,127754:JM,127764
127881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,127888:CD,127947:CD,127954:CD,128075:CD,128079:CD,128097:CD,128101:CD,128147:CD,128151:CD,128167:CD,128171:CD,128187:CD,128191:CD,128497:CD,128501:CD,128524:CD,128530:CD,128534:CD,128541:CD,128545:CD,128725:CD,128728:CD,128731:CD,128738:CD,128845:CD,128849:CD,128850:CD,128854:CD,128885:CD,128890:CD,128895:CD,128903:CD,128907
127885 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,127888
127888 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,127895:CD,127909:CD,127914
127895 :: CALL :: call :: V :: v12.addGroup(v13)::CL,102983
127909 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,127914:CL,145273
127915 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
127914 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,127921
127918 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
127921 :: CALL :: call :: Z :: v24 = v21.add(v22)::
127947 :: CALL :: call :: V :: v25.addModel(v26)::CL,102236
127951 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,127963:JM,128079
127954 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,127963:JM,128079
127959 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,127963:JM,128079
127963 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,128039
127991 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
128001 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,145318
128006 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,145387
128011 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,145568
128020 :: CALL :: call :: V :: v58.setChainID(v60)::CL,102836
128024 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
128027 :: CALL :: call :: Z :: v64 = v62.add(v58)::
128034 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
128039 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,128039
128043 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
128048 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
128053 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
128058 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
128063 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
128071 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,145689
128075 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,127963:JM,128079
128079 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,127959:CD,127963:CD,127991:CD,128001:CD,128006:CD,128011:CD,128020:CD,128027:CD,128034:CD,128039:CD,128043:CD,128048:CD,128053:CD,128058:CD,128063:CD,128071:CD,128075:JM,128079
128097 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,128101:CL,111516
128101 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,128105:CD,128109:CD,128139
128105 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,128109:CL,98850
128109 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,128116:CD,128139
128116 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,146229
128139 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,111603
128144 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,128151
128147 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,128151
128151 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
128158 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,128161
128161 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
128164 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,128171
128167 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,128171
128171 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
128178 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,128181
128181 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
128187 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,128191:CL,146471
128191 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,128409:CD,128413:CD,128489:CD,128493:CD,128917:CD,128920
128196 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,128214:JM,128396:CL,62549
128201 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
128205 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,128214:JM,128396
128210 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,128214:JM,128396
128215 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,128231:JM,128391
128214 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
128218 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,128231:JM,128391
128222 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,128231:JM,128391
128227 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,128231:JM,128391
128231 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,128241
128232 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,128241:CL,80865
128236 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,128241
128241 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,128915:CD,128245:CD,128258:CD,128262:CD,128266:CD,128283:CD,128287:CD,128291:CD,128295:CD,128314:CD,128318:CD,128319:CD,128323:CD,128342:CD,128346:CD,128351:CD,128356:CD,128387:CD,128391:CD,128912:CD,128913:CD,128916
128245 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
128258 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,62566
128262 :: CALL :: call :: I :: v205 = v203.size()::
128266 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
128283 :: CALL :: call :: V :: v179.setChainID(v197)::CL,102836
128287 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,146480
128291 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,128318:CL,62566
128295 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,128318
128300 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,128318
128305 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,128309:CL,63274
128309 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,128912:CD,128310
128310 :: CALL :: call :: V :: v222.setChainId(v197)::CL,102421
128314 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,128318
128319 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,128346:CL,102916
128318 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,128300:CD,128305:CD,128309:CD,128314:CD,128912:JM,128318
128323 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,128346
128328 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,128346
128333 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,128337:CL,63274
128337 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,128913:CD,128338
128338 :: CALL :: call :: V :: v234.setChainId(v197)::CL,102421
128342 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,128346
128346 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,128328:CD,128333:CD,128337:CD,128342:CD,128913:JM,128346
128351 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,128356:CL,145273
128357 :: CALL :: call :: Z :: v242 = v171.add(v179)::
128356 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,128357:CD,128363:CD,128367:CD,128381:CD,128385:CD,128914:CD,128916
128363 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,128385:CL,62566
128367 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,128385
128372 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,128385
128377 :: CALL :: call :: V :: v240.addGroup(v251)::CL,102983
128381 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,128385
128385 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,128372:CD,128377:CD,128381:CD,128914:JM,128385
128387 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,128231:JM,128391
128391 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,128916:CD,128227:CD,128231:CD,128232:CD,128236:CD,128241:CD,128915:JM,128391
128392 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,128214:JM,128396
128396 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,128210:CD,128214:CD,128218:CD,128222:CD,128387:CD,128391:CD,128392:CD,128915:CD,128916:JM,128396
128400 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,102289
128405 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,128917
128409 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,128413:CL,103225
128413 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,128196:CD,128201:CD,128205:CD,128392:CD,128396:CD,128400:CD,128405:CD,128409:CD,128916:CD,128917
128419 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,128484:CL,62549
128424 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,128484
128429 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,128484
128434 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,128450:JM,128479
128437 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,128450:JM,128479
128441 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,128450:JM,128479
128446 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,128450:JM,128479
128451 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,128460:CL,80865
128450 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,128460
128455 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,128460
128460 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,128918:CD,128464:CD,128470:CD,128475:CD,128479:CD,128919
128464 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
128470 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,146480
128475 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,128450:JM,128479
128479 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,128919:CD,128446:CD,128450:CD,128451:CD,128455:CD,128460:CD,128918:JM,128479
128480 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,128484
128485 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,128920
128484 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,128429:CD,128437:CD,128441:CD,128475:CD,128479:CD,128480:CD,128918:CD,128919:JM,128484:CF,128485
128489 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,128493:CL,103225
128493 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,128419:CD,128424:CD,128480:CD,128484:CD,128485:CD,128489:CD,128919:CD,128920
128497 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,128501:CL,98850
128501 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,128505:CD,128509:CD,128516:CD,128520
128505 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,128509:CL,98756
128509 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,128510
128510 :: CALL :: call :: V :: p0 $this .addBonds()::CL,146491
128516 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,128520:CL,98829
128521 :: CALL :: call :: V :: p0 $this .addCharges()::CL,146525
128520 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,128521
128524 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,146537
128530 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,128534:CL,98850
128535 :: CALL :: call :: V :: p0 $this .addSites()::CL,146847
128534 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,128535
128541 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,128545:CL,108268
128545 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,128546:CD,128553:CD,128709:CD,128713:CD,128721
128546 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
128550 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,128562:JM,128713
128553 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,128562:JM,128713
128558 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,128562:JM,128713
128563 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
128562 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,128594:JM,128585:JM,128589:JM,128921:JM,128619:JM,128639:CF,128563
128568 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,128580:JM,128604
128571 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,128580:JM,128604
128576 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,128580:JM,128604
128581 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,128594:JM,128581:JM,128589
128580 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,128594:JM,128581:JM,128589
128585 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,128594:JM,128585:JM,128589
128589 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,128594:JM,128589
128595 :: CALL :: call :: Z :: v312 = v295.add(v304)::
128594 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,128595:JM,128580:JM,128604
128600 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,128580:JM,128604
128604 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,128576:CD,128580:CD,128581:CD,128585:CD,128589:CD,128594:CD,128600:JM,128604
128612 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,147280
128619 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,128921:JM,128619
128623 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,128921
128639 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,128639
128643 :: CALL :: call :: I :: v334 = parseInt(v332)::
128682 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,128687:CD,128691:CD,128695:CD,128699:CD,128703:JM,128562:JM,128713
128687 :: CALL :: call :: V :: v354.setId(v330)::CL,140383
128691 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,140394
128695 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,140405
128699 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
128703 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
128709 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,128562:JM,128713
128713 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,128558:CD,128562:CD,128563:CD,128571:CD,128600:CD,128604:JM,147265:JM,147272:CD,128612:CD,128619:CD,128623:CD,128639:CD,128643:CD,128682:CD,128709:CD,128921:JM,128713
128721 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,112550
128725 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,147404
128728 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,147778
128731 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,128907:JM,128863
128735 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,128849
128738 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,128849
128743 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,128849
128748 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
128756 :: CALL :: call :: V :: v382.setDetails(v385)::CL,147840
128771 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,147851
128779 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,147862
128787 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,147873
128795 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,147884
128803 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,147895
128811 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,147906
128819 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,128824
128825 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,128924:CF,128826:CD,128834
128824 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,128825:DD,128924
128826 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,128924
128834 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
128840 :: CALL :: call :: Z :: v422 = v420.add(v382)::
128845 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,128849
128849 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,128743:CD,128748:CD,128756:CD,128771:CD,128779:CD,128787:CD,128795:CD,128803:CD,128811:CD,128819:CD,128824:CD,128825:CD,128840:CD,128845:CD,128924:JM,128849:JM,128907:JM,128863
128850 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,128907:JM,128863
128854 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,128907:JM,128863
128859 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,128907:JM,128863
128863 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
128867 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,124876
128872 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
128878 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,102972
128885 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
128890 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
128895 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
128903 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,128907:JM,128863
128907 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,128859:CD,128863:CD,128867:CD,128872:CD,128878:CD,128903:JM,128907
128913 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,128346:DD,128913:DD,128914:DD,128916
128912 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,128318:DD,128912:DD,128913
128915 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,128231:JM,128391:DD,128912:DD,128915:DD,128916
128914 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,128385:DD,128914:DD,128916
128917 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,128413:DD,128916
128916 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,128214:JM,128396:DD,128405:DD,128915
128919 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,128484:DD,128485:DD,128918
128918 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,128450:JM,128479:DD,128918:DD,128919
128921 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,128639:DD,128682
128920 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,128493:DD,128919
128924 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
129235 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,115492:JM,115502
129234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,129235:CD,129239:CD,129243:CD,129247:CD,129251:JM,129267:JM,129283:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129239 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,129252:DD,129268:DD,129546
129243 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129247 :: CALL :: call :: I :: v9 = v7.length()::JM,129251:JM,129267:JM,129283:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129251 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,129252:CD,129253:CD,129257:CD,129261:JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129548:JM,129310
129253 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129252 :: NORM :: compound :: Ljava/util/List :: return v4::DD,129235
129257 :: CALL :: call :: I :: v14 = v12.length()::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129261 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,129262:CD,129267:CD,129526:CD,129530:CD,129531:CD,129535:CD,129540:CD,129546:CD,129558:CD,129559:CD,129560:CD,129561:CD,129562:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129261:JM,129548:JM,129310
129262 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129267 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,129268:CD,129526:CD,129530:CD,129531:CD,129535:CD,129540:CD,129546:CD,129558:CD,129559:CD,129560:CD,129561:CD,129562
129268 :: NORM :: compound :: Ljava/util/List :: return v4::DD,129235
129270 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129275 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129279 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129283 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,129284
129285 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129284 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,129547:CD,129285:CD,129286:CD,129291
129286 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129291 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129295 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,129548:CD,129296:CD,129297:CD,129302
129297 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129296 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129302 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129306 :: CALL :: call :: C :: v43 = v25.charValue()::JM,129351:JM,129431:JM,129547:JM,129548:JM,129310
129311 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,129328:CD,129312:CD,129317:CD,129329:CD,129337:CD,129342:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129310 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,129311:CD,129347:CD,129351:JM,129431:JM,129547:JM,129548:JM,129310
129312 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,129317
129317 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,129318:CD,129322
129318 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
129322 :: CALL :: call :: Z :: v50 = v4.add(v48)::
129329 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
129328 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
129337 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,129556
129342 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,129556
129347 :: CALL :: call :: C :: v60 = v25.charValue()::JM,129351:JM,129431:JM,129547:JM,129548:JM,129310
129351 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,129352:CD,129427:CD,129431:JM,129351:JM,129547:JM,129548:JM,129310
129353 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,129549:CD,129354
129352 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,129353:CD,129365:CD,129401:CD,129549:CD,129550
129355 :: CALL :: call :: C :: v63 = v35.charValue()::JM,129363
129354 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,129355:CD,129359:CD,129363:CD,129364:CD,129549:CD,129550
129359 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,129363
129363 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,129549:CD,129364:CD,129550
129365 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,129382:CD,129366:CD,129371:CD,129383:CD,129391:CD,129396:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129364 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,129549
129366 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,129371
129371 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,129372:CD,129376
129372 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
129376 :: CALL :: call :: Z :: v74 = v4.add(v72)::
129383 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
129382 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
129391 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,129556
129396 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,129556
129401 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,129402:CD,129406:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129402 :: CALL :: call :: C :: v84 = v41.charValue()::JM,129406
129406 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,129408:CD,129409:CD,129417:CD,129422:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129409 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
129408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
129417 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,129556
129422 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,129556
129427 :: CALL :: call :: C :: v94 = v25.charValue()::JM,129351:JM,129431:JM,129547:JM,129548:JM,129310
129431 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,129507:CD,129432:CD,129508:CD,129516:CD,129521:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129433 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,129551:CD,129434
129432 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,129433:CD,129445:CD,129481:CD,129551:CD,129552
129435 :: CALL :: call :: C :: v97 = v35.charValue()::JM,129443
129434 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,129435:CD,129439:CD,129443:CD,129444:CD,129551:CD,129552
129439 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,129443
129443 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,129551:CD,129444:CD,129552
129445 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,129462:CD,129446:CD,129451:CD,129463:CD,129471:CD,129476:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129444 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,129551
129446 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,129451
129451 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,129452:CD,129456
129452 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
129456 :: CALL :: call :: Z :: v108 = v4.add(v106)::
129463 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
129462 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
129471 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,129556
129476 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,129556
129481 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,129482:CD,129486:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129482 :: CALL :: call :: C :: v118 = v41.charValue()::JM,129486
129486 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,129488:CD,129489:CD,129497:CD,129502:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557
129489 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
129488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
129497 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,129556
129502 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,129556
129507 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
129508 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
129516 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,129556
129521 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,129556
129525 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,129562:CF,129558
129526 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129530:JM,129261:JM,129548:JM,129310
129531 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,129540
129530 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,129270:CD,129275:CD,129279:CD,129283:CD,129284:CD,129295:CD,129306:CD,129310:CD,129525:CD,129526:CD,129547:CD,129548:CD,129553:CD,129554:CD,129555:CD,129556:CD,129557:CD,129558:CD,129559:CD,129560:CD,129561:CD,129562:JM,129267:JM,129251:JM,129351:JM,129431:JM,129530:JM,129261:JM,129540
129535 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,129540
129541 :: CALL :: call :: Z :: v151 = v4.add(v144)::
129540 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,129541:CF,129546
129547 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,129354:JM,129363:DD,129434:JM,129443:CF,129295
129546 :: NORM :: compound :: Ljava/util/List :: return v4::DD,129235
129549 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,129550:DD,129557
129548 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,129351:JM,129431:JM,129547:JM,129548:JM,129310:DD,129401:JM,129406:DD,129481:JM,129486
129551 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,129552:DD,129557
129550 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,129365
129553 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,129554:DD,129558
129552 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,129445
129555 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,129556:DD,129560
129554 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,129555:DD,129559
129557 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,129525
129556 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,129557:DD,129561
129559 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,129560:DD,129433:DD,129554
129558 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,129559:DD,129311:DD,129352:DD,129432:DD,129553
129561 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,129562:JM,129317:JM,129371:JM,129451:JM,129540:DD,129556
129560 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,129561:DD,129353:DD,129555
129562 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,129267:JM,129283:JM,129251:JM,129351:JM,129431:JM,129547:JM,129261:JM,129548:JM,129310:DD,129284:DD,129285:DD,129295:DD,129296:DD,129364:DD,129444:DD,129530:DD,129549:DD,129551:DD,129557
129725 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,115884
129724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,129725:CD,129732:CD,129736:CD,129753:CD,129754:CD,129762:CD,129766:CD,129770:CD,129787:CD,129788:CD,129808:CD,129809:CD,129810:CD,129996:CD,130000:CD,130001:CD,130004:CD,130005:CD,130006:JM,129826
129732 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,130001:JM,130000:JM,129826:JM,129732:JM,129736
129736 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,130001:JM,130000:JM,129826:JM,129736
129753 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,129725
129754 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,129808:CL,147917
129762 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,129770
129766 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
129770 :: EXPR :: assign :: I :: v27 = v24.length::DD,129787
129780 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
129787 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,129788:CD,129780:CD,129786:CD,130004
129786 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,130004
129788 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
129801 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
129807 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,130005
129809 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,129801:CD,129807:CD,129808:CD,130005:JM,130001:JM,130000:JM,129826:JM,129732:JM,129736
129808 :: EXPR :: assign :: I :: v39 = v20.length::CF,129809
129810 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,130001:JM,130000:JM,129826:JM,129732:JM,129736
129815 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,130001:JM,130000:JM,129826:JM,129736
129821 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,130001:JM,130000:JM,129826:JM,129736
129820 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,130001:JM,130000:JM,129826:JM,129736:DD,130006
129827 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,129832
129826 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,129931:JM,129937:JM,129943
129833 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,129842:CD,129834:CD,129847:CD,129851:CD,129857:CD,129861:CD,129866:CD,129870:CD,129874:CD,129878:CD,129884:CD,129889:CD,129893:CD,129898:CD,129899:CD,130006
129832 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,129833:JM,129857:JM,129847:JM,129851:JM,129878:JM,129866:JM,129874:JM,129870
129834 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,148094
129842 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
129847 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,129857:JM,129847:JM,129851
129851 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,129857:JM,129851
129857 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,129857
129861 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
129866 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,129878:JM,129866
129870 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,129874:JM,129878:JM,129870
129874 :: CALL :: call :: I :: v77 = v75.length()::JM,129874:JM,129878
129878 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,129878
129884 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
129889 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
129893 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,129898
129899 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,129900:CD,129908:CD,129916:CD,129920:CD,129921:CD,129925:CD,129930:CD,130006
129898 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,129899:JM,129908
129900 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,148094
129908 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,129908
129912 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,129925:JM,129930:JM,129916
129916 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,129925:JM,129930:JM,129916
129921 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,129921:JM,129925:JM,129930
129920 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,129921:JM,129925:JM,129930
129925 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,129925:JM,129930
129931 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,130006:CD,129932:CD,129937
129930 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,129931:CD,130006
129932 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,129937
129937 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,130006:CD,129938:CD,129943
129938 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,129943
129943 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,130006:CD,129944:CD,129948
129944 :: CALL :: call :: I :: v108 = parseInt(v57)::
129948 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
129996 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,130001:JM,130000:JM,129826:JM,129736
130001 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,129725
130000 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,129815:CD,129820:CD,129821:CD,129826:CD,129827:CD,129832:CD,129833:CD,129996:CD,130006:JM,130000:JM,129736:CF,130001
130005 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,129807:DD,129809:CF,129808
130004 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,129786:DD,129787
130006 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,130001:JM,130000:JM,129826:JM,129736:DD,129820
130127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,130135:CD,130149:CD,130153
130132 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130153
130135 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130153
130140 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130153
130145 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,148244
130149 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130153
130153 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130140:CD,130145:CD,130149:JM,130153
130163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,130171:CD,130185:CD,130189
130168 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130189
130171 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130189
130176 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130189
130181 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,148287
130185 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130189
130189 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130176:CD,130181:CD,130185:JM,130189
130199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,130207:CD,130221:CD,130225
130204 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130225
130207 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130225
130212 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130225
130217 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,149122
130221 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130225
130225 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130212:CD,130217:CD,130221:JM,130225
130235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,130243:CD,130257:CD,130261
130240 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130261
130243 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130261
130248 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130261
130253 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,149281
130257 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130261
130261 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130248:CD,130253:CD,130257:JM,130261
130271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,130279:CD,130293:CD,130297
130276 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130297
130279 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130297
130284 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130297
130289 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,149355
130293 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130297
130297 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130284:CD,130289:CD,130293:JM,130297
130307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,130315:CD,130329:CD,130333
130312 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130333
130315 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130333
130320 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130333
130325 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,149456
130329 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130333
130333 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130320:CD,130325:CD,130329:JM,130333
130343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,130351:CD,130365:CD,130369
130348 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130369
130351 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130369
130356 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130369
130361 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,149497
130365 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130369
130369 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130356:CD,130361:CD,130365:JM,130369
130379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,130387:CD,130401:CD,130405
130384 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130405
130387 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130405
130392 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130405
130397 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,149696
130401 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130405
130405 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130392:CD,130397:CD,130401:JM,130405
130415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,130423:CD,130437:CD,130441
130420 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130441
130423 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130441
130428 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130441
130433 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,149805
130437 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130441
130441 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130428:CD,130433:CD,130437:JM,130441
130451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,130459:CD,130473:CD,130477
130456 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130477
130459 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130477
130464 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130477
130469 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,149828
130473 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130477
130477 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130464:CD,130469:CD,130473:JM,130477
130487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,130495:CD,130509:CD,130513
130492 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130513
130495 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130513
130500 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130513
130505 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,150008
130509 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130513
130513 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130500:CD,130505:CD,130509:JM,130513
130523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,130531:CD,130545:CD,130549
130528 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130549
130531 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130549
130536 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130549
130541 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,150049
130545 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130549
130549 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130536:CD,130541:CD,130545:JM,130549
130559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,130567:CD,130581:CD,130585
130564 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130585
130567 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130585
130572 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130585
130577 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,150451
130581 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130585
130585 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130572:CD,130577:CD,130581:JM,130585
130595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,130603:CD,130617:CD,130621
130600 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130621
130603 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130621
130608 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130621
130613 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,150480
130617 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130621
130621 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130608:CD,130613:CD,130617:JM,130621
130631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,130639:CD,130653:CD,130657
130636 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130657
130639 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130657
130644 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130657
130649 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,150503
130653 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130657
130657 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130644:CD,130649:CD,130653:JM,130657
130667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,130675:CD,130689:CD,130693
130672 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130693
130675 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130693
130680 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130693
130685 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,150634
130689 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130693
130693 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130680:CD,130685:CD,130689:JM,130693
130703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,130711:CD,130725:CD,130729
130708 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130729
130711 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130729
130716 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130729
130721 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,150939
130725 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130729
130729 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130716:CD,130721:CD,130725:JM,130729
130739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,130747:CD,130761:CD,130765
130744 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130765
130747 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130765
130752 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130765
130757 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,150956
130761 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130765
130765 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130752:CD,130757:CD,130761:JM,130765
130775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,130783:CD,130797:CD,130801
130780 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130801
130783 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130801
130788 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130801
130793 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,150985
130797 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130801
130801 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130788:CD,130793:CD,130797:JM,130801
130811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,130819:CD,130833:CD,130837
130816 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130837
130819 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130837
130824 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130837
130829 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,151008
130833 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130837
130837 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130824:CD,130829:CD,130833:JM,130837
130847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,130855:CD,130869:CD,130873
130852 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130873
130855 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130873
130860 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130873
130865 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,151031
130869 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130873
130873 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130860:CD,130865:CD,130869:JM,130873
130883 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,130891:CD,130905:CD,130909
130888 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130909
130891 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130909
130896 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130909
130901 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,151104
130905 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130909
130909 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130896:CD,130901:CD,130905:JM,130909
130919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,130927:CD,130941:CD,130945
130924 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130945
130927 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130945
130932 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130945
130941 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130945
130945 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130932:CD,130941:JM,130945
130955 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,130963:CD,130977:CD,130981
130960 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,130981
130963 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,130981
130968 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,130981
130973 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,151201
130977 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,130981
130981 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,130968:CD,130973:CD,130977:JM,130981
130991 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,130999:CD,131013:CD,131017
130996 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131017
130999 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131017
131004 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131017
131009 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,151245
131013 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131017
131017 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131004:CD,131009:CD,131013:JM,131017
131027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,131035:CD,131049:CD,131053
131032 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131053
131035 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131053
131040 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131053
131045 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,151455
131049 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131053
131053 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131040:CD,131045:CD,131049:JM,131053
131063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,131071:CD,131085:CD,131089
131068 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131089
131071 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131089
131076 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131089
131081 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,151546
131085 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131089
131089 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131076:CD,131081:CD,131085:JM,131089
131099 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,131107:CD,131121:CD,131125
131107 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131125
131104 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131125
131112 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131125
131117 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,151724
131121 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131125
131125 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131112:CD,131117:CD,131121:JM,131125
131135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,131143:CD,131157:CD,131161
131143 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131161
131140 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131161
131148 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131161
131153 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,151762
131157 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131161
131161 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131148:CD,131153:CD,131157:JM,131161
131171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,131179:CD,131193:CD,131197
131179 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131197
131176 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131197
131184 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131197
131189 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,151791
131193 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131197
131197 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131184:CD,131189:CD,131193:JM,131197
131207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,131215:CD,131229:CD,131233
131215 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131233
131212 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131233
131220 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131233
131225 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,151808
131229 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131233
131233 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131220:CD,131225:CD,131229:JM,131233
131243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,131251:CD,131265:CD,131269
131251 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131269
131248 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131269
131256 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131269
131261 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,151837
131265 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131269
131269 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131256:CD,131261:CD,131265:JM,131269
131279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,131287:CD,131301:CD,131305
131287 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131305
131284 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131305
131292 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131305
131297 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,151873
131301 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131305
131305 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131292:CD,131297:CD,131301:JM,131305
131315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,131323:CD,131337:CD,131341
131323 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131341
131320 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131341
131328 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131341
131337 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131341
131341 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131328:CD,131337:JM,131341
131351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,131359:CD,131373:CD,131377
131359 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131377
131356 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131377
131364 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131377
131373 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131377
131377 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131364:CD,131373:JM,131377
131387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,131395:CD,131409:CD,131413
131395 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,131413
131392 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,131413
131400 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,131413
131405 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,151933
131409 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,131413
131413 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,131400:CD,131405:CD,131409:JM,131413
131423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,131433:CD,131449:CD,131453
131430 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,131453
131433 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,131453
131438 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,131453
131449 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,131453
131453 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,131438:CD,131449:JM,131453
131471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,131479:CD,131483:CD,131492:CD,131500:CD,131507:CD,131518
131479 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,131483:CL,101962
131483 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
131492 :: CALL :: call :: V :: v10.setTitle(v12)::CL,107563
131500 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,107523
131507 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,101971
131518 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,101951
131661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,131665:CD,131669:CD,131714:CD,131718:CD,131722:CD,131723:CD,131727:CD,132330:CD,132334:CD,132335:CD,132401:CD,132405:CD,132407
131665 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,131736:JM,132334:JM,131750:JM,132329:JM,132323:JM,132405
131669 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
131677 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,152203
131682 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,131686:CL,152220
131686 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,131690:CD,131695:CD,131701:CD,131705
131690 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,152203
131695 :: CALL :: call :: Z :: v22 = v5.add(v20)::
131701 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
131705 :: CALL :: call :: Z :: v26 = v3.add(v24)::
131710 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,132407
131714 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,131722:CL,54721
131718 :: CALL :: call :: I :: v12 = v10.size()::JM,131722
131722 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,131723:CD,131677:CD,131682:CD,131686:CD,131710:CD,131714:CD,131718:CD,132407
131723 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,132323
131727 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,131736:JM,132334
131732 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,131736:JM,132334
131736 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,131755
131737 :: CALL :: call :: I :: v40 = v38.intValue()::JM,131755
131741 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,131750:JM,132329
131746 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,131750:JM,132329
131750 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,131755
131751 :: CALL :: call :: I :: v49 = v47.intValue()::JM,131755
131755 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,131760:CD,131768:CD,131773:CD,131777:CD,131785:CD,131795:CD,131801:CD,131806:CD,132325:CD,132329
131760 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,152203
131768 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,152203
131773 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
131777 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
131785 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,152271
131795 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,152271
131801 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,131806:CL,152602
131806 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,131807:CD,131812:CD,131838:CD,131843
131807 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,131812:CL,152602
131812 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,131813:CD,131818:CD,131823:CD,131827:CD,131831:CD,131838:CD,131843:CD,131919:CD,131923:CD,131927:CD,131931:CD,131935:CD,131936:CD,131940:CD,131941:CD,131942:CD,131943:CD,131944:CD,131945:CD,131946:CD,131947:CD,131948:CD,131969:CD,131977:CD,131987:CD,131995:CD,132005:CD,132013:CD,132029:CD,132034:CD,132039:CD,132044:CD,132052:CD,132053:CD,132236:CD,132237:CD,132315:CD,132319:CD,132323:CD,132408:CD,132409:CD,132410
131813 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,132408:JM,131823:CL,152618
131818 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,131827:JM,132409:CL,152618
131823 :: CALL :: call :: I :: v78 = v74.getLength()::JM,132408:JM,131823
131827 :: CALL :: call :: I :: v80 = v76.getLength()::JM,131827:JM,132409
131831 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,132410:CL,152643
131838 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,131843:CL,152683
131843 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,131844:CD,131849:CD,131875:CD,131880
131844 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,131849:CL,152683
131850 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,131860:JM,132408:CL,152699
131849 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,131850:CD,131855:CD,131860:CD,131864:CD,131868:CD,131875:CD,131880:CD,131919:CD,131923:CD,131927:CD,131931:CD,131935:CD,131936:CD,131940:CD,131941:CD,131942:CD,131943:CD,131944:CD,131945:CD,131946:CD,131947:CD,131948:CD,131969:CD,131977:CD,131987:CD,131995:CD,132005:CD,132013:CD,132029:CD,132034:CD,132039:CD,132044:CD,132052:CD,132053:CD,132236:CD,132237:CD,132315:CD,132319:CD,132323:CD,132408:CD,132409:CD,132410
131855 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,131864:JM,132409:CL,152699
131860 :: CALL :: call :: I :: v92 = v88.getLength()::JM,131860:JM,132408
131864 :: CALL :: call :: I :: v94 = v90.getLength()::JM,131864:JM,132409
131868 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,132410:CL,152724
131875 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,131880:CL,152764
131880 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,131881:CD,131886:CD,132325:CD,132329
131881 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,131886:CL,152764
131886 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,131887:CD,131892:CD,131897:CD,131901:CD,131905:CD,131919:CD,131923:CD,131927:CD,131931:CD,131935:CD,131936:CD,131940:CD,131941:CD,131942:CD,131943:CD,131944:CD,131945:CD,131946:CD,131947:CD,131948:CD,131969:CD,131977:CD,131987:CD,131995:CD,132005:CD,132013:CD,132029:CD,132034:CD,132039:CD,132044:CD,132052:CD,132053:CD,132236:CD,132237:CD,132315:CD,132319:CD,132323:CD,132325:CD,132329:CD,132408:CD,132409:CD,132410
131887 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,132408:JM,131897:CL,152780
131892 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,132409:JM,131901:CL,152780
131897 :: CALL :: call :: I :: v106 = v102.getLength()::JM,132408:JM,131897
131901 :: CALL :: call :: I :: v108 = v104.getLength()::JM,132409:JM,131901
131905 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,132410:CL,152805
131919 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,131935:CL,152845
131923 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,131943:CL,152881
131927 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,131946:CL,152928
131931 :: CALL :: call :: I :: v123 = v113.getLength()::JM,131931:JM,131935
131935 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,131941:JM,131936:JM,131940
131936 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,131936:JM,131940
131942 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,131969:DD,132052:DD,132236:JM,132277:CF,131943
131943 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,131945:CF,131944
131940 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,131942:CF,131941
131941 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,131942
131946 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,131948:CF,131947
131947 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,131948
131944 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,131945
131945 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,131987:DD,132054:CF,131946
131948 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,132005:DD,132056
131969 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,131969
131977 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
131987 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,131987
131995 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
132005 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,132005
132013 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
132029 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
132034 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,132034
132039 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
132044 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
132054 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,132055
132055 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,132056:CD,132057
132052 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,132053
132053 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,132054:CD,132055
132056 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,132057
132057 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,132062:CD,132067:CD,132214
132062 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,132067
132067 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,132072:CD,132077:CD,132136:CD,132141:CD,132142
132072 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,132077
132077 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,109745:JM,109738:CD,132098:CD,132102:CD,132107:CD,132115:CD,132125:CD,132136:CD,132141:CD,132142
132098 :: CALL :: call :: V :: v196.addChain(v52)::CL,124859
132102 :: CALL :: call :: V :: v196.addChain(v55)::CL,124859
132107 :: CALL :: call :: V :: v196.setMolId(v290)::CL,124921
132115 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
132125 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
132136 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,132141
132142 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,132163:CD,132169:CD,132177:CD,132200:CD,132208
132141 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,132142
132163 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
132169 :: CALL :: call :: V :: v226.addChain(v52)::CL,124859
132177 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
132200 :: CALL :: call :: V :: v214.addChain(v55)::CL,124859
132208 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
132214 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,152999
132236 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,132237
132237 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,132257:CD,132261:CD,132269:CD,132277:CD,132292:CD,132297:CD,132302:CD,132307:JM,132323
132257 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,132257
132261 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
132269 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
132277 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,132277
132292 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
132297 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,132297
132302 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
132307 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
132315 :: CALL :: call :: I :: v284 = v30.size()::JM,132323
132319 :: CALL :: call :: I :: v286 = v3.size()::JM,132323
132323 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,132325:CD,132329
132325 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,131750:JM,132329
132330 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,131736:JM,132334
132329 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,131746:CD,131750:CD,131751:CD,131755:CD,132330:CD,132334:JM,132329
132334 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,131732:CD,131736:CD,131737:CD,131741:CD,132325:CD,132329:JM,132334
132335 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,132405
132340 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,132405
132352 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,152203
132361 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,132366
132366 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,109745:JM,109738:CD,132382:CD,132387:CD,132395
132382 :: CALL :: call :: V :: v316.addChain(v304)::CL,124859
132387 :: CALL :: call :: V :: v316.setMolId(v325)::CL,124921
132395 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
132401 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,132405
132407 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,131710:DD,131722
132405 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,132340:CD,132352:CD,132361:CD,132366:CD,132401:JM,132405
132410 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,131931:JM,131935:JM,131936:JM,131940:JM,132034:JM,132257:JM,132297
132408 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,132409:DD,131944
132409 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,132410:DD,131947
132708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,132709:CD,132712:CD,132716:CD,132720:CD,132753:CD,132757:CD,132758:JM,132729
132709 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,117381
132712 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,132739:JM,132746:DD,132758
132716 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,132757:JM,132729
132720 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,132757:JM,132729
132725 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,132757:JM,132729
132730 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,132739:JM,132746
132729 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,132740:JM,132739:JM,132746
132735 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,132739:JM,132746
132739 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,132740
132742 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,132739:JM,132746
132740 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,132742:CD,132746:CD,132759:JM,132739
132746 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,132759:CD,132735:CD,132739:CD,132740:JM,132746
132747 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,132748:JM,132757:JM,132729
132748 :: CALL :: call :: Z :: v25 = v3.add(v14)::
132753 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,132757:JM,132729
132758 :: NORM :: compound :: Ljava/util/List :: return v3::DD,132709
132759 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,132747
132757 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,132725:CD,132729:CD,132730:CD,132742:CD,132746:CD,132747:CD,132753:CD,132759:JM,132757:CF,132758
132785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,132790:CD,132825:CD,132829:CD,132833:CD,132834:CD,132838:CD,132910:JM,132843
132790 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,132838:JM,132908
132798 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,152203
132803 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,132807:CL,152220
132807 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,132811:CD,132816:CF,132821
132811 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,152203
132816 :: CALL :: call :: Z :: v21 = v4.add(v19)::
132821 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,132910
132825 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,132833:CL,54721
132829 :: CALL :: call :: I :: v11 = v9.size()::JM,132833
132834 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,132838
132833 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,132798:CD,132803:CD,132807:CD,132821:CD,132825:CD,132829:CD,132910:JM,132838
132838 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,132839:CD,132843:CD,132859:CD,132860:CD,132904:CD,132908:CD,132911
132839 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,132843
132843 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,132849:CF,132859
132849 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
132859 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,132911:JM,132908
132860 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,132908
132865 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,132908
132870 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,132843
132874 :: CALL :: call :: V :: v44.addChain(v43)::CL,124859
132878 :: CALL :: call :: V :: v44.setMolId(v58)::CL,124921
132888 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
132898 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,132911:JM,132843
132899 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,132843
132904 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,132908
132910 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,132821:DD,132833
132911 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,132908:DD,132898
132908 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,132865:CD,132870:JM,109745:JM,109738:CD,132874:CD,132878:CD,132888:CD,132898:CD,132899:CD,132904:CD,132911:JM,132908
137106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,137107:CD,137111:CD,137115:CD,137119:CD,137124
137107 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,118283
137111 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,137124
137115 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,137124
137119 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,137124
137126 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,137130:CL,153407
137124 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,137125:CD,137126:CD,137130:CD,137134:CD,137138:CD,137143:CD,137270
137125 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,137107
137130 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,137131
137131 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,153431
137134 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,137138:CL,153407
137138 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,137270:CD,137139
137139 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,137270:CL,153520
137143 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,137144:JM,100908:JM,162723:JM,153968:JM,162730:JM,162716:CD,137165:CD,137169:CD,137170:CD,137179:CD,137187:CD,137204:CD,137259:CD,137264
137144 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,153828
137165 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,100957
137170 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
137169 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,137170
137179 :: CALL :: call :: V :: v28.parse(v33)::CL,100974
137187 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,137204:CL,153988
137204 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,137107
137259 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,137264:CL,154022
137264 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,137107
137270 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,137143
139710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,139717:CD,139754
139714 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,139717
139718 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
139717 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,139718:CD,139725:CD,139730
139725 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
139730 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
139754 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
139778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,139779:CD,139785
139779 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,170083:JM,170080:JM,170100:JM,170092
139782 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,139785
139787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,139788:CD,139794
139785 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,139779
139791 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,139794
139788 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,120499:JM,120495:JM,120494:JM,170064:JM,170065:JM,170070
139794 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139788
139796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,139797:CD,139803
139797 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,120679:JM,120689
139803 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139797
139800 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,139803
139814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,139819
139819 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
139825 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,139846:CD,139852:CD,139873:CD,139879:CD,139900:CD,139906
139846 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
139852 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
139873 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
139879 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
139900 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
139906 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
139942 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,121270
139941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,139942:CD,139945:CD,139949:CD,139954:CD,140105:CD,140106
139945 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139949 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139954 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,139956:CD,139961:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,140031:JM,139996
139956 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139963 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139961 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,139963:CD,139968:CD,140106:JM,140066:JM,140003:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139970 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139968 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,139970:CD,139975:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139975 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,139977:CD,139982:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139977 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139982 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,139984:CD,139989:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139984 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139991 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139989 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,139991:CD,139996:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031
139998 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
139996 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,139998:CD,140003:CD,140106:JM,140066:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140003 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,140005:CD,140010:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140005 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140010 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,140012:CD,140017:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140012 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140019 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140017 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,140019:CD,140024:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,139961:JM,140031:JM,139996
140026 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140024 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,140026:CD,140031:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,139996
140031 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,140033:CD,140038:CD,140106:JM,140066:JM,140003:JM,139968:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140033 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140038 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,140040:CD,140045:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140040 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140047 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140045 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,140047:CD,140052:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140054 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140052 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,140054:CD,140059:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140024:JM,139961:JM,140031:JM,139996
140059 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,140061:CD,140066:CD,140106:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140061 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140066 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,140068:CD,140073:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140068 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140075 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140073 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,140075:CD,140080:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140082 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140087:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140080 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,140082:CD,140087:CD,140106:JM,140066:JM,140003:JM,139968:JM,140038:JM,139975:JM,140010:JM,140073:JM,139982:JM,140045:JM,139954:JM,140080:JM,140017:JM,140052:JM,139989:JM,140059:JM,140024:JM,139961:JM,140031:JM,139996
140087 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,140089:CD,140094:CD,140106
140089 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,140094
140094 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,140106:CD,140095:CD,140101
140095 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,140106
140101 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,140106
140106 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,140105
140105 :: NORM :: compound :: I :: return v94::DD,139942
140225 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,140245
140245 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
140352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,140357
140357 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
140363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,140368
140368 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
140383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,140388
140388 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
140394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,140399
140399 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
140405 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,140410
140410 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
140460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,140465
140465 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
140471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,140476
140476 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
140482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,140487
140487 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
140493 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,140498
140498 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
140504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,140509
140509 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
140515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,140520
140520 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
140526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,140531
140531 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
140537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,140542
140542 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
140548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,140553
140553 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
140559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,140564
140564 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
140570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,140575
140575 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
140581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,140586
140586 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
140592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,140597
140597 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
140603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,140608
140608 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
140614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,140619
140619 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
140625 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,140630
140630 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
140636 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,140641
140641 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
140647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,140652
140652 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
140658 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,140663
140663 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
140669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,140674
140674 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
140680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,140685
140685 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
140691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,140696
140696 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
140702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,140707
140707 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
140713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,140718
140718 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
140724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,140729
140729 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
140735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,140740
140740 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
140746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,140751
140751 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
140757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,140762
140762 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
140768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,140773
140773 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
140779 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,140784
140784 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
140790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,140795
140795 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
140801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,140806
140806 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
140812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,140817
140817 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
140823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,140828
140828 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
140834 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,140839
140839 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
140845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,140850
140850 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
140856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,140861
140861 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
140867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,140872
140872 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
140878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,140883
140883 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
140899 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
140896 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
140908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,140913
140913 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
140919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,140920:CD,140926
140923 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,140926
140920 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
140926 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,140920
140928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,140933
140933 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
140982 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,140983:CD,140988:CD,140989:CD,140993:CD,141326:CD,141330:CD,141335:CD,141336:JM,141078:JM,141000:JM,141177
140983 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,124519
140988 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,140993
140989 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,140993
140995 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,141330:JM,141078:JM,141000:JM,141177
140993 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,141331
141000 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,141079:DD,141126:DD,141198
141001 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,141005:CL,156863
141005 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,141011:CD,141015:CD,141019:CD,141325:CD,141326:CD,141330:CD,141334:CD,141335:CD,141336
141011 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,141072:JM,141333:JM,141019:JM,141032:CL,156880
141015 :: CALL :: call :: I :: v23 = v21.intValue()::JM,141072:JM,141333:JM,141019:JM,141032
141019 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,141031:CD,141032:CD,141332
141031 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141032 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,141332:CD,141033:CD,141039:CD,141043:CD,141047:CD,141052:CD,141071:CD,141073:CD,141333:JM,141330:JM,141078:JM,141000:JM,141177
141033 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,141330:JM,141078:JM,141000:JM,141177
141039 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,141052:CL,62861
141043 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,141052:CL,62861
141047 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,141052
141052 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,141070:CD,141071:CD,141073:CD,141332:CD,141333
141070 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141071 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,141333:CD,141072
141074 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,141330:JM,141078:JM,141000:JM,141177
141072 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,141333
141073 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,141074:CD,141078:CD,141173:CD,141177:JM,141330:JM,141000
141078 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,141079:CD,141080:CD,141173:CD,141177:JM,141330:JM,141078:JM,141000
141079 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,141080
141083 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
141080 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,141083:CD,141088:CD,141093:CD,141098:CD,141102:CD,141107:CD,141112:CD,141117:CD,141125:CD,141126:CD,141127:CD,141334
141088 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
141093 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
141098 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,141330:JM,141078:JM,141000:JM,141177
141102 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,141330:JM,141000:JM,141177
141107 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
141112 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
141117 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
141126 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,141127
141127 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,141334:CD,141130:CD,141135:CD,141140:CD,141145:CD,141149:CD,141154:CD,141159:CD,141164:CD,141172:CD,141325:CD,141326:CD,141330:CD,141335:CD,141336
141125 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
141135 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
141140 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
141145 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,141330:JM,141078:JM,141000:JM,141177
141149 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,141330:JM,141000:JM,141177
141154 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
141159 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
141164 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
141172 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141173 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,141330:JM,141078:JM,141000:JM,141177
141177 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,141180:CD,141185:CD,141190:CD,141198:CD,141199:CD,141201:CD,141207:CD,141211:CD,141215:CD,141219:CD,141223:CD,141228:CD,141334:JM,141330:JM,141078:JM,141000:JM,141177
141180 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
141185 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
141190 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
141198 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,141199
141199 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,141334:CD,141200:CD,141325:CD,141326:CD,141330:CD,141335:CD,141336
141200 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141201 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,141330:JM,141078:JM,141000:JM,141177
141207 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,141228:CL,62861
141211 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,141228
141215 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,141228:CL,62861
141219 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,141228
141223 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,141228
141231 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
141228 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,141231:CD,141236:CD,141241:CD,141246:CD,141251:CD,141256:CD,141261:CD,141269:CD,141270:CD,141280:CD,141325:CD,141326:CD,141330:CD,141334:CD,141335:CD,141336
141236 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
141241 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
141246 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
141251 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
141256 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
141261 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
141270 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
141269 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,140983
141280 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
141326 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,141330:JM,141078:JM,141000:JM,141177
141325 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,141336:CF,141335
141330 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,140995:CD,141000:CD,141001:CD,141005:CD,141331:JM,141330:JM,141078:JM,141177
141331 :: NORM :: compound :: Ljava/util/List :: return v8::DD,140983
141334 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,141335:CF,141325
141335 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,141336:DD,141332:DD,141334
141332 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,141071:DD,141073:DD,141334
141333 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,141078:DD,141177:JM,141330:JM,141000:CF,141073
141336 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,141078:JM,141000:JM,141177:DD,141325:DD,141330
141446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,141454:CD,141459:CD,141463
141454 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,141463:CL,67199
141459 :: CALL :: call :: I :: v9 = v7.size()::JM,141463
141463 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,141495:CD,141501
141495 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,141501:CL,156889
141502 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,102925
141501 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,141502
141526 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,124655
141525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,141526:CD,141531:CD,141535:CD,141539:CD,141545:CD,141553:CD,141558:CD,141562:CD,141567:CD,141572:CD,141577:CD,141587:CD,141592:CD,141596:CD,141601:CD,141606:CD,141611:CD,141619:CD,141624:CD,141641:CD,141642:CD,141645:CD,141651:CD,141652:CD,141660:CD,141664
141531 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
141535 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
141539 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,152271
141545 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,152271
141553 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
141558 :: CALL :: call :: I :: v19 = v11.length()::
141562 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
141567 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
141572 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
141577 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
141587 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
141592 :: CALL :: call :: I :: v35 = v13.length()::
141596 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
141601 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
141606 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
141611 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
141619 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141624 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141642 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141641 :: NORM :: compound :: Z :: return #(1)::DD,141526
141645 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141651 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141652 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141660 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,141664:JM,141665:JM,141702:JM,141652:JM,141669:JM,141660
141664 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,141665:CD,141669:CD,141694:JM,141702
141665 :: CALL :: call :: I :: v68 = v65.getLength()::JM,141665:JM,141702:JM,141669
141669 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,141694:CD,141697:CD,141702:CD,141707:CD,141712:CD,141720:CD,141729
141694 :: NORM :: compound :: Z :: return #(1)::DD,141526
141697 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
141702 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,141665:JM,141702:JM,141669
141707 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
141712 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
141720 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,141729:CL,157286
141729 :: NORM :: compound :: Z :: return v82::DD,141526
141794 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,124844
141793 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,141794:CD,141799:CD,141804:CD,141809:CD,141813:CD,141814:CD,141818:CD,141823:CD,141824:CD,141825:CD,141831:CD,141836:CD,141841:CD,141849:CD,141854
141799 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,141813:CL,117420
141804 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,141813
141809 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,141813
141814 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,141823:CL,80865
141813 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,141824
141818 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,141823
141823 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,141809:CD,141813:CD,141814:CD,141818:CD,141825:CF,141824
141824 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,141794
141825 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,141813
141831 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
141836 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,141823
141841 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
141846 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
141849 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
141854 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
141940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,141941:CD,141956:CD,141961:CD,141966:CD,141974:CD,141978:CD,141983:CD,141988:CD,141997:CD,142003:CD,142007:CD,142012:CD,142016:CD,142021:CD,142025:CD,142030:CD,142031:CD,142032:CD,142038:CD,142043:CD,142048:CD,142053:CD,142058
141941 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,124954
141956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
141961 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,142030
141966 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
141971 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
141974 :: CALL :: call :: I :: v52 = v50.size()::
141978 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
141983 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
141988 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
141997 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,141793
142003 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,142016:CL,62566
142007 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,142016
142012 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,142016
142016 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,142031
142021 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,142030:CL,80803
142025 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,142030
142030 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,142012:CD,142016:CD,142021:CD,142025:CD,142032:CF,142031
142031 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,141941
142032 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,142016
142038 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
142043 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,142030
142048 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
142053 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,142030
142058 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,142030
142087 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,142088:CD,142092:CD,142099:CD,142108:CD,142113:CD,142117:CD,142121:CD,142126:CD,142127:CD,142129:CD,142134:CD,142139:CD,142147:CD,142152
142088 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,147151
142092 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,80803
142099 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
142108 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,142113
142114 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,142126
142113 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,142126
142117 :: CALL :: call :: I :: v31 = v28.intValue()::JM,142126
142121 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,142126
142126 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,142127
142127 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,142088
142129 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
142134 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
142139 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
142147 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
142144 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
142152 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
142171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,142176:CD,142181:JM,142192:JM,142246
142176 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,142181:CL,118145
142183 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,142192:CL,77037
142181 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,142183:CD,142187:CD,142192
142187 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,142192:JM,142246
142194 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,142197
142192 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,142197
142198 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,142205
142197 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,142201:CD,142205
142201 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,142205
142207 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,142252
142205 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,142210:CD,142248:CD,142252
142210 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,142252
142215 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,142252
142220 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,142228:CL,120746
142224 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,142228
142230 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,142235:CL,118145
142228 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,142230:CD,142235:CD,142248:CD,142252
142235 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,142237:CD,142241:CD,142246:CD,142248:CD,142252
142237 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,142246:CL,77037
142241 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,142246:JM,142192
142246 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,142248:CD,142252
142248 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,142252
142252 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,142215:CD,142220:CD,142224:CD,142228:JM,142252
142298 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
142301 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
142307 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,142308
142304 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
142308 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,157902
142376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,142384
142381 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
142384 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
142393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,142397:CD,142398:CD,142406:CD,142411:CD,142415:CD,142416:CD,142424:CD,142432:CD,142437:CD,142442:CD,142446:CD,142447:CD,142455:CD,142463:CD,142468:CD,142473:CD,142477:CD,142478:CD,142486:CD,142494:CD,142499:CD,142504:CD,142508:CD,142509:CD,142517:CD,142522:CD,142526:CD,142527:CD,142535:CD,142543:CD,142548:CD,142553:CD,142557:CD,142558:CD,142566:CD,142574:CD,142579:CD,142584:CD,142588:CD,142589:CD,142597:CD,142605:CD,142610:CD,142615:CD,142619:CD,142620:CD,142628:CD,142633
142398 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
142397 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
142406 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
142411 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
142415 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
142416 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
142424 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
142429 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
142432 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
142437 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
142442 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
142446 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
142447 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
142455 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
142463 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
142460 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
142468 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
142473 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
142478 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
142477 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
142486 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
142491 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
142494 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
142499 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
142504 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
142508 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
142509 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
142517 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
142522 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
142526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
142527 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
142535 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
142543 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
142540 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
142548 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
142553 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
142558 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
142557 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
142566 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
142571 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
142574 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
142579 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
142584 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
142588 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
142589 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
142597 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
142602 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
142605 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
142610 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
142615 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
142619 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
142620 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
142628 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
142633 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
142690 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,125959
142689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,142690:CD,142693:CD,142698
142693 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,142698:CL,55534
142698 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142690
142702 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,125960
142701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,142702:CD,142705:CD,142710
142705 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,142710:CL,55534
142710 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142702
142714 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,126112
142713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,142714:CD,142717:CD,142722
142717 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,142722:CL,55534
142722 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142714
142726 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,126113
142725 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,142726:CD,142729:CD,142734
142729 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,142734:CL,55534
142734 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,142726
142738 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,126332
142737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,142738:CD,142744
142741 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,142744
142746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,142747:CD,142753
142747 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,126461:JM,126470:JM,126475:JM,157975:JM,157913
142744 :: NORM :: compound :: Ljava/util/List :: return v3::CF,142738
142750 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,142753
142755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,142756:CD,142762:CD,142766
142753 :: NORM :: compound :: Ljava/util/List :: return v3::CF,142747
142759 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,142766
142756 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,126589:JM,126695
142762 :: CALL :: call :: I :: v5 = v3.size()::JM,142766
142766 :: NORM :: compound :: I :: return v5::CF,142756
142768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,142769:CD,142776:CD,142781:CD,142782
142769 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,145516
142773 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,142781
142776 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,142781
142782 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,142769
142781 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,142782
145274 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,127914:JM,128356:JM,148512:JM,148900
145273 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,145274:CD,145297:CD,145301:CD,145303:JM,145284:JM,145294
145279 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,145284:JM,145301:JM,145294
145284 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,145295
145285 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,145294:CL,80865
145289 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,145284:JM,145301:JM,145294
145294 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,145295:CD,145296:CD,145297:CD,145301:CD,145303
145295 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,145274
145296 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,145303
145297 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,145284:JM,145301:JM,145294
145302 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,145274
145303 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,145284:JM,145294:DD,145296:DD,145301
145301 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,145279:CD,145284:CD,145285:CD,145289:CD,145294:CD,145302:JM,145301
145318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,145326:CD,145347:CD,145351:JM,145345
145323 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,145351
145326 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,145351
145331 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,145351
145336 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,145345:CL,80865
145340 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,145345
145347 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,145351
145345 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,145347:CD,145351
145351 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,145352:CD,145331:CD,145336:CD,145340:CD,145345:JM,102805:JM,102793:JM,102812:JM,102798:CD,145356:CD,145363:JM,145351
145352 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
145356 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,102836
145363 :: CALL :: call :: Z :: v22 = v20.add(v17)::
145360 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
145387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,102805:JM,102793:JM,102812:JM,102798:CD,145399:CD,145407:CD,145414:CD,145421:CD,145428:CD,145451:CD,145455:CD,145459
145399 :: CALL :: call :: V :: v3.setChainID(v6)::CL,102836
145407 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,139814
145414 :: CALL :: call :: V :: v3.setCompound(v11)::CL,117398
145421 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,146480
145425 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,145455
145428 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,145455
145433 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,145455
145438 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,55052:CL,55194:CL,55369
145443 :: CALL :: call :: V :: v3.addGroup(v26)::CL,102983
145447 :: CALL :: call :: V :: v26.setChain(v3)::CL,107304
145451 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,145455
145455 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,145433:CD,145438:CD,145443:CD,145447:CD,145451:JM,145455
145459 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,145460:CD,145467:CD,145506:CD,145510:CD,145511
145456 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,145459
145460 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
145467 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,145510
145464 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,145510
145472 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,145510
145480 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,145485:CL,159008
145486 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,145516:CL,142768
145485 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,145486:CD,145492:CD,145496:CD,145516
145492 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,145496:CL,55052:CL,55194:CL,55369
145496 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,145516
145497 :: CALL :: call :: V :: v50.setChain(v3)::CL,107304
145501 :: CALL :: call :: Z :: v53 = v31.add(v50)::
145506 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,145510
145510 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,145472:CD,145480:CD,145485:CD,145497:CD,145501:CD,145506:CD,145516:JM,145510
145511 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,102925
145516 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
145568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,145569:CD,145573:JM,102805:JM,102793:JM,102812:JM,102798:CD,145577:CD,145581:CD,145654:CD,145658:CD,145659:CD,145660
145569 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
145573 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,145659
145577 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,145658:CL,62566
145581 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,145658
145586 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,145658
145591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,145660
145622 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,145623:CD,145628:CD,145629
145623 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,145628:CL,40573
145628 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,145629:CD,145636:CD,145641:CD,145646
145629 :: CALL :: call :: V :: v4.addGroup(v16)::CL,102983
145636 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
145641 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
145646 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
145654 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,145658
145658 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,145586:CD,145591:JM,106760:JM,106763:JM,106766:CD,145622:CD,145654:CD,145660:JM,145658:CF,145659
145659 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,145569
145660 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,145658:DD,145622
145689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,145694:CD,145698:CD,145714:CD,145722:CD,145854:CD,145858:CD,145862:CD,145944:CD,145948:CD,145952:CD,146034:CD,146038:CD,146042:CD,146047:CD,146100:JM,145970:JM,145745:JM,145975:JM,145876:JM,145736:JM,145880:JM,145966:JM,145740:JM,145885
145694 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,145970:JM,145745:JM,145975:JM,146100:JM,145876:JM,145736:JM,145880:JM,145694:JM,145966:JM,145740:JM,145885
145698 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,145970:JM,145745:JM,145975:JM,146100:JM,145880:JM,145740:JM,145885
145714 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145756:JM,145757:CL,159056
145719 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,145858:JM,145731
145722 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,145858:JM,145731
145727 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,145858:JM,145731
145731 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,145745:JM,145732:JM,145740:JM,145832
145732 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,145745:JM,145732:JM,145740
145736 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,145970:JM,145745:JM,145975:JM,145876:JM,146100:JM,145736:JM,145880:JM,145694:JM,145966:JM,145740:JM,145885
145740 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,145745:JM,145740:JM,145970:JM,145975:JM,146100:JM,145880:JM,145885
145745 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,145750:CD,145755
145750 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,145755:CL,159116
145755 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,145756:JM,145858:JM,145731
145756 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,145757:CD,145761:CD,145766:JM,145986:JM,145987:JM,145824:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145858:JM,145731
145757 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
145761 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,145906:JM,146066:JM,145824:JM,145761:JM,145809:JM,145766:JM,145814:JM,145991:JM,145819:JM,145996:JM,145901:JM,146061
145766 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,145767:CD,145777:CD,145784:CD,145790:CD,145805:CD,145809:CD,145814:JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145901:JM,146061:JM,145906:JM,146066:JM,145815:JM,145819:JM,145757
145767 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,159156
145777 :: CALL :: call :: V :: v53.setMolName(v55)::CL,140460
145784 :: CALL :: call :: V :: v57.addCompound(v53)::CL,159246
145790 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
145805 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
145809 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,145906:JM,146066:JM,145824:JM,145809:JM,145761:JM,145814:JM,145766:JM,145991:JM,145819:JM,145996:JM,145901:JM,146061
145814 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,145815:CD,145819:CD,145824:JM,145986:JM,145987:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145757:JM,145858:JM,145731
145815 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
145819 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,145906:JM,146066:JM,145824:JM,145761:JM,145809:JM,145766:JM,145814:JM,145991:JM,145819:JM,145996:JM,145901:JM,146061
145827 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
145824 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,145827:CD,145832:CD,145836:CD,145841:CD,145846:JM,145858:JM,145731
145832 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,145832
145836 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
145841 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
145846 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
145854 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,145858:JM,145731
145858 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,145727:CD,145731:CD,145732:CD,145736:CD,145740:CD,145745:CD,145854:JM,145858
145859 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,145871:JM,145948
145862 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,145871:JM,145948
145867 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,145871:JM,145948
145871 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,145872:JM,145880:JM,145885
145872 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,145872:JM,145880:JM,145885
145876 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,145970:JM,145745:JM,145975:JM,145876:JM,146100:JM,145736:JM,145880:JM,145694:JM,145966:JM,145740:JM,145885
145880 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,145880:JM,145885:JM,145970:JM,145745:JM,145975:JM,146100:JM,145740
145885 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,145890:CD,145895
145890 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,145895:CL,159116
145895 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,145896:JM,145871:JM,145948
145896 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,145897:CD,145901:CD,145906:JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,146056:JM,146057:JM,145996:JM,145805:JM,146061:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757:JM,145871:JM,145948
145897 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
145901 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,145906:JM,146066:JM,145824:JM,145761:JM,145809:JM,145766:JM,145814:JM,145991:JM,145819:JM,145996:JM,145901:JM,146061
145906 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,145907:CD,145917:CD,145924:CD,145930:JM,145871:JM,145948
145907 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,159272
145917 :: CALL :: call :: V :: v103.setMolName(v105)::CL,140460
145924 :: CALL :: call :: V :: v107.addCompound(v103)::CL,159246
145930 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
145944 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,145871:JM,145948
145948 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,145867:CD,145871:CD,145872:CD,145876:CD,145880:CD,145885:CD,145944:JM,145948
145949 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,146038:JM,145961
145952 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,146038:JM,145961
145957 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,146038:JM,145961
145962 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,145970:JM,145975:JM,145962
145961 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,145970:JM,145975:JM,145962
145966 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,145970:JM,145745:JM,145975:JM,145876:JM,146100:JM,145736:JM,145880:JM,145694:JM,145966:JM,145740:JM,145885
145970 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,145970:JM,145975:JM,145745:JM,146100:JM,145880:JM,145740:JM,145885
145975 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,145980:CD,145985
145980 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,145985:CL,159116
145986 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,145987:CD,145991:CD,145996:JM,145824:JM,145761:JM,145766:JM,146056:JM,145897:JM,146057:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757:JM,146038:JM,145961
145987 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
145985 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,145986:JM,146038:JM,145961
145991 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,145906:JM,146066:JM,145824:JM,145761:JM,145809:JM,145766:JM,145814:JM,145991:JM,145819:JM,145996:JM,145901:JM,146061
145996 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,145997:CD,146007:CD,146014:CD,146020:JM,146038:JM,145961
145997 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,159342
146007 :: CALL :: call :: V :: v138.setMolName(v140)::CL,140460
146014 :: CALL :: call :: V :: v142.addCompound(v138)::CL,159246
146020 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
146034 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,146038:JM,145961
146038 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,145957:CD,145961:CD,145962:CD,145966:CD,145970:CD,145975:CD,146034:JM,146038
146042 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,146047:CL,159116
146047 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,109745:JM,109738:CD,146052:CD,146056
146052 :: CALL :: call :: V :: v153.setMolId(v16)::CL,124921
146056 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,146057:CD,146061:CD,146066:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145897:JM,145996:JM,145805:JM,145901:JM,145906:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
146057 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145757
146061 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,146066:JM,145906:JM,145824:JM,145761:JM,145809:JM,145766:JM,145814:JM,145991:JM,145819:JM,145996:JM,146061:JM,145901
146066 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,146071:CD,146078
146071 :: CALL :: call :: V :: v153.setMolName(v161)::CL,140460
146078 :: CALL :: call :: V :: v163.addCompound(v153)::CL,159246
146100 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
146229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,146389:CD,146393:CD,146403
146243 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,62549
146251 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,146384
146248 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,146384
146256 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,146384
146261 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,146266:CL,124360
146266 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,146279:CD,146305:CD,146309:CD,146313:CD,146371:CD,146375:CD,146376:CD,146395:CD,146396:CD,146400:CD,146401:CD,146402
146279 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,146375
146284 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,62566
146288 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
146294 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,146298:CL,55052:CL,55194:CL,55369
146298 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
146299 :: CALL :: call :: Z :: v44 = v29.add(v42)::
146304 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,146396:CF,146395
146305 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,146313:CL,62566
146309 :: CALL :: call :: I :: v34 = v32.size()::JM,146313
146315 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
146313 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,146284:CD,146288:CD,146294:CD,146298:CD,146299:CD,146304:CD,146305:CD,146309:CD,146395:CD,146396
146321 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,146334:JM,146364:CL,62566
146325 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,146334:JM,146364
146330 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,146334:JM,146364
146334 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
146335 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,146352:CL,159392
146344 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,146352:CL,156880
146348 :: CALL :: call :: I :: v69 = v67.intValue()::JM,146352
146352 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,146397:CD,146353:CD,146360:CD,146364:CD,146398:CD,146399
146353 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
146360 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,146334:JM,146364
146366 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,62850
146364 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,146399:CD,146330:CD,146334:CD,146335:CD,146344:CD,146348:CD,146352:CD,146397:CD,146398:JM,146364
146365 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,146366:CF,146370
146370 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,146401:CF,146400
146371 :: CALL :: call :: I :: v49 = v29.size()::JM,146375
146375 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,146315:CD,146321:CD,146325:CD,146360:CD,146364:CD,146365:CD,146370:CD,146371:CD,146397:CD,146398:CD,146399:CD,146400:CD,146401
146376 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,102925
146380 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,146384
146384 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,146256:CD,146261:CD,146266:CD,146380:CD,146402:JM,146384:CF,146385
146385 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,146403
146389 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,146393:CL,103225
146395 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,146396:DD,146395:DD,146400
146393 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,146243:CD,146251:CD,146380:CD,146384:CD,146385:CD,146389:CD,146402:CD,146403
146398 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,146334:JM,146364:DD,146370:DD,146398
146399 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,146365
146396 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,146304:DD,146313
146397 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,146398:DD,146397:DD,146400
146402 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,146384:DD,146385:DD,146395:DD,146402
146403 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,146393:DD,146402
146400 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,146401:DD,146397:DD,146402
146401 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,146375:DD,146398
146471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,146472:CD,146478
146475 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,146478
146472 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,128191:JM,146567:JM,146892
146478 :: NORM :: compound :: Z :: return v3::CF,146472
146480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,146485
146485 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
146491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,146507:CD,146513
146507 :: CALL :: call :: V :: v3.makeBonds()::CL,112821
146513 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,159484
146525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,146532
146532 :: CALL :: call :: V :: addCharges(v3)::CL,112842
146537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,146710:CD,146714:CD,146718:CD,146722:CD,146763:CD,146767:CD,146771
146545 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,146705:CL,62549
146550 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,146705
146555 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,146705
146563 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,146567:CL,146471
146567 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,146575:CD,146580:CD,146589:CD,146594:CD,146769
146575 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,146580
146580 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,146769
146589 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,146594
146594 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,146769
146595 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,146608:CD,146615:CD,146620:CD,146770
146608 :: CALL :: call :: I :: v40 = parseInt(v32)::
146615 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,146620:CL,159116
146623 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
146620 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,146623:JM,109745:JM,109738:CD,146641:CD,146645:CD,146649:CD,146656:CD,146680:CD,146693:CD,146697:CD,146770
146641 :: CALL :: call :: V :: v51.setMolId(v40)::CL,124921
146645 :: CALL :: call :: V :: v51.addChain(v16)::CL,124859
146649 :: CALL :: call :: V :: v16.setCompound(v51)::CL,117398
146656 :: CALL :: call :: V :: v56.addCompound(v51)::CL,159246
146680 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
146693 :: CALL :: call :: V :: v43.addChain(v16)::CL,124859
146697 :: CALL :: call :: V :: v16.setCompound(v43)::CL,117398
146701 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,146705
146706 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,146771
146705 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,146555:CD,146563:CD,146567:CD,146595:CD,146701:CD,146769:CD,146770:JM,146705:CF,146706
146710 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,146714:CL,103225
146714 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,146545:CD,146550:CD,146701:CD,146705:CD,146706:CD,146710:CD,146770:CD,146771
146718 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,146767:CL,102088
146722 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,146767
146727 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,146767
146763 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,146767
146767 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,146727:CD,146763:JM,146767
146770 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,146705:DD,146706:DD,146770
146771 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,146714:DD,146770
146769 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,146595
146847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,146854:CD,146858:CD,146866:CD,146964:CD,146969:CD,146974:CD,146979:CD,146990:CD,146995:CD,146999:CD,147004:CD,147009:CD,147013:CD,147018:CD,147131:CD,147135:CD,147139:CD,147145:CD,147146
146854 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,146858:JM,147146:CL,102216
146858 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,147146:CF,146859
146859 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,147146
146863 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,146875:JM,147135
146866 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,146875:JM,147135
146871 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,146875:JM,147135
146875 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,146880:JM,147147:JM,146876:JM,146881:JM,147079:JM,147084:JM,147148:JM,146893:JM,146898:JM,146902:JM,146916:JM,146906:JM,146910:JM,146911:JM,147149
146876 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,146880:JM,147147:JM,146876
146880 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,147147
146881 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,146881:JM,147079:JM,147084
146888 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,146892:CL,146471
146892 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,146893:CD,146898:CD,147148
146893 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,147148:JM,146893
146898 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,146898:JM,147148
146902 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,146902
146906 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,146916:JM,146906:JM,146910:JM,146911:JM,147149
146910 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,147149:CD,146911:CD,146916
146911 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,146916:JM,146911:JM,147149
146916 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,147149
146920 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,146925:CL,124876
146926 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,146927:CD,146931
146927 :: CALL :: call :: I :: v45 = v40.length()::JM,146931:JM,146927
146925 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,147151:CD,146926:CD,146942:CD,146946:JM,106760:JM,106763:JM,106766:CD,146956
146931 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,146932:CD,146937
146932 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,146932
146937 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
146942 :: CALL :: call :: I :: v53 = parseInt(v34)::
146946 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
146956 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,147151:CL,142087
146964 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
146969 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
146974 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
146979 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
146990 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
146995 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
146999 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
147004 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
147009 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
147013 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
147018 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
147031 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,147032:CD,147052:CD,147056:CD,147057:CD,147066:CD,147070:CD,147075:CD,147079:CD,147084:CD,147125:CD,147152:CD,147153:CD,147154:CD,147155:JM,147041:JM,146875:JM,147135
147032 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,147056:JM,147041
147037 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,147056:JM,147041
147042 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,147051:CL,121092
147041 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,147152
147046 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,147051
147051 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,147152
147052 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,147056:JM,147041
147058 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,147153
147056 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,147037:CD,147041:CD,147042:CD,147046:CD,147051:CD,147052:CD,147152:JM,147056:CF,147057
147057 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,147153:CD,147058:JM,160129:CD,147062
147062 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,160152
147066 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,147155:JM,147070:CL,124959
147070 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,147155:CF,147071
147071 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,147155
147075 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,147079:JM,147084:CL,62861
147079 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,147079:JM,147084
147087 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
147084 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,147087:CD,147092:CD,147097:CD,147102:CD,147107:CD,147116:CD,147121
147092 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
147097 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
147102 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
147107 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
147116 :: CALL :: call :: Z :: v139 = v119.add(v94)::
147121 :: CALL :: call :: V :: v113.setGroups(v119)::CL,160163
147126 :: CALL :: call :: Z :: v142 = v9.add(v113)::
147125 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,147126:JM,146875:JM,147135
147131 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,146875:JM,147135
147135 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,146871:CD,146875:CD,146876:CD,146880:CD,146881:CD,146888:CD,146892:CD,146902:CD,146906:CD,146910:CD,146920:CD,146925:CD,147031:CD,147131:CD,147147:CD,147148:CD,147149:CD,147151:JM,147135
147139 :: CALL :: call :: V :: v143.setSites(v9)::CL,102225
147146 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,147056:JM,147041
147147 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,146881:JM,147079:JM,147084:JM,147051
147145 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
147151 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,147031
147148 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,146902
147149 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,146926:JM,146931:JM,146927:JM,146932
147154 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,147125
147155 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
147152 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,147056:JM,147041:DD,147057:DD,147152:DD,147153
147153 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,147154
147265 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
147272 :: CALL :: call :: V :: p0 $this .init()::CL,160174
147280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,147287:CD,147293:CD,147343:CD,147347:CD,147352:CD,147361:CD,147366:CD,147371
147287 :: CALL :: call :: V :: p0 $this .init()::CL,160174
147293 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,147347
147298 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,147347
147303 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
147311 :: CALL :: call :: V :: v15.setId(v18)::CL,140352
147335 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
147338 :: CALL :: call :: Z :: v30 = v28.add(v15)::
147343 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,147347
147347 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,147298:CD,147303:JM,140225:CD,147311:CD,147338:CD,147343:JM,147347
147352 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,160199
147361 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,160365
147366 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
147371 :: CALL :: call :: V :: v34.trimToSize()::
147404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,147408:CD,147415:CD,147643:CD,147648:CD,147649:CD,147658:CD,147662:CD,147663:CD,147667
147408 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,147667:JM,147679
147415 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,147424:JM,147662
147412 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,147424:JM,147662
147420 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,147424:JM,147662
147424 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,147425:JM,147429:JM,147434:JM,147648
147425 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,147425:JM,147429:JM,147434
147429 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,147429:JM,147434
147434 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,147436:CD,147632
147436 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
147632 :: CALL :: call :: Z :: v91 = v3.add(v19)::
147643 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,147648
147640 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,147648
147648 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
147649 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
147658 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,147424:JM,147662
147662 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,147420:CD,147424:CD,147425:CD,147429:CD,147434:CD,147658:JM,147662:JM,147667
147663 :: CALL :: call :: I :: v104 = v3.size()::JM,147667
147667 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,147675:CD,147679:CD,147680:CD,147686
147675 :: CALL :: call :: I :: v109 = v3.size()::JM,147679
147679 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
147680 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
147686 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,112561
147778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,147785
147782 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,147785
147785 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,147793:CD,147797:CD,147811
147793 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,147797:CL,160572
147797 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,147805
147805 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,160581
147811 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,160675
147840 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,147845
147845 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
147851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,147856
147856 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
147862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,147867
147867 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
147873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,147878
147878 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
147884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,147889
147889 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
147895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,147900
147900 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
147906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,147911
147911 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
147918 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,129808
147917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,147918:CD,147921:CD,147925:CD,147926:CD,147927:CD,147951:CD,147952:CD,147957:CD,147958:CD,147960:CD,147961
147921 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,147927:JM,147925
147926 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,147952:JM,147957:CF,147927
147927 :: EXPR :: assign :: I :: v8 = v4.length::DD,147951
147925 :: EXPR :: assign :: I :: v5 = v4.length::CF,147926
147929 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,147938:JM,147943
147938 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,147938:JM,147943
147937 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,147938:JM,147943
147943 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,147944
147944 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,147959:CD,147949
147950 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,147961:CF,147960
147951 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,147937:CD,147938:CD,147943:CD,147944:CD,147950:CD,147959:CD,147960:CD,147961:JM,147952:JM,147957
147949 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,147959
147952 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,147952:JM,147957
147958 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,147918
147959 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,147960:CF,147950
147957 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,147958
147960 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,147961:DD,147949:JM,147952:JM,147957:DD,147959
147961 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,147950:DD,147951
148094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,148102:CD,148107:CD,148112:CD,148117:CD,148121:CD,148126:CD,148131:CD,148136:CD,148141:CD,148145:CD,148146:CD,148154:CD,148159:CD,148163:CD,148168:CD,148172:CD,148177:CD,148204:JM,148183:JM,148184
148102 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
148107 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148112 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,148177:JM,148183
148117 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148121 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
148126 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
148131 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148136 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,148177:JM,148183
148141 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
148146 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
148145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
148154 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
148159 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148163 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
148168 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
148172 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148178 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,148177:JM,148183:JM,148117:JM,148184:JM,148159:JM,148204
148177 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,148178:CD,148183:JM,148177:JM,148117:JM,148184:JM,148159:JM,148204
148183 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,148184
148184 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,148185
148185 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
148204 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,148205
148205 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
148244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,148263
148263 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
148260 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
148287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,148295:CD,148299:JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148295 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,148299:CL,98850
148299 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,148301:CD,148305:CD,148309:CD,148313:CD,148317:CD,148325:CD,148330:CD,148351:CD,148355:CD,148360:CD,148370:CD,148374:CD,148379:CD,148386:CD,148393:CD,148398:CD,148448:CD,148477:CD,148481:CD,148486:JM,106760:JM,106763:JM,106766:CD,148583:CD,148609:CD,148635:CD,148639:CD,148643:CD,148647:CD,148678:CD,148683:CD,148813:CD,148817:CD,148899:CD,148901:CD,148902:CD,148903:JM,148361:JM,148818:JM,148822:JM,148827:JM,148828:JM,148387:JM,148832:JM,148837:JM,148522:JM,148648:JM,148399:JM,148666
148301 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148305 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148309 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148313 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,148387:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148317 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,148902:JM,148647:JM,148837:JM,148666:JM,148827:JM,148360:JM,148398
148325 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,148387:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148330:JM,148522:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148330 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,148331:CD,148336:CD,148340
148331 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,104640
148336 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,148340:CL,104640
148340 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,148341
148341 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
148351 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148355 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,148355:JM,148387:JM,148643:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148360:JM,148648:JM,148361:JM,148393:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148360 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,148361:CD,148366:JM,148355:JM,148387:JM,148643:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148360:JM,148648:JM,148393:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148361 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,148355:JM,148387:JM,148643:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148360:JM,148648:JM,148361:JM,148393:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148366 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,148902:JM,148647:JM,148837:JM,148666:JM,148827:JM,148398
148370 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148374 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,148387:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148379 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148383 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,148386
148386 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
148387 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
148390 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,148393:JM,148398
148393 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,148393:JM,148398:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148361:JM,148399:JM,148822:JM,148666:JM,148827
148398 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,148405:CD,148428:CD,148432
148399 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
148402 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,148405
148405 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,148412:CD,148419
148412 :: CALL :: call :: V :: v59.addGroup(v60)::CL,102983
148419 :: CALL :: call :: V :: v62.trimToSize()::CL,106949
148428 :: CALL :: call :: V :: v64.addModel(v65)::CL,102236
148432 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,148436
148439 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
148436 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
148442 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
148445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,148448
148448 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,148899:CD,148449:JM,102805:JM,102793:JM,102812:JM,102798:CD,148459:CD,148469
148449 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,148453
148453 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
148459 :: CALL :: call :: V :: v72.setChainID(v9)::CL,102836
148463 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
148466 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
148469 :: CALL :: call :: Z :: v77 = v74.add(v75)::
148477 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,148481:JM,148486:CL,80865
148481 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,148387:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148486 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,148901:CD,148493:CD,148507:CD,148512:CD,148531:CD,148556:CD,148561:CD,148900
148493 :: CALL :: call :: V :: v85.addGroup(v86)::CL,102983
148507 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,148512:JM,148900:CL,145273
148512 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,148513:CD,148517:CD,148522:CD,148526:CD,148900
148513 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,148522:CL,80865
148517 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,148522:JM,148387:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148399:JM,148822:JM,148666:JM,148827
148522 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,148900:CD,148526
148526 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,148900:CL,145273
148531 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,148532:JM,102805:JM,102793:JM,102812:JM,102798:CD,148542
148532 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,148536
148536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
148542 :: CALL :: call :: V :: v104.setChainID(v9)::CL,102836
148547 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
148550 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,148561
148553 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,148561
148556 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,148561
148562 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
148561 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,148901:CD,148568
148565 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
148568 :: CALL :: call :: Z :: v113 = v110.add(v111)::
148583 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,148584:CD,148598:CD,148605:CF,148609
148580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,148583
148584 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148592:CL,160995
148592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
148598 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,62850
148605 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,63283:CL,62870
148610 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148618:CL,160995
148609 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,148610:CD,148624:CD,148631:JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148618 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
148624 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,62850
148631 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,63283:CL,62870
148635 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148639 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,148902
148643 :: CALL :: call :: I :: v136 = v131.length()::JM,148643:JM,148355:JM,148832:JM,148481:JM,148902:JM,148486:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148822:JM,148666:JM,148827
148647 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,148902:CD,148648:CD,148653:CD,148657:CD,148661:CD,148666:JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148360:JM,148393:JM,148361:JM,148398:JM,148822:JM,148827
148648 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,148643:JM,148355:JM,148832:JM,148481:JM,148902:JM,148486:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148822:JM,148666:JM,148827
148653 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,148902:JM,148837:JM,148666:JM,148827
148657 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,148666
148661 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,148902:JM,148666
148666 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,148902:CD,148667
148667 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,148902
148678 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,148683:CL,40573
148683 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,148690:CD,148697:CD,148700:CD,148714:CD,148721:CD,148726:CD,148730:CD,148735:CD,148903
148690 :: CALL :: call :: V :: v187.addGroup(v188)::CL,102983
148697 :: CALL :: call :: V :: v190.trimToSize()::CL,106949
148700 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,148708:CL,160995
148708 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
148714 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,63283:CL,62870
148721 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,62850
148726 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,148735
148730 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,148735
148735 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,148903:CD,148736:CD,148740:CD,148745
148736 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,148745
148740 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,148745
148745 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,148903:CD,148748:CD,148753:CD,148758:CD,148766:CD,148771:CD,148776:CD,148781:CD,148789:CD,148798:CD,148802
148748 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
148753 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
148758 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
148766 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
148771 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
148776 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
148781 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
148789 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,148903:CL,161205
148798 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,148802:CL,57420
148802 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,148903:CD,148806
148806 :: CALL :: call :: V :: v182.setChain(v185)::CL,107304
148813 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,148817:CL,92261
148818 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148817 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,148818:CD,148822:CD,148827:CD,148850:CD,148856:CD,148861:CD,148881:CD,148886:JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148305:JM,148309:JM,148379:JM,148635:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148822 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148822:JM,148666:JM,148827
148827 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,148828:CD,148832:CD,148837:JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148387:JM,148643:JM,148902:JM,148647:JM,148325:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148828 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,148355:JM,148481:JM,148486:JM,148360:JM,148361:JM,148301:JM,148370:JM,148818:JM,148305:JM,148822:JM,148309:JM,148379:JM,148635:JM,148827:JM,148828:JM,148387:JM,148643:JM,148832:JM,148902:JM,148647:JM,148325:JM,148837:JM,148522:JM,148330:JM,148648:JM,148393:JM,148398:JM,148399:JM,148666:JM,148351
148832 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,148643:JM,148355:JM,148832:JM,148481:JM,148486:JM,148902:JM,148647:JM,148837:JM,148325:JM,148522:JM,148330:JM,148648:JM,148360:JM,148393:JM,148361:JM,148398:JM,148822:JM,148666:JM,148827
148837 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,148850:CD,148856:CD,148861:CD,148881:CD,148886
148850 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
148856 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,161454
148862 :: CALL :: call :: V :: v198.addAtom(v220)::CL,63020
148861 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,148862:CD,148870
148870 :: CALL :: call :: V :: v221.addAtom(v220)::CL,63020
148881 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,148886:CL,62667
148886 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,148890
148890 :: CALL :: call :: V :: v230.addAtom(v220)::CL,63020
148899 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,148901
148902 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,148735:JM,148745
148903 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,148861
148900 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,148531:DD,148547
148901 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,148609
149122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,149138:CD,149142:CD,149147:CD,149151:CD,149156:CD,149236
149138 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,149142:CL,101962
149142 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
149147 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,149156:JM,149147:JM,149151
149151 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,149156:JM,149151
149156 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,149166:CD,149191:CD,149217
149166 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,107512
149191 :: CALL :: call :: V :: v14.setModDate(v48)::CL,108606
149217 :: CALL :: call :: V :: v14.setModDate(v24)::CL,108606
149236 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,101971
149281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,149289:CD,149293:CD,149305:CD,149309:CD,149318:CD,149325
149289 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,149293:CL,101962
149293 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558:CD,149301
149301 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,101971
149305 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,149309:JM,149325:CL,161668
149310 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,149325
149309 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,149325:CF,149310:CD,149314
149314 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,161677
149318 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
149325 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
149355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,149360:CD,149364:CD,149369:CD,149398:CD,149403:CD,149408:JM,149379:JM,149370:JM,149374
149360 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,149379:JM,149360:JM,149364:JM,149370:JM,149369:JM,149374
149364 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,149379:JM,149364:JM,149369:JM,149374
149370 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,149379:JM,149360:JM,149364:JM,149370:JM,149369:JM,149374
149369 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,149370:CD,149374:CD,149379:JM,149360:JM,149364:JM,149369
149374 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,149379:JM,149364:JM,149369:JM,149374
149379 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,149424
149398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
149403 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,149379:JM,149364:JM,149369:JM,149374
149408 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
149424 :: CALL :: call :: V :: v36.setResolution(v23)::CL,108509
149456 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,149472
149472 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,107574
149497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,149555:CD,149560:CD,149565:CD,149570:CD,149575:CD,149580:CD,149584:CD,149588:CD,149628:CD,149634:CD,149639:CD,149643:CD,149648:CD,149653:CD,149662
149555 :: CALL :: call :: V :: v28.setA(v30)::CL,107627
149560 :: CALL :: call :: V :: v28.setB(v32)::CL,107638
149565 :: CALL :: call :: V :: v28.setC(v34)::CL,107649
149570 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,107660
149575 :: CALL :: call :: V :: v28.setBeta(v38)::CL,107680
149580 :: CALL :: call :: V :: v28.setGamma(v40)::CL,107700
149584 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,149588:CL,107720
149591 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,149591
149588 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,149591:CD,149612
149612 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,107755
149628 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,107755
149634 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
149639 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
149643 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
149648 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
149653 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
149662 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
149696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,149701:CD,149705:CD,149709
149701 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,149701
149705 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,149709:CL,107766
149709 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,149712:CD,149717:CD,149722:CD,149727:CD,149746:CD,149762:CD,149777
149712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
149717 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
149722 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
149727 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
149746 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,107845
149762 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,107856
149777 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,107845
149805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,149813
149810 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
149813 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
149828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,149833:CD,149975
149833 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,149949
149949 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
149975 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,160675
150008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,150026
150023 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
150026 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
150049 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,150054:CD,150062:CD,150070:CD,150078:CD,150086:CD,150094:CD,150099:CD,150151:CD,150155:CD,150159:CD,150163:CD,150167:CD,150168:CD,150172:CD,150181:CD,150182:CD,150186:CD,150195:CD,150199:CD,150204:CD,150208:CD,150213:CD,150221:CD,150225:CD,150233:CD,150237:CD,150241:CD,150245:CD,150249:CD,150253:CD,150254:CD,150258:CD,150267:CD,150268:CD,150272:CD,150281:CD,150285:CD,150290:CD,150294:CD,150299:CD,150307:CD,150311:CD,150319:CD,150326:CD,150330:CD,150335:CD,150342:CD,150353:CD,150362:JM,150107
150054 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
150062 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,108646
150070 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,108769
150078 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,108780
150086 :: CALL :: call :: V :: v4.setChainId(v16)::CL,108657
150094 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,150099:CL,161697
150099 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,150102:CD,150107:CD,150111:CD,150116:CD,150121:CD,150126:CD,150139:CD,150147
150102 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
150107 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150111 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150116 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,150167:JM,150181:JM,150267:JM,150253
150121 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
150126 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
150139 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,108758
150147 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,108780
150151 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150155 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150159 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150163 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150167 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,150167:JM,150181:JM,150267:JM,150253:JM,150199:JM,150272:JM,150182:JM,150151:JM,150245:JM,150186:JM,150254:JM,150159:JM,150258:JM,150107:JM,150168:JM,150268:JM,150172:JM,150237
150168 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150172 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150182 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150181 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,150167:JM,150181:JM,150267:JM,150253:JM,150208:JM,150272:JM,150182:JM,150151:JM,150245:JM,150186:JM,150254:JM,150159:JM,150258:JM,150107:JM,150168:JM,150268:JM,150172:JM,150237
150186 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150195 :: CALL :: call :: C :: v67 = v53.charValue()::JM,150199
150199 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,150200
150200 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
150204 :: CALL :: call :: C :: v74 = v60.charValue()::JM,150208
150208 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,150209
150209 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
150213 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,108714
150221 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,108725
150225 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,108736
150233 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,108747
150237 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150241 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150245 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150249 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150254 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150253 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,150167:JM,150181:JM,150267:JM,150253:JM,150285:JM,150272:JM,150182:JM,150151:JM,150245:JM,150186:JM,150254:JM,150159:JM,150258:JM,150107:JM,150168:JM,150268:JM,150172:JM,150237
150258 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150267 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,150167:JM,150181:JM,150267:JM,150253:JM,150294:JM,150272:JM,150182:JM,150151:JM,150245:JM,150186:JM,150254:JM,150159:JM,150258:JM,150107:JM,150168:JM,150268:JM,150172:JM,150237
150268 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,150272:JM,150182:JM,150151:JM,150245:JM,150181:JM,150186:JM,150254:JM,150159:JM,150253:JM,150258:JM,150167:JM,150107:JM,150267:JM,150168:JM,150268:JM,150172:JM,150237
150272 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,150258:JM,150272:JM,150167:JM,150181:JM,150186:JM,150267:JM,150172:JM,150253
150281 :: CALL :: call :: C :: v107 = v94.charValue()::JM,150285
150286 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
150285 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,150286
150290 :: CALL :: call :: C :: v112 = v100.charValue()::JM,150294
150294 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,150295
150295 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
150299 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,108791
150307 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,108802
150311 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,108813
150319 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,108824
150326 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,150330:JM,150362:CL,101992
150330 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,150362:CF,150331
150331 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,150362
150335 :: CALL :: call :: Z :: v131 = v129.add(v4)::
150342 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,161743
150353 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,102001
150362 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
150451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,150459
150459 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
150456 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
150480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,150488
150485 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
150488 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
150503 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,150511:CD,150515:JM,150552:JM,150543
150511 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,150515:CL,98850
150515 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,150520:CD,150524:CD,150529:CD,150553:CD,150557:CD,150558:CD,150567:CD,150575:CD,150579:CD,150588:CD,150593:CD,150594:CD,150595:CD,150596
150520 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,150593:JM,150524:CL,102216
150524 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,150593:CF,150525
150525 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,150593
150529 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,150538:JM,150557
150534 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,150538:JM,150557
150538 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,150594
150539 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,150552:CL,121092
150543 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,150552:JM,150543
150547 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,150552
150552 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,150594
150553 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,150538:JM,150557
150558 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,150595:CF,150559:JM,160129:CD,150596
150559 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,150595
150557 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,150534:CD,150538:CD,150539:CD,150543:CD,150547:CD,150552:CD,150553:CD,150594:JM,150557:CF,150558
150567 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,160152
150575 :: CALL :: call :: V :: v32.setDescription(v38)::CL,121157
150579 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,150580
150580 :: CALL :: call :: Z :: v41 = v14.add(v32)::
150588 :: CALL :: call :: V :: v42.setSites(v14)::CL,102225
150594 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,150538:JM,150557:DD,150558:DD,150594:DD,150595
150595 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,150596
150593 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,150538:JM,150557
150596 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,150579
150634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,150641:CD,150646:CD,150651:CD,150659:CD,150663:CD,150670:CD,150675:CD,150679:CD,150684:CD,150692:CD,150697:CD,150861:JM,150771:JM,150705:JM,150763:JM,150767
150641 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
150646 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
150651 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
150659 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,150659:JM,150771:JM,150705:JM,150763:JM,150767
150663 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,150771:JM,150767
150670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
150675 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
150679 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
150684 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
150692 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,150697:CL,159056
150697 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,150700:CD,150705:CD,150709:CD,150714:CD,150719:CD,150732:CD,150741:CD,150745:CD,150840:CD,150844:CD,150852:CD,150856
150700 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
150705 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,150659:JM,150771:JM,150705:JM,150763:JM,150767
150709 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,150771:JM,150767
150714 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,150771
150719 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
150732 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,145318
150741 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,150755:JM,150745:CL,120434
150746 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,104491
150745 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,150746:CD,150750:CD,150754:CD,150763:CD,150767:CD,150771:JM,150659:JM,150705
150750 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,150754:CL,120667
150754 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,150755:CD,150756:CD,150763:CD,150767:CD,150771:JM,150659:JM,150705
150755 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,150756
150758 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,63314
150756 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,150758
150763 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,150659:JM,150771:JM,150705:JM,150763:JM,150767
150767 :: CALL :: call :: I :: v51 = v49.length()::JM,150771:JM,150767
150771 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,150776:CD,150780:CD,150806:CD,150810
150776 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,150780:CL,104640
150780 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,150785:CD,150793:CD,150797:CD,150806:CD,150810
150785 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,63314
150793 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,104640
150797 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,63303
150806 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,150810:CL,104655
150810 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,62774:JM,62790:JM,62792:JM,62794:JM,62767
150840 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,127708
150844 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,62850
150852 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,63283:CL,62870
150856 :: CALL :: call :: V :: v38.addGroup(v84)::CL,102983
150861 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
150939 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,150947
150947 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
150944 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
150956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,150964
150961 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
150964 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
150985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,150993
150990 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
150993 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
151008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,151016
151013 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
151016 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
151031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,151043:CD,151048:JM,151050:JM,151054
151043 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,151048
151050 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,151050:JM,151054
151048 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,151050:CD,151054
151054 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,151066:CD,151084
151066 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
151084 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
151104 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,151116:CD,151121:JM,151123:JM,151127
151116 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,151121
151123 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,151123:JM,151127
151121 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,151123:CD,151127
151127 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,151139:CD,151157
151139 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
151157 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
151201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,151209:CD,151213:CD,151222:CD,151230
151209 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,151213:CL,101962
151213 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,84533:JM,84565:JM,84525:JM,84541:JM,84558
151222 :: CALL :: call :: V :: v10.setDescription(v12)::CL,102077
151230 :: CALL :: call :: V :: v10.setClassification(v15)::CL,107501
151245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,151257:CD,151261:CD,151262:CD,151301:CD,151308:CD,151313:CD,151317:CD,151322:CD,151327:CD,151331:CD,151336:CD,151344:CD,151348:CD,151349:CD,151380:CD,151384:CD,151417
151257 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,151261:CL,108500
151262 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,151270:CD,151274:CD,151282
151261 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,151262
151270 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,151274:CL,108500
151274 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,151274
151282 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
151301 :: CALL :: call :: V :: v6.setResolution(v29)::CL,108509
151308 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
151313 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,151380:JM,151384
151317 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,151384
151322 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
151327 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
151331 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
151336 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
151344 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,151348:CL,161765
151348 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,151349
151349 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,151357:CD,151361:CD,151369:JM,151380:JM,151384
151357 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,151361:CL,161765
151361 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,151361
151369 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
151380 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,151380:JM,151384
151384 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,151400
151400 :: CALL :: call :: V :: v6.setRfree(v73)::CL,112572
151417 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
151455 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,151460:CD,151464:CD,151485:CD,151495:JM,151489
151460 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,151489:JM,151460:JM,151464:JM,151485
151467 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
151464 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,151467:CD,151472:CD,151477:JM,151489:JM,151460:JM,151464:JM,151485
151472 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
151477 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
151485 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,151489:JM,151460:JM,151464:JM,151485
151489 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
151495 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,161774
151546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,151551:CD,151555:CD,151559:CD,151563:CD,151567:CD,151590:CD,151591:CD,151595:CD,151600:CD,151612:CD,151616:CD,151659:CD,151660
151551 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,151563:JM,151551:JM,151567
151555 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
151559 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
151563 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,151563:JM,151567
151567 :: EXPR :: assign :: I :: v13 = v12.length::DD,151590
151569 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,151573:DD,151575
151575 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,151577:CD,151658
151573 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,151575:CD,151658
151578 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
151577 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,151578:CD,151584:CD,151658
151584 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
151590 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,151591:CD,151573:CD,151589:CD,151658:CD,151659:CD,151660
151591 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
151589 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,151660:CF,151659
151595 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
151600 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
151612 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,151616:CL,107534
151616 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,151626:CD,151617:CD,151621:CD,151627:CD,151635:CD,151640:CD,151644:CD,151649:CD,151653
151617 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
151621 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,107543
151626 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
151627 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
151635 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
151640 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
151644 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
151649 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
151653 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,107543
151658 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,151659:CF,151589
151659 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,151660:DD,151577:DD,151658
151660 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,151589:DD,151590
151724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,151735
151735 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153988
151762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,151770
151767 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
151770 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
151791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,151799
151799 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
151796 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
151808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,151816
151813 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
151816 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
151837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,151848
151848 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153988
151873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,151884
151884 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,153988
151933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,151941
151938 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
151941 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
152203 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,152204:CD,152208:CD,152214
152204 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
152208 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,152214:CL,102394
152214 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,152204
152220 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,152221:CD,152224:CD,152228:CD,152253:CD,152257
152221 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,131686:JM,132807
152224 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,152257:CL,62566
152228 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,152257
152233 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,152257
152238 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,152244:CL,62643:CL,62651:CL,62659
152242 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,152244
152244 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,152245:CD,152249:CD,152251:CD,152252
152245 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,152251:CL,62643:CL,62651:CL,62659
152251 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,152252:CD,152253:CD,152257
152249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,152251
152252 :: NORM :: compound :: Z :: return #(0)::DD,152221
152253 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,152257
152258 :: NORM :: compound :: Z :: return #(1)::DD,152221
152257 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,152233:CD,152238:CD,152242:CD,152244:CD,152258:JM,152257
152271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,152272:CD,152277:CD,152488:CD,152492:CD,152493:CD,152497:CD,152505:CD,152506:JM,152287:JM,152412
152272 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,156915:JM,156919:JM,156920:JM,156924
152277 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,152497
152282 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,152287:JM,152492
152287 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,152288
152291 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,152498:JM,152299:CL,63294
152288 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,152289
152289 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,152291:CD,152295:CD,152299:CD,152300:CD,152304:CD,152308:CD,152314:CD,152319:CD,152321:CD,152325:CD,152498:CD,152503:CD,152504
152295 :: CALL :: call :: C :: v18 = v16.charValue()::JM,152498:JM,152299
152299 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,152498
152300 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
152304 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
152308 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
152314 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
152319 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,152503
152321 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,152325:CL,156863
152327 :: CALL :: call :: I :: v35 = v12.size()::JM,152331:CL,118132
152325 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,152327:CD,152331:CD,152503:CD,152504
152331 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,152332:CD,152337:CD,152349:CD,152353
152332 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,152337:CL,118145
152337 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,152343:CD,152347:CD,152503:CD,152504
152343 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,152347:CL,162084
152347 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,152349:CD,152353:CD,152503:CD,152504
152349 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,152353:CL,104491
152353 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,152356:CD,152366:CD,152368:CD,152372:CD,152377:CD,152503:CD,152504
152356 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,77058:CL,77346:CL,77248
152366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,152372:JM,152377
152368 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,152372:JM,152377:CL,162097
152372 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,152372:JM,152377
152377 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,152384:CD,152389:CD,152402:CD,152406:CD,152411:CD,152426:CD,152430:CD,152470:CD,152474:CD,152499:CD,152500:CD,152501:CD,152502:CD,152503:CD,152504
152384 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,152389
152389 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,152396:CD,152401:CD,152402:CD,152406:CD,152411:CD,152426:CD,152430:CD,152470:CD,152474:CD,152499:CD,152500:CD,152501:CD,152502:CD,152503:CD,152504
152396 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,152401
152402 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,152499:JM,152411:CL,104551
152401 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,152402:CD,152406:CD,152411:CD,152426:CD,152430:CD,152470:CD,152474:CD,152478:CD,152499:CD,152500:CD,152501:CD,152502:CD,152503:CD,152504
152406 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,152499:JM,152411
152411 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,152499:CD,152412
152412 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,152419:CD,152424:CD,152499
152419 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,152424
152426 :: CALL :: call :: I :: v79 = v77.length()::JM,152430
152424 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,152499
152430 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,152433
152433 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,77058:CL,77346:CL,77248
152444 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
152448 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
152452 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
152458 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
152463 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
152470 :: CALL :: call :: I :: v86 = v77.length()::JM,152474
152468 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,152500:CF,152469
152469 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,152502:CF,152500
152474 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,152444:CD,152448:CD,152452:CD,152458:CD,152463:CD,152468:CD,152469:CD,152470:CD,152500:CD,152501:CD,152502
152478 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,77058:CL,77346:CL,77248
152487 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,152506:CF,152505
152488 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,152287:JM,152492
152492 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,152282:CD,152287:CD,152288:CD,152289:CD,152487:CD,152488:CD,152503:CD,152504:CD,152505:CD,152506:JM,152492:JM,152497
152493 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,152497
152498 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
152499 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,152430:JM,152474
152497 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,152272
152502 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,152469:DD,152474
152503 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,152504:DD,152505
152500 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,152501:DD,152468:DD,152503
152501 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,152502:DD,152501:DD,152504
152506 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,152287:DD,152492:DD,152501:DD,152504
152504 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,152487
152505 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,152506:DD,152319:DD,152500:DD,152503
152602 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,152603:CF,152613:CD,152614
152603 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,131806:JM,131812
152614 :: NORM :: compound :: Z :: return #(1)::CF,152603
152613 :: NORM :: compound :: Z :: return #(0)::CF,152603
152618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,152619:CF,152636:CD,152623:CD,152628
152619 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,132408:JM,131823:JM,131827:JM,132409
152623 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,152628
152628 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,152619
152636 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,152619
152643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,152644:CD,152649:CD,152652:CD,152658:CD,152659:CD,152667:CD,152671
152644 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,132410
152649 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,152659:JM,152667:JM,152671
152652 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152659:JM,152667:JM,152671
152658 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152659:JM,152667:JM,152671:JM,152649
152659 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152659:JM,152667:JM,152649:JM,152671
152667 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152659:JM,152667:JM,152671
152671 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152644
152683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,152684:CF,152694:CD,152695
152684 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,131843:JM,131849
152694 :: NORM :: compound :: Z :: return #(0)::CF,152684
152695 :: NORM :: compound :: Z :: return #(1)::CF,152684
152699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,152700:CF,152717:CD,152704:CD,152709
152700 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,131860:JM,132408:JM,131864:JM,132409
152704 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,152709
152709 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,152700
152717 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,152700
152724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,152725:CD,152730:CD,152733:CD,152739:CD,152740:CD,152748:CD,152752
152725 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,132410
152730 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,152752:JM,152740:JM,152748
152733 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152752:JM,152740:JM,152748
152739 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152752:JM,152740:JM,152748:JM,152730
152740 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152752:JM,152740:JM,152730:JM,152748
152748 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152752:JM,152740:JM,152748
152752 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152725
152764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,152765:CF,152775:CD,152776
152765 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,131880:JM,131886
152775 :: NORM :: compound :: Z :: return #(0)::CF,152765
152776 :: NORM :: compound :: Z :: return #(1)::CF,152765
152780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,152781:CF,152798:CD,152785:CD,152790
152781 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,132408:JM,131897:JM,132409:JM,131901
152785 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,152790
152790 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,152781
152798 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,152781
152806 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,132410
152805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,152806:CD,152811:CD,152814:CD,152820:CD,152821:CD,152829:CD,152833
152811 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,152833:JM,152821:JM,152829
152814 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,152833:JM,152821:JM,152829
152820 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,152833:JM,152821:JM,152829:JM,152811
152821 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,152833:JM,152821:JM,152811:JM,152829
152829 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,152833:JM,152821:JM,152829
152833 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,152806
152846 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131935
152845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152850:JM,152855:CF,152846:CD,152858:CD,152862:CD,152863:CD,152865:CD,152866
152850 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,152850:JM,152855:JM,152858:JM,152862
152855 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,152864:CD,152856
152858 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152850:JM,152855:JM,152858:JM,152862
152856 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,152864
152857 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,152866:CF,152865
152862 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,152850:CD,152855:CD,152857:CD,152858:CD,152864:CD,152865:CD,152866:JM,152862:CF,152863
152863 :: NORM :: compound :: I :: return v12::CF,152846
152866 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,152850:JM,152855:JM,152858:DD,152857:DD,152862
152864 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,152865:CF,152857
152865 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,152866:DD,152856:DD,152863:DD,152864
152882 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131943
152881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152886:JM,152891:CF,152882:CD,152904:CD,152908:CD,152909:CD,152911:CD,152912
152886 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,152886:JM,152891:JM,152904:JM,152908
152891 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,152896:JM,152901:JM,152892
152892 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,152896:JM,152901:JM,152892
152896 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,152896:JM,152901
152902 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,152910
152903 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,152912:CF,152911
152901 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,152910:CD,152902
152904 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152886:JM,152891:JM,152904:JM,152908
152910 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,152911:CF,152903
152911 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,152912:DD,152902:DD,152909:DD,152910
152908 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,152886:CD,152891:CD,152892:CD,152896:CD,152901:CD,152903:CD,152904:CD,152910:CD,152911:CD,152912:JM,152908:CF,152909
152909 :: NORM :: compound :: I :: return v18::CF,152882
152912 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,152886:JM,152891:JM,152904:DD,152903:DD,152908
152928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,152933:JM,152938:CF,152929:CD,152951:CD,152955:CD,152956:CD,152958:CD,152959
152929 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,131946
152933 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,152951:JM,152933:JM,152938:JM,152955
152938 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,152948:JM,152939:JM,152943
152939 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,152948:JM,152939:JM,152943
152943 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,152948:JM,152943
152950 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,152959:CF,152958
152951 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,152951:JM,152933:JM,152938:JM,152955
152948 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,152957:CD,152949
152949 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,152957
152955 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,152933:CD,152938:CD,152939:CD,152943:CD,152948:CD,152950:CD,152951:CD,152957:CD,152958:CD,152959:JM,152955:CF,152956
152958 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,152959:DD,152949:DD,152956:DD,152957
152959 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,152951:JM,152933:JM,152938:DD,152950:DD,152955
152956 :: NORM :: compound :: I :: return v18::CF,152929
152957 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,152958:CF,152950
152999 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,153004:CD,153008:CD,153012
153004 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,153014:JM,153012:CL,162106
153008 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,153012:CL,162106
153014 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,153017:CD,153025:CD,153182
153012 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,153014:CD,153030:CD,153113:CD,153117:CD,153182
153017 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,153182:CL,67199
153025 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,153182:CL,67199
153030 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,153117
153035 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,153117
153044 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,142087
153049 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,153062:CL,62861
153053 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,153062:CL,62861
153057 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,153062
153062 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,153113:CD,153117
153113 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,153117
153117 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,153035:CD,153044:CD,153049:CD,153053:CD,153057:CD,153062:JM,153117
153182 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,153117
153407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,153408:CD,153411:CD,153415:CD,153420:CD,153424
153411 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,153828
153408 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,137130:JM,137138
153415 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
153420 :: CALL :: call :: Z :: v8 = v5.exists()::JM,153424
153424 :: NORM :: compound :: Z :: return v8::DD,153408
153431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,153438
153435 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,153438
153438 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,153440:CD,153441:CD,153448:CD,153454:CD,153458
153440 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
153441 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
153448 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
153454 :: CALL :: call :: Z :: v13 = v9.exists()::JM,153458
153458 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,153459:CD,153468:CD,153473:CD,153474
153459 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,162123
153468 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,153473
153474 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,153475
153475 :: CALL :: call :: V :: p0 $this .split()::CL,162396
153473 :: EXPR :: assign :: I :: v18 = v17.length::DD,153474
153520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,153521:CD,153524:CD,153528:CD,153533:CD,153538:CD,153542:CD,153559:CD,153560:CD,153565:CD,153570:CD,153575:CD,153581:CD,153586:CD,153591:CD,153599:CD,153604:CD,153608:CD,153623:CD,153624:CD,153642:CD,153646:CD,153647:CD,153650:CD,153656:CD,153660:CD,153673:CD,153707:CD,153710:CD,153715:CD,153719:CD,153724:CD,153729:CD,153734:CD,153739:CD,153743:CD,153748:CD,153756:CD,153760:CD,153765:CD,153770
153521 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,137270
153524 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,153828
153528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
153533 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
153538 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
153542 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
153559 :: NORM :: compound :: Z :: return #(0)::DD,153521
153560 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
153565 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
153570 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
153575 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
153581 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
153586 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
153591 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
153599 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,153770
153604 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,162624
153608 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,153660
153623 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,153646:DD,153650:CF,153624
153624 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
153638 :: CALL :: call :: V :: v47.println(v60)::
153642 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,153646
153646 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,153638:CD,153642
153647 :: CALL :: call :: V :: v47.flush()::
153650 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,153651:CF,153660
153651 :: CALL :: call :: V :: v53.close()::
153656 :: CALL :: call :: V :: v53.close()::
153660 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,153661
153661 :: CALL :: call :: V :: v47.close()::
153673 :: CALL :: call :: V :: v47.close()::
153707 :: NORM :: compound :: Z :: return #(1)::DD,153521
153710 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
153715 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
153719 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
153724 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
153729 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
153734 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
153739 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
153743 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
153748 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
153756 :: CALL :: call :: Z :: v113 = v14.delete()::
153760 :: NORM :: compound :: Z :: return #(0)::DD,153521
153765 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
153770 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
153828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,153829:CD,153832:CD,153834:CD,153839:CD,153854:CD,153856:CD,153857:CD,153864:CD,153868:CD,153901:CD,153902:CD,153903:CD,153911:CD,153916:CD,153925:CD,153929
153829 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
153834 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,153839
153832 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,153839
153839 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,153840:CD,153845:CD,153850
153840 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
153845 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,153839
153850 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
153854 :: CALL :: call :: V :: initPath()::CL,42276
153856 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
153857 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
153864 :: CALL :: call :: Z :: v21 = v16.exists()::JM,153868
153871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
153868 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,153901:CD,153871:CD,153876:CD,153881:CD,153889
153876 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
153881 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
153889 :: CALL :: call :: Z :: v32 = v16.mkdir()::
153902 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
153903 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
153901 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,153929:CF,153902
153911 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
153916 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
153925 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,153929
153929 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,153829
153968 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,153972
153972 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
153988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,153989:CD,153996:CD,154001:CD,154002
153989 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,137204:JM,154152
153996 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,154001
154002 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,153989
154001 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,154002
154022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,154023:CD,154027:CD,154031:CD,154039:CD,154044:CD,154049:CD,154054:CD,154058:CD,154065:CD,154070:CD,154075:CD,154080:CD,154088:CD,154181:CD,154184:CD,154188
154023 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,137264
154027 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
154031 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
154039 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
154044 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
154049 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
154054 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
154058 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,154088
154065 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
154070 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
154075 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
154080 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
154088 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,154096:CD,154099:CD,154107:JM,100908:JM,162723:JM,153968:JM,162730:JM,162716:CD,154116:CD,154120:CD,154121:CD,154135:CD,154143:CD,154152
154099 :: CALL :: call :: V :: v55.setId(v7)::CL,162820
154096 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,154107:CL,162781
154107 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,154023
154116 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,100957
154120 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,154121
154121 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
154135 :: CALL :: call :: V :: v34.parse(v39)::CL,100974
154143 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,154152:CL,153988
154152 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,154023
154181 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,154188:CL,162781
154184 :: CALL :: call :: V :: v73.setId(v7)::CL,162820
154188 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,154023
156863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,156864:CD,156867:CD,156872:CD,156877
156867 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,156877
156864 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,141005:JM,152325:JM,166177
156869 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,156877
156872 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,156877
156877 :: NORM :: compound :: Z :: return v6::CF,156864
156880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,156881:CD,156887
156881 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,141072:JM,141333:JM,141019:JM,141032:JM,146352
156887 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,156881
156884 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,156887
156890 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,141501
156889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,156890:CD,156895:CD,156899:CD,156903:CD,156909:CD,156915:CD,156919:CD,157052:CD,157057:CD,157062:CD,157070:CD,157096:CD,157101:CD,157106:CD,157114
156895 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
156899 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
156903 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,156915:JM,156919:CL,152271
156909 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,156920:JM,156924:CL,152271
156915 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,156915:JM,156919
156919 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,156920:CD,156924:CD,156931
156920 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,156920:JM,156924
156924 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,156931:CD,156934:CD,156939:CD,156943:CD,156948:CD,156953:CD,156958:CD,156968:CD,156973:CD,156977:CD,156982:CD,156987:CD,156992:CD,157000:CD,157005:CD,157010
156931 :: NORM :: compound :: Z :: return #(1)::DD,156890
156934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
156939 :: CALL :: call :: I :: v24 = v11.length()::JM,156915:JM,156919
156943 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
156948 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
156953 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,156915:JM,156919
156958 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
156968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
156973 :: CALL :: call :: I :: v40 = v13.length()::JM,156920:JM,156924
156977 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
156982 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
156987 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,156920:JM,156924
156992 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
157000 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,157010:JM,157026:JM,157027:JM,157200:JM,157201:JM,157013:JM,157034:JM,157039:JM,157021:CL,164239
157005 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,157202:JM,157026:JM,157011:JM,157078:JM,157083:JM,157017:JM,157071:JM,157021:CL,164239
157010 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,157011:CD,157012
157011 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,157012:CD,157013:CD,157017:CD,157021:CD,157026:CD,157115:CD,157118:CD,157124:CD,157125:CD,157133:CD,157137:CD,157201:CD,157202:JM,157027:JM,157200:JM,157034:JM,157039
157012 :: NORM :: compound :: Z :: return #(1)::DD,156890
157013 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,157026:JM,157027:JM,157200:JM,157201:JM,157013:JM,157034:JM,157039:JM,157021
157017 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,157202:JM,157026:JM,157078:JM,157083:JM,157017:JM,157071:JM,157021
157021 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,157026:JM,157034:JM,157039:JM,157021:JM,157078:JM,157083
157026 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,157201:CD,157027:CD,157031:CD,157034:CD,157039:CD,157071:CD,157075:CD,157078:CD,157083:CD,157200:CD,157202:JM,157026:JM,157013:JM,157021
157027 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,157026:JM,157027:JM,157200:JM,157201:JM,157013:JM,157034:JM,157039:JM,157021
157031 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,157034:JM,157039
157034 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,157026:JM,157034:JM,157039:JM,157021
157039 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,157200:CF,157040
157040 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,157200
157052 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
157057 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,156915:JM,156919
157062 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
157070 :: NORM :: compound :: Z :: return #(1)::DD,156890
157071 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,157202:JM,157026:JM,157078:JM,157083:JM,157017:JM,157071:JM,157021
157075 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,157078:JM,157083
157078 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,157026:JM,157078:JM,157083:JM,157021
157083 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,157201:CF,157084:CD,157202
157084 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,157202
157096 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
157101 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,156920:JM,156924
157106 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
157114 :: NORM :: compound :: Z :: return #(1)::DD,156890
157115 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,157170:JM,157137:JM,157125:JM,157133
157118 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,157170:JM,157137:JM,157125:JM,157133
157124 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,157170:JM,157137:JM,157125:JM,157133
157125 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,157170:JM,157137:JM,157125:JM,157133
157133 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,157170:JM,157137:JM,157125:JM,157133
157137 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,157162:CD,157165:CD,157170:CD,157175:CD,157180:CD,157188:CD,157197
157162 :: NORM :: compound :: Z :: return #(1)::DD,156890
157165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
157170 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,157170
157175 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
157180 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
157188 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,157197:CL,164313
157197 :: NORM :: compound :: Z :: return v126::DD,156890
157202 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,157115:JM,157170:JM,157137:JM,157125:JM,157133
157200 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,157202:JM,157026:JM,157078:JM,157083:JM,157017:JM,157071:JM,157021:DD,157201
157201 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,157202:JM,157170:JM,157137:JM,157125:JM,157133
157286 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,157287:CD,157295:CD,157299:CD,157302:CD,157685:CD,157695:CD,157696:JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157325:JM,157331:JM,157332:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157287 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,141729
157295 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157299 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,157302:JM,157332:JM,157338:JM,157337:JM,157343
157302 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,157302:JM,157332:JM,157338:JM,157337:JM,157343
157308 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157314 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157320 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157326 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157325 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157331 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,157314:JM,157331:JM,157345:JM,157350:JM,157332:JM,157338:JM,157337:JM,157343:JM,157325
157332 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,157314:JM,157331:JM,157345:JM,157350:JM,157332:JM,157338:JM,157337:JM,157343:JM,157325
157338 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,157331:JM,157345:JM,157350:JM,157332:JM,157338:JM,157337:JM,157343:JM,157325
157337 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,157694:CD,157338:CD,157343:CD,157684:CD,157685:CD,157695:CD,157696:JM,157331:JM,157345:JM,157350:JM,157332:JM,157337:JM,157325
157343 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,157345:CD,157350:CD,157684:CD,157685:CD,157694:CD,157695:CD,157696:JM,157314:JM,157331:JM,157332:JM,157338:JM,157337:JM,157343:JM,157325
157345 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,157314:JM,157331:JM,157345:JM,157350:JM,157332:JM,157338:JM,157337:JM,157343:JM,157325
157350 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,157694:CD,157351:CD,157355:CD,157360:CD,157361:CD,157365:CD,157370:CD,157371:CD,157375:CD,157380:CD,157381:CD,157385:CD,157390:CD,157391:CD,157684:CD,157685:CD,157695:CD,157696
157351 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
157355 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,157360
157360 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,157370
157361 :: CALL :: call :: I :: v40 = v38.intValue()::JM,157370
157365 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157370 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,157391
157371 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
157375 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,157380
157380 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,157390
157381 :: CALL :: call :: I :: v50 = v48.intValue()::JM,157390
157385 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157390 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,157392:JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308:CF,157391
157391 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,157392:CD,157395:CD,157400:CD,157405:CD,157410:CD,157415:CD,157420:CD,157425:CD,157430:CD,157435:CD,157440:CD,157445:CD,157450:CD,157455:CD,157684:CD,157685:CD,157694:CD,157695:CD,157696
157395 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
157392 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,157395:CD,157400:CD,157405:CD,157410:CD,157415:CD,157420:CD,157425:CD,157430:CD,157435:CD,157440:CD,157445:CD,157450:CD,157455:CD,157464:CD,157468:CD,157472:CD,157684:CD,157685:CD,157694:CD,157695:CD,157696
157400 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
157405 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
157410 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
157415 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
157420 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
157425 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
157430 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
157435 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
157440 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
157445 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
157450 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
157455 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
157464 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,157472:JM,157526:CL,62861
157468 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,157473:JM,157526:CL,62861
157472 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,157473:CD,157512
157473 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,157512:CD,157513:CD,157517:CD,157521:CD,157526:CD,157664:CD,157668:CD,157673:CD,157674:CD,157678:CD,157684:CD,157685:CD,157694:CD,157695:CD,157696
157512 :: NORM :: compound :: Z :: return #(1)::DD,157287
157513 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,157526
157517 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,157526
157521 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,157526
157526 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,157527:CD,157532:CD,157537:CD,157542:CD,157547:CD,157552:CD,157557:CD,157562:CD,157567:CD,157572:CD,157577:CD,157582:CD,157587:CD,157591:CD,157595:CD,157597:CD,157602
157527 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
157532 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
157537 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
157542 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
157547 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
157552 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
157557 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
157562 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
157567 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
157572 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
157577 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
157582 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
157587 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
157591 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,157602:JM,157597:CL,62643:CL,62651:CL,62659
157595 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,157602:JM,157597
157597 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,157602:JM,157597
157602 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,157603:CD,157607:CD,157609:CD,157614:CD,157642:CD,157643:CD,157651:CD,157656
157603 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,157609:JM,157614:CL,62643:CL,62651:CL,62659
157607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,157609:JM,157614
157609 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,157609:JM,157614
157614 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,157617:CD,157618:CD,157626:CD,157631:CD,157642:CD,157643:CD,157651:CD,157656
157618 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
157617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
157626 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
157631 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
157642 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
157643 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
157651 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
157656 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
157664 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
157668 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,157673
157674 :: CALL :: call :: I :: v166 = v164.intValue()::
157673 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
157678 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157295:JM,157325:JM,157331:JM,157332:JM,157685:JM,157370:JM,157338:JM,157337:JM,157343:JM,157308
157684 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,157696:CF,157695
157685 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,157308:CD,157314:CD,157320:CD,157325:CD,157326:CD,157331:CD,157332:CD,157337:CD,157693:CD,157694:JM,157345:JM,157350:JM,157390:JM,157295:JM,157685:JM,157370:JM,157338:JM,157343
157694 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,157695:CF,157684
157695 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,157696:DD,157693:DD,157694
157693 :: NORM :: compound :: Z :: return v171::DD,157287
157696 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,157314:JM,157345:JM,157350:JM,157320:JM,157326:JM,157390:JM,157325:JM,157331:JM,157332:JM,157338:JM,157337:JM,157343:JM,157308:JM,157370:DD,157684:DD,157685
157866 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,157874
157874 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,164860
157884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,157892
157892 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,164892
157902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,157909:CD,157913:CD,157926:CD,157954:CD,157958:CD,157959:CD,157975:CD,157976
157909 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,157975:JM,157913:CL,142746
157914 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,157975
157913 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,157975:CF,157914:CD,157922
157922 :: CALL :: call :: V :: v10.setBonds(v7)::CL,164924
157926 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,157958
157931 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,157958
157939 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,157952:JM,157947:CL,164935
157947 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,157952:JM,157947
157944 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,157952:JM,157947
157954 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,157958
157952 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,157954:CD,157958:CD,157976
157958 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,157976:CD,157931:CD,157939:CD,157947:CD,157952:JM,157958
157959 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,157963:CD,157970
157963 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,164974
157970 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,164974
157975 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,157958
157976 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,157959
159008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,159009:CD,159013:CD,159026:CD,159030:CD,159032:JM,159022:JM,159023
159009 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,145485
159013 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,159030:JM,159022:JM,159023
159018 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,159030:JM,159022
159022 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,159023
159023 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,159024:CD,159025:CD,159026:CD,159030:CD,159032
159026 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,159030:JM,159022
159024 :: NORM :: compound :: I :: return v14::DD,159009
159025 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,159032
159030 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,159018:CD,159022:CD,159023:CD,159031:JM,159030
159031 :: NORM :: compound :: I :: return #(-1)::DD,159009
159032 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,159030:JM,159022:DD,159024:DD,159025
159056 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,159057:CD,159064:CD,159084:CD,159088:JM,159082
159057 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,145986:JM,145987:JM,145824:JM,145761:JM,145766:JM,145991:JM,145896:JM,146056:JM,145897:JM,146057:JM,145996:JM,145805:JM,145901:JM,146061:JM,145906:JM,146066:JM,145809:JM,145814:JM,145815:JM,145819:JM,145756:JM,145757:JM,150697
159061 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,159088:JM,159073
159064 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,159088:JM,159073
159069 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,159088:JM,159073
159074 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,159074:JM,159082
159073 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,159074:JM,159082:DD,159083
159078 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,159082
159082 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,159083:CD,159084:CD,159088:JM,159073
159083 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,159057
159084 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,159088:JM,159073
159088 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,159069:CD,159073:CD,159074:CD,159078:CD,159082:CD,159101:JM,159088
159101 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,159057
159116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,159117:CD,159124:CD,159140:CD,159144:JM,159138
159117 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,145755:JM,145895:JM,145985:JM,146047:JM,146620
159121 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,159144:JM,159133
159124 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,159144:JM,159133
159129 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,159144:JM,159133
159134 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,159138:CL,124824
159133 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,159139
159138 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,159139:CD,159140:CD,159144:JM,159133
159139 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,159117
159140 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,159144:JM,159133
159144 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,159129:CD,159133:CD,159134:CD,159138:CD,159145:JM,159144
159145 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,159117
159156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,109745:JM,109738:CD,159166:CD,159174:CD,159182:CD,159190:CD,159198:CD,159206:CD,159214:CD,159222
159166 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124921
159174 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,140625
159182 :: CALL :: call :: V :: v5.setCell(v12)::CL,140658
159190 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,140581
159198 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,140559
159206 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,140570
159214 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,140724
159222 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,140713
159246 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,159254
159251 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
159254 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
159272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,109745:JM,109738:CD,159282:CD,159290:CD,159298:CD,159306:CD,159314:CD,159322
159282 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124921
159290 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,140625
159298 :: CALL :: call :: V :: v5.setCell(v12)::CL,140658
159306 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,140581
159314 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,140559
159322 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,140570
159342 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,109745:JM,109738:CD,159352:CD,159360:CD,159368:CD,159376
159352 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,124921
159360 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,140581
159368 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,140559
159376 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,140570
159392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,159393:CD,159397:CD,159401:CD,159403:CD,159408
159393 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,146352
159397 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,159408:JM,159403:CL,62643:CL,62651:CL,62659
159403 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,159408:JM,159403
159401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,159408:JM,159403
159410 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,159410:JM,159423
159411 :: CALL :: call :: J :: v32 = v29.getId()::JM,159410:CL,165374
159408 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,159410:CD,159411:CD,159419:CD,159423:CD,159424:CD,159428:CD,159430:CD,159435
159419 :: CALL :: call :: I :: v35 = v30.intValue()::JM,159423
159423 :: NORM :: compound :: I :: return v35::DD,159393
159424 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,159430:JM,159435:CL,62643:CL,62651:CL,62659
159430 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,159430:JM,159435
159428 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,159430:JM,159435
159435 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,159437:CD,159438:CD,159446:CD,159450:CD,159452:CD,159453:CD,159461:CD,159465
159438 :: CALL :: call :: J :: v25 = v22.getId()::JM,159437:CL,165374
159437 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,159437:JM,159450
159446 :: CALL :: call :: I :: v28 = v23.intValue()::JM,159450
159450 :: NORM :: compound :: I :: return v28::DD,159393
159452 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,159452:JM,159465
159453 :: CALL :: call :: J :: v18 = v15.getId()::JM,159452:CL,165374
159461 :: CALL :: call :: I :: v21 = v16.intValue()::JM,159465
159465 :: NORM :: compound :: I :: return v21::DD,159393
159484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,159489:CD,159493:CD,159902:CD,159906:CD,159910:JM,159502
159489 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
159493 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,159906:JM,159502
159498 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,159906:JM,159502
159502 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,159602:JM,159593:JM,159597:JM,159603:JM,159921:JM,159616:JM,159607:JM,159611:JM,159922:JM,159617:JM,159621:JM,159625:JM,159630:JM,159635:JM,159640:JM,159631:JM,159891:JM,159896:JM,159887
159509 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,159514
159514 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,159593:CD,159597:CD,159602:CD,159607:CD,159611:CD,159616:CD,159621:CD,159625:CD,159630:CD,159921:CD,159922
159593 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,159602:JM,159593:JM,159597
159597 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,159602:JM,159597
159602 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,159921:CD,159603
159603 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,159603:JM,159921
159607 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,159616:JM,159607:JM,159611
159611 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,159616:JM,159611
159616 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,159922:CD,159617
159617 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,159922:JM,159617
159621 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,159621:JM,159625:JM,159630
159625 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,159625:JM,159630
159630 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,159631:CD,159635:CD,159640
159631 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,159635:JM,159640:JM,159631
159635 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,159635:JM,159640
159640 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,159674:CD,159678:CD,159699:CD,159703:CD,159724:CD,159768:CD,159812
159674 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,159674:JM,159678
159678 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,159680:CD,159685:CD,159690:CD,159695
159680 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
159685 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
159690 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
159695 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
159699 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,159699:JM,159703
159703 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,159705:CD,159710:CD,159715:CD,159720
159705 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
159710 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
159715 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
159720 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
159724 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,159812:CL,125031
159768 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,159846:CL,125031
159812 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,159846
159846 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,159880:JM,142307:JM,142304:JM,142298:JM,142301:CD,159887:CD,159891:CD,159896
159880 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
159887 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,159891:JM,159896:JM,159887
159891 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,159891:JM,159896
159896 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,159897:JM,159906:JM,159502
159897 :: CALL :: call :: Z :: v146 = v5.add(v112)::
159902 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,159906:JM,159502
159906 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,159498:CD,159502:CD,159509:CD,159514:CD,159902:JM,159906
159910 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,102205
159922 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,159621:JM,159625:JM,159630:JM,159699:JM,159703
159921 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,159674:JM,159678:JM,159616:JM,159607:JM,159611
160126 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
160129 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,160133
160133 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
160139 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
160136 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
160152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,160157
160157 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
160163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,160168
160168 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
160174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,160185
160185 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,160190
160190 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
160199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,160200:CD,160204:CD,160211:CD,160315:CD,160319:CD,160320:JM,160225:JM,160230
160200 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
160204 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,160320
160211 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,160319:JM,160220
160208 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,160319:JM,160220
160216 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,160319:JM,160220
160220 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,160225:JM,160230:JM,160221:JM,160258:JM,160314:JM,160249:JM,160253
160221 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,160225:JM,160230:JM,160221
160225 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,160225:JM,160230
160230 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,160238:CD,160245:CD,160249:CD,160253:CD,160258:CD,160262:CD,160310:CD,160314:JM,160319:JM,160220
160238 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,165406
160245 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,160309:CL,165454
160249 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,160258:JM,160314:JM,160249:JM,160253
160253 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,160258:JM,160314:JM,160253
160258 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,160258:JM,160314
160262 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,160314
160267 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,160314
160272 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,160309
160277 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,160309
160282 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,165463
160287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
160292 :: CALL :: call :: V :: v49.setChainId(v39)::CL,140363
160296 :: CALL :: call :: V :: v49.setId(v46)::CL,140352
160300 :: CALL :: call :: Z :: v54 = v4.add(v49)::
160305 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,160309
160310 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,160314
160309 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,160277:CD,160282:CD,160287:JM,165556:JM,165563:JM,165545:CD,160292:CD,160296:CD,160300:CD,160305:JM,160309:JM,160314
160314 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,160267:CD,160272:CD,160305:CD,160309:CD,160310:JM,160314:JM,160319:JM,160220
160315 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,160319:JM,160220
160319 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,160216:CD,160220:CD,160221:CD,160225:CD,160230:CD,160315:JM,160319:CF,160320
160320 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,160200
160366 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
160365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,160366:CD,160370:CD,160377:CD,160384:CD,160501:CD,160505:CD,160506:JM,160403:JM,160398
160370 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,160506
160377 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,160495:CL,165579
160381 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,160393:JM,160505
160384 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,160393:JM,160505
160389 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,160393:JM,160505
160394 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,160403:JM,160394:JM,160398
160393 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,160403:JM,160394:JM,160398:JM,160404:JM,160500:JM,160408:JM,160413
160398 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,160403:JM,160398
160403 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,160404:CD,160408:CD,160413:CD,160424:CD,160428:CD,160496:CD,160500:JM,160393:JM,160505
160404 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,160404:JM,160500:JM,160408:JM,160413
160408 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,160500:JM,160408:JM,160413
160413 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,160500:JM,160413
160424 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,165406
160428 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,160500
160433 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,160500
160438 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,160495
160443 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,160495
160453 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,165463
160463 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,165463
160468 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,165606
160473 :: CALL :: call :: V :: v59.setChainId(v39)::CL,140363
160477 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
160481 :: CALL :: call :: V :: v59.setId(v62)::CL,140352
160485 :: CALL :: call :: Z :: v65 = v4.add(v59)::
160490 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,160507
160491 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,160495
160495 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,160443:CD,160453:CD,160463:CD,160468:CD,160473:CD,160477:CD,160481:CD,160485:CD,160490:CD,160491:CD,160507:JM,160495:JM,160500
160496 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,160500
160500 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,160433:CD,160438:CD,160491:CD,160495:CD,160496:CD,160507:JM,160500:JM,160393:JM,160505
160501 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,160393:JM,160505
160506 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,160366
160507 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,160495:DD,160490
160505 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,160389:CD,160393:CD,160394:CD,160398:CD,160403:CD,160501:JM,160505:CF,160506
160572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,160573:CD,160579
160573 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,147797
160579 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,160573
160576 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,160579
160581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,160586
160586 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,165645
160675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,160680
160680 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
160995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,160996:CD,161003:CD,161007:JM,161041:JM,161046:JM,161061:JM,161066:JM,161103
160996 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,148592:JM,148618:JM,148708:JM,161393
161003 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,161040:JM,161025:JM,161017:JM,161033:JM,161007:CL,120434
161007 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,161008:CD,161012:CD,161016:CD,161041:CD,161046:CD,161125:CD,161126:JM,161061:JM,161066:JM,161103
161008 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,104491
161012 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,161016:CL,120667
161018 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,161020:CD,161025:CD,161026
161016 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,161017:CD,161018:CD,161040:CD,161041:CD,161046:CD,161125:CD,161126:JM,161061:JM,161066:JM,161103
161017 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,161018
161020 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,165753
161026 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,161028:CD,161033:CD,161034
161025 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,161026
161028 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,165753
161034 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,161036:CF,161040
161033 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,161034
161036 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,165753
161040 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,160996
161041 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,161041:JM,161046:JM,161061:JM,161066:JM,161103
161046 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,161047:CD,161051:CD,161089:CD,161093
161047 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,161051:CL,104655
161051 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,161052:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,161056:CD,161061:CD,161126
161052 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,161126
161056 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,165753
161062 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,161041:JM,161046:JM,161066:JM,161103
161061 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,161067:CD,161062:CD,161066:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,161071:CD,161126:JM,161041:JM,161046:JM,161103
161066 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,161076:CF,161067:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,161071:CD,161080:CD,161084:CD,161126
161067 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,161126
161071 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,165753
161076 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,161126
161080 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,63303
161084 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,165753
161089 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,161093:CL,104655
161094 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,161126
161093 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,161094:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,161098:CD,161103:CD,161126
161098 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,165753
161103 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,161117:CF,161104:JM,62774:JM,62790:JM,62792:JM,62794:JM,62767:CD,161108:CD,161112:CD,161121:CD,161126
161104 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,161126
161108 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,63303
161112 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,165753
161117 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,161126
161121 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,165753
161126 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,161125
161125 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,160996
161206 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,148903
161205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,161206:CD,161217:CD,161221:CD,161225:JM,161291:JM,161241:JM,161315:JM,161310
161217 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,161225:CL,120746
161221 :: CALL :: call :: I :: v12 = v10.size()::JM,161225
161226 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,161225
161225 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,161226:CD,161232:CD,161236:CD,161241:CD,161249:CD,161253:CD,161298:CD,161302:JM,161225
161232 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,161241:CL,77037
161236 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,161241:JM,161291
161242 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,161245
161241 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,161245:CD,161249:CD,161253:CD,161298:CD,161302
161245 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,161206
161249 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,161302:JM,161262:CL,63325
161253 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,161302:JM,161262
161258 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,161302:JM,161262
161262 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,161292
161263 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,161297:JM,161271:CL,120746
161267 :: CALL :: call :: I :: v34 = v32.size()::JM,161297:JM,161271
161271 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,161272:CD,161293:CD,161297:CD,161298:CD,161302:JM,161271:JM,161262
161272 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,161297:JM,161271
161277 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,161297
161282 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,161291:CL,77037
161286 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,161291:JM,161241
161291 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,161292:CD,161293:CD,161297
161292 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,161206
161293 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,161297
161298 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,161302:JM,161262
161297 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,161277:CD,161282:CD,161286:CD,161291:CD,161298:CD,161302:JM,161297:JM,161262
161302 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,161258:CD,161262:CD,161263:CD,161267:CD,161271:CD,161306:CD,161310:CD,161315:JM,161302
161306 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,161315:JM,161310:CL,62861
161310 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,161315:JM,161310
161315 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,161319:CD,161323:CD,161327:CD,161363:CD,161371:CD,161382:CD,161389:CD,161393
161319 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,161327:CL,120746
161323 :: CALL :: call :: I :: v65 = v63.size()::JM,161327
161327 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,161331:CD,161335:CD,161339:CD,161340:CD,161344:CD,161348:CD,161352:CD,161358:CD,161362
161331 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,161206
161328 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,161331
161335 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,161339:CL,55052:CL,55194:CL,55369
161339 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,161362:CF,161340
161340 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
161344 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,120755
161348 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,63325
161352 :: CALL :: call :: V :: v74.clear()::
161358 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,63212
161362 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,161206
161363 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,161393:CL,160995
161371 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,63283:CL,62870
161382 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,62850
161389 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,63212
161393 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,161206
161454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,76836:JM,76831:CD,161463:CD,161467:CD,161471:CD,161479:CD,161507:CD,161511:CD,161515:CD,161527:CD,161539:CD,161543:CD,161547:CD,161589:CD,161612:JM,161552:JM,161553:JM,161558:JM,161548
161463 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,161552:JM,161553:JM,161558:JM,161463:JM,161543:JM,161547:JM,161548
161467 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,161552:JM,161553:JM,161558:JM,161547:JM,161548
161471 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,77004
161479 :: CALL :: call :: V :: v4.setName(v12)::CL,77015
161507 :: CALL :: call :: V :: v4.setX(v17)::CL,76947
161511 :: CALL :: call :: V :: v4.setY(v21)::CL,76963
161515 :: CALL :: call :: V :: v4.setZ(v25)::CL,76979
161527 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,76887
161539 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,76907
161543 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,161552:JM,161553:JM,161558:JM,161463:JM,161543:JM,161547:JM,161548
161547 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,161548:CD,161552:CD,161579:JM,161553:JM,161558
161548 :: CALL :: call :: I :: v43 = v40.length()::JM,161552:JM,161553:JM,161558:JM,161548
161552 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,161553:CD,161558:CD,161579:JM,161552:JM,161548
161553 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,161552:JM,161553:JM,161558:JM,161548
161558 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,161569:CD,161579
161569 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,107422
161579 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,107422
161589 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,107457
161612 :: CALL :: call :: V :: v4.setElement(v72)::CL,77026
161668 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,161669:CD,161675
161669 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,149309:JM,149325
161675 :: NORM :: compound :: Ljava/util/List :: return v3::CF,161669
161672 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,161675
161677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,161682
161682 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
161698 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,150099
161697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,161698:CD,161705:CD,161726:CD,161730:JM,161719:JM,161724
161702 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,161714:JM,161730
161705 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,161714:JM,161730
161710 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,161714:JM,161730
161714 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,161715:JM,161719:JM,161724:DD,161725
161715 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,161715:JM,161719:JM,161724
161719 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,161719:JM,161724
161726 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,161714:JM,161730
161724 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,161725:CD,161726:CD,161730:JM,161714
161725 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,161698
161730 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,161710:CD,161714:CD,161715:CD,161719:CD,161724:CD,161731:JM,161730
161731 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,161698
161743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,161747:CD,161751:CD,161755
161747 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
161751 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,165764
161755 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
161766 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,151348:JM,151361
161765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,161766:CD,161772
161769 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,161772
161774 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,161786:CD,161792:CD,161796:CD,161816:CD,161820:JM,161826:JM,161797:JM,161802:JM,161821
161772 :: NORM :: compound :: F :: return v3::CF,161766
161786 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
161792 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,161826:JM,161792:JM,161796:JM,161797:JM,161802:JM,161816:JM,161820:JM,161821
161796 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,161797:CD,161802:JM,161826:JM,161820:JM,161821:JM,161792:JM,161796:JM,161816
161797 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,161826:JM,161797:JM,161802:JM,161820:JM,161821
161802 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,161810:JM,161826:JM,161792:JM,161796:JM,161797:JM,161802:JM,161816:JM,161820:JM,161821
161810 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
161816 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,161826:JM,161792:JM,161796:JM,161797:JM,161802:JM,161816:JM,161820:JM,161821
161820 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,161821:CD,161826:JM,161797:JM,161802
161821 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,161826:JM,161797:JM,161802:JM,161821
161826 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,161834
161834 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
162084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,162085:CD,162091:CD,162095
162085 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,152347
162091 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,162095:CL,166117
162095 :: NORM :: compound :: Z :: return v5::CF,162085
162098 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,152372:JM,152377
162097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,162098:CD,162104
162101 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,162104
162106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,162107:CD,162110:CD,162114:CD,162116
162107 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,153014:JM,153012
162104 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,162098
162110 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,162116:CL,166126
162114 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,162116
162118 :: NORM :: compound :: Z :: return #(0)::DD,162107
162116 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,162117:CD,162118
162117 :: NORM :: compound :: Z :: return #(1)::DD,162107
162123 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,162140:CD,162142:CD,162146:CD,162153:CD,162158:CD,162162:CD,162167:CD,162217:CD,162219:CD,162239:CD,162241:CD,162283
162142 :: CALL :: call :: Z :: v12 = v10.get()::JM,162146
162140 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,162146
162146 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,162182:CD,162184:CD,162188:CD,162203:CD,162224:CD,162246:CD,162251:CD,162256:CD,162257:CD,162258:CD,162263:CD,162268:CD,162276:CD,162278
162153 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
162158 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
162162 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
162167 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
162182 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,162184
162184 :: CALL :: call :: V :: v13.set(#(1))::JM,162184
162188 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,162256
162203 :: CALL :: call :: V :: downloadFile()::CL,166395
162219 :: CALL :: call :: V :: v31.set(#(0))::
162217 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
162224 :: CALL :: call :: V :: p0 $this .split()::CL,162396
162239 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
162241 :: CALL :: call :: V :: v40.set(#(0))::
162246 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,162256
162251 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
162258 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
162256 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,162257
162257 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
162263 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
162268 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
162278 :: CALL :: call :: V :: v59.set(#(0))::JM,162278
162276 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,162278
162283 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
162396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,162406:CD,162407:CD,162414:CD,162424:CD,162425:CD,162439:CD,162443:CD,162490:CD,162491:CD,162495:CD,162500:CD,162501:CD,162507:CD,162521:CD,162526:CD,162531:CD,162536:CD,162551:CD,162552:CD,162553:CD,162554
162406 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
162407 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
162414 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
162424 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,162552:DD,162501:CF,162425
162425 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
162439 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,162552
162443 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,162553
162448 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,162453
162454 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,162547:CD,162455:CD,162459:CD,162464
162455 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
162453 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,162548:CD,162454:CD,162465:CD,162470:CD,162547:CD,162549:CD,162550
162459 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,166499
162464 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,162547
162465 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,162550
162470 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,162549
162474 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
162479 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
162481 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
162486 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,162552
162490 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,162448:CD,162453:CD,162474:CD,162479:CD,162481:CD,162486:CD,162548:CD,162549:CD,162550:CD,162551:CD,162552:CD,162553:CD,162554
162491 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
162495 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,166499
162502 :: CALL :: call :: V :: v17.close()::
162500 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,162501
162501 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,162502
162507 :: CALL :: call :: V :: v17.close()::
162521 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
162526 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
162531 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
162536 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
162547 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,162548:JM,162550
162550 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,162554
162551 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,162552:DD,162464:DD,162500:DD,162547:DD,162548
162548 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,162549:DD,162551
162549 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,162550:DD,162553
162554 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,162454:DD,162550:CF,162490
162552 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,162553:JM,162453:JM,162550:DD,162490
162553 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,162554:DD,162549
162624 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,162628
162628 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,104691
162716 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,162720
162723 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,162727
162720 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
162727 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
162730 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,162734
162734 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
162782 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,154107:JM,154188
162781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,162782:CD,162784:JM,166742:JM,166756:JM,166749:CD,162788:CD,162792:CD,162798:CD,162804:CD,162808
162784 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,162808
162788 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,166771
162792 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,166786
162798 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,166797
162804 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,166808
162808 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,162782
162820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,162825
162825 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
164239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,164240:CD,164244:CD,164254:CD,164264:CD,164283:CD,164288:CD,164293:CD,164301:CD,164302:CD,164306
164240 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,157010:JM,157026:JM,157027:JM,157200:JM,157201:JM,157013:JM,157034:JM,157039:JM,157021:JM,157202:JM,157011:JM,157078:JM,157083:JM,157017:JM,157071
164244 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,164306
164254 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,164306
164264 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,164306
164283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
164288 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
164293 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
164302 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,164240
164301 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,164240
164306 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,164302
164314 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,157197
164313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,164314:CD,164322:CD,164326:CD,164329:CD,164728:CD,164736:CD,164738:CD,164739:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164397:JM,164365:JM,164370:JM,164372:JM,164341:JM,164347:JM,164377
164322 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164326 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,164370:JM,164359:JM,164329:JM,164364:JM,164365
164329 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,164370:JM,164359:JM,164329:JM,164364:JM,164365
164335 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164341 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164347 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164352 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164353 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164358 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,164370:JM,164352:JM,164358:JM,164359:JM,164372:JM,164341:JM,164377:JM,164364:JM,164365
164359 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,164370:JM,164352:JM,164358:JM,164359:JM,164372:JM,164341:JM,164377:JM,164364:JM,164365
164364 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,164737:CD,164365:CD,164370:JM,164352:JM,164358:JM,164359:JM,164372:JM,164377:JM,164364
164365 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,164370:JM,164352:JM,164358:JM,164359:JM,164372:JM,164377:JM,164364:JM,164365
164370 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,164372:CD,164377:CD,164737:JM,164370:JM,164352:JM,164358:JM,164359:JM,164341:JM,164364:JM,164365
164372 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,164370:JM,164352:JM,164358:JM,164359:JM,164372:JM,164341:JM,164377:JM,164364:JM,164365
164378 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
164377 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,164737:CD,164378:CD,164382:CD,164387:CD,164388:CD,164392:CD,164397:CD,164398:CD,164402:CD,164407:CD,164408:CD,164412:CD,164417:CD,164418
164382 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,164387
164387 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,164397
164388 :: CALL :: call :: I :: v40 = v38.intValue()::JM,164397
164392 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164397:JM,164365:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164398 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
164397 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,164418
164402 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,164407
164407 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,164417
164408 :: CALL :: call :: I :: v50 = v48.intValue()::JM,164417
164412 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164397:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164418 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,164419:CD,164422:CD,164427:CD,164432:CD,164437:CD,164442:CD,164447:CD,164452:CD,164457:CD,164462:CD,164467:CD,164472:CD,164477:CD,164482:CD,164737
164419 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,164422:CD,164427:CD,164432:CD,164437:CD,164442:CD,164447:CD,164452:CD,164457:CD,164462:CD,164467:CD,164472:CD,164477:CD,164482:CD,164491:CD,164495:CD,164499:CD,164557:CD,164562:CD,164707:CD,164711:CD,164716:CD,164717:CD,164721:CD,164737
164417 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,164419:JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164397:JM,164365:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377:CF,164418
164422 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
164427 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
164432 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
164437 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
164442 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
164447 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
164452 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
164457 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
164462 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
164467 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
164472 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
164477 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
164482 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
164491 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,164562:JM,164499:JM,164576:CL,62861
164495 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,164562:JM,164576:JM,164500:CL,62861
164499 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,164500:CD,164503:CD,164508:CD,164513:CD,164518:CD,164523:CD,164528:CD,164533:CD,164538:CD,164543
164503 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
164500 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,164503:CD,164508:CD,164513:CD,164518:CD,164523:CD,164528:CD,164533:CD,164538:CD,164543:JM,164562:JM,164576
164508 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
164513 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
164518 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
164523 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
164528 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
164533 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
164538 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
164543 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
164557 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,164562:JM,164576
164562 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,164563:CD,164567:CD,164571:CD,164576:JM,164562
164563 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,164562:JM,164576
164567 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,164562:JM,164576
164571 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,164576
164579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
164576 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,164579:CD,164583:CD,164588:CD,164593:CD,164598:CD,164603:CD,164608:CD,164613:CD,164618:CD,164623:CD,164628:CD,164633:CD,164638:CD,164646:CD,164650:CD,164652:CD,164657
164583 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
164588 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
164593 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
164598 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
164603 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
164608 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
164613 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
164618 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
164623 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
164628 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
164633 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
164638 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
164646 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,164657:JM,164652:CL,62643:CL,62651:CL,62659
164650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,164657:JM,164652
164652 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,164657:JM,164652
164658 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,164664:JM,164669:CL,62643:CL,62651:CL,62659
164657 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,164658:CD,164662:CD,164664:CD,164669:CD,164679:CD,164684:CD,164689:CD,164694:CD,164699
164662 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,164664:JM,164669
164664 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,164664:JM,164669
164669 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,164679:CD,164684:CD,164689:CD,164694:CD,164699
164679 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
164684 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
164689 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
164694 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
164699 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
164707 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
164711 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,164716
164716 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
164717 :: CALL :: call :: I :: v188 = v186.intValue()::
164721 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,164322:JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164397:JM,164365:JM,164370:JM,164372:JM,164341:JM,164347:JM,164728:JM,164377
164727 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,164739:CF,164738
164728 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,164335:CD,164341:CD,164347:CD,164352:CD,164353:CD,164358:CD,164359:CD,164364:CD,164727:CD,164737:CD,164738:CD,164739:JM,164322:JM,164417:JM,164365:JM,164397:JM,164370:JM,164372:JM,164728:JM,164377
164738 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,164739:DD,164736:DD,164737
164739 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,164352:JM,164353:JM,164417:JM,164358:JM,164359:JM,164335:JM,164364:JM,164365:JM,164370:JM,164372:JM,164341:JM,164347:JM,164377:JM,164397:DD,164727:DD,164728
164736 :: NORM :: compound :: Z :: return v193::DD,164314
164737 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,164738:CF,164727
164860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,164866:CD,164867:CD,164875:CD,164879
164866 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,164866
164867 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,164866:CL,124824
164875 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,124824
164879 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
164892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,164898:CD,164899:CD,164907:CD,164911
164898 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,164898
164899 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,164898:CL,124824
164907 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,124824
164911 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
164924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,164929
164929 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
164935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,164936:CD,164948:CD,164957
164936 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,157952:JM,157947
164948 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
164954 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,164957
164958 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,164961
164957 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,164961:CD,164965
164962 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,164965
164961 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,164936
164965 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,164936
164974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,164982:CD,164994
164979 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,164982
164982 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,164983
164983 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,164988
164991 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
164988 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
164994 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
165374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,165375:CD,165381
165375 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,159410:JM,159437:JM,159452
165378 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,165381
165381 :: NORM :: compound :: J :: return v3::CF,165375
165406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,165421:CD,165425
165421 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,165425:CL,167936
165426 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,167975
165425 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,165426:CD,165434
165434 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,167985
165454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,165455:CD,165461
165455 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,160309
165458 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,165461
165463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,165471:CD,165492:CD,165496:JM,165490
165461 :: NORM :: compound :: Ljava/util/List :: return v3::CF,165455
165471 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,165496
165468 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,165496
165476 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,165496
165481 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,165490:CL,168083
165485 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,165490
165490 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,165492:CD,165496
165492 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,165496
165499 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
165496 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,165476:CD,165481:CD,165485:CD,165490:CD,165499:CD,165504:CD,165509:JM,140225:JM,165496
165504 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,165490
165509 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
165545 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,165553
165553 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
165556 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,165560:CL,168083
165563 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,165567:CL,168092
165560 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
165567 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
165579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,165580:CD,165586
165583 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,165586
165580 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,160495
165586 :: NORM :: compound :: Ljava/util/List :: return v3::CF,165580
165606 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,165607:CD,165626:JM,140225:CD,165630:CD,165634
165607 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
165626 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,165634
165630 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,168101
165634 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,165607
165645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,165652
165649 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,165652
165652 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,165657:CD,165661
165657 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,168112
165661 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,165665
165665 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
165753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,165758
165758 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
165764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,165769:CD,165770:CD,165774:CD,165799:CD,165810:CD,165821:CD,165832:CD,165864:CD,165875:CD,165886:CD,165897:CD,165905:CD,165911:CD,165915:CD,165920
165770 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
165769 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,165770
165774 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
165799 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
165796 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
165807 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
165810 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
165818 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
165821 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
165829 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
165832 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
165861 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
165864 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
165875 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
165872 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
165883 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
165886 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
165894 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
165897 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
165905 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
165911 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
165915 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
165920 :: CALL :: call :: V :: v4.close()::
166118 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,162095
166117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,166118:CD,166124
166121 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,166124
166126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,166127:CD,166132:CD,166137:CD,166143:CD,166148:CD,166154:CD,166159:CD,166163:CD,166179:CD,166183:CD,166184:CD,166185:CD,166186:CD,166187:CD,166188:CD,166189:CD,166190:CD,166191:CD,166308
166127 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,162116
166124 :: NORM :: compound :: Z :: return v3::CF,166118
166132 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,166211:JM,166187:JM,166219:JM,166280:JM,166185:CL,67199
166137 :: CALL :: call :: I :: v7 = v5.size()::JM,166211:JM,166187:JM,166219:JM,166280:JM,166185
166143 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,166195:JM,166211:JM,166291:JM,166212:JM,166185:CL,67199
166148 :: CALL :: call :: I :: v12 = v10.size()::JM,166195:JM,166211:JM,166291:JM,166212:JM,166185
166154 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,166183:JM,166184:CL,67199
166159 :: CALL :: call :: I :: v17 = v15.size()::JM,166183:JM,166184
166163 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,166183:JM,166184
166168 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,166183
166173 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,166177:CL,156863
166178 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,166308
166179 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,166183
166177 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,166308:CD,166178
166183 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,166168:CD,166173:CD,166177:CD,166179:CD,166308:JM,166183:CF,166184
166186 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,166188:DD,166196:DD,166204:DD,166281:DD,166292:CF,166187
166187 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,166189:CF,166188
166184 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,166186:DD,166203:DD,166212:DD,166219:CF,166185
166185 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,166186
166190 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,166191
166191 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,166192:CD,166194:CD,166195:CD,166196:CD,166197:CD,166198:CD,166199
166188 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,166189
166189 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,166190
166194 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,166127
166195 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,166197:CF,166196
166192 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,166194
166198 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,166199
166199 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,166200:CD,166202:CD,166203:CD,166204:CD,166205:CD,166206:CD,166207
166196 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,166197
166197 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,166198
166202 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,166127
166203 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,166205:CF,166204
166200 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,166202
166206 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,166207
166207 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,166208:CD,166210:CD,166211:CD,166236:CD,166248:CD,166256:CD,166264:CD,166272:CD,166280:CD,166281:CD,166282:CD,166283:CD,166291:CD,166292:CD,166293:CD,166294:CD,166307:CD,166309
166204 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,166205
166205 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,166206
166210 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,166127
166211 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,166212:CD,166219
166208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,166210
166212 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,166213:CD,166216:CD,166309
166213 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,166309
166219 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,166220:CD,166223:CD,166309
166216 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,166309
166223 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,166309
166220 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,166309
166236 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,166236
166248 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,166280
166256 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,166291
166264 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
166272 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
166282 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,166283
166283 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,166283
166280 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,166282:CF,166281
166281 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,166282
166291 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,166293:CF,166292
166294 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,166294
166292 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,166293
166293 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,166294
166307 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,166127
166308 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,166183:DD,166178:DD,166184:DD,166308
166309 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,166307
166395 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,166398:CD,166400:CD,166402:CD,166405:CD,166408:CD,166416:CD,166421:CD,166426:CD,166435:CD,166440
166398 :: CALL :: call :: V :: initPath()::CL,168309
166402 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,168347
166400 :: CALL :: call :: V :: initServerName()::CL,168332
166405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
166408 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
166416 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
166421 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
166426 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
166435 :: NORM :: declaration :: Ljava/io/File :: v21 = new java.io.File::
166440 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,168405
166486 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
166485 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,166486:CD,166491:CD,166496
166491 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,166496:JM,166491
166499 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,166505:CD,166509:CD,166528:CD,166532:CD,166535:CD,166541
166496 :: NORM :: compound :: Z :: return v7::CF,166486
166505 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,153828
166509 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,166535
166528 :: CALL :: call :: V :: v8.print(v15)::
166535 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,166536
166532 :: CALL :: call :: V :: v8.flush()::
166536 :: CALL :: call :: V :: v8.close()::
166541 :: CALL :: call :: V :: v8.close()::
166742 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,166746
166746 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
166749 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,166753
166753 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
166756 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,166760
166760 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
166771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,166779:JM,166776
166779 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,168573
166776 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
166786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,166791
166791 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
166797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,166802
166802 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
166808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,166813
166813 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
167936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,167954:JM,167953:JM,167951:CF,167937:CD,167940:CD,167945:CD,167950
167937 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,165425
167940 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,167954:JM,167953:JM,167940:JM,167945:JM,167950:JM,167951
167945 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,167954:JM,167953:JM,167940:JM,167945:JM,167950:JM,167951
167950 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,167951:CD,167952
167951 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,167952:CD,167953:CD,167956:CD,167957
167954 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,167957
167952 :: NORM :: compound :: Z :: return #(1)::CF,167937
167953 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,167954:CD,167957
167956 :: NORM :: compound :: Z :: return v10::CF,167937
167957 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,167956
167975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,167979
167979 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,169443
167985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,167995:CD,167996:CD,168001:CD,168006:CD,168017:CD,168018:CD,168023:CD,168028:CD,168041:CD,168049:CD,168059
167995 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
167996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
168001 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
168006 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
168018 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
168017 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
168023 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
168028 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
168041 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,169443
168049 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,169443
168059 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,169597
168083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,168084:CD,168090
168087 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,168090
168084 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,165490:JM,165560
168090 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,168084
168092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,168093:CD,168099
168093 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,165567
168099 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,168093
168096 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,168099
168101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,168106
168106 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
168112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,168119
168119 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,168124:CD,168134
168116 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,168119
168124 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,168128
168128 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
168134 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,169691
168309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,168312:CD,168314
168314 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,47810:JM,47803
168312 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,168314
168335 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,168337
168332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,168335:CD,168337
168338 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,53492
168337 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,168338
168347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CE,168348:CD,168350:CD,168351:CD,168358:CD,168362:CD,168378:CD,168384:CD,168388
168350 :: NORM :: declaration :: Ljava/io/File :: v2 = new java.io.File::
168351 :: EXPR :: reference :: Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::
168348 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::
168358 :: CALL :: call :: Z :: v7 = v2.exists()::JM,168362
168362 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CF,168378:CD,168374
168374 :: CALL :: call :: Z :: v15 = v2.mkdir()::
168378 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::JM,168388
168384 :: CALL :: call :: Ljava/lang/String :: v20 = v16.toString()::JM,168388
168388 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,168348
168405 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,168412:CD,168417:CD,168422:CD,168427:CD,168432
168412 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
168417 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
168422 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
168427 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
168432 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
168573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,168577
168577 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,168581:CL,170048
168581 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
169443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,169447:CD,169453:CD,169459:CD,169464:CD,169469:CD,169470:CD,169475:CD,169480:CD,169489:CD,169493:CD,169524:CD,169528:JM,169502
169447 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,169459:JM,169447:JM,169464:JM,169528:JM,169502:JM,169453
169453 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,169459:JM,169464:JM,169528:JM,169502:JM,169453
169459 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,169459:JM,169464:JM,169528:JM,169502
169464 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,169464:JM,169528:JM,169502
169470 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
169469 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
169475 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,169459:JM,169447:JM,169464:JM,169528:JM,169502:JM,169453
169480 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,169459:JM,169464:JM,169528:JM,169502:JM,169453
169489 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
169493 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,169528:JM,169502
169498 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,169528:JM,169502
169502 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,169508
169503 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,169508
169508 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,169509:CD,169513:CD,169519
169509 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,173202
169513 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
169519 :: CALL :: call :: Z :: v44 = v26.add(v35)::
169524 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,169528:JM,169502
169528 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,169498:CD,169502:CD,169503:CD,169508:CD,169524:JM,169528
169597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,169601:CD,169605:CD,169612:CD,169616:CD,169624:CD,169663:CD,169667
169602 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,169616
169601 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
169605 :: CALL :: call :: I :: v6 = v4.size()::JM,169616
169609 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,169616
169612 :: CALL :: call :: I :: v9 = v7.size()::JM,169616
169616 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
169621 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,169667
169624 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,169667
169629 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,169667
169634 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,169662
169637 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,169662
169642 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,169662
169647 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
169653 :: CALL :: call :: Z :: v32 = v3.add(v29)::
169658 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,169662
169662 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,169642:CD,169647:JM,173307:JM,173310:CD,169653:CD,169658:JM,169662:JM,169667
169663 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,169667
169667 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,169629:CD,169637:CD,169658:CD,169662:CD,169663:JM,169667
169691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,169698
169695 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,169698
169698 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,169703:CD,169757
169703 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,169774
169757 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,173368
169774 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
170048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,170049:CD,170052:CD,170056:CD,170060:CD,170064
170049 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,168581
170052 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,170064:JM,170065:JM,170070:CL,139787
170056 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,170071:JM,170077:CL,104551
170060 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,170083:JM,170080:JM,170100:JM,170092:CL,139778
170064 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,170065:CD,170070:CD,170071
170065 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,170065:JM,170070
170070 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,170071:CD,170107
170071 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,170072:CD,170077:CD,170107
170072 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,170077
170078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,170080
170077 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,170078:CD,170080:CD,170107
170083 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,170084:CD,170089:CD,170090:CD,170092
170080 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,170081:CD,170083:CD,170084:CD,170089
170081 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,170083
170084 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,170089:CL,173592
170090 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,170092
170089 :: NORM :: compound :: Z :: return v25::DD,170049
170092 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,170093:CD,170097:CD,170098:CD,170100
170093 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,170097:CL,173631
170098 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,170100
170097 :: NORM :: compound :: Z :: return v23::DD,170049
170100 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,170101:CD,170105:CD,170106
170101 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,170105:CL,173650
170106 :: NORM :: compound :: Z :: return #(0)::DD,170049
170107 :: NORM :: compound :: Z :: return #(0)::DD,170049
170105 :: NORM :: compound :: Z :: return v21::DD,170049
173202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,173203:CD,173206:CD,173215:CD,173223:CD,173228:CD,173229:CD,173234:CD,173239:CD,173248:CD,173249:CD,173250:CD,173266:CD,173267:CD,173269
173203 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
173206 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
173211 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,173249:JM,173269
173215 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,173249:JM,173269
173219 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,173266:JM,173249
173223 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,173266:JM,173249
173228 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
173229 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
173234 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
173239 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
173250 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
173248 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,173267:CF,173249
173249 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,173250
173256 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
173260 :: CALL :: call :: Z :: v32 = v25.add(v30)::
173266 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,173256:CD,173260:CD,173265:CD,173269:CF,173267
173267 :: NORM :: compound :: Ljava/util/List :: return v25::DD,173203
173265 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,173269
173269 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,173265:DD,173266
173307 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
173310 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
173368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,173387
173387 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,173962
173592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,173593:CD,173597:CD,173599:CD,173603:CD,173608
173593 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,170089
173599 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,173608
173597 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,173608
173603 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,173608
173608 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,173609:CD,173614:CD,173618
173609 :: NORM :: compound :: Z :: return #(0)::DD,173593
173614 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,173618:CL,174091
173618 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,173619:CD,173620
173619 :: NORM :: compound :: Z :: return #(0)::DD,173593
173620 :: NORM :: compound :: Z :: return #(1)::DD,173593
173631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173632:CD,173635:CD,173639:CD,173643
173635 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173643:CL,126527
173632 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,170097
173639 :: CALL :: call :: I :: v6 = v4.length()::JM,173643
173643 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,173644:CD,173645
173644 :: NORM :: compound :: Z :: return #(1)::CF,173632
173645 :: NORM :: compound :: Z :: return #(0)::CF,173632
173650 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173651:CD,173654:CD,173658:CD,173660:CD,173664:CD,173669
173651 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,170105
173654 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173669:CL,126527
173658 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,173669
173660 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,173669
173664 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,173669
173670 :: NORM :: compound :: Z :: return #(0)::DD,173651
173669 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,173670:CD,173675:CD,173679
173675 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,173679:CL,174106
173679 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,173680:CD,173681
173680 :: NORM :: compound :: Z :: return #(0)::DD,173651
173681 :: NORM :: compound :: Z :: return #(1)::DD,173651
173962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,173969:CD,173970
173966 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,173969
173970 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,173981:CD,173985:CD,173989:CD,173996:CD,174000:CD,174001:CD,174005:CD,174012:CD,174016:CD,174017:CD,174021:CD,174028:CD,174032:CD,174033:CD,174037:CD,174041:CD,174045:CD,174049:CD,174053:CD,174057:CD,174058:CD,174059:CD,174063
173969 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,173970
173975 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,173981
173978 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,173981
173982 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,173985
173981 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,173985
173986 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,174000:JM,173989
173985 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,174063
173989 :: CALL :: call :: D :: v15 = cos(v13)::JM,174000:JM,173989
173993 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,174000:JM,173996
173996 :: CALL :: call :: D :: v18 = cos(v16)::JM,174000:JM,173996
174002 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,174016:JM,174005
174000 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,174001
174001 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,174017
174005 :: CALL :: call :: D :: v23 = cos(v21)::JM,174016:JM,174005
174009 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,174016:JM,174012
174012 :: CALL :: call :: D :: v26 = cos(v24)::JM,174016:JM,174012
174018 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,174032:JM,174021
174016 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,174017
174017 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,174033
174021 :: CALL :: call :: D :: v31 = cos(v29)::JM,174032:JM,174021
174025 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,174032:JM,174028
174028 :: CALL :: call :: D :: v34 = cos(v32)::JM,174032:JM,174028
174034 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,174037:JM,174041
174032 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,174033
174033 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,174058
174037 :: CALL :: call :: D :: v40 = cos(v38)::JM,174037:JM,174041
174042 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,174049:JM,174045
174041 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,174049
174045 :: CALL :: call :: D :: v44 = cos(v42)::JM,174049:JM,174045
174050 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,174053:JM,174057
174049 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,174057
174053 :: CALL :: call :: D :: v48 = cos(v46)::JM,174053:JM,174057
174058 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,174059:JM,174063
174059 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,174059:JM,174063
174057 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,174058
174063 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,174064
174064 :: EXPR :: modify :: D :: p0 $this .volume = v53::
174091 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,174092:CD,174097:CD,174102:CD,174103
174092 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,173618
174097 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,174102
174102 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,174103
174103 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,174092
174106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,174107:CD,174112:CD,174117:CD,174118
174107 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,173679
174112 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,174117
174118 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,174107
174117 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,174118
